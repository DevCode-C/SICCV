

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 30 03:42:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.20
    66                           ; Generated 12/02/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4550 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataBANK0
   101  003066                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _datos
   105  003066  00                 	db	0
   106  003067  FF                 	db	255
   107  003068  00                 	db	0
   108  003069  0000               	dw	0
   109  00306B  00                 	db	0
   110  00306C  00                 	db	0
   111  00306D  00                 	db	0
   112  00306E  00                 	db	0
   113  00306F  00                 	db	0
   114  003070  00                 	db	0
   115  003071  00                 	db	0
   116  003072  00                 	db	0
   117  003073  00                 	db	0
   118  003074  00                 	db	0
   119  003075  00                 	db	0
   120  003076  00                 	db	0
   121  003077  00                 	db	0
   122  003078  00                 	db	0
   123  003079  00                 	db	0
   124  00307A  00                 	db	0
   125  00307B  00                 	db	0
   126  00307C  42                 	db	low _appStateInitial
   127  00307D  30                 	db	high _appStateInitial
   128  0000                     _TMR3	set	4018
   129  0000                     _ADRES	set	4035
   130  0000                     _INTCONbits	set	4082
   131  0000                     _RCONbits	set	4048
   132  0000                     _PIE2bits	set	4000
   133  0000                     _IPR2bits	set	4002
   134  0000                     _PIR2bits	set	4001
   135  0000                     _T3CONbits	set	4017
   136  0000                     _PIR1bits	set	3998
   137  0000                     _PR2	set	4043
   138  0000                     _TMR2	set	4044
   139  0000                     _TRISBbits	set	3987
   140  0000                     _T2CONbits	set	4042
   141  0000                     _LATDbits	set	3980
   142  0000                     _TRISDbits	set	3989
   143  0000                     _PORTBbits	set	3969
   144  0000                     _PORTB	set	3969
   145  0000                     _LATBbits	set	3978
   146  0000                     _INTCON2bits	set	4081
   147  0000                     _TRISB	set	3987
   148  0000                     _ADCON0bits	set	4034
   149  0000                     _ADCON2bits	set	4032
   150  0000                     _ADCON1bits	set	4033
   151  0000                     _TMR3IF	set	32009
   152  0000                     _TMR3IE	set	32001
   153  0000                     _GO_nDONE	set	32273
   154                           
   155                           	psect	smallconst
   156  000800                     __psmallconst:
   157                           	callstack 0
   158  000800  00                 	db	0
   159  000801                     STR_1:
   160  000801  54                 	db	84	;'T'
   161  000802  3A                 	db	58	;':'
   162  000803  25                 	db	37
   163  000804  30                 	db	48	;'0'
   164  000805  32                 	db	50	;'2'
   165  000806  64                 	db	100	;'d'
   166  000807  2E                 	db	46
   167  000808  25                 	db	37
   168  000809  30                 	db	48	;'0'
   169  00080A  32                 	db	50	;'2'
   170  00080B  64                 	db	100	;'d'
   171  00080C  20                 	db	32
   172  00080D  43                 	db	67	;'C'
   173  00080E  00                 	db	0
   174  00080F                     STR_3:
   175  00080F  42                 	db	66	;'B'
   176  000810  69                 	db	105	;'i'
   177  000811  65                 	db	101	;'e'
   178  000812  6E                 	db	110	;'n'
   179  000813  76                 	db	118	;'v'
   180  000814  65                 	db	101	;'e'
   181  000815  6E                 	db	110	;'n'
   182  000816  69                 	db	105	;'i'
   183  000817  64                 	db	100	;'d'
   184  000818  6F                 	db	111	;'o'
   185  000819  73                 	db	115	;'s'
   186  00081A  00                 	db	0
   187  00081B                     STR_2:
   188  00081B  42                 	db	66	;'B'
   189  00081C  61                 	db	97	;'a'
   190  00081D  74                 	db	116	;'t'
   191  00081E  3A                 	db	58	;':'
   192  00081F  25                 	db	37
   193  000820  30                 	db	48	;'0'
   194  000821  32                 	db	50	;'2'
   195  000822  64                 	db	100	;'d'
   196  000823  00                 	db	0
   197  000824                     STR_4:
   198  000824  53                 	db	83	;'S'
   199  000825  49                 	db	73	;'I'
   200  000826  43                 	db	67	;'C'
   201  000827  43                 	db	67	;'C'
   202  000828  56                 	db	86	;'V'
   203  000829  00                 	db	0
   204  00082A                     STR_5:
   205  00082A  23                 	db	35
   206  00082B  3A                 	db	58	;':'
   207  00082C  25                 	db	37
   208  00082D  64                 	db	100	;'d'
   209  00082E  00                 	db	0
   210  00082F                     STR_6:
   211  00082F  25                 	db	37
   212  000830  63                 	db	99	;'c'
   213  000831  00                 	db	0
   214  000832  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219  002EFE                     __pcinit:
   220                           	callstack 0
   221  002EFE                     start_initialization:
   222                           	callstack 0
   223  002EFE                     __initialization:
   224                           	callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK0 (24 bytes)
   227                           ; load TBLPTR registers with __pidataBANK0
   228  002EFE  0E66               	movlw	low __pidataBANK0
   229  002F00  6EF6               	movwf	tblptrl,c
   230  002F02  0E30               	movlw	high __pidataBANK0
   231  002F04  6EF7               	movwf	tblptrh,c
   232  002F06  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   233  002F08  6EF8               	movwf	tblptru,c
   234  002F0A  EE00  F0B1         	lfsr	0,__pdataBANK0
   235  002F0E  EE10 F018          	lfsr	1,24
   236  002F12                     copy_data0:
   237  002F12  0009               	tblrd		*+
   238  002F14  CFF5 FFEE          	movff	tablat,postinc0
   239  002F18  50E5               	movf	postdec1,w,c
   240  002F1A  50E1               	movf	fsr1l,w,c
   241  002F1C  E1FA               	bnz	copy_data0
   242                           
   243                           ; Clear objects allocated to BANK0 (44 bytes)
   244  002F1E  EE00  F060         	lfsr	0,__pbssBANK0
   245  002F22  0E2C               	movlw	44
   246  002F24                     clear_0:
   247  002F24  6AEE               	clrf	postinc0,c
   248  002F26  06E8               	decf	wreg,f,c
   249  002F28  E1FD               	bnz	clear_0
   250                           
   251                           ; Clear objects allocated to COMRAM (2 bytes)
   252  002F2A  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   253  002F2C  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   254  002F2E                     end_of_initialization:
   255                           	callstack 0
   256  002F2E                     __end_of__initialization:
   257                           	callstack 0
   258  002F2E  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   259  002F30  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   260  002F32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   261  002F34  6EF8               	movwf	tblptru,c
   262  002F36  0100               	movlb	0
   263  002F38  EF08  F016         	goto	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMRAM
   266  00005A                     __pbssCOMRAM:
   267                           	callstack 0
   268  00005A                     _flags:
   269                           	callstack 0
   270  00005A                     	ds	2
   271                           
   272                           	psect	bssBANK0
   273  000060                     __pbssBANK0:
   274                           	callstack 0
   275  000060                     	ds	6
   276  000066                     _nout:
   277                           	callstack 0
   278  000066                     	ds	2
   279  000068                     _width:
   280                           	callstack 0
   281  000068                     	ds	2
   282  00006A                     _prec:
   283                           	callstack 0
   284  00006A                     	ds	2
   285  00006C                     _dbuf:
   286                           	callstack 0
   287  00006C                     	ds	32
   288                           
   289                           	psect	dataBANK0
   290  0000B1                     __pdataBANK0:
   291                           	callstack 0
   292  0000B1                     _datos:
   293                           	callstack 0
   294  0000B1                     	ds	24
   295                           
   296                           	psect	cstackBANK0
   297  00008C                     __pcstackBANK0:
   298                           	callstack 0
   299  00008C                     ?_vfprintf:
   300                           	callstack 0
   301  00008C                     vfprintf@fp:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x0
   305  00008C                     	ds	2
   306  00008E                     vfprintf@fmt:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x2
   310  00008E                     	ds	2
   311  000090                     vfprintf@ap:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x4
   315  000090                     	ds	2
   316  000092                     vfprintf@cfmt:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x6
   320  000092                     	ds	2
   321  000094                     ?_sprintf:
   322                           	callstack 0
   323  000094                     sprintf@s:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x8
   327  000094                     	ds	2
   328  000096                     sprintf@fmt:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0xA
   332  000096                     	ds	8
   333  00009E                     sprintf@ap:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x12
   337  00009E                     	ds	2
   338  0000A0                     sprintf@f:
   339                           	callstack 0
   340                           
   341                           ; 6 bytes @ 0x14
   342  0000A0                     	ds	6
   343  0000A6                     ??_appGetElements:
   344  0000A6                     appADC@data:
   345                           	callstack 0
   346  0000A6                     appBat@data:
   347                           	callstack 0
   348  0000A6                     appElemts@elements:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x1A
   352  0000A6                     	ds	2
   353  0000A8                     ??_appBat:
   354  0000A8                     ??_appElemts:
   355  0000A8                     appADC@lm35val:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x1C
   359  0000A8                     	ds	1
   360  0000A9                     appElemts@dataout:
   361                           	callstack 0
   362                           
   363                           ; 6 bytes @ 0x1D
   364  0000A9                     	ds	1
   365  0000AA                     _appBat$1959:
   366                           	callstack 0
   367                           
   368                           ; 4 bytes @ 0x1E
   369  0000AA                     	ds	5
   370  0000AF                     ??_main:
   371                           
   372                           ; 1 bytes @ 0x23
   373  0000AF                     	ds	2
   374                           
   375                           	psect	cstackCOMRAM
   376  000001                     __pcstackCOMRAM:
   377                           	callstack 0
   378  000001                     ??_isrL:
   379  000001                     
   380                           ; 1 bytes @ 0x0
   381  000001                     	ds	3
   382  000004                     ??_Lcd_Cmd:
   383  000004                     ??_Lcd_Chr_CP:
   384  000004                     ??_adcInit:
   385  000004                     ?_strlen:
   386                           	callstack 0
   387  000004                     ?_isdigit:
   388                           	callstack 0
   389  000004                     ?_isspace:
   390                           	callstack 0
   391  000004                     ?_adcGetValue:
   392                           	callstack 0
   393  000004                     ?___wmul:
   394                           	callstack 0
   395  000004                     ?___aodiv:
   396                           	callstack 0
   397  000004                     ?___aomod:
   398                           	callstack 0
   399  000004                     teclado@valor:
   400                           	callstack 0
   401  000004                     ___wmul@multiplier:
   402                           	callstack 0
   403  000004                     memset@dest:
   404                           	callstack 0
   405  000004                     isdigit@c:
   406                           	callstack 0
   407  000004                     isspace@c:
   408                           	callstack 0
   409  000004                     fputc@c:
   410                           	callstack 0
   411  000004                     strlen@s:
   412                           	callstack 0
   413  000004                     ___aodiv@dividend:
   414                           	callstack 0
   415  000004                     ___aomod@dividend:
   416                           	callstack 0
   417                           
   418                           ; 8 bytes @ 0x3
   419  000004                     	ds	1
   420  000005                     adcInit@ADC_PINs:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x4
   424  000005                     	ds	1
   425  000006                     ??_isdigit:
   426  000006                     ??_isspace:
   427  000006                     ??_adcGetValue:
   428  000006                     Lcd_Chr_CP@data:
   429                           	callstack 0
   430  000006                     Lcd_Cmd@data:
   431                           	callstack 0
   432  000006                     ___wmul@multiplicand:
   433                           	callstack 0
   434  000006                     memset@c:
   435                           	callstack 0
   436  000006                     fputc@fp:
   437                           	callstack 0
   438  000006                     strlen@a:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x5
   442  000006                     	ds	1
   443  000007                     ??_Lcd_Init:
   444  000007                     adcGetValue@PinADC:
   445                           	callstack 0
   446  000007                     Lcd_Out@x:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x6
   450  000007                     	ds	1
   451  000008                     ??_fputc:
   452  000008                     ?___xxtofl:
   453                           	callstack 0
   454  000008                     Lcd_Init@i:
   455                           	callstack 0
   456  000008                     Lcd_Out@buffer:
   457                           	callstack 0
   458  000008                     ___wmul@product:
   459                           	callstack 0
   460  000008                     memset@n:
   461                           	callstack 0
   462  000008                     ___xxtofl@val:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0x7
   466  000008                     	ds	2
   467  00000A                     ??_memset:
   468  00000A                     ??_Lcd_Out:
   469  00000A                     _isspace$1696:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x9
   473  00000A                     	ds	1
   474  00000B                     ?_atoi:
   475                           	callstack 0
   476  00000B                     atoi@s:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xA
   480  00000B                     	ds	1
   481  00000C                     ??___xxtofl:
   482  00000C                     Lcd_Out@y:
   483                           	callstack 0
   484  00000C                     memset@k:
   485                           	callstack 0
   486  00000C                     ___aodiv@divisor:
   487                           	callstack 0
   488  00000C                     ___aomod@divisor:
   489                           	callstack 0
   490                           
   491                           ; 8 bytes @ 0xB
   492  00000C                     	ds	1
   493  00000D                     ??_atoi:
   494  00000D                     ?_ctoa:
   495                           	callstack 0
   496  00000D                     Lcd_Out@data:
   497                           	callstack 0
   498  00000D                     ctoa@fp:
   499                           	callstack 0
   500  00000D                     fputs@s:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0xC
   504  00000D                     	ds	1
   505  00000E                     ??_appLCD_Init:
   506  00000E                     memset@s:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xD
   510  00000E                     	ds	1
   511  00000F                     ctoa@c:
   512                           	callstack 0
   513  00000F                     fputs@fp:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0xE
   517  00000F                     	ds	1
   518  000010                     ??_ctoa:
   519  000010                     ___xxtofl@sign:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0xF
   523  000010                     	ds	1
   524  000011                     ___xxtofl@exp:
   525                           	callstack 0
   526  000011                     fputs@c:
   527                           	callstack 0
   528  000011                     ctoa@l:
   529                           	callstack 0
   530  000011                     atoi@neg:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x10
   534  000011                     	ds	1
   535  000012                     fputs@i:
   536                           	callstack 0
   537  000012                     ___xxtofl@arg:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x11
   541  000012                     	ds	1
   542  000013                     ctoa@w:
   543                           	callstack 0
   544  000013                     _atoi$1678:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x12
   548  000013                     	ds	1
   549  000014                     ?_pad:
   550                           	callstack 0
   551  000014                     ___aodiv@counter:
   552                           	callstack 0
   553  000014                     ___aomod@counter:
   554                           	callstack 0
   555  000014                     pad@fp:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x13
   559  000014                     	ds	1
   560  000015                     ___aodiv@sign:
   561                           	callstack 0
   562  000015                     ___aomod@sign:
   563                           	callstack 0
   564  000015                     _atoi$1680:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x14
   568  000015                     	ds	1
   569  000016                     ?_abs:
   570                           	callstack 0
   571  000016                     ?___flmul:
   572                           	callstack 0
   573  000016                     pad@buf:
   574                           	callstack 0
   575  000016                     abs@a:
   576                           	callstack 0
   577  000016                     ___flmul@b:
   578                           	callstack 0
   579  000016                     ___aodiv@quotient:
   580                           	callstack 0
   581                           
   582                           ; 8 bytes @ 0x15
   583  000016                     	ds	1
   584  000017                     _atoi$1679:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x16
   588  000017                     	ds	1
   589  000018                     ??_abs:
   590  000018                     pad@p:
   591                           	callstack 0
   592  000018                     atoi@n:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x17
   596  000018                     	ds	2
   597  00001A                     ??_pad:
   598  00001A                     ___flmul@a:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x19
   602  00001A                     	ds	1
   603  00001B                     pad@i:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x1A
   607  00001B                     	ds	2
   608  00001D                     pad@w:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x1C
   612  00001D                     	ds	1
   613  00001E                     ??___flmul:
   614                           
   615                           ; 1 bytes @ 0x1D
   616  00001E                     	ds	1
   617  00001F                     ?_dtoa:
   618                           	callstack 0
   619  00001F                     dtoa@fp:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x1E
   623  00001F                     	ds	2
   624  000021                     dtoa@d:
   625                           	callstack 0
   626                           
   627                           ; 8 bytes @ 0x20
   628  000021                     	ds	1
   629  000022                     ___flmul@sign:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x21
   633  000022                     	ds	1
   634  000023                     ___flmul@grs:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x22
   638  000023                     	ds	4
   639  000027                     ___flmul@aexp:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x26
   643  000027                     	ds	1
   644  000028                     ___flmul@bexp:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x27
   648  000028                     	ds	1
   649  000029                     ??_dtoa:
   650  000029                     ___flmul@prod:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x28
   654  000029                     	ds	4
   655  00002D                     ___flmul@temp:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x2C
   659  00002D                     	ds	2
   660  00002F                     ?___fldiv:
   661                           	callstack 0
   662  00002F                     ___fldiv@b:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x2E
   666  00002F                     	ds	2
   667  000031                     _dtoa$1642:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x30
   671  000031                     	ds	2
   672  000033                     dtoa@p:
   673                           	callstack 0
   674  000033                     ___fldiv@a:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x32
   678  000033                     	ds	2
   679  000035                     dtoa@w:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x34
   683  000035                     	ds	2
   684  000037                     ??___fldiv:
   685  000037                     dtoa@s:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x36
   689  000037                     	ds	2
   690  000039                     dtoa@n:
   691                           	callstack 0
   692                           
   693                           ; 8 bytes @ 0x38
   694  000039                     	ds	2
   695  00003B                     ___fldiv@rem:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x3A
   699  00003B                     	ds	4
   700  00003F                     ___fldiv@sign:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x3E
   704  00003F                     	ds	1
   705  000040                     ___fldiv@new_exp:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x3F
   709  000040                     	ds	1
   710  000041                     dtoa@i:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x40
   714  000041                     	ds	1
   715  000042                     ___fldiv@grs:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x41
   719  000042                     	ds	1
   720  000043                     ?_vfpfcnvrt:
   721                           	callstack 0
   722  000043                     vfpfcnvrt@fp:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x42
   726  000043                     	ds	2
   727  000045                     vfpfcnvrt@fmt:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x44
   731  000045                     	ds	1
   732  000046                     ___fldiv@bexp:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x45
   736  000046                     	ds	1
   737  000047                     ___fldiv@aexp:
   738                           	callstack 0
   739  000047                     vfpfcnvrt@ap:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x46
   743  000047                     	ds	1
   744  000048                     ?___fltol:
   745                           	callstack 0
   746  000048                     ___fltol@f1:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x47
   750  000048                     	ds	1
   751  000049                     ??_vfpfcnvrt:
   752                           
   753                           ; 1 bytes @ 0x48
   754  000049                     	ds	3
   755  00004C                     ??___fltol:
   756                           
   757                           ; 1 bytes @ 0x4B
   758  00004C                     	ds	1
   759  00004D                     vfpfcnvrt@ll:
   760                           	callstack 0
   761                           
   762                           ; 8 bytes @ 0x4C
   763  00004D                     	ds	3
   764  000050                     ___fltol@sign1:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x4F
   768  000050                     	ds	1
   769  000051                     ___fltol@exp1:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x50
   773  000051                     	ds	1
   774  000052                     ?___awmod:
   775                           	callstack 0
   776  000052                     ___awmod@dividend:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x51
   780  000052                     	ds	2
   781  000054                     ___awmod@divisor:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x53
   785  000054                     	ds	1
   786  000055                     vfpfcnvrt@c:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x54
   790  000055                     	ds	1
   791  000056                     ___awmod@counter:
   792                           	callstack 0
   793  000056                     vfpfcnvrt@done:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x55
   797  000056                     	ds	1
   798  000057                     ___awmod@sign:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x56
   802  000057                     	ds	1
   803  000058                     _vfpfcnvrt$1657:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x57
   807  000058                     	ds	2
   808  00005A                     
   809                           ; 1 bytes @ 0x59
   810 ;;
   811 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   812 ;;
   813 ;; *************** function _main *****************
   814 ;; Defined at:
   815 ;;		line 12 in file "main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         0       0       0       0       0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0       0       0
   831 ;;      Temps:          0       2       0       0       0       0       0       0       0
   832 ;;      Totals:         0       2       0       0       0       0       0       0       0
   833 ;;Total ram usage:        2 bytes
   834 ;; Hardware stack levels required when called:   12
   835 ;; This function calls:
   836 ;;		_appGetElements
   837 ;;		_appInit
   838 ;;		_appStateInitial
   839 ;;		_appStateRecolectData
   840 ;; This function is called by:
   841 ;;		Startup code after reset
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text0
   846  002C10                     __ptext0:
   847                           	callstack 0
   848  002C10                     _main:
   849                           	callstack 19
   850  002C10                     
   851                           ;main.c: 14:     TRISB = 0xF0;
   852  002C10  0EF0               	movlw	240
   853  002C12  6E93               	movwf	147,c	;volatile
   854  002C14                     
   855                           ;main.c: 15:     INTCON2bits.RBPU = 0;
   856  002C14  9EF1               	bcf	241,7,c	;volatile
   857  002C16                     
   858                           ;main.c: 16:     LATBbits.LATB2 = 0;
   859  002C16  948A               	bcf	138,2,c	;volatile
   860  002C18                     
   861                           ;main.c: 17:     appInit();
   862  002C18  EC3F  F018         	call	_appInit	;wreg free
   863  002C1C                     l4252:
   864                           
   865                           ;main.c: 19:     {;main.c: 21:         LATBbits.LATB3 = !LATBbits.LATB3;
   866  002C1C  A68A               	btfss	138,3,c	;volatile
   867  002C1E  EF13  F016         	goto	u4401
   868  002C22  EF18  F016         	goto	u4400
   869  002C26                     u4401:
   870  002C26  0100               	movlb	0	; () banked
   871  002C28  6BAF               	clrf	??_main& (0+255),b
   872  002C2A  2BAF               	incf	??_main& (0+255),f,b
   873  002C2C  EF1A  F016         	goto	u4418
   874  002C30                     u4400:
   875  002C30  0100               	movlb	0	; () banked
   876  002C32  6BAF               	clrf	??_main& (0+255),b
   877  002C34                     u4418:
   878  002C34  47AF               	rlncf	??_main& (0+255),f,b
   879  002C36  47AF               	rlncf	??_main& (0+255),f,b
   880  002C38  47AF               	rlncf	??_main& (0+255),f,b
   881  002C3A  508A               	movf	138,w,c	;volatile
   882  002C3C  19AF               	xorwf	??_main& (0+255),w,b
   883  002C3E  0BF7               	andlw	-9
   884  002C40  19AF               	xorwf	??_main& (0+255),w,b
   885  002C42  6E8A               	movwf	138,c	;volatile
   886  002C44                     
   887                           ; BSR set to: 0
   888                           ;main.c: 22:         _delay((unsigned long)((100)*(12000000/4000.0)));
   889  002C44  0E02               	movlw	2
   890  002C46  0100               	movlb	0	; () banked
   891  002C48  6FB0               	movwf	(??_main+1)& (0+255),b
   892  002C4A  0E86               	movlw	134
   893  002C4C  6FAF               	movwf	??_main& (0+255),b
   894  002C4E  0E99               	movlw	153
   895  002C50                     u4487:
   896  002C50  2EE8               	decfsz	wreg,f,c
   897  002C52  D7FE               	bra	u4487
   898  002C54  2FAF               	decfsz	??_main& (0+255),f,b
   899  002C56  D7FC               	bra	u4487
   900  002C58  2FB0               	decfsz	(??_main+1)& (0+255),f,b
   901  002C5A  D7FA               	bra	u4487
   902  002C5C                     
   903                           ;main.c: 23:         datos.nextFunc();
   904  002C5C  EE20  F0C7         	lfsr	2,_datos+22
   905  002C60  D802               	call	u4428
   906  002C62  EF3D  F016         	goto	u4429
   907  002C66                     u4428:
   908  002C66  0005               	push	
   909  002C68  6EFA               	movwf	pclath,c
   910  002C6A  50DE               	movf	postinc2,w,c
   911  002C6C  6EFD               	movwf	tosl,c
   912  002C6E  50DE               	movf	postinc2,w,c
   913  002C70  6EFE               	movwf	tosh,c
   914  002C72  50F8               	movf	tblptru,w,c
   915  002C74  6EFF               	movwf	tosu,c
   916  002C76  50FA               	movf	pclath,w,c
   917  002C78  0012               	return		;indir
   918  002C7A                     u4429:
   919  002C7A  EF0E  F016         	goto	l4252
   920  002C7E  EF55  F000         	goto	start
   921  002C82                     __end_of_main:
   922                           	callstack 0
   923                           
   924 ;; *************** function _appGetElements *****************
   925 ;; Defined at:
   926 ;;		line 40 in file "app.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   940 ;;      Params:         0       0       0       0       0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0       0       0       0
   942 ;;      Temps:          0       2       0       0       0       0       0       0       0
   943 ;;      Totals:         0       2       0       0       0       0       0       0       0
   944 ;;Total ram usage:        2 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:   10
   947 ;; This function calls:
   948 ;;		_Lcd_Cmd
   949 ;;		_Lcd_Out
   950 ;;		_appTimerStop
   951 ;;		_sprintf
   952 ;;		_teclado
   953 ;; This function is called by:
   954 ;;		_isrL
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text1
   960  002C82                     __ptext1:
   961                           	callstack 0
   962  002C82                     _appGetElements:
   963                           	callstack 20
   964  002C82                     
   965                           ;app.c: 42:     appTimerStop();
   966  002C82  EC62  F018         	call	_appTimerStop	;wreg free
   967  002C86                     
   968                           ;app.c: 43:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
   969  002C86  0E01               	movlw	1
   970  002C88  EC5F  F012         	call	_Lcd_Cmd
   971  002C8C  0E02               	movlw	2
   972  002C8E  0100               	movlb	0	; () banked
   973  002C90  6FA7               	movwf	(??_appGetElements+1)& (0+255),b
   974  002C92  0E86               	movlw	134
   975  002C94  6FA6               	movwf	??_appGetElements& (0+255),b
   976  002C96  0E99               	movlw	153
   977  002C98                     u4497:
   978  002C98  2EE8               	decfsz	wreg,f,c
   979  002C9A  D7FE               	bra	u4497
   980  002C9C  2FA6               	decfsz	??_appGetElements& (0+255),f,b
   981  002C9E  D7FC               	bra	u4497
   982  002CA0  2FA7               	decfsz	(??_appGetElements+1)& (0+255),f,b
   983  002CA2  D7FA               	bra	u4497
   984  002CA4                     l4238:
   985                           
   986                           ;app.c: 45:     {;app.c: 46:         teclado(&datos.character);
   987  002CA4  0EB6               	movlw	low (_datos+5)
   988  002CA6  6E04               	movwf	teclado@valor^0,c
   989  002CA8  0E00               	movlw	high (_datos+5)
   990  002CAA  6E05               	movwf	(teclado@valor+1)^0,c
   991  002CAC  EC5A  F00B         	call	_teclado	;wreg free
   992  002CB0                     
   993                           ;app.c: 47:         sprintf((char *)datos.display,"%c",(char)datos.character);
   994  002CB0  0EB7               	movlw	low (_datos+6)
   995  002CB2  0100               	movlb	0	; () banked
   996  002CB4  6F94               	movwf	sprintf@s& (0+255),b
   997  002CB6  0E00               	movlw	high (_datos+6)
   998  002CB8  6F95               	movwf	(sprintf@s+1)& (0+255),b
   999  002CBA  0E2F               	movlw	low STR_6
  1000  002CBC  6F96               	movwf	sprintf@fmt& (0+255),b
  1001  002CBE  0E08               	movlw	high STR_6
  1002  002CC0  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
  1003  002CC2  C0B6  F098         	movff	_datos+5,?_sprintf+4
  1004  002CC6  6B99               	clrf	(?_sprintf+5)& (0+255),b
  1005  002CC8  ECA3  F016         	call	_sprintf	;wreg free
  1006  002CCC                     
  1007                           ;app.c: 48:         Lcd_Out(1,0, (int8_t*)datos.display);
  1008  002CCC  0E00               	movlw	0
  1009  002CCE  6E07               	movwf	Lcd_Out@x^0,c
  1010  002CD0  0EB7               	movlw	low (_datos+6)
  1011  002CD2  6E08               	movwf	Lcd_Out@buffer^0,c
  1012  002CD4  0E00               	movlw	high (_datos+6)
  1013  002CD6  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1014  002CD8  0E01               	movlw	1
  1015  002CDA  ECE2  F013         	call	_Lcd_Out
  1016  002CDE  EF52  F016         	goto	l4238
  1017  002CE2  0012               	return		;funcret
  1018  002CE4                     __end_of_appGetElements:
  1019                           	callstack 0
  1020                           
  1021 ;; *************** function _appStateInitial *****************
  1022 ;; Defined at:
  1023 ;;		line 28 in file "app.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1037 ;;      Params:         0       0       0       0       0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1040 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1041 ;;Total ram usage:        0 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    3
  1044 ;; This function calls:
  1045 ;;		_teclado
  1046 ;; This function is called by:
  1047 ;;		_appStateRecolectData
  1048 ;;		_main
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text2
  1053  003042                     __ptext2:
  1054                           	callstack 0
  1055  003042                     _appStateInitial:
  1056                           	callstack 27
  1057  003042                     
  1058                           ;app.c: 31:     teclado(&datos.character);
  1059  003042  0EB6               	movlw	low (_datos+5)
  1060  003044  6E04               	movwf	teclado@valor^0,c
  1061  003046  0E00               	movlw	high (_datos+5)
  1062  003048  6E05               	movwf	(teclado@valor+1)^0,c
  1063  00304A  EC5A  F00B         	call	_teclado	;wreg free
  1064  00304E                     
  1065                           ;app.c: 32:     if(datos.character != 0)
  1066  00304E  0100               	movlb	0	; () banked
  1067  003050  51B6               	movf	(_datos+5)& (0+255),w,b
  1068  003052  B4D8               	btfsc	status,2,c
  1069  003054  EF2E  F018         	goto	u3611
  1070  003058  EF30  F018         	goto	u3610
  1071  00305C                     u3611:
  1072  00305C  EF32  F018         	goto	l250
  1073  003060                     u3610:
  1074  003060                     
  1075                           ; BSR set to: 0
  1076                           ;app.c: 33:     {;app.c: 34:         datos.state = 1;
  1077  003060  0E01               	movlw	1
  1078  003062  6FB3               	movwf	(_datos+2)& (0+255),b
  1079  003064                     l250:
  1080                           
  1081                           ; BSR set to: 0
  1082  003064  0012               	return		;funcret
  1083  003066                     __end_of_appStateInitial:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _appStateRecolectData *****************
  1087 ;; Defined at:
  1088 ;;		line 21 in file "app.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:   11
  1109 ;; This function calls:
  1110 ;;		_appADC
  1111 ;;		_appBat
  1112 ;;		_appElemts
  1113 ;; This function is called by:
  1114 ;;		_isrL
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text3
  1120  002FB0                     __ptext3:
  1121                           	callstack 0
  1122  002FB0                     _appStateRecolectData:
  1123                           	callstack 19
  1124  002FB0                     
  1125                           ;app.c: 23:     appADC(&datos);
  1126  002FB0  0EB1               	movlw	low _datos
  1127  002FB2  0100               	movlb	0	; () banked
  1128  002FB4  6FA6               	movwf	appADC@data& (0+255),b
  1129  002FB6  0E00               	movlw	high _datos
  1130  002FB8  6FA7               	movwf	(appADC@data+1)& (0+255),b
  1131  002FBA  ECBD  F011         	call	_appADC	;wreg free
  1132                           
  1133                           ;app.c: 24:     appBat(&datos);
  1134  002FBE  0EB1               	movlw	low _datos
  1135  002FC0  0100               	movlb	0	; () banked
  1136  002FC2  6FA6               	movwf	appBat@data& (0+255),b
  1137  002FC4  0E00               	movlw	high _datos
  1138  002FC6  6FA7               	movwf	(appBat@data+1)& (0+255),b
  1139  002FC8  EC4F  F00C         	call	_appBat	;wreg free
  1140                           
  1141                           ;app.c: 25:     appElemts(&datos.elements);
  1142  002FCC  0EB2               	movlw	low (_datos+1)
  1143  002FCE  0100               	movlb	0	; () banked
  1144  002FD0  6FA6               	movwf	appElemts@elements& (0+255),b
  1145  002FD2  0E00               	movlw	high (_datos+1)
  1146  002FD4  6FA7               	movwf	(appElemts@elements+1)& (0+255),b
  1147  002FD6  ECF5  F016         	call	_appElemts	;wreg free
  1148  002FDA                     
  1149                           ;app.c: 26:     datos.nextFunc = appStateInitial;
  1150  002FDA  0E42               	movlw	low _appStateInitial
  1151  002FDC  0100               	movlb	0	; () banked
  1152  002FDE  6FC7               	movwf	(_datos+22)& (0+255),b
  1153  002FE0  0E30               	movlw	high _appStateInitial
  1154  002FE2  6FC8               	movwf	(_datos+23)& (0+255),b
  1155  002FE4                     
  1156                           ; BSR set to: 0
  1157  002FE4  0012               	return		;funcret
  1158  002FE6                     __end_of_appStateRecolectData:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _appElemts *****************
  1162 ;; Defined at:
  1163 ;;		line 83 in file "servo.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  elements        2   26[BANK0 ] PTR const unsigned char 
  1166 ;;		 -> datos.elements(1), datos(24), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  dataout         6   29[BANK0 ] unsigned char [6]
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1178 ;;      Params:         0       2       0       0       0       0       0       0       0
  1179 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1180 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1181 ;;      Totals:         0       9       0       0       0       0       0       0       0
  1182 ;;Total ram usage:        9 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:   10
  1185 ;; This function calls:
  1186 ;;		_Lcd_Out
  1187 ;;		_sprintf
  1188 ;; This function is called by:
  1189 ;;		_appStateRecolectData
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text4
  1194  002DEA                     __ptext4:
  1195                           	callstack 0
  1196  002DEA                     _appElemts:
  1197                           	callstack 19
  1198  002DEA                     
  1199                           ;servo.c: 83: void appElemts(const uint8_t * elements);servo.c: 84: {;servo.c: 85:     u
      +                          int8_t dataout[6] = {0};
  1200  002DEA  EE20  F0A9         	lfsr	2,appElemts@dataout
  1201  002DEE  0E05               	movlw	5
  1202  002DF0                     u4391:
  1203  002DF0  6ADE               	clrf	postinc2,c
  1204  002DF2  06E8               	decf	wreg,f,c
  1205  002DF4  E2FD               	bc	u4391
  1206  002DF6                     
  1207                           ;servo.c: 86:     sprintf((char *)dataout,"#:%d",*elements);
  1208  002DF6  0EA9               	movlw	low appElemts@dataout
  1209  002DF8  0100               	movlb	0	; () banked
  1210  002DFA  6F94               	movwf	sprintf@s& (0+255),b
  1211  002DFC  0E00               	movlw	high appElemts@dataout
  1212  002DFE  6F95               	movwf	(sprintf@s+1)& (0+255),b
  1213  002E00  0E2A               	movlw	low STR_5
  1214  002E02  6F96               	movwf	sprintf@fmt& (0+255),b
  1215  002E04  0E08               	movlw	high STR_5
  1216  002E06  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
  1217  002E08  C0A6  FFD9         	movff	appElemts@elements,fsr2l
  1218  002E0C  C0A7  FFDA         	movff	appElemts@elements+1,fsr2h
  1219  002E10  50DF               	movf	indf2,w,c
  1220  002E12  6FA8               	movwf	??_appElemts& (0+255),b
  1221  002E14  51A8               	movf	??_appElemts& (0+255),w,b
  1222  002E16  6F98               	movwf	(?_sprintf+4)& (0+255),b
  1223  002E18  6B99               	clrf	(?_sprintf+5)& (0+255),b
  1224  002E1A  ECA3  F016         	call	_sprintf	;wreg free
  1225  002E1E                     
  1226                           ;servo.c: 87:     Lcd_Out(2,10, (int8_t*)dataout);
  1227  002E1E  0E0A               	movlw	10
  1228  002E20  6E07               	movwf	Lcd_Out@x^0,c
  1229  002E22  0EA9               	movlw	low appElemts@dataout
  1230  002E24  6E08               	movwf	Lcd_Out@buffer^0,c
  1231  002E26  0E00               	movlw	high appElemts@dataout
  1232  002E28  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1233  002E2A  0E02               	movlw	2
  1234  002E2C  ECE2  F013         	call	_Lcd_Out
  1235  002E30  0012               	return		;funcret
  1236  002E32                     __end_of_appElemts:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _appBat *****************
  1240 ;; Defined at:
  1241 ;;		line 63 in file "adc.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  data            2   26[BANK0 ] PTR struct _state
  1244 ;;		 -> datos(24), 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1256 ;;      Params:         0       2       0       0       0       0       0       0       0
  1257 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1258 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1259 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1260 ;;Total ram usage:        8 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:   10
  1263 ;; This function calls:
  1264 ;;		_Lcd_Out
  1265 ;;		___fldiv
  1266 ;;		___flmul
  1267 ;;		___fltol
  1268 ;;		___xxtofl
  1269 ;;		_adcGetValue
  1270 ;;		_memset
  1271 ;;		_sprintf
  1272 ;; This function is called by:
  1273 ;;		_appStateRecolectData
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text5
  1278  00189E                     __ptext5:
  1279                           	callstack 0
  1280  00189E                     _appBat:
  1281                           	callstack 19
  1282  00189E                     
  1283                           ;adc.c: 63: void appBat(StateMachine *data);adc.c: 64: {;adc.c: 65:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1284  00189E  0E06               	movlw	6
  1285  0018A0  0100               	movlb	0	; () banked
  1286  0018A2  25A6               	addwf	appBat@data& (0+255),w,b
  1287  0018A4  6E04               	movwf	memset@dest^0,c
  1288  0018A6  0E00               	movlw	0
  1289  0018A8  21A7               	addwfc	(appBat@data+1)& (0+255),w,b
  1290  0018AA  6E05               	movwf	(memset@dest+1)^0,c
  1291  0018AC  0E00               	movlw	0
  1292  0018AE  6E07               	movwf	(memset@c+1)^0,c
  1293  0018B0  0E00               	movlw	0
  1294  0018B2  6E06               	movwf	memset@c^0,c
  1295  0018B4  0E00               	movlw	0
  1296  0018B6  6E09               	movwf	(memset@n+1)^0,c
  1297  0018B8  0E10               	movlw	16
  1298  0018BA  6E08               	movwf	memset@n^0,c
  1299  0018BC  ECA9  F00F         	call	_memset	;wreg free
  1300                           
  1301                           ;adc.c: 70:     data->bat = adcGetValue(1);
  1302  0018C0  0E01               	movlw	1
  1303  0018C2  EC9E  F017         	call	_adcGetValue
  1304  0018C6  0100               	movlb	0	; () banked
  1305  0018C8  EE20 F003          	lfsr	2,3
  1306  0018CC  51A6               	movf	appBat@data& (0+255),w,b
  1307  0018CE  26D9               	addwf	fsr2l,f,c
  1308  0018D0  51A7               	movf	(appBat@data+1)& (0+255),w,b
  1309  0018D2  22DA               	addwfc	fsr2h,f,c
  1310  0018D4  C004  FFDE         	movff	?_adcGetValue,postinc2
  1311  0018D8  C005  FFDD         	movff	?_adcGetValue+1,postdec2
  1312  0018DC                     
  1313                           ; BSR set to: 0
  1314                           ;adc.c: 71:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1315  0018DC  0E00               	movlw	0
  1316  0018DE  6E33               	movwf	___fldiv@a^0,c
  1317  0018E0  0E00               	movlw	0
  1318  0018E2  6E34               	movwf	(___fldiv@a+1)^0,c
  1319  0018E4  0E80               	movlw	128
  1320  0018E6  6E35               	movwf	(___fldiv@a+2)^0,c
  1321  0018E8  0E44               	movlw	68
  1322  0018EA  6E36               	movwf	(___fldiv@a+3)^0,c
  1323  0018EC  0E00               	movlw	0
  1324  0018EE  6E1A               	movwf	___flmul@a^0,c
  1325  0018F0  0E00               	movlw	0
  1326  0018F2  6E1B               	movwf	(___flmul@a+1)^0,c
  1327  0018F4  0EA0               	movlw	160
  1328  0018F6  6E1C               	movwf	(___flmul@a+2)^0,c
  1329  0018F8  0E40               	movlw	64
  1330  0018FA  6E1D               	movwf	(___flmul@a+3)^0,c
  1331  0018FC  EE20 F003          	lfsr	2,3
  1332  001900  51A6               	movf	appBat@data& (0+255),w,b
  1333  001902  26D9               	addwf	fsr2l,f,c
  1334  001904  51A7               	movf	(appBat@data+1)& (0+255),w,b
  1335  001906  22DA               	addwfc	fsr2h,f,c
  1336  001908  CFDE F0A8          	movff	postinc2,??_appBat
  1337  00190C  CFDD F0A9          	movff	postdec2,??_appBat+1
  1338  001910  C0A8  F008         	movff	??_appBat,___xxtofl@val
  1339  001914  C0A9  F009         	movff	??_appBat+1,___xxtofl@val+1
  1340  001918  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1341  00191A  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1342  00191C  0E00               	movlw	0
  1343  00191E  EC43  F00D         	call	___xxtofl
  1344  001922  C008  F016         	movff	?___xxtofl,___flmul@b
  1345  001926  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1346  00192A  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1347  00192E  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1348  001932  EC1A  F004         	call	___flmul	;wreg free
  1349  001936  C016  F02F         	movff	?___flmul,___fldiv@b
  1350  00193A  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1351  00193E  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1352  001942  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1353  001946  EC1E  F008         	call	___fldiv	;wreg free
  1354  00194A  C02F  F0AA         	movff	?___fldiv,_appBat$1959
  1355  00194E  C030  F0AB         	movff	?___fldiv+1,_appBat$1959+1
  1356  001952  C031  F0AC         	movff	?___fldiv+2,_appBat$1959+2
  1357  001956  C032  F0AD         	movff	?___fldiv+3,_appBat$1959+3
  1358  00195A                     
  1359                           ;adc.c: 71:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1360  00195A  0E00               	movlw	0
  1361  00195C  6E1A               	movwf	___flmul@a^0,c
  1362  00195E  0E00               	movlw	0
  1363  001960  6E1B               	movwf	(___flmul@a+1)^0,c
  1364  001962  0EC8               	movlw	200
  1365  001964  6E1C               	movwf	(___flmul@a+2)^0,c
  1366  001966  0E42               	movlw	66
  1367  001968  6E1D               	movwf	(___flmul@a+3)^0,c
  1368  00196A  C0AA  F016         	movff	_appBat$1959,___flmul@b
  1369  00196E  C0AB  F017         	movff	_appBat$1959+1,___flmul@b+1
  1370  001972  C0AC  F018         	movff	_appBat$1959+2,___flmul@b+2
  1371  001976  C0AD  F019         	movff	_appBat$1959+3,___flmul@b+3
  1372  00197A  EC1A  F004         	call	___flmul	;wreg free
  1373  00197E  C016  F048         	movff	?___flmul,___fltol@f1
  1374  001982  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1375  001986  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1376  00198A  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1377  00198E  ECF4  F012         	call	___fltol	;wreg free
  1378  001992  0100               	movlb	0	; () banked
  1379  001994  EE20 F003          	lfsr	2,3
  1380  001998  51A6               	movf	appBat@data& (0+255),w,b
  1381  00199A  26D9               	addwf	fsr2l,f,c
  1382  00199C  51A7               	movf	(appBat@data+1)& (0+255),w,b
  1383  00199E  22DA               	addwfc	fsr2h,f,c
  1384  0019A0  C048  FFDE         	movff	?___fltol,postinc2
  1385  0019A4  C049  FFDD         	movff	?___fltol+1,postdec2
  1386  0019A8                     
  1387                           ; BSR set to: 0
  1388                           ;adc.c: 72:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  1389  0019A8  0E00               	movlw	0
  1390  0019AA  6E33               	movwf	___fldiv@a^0,c
  1391  0019AC  0E00               	movlw	0
  1392  0019AE  6E34               	movwf	(___fldiv@a+1)^0,c
  1393  0019B0  0EFA               	movlw	250
  1394  0019B2  6E35               	movwf	(___fldiv@a+2)^0,c
  1395  0019B4  0E43               	movlw	67
  1396  0019B6  6E36               	movwf	(___fldiv@a+3)^0,c
  1397  0019B8  0E00               	movlw	0
  1398  0019BA  6E1A               	movwf	___flmul@a^0,c
  1399  0019BC  0E00               	movlw	0
  1400  0019BE  6E1B               	movwf	(___flmul@a+1)^0,c
  1401  0019C0  0EC8               	movlw	200
  1402  0019C2  6E1C               	movwf	(___flmul@a+2)^0,c
  1403  0019C4  0E42               	movlw	66
  1404  0019C6  6E1D               	movwf	(___flmul@a+3)^0,c
  1405  0019C8  EE20 F003          	lfsr	2,3
  1406  0019CC  51A6               	movf	appBat@data& (0+255),w,b
  1407  0019CE  26D9               	addwf	fsr2l,f,c
  1408  0019D0  51A7               	movf	(appBat@data+1)& (0+255),w,b
  1409  0019D2  22DA               	addwfc	fsr2h,f,c
  1410  0019D4  CFDE F0A8          	movff	postinc2,??_appBat
  1411  0019D8  CFDD F0A9          	movff	postdec2,??_appBat+1
  1412  0019DC  C0A8  F008         	movff	??_appBat,___xxtofl@val
  1413  0019E0  C0A9  F009         	movff	??_appBat+1,___xxtofl@val+1
  1414  0019E4  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1415  0019E6  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1416  0019E8  0E00               	movlw	0
  1417  0019EA  EC43  F00D         	call	___xxtofl
  1418  0019EE  C008  F016         	movff	?___xxtofl,___flmul@b
  1419  0019F2  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1420  0019F6  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1421  0019FA  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1422  0019FE  EC1A  F004         	call	___flmul	;wreg free
  1423  001A02  C016  F02F         	movff	?___flmul,___fldiv@b
  1424  001A06  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1425  001A0A  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1426  001A0E  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1427  001A12  EC1E  F008         	call	___fldiv	;wreg free
  1428  001A16  C02F  F048         	movff	?___fldiv,___fltol@f1
  1429  001A1A  C030  F049         	movff	?___fldiv+1,___fltol@f1+1
  1430  001A1E  C031  F04A         	movff	?___fldiv+2,___fltol@f1+2
  1431  001A22  C032  F04B         	movff	?___fldiv+3,___fltol@f1+3
  1432  001A26  ECF4  F012         	call	___fltol	;wreg free
  1433  001A2A  0100               	movlb	0	; () banked
  1434  001A2C  EE20 F003          	lfsr	2,3
  1435  001A30  51A6               	movf	appBat@data& (0+255),w,b
  1436  001A32  26D9               	addwf	fsr2l,f,c
  1437  001A34  51A7               	movf	(appBat@data+1)& (0+255),w,b
  1438  001A36  22DA               	addwfc	fsr2h,f,c
  1439  001A38  C048  FFDE         	movff	?___fltol,postinc2
  1440  001A3C  C049  FFDD         	movff	?___fltol+1,postdec2
  1441  001A40                     
  1442                           ; BSR set to: 0
  1443                           ;adc.c: 73:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  1444  001A40  0E06               	movlw	6
  1445  001A42  25A6               	addwf	appBat@data& (0+255),w,b
  1446  001A44  6F94               	movwf	sprintf@s& (0+255),b
  1447  001A46  0E00               	movlw	0
  1448  001A48  21A7               	addwfc	(appBat@data+1)& (0+255),w,b
  1449  001A4A  6F95               	movwf	(sprintf@s+1)& (0+255),b
  1450  001A4C  0E1B               	movlw	low STR_2
  1451  001A4E  6F96               	movwf	sprintf@fmt& (0+255),b
  1452  001A50  0E08               	movlw	high STR_2
  1453  001A52  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
  1454  001A54  EE20 F003          	lfsr	2,3
  1455  001A58  51A6               	movf	appBat@data& (0+255),w,b
  1456  001A5A  26D9               	addwf	fsr2l,f,c
  1457  001A5C  51A7               	movf	(appBat@data+1)& (0+255),w,b
  1458  001A5E  22DA               	addwfc	fsr2h,f,c
  1459  001A60  CFDE F098          	movff	postinc2,?_sprintf+4
  1460  001A64  CFDD F099          	movff	postdec2,?_sprintf+5
  1461  001A68  ECA3  F016         	call	_sprintf	;wreg free
  1462  001A6C                     
  1463                           ;adc.c: 74:     Lcd_Out(2,0, (int8_t*)data->display);
  1464  001A6C  0E00               	movlw	0
  1465  001A6E  6E07               	movwf	Lcd_Out@x^0,c
  1466  001A70  0E06               	movlw	6
  1467  001A72  0100               	movlb	0	; () banked
  1468  001A74  25A6               	addwf	appBat@data& (0+255),w,b
  1469  001A76  6E08               	movwf	Lcd_Out@buffer^0,c
  1470  001A78  0E00               	movlw	0
  1471  001A7A  21A7               	addwfc	(appBat@data+1)& (0+255),w,b
  1472  001A7C  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1473  001A7E  0E02               	movlw	2
  1474  001A80  ECE2  F013         	call	_Lcd_Out
  1475  001A84  0012               	return		;funcret
  1476  001A86                     __end_of_appBat:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _appADC *****************
  1480 ;; Defined at:
  1481 ;;		line 53 in file "adc.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  data            2   26[BANK0 ] PTR struct _state
  1484 ;;		 -> datos(24), 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  lm35val         4   28[BANK0 ] float 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         0       2       0       0       0       0       0       0       0
  1497 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1499 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1500 ;;Total ram usage:        6 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:   10
  1503 ;; This function calls:
  1504 ;;		_Lcd_Out
  1505 ;;		___awmod
  1506 ;;		___fldiv
  1507 ;;		___flmul
  1508 ;;		___fltol
  1509 ;;		___xxtofl
  1510 ;;		_adcGetValue
  1511 ;;		_memset
  1512 ;;		_sprintf
  1513 ;; This function is called by:
  1514 ;;		_appStateRecolectData
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text6
  1519  00237A                     __ptext6:
  1520                           	callstack 0
  1521  00237A                     _appADC:
  1522                           	callstack 19
  1523  00237A                     
  1524                           ;adc.c: 53: void appADC(StateMachine *data);adc.c: 54: {;adc.c: 55:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1525  00237A  0E06               	movlw	6
  1526  00237C  0100               	movlb	0	; () banked
  1527  00237E  25A6               	addwf	appADC@data& (0+255),w,b
  1528  002380  6E04               	movwf	memset@dest^0,c
  1529  002382  0E00               	movlw	0
  1530  002384  21A7               	addwfc	(appADC@data+1)& (0+255),w,b
  1531  002386  6E05               	movwf	(memset@dest+1)^0,c
  1532  002388  0E00               	movlw	0
  1533  00238A  6E07               	movwf	(memset@c+1)^0,c
  1534  00238C  0E00               	movlw	0
  1535  00238E  6E06               	movwf	memset@c^0,c
  1536  002390  0E00               	movlw	0
  1537  002392  6E09               	movwf	(memset@n+1)^0,c
  1538  002394  0E10               	movlw	16
  1539  002396  6E08               	movwf	memset@n^0,c
  1540  002398  ECA9  F00F         	call	_memset	;wreg free
  1541  00239C                     
  1542                           ;adc.c: 56:     float lm35val = adcGetValue(0);
  1543  00239C  0E00               	movlw	0
  1544  00239E  EC9E  F017         	call	_adcGetValue
  1545  0023A2  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1546  0023A6  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1547  0023AA  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1548  0023AC  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1549  0023AE  0E00               	movlw	0
  1550  0023B0  EC43  F00D         	call	___xxtofl
  1551  0023B4  C008  F0A8         	movff	?___xxtofl,appADC@lm35val
  1552  0023B8  C009  F0A9         	movff	?___xxtofl+1,appADC@lm35val+1
  1553  0023BC  C00A  F0AA         	movff	?___xxtofl+2,appADC@lm35val+2
  1554  0023C0  C00B  F0AB         	movff	?___xxtofl+3,appADC@lm35val+3
  1555  0023C4                     
  1556                           ;adc.c: 57:     lm35val = (float)((lm35val*4.88)/10.0);
  1557  0023C4  0EF6               	movlw	246
  1558  0023C6  6E1A               	movwf	___flmul@a^0,c
  1559  0023C8  0E28               	movlw	40
  1560  0023CA  6E1B               	movwf	(___flmul@a+1)^0,c
  1561  0023CC  0E9C               	movlw	156
  1562  0023CE  6E1C               	movwf	(___flmul@a+2)^0,c
  1563  0023D0  0E40               	movlw	64
  1564  0023D2  6E1D               	movwf	(___flmul@a+3)^0,c
  1565  0023D4  C0A8  F016         	movff	appADC@lm35val,___flmul@b
  1566  0023D8  C0A9  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1567  0023DC  C0AA  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1568  0023E0  C0AB  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1569  0023E4  EC1A  F004         	call	___flmul	;wreg free
  1570  0023E8  C016  F02F         	movff	?___flmul,___fldiv@b
  1571  0023EC  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1572  0023F0  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1573  0023F4  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1574  0023F8  0E00               	movlw	0
  1575  0023FA  6E33               	movwf	___fldiv@a^0,c
  1576  0023FC  0E00               	movlw	0
  1577  0023FE  6E34               	movwf	(___fldiv@a+1)^0,c
  1578  002400  0E20               	movlw	32
  1579  002402  6E35               	movwf	(___fldiv@a+2)^0,c
  1580  002404  0E41               	movlw	65
  1581  002406  6E36               	movwf	(___fldiv@a+3)^0,c
  1582  002408  EC1E  F008         	call	___fldiv	;wreg free
  1583  00240C  C02F  F0A8         	movff	?___fldiv,appADC@lm35val
  1584  002410  C030  F0A9         	movff	?___fldiv+1,appADC@lm35val+1
  1585  002414  C031  F0AA         	movff	?___fldiv+2,appADC@lm35val+2
  1586  002418  C032  F0AB         	movff	?___fldiv+3,appADC@lm35val+3
  1587  00241C                     
  1588                           ;adc.c: 59:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  1589  00241C  0E06               	movlw	6
  1590  00241E  0100               	movlb	0	; () banked
  1591  002420  25A6               	addwf	appADC@data& (0+255),w,b
  1592  002422  6F94               	movwf	sprintf@s& (0+255),b
  1593  002424  0E00               	movlw	0
  1594  002426  21A7               	addwfc	(appADC@data+1)& (0+255),w,b
  1595  002428  6F95               	movwf	(sprintf@s+1)& (0+255),b
  1596  00242A  0E01               	movlw	low STR_1
  1597  00242C  6F96               	movwf	sprintf@fmt& (0+255),b
  1598  00242E  0E08               	movlw	high STR_1
  1599  002430  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
  1600  002432  C0A8  F048         	movff	appADC@lm35val,___fltol@f1
  1601  002436  C0A9  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1602  00243A  C0AA  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1603  00243E  C0AB  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1604  002442  ECF4  F012         	call	___fltol	;wreg free
  1605  002446  5048               	movf	?___fltol^0,w,c
  1606  002448  0100               	movlb	0	; () banked
  1607  00244A  6F98               	movwf	(?_sprintf+4)& (0+255),b
  1608  00244C  6B99               	clrf	(?_sprintf+5)& (0+255),b
  1609  00244E  0E00               	movlw	0
  1610  002450  6E1A               	movwf	___flmul@a^0,c
  1611  002452  0E00               	movlw	0
  1612  002454  6E1B               	movwf	(___flmul@a+1)^0,c
  1613  002456  0EC8               	movlw	200
  1614  002458  6E1C               	movwf	(___flmul@a+2)^0,c
  1615  00245A  0E42               	movlw	66
  1616  00245C  6E1D               	movwf	(___flmul@a+3)^0,c
  1617  00245E  C0A8  F016         	movff	appADC@lm35val,___flmul@b
  1618  002462  C0A9  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1619  002466  C0AA  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1620  00246A  C0AB  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1621  00246E  EC1A  F004         	call	___flmul	;wreg free
  1622  002472  C016  F048         	movff	?___flmul,___fltol@f1
  1623  002476  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1624  00247A  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1625  00247E  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1626  002482  ECF4  F012         	call	___fltol	;wreg free
  1627  002486  5048               	movf	?___fltol^0,w,c
  1628  002488  6E52               	movwf	___awmod@dividend^0,c
  1629  00248A  6A53               	clrf	(___awmod@dividend+1)^0,c
  1630  00248C  0E00               	movlw	0
  1631  00248E  6E55               	movwf	(___awmod@divisor+1)^0,c
  1632  002490  0E64               	movlw	100
  1633  002492  6E54               	movwf	___awmod@divisor^0,c
  1634  002494  EC6E  F015         	call	___awmod	;wreg free
  1635  002498  5052               	movf	?___awmod^0,w,c
  1636  00249A  0100               	movlb	0	; () banked
  1637  00249C  6F9A               	movwf	(?_sprintf+6)& (0+255),b
  1638  00249E  6B9B               	clrf	(?_sprintf+7)& (0+255),b
  1639  0024A0  ECA3  F016         	call	_sprintf	;wreg free
  1640  0024A4                     
  1641                           ;adc.c: 60:     Lcd_Out(1,0, (int8_t*)data->display);
  1642  0024A4  0E00               	movlw	0
  1643  0024A6  6E07               	movwf	Lcd_Out@x^0,c
  1644  0024A8  0E06               	movlw	6
  1645  0024AA  0100               	movlb	0	; () banked
  1646  0024AC  25A6               	addwf	appADC@data& (0+255),w,b
  1647  0024AE  6E08               	movwf	Lcd_Out@buffer^0,c
  1648  0024B0  0E00               	movlw	0
  1649  0024B2  21A7               	addwfc	(appADC@data+1)& (0+255),w,b
  1650  0024B4  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1651  0024B6  0E01               	movlw	1
  1652  0024B8  ECE2  F013         	call	_Lcd_Out
  1653  0024BC  0012               	return		;funcret
  1654  0024BE                     __end_of_appADC:
  1655                           	callstack 0
  1656                           
  1657 ;; *************** function _memset *****************
  1658 ;; Defined at:
  1659 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  dest            2    3[COMRAM] PTR void 
  1662 ;;		 -> datos(24), 
  1663 ;;  c               2    5[COMRAM] int 
  1664 ;;  n               2    7[COMRAM] unsigned int 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  s               2   13[COMRAM] PTR unsigned char 
  1667 ;;		 -> datos(24), 
  1668 ;;  k               2   11[COMRAM] unsigned int 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  2    3[COMRAM] PTR void 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1678 ;;      Params:         6       0       0       0       0       0       0       0       0
  1679 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1680 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1681 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1682 ;;Total ram usage:       12 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    2
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_appADC
  1689 ;;		_appBat
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text7
  1694  001F52                     __ptext7:
  1695                           	callstack 0
  1696  001F52                     _memset:
  1697                           	callstack 26
  1698  001F52  C004  F00E         	movff	memset@dest,memset@s
  1699  001F56  C005  F00F         	movff	memset@dest+1,memset@s+1
  1700  001F5A  5008               	movf	memset@n^0,w,c
  1701  001F5C  1009               	iorwf	(memset@n+1)^0,w,c
  1702  001F5E  A4D8               	btfss	status,2,c
  1703  001F60  EFB4  F00F         	goto	u2671
  1704  001F64  EFB6  F00F         	goto	u2670
  1705  001F68                     u2671:
  1706  001F68  EFB8  F00F         	goto	l2954
  1707  001F6C                     u2670:
  1708  001F6C  EF63  F010         	goto	l951
  1709  001F70                     l2954:
  1710  001F70  C00E  FFD9         	movff	memset@s,fsr2l
  1711  001F74  C00F  FFDA         	movff	memset@s+1,fsr2h
  1712  001F78  C006  FFDF         	movff	memset@c,indf2
  1713  001F7C  5008               	movf	memset@n^0,w,c
  1714  001F7E  240E               	addwf	memset@s^0,w,c
  1715  001F80  6E0A               	movwf	??_memset^0,c
  1716  001F82  5009               	movf	(memset@n+1)^0,w,c
  1717  001F84  200F               	addwfc	(memset@s+1)^0,w,c
  1718  001F86  6E0B               	movwf	(??_memset+1)^0,c
  1719  001F88  0EFF               	movlw	255
  1720  001F8A  240A               	addwf	??_memset^0,w,c
  1721  001F8C  6ED9               	movwf	fsr2l,c
  1722  001F8E  0EFF               	movlw	255
  1723  001F90  200B               	addwfc	(??_memset+1)^0,w,c
  1724  001F92  6EDA               	movwf	fsr2h,c
  1725  001F94  C006  FFDF         	movff	memset@c,indf2
  1726  001F98  5009               	movf	(memset@n+1)^0,w,c
  1727  001F9A  E107               	bnz	u2681
  1728  001F9C  0E03               	movlw	3
  1729  001F9E  5C08               	subwf	memset@n^0,w,c
  1730  001FA0  B0D8               	btfsc	status,0,c
  1731  001FA2  EFD5  F00F         	goto	u2681
  1732  001FA6  EFD7  F00F         	goto	u2680
  1733  001FAA                     u2681:
  1734  001FAA  EFD9  F00F         	goto	l2960
  1735  001FAE                     u2680:
  1736  001FAE  EF63  F010         	goto	l951
  1737  001FB2                     l2960:
  1738  001FB2  EE20 F001          	lfsr	2,1
  1739  001FB6  500E               	movf	memset@s^0,w,c
  1740  001FB8  26D9               	addwf	fsr2l,f,c
  1741  001FBA  500F               	movf	(memset@s+1)^0,w,c
  1742  001FBC  22DA               	addwfc	fsr2h,f,c
  1743  001FBE  C006  FFDF         	movff	memset@c,indf2
  1744  001FC2  EE20 F002          	lfsr	2,2
  1745  001FC6  500E               	movf	memset@s^0,w,c
  1746  001FC8  26D9               	addwf	fsr2l,f,c
  1747  001FCA  500F               	movf	(memset@s+1)^0,w,c
  1748  001FCC  22DA               	addwfc	fsr2h,f,c
  1749  001FCE  C006  FFDF         	movff	memset@c,indf2
  1750  001FD2  5008               	movf	memset@n^0,w,c
  1751  001FD4  240E               	addwf	memset@s^0,w,c
  1752  001FD6  6E0A               	movwf	??_memset^0,c
  1753  001FD8  5009               	movf	(memset@n+1)^0,w,c
  1754  001FDA  200F               	addwfc	(memset@s+1)^0,w,c
  1755  001FDC  6E0B               	movwf	(??_memset+1)^0,c
  1756  001FDE  0EFE               	movlw	254
  1757  001FE0  240A               	addwf	??_memset^0,w,c
  1758  001FE2  6ED9               	movwf	fsr2l,c
  1759  001FE4  0EFF               	movlw	255
  1760  001FE6  200B               	addwfc	(??_memset+1)^0,w,c
  1761  001FE8  6EDA               	movwf	fsr2h,c
  1762  001FEA  C006  FFDF         	movff	memset@c,indf2
  1763  001FEE  5008               	movf	memset@n^0,w,c
  1764  001FF0  240E               	addwf	memset@s^0,w,c
  1765  001FF2  6E0A               	movwf	??_memset^0,c
  1766  001FF4  5009               	movf	(memset@n+1)^0,w,c
  1767  001FF6  200F               	addwfc	(memset@s+1)^0,w,c
  1768  001FF8  6E0B               	movwf	(??_memset+1)^0,c
  1769  001FFA  0EFD               	movlw	253
  1770  001FFC  240A               	addwf	??_memset^0,w,c
  1771  001FFE  6ED9               	movwf	fsr2l,c
  1772  002000  0EFF               	movlw	255
  1773  002002  200B               	addwfc	(??_memset+1)^0,w,c
  1774  002004  6EDA               	movwf	fsr2h,c
  1775  002006  C006  FFDF         	movff	memset@c,indf2
  1776  00200A  5009               	movf	(memset@n+1)^0,w,c
  1777  00200C  E107               	bnz	u2691
  1778  00200E  0E07               	movlw	7
  1779  002010  5C08               	subwf	memset@n^0,w,c
  1780  002012  B0D8               	btfsc	status,0,c
  1781  002014  EF0E  F010         	goto	u2691
  1782  002018  EF10  F010         	goto	u2690
  1783  00201C                     u2691:
  1784  00201C  EF12  F010         	goto	l2966
  1785  002020                     u2690:
  1786  002020  EF63  F010         	goto	l951
  1787  002024                     l2966:
  1788  002024  EE20 F003          	lfsr	2,3
  1789  002028  500E               	movf	memset@s^0,w,c
  1790  00202A  26D9               	addwf	fsr2l,f,c
  1791  00202C  500F               	movf	(memset@s+1)^0,w,c
  1792  00202E  22DA               	addwfc	fsr2h,f,c
  1793  002030  C006  FFDF         	movff	memset@c,indf2
  1794  002034  5008               	movf	memset@n^0,w,c
  1795  002036  240E               	addwf	memset@s^0,w,c
  1796  002038  6E0A               	movwf	??_memset^0,c
  1797  00203A  5009               	movf	(memset@n+1)^0,w,c
  1798  00203C  200F               	addwfc	(memset@s+1)^0,w,c
  1799  00203E  6E0B               	movwf	(??_memset+1)^0,c
  1800  002040  0EFC               	movlw	252
  1801  002042  240A               	addwf	??_memset^0,w,c
  1802  002044  6ED9               	movwf	fsr2l,c
  1803  002046  0EFF               	movlw	255
  1804  002048  200B               	addwfc	(??_memset+1)^0,w,c
  1805  00204A  6EDA               	movwf	fsr2h,c
  1806  00204C  C006  FFDF         	movff	memset@c,indf2
  1807  002050  5009               	movf	(memset@n+1)^0,w,c
  1808  002052  E107               	bnz	u2701
  1809  002054  0E09               	movlw	9
  1810  002056  5C08               	subwf	memset@n^0,w,c
  1811  002058  B0D8               	btfsc	status,0,c
  1812  00205A  EF31  F010         	goto	u2701
  1813  00205E  EF33  F010         	goto	u2700
  1814  002062                     u2701:
  1815  002062  EF35  F010         	goto	l2972
  1816  002066                     u2700:
  1817  002066  EF63  F010         	goto	l951
  1818  00206A                     l2972:
  1819  00206A  C00E  F00A         	movff	memset@s,??_memset
  1820  00206E  C00F  F00B         	movff	memset@s+1,??_memset+1
  1821  002072  1E0A               	comf	??_memset^0,f,c
  1822  002074  1E0B               	comf	(??_memset+1)^0,f,c
  1823  002076  4A0A               	infsnz	??_memset^0,f,c
  1824  002078  2A0B               	incf	(??_memset+1)^0,f,c
  1825  00207A  0E03               	movlw	3
  1826  00207C  140A               	andwf	??_memset^0,w,c
  1827  00207E  6E0C               	movwf	memset@k^0,c
  1828  002080  6A0D               	clrf	(memset@k+1)^0,c
  1829  002082  500C               	movf	memset@k^0,w,c
  1830  002084  260E               	addwf	memset@s^0,f,c
  1831  002086  500D               	movf	(memset@k+1)^0,w,c
  1832  002088  220F               	addwfc	(memset@s+1)^0,f,c
  1833  00208A  500C               	movf	memset@k^0,w,c
  1834  00208C  5E08               	subwf	memset@n^0,f,c
  1835  00208E  500D               	movf	(memset@k+1)^0,w,c
  1836  002090  5A09               	subwfb	(memset@n+1)^0,f,c
  1837  002092  0EFC               	movlw	252
  1838  002094  1608               	andwf	memset@n^0,f,c
  1839  002096  0EFF               	movlw	255
  1840  002098  1609               	andwf	(memset@n+1)^0,f,c
  1841  00209A  EF5A  F010         	goto	l2980
  1842  00209E                     l2974:
  1843  00209E  C00E  FFD9         	movff	memset@s,fsr2l
  1844  0020A2  C00F  FFDA         	movff	memset@s+1,fsr2h
  1845  0020A6  C006  FFDF         	movff	memset@c,indf2
  1846  0020AA  0608               	decf	memset@n^0,f,c
  1847  0020AC  A0D8               	btfss	status,0,c
  1848  0020AE  0609               	decf	(memset@n+1)^0,f,c
  1849  0020B0  4A0E               	infsnz	memset@s^0,f,c
  1850  0020B2  2A0F               	incf	(memset@s+1)^0,f,c
  1851  0020B4                     l2980:
  1852  0020B4  5008               	movf	memset@n^0,w,c
  1853  0020B6  1009               	iorwf	(memset@n+1)^0,w,c
  1854  0020B8  A4D8               	btfss	status,2,c
  1855  0020BA  EF61  F010         	goto	u2711
  1856  0020BE  EF63  F010         	goto	u2710
  1857  0020C2                     u2711:
  1858  0020C2  EF4F  F010         	goto	l2974
  1859  0020C6                     u2710:
  1860  0020C6                     l951:
  1861  0020C6  0012               	return		;funcret
  1862  0020C8                     __end_of_memset:
  1863                           	callstack 0
  1864                           
  1865 ;; *************** function _adcGetValue *****************
  1866 ;; Defined at:
  1867 ;;		line 42 in file "adc.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  PinADC          1    wreg     unsigned char 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  PinADC          1    6[COMRAM] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  2    3[COMRAM] unsigned short 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1881 ;;      Params:         2       0       0       0       0       0       0       0       0
  1882 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1883 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1884 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1885 ;;Total ram usage:        4 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    2
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_appADC
  1892 ;;		_appBat
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text8
  1897  002F3C                     __ptext8:
  1898                           	callstack 0
  1899  002F3C                     _adcGetValue:
  1900                           	callstack 26
  1901                           
  1902                           ;incstack = 0
  1903                           ;adcGetValue@PinADC stored from wreg
  1904  002F3C  6E07               	movwf	adcGetValue@PinADC^0,c
  1905  002F3E                     
  1906                           ;adc.c: 42: uint16_t adcGetValue(uint8_t PinADC);adc.c: 43: {;adc.c: 44:     ADCON0bits.
      +                          CHS = PinADC;
  1907  002F3E  C007  F006         	movff	adcGetValue@PinADC,??_adcGetValue
  1908  002F42  4606               	rlncf	??_adcGetValue^0,f,c
  1909  002F44  4606               	rlncf	??_adcGetValue^0,f,c
  1910  002F46  50C2               	movf	194,w,c	;volatile
  1911  002F48  1806               	xorwf	??_adcGetValue^0,w,c
  1912  002F4A  0BC3               	andlw	-61
  1913  002F4C  1806               	xorwf	??_adcGetValue^0,w,c
  1914  002F4E  6EC2               	movwf	194,c	;volatile
  1915  002F50                     
  1916                           ;adc.c: 45:     _delay((unsigned long)((2)*(12000000/4000.0)));
  1917  002F50  0E08               	movlw	8
  1918  002F52  6E06               	movwf	??_adcGetValue^0,c
  1919  002F54  0ECA               	movlw	202
  1920  002F56                     u4507:
  1921  002F56  2EE8               	decfsz	wreg,f,c
  1922  002F58  D7FE               	bra	u4507
  1923  002F5A  2E06               	decfsz	??_adcGetValue^0,f,c
  1924  002F5C  D7FC               	bra	u4507
  1925  002F5E                     
  1926                           ;adc.c: 46:     GO_nDONE = 1;
  1927  002F5E  82C2               	bsf	4034,1,c	;volatile
  1928  002F60                     l26:
  1929                           
  1930                           ;adc.c: 47:     while(ADCON0bits.GO_DONE)
  1931  002F60  B2C2               	btfsc	194,1,c	;volatile
  1932  002F62  EFB5  F017         	goto	u2661
  1933  002F66  EFB7  F017         	goto	u2660
  1934  002F6A                     u2661:
  1935  002F6A  EFB0  F017         	goto	l26
  1936  002F6E                     u2660:
  1937  002F6E                     
  1938                           ;adc.c: 50:     return ADRES;
  1939  002F6E  CFC3 F004          	movff	4035,?_adcGetValue	;volatile
  1940  002F72  CFC4 F005          	movff	4036,?_adcGetValue+1	;volatile
  1941  002F76  0012               	return		;funcret
  1942  002F78                     __end_of_adcGetValue:
  1943                           	callstack 0
  1944                           
  1945 ;; *************** function ___xxtofl *****************
  1946 ;; Defined at:
  1947 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  sign            1    wreg     unsigned char 
  1950 ;;  val             4    7[COMRAM] long 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  sign            1   15[COMRAM] unsigned char 
  1953 ;;  arg             4   17[COMRAM] unsigned long 
  1954 ;;  exp             1   16[COMRAM] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  4    7[COMRAM] unsigned char 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1964 ;;      Params:         4       0       0       0       0       0       0       0       0
  1965 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1966 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1967 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1968 ;;Total ram usage:       14 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    2
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_appADC
  1975 ;;		_appBat
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text9
  1980  001A86                     __ptext9:
  1981                           	callstack 0
  1982  001A86                     ___xxtofl:
  1983                           	callstack 26
  1984                           
  1985                           ;incstack = 0
  1986                           ;___xxtofl@sign stored from wreg
  1987  001A86  6E10               	movwf	___xxtofl@sign^0,c
  1988  001A88  5010               	movf	___xxtofl@sign^0,w,c
  1989  001A8A  B4D8               	btfsc	status,2,c
  1990  001A8C  EF4A  F00D         	goto	u3311
  1991  001A90  EF4C  F00D         	goto	u3310
  1992  001A94                     u3311:
  1993  001A94  EF6E  F00D         	goto	l931
  1994  001A98                     u3310:
  1995  001A98  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  1996  001A9A  EF53  F00D         	goto	u3320
  1997  001A9E  EF51  F00D         	goto	u3321
  1998  001AA2                     u3321:
  1999  001AA2  EF6E  F00D         	goto	l931
  2000  001AA6                     u3320:
  2001  001AA6  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  2002  001AAA  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  2003  001AAE  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  2004  001AB2  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  2005  001AB6  1E0C               	comf	??___xxtofl^0,f,c
  2006  001AB8  1E0D               	comf	(??___xxtofl+1)^0,f,c
  2007  001ABA  1E0E               	comf	(??___xxtofl+2)^0,f,c
  2008  001ABC  1E0F               	comf	(??___xxtofl+3)^0,f,c
  2009  001ABE  2A0C               	incf	??___xxtofl^0,f,c
  2010  001AC0  0E00               	movlw	0
  2011  001AC2  220D               	addwfc	(??___xxtofl+1)^0,f,c
  2012  001AC4  220E               	addwfc	(??___xxtofl+2)^0,f,c
  2013  001AC6  220F               	addwfc	(??___xxtofl+3)^0,f,c
  2014  001AC8  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  2015  001ACC  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  2016  001AD0  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  2017  001AD4  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  2018  001AD8  EF76  F00D         	goto	l3432
  2019  001ADC                     l931:
  2020  001ADC  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  2021  001AE0  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2022  001AE4  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2023  001AE8  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2024  001AEC                     l3432:
  2025  001AEC  5008               	movf	___xxtofl@val^0,w,c
  2026  001AEE  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  2027  001AF0  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  2028  001AF2  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  2029  001AF4  A4D8               	btfss	status,2,c
  2030  001AF6  EF7F  F00D         	goto	u3331
  2031  001AFA  EF81  F00D         	goto	u3330
  2032  001AFE                     u3331:
  2033  001AFE  EF8B  F00D         	goto	l3438
  2034  001B02                     u3330:
  2035  001B02  0E00               	movlw	0
  2036  001B04  6E08               	movwf	?___xxtofl^0,c
  2037  001B06  0E00               	movlw	0
  2038  001B08  6E09               	movwf	(?___xxtofl+1)^0,c
  2039  001B0A  0E00               	movlw	0
  2040  001B0C  6E0A               	movwf	(?___xxtofl+2)^0,c
  2041  001B0E  0E00               	movlw	0
  2042  001B10  6E0B               	movwf	(?___xxtofl+3)^0,c
  2043  001B12  EF1C  F00E         	goto	l934
  2044  001B16                     l3438:
  2045  001B16  0E96               	movlw	150
  2046  001B18  6E11               	movwf	___xxtofl@exp^0,c
  2047  001B1A  EF95  F00D         	goto	l3442
  2048  001B1E                     l3440:
  2049  001B1E  2A11               	incf	___xxtofl@exp^0,f,c
  2050  001B20  90D8               	bcf	status,0,c
  2051  001B22  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2052  001B24  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2053  001B26  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2054  001B28  3212               	rrcf	___xxtofl@arg^0,f,c
  2055  001B2A                     l3442:
  2056  001B2A  0E00               	movlw	0
  2057  001B2C  1412               	andwf	___xxtofl@arg^0,w,c
  2058  001B2E  6E0C               	movwf	??___xxtofl^0,c
  2059  001B30  0E00               	movlw	0
  2060  001B32  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2061  001B34  6E0D               	movwf	(??___xxtofl+1)^0,c
  2062  001B36  0E00               	movlw	0
  2063  001B38  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2064  001B3A  6E0E               	movwf	(??___xxtofl+2)^0,c
  2065  001B3C  0EFE               	movlw	254
  2066  001B3E  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2067  001B40  6E0F               	movwf	(??___xxtofl+3)^0,c
  2068  001B42  500C               	movf	??___xxtofl^0,w,c
  2069  001B44  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2070  001B46  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2071  001B48  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2072  001B4A  A4D8               	btfss	status,2,c
  2073  001B4C  EFAA  F00D         	goto	u3341
  2074  001B50  EFAC  F00D         	goto	u3340
  2075  001B54                     u3341:
  2076  001B54  EF8F  F00D         	goto	l3440
  2077  001B58                     u3340:
  2078  001B58  EFBA  F00D         	goto	l938
  2079  001B5C                     l3444:
  2080  001B5C  2A11               	incf	___xxtofl@exp^0,f,c
  2081  001B5E  0E01               	movlw	1
  2082  001B60  2612               	addwf	___xxtofl@arg^0,f,c
  2083  001B62  0E00               	movlw	0
  2084  001B64  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  2085  001B66  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  2086  001B68  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  2087  001B6A  90D8               	bcf	status,0,c
  2088  001B6C  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2089  001B6E  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2090  001B70  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2091  001B72  3212               	rrcf	___xxtofl@arg^0,f,c
  2092  001B74                     l938:
  2093  001B74  0E00               	movlw	0
  2094  001B76  1412               	andwf	___xxtofl@arg^0,w,c
  2095  001B78  6E0C               	movwf	??___xxtofl^0,c
  2096  001B7A  0E00               	movlw	0
  2097  001B7C  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2098  001B7E  6E0D               	movwf	(??___xxtofl+1)^0,c
  2099  001B80  0E00               	movlw	0
  2100  001B82  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2101  001B84  6E0E               	movwf	(??___xxtofl+2)^0,c
  2102  001B86  0EFF               	movlw	255
  2103  001B88  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2104  001B8A  6E0F               	movwf	(??___xxtofl+3)^0,c
  2105  001B8C  500C               	movf	??___xxtofl^0,w,c
  2106  001B8E  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2107  001B90  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2108  001B92  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2109  001B94  A4D8               	btfss	status,2,c
  2110  001B96  EFCF  F00D         	goto	u3351
  2111  001B9A  EFD1  F00D         	goto	u3350
  2112  001B9E                     u3351:
  2113  001B9E  EFAE  F00D         	goto	l3444
  2114  001BA2                     u3350:
  2115  001BA2  EFD9  F00D         	goto	l3452
  2116  001BA6                     l3450:
  2117  001BA6  0611               	decf	___xxtofl@exp^0,f,c
  2118  001BA8  90D8               	bcf	status,0,c
  2119  001BAA  3612               	rlcf	___xxtofl@arg^0,f,c
  2120  001BAC  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  2121  001BAE  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  2122  001BB0  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  2123  001BB2                     l3452:
  2124  001BB2  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  2125  001BB4  EFDE  F00D         	goto	u3361
  2126  001BB8  EFE0  F00D         	goto	u3360
  2127  001BBC                     u3361:
  2128  001BBC  EFE8  F00D         	goto	l945
  2129  001BC0                     u3360:
  2130  001BC0  0E02               	movlw	2
  2131  001BC2  6011               	cpfslt	___xxtofl@exp^0,c
  2132  001BC4  EFE6  F00D         	goto	u3371
  2133  001BC8  EFE8  F00D         	goto	u3370
  2134  001BCC                     u3371:
  2135  001BCC  EFD3  F00D         	goto	l3450
  2136  001BD0                     u3370:
  2137  001BD0                     l945:
  2138  001BD0  B011               	btfsc	___xxtofl@exp^0,0,c
  2139  001BD2  EFED  F00D         	goto	u3381
  2140  001BD6  EFEF  F00D         	goto	u3380
  2141  001BDA                     u3381:
  2142  001BDA  EFF0  F00D         	goto	l3458
  2143  001BDE                     u3380:
  2144  001BDE  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  2145  001BE0                     l3458:
  2146  001BE0  90D8               	bcf	status,0,c
  2147  001BE2  3211               	rrcf	___xxtofl@exp^0,f,c
  2148  001BE4  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  2149  001BE8  6A0D               	clrf	(??___xxtofl+1)^0,c
  2150  001BEA  6A0E               	clrf	(??___xxtofl+2)^0,c
  2151  001BEC  6A0F               	clrf	(??___xxtofl+3)^0,c
  2152  001BEE  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  2153  001BF2  6A0E               	clrf	(??___xxtofl+2)^0,c
  2154  001BF4  6A0D               	clrf	(??___xxtofl+1)^0,c
  2155  001BF6  6A0C               	clrf	??___xxtofl^0,c
  2156  001BF8  500C               	movf	??___xxtofl^0,w,c
  2157  001BFA  1212               	iorwf	___xxtofl@arg^0,f,c
  2158  001BFC  500D               	movf	(??___xxtofl+1)^0,w,c
  2159  001BFE  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  2160  001C00  500E               	movf	(??___xxtofl+2)^0,w,c
  2161  001C02  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  2162  001C04  500F               	movf	(??___xxtofl+3)^0,w,c
  2163  001C06  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  2164  001C08  5010               	movf	___xxtofl@sign^0,w,c
  2165  001C0A  B4D8               	btfsc	status,2,c
  2166  001C0C  EF0A  F00E         	goto	u3391
  2167  001C10  EF0C  F00E         	goto	u3390
  2168  001C14                     u3391:
  2169  001C14  EF14  F00E         	goto	l3468
  2170  001C18                     u3390:
  2171  001C18  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2172  001C1A  EF13  F00E         	goto	u3400
  2173  001C1E  EF11  F00E         	goto	u3401
  2174  001C22                     u3401:
  2175  001C22  EF14  F00E         	goto	l3468
  2176  001C26                     u3400:
  2177  001C26  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  2178  001C28                     l3468:
  2179  001C28  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  2180  001C2C  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  2181  001C30  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  2182  001C34  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  2183  001C38                     l934:
  2184  001C38  0012               	return		;funcret
  2185  001C3A                     __end_of___xxtofl:
  2186                           	callstack 0
  2187                           
  2188 ;; *************** function ___fltol *****************
  2189 ;; Defined at:
  2190 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  f1              4   71[COMRAM] unsigned char 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  exp1            1   80[COMRAM] unsigned char 
  2195 ;;  sign1           1   79[COMRAM] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  4   71[COMRAM] long 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2205 ;;      Params:         4       0       0       0       0       0       0       0       0
  2206 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2207 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2208 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2209 ;;Total ram usage:       10 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    2
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_appADC
  2216 ;;		_appBat
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text10
  2221  0025E8                     __ptext10:
  2222                           	callstack 0
  2223  0025E8                     ___fltol:
  2224                           	callstack 26
  2225  0025E8  344A               	rlcf	(___fltol@f1+2)^0,w,c
  2226  0025EA  344B               	rlcf	(___fltol@f1+3)^0,w,c
  2227  0025EC  6E51               	movwf	___fltol@exp1^0,c
  2228  0025EE  5051               	movf	___fltol@exp1^0,w,c
  2229  0025F0  A4D8               	btfss	status,2,c
  2230  0025F2  EFFD  F012         	goto	u3241
  2231  0025F6  EFFF  F012         	goto	u3240
  2232  0025FA                     u3241:
  2233  0025FA  EF09  F013         	goto	l3388
  2234  0025FE                     u3240:
  2235  0025FE                     l3384:
  2236  0025FE  0E00               	movlw	0
  2237  002600  6E48               	movwf	?___fltol^0,c
  2238  002602  0E00               	movlw	0
  2239  002604  6E49               	movwf	(?___fltol+1)^0,c
  2240  002606  0E00               	movlw	0
  2241  002608  6E4A               	movwf	(?___fltol+2)^0,c
  2242  00260A  0E00               	movlw	0
  2243  00260C  6E4B               	movwf	(?___fltol+3)^0,c
  2244  00260E  EF76  F013         	goto	l573
  2245  002612                     l3388:
  2246  002612  C048  F04C         	movff	___fltol@f1,??___fltol
  2247  002616  C049  F04D         	movff	___fltol@f1+1,??___fltol+1
  2248  00261A  C04A  F04E         	movff	___fltol@f1+2,??___fltol+2
  2249  00261E  C04B  F04F         	movff	___fltol@f1+3,??___fltol+3
  2250  002622  0E20               	movlw	32
  2251  002624  EF19  F013         	goto	u3250
  2252  002628                     u3255:
  2253  002628  90D8               	bcf	status,0,c
  2254  00262A  324F               	rrcf	(??___fltol+3)^0,f,c
  2255  00262C  324E               	rrcf	(??___fltol+2)^0,f,c
  2256  00262E  324D               	rrcf	(??___fltol+1)^0,f,c
  2257  002630  324C               	rrcf	??___fltol^0,f,c
  2258  002632                     u3250:
  2259  002632  2EE8               	decfsz	wreg,f,c
  2260  002634  EF14  F013         	goto	u3255
  2261  002638  504C               	movf	??___fltol^0,w,c
  2262  00263A  6E50               	movwf	___fltol@sign1^0,c
  2263  00263C  8E4A               	bsf	(___fltol@f1+2)^0,7,c
  2264  00263E  0EFF               	movlw	255
  2265  002640  1648               	andwf	___fltol@f1^0,f,c
  2266  002642  0EFF               	movlw	255
  2267  002644  1649               	andwf	(___fltol@f1+1)^0,f,c
  2268  002646  0EFF               	movlw	255
  2269  002648  164A               	andwf	(___fltol@f1+2)^0,f,c
  2270  00264A  0E00               	movlw	0
  2271  00264C  164B               	andwf	(___fltol@f1+3)^0,f,c
  2272  00264E  0E96               	movlw	150
  2273  002650  5E51               	subwf	___fltol@exp1^0,f,c
  2274  002652  BE51               	btfsc	___fltol@exp1^0,7,c
  2275  002654  EF30  F013         	goto	u3260
  2276  002658  EF2E  F013         	goto	u3261
  2277  00265C                     u3261:
  2278  00265C  EF46  F013         	goto	l3408
  2279  002660                     u3260:
  2280  002660  5051               	movf	___fltol@exp1^0,w,c
  2281  002662  0A80               	xorlw	128
  2282  002664  0F97               	addlw	151
  2283  002666  B0D8               	btfsc	status,0,c
  2284  002668  EF38  F013         	goto	u3271
  2285  00266C  EF3A  F013         	goto	u3270
  2286  002670                     u3271:
  2287  002670  EF3C  F013         	goto	l3404
  2288  002674                     u3270:
  2289  002674  EFFF  F012         	goto	l3384
  2290  002678                     l3404:
  2291  002678  90D8               	bcf	status,0,c
  2292  00267A  324B               	rrcf	(___fltol@f1+3)^0,f,c
  2293  00267C  324A               	rrcf	(___fltol@f1+2)^0,f,c
  2294  00267E  3249               	rrcf	(___fltol@f1+1)^0,f,c
  2295  002680  3248               	rrcf	___fltol@f1^0,f,c
  2296  002682  3E51               	incfsz	___fltol@exp1^0,f,c
  2297  002684  EF3C  F013         	goto	l3404
  2298  002688  EF5E  F013         	goto	l3418
  2299  00268C                     l3408:
  2300  00268C  0E1F               	movlw	31
  2301  00268E  6451               	cpfsgt	___fltol@exp1^0,c
  2302  002690  EF4C  F013         	goto	u3281
  2303  002694  EF4E  F013         	goto	u3280
  2304  002698                     u3281:
  2305  002698  EF56  F013         	goto	l3416
  2306  00269C                     u3280:
  2307  00269C  EFFF  F012         	goto	l3384
  2308  0026A0                     l3414:
  2309  0026A0  90D8               	bcf	status,0,c
  2310  0026A2  3648               	rlcf	___fltol@f1^0,f,c
  2311  0026A4  3649               	rlcf	(___fltol@f1+1)^0,f,c
  2312  0026A6  364A               	rlcf	(___fltol@f1+2)^0,f,c
  2313  0026A8  364B               	rlcf	(___fltol@f1+3)^0,f,c
  2314  0026AA  0651               	decf	___fltol@exp1^0,f,c
  2315  0026AC                     l3416:
  2316  0026AC  5051               	movf	___fltol@exp1^0,w,c
  2317  0026AE  A4D8               	btfss	status,2,c
  2318  0026B0  EF5C  F013         	goto	u3291
  2319  0026B4  EF5E  F013         	goto	u3290
  2320  0026B8                     u3291:
  2321  0026B8  EF50  F013         	goto	l3414
  2322  0026BC                     u3290:
  2323  0026BC                     l3418:
  2324  0026BC  5050               	movf	___fltol@sign1^0,w,c
  2325  0026BE  B4D8               	btfsc	status,2,c
  2326  0026C0  EF64  F013         	goto	u3301
  2327  0026C4  EF66  F013         	goto	u3300
  2328  0026C8                     u3301:
  2329  0026C8  EF6E  F013         	goto	l3422
  2330  0026CC                     u3300:
  2331  0026CC  1E4B               	comf	(___fltol@f1+3)^0,f,c
  2332  0026CE  1E4A               	comf	(___fltol@f1+2)^0,f,c
  2333  0026D0  1E49               	comf	(___fltol@f1+1)^0,f,c
  2334  0026D2  6C48               	negf	___fltol@f1^0,c
  2335  0026D4  0E00               	movlw	0
  2336  0026D6  2249               	addwfc	(___fltol@f1+1)^0,f,c
  2337  0026D8  224A               	addwfc	(___fltol@f1+2)^0,f,c
  2338  0026DA  224B               	addwfc	(___fltol@f1+3)^0,f,c
  2339  0026DC                     l3422:
  2340  0026DC  C048  F048         	movff	___fltol@f1,?___fltol
  2341  0026E0  C049  F049         	movff	___fltol@f1+1,?___fltol+1
  2342  0026E4  C04A  F04A         	movff	___fltol@f1+2,?___fltol+2
  2343  0026E8  C04B  F04B         	movff	___fltol@f1+3,?___fltol+3
  2344  0026EC                     l573:
  2345  0026EC  0012               	return		;funcret
  2346  0026EE                     __end_of___fltol:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function ___flmul *****************
  2350 ;; Defined at:
  2351 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  b               4   21[COMRAM] long 
  2354 ;;  a               4   25[COMRAM] long 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  prod            4   40[COMRAM] struct .
  2357 ;;  grs             4   34[COMRAM] unsigned long 
  2358 ;;  temp            2   44[COMRAM] struct .
  2359 ;;  bexp            1   39[COMRAM] unsigned char 
  2360 ;;  aexp            1   38[COMRAM] unsigned char 
  2361 ;;  sign            1   33[COMRAM] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  4   21[COMRAM] unsigned char 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, prodl, prodh
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2371 ;;      Params:         8       0       0       0       0       0       0       0       0
  2372 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2373 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2374 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2375 ;;Total ram usage:       25 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    2
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_appADC
  2382 ;;		_appBat
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text11
  2387  000834                     __ptext11:
  2388                           	callstack 0
  2389  000834                     ___flmul:
  2390                           	callstack 26
  2391  000834  5019               	movf	(___flmul@b+3)^0,w,c
  2392  000836  0B80               	andlw	128
  2393  000838  6E22               	movwf	___flmul@sign^0,c
  2394  00083A  5019               	movf	(___flmul@b+3)^0,w,c
  2395  00083C  2419               	addwf	(___flmul@b+3)^0,w,c
  2396  00083E  6E28               	movwf	___flmul@bexp^0,c
  2397  000840  AE18               	btfss	(___flmul@b+2)^0,7,c
  2398  000842  EF25  F004         	goto	u2991
  2399  000846  EF27  F004         	goto	u2990
  2400  00084A                     u2991:
  2401  00084A  EF28  F004         	goto	l3222
  2402  00084E                     u2990:
  2403  00084E  8028               	bsf	___flmul@bexp^0,0,c
  2404  000850                     l3222:
  2405  000850  5028               	movf	___flmul@bexp^0,w,c
  2406  000852  B4D8               	btfsc	status,2,c
  2407  000854  EF2E  F004         	goto	u3001
  2408  000858  EF30  F004         	goto	u3000
  2409  00085C                     u3001:
  2410  00085C  EF43  F004         	goto	l3230
  2411  000860                     u3000:
  2412  000860  2828               	incf	___flmul@bexp^0,w,c
  2413  000862  A4D8               	btfss	status,2,c
  2414  000864  EF36  F004         	goto	u3011
  2415  000868  EF38  F004         	goto	u3010
  2416  00086C                     u3011:
  2417  00086C  EF40  F004         	goto	l3228
  2418  000870                     u3010:
  2419  000870  0E00               	movlw	0
  2420  000872  6E16               	movwf	___flmul@b^0,c
  2421  000874  0E00               	movlw	0
  2422  000876  6E17               	movwf	(___flmul@b+1)^0,c
  2423  000878  0E00               	movlw	0
  2424  00087A  6E18               	movwf	(___flmul@b+2)^0,c
  2425  00087C  0E00               	movlw	0
  2426  00087E  6E19               	movwf	(___flmul@b+3)^0,c
  2427  000880                     l3228:
  2428  000880  8E18               	bsf	(___flmul@b+2)^0,7,c
  2429  000882  EF4B  F004         	goto	l3232
  2430  000886                     l3230:
  2431  000886  0E00               	movlw	0
  2432  000888  6E16               	movwf	___flmul@b^0,c
  2433  00088A  0E00               	movlw	0
  2434  00088C  6E17               	movwf	(___flmul@b+1)^0,c
  2435  00088E  0E00               	movlw	0
  2436  000890  6E18               	movwf	(___flmul@b+2)^0,c
  2437  000892  0E00               	movlw	0
  2438  000894  6E19               	movwf	(___flmul@b+3)^0,c
  2439  000896                     l3232:
  2440  000896  501D               	movf	(___flmul@a+3)^0,w,c
  2441  000898  0B80               	andlw	128
  2442  00089A  1A22               	xorwf	___flmul@sign^0,f,c
  2443  00089C  501D               	movf	(___flmul@a+3)^0,w,c
  2444  00089E  241D               	addwf	(___flmul@a+3)^0,w,c
  2445  0008A0  6E27               	movwf	___flmul@aexp^0,c
  2446  0008A2  AE1C               	btfss	(___flmul@a+2)^0,7,c
  2447  0008A4  EF56  F004         	goto	u3021
  2448  0008A8  EF58  F004         	goto	u3020
  2449  0008AC                     u3021:
  2450  0008AC  EF59  F004         	goto	l3240
  2451  0008B0                     u3020:
  2452  0008B0  8027               	bsf	___flmul@aexp^0,0,c
  2453  0008B2                     l3240:
  2454  0008B2  5027               	movf	___flmul@aexp^0,w,c
  2455  0008B4  B4D8               	btfsc	status,2,c
  2456  0008B6  EF5F  F004         	goto	u3031
  2457  0008BA  EF61  F004         	goto	u3030
  2458  0008BE                     u3031:
  2459  0008BE  EF74  F004         	goto	l3248
  2460  0008C2                     u3030:
  2461  0008C2  2827               	incf	___flmul@aexp^0,w,c
  2462  0008C4  A4D8               	btfss	status,2,c
  2463  0008C6  EF67  F004         	goto	u3041
  2464  0008CA  EF69  F004         	goto	u3040
  2465  0008CE                     u3041:
  2466  0008CE  EF71  F004         	goto	l3246
  2467  0008D2                     u3040:
  2468  0008D2  0E00               	movlw	0
  2469  0008D4  6E1A               	movwf	___flmul@a^0,c
  2470  0008D6  0E00               	movlw	0
  2471  0008D8  6E1B               	movwf	(___flmul@a+1)^0,c
  2472  0008DA  0E00               	movlw	0
  2473  0008DC  6E1C               	movwf	(___flmul@a+2)^0,c
  2474  0008DE  0E00               	movlw	0
  2475  0008E0  6E1D               	movwf	(___flmul@a+3)^0,c
  2476  0008E2                     l3246:
  2477  0008E2  8E1C               	bsf	(___flmul@a+2)^0,7,c
  2478  0008E4  EF7C  F004         	goto	l890
  2479  0008E8                     l3248:
  2480  0008E8  0E00               	movlw	0
  2481  0008EA  6E1A               	movwf	___flmul@a^0,c
  2482  0008EC  0E00               	movlw	0
  2483  0008EE  6E1B               	movwf	(___flmul@a+1)^0,c
  2484  0008F0  0E00               	movlw	0
  2485  0008F2  6E1C               	movwf	(___flmul@a+2)^0,c
  2486  0008F4  0E00               	movlw	0
  2487  0008F6  6E1D               	movwf	(___flmul@a+3)^0,c
  2488  0008F8                     l890:
  2489  0008F8  5027               	movf	___flmul@aexp^0,w,c
  2490  0008FA  B4D8               	btfsc	status,2,c
  2491  0008FC  EF82  F004         	goto	u3051
  2492  000900  EF84  F004         	goto	u3050
  2493  000904                     u3051:
  2494  000904  EF8C  F004         	goto	l3252
  2495  000908                     u3050:
  2496  000908  5028               	movf	___flmul@bexp^0,w,c
  2497  00090A  A4D8               	btfss	status,2,c
  2498  00090C  EF8A  F004         	goto	u3061
  2499  000910  EF8C  F004         	goto	u3060
  2500  000914                     u3061:
  2501  000914  EF96  F004         	goto	l3256
  2502  000918                     u3060:
  2503  000918                     l3252:
  2504  000918  0E00               	movlw	0
  2505  00091A  6E16               	movwf	?___flmul^0,c
  2506  00091C  0E00               	movlw	0
  2507  00091E  6E17               	movwf	(?___flmul+1)^0,c
  2508  000920  0E00               	movlw	0
  2509  000922  6E18               	movwf	(?___flmul+2)^0,c
  2510  000924  0E00               	movlw	0
  2511  000926  6E19               	movwf	(?___flmul+3)^0,c
  2512  000928  EF2E  F006         	goto	l894
  2513  00092C                     l3256:
  2514  00092C  501C               	movf	(___flmul@a+2)^0,w,c
  2515  00092E  0216               	mulwf	___flmul@b^0,c
  2516  000930  CFF3 F02D          	movff	prodl,___flmul@temp
  2517  000934  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2518  000938  502D               	movf	___flmul@temp^0,w,c
  2519  00093A  6E23               	movwf	___flmul@grs^0,c
  2520  00093C  6A24               	clrf	(___flmul@grs+1)^0,c
  2521  00093E  6A25               	clrf	(___flmul@grs+2)^0,c
  2522  000940  6A26               	clrf	(___flmul@grs+3)^0,c
  2523  000942  502E               	movf	(___flmul@temp+1)^0,w,c
  2524  000944  6E29               	movwf	___flmul@prod^0,c
  2525  000946  6A2A               	clrf	(___flmul@prod+1)^0,c
  2526  000948  6A2B               	clrf	(___flmul@prod+2)^0,c
  2527  00094A  6A2C               	clrf	(___flmul@prod+3)^0,c
  2528  00094C  501B               	movf	(___flmul@a+1)^0,w,c
  2529  00094E  0217               	mulwf	(___flmul@b+1)^0,c
  2530  000950  CFF3 F02D          	movff	prodl,___flmul@temp
  2531  000954  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2532  000958  502D               	movf	___flmul@temp^0,w,c
  2533  00095A  2623               	addwf	___flmul@grs^0,f,c
  2534  00095C  0E00               	movlw	0
  2535  00095E  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2536  000960  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2537  000962  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2538  000964  502E               	movf	(___flmul@temp+1)^0,w,c
  2539  000966  2629               	addwf	___flmul@prod^0,f,c
  2540  000968  0E00               	movlw	0
  2541  00096A  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2542  00096C  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2543  00096E  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2544  000970  501A               	movf	___flmul@a^0,w,c
  2545  000972  0218               	mulwf	(___flmul@b+2)^0,c
  2546  000974  CFF3 F02D          	movff	prodl,___flmul@temp
  2547  000978  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2548  00097C  502D               	movf	___flmul@temp^0,w,c
  2549  00097E  2623               	addwf	___flmul@grs^0,f,c
  2550  000980  0E00               	movlw	0
  2551  000982  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2552  000984  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2553  000986  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2554  000988  502E               	movf	(___flmul@temp+1)^0,w,c
  2555  00098A  2629               	addwf	___flmul@prod^0,f,c
  2556  00098C  0E00               	movlw	0
  2557  00098E  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2558  000990  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2559  000992  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2560  000994  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2561  000998  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2562  00099C  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2563  0009A0  6A23               	clrf	___flmul@grs^0,c
  2564  0009A2  501A               	movf	___flmul@a^0,w,c
  2565  0009A4  0217               	mulwf	(___flmul@b+1)^0,c
  2566  0009A6  CFF3 F02D          	movff	prodl,___flmul@temp
  2567  0009AA  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2568  0009AE  502D               	movf	___flmul@temp^0,w,c
  2569  0009B0  2623               	addwf	___flmul@grs^0,f,c
  2570  0009B2  502E               	movf	(___flmul@temp+1)^0,w,c
  2571  0009B4  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2572  0009B6  0E00               	movlw	0
  2573  0009B8  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2574  0009BA  0E00               	movlw	0
  2575  0009BC  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2576  0009BE  501B               	movf	(___flmul@a+1)^0,w,c
  2577  0009C0  0216               	mulwf	___flmul@b^0,c
  2578  0009C2  CFF3 F02D          	movff	prodl,___flmul@temp
  2579  0009C6  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2580  0009CA  502D               	movf	___flmul@temp^0,w,c
  2581  0009CC  2623               	addwf	___flmul@grs^0,f,c
  2582  0009CE  502E               	movf	(___flmul@temp+1)^0,w,c
  2583  0009D0  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2584  0009D2  0E00               	movlw	0
  2585  0009D4  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2586  0009D6  0E00               	movlw	0
  2587  0009D8  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2588  0009DA  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2589  0009DE  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2590  0009E2  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2591  0009E6  6A23               	clrf	___flmul@grs^0,c
  2592  0009E8  501A               	movf	___flmul@a^0,w,c
  2593  0009EA  0216               	mulwf	___flmul@b^0,c
  2594  0009EC  CFF3 F02D          	movff	prodl,___flmul@temp
  2595  0009F0  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2596  0009F4  502D               	movf	___flmul@temp^0,w,c
  2597  0009F6  2623               	addwf	___flmul@grs^0,f,c
  2598  0009F8  502E               	movf	(___flmul@temp+1)^0,w,c
  2599  0009FA  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2600  0009FC  0E00               	movlw	0
  2601  0009FE  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2602  000A00  0E00               	movlw	0
  2603  000A02  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2604  000A04  501C               	movf	(___flmul@a+2)^0,w,c
  2605  000A06  0217               	mulwf	(___flmul@b+1)^0,c
  2606  000A08  CFF3 F02D          	movff	prodl,___flmul@temp
  2607  000A0C  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2608  000A10  502D               	movf	___flmul@temp^0,w,c
  2609  000A12  2629               	addwf	___flmul@prod^0,f,c
  2610  000A14  502E               	movf	(___flmul@temp+1)^0,w,c
  2611  000A16  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2612  000A18  0E00               	movlw	0
  2613  000A1A  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2614  000A1C  0E00               	movlw	0
  2615  000A1E  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2616  000A20  501B               	movf	(___flmul@a+1)^0,w,c
  2617  000A22  0218               	mulwf	(___flmul@b+2)^0,c
  2618  000A24  CFF3 F02D          	movff	prodl,___flmul@temp
  2619  000A28  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2620  000A2C  502D               	movf	___flmul@temp^0,w,c
  2621  000A2E  2629               	addwf	___flmul@prod^0,f,c
  2622  000A30  502E               	movf	(___flmul@temp+1)^0,w,c
  2623  000A32  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2624  000A34  0E00               	movlw	0
  2625  000A36  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2626  000A38  0E00               	movlw	0
  2627  000A3A  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2628  000A3C  501C               	movf	(___flmul@a+2)^0,w,c
  2629  000A3E  0218               	mulwf	(___flmul@b+2)^0,c
  2630  000A40  CFF3 F02D          	movff	prodl,___flmul@temp
  2631  000A44  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2632  000A48  502D               	movf	___flmul@temp^0,w,c
  2633  000A4A  6E1E               	movwf	??___flmul^0,c
  2634  000A4C  502E               	movf	(___flmul@temp+1)^0,w,c
  2635  000A4E  6E1F               	movwf	(??___flmul+1)^0,c
  2636  000A50  6A20               	clrf	(??___flmul+2)^0,c
  2637  000A52  6A21               	clrf	(??___flmul+3)^0,c
  2638  000A54  C020  F021         	movff	??___flmul+2,??___flmul+3
  2639  000A58  C01F  F020         	movff	??___flmul+1,??___flmul+2
  2640  000A5C  C01E  F01F         	movff	??___flmul,??___flmul+1
  2641  000A60  6A1E               	clrf	??___flmul^0,c
  2642  000A62  501E               	movf	??___flmul^0,w,c
  2643  000A64  2629               	addwf	___flmul@prod^0,f,c
  2644  000A66  501F               	movf	(??___flmul+1)^0,w,c
  2645  000A68  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2646  000A6A  5020               	movf	(??___flmul+2)^0,w,c
  2647  000A6C  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2648  000A6E  5021               	movf	(??___flmul+3)^0,w,c
  2649  000A70  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2650  000A72  C023  F01E         	movff	___flmul@grs,??___flmul
  2651  000A76  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  2652  000A7A  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  2653  000A7E  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  2654  000A82  0E19               	movlw	25
  2655  000A84  EF49  F005         	goto	u3070
  2656  000A88                     u3075:
  2657  000A88  90D8               	bcf	status,0,c
  2658  000A8A  3221               	rrcf	(??___flmul+3)^0,f,c
  2659  000A8C  3220               	rrcf	(??___flmul+2)^0,f,c
  2660  000A8E  321F               	rrcf	(??___flmul+1)^0,f,c
  2661  000A90  321E               	rrcf	??___flmul^0,f,c
  2662  000A92                     u3070:
  2663  000A92  2EE8               	decfsz	wreg,f,c
  2664  000A94  EF44  F005         	goto	u3075
  2665  000A98  501E               	movf	??___flmul^0,w,c
  2666  000A9A  2629               	addwf	___flmul@prod^0,f,c
  2667  000A9C  501F               	movf	(??___flmul+1)^0,w,c
  2668  000A9E  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2669  000AA0  5020               	movf	(??___flmul+2)^0,w,c
  2670  000AA2  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2671  000AA4  5021               	movf	(??___flmul+3)^0,w,c
  2672  000AA6  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2673  000AA8  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2674  000AAC  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2675  000AB0  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2676  000AB4  6A23               	clrf	___flmul@grs^0,c
  2677  000AB6  5027               	movf	___flmul@aexp^0,w,c
  2678  000AB8  C028  F01E         	movff	___flmul@bexp,??___flmul
  2679  000ABC  6A1F               	clrf	(??___flmul+1)^0,c
  2680  000ABE  261E               	addwf	??___flmul^0,f,c
  2681  000AC0  0E00               	movlw	0
  2682  000AC2  221F               	addwfc	(??___flmul+1)^0,f,c
  2683  000AC4  0E82               	movlw	130
  2684  000AC6  241E               	addwf	??___flmul^0,w,c
  2685  000AC8  6E2D               	movwf	___flmul@temp^0,c
  2686  000ACA  0EFF               	movlw	255
  2687  000ACC  201F               	addwfc	(??___flmul+1)^0,w,c
  2688  000ACE  6E2E               	movwf	(___flmul@temp+1)^0,c
  2689  000AD0  EF7F  F005         	goto	l3304
  2690  000AD4                     l3298:
  2691  000AD4  90D8               	bcf	status,0,c
  2692  000AD6  3629               	rlcf	___flmul@prod^0,f,c
  2693  000AD8  362A               	rlcf	(___flmul@prod+1)^0,f,c
  2694  000ADA  362B               	rlcf	(___flmul@prod+2)^0,f,c
  2695  000ADC  362C               	rlcf	(___flmul@prod+3)^0,f,c
  2696  000ADE  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2697  000AE0  EF74  F005         	goto	u3081
  2698  000AE4  EF76  F005         	goto	u3080
  2699  000AE8                     u3081:
  2700  000AE8  EF77  F005         	goto	l897
  2701  000AEC                     u3080:
  2702  000AEC  8029               	bsf	___flmul@prod^0,0,c
  2703  000AEE                     l897:
  2704  000AEE  90D8               	bcf	status,0,c
  2705  000AF0  3623               	rlcf	___flmul@grs^0,f,c
  2706  000AF2  3624               	rlcf	(___flmul@grs+1)^0,f,c
  2707  000AF4  3625               	rlcf	(___flmul@grs+2)^0,f,c
  2708  000AF6  3626               	rlcf	(___flmul@grs+3)^0,f,c
  2709  000AF8  062D               	decf	___flmul@temp^0,f,c
  2710  000AFA  A0D8               	btfss	status,0,c
  2711  000AFC  062E               	decf	(___flmul@temp+1)^0,f,c
  2712  000AFE                     l3304:
  2713  000AFE  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  2714  000B00  EF84  F005         	goto	u3091
  2715  000B04  EF86  F005         	goto	u3090
  2716  000B08                     u3091:
  2717  000B08  EF6A  F005         	goto	l3298
  2718  000B0C                     u3090:
  2719  000B0C  0E00               	movlw	0
  2720  000B0E  6E27               	movwf	___flmul@aexp^0,c
  2721  000B10  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2722  000B12  EF8D  F005         	goto	u3101
  2723  000B16  EF8F  F005         	goto	u3100
  2724  000B1A                     u3101:
  2725  000B1A  EFB3  F005         	goto	l899
  2726  000B1E                     u3100:
  2727  000B1E  0EFF               	movlw	255
  2728  000B20  1423               	andwf	___flmul@grs^0,w,c
  2729  000B22  6E1E               	movwf	??___flmul^0,c
  2730  000B24  0EFF               	movlw	255
  2731  000B26  1424               	andwf	(___flmul@grs+1)^0,w,c
  2732  000B28  6E1F               	movwf	(??___flmul+1)^0,c
  2733  000B2A  0EFF               	movlw	255
  2734  000B2C  1425               	andwf	(___flmul@grs+2)^0,w,c
  2735  000B2E  6E20               	movwf	(??___flmul+2)^0,c
  2736  000B30  0E7F               	movlw	127
  2737  000B32  1426               	andwf	(___flmul@grs+3)^0,w,c
  2738  000B34  6E21               	movwf	(??___flmul+3)^0,c
  2739  000B36  501E               	movf	??___flmul^0,w,c
  2740  000B38  101F               	iorwf	(??___flmul+1)^0,w,c
  2741  000B3A  1020               	iorwf	(??___flmul+2)^0,w,c
  2742  000B3C  1021               	iorwf	(??___flmul+3)^0,w,c
  2743  000B3E  B4D8               	btfsc	status,2,c
  2744  000B40  EFA4  F005         	goto	u3111
  2745  000B44  EFA6  F005         	goto	u3110
  2746  000B48                     u3111:
  2747  000B48  EFAA  F005         	goto	l900
  2748  000B4C                     u3110:
  2749  000B4C                     l3312:
  2750  000B4C  0E01               	movlw	1
  2751  000B4E  6E27               	movwf	___flmul@aexp^0,c
  2752  000B50  EFB3  F005         	goto	l899
  2753  000B54                     l900:
  2754  000B54  A029               	btfss	___flmul@prod^0,0,c
  2755  000B56  EFAF  F005         	goto	u3121
  2756  000B5A  EFB1  F005         	goto	u3120
  2757  000B5E                     u3121:
  2758  000B5E  EFB3  F005         	goto	l899
  2759  000B62                     u3120:
  2760  000B62  EFA6  F005         	goto	l3312
  2761  000B66                     l899:
  2762  000B66  5027               	movf	___flmul@aexp^0,w,c
  2763  000B68  B4D8               	btfsc	status,2,c
  2764  000B6A  EFB9  F005         	goto	u3131
  2765  000B6E  EFBB  F005         	goto	u3130
  2766  000B72                     u3131:
  2767  000B72  EFDF  F005         	goto	l3324
  2768  000B76                     u3130:
  2769  000B76  0E01               	movlw	1
  2770  000B78  2629               	addwf	___flmul@prod^0,f,c
  2771  000B7A  0E00               	movlw	0
  2772  000B7C  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2773  000B7E  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2774  000B80  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2775  000B82  A02C               	btfss	(___flmul@prod+3)^0,0,c
  2776  000B84  EFC6  F005         	goto	u3141
  2777  000B88  EFC8  F005         	goto	u3140
  2778  000B8C                     u3141:
  2779  000B8C  EFDF  F005         	goto	l3324
  2780  000B90                     u3140:
  2781  000B90  C029  F01E         	movff	___flmul@prod,??___flmul
  2782  000B94  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  2783  000B98  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  2784  000B9C  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  2785  000BA0  3421               	rlcf	(??___flmul+3)^0,w,c
  2786  000BA2  3221               	rrcf	(??___flmul+3)^0,f,c
  2787  000BA4  3220               	rrcf	(??___flmul+2)^0,f,c
  2788  000BA6  321F               	rrcf	(??___flmul+1)^0,f,c
  2789  000BA8  321E               	rrcf	??___flmul^0,f,c
  2790  000BAA  C01E  F029         	movff	??___flmul,___flmul@prod
  2791  000BAE  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  2792  000BB2  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  2793  000BB6  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  2794  000BBA  4A2D               	infsnz	___flmul@temp^0,f,c
  2795  000BBC  2A2E               	incf	(___flmul@temp+1)^0,f,c
  2796  000BBE                     l3324:
  2797  000BBE  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2798  000BC0  EFEA  F005         	goto	u3151
  2799  000BC4  502E               	movf	(___flmul@temp+1)^0,w,c
  2800  000BC6  E108               	bnz	u3150
  2801  000BC8  282D               	incf	___flmul@temp^0,w,c
  2802  000BCA  A0D8               	btfss	status,0,c
  2803  000BCC  EFEA  F005         	goto	u3151
  2804  000BD0  EFEC  F005         	goto	u3150
  2805  000BD4                     u3151:
  2806  000BD4  EFF6  F005         	goto	l3328
  2807  000BD8                     u3150:
  2808  000BD8  0E00               	movlw	0
  2809  000BDA  6E29               	movwf	___flmul@prod^0,c
  2810  000BDC  0E00               	movlw	0
  2811  000BDE  6E2A               	movwf	(___flmul@prod+1)^0,c
  2812  000BE0  0E80               	movlw	128
  2813  000BE2  6E2B               	movwf	(___flmul@prod+2)^0,c
  2814  000BE4  0E7F               	movlw	127
  2815  000BE6  6E2C               	movwf	(___flmul@prod+3)^0,c
  2816  000BE8  EF24  F006         	goto	l3340
  2817  000BEC                     l3328:
  2818  000BEC  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2819  000BEE  EF03  F006         	goto	u3160
  2820  000BF2  502E               	movf	(___flmul@temp+1)^0,w,c
  2821  000BF4  E106               	bnz	u3161
  2822  000BF6  042D               	decf	___flmul@temp^0,w,c
  2823  000BF8  B0D8               	btfsc	status,0,c
  2824  000BFA  EF01  F006         	goto	u3161
  2825  000BFE  EF03  F006         	goto	u3160
  2826  000C02                     u3161:
  2827  000C02  EF0F  F006         	goto	l907
  2828  000C06                     u3160:
  2829  000C06  0E00               	movlw	0
  2830  000C08  6E29               	movwf	___flmul@prod^0,c
  2831  000C0A  0E00               	movlw	0
  2832  000C0C  6E2A               	movwf	(___flmul@prod+1)^0,c
  2833  000C0E  0E00               	movlw	0
  2834  000C10  6E2B               	movwf	(___flmul@prod+2)^0,c
  2835  000C12  0E00               	movlw	0
  2836  000C14  6E2C               	movwf	(___flmul@prod+3)^0,c
  2837  000C16  0E00               	movlw	0
  2838  000C18  6E22               	movwf	___flmul@sign^0,c
  2839  000C1A  EF24  F006         	goto	l3340
  2840  000C1E                     l907:
  2841  000C1E  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  2842  000C22  0EFF               	movlw	255
  2843  000C24  1629               	andwf	___flmul@prod^0,f,c
  2844  000C26  0EFF               	movlw	255
  2845  000C28  162A               	andwf	(___flmul@prod+1)^0,f,c
  2846  000C2A  0E7F               	movlw	127
  2847  000C2C  162B               	andwf	(___flmul@prod+2)^0,f,c
  2848  000C2E  0E00               	movlw	0
  2849  000C30  162C               	andwf	(___flmul@prod+3)^0,f,c
  2850  000C32  A028               	btfss	___flmul@bexp^0,0,c
  2851  000C34  EF1E  F006         	goto	u3171
  2852  000C38  EF20  F006         	goto	u3170
  2853  000C3C                     u3171:
  2854  000C3C  EF21  F006         	goto	l3338
  2855  000C40                     u3170:
  2856  000C40  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  2857  000C42                     l3338:
  2858  000C42  90D8               	bcf	status,0,c
  2859  000C44  3028               	rrcf	___flmul@bexp^0,w,c
  2860  000C46  6E2C               	movwf	(___flmul@prod+3)^0,c
  2861  000C48                     l3340:
  2862  000C48  5022               	movf	___flmul@sign^0,w,c
  2863  000C4A  122C               	iorwf	(___flmul@prod+3)^0,f,c
  2864  000C4C  C029  F016         	movff	___flmul@prod,?___flmul
  2865  000C50  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  2866  000C54  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  2867  000C58  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  2868  000C5C                     l894:
  2869  000C5C  0012               	return		;funcret
  2870  000C5E                     __end_of___flmul:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function ___fldiv *****************
  2874 ;; Defined at:
  2875 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  b               4   46[COMRAM] unsigned char 
  2878 ;;  a               4   50[COMRAM] unsigned char 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  grs             4   65[COMRAM] unsigned long 
  2881 ;;  rem             4   58[COMRAM] unsigned long 
  2882 ;;  new_exp         2   63[COMRAM] short 
  2883 ;;  aexp            1   70[COMRAM] unsigned char 
  2884 ;;  bexp            1   69[COMRAM] unsigned char 
  2885 ;;  sign            1   62[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  4   46[COMRAM] unsigned char 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2895 ;;      Params:         8       0       0       0       0       0       0       0       0
  2896 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2897 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2898 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2899 ;;Total ram usage:       25 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    2
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_appADC
  2906 ;;		_appBat
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text12
  2911  00103C                     __ptext12:
  2912                           	callstack 0
  2913  00103C                     ___fldiv:
  2914                           	callstack 26
  2915  00103C  5032               	movf	(___fldiv@b+3)^0,w,c
  2916  00103E  0B80               	andlw	128
  2917  001040  6E3F               	movwf	___fldiv@sign^0,c
  2918  001042  5032               	movf	(___fldiv@b+3)^0,w,c
  2919  001044  2432               	addwf	(___fldiv@b+3)^0,w,c
  2920  001046  6E46               	movwf	___fldiv@bexp^0,c
  2921  001048  AE31               	btfss	(___fldiv@b+2)^0,7,c
  2922  00104A  EF29  F008         	goto	u2761
  2923  00104E  EF2B  F008         	goto	u2760
  2924  001052                     u2761:
  2925  001052  EF2C  F008         	goto	l3084
  2926  001056                     u2760:
  2927  001056  8046               	bsf	___fldiv@bexp^0,0,c
  2928  001058                     l3084:
  2929  001058  5046               	movf	___fldiv@bexp^0,w,c
  2930  00105A  B4D8               	btfsc	status,2,c
  2931  00105C  EF32  F008         	goto	u2771
  2932  001060  EF34  F008         	goto	u2770
  2933  001064                     u2771:
  2934  001064  EF49  F008         	goto	l3094
  2935  001068                     u2770:
  2936  001068  2846               	incf	___fldiv@bexp^0,w,c
  2937  00106A  A4D8               	btfss	status,2,c
  2938  00106C  EF3A  F008         	goto	u2781
  2939  001070  EF3C  F008         	goto	u2780
  2940  001074                     u2781:
  2941  001074  EF44  F008         	goto	l3090
  2942  001078                     u2780:
  2943  001078  0E00               	movlw	0
  2944  00107A  6E2F               	movwf	___fldiv@b^0,c
  2945  00107C  0E00               	movlw	0
  2946  00107E  6E30               	movwf	(___fldiv@b+1)^0,c
  2947  001080  0E00               	movlw	0
  2948  001082  6E31               	movwf	(___fldiv@b+2)^0,c
  2949  001084  0E00               	movlw	0
  2950  001086  6E32               	movwf	(___fldiv@b+3)^0,c
  2951  001088                     l3090:
  2952  001088  8E31               	bsf	(___fldiv@b+2)^0,7,c
  2953  00108A  0E00               	movlw	0
  2954  00108C  6E32               	movwf	(___fldiv@b+3)^0,c
  2955  00108E  EF51  F008         	goto	l3096
  2956  001092                     l3094:
  2957  001092  0E00               	movlw	0
  2958  001094  6E2F               	movwf	___fldiv@b^0,c
  2959  001096  0E00               	movlw	0
  2960  001098  6E30               	movwf	(___fldiv@b+1)^0,c
  2961  00109A  0E00               	movlw	0
  2962  00109C  6E31               	movwf	(___fldiv@b+2)^0,c
  2963  00109E  0E00               	movlw	0
  2964  0010A0  6E32               	movwf	(___fldiv@b+3)^0,c
  2965  0010A2                     l3096:
  2966  0010A2  5036               	movf	(___fldiv@a+3)^0,w,c
  2967  0010A4  0B80               	andlw	128
  2968  0010A6  1A3F               	xorwf	___fldiv@sign^0,f,c
  2969  0010A8  5036               	movf	(___fldiv@a+3)^0,w,c
  2970  0010AA  2436               	addwf	(___fldiv@a+3)^0,w,c
  2971  0010AC  6E47               	movwf	___fldiv@aexp^0,c
  2972  0010AE  AE35               	btfss	(___fldiv@a+2)^0,7,c
  2973  0010B0  EF5C  F008         	goto	u2791
  2974  0010B4  EF5E  F008         	goto	u2790
  2975  0010B8                     u2791:
  2976  0010B8  EF5F  F008         	goto	l3104
  2977  0010BC                     u2790:
  2978  0010BC  8047               	bsf	___fldiv@aexp^0,0,c
  2979  0010BE                     l3104:
  2980  0010BE  5047               	movf	___fldiv@aexp^0,w,c
  2981  0010C0  B4D8               	btfsc	status,2,c
  2982  0010C2  EF65  F008         	goto	u2801
  2983  0010C6  EF67  F008         	goto	u2800
  2984  0010CA                     u2801:
  2985  0010CA  EF7C  F008         	goto	l3114
  2986  0010CE                     u2800:
  2987  0010CE  2847               	incf	___fldiv@aexp^0,w,c
  2988  0010D0  A4D8               	btfss	status,2,c
  2989  0010D2  EF6D  F008         	goto	u2811
  2990  0010D6  EF6F  F008         	goto	u2810
  2991  0010DA                     u2811:
  2992  0010DA  EF77  F008         	goto	l3110
  2993  0010DE                     u2810:
  2994  0010DE  0E00               	movlw	0
  2995  0010E0  6E33               	movwf	___fldiv@a^0,c
  2996  0010E2  0E00               	movlw	0
  2997  0010E4  6E34               	movwf	(___fldiv@a+1)^0,c
  2998  0010E6  0E00               	movlw	0
  2999  0010E8  6E35               	movwf	(___fldiv@a+2)^0,c
  3000  0010EA  0E00               	movlw	0
  3001  0010EC  6E36               	movwf	(___fldiv@a+3)^0,c
  3002  0010EE                     l3110:
  3003  0010EE  8E35               	bsf	(___fldiv@a+2)^0,7,c
  3004  0010F0  0E00               	movlw	0
  3005  0010F2  6E36               	movwf	(___fldiv@a+3)^0,c
  3006  0010F4  EF84  F008         	goto	l3116
  3007  0010F8                     l3114:
  3008  0010F8  0E00               	movlw	0
  3009  0010FA  6E33               	movwf	___fldiv@a^0,c
  3010  0010FC  0E00               	movlw	0
  3011  0010FE  6E34               	movwf	(___fldiv@a+1)^0,c
  3012  001100  0E00               	movlw	0
  3013  001102  6E35               	movwf	(___fldiv@a+2)^0,c
  3014  001104  0E00               	movlw	0
  3015  001106  6E36               	movwf	(___fldiv@a+3)^0,c
  3016  001108                     l3116:
  3017  001108  5033               	movf	___fldiv@a^0,w,c
  3018  00110A  1034               	iorwf	(___fldiv@a+1)^0,w,c
  3019  00110C  1035               	iorwf	(___fldiv@a+2)^0,w,c
  3020  00110E  1036               	iorwf	(___fldiv@a+3)^0,w,c
  3021  001110  A4D8               	btfss	status,2,c
  3022  001112  EF8D  F008         	goto	u2821
  3023  001116  EF8F  F008         	goto	u2820
  3024  00111A                     u2821:
  3025  00111A  EFA7  F008         	goto	l3128
  3026  00111E                     u2820:
  3027  00111E  0E00               	movlw	0
  3028  001120  6E2F               	movwf	___fldiv@b^0,c
  3029  001122  0E00               	movlw	0
  3030  001124  6E30               	movwf	(___fldiv@b+1)^0,c
  3031  001126  0E00               	movlw	0
  3032  001128  6E31               	movwf	(___fldiv@b+2)^0,c
  3033  00112A  0E00               	movlw	0
  3034  00112C  6E32               	movwf	(___fldiv@b+3)^0,c
  3035  00112E  0E80               	movlw	128
  3036  001130  1231               	iorwf	(___fldiv@b+2)^0,f,c
  3037  001132  0E7F               	movlw	127
  3038  001134  1232               	iorwf	(___fldiv@b+3)^0,f,c
  3039  001136                     l3122:
  3040  001136  503F               	movf	___fldiv@sign^0,w,c
  3041  001138  1232               	iorwf	(___fldiv@b+3)^0,f,c
  3042  00113A  C02F  F02F         	movff	___fldiv@b,?___fldiv
  3043  00113E  C030  F030         	movff	___fldiv@b+1,?___fldiv+1
  3044  001142  C031  F031         	movff	___fldiv@b+2,?___fldiv+2
  3045  001146  C032  F032         	movff	___fldiv@b+3,?___fldiv+3
  3046  00114A  EFEA  F009         	goto	l858
  3047  00114E                     l3128:
  3048  00114E  5046               	movf	___fldiv@bexp^0,w,c
  3049  001150  A4D8               	btfss	status,2,c
  3050  001152  EFAD  F008         	goto	u2831
  3051  001156  EFAF  F008         	goto	u2830
  3052  00115A                     u2831:
  3053  00115A  EFB9  F008         	goto	l3136
  3054  00115E                     u2830:
  3055  00115E  0E00               	movlw	0
  3056  001160  6E2F               	movwf	?___fldiv^0,c
  3057  001162  0E00               	movlw	0
  3058  001164  6E30               	movwf	(?___fldiv+1)^0,c
  3059  001166  0E00               	movlw	0
  3060  001168  6E31               	movwf	(?___fldiv+2)^0,c
  3061  00116A  0E00               	movlw	0
  3062  00116C  6E32               	movwf	(?___fldiv+3)^0,c
  3063  00116E  EFEA  F009         	goto	l858
  3064  001172                     l3136:
  3065  001172  5047               	movf	___fldiv@aexp^0,w,c
  3066  001174  C046  F037         	movff	___fldiv@bexp,??___fldiv
  3067  001178  6A38               	clrf	(??___fldiv+1)^0,c
  3068  00117A  5E37               	subwf	??___fldiv^0,f,c
  3069  00117C  0E00               	movlw	0
  3070  00117E  5A38               	subwfb	(??___fldiv+1)^0,f,c
  3071  001180  0E7F               	movlw	127
  3072  001182  2437               	addwf	??___fldiv^0,w,c
  3073  001184  6E40               	movwf	___fldiv@new_exp^0,c
  3074  001186  0E00               	movlw	0
  3075  001188  2038               	addwfc	(??___fldiv+1)^0,w,c
  3076  00118A  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3077  00118C  C02F  F03B         	movff	___fldiv@b,___fldiv@rem
  3078  001190  C030  F03C         	movff	___fldiv@b+1,___fldiv@rem+1
  3079  001194  C031  F03D         	movff	___fldiv@b+2,___fldiv@rem+2
  3080  001198  C032  F03E         	movff	___fldiv@b+3,___fldiv@rem+3
  3081  00119C  0E00               	movlw	0
  3082  00119E  6E2F               	movwf	___fldiv@b^0,c
  3083  0011A0  0E00               	movlw	0
  3084  0011A2  6E30               	movwf	(___fldiv@b+1)^0,c
  3085  0011A4  0E00               	movlw	0
  3086  0011A6  6E31               	movwf	(___fldiv@b+2)^0,c
  3087  0011A8  0E00               	movlw	0
  3088  0011AA  6E32               	movwf	(___fldiv@b+3)^0,c
  3089  0011AC  0E00               	movlw	0
  3090  0011AE  6E42               	movwf	___fldiv@grs^0,c
  3091  0011B0  0E00               	movlw	0
  3092  0011B2  6E43               	movwf	(___fldiv@grs+1)^0,c
  3093  0011B4  0E00               	movlw	0
  3094  0011B6  6E44               	movwf	(___fldiv@grs+2)^0,c
  3095  0011B8  0E00               	movlw	0
  3096  0011BA  6E45               	movwf	(___fldiv@grs+3)^0,c
  3097  0011BC  0E00               	movlw	0
  3098  0011BE  6E47               	movwf	___fldiv@aexp^0,c
  3099  0011C0  EF1A  F009         	goto	l860
  3100  0011C4                     l3146:
  3101  0011C4  5047               	movf	___fldiv@aexp^0,w,c
  3102  0011C6  B4D8               	btfsc	status,2,c
  3103  0011C8  EFE8  F008         	goto	u2841
  3104  0011CC  EFEA  F008         	goto	u2840
  3105  0011D0                     u2841:
  3106  0011D0  EF01  F009         	goto	l3154
  3107  0011D4                     u2840:
  3108  0011D4  90D8               	bcf	status,0,c
  3109  0011D6  363B               	rlcf	___fldiv@rem^0,f,c
  3110  0011D8  363C               	rlcf	(___fldiv@rem+1)^0,f,c
  3111  0011DA  363D               	rlcf	(___fldiv@rem+2)^0,f,c
  3112  0011DC  363E               	rlcf	(___fldiv@rem+3)^0,f,c
  3113  0011DE  90D8               	bcf	status,0,c
  3114  0011E0  362F               	rlcf	___fldiv@b^0,f,c
  3115  0011E2  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3116  0011E4  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3117  0011E6  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3118  0011E8  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3119  0011EA  EFF9  F008         	goto	u2851
  3120  0011EE  EFFB  F008         	goto	u2850
  3121  0011F2                     u2851:
  3122  0011F2  EFFC  F008         	goto	l863
  3123  0011F6                     u2850:
  3124  0011F6  802F               	bsf	___fldiv@b^0,0,c
  3125  0011F8                     l863:
  3126  0011F8  90D8               	bcf	status,0,c
  3127  0011FA  3642               	rlcf	___fldiv@grs^0,f,c
  3128  0011FC  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3129  0011FE  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3130  001200  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3131  001202                     l3154:
  3132  001202  5033               	movf	___fldiv@a^0,w,c
  3133  001204  5C3B               	subwf	___fldiv@rem^0,w,c
  3134  001206  5034               	movf	(___fldiv@a+1)^0,w,c
  3135  001208  583C               	subwfb	(___fldiv@rem+1)^0,w,c
  3136  00120A  5035               	movf	(___fldiv@a+2)^0,w,c
  3137  00120C  583D               	subwfb	(___fldiv@rem+2)^0,w,c
  3138  00120E  5036               	movf	(___fldiv@a+3)^0,w,c
  3139  001210  583E               	subwfb	(___fldiv@rem+3)^0,w,c
  3140  001212  A0D8               	btfss	status,0,c
  3141  001214  EF0E  F009         	goto	u2861
  3142  001218  EF10  F009         	goto	u2860
  3143  00121C                     u2861:
  3144  00121C  EF19  F009         	goto	l3160
  3145  001220                     u2860:
  3146  001220  8C45               	bsf	(___fldiv@grs+3)^0,6,c
  3147  001222  5033               	movf	___fldiv@a^0,w,c
  3148  001224  5E3B               	subwf	___fldiv@rem^0,f,c
  3149  001226  5034               	movf	(___fldiv@a+1)^0,w,c
  3150  001228  5A3C               	subwfb	(___fldiv@rem+1)^0,f,c
  3151  00122A  5035               	movf	(___fldiv@a+2)^0,w,c
  3152  00122C  5A3D               	subwfb	(___fldiv@rem+2)^0,f,c
  3153  00122E  5036               	movf	(___fldiv@a+3)^0,w,c
  3154  001230  5A3E               	subwfb	(___fldiv@rem+3)^0,f,c
  3155  001232                     l3160:
  3156  001232  2A47               	incf	___fldiv@aexp^0,f,c
  3157  001234                     l860:
  3158  001234  0E19               	movlw	25
  3159  001236  6447               	cpfsgt	___fldiv@aexp^0,c
  3160  001238  EF20  F009         	goto	u2871
  3161  00123C  EF22  F009         	goto	u2870
  3162  001240                     u2871:
  3163  001240  EFE2  F008         	goto	l3146
  3164  001244                     u2870:
  3165  001244  503B               	movf	___fldiv@rem^0,w,c
  3166  001246  103C               	iorwf	(___fldiv@rem+1)^0,w,c
  3167  001248  103D               	iorwf	(___fldiv@rem+2)^0,w,c
  3168  00124A  103E               	iorwf	(___fldiv@rem+3)^0,w,c
  3169  00124C  B4D8               	btfsc	status,2,c
  3170  00124E  EF2B  F009         	goto	u2881
  3171  001252  EF2D  F009         	goto	u2880
  3172  001256                     u2881:
  3173  001256  EF45  F009         	goto	l3172
  3174  00125A                     u2880:
  3175  00125A  8042               	bsf	___fldiv@grs^0,0,c
  3176  00125C  EF45  F009         	goto	l3172
  3177  001260                     l3166:
  3178  001260  90D8               	bcf	status,0,c
  3179  001262  362F               	rlcf	___fldiv@b^0,f,c
  3180  001264  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3181  001266  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3182  001268  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3183  00126A  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3184  00126C  EF3A  F009         	goto	u2891
  3185  001270  EF3C  F009         	goto	u2890
  3186  001274                     u2891:
  3187  001274  EF3D  F009         	goto	l869
  3188  001278                     u2890:
  3189  001278  802F               	bsf	___fldiv@b^0,0,c
  3190  00127A                     l869:
  3191  00127A  90D8               	bcf	status,0,c
  3192  00127C  3642               	rlcf	___fldiv@grs^0,f,c
  3193  00127E  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3194  001280  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3195  001282  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3196  001284  0640               	decf	___fldiv@new_exp^0,f,c
  3197  001286  A0D8               	btfss	status,0,c
  3198  001288  0641               	decf	(___fldiv@new_exp+1)^0,f,c
  3199  00128A                     l3172:
  3200  00128A  AE31               	btfss	(___fldiv@b+2)^0,7,c
  3201  00128C  EF4A  F009         	goto	u2901
  3202  001290  EF4C  F009         	goto	u2900
  3203  001294                     u2901:
  3204  001294  EF30  F009         	goto	l3166
  3205  001298                     u2900:
  3206  001298  0E00               	movlw	0
  3207  00129A  6E47               	movwf	___fldiv@aexp^0,c
  3208  00129C  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3209  00129E  EF53  F009         	goto	u2911
  3210  0012A2  EF55  F009         	goto	u2910
  3211  0012A6                     u2911:
  3212  0012A6  EF79  F009         	goto	l871
  3213  0012AA                     u2910:
  3214  0012AA  0EFF               	movlw	255
  3215  0012AC  1442               	andwf	___fldiv@grs^0,w,c
  3216  0012AE  6E37               	movwf	??___fldiv^0,c
  3217  0012B0  0EFF               	movlw	255
  3218  0012B2  1443               	andwf	(___fldiv@grs+1)^0,w,c
  3219  0012B4  6E38               	movwf	(??___fldiv+1)^0,c
  3220  0012B6  0EFF               	movlw	255
  3221  0012B8  1444               	andwf	(___fldiv@grs+2)^0,w,c
  3222  0012BA  6E39               	movwf	(??___fldiv+2)^0,c
  3223  0012BC  0E7F               	movlw	127
  3224  0012BE  1445               	andwf	(___fldiv@grs+3)^0,w,c
  3225  0012C0  6E3A               	movwf	(??___fldiv+3)^0,c
  3226  0012C2  5037               	movf	??___fldiv^0,w,c
  3227  0012C4  1038               	iorwf	(??___fldiv+1)^0,w,c
  3228  0012C6  1039               	iorwf	(??___fldiv+2)^0,w,c
  3229  0012C8  103A               	iorwf	(??___fldiv+3)^0,w,c
  3230  0012CA  B4D8               	btfsc	status,2,c
  3231  0012CC  EF6A  F009         	goto	u2921
  3232  0012D0  EF6C  F009         	goto	u2920
  3233  0012D4                     u2921:
  3234  0012D4  EF70  F009         	goto	l872
  3235  0012D8                     u2920:
  3236  0012D8                     l3180:
  3237  0012D8  0E01               	movlw	1
  3238  0012DA  6E47               	movwf	___fldiv@aexp^0,c
  3239  0012DC  EF79  F009         	goto	l871
  3240  0012E0                     l872:
  3241  0012E0  A02F               	btfss	___fldiv@b^0,0,c
  3242  0012E2  EF75  F009         	goto	u2931
  3243  0012E6  EF77  F009         	goto	u2930
  3244  0012EA                     u2931:
  3245  0012EA  EF79  F009         	goto	l871
  3246  0012EE                     u2930:
  3247  0012EE  EF6C  F009         	goto	l3180
  3248  0012F2                     l871:
  3249  0012F2  5047               	movf	___fldiv@aexp^0,w,c
  3250  0012F4  B4D8               	btfsc	status,2,c
  3251  0012F6  EF7F  F009         	goto	u2941
  3252  0012FA  EF81  F009         	goto	u2940
  3253  0012FE                     u2941:
  3254  0012FE  EFA5  F009         	goto	l3192
  3255  001302                     u2940:
  3256  001302  0E01               	movlw	1
  3257  001304  262F               	addwf	___fldiv@b^0,f,c
  3258  001306  0E00               	movlw	0
  3259  001308  2230               	addwfc	(___fldiv@b+1)^0,f,c
  3260  00130A  2231               	addwfc	(___fldiv@b+2)^0,f,c
  3261  00130C  2232               	addwfc	(___fldiv@b+3)^0,f,c
  3262  00130E  A032               	btfss	(___fldiv@b+3)^0,0,c
  3263  001310  EF8C  F009         	goto	u2951
  3264  001314  EF8E  F009         	goto	u2950
  3265  001318                     u2951:
  3266  001318  EFA5  F009         	goto	l3192
  3267  00131C                     u2950:
  3268  00131C  C02F  F037         	movff	___fldiv@b,??___fldiv
  3269  001320  C030  F038         	movff	___fldiv@b+1,??___fldiv+1
  3270  001324  C031  F039         	movff	___fldiv@b+2,??___fldiv+2
  3271  001328  C032  F03A         	movff	___fldiv@b+3,??___fldiv+3
  3272  00132C  343A               	rlcf	(??___fldiv+3)^0,w,c
  3273  00132E  323A               	rrcf	(??___fldiv+3)^0,f,c
  3274  001330  3239               	rrcf	(??___fldiv+2)^0,f,c
  3275  001332  3238               	rrcf	(??___fldiv+1)^0,f,c
  3276  001334  3237               	rrcf	??___fldiv^0,f,c
  3277  001336  C037  F02F         	movff	??___fldiv,___fldiv@b
  3278  00133A  C038  F030         	movff	??___fldiv+1,___fldiv@b+1
  3279  00133E  C039  F031         	movff	??___fldiv+2,___fldiv@b+2
  3280  001342  C03A  F032         	movff	??___fldiv+3,___fldiv@b+3
  3281  001346  4A40               	infsnz	___fldiv@new_exp^0,f,c
  3282  001348  2A41               	incf	(___fldiv@new_exp+1)^0,f,c
  3283  00134A                     l3192:
  3284  00134A  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3285  00134C  EFB0  F009         	goto	u2961
  3286  001350  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3287  001352  E108               	bnz	u2960
  3288  001354  2840               	incf	___fldiv@new_exp^0,w,c
  3289  001356  A0D8               	btfss	status,0,c
  3290  001358  EFB0  F009         	goto	u2961
  3291  00135C  EFB2  F009         	goto	u2960
  3292  001360                     u2961:
  3293  001360  EFBD  F009         	goto	l3196
  3294  001364                     u2960:
  3295  001364  0E00               	movlw	0
  3296  001366  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3297  001368  6840               	setf	___fldiv@new_exp^0,c
  3298  00136A  0E00               	movlw	0
  3299  00136C  6E2F               	movwf	___fldiv@b^0,c
  3300  00136E  0E00               	movlw	0
  3301  001370  6E30               	movwf	(___fldiv@b+1)^0,c
  3302  001372  0E00               	movlw	0
  3303  001374  6E31               	movwf	(___fldiv@b+2)^0,c
  3304  001376  0E00               	movlw	0
  3305  001378  6E32               	movwf	(___fldiv@b+3)^0,c
  3306  00137A                     l3196:
  3307  00137A  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3308  00137C  EFCA  F009         	goto	u2970
  3309  001380  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3310  001382  E106               	bnz	u2971
  3311  001384  0440               	decf	___fldiv@new_exp^0,w,c
  3312  001386  B0D8               	btfsc	status,0,c
  3313  001388  EFC8  F009         	goto	u2971
  3314  00138C  EFCA  F009         	goto	u2970
  3315  001390                     u2971:
  3316  001390  EFD8  F009         	goto	l3200
  3317  001394                     u2970:
  3318  001394  0E00               	movlw	0
  3319  001396  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3320  001398  0E00               	movlw	0
  3321  00139A  6E40               	movwf	___fldiv@new_exp^0,c
  3322  00139C  0E00               	movlw	0
  3323  00139E  6E2F               	movwf	___fldiv@b^0,c
  3324  0013A0  0E00               	movlw	0
  3325  0013A2  6E30               	movwf	(___fldiv@b+1)^0,c
  3326  0013A4  0E00               	movlw	0
  3327  0013A6  6E31               	movwf	(___fldiv@b+2)^0,c
  3328  0013A8  0E00               	movlw	0
  3329  0013AA  6E32               	movwf	(___fldiv@b+3)^0,c
  3330  0013AC  0E00               	movlw	0
  3331  0013AE  6E3F               	movwf	___fldiv@sign^0,c
  3332  0013B0                     l3200:
  3333  0013B0  C040  F046         	movff	___fldiv@new_exp,___fldiv@bexp
  3334  0013B4  A046               	btfss	___fldiv@bexp^0,0,c
  3335  0013B6  EFDF  F009         	goto	u2981
  3336  0013BA  EFE1  F009         	goto	u2980
  3337  0013BE                     u2981:
  3338  0013BE  EFE4  F009         	goto	l3206
  3339  0013C2                     u2980:
  3340  0013C2  8E31               	bsf	(___fldiv@b+2)^0,7,c
  3341  0013C4  EFE5  F009         	goto	l3208
  3342  0013C8                     l3206:
  3343  0013C8  9E31               	bcf	(___fldiv@b+2)^0,7,c
  3344  0013CA                     l3208:
  3345  0013CA  90D8               	bcf	status,0,c
  3346  0013CC  3046               	rrcf	___fldiv@bexp^0,w,c
  3347  0013CE  6E32               	movwf	(___fldiv@b+3)^0,c
  3348  0013D0  EF9B  F008         	goto	l3122
  3349  0013D4                     l858:
  3350  0013D4  0012               	return		;funcret
  3351  0013D6                     __end_of___fldiv:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function ___awmod *****************
  3355 ;; Defined at:
  3356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  dividend        2   81[COMRAM] int 
  3359 ;;  divisor         2   83[COMRAM] int 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  sign            1   86[COMRAM] unsigned char 
  3362 ;;  counter         1   85[COMRAM] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2   81[COMRAM] int 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3372 ;;      Params:         4       0       0       0       0       0       0       0       0
  3373 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3375 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3376 ;;Total ram usage:        6 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    2
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_appADC
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text13
  3387  002ADC                     __ptext13:
  3388                           	callstack 0
  3389  002ADC                     ___awmod:
  3390                           	callstack 26
  3391  002ADC  0E00               	movlw	0
  3392  002ADE  6E57               	movwf	___awmod@sign^0,c
  3393  002AE0  BE53               	btfsc	(___awmod@dividend+1)^0,7,c
  3394  002AE2  EF77  F015         	goto	u3180
  3395  002AE6  EF75  F015         	goto	u3181
  3396  002AEA                     u3181:
  3397  002AEA  EF7D  F015         	goto	l3354
  3398  002AEE                     u3180:
  3399  002AEE  6C52               	negf	___awmod@dividend^0,c
  3400  002AF0  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3401  002AF2  B0D8               	btfsc	status,0,c
  3402  002AF4  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3403  002AF6  0E01               	movlw	1
  3404  002AF8  6E57               	movwf	___awmod@sign^0,c
  3405  002AFA                     l3354:
  3406  002AFA  BE55               	btfsc	(___awmod@divisor+1)^0,7,c
  3407  002AFC  EF84  F015         	goto	u3190
  3408  002B00  EF82  F015         	goto	u3191
  3409  002B04                     u3191:
  3410  002B04  EF88  F015         	goto	l3358
  3411  002B08                     u3190:
  3412  002B08  6C54               	negf	___awmod@divisor^0,c
  3413  002B0A  1E55               	comf	(___awmod@divisor+1)^0,f,c
  3414  002B0C  B0D8               	btfsc	status,0,c
  3415  002B0E  2A55               	incf	(___awmod@divisor+1)^0,f,c
  3416  002B10                     l3358:
  3417  002B10  5054               	movf	___awmod@divisor^0,w,c
  3418  002B12  1055               	iorwf	(___awmod@divisor+1)^0,w,c
  3419  002B14  B4D8               	btfsc	status,2,c
  3420  002B16  EF8F  F015         	goto	u3201
  3421  002B1A  EF91  F015         	goto	u3200
  3422  002B1E                     u3201:
  3423  002B1E  EFB5  F015         	goto	l3374
  3424  002B22                     u3200:
  3425  002B22  0E01               	movlw	1
  3426  002B24  6E56               	movwf	___awmod@counter^0,c
  3427  002B26  EF99  F015         	goto	l3364
  3428  002B2A                     l3362:
  3429  002B2A  90D8               	bcf	status,0,c
  3430  002B2C  3654               	rlcf	___awmod@divisor^0,f,c
  3431  002B2E  3655               	rlcf	(___awmod@divisor+1)^0,f,c
  3432  002B30  2A56               	incf	___awmod@counter^0,f,c
  3433  002B32                     l3364:
  3434  002B32  AE55               	btfss	(___awmod@divisor+1)^0,7,c
  3435  002B34  EF9E  F015         	goto	u3211
  3436  002B38  EFA0  F015         	goto	u3210
  3437  002B3C                     u3211:
  3438  002B3C  EF95  F015         	goto	l3362
  3439  002B40                     u3210:
  3440  002B40                     l3366:
  3441  002B40  5054               	movf	___awmod@divisor^0,w,c
  3442  002B42  5C52               	subwf	___awmod@dividend^0,w,c
  3443  002B44  5055               	movf	(___awmod@divisor+1)^0,w,c
  3444  002B46  5853               	subwfb	(___awmod@dividend+1)^0,w,c
  3445  002B48  A0D8               	btfss	status,0,c
  3446  002B4A  EFA9  F015         	goto	u3221
  3447  002B4E  EFAB  F015         	goto	u3220
  3448  002B52                     u3221:
  3449  002B52  EFAF  F015         	goto	l3370
  3450  002B56                     u3220:
  3451  002B56  5054               	movf	___awmod@divisor^0,w,c
  3452  002B58  5E52               	subwf	___awmod@dividend^0,f,c
  3453  002B5A  5055               	movf	(___awmod@divisor+1)^0,w,c
  3454  002B5C  5A53               	subwfb	(___awmod@dividend+1)^0,f,c
  3455  002B5E                     l3370:
  3456  002B5E  90D8               	bcf	status,0,c
  3457  002B60  3255               	rrcf	(___awmod@divisor+1)^0,f,c
  3458  002B62  3254               	rrcf	___awmod@divisor^0,f,c
  3459  002B64  2E56               	decfsz	___awmod@counter^0,f,c
  3460  002B66  EFA0  F015         	goto	l3366
  3461  002B6A                     l3374:
  3462  002B6A  5057               	movf	___awmod@sign^0,w,c
  3463  002B6C  B4D8               	btfsc	status,2,c
  3464  002B6E  EFBB  F015         	goto	u3231
  3465  002B72  EFBD  F015         	goto	u3230
  3466  002B76                     u3231:
  3467  002B76  EFC1  F015         	goto	l3378
  3468  002B7A                     u3230:
  3469  002B7A  6C52               	negf	___awmod@dividend^0,c
  3470  002B7C  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3471  002B7E  B0D8               	btfsc	status,0,c
  3472  002B80  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3473  002B82                     l3378:
  3474  002B82  C052  F052         	movff	___awmod@dividend,?___awmod
  3475  002B86  C053  F053         	movff	___awmod@dividend+1,?___awmod+1
  3476  002B8A  0012               	return		;funcret
  3477  002B8C                     __end_of___awmod:
  3478                           	callstack 0
  3479                           
  3480 ;; *************** function _appInit *****************
  3481 ;; Defined at:
  3482 ;;		line 10 in file "app.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    5
  3503 ;; This function calls:
  3504 ;;		_adcInit
  3505 ;;		_appISRConfig
  3506 ;;		_appLCD_Init
  3507 ;;		_appTimerInit
  3508 ;;		_appTimerStart
  3509 ;; This function is called by:
  3510 ;;		_main
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text14
  3515  00307E                     __ptext14:
  3516                           	callstack 0
  3517  00307E                     _appInit:
  3518                           	callstack 25
  3519  00307E                     
  3520                           ;app.c: 12:     appISRConfig();
  3521  00307E  EC5B  F018         	call	_appISRConfig	;wreg free
  3522  003082                     
  3523                           ;app.c: 13:     appLCD_Init();
  3524  003082  ECC6  F015         	call	_appLCD_Init	;wreg free
  3525  003086                     
  3526                           ;app.c: 14:     adcInit(2);
  3527  003086  0E02               	movlw	2
  3528  003088  EC19  F017         	call	_adcInit
  3529  00308C                     
  3530                           ;app.c: 15:     appTimerInit();
  3531  00308C  EC4B  F018         	call	_appTimerInit	;wreg free
  3532  003090                     
  3533                           ;app.c: 16:     appTimerStart();
  3534  003090  EC55  F018         	call	_appTimerStart	;wreg free
  3535  003094  0012               	return		;funcret
  3536  003096                     __end_of_appInit:
  3537                           	callstack 0
  3538                           
  3539 ;; *************** function _appTimerStart *****************
  3540 ;; Defined at:
  3541 ;;		line 72 in file "servo.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3555 ;;      Params:         0       0       0       0       0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3558 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    2
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_appInit
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text15
  3570  0030AA                     __ptext15:
  3571                           	callstack 0
  3572  0030AA                     _appTimerStart:
  3573                           	callstack 27
  3574  0030AA                     
  3575                           ;servo.c: 74:     TMR3 = 20536;
  3576  0030AA  0E50               	movlw	80
  3577  0030AC  6EB3               	movwf	179,c	;volatile
  3578  0030AE  0E38               	movlw	56
  3579  0030B0  6EB2               	movwf	178,c	;volatile
  3580  0030B2                     
  3581                           ;servo.c: 75:     T3CONbits.TMR3ON = 1;
  3582  0030B2  80B1               	bsf	177,0,c	;volatile
  3583  0030B4  0012               	return		;funcret
  3584  0030B6                     __end_of_appTimerStart:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _appTimerInit *****************
  3588 ;; Defined at:
  3589 ;;		line 53 in file "servo.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    2
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_appInit
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text16
  3618  003096                     __ptext16:
  3619                           	callstack 0
  3620  003096                     _appTimerInit:
  3621                           	callstack 27
  3622  003096                     
  3623                           ;servo.c: 58:     T3CONbits.TMR3ON = 0;
  3624  003096  90B1               	bcf	177,0,c	;volatile
  3625                           
  3626                           ;servo.c: 59:     T3CONbits.RD16 = 1;
  3627  003098  8EB1               	bsf	177,7,c	;volatile
  3628                           
  3629                           ;servo.c: 60:     T3CONbits.TMR3CS = 0;
  3630  00309A  92B1               	bcf	177,1,c	;volatile
  3631  00309C                     
  3632                           ;servo.c: 61:     T3CONbits.T3CKPS = 0b11;
  3633  00309C  0E30               	movlw	48
  3634  00309E  12B1               	iorwf	177,f,c	;volatile
  3635  0030A0                     
  3636                           ;servo.c: 62:     T3CONbits.T3NSYNC = 1;
  3637  0030A0  84B1               	bsf	177,2,c	;volatile
  3638  0030A2                     
  3639                           ;servo.c: 68:     PIR2bits.TMR3IF = 0;
  3640  0030A2  92A1               	bcf	161,1,c	;volatile
  3641  0030A4                     
  3642                           ;servo.c: 69:     IPR2bits.TMR3IP = 0;
  3643  0030A4  92A2               	bcf	162,1,c	;volatile
  3644  0030A6                     
  3645                           ;servo.c: 70:     PIE2bits.TMR3IE = 1;
  3646  0030A6  82A0               	bsf	160,1,c	;volatile
  3647  0030A8  0012               	return		;funcret
  3648  0030AA                     __end_of_appTimerInit:
  3649                           	callstack 0
  3650                           
  3651 ;; *************** function _appLCD_Init *****************
  3652 ;; Defined at:
  3653 ;;		line 197 in file "flex_lcd.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3667 ;;      Params:         0       0       0       0       0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3669 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3670 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3671 ;;Total ram usage:        2 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    4
  3674 ;; This function calls:
  3675 ;;		_Lcd_Cmd
  3676 ;;		_Lcd_Init
  3677 ;;		_Lcd_Out
  3678 ;; This function is called by:
  3679 ;;		_appInit
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text17
  3684  002B8C                     __ptext17:
  3685                           	callstack 0
  3686  002B8C                     _appLCD_Init:
  3687                           	callstack 25
  3688  002B8C                     
  3689                           ;flex_lcd.c: 199:     Lcd_Init();
  3690  002B8C  EC0E  F015         	call	_Lcd_Init	;wreg free
  3691                           
  3692                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  3693  002B90  0E01               	movlw	1
  3694  002B92  EC5F  F012         	call	_Lcd_Cmd
  3695                           
  3696                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  3697  002B96  0E0C               	movlw	12
  3698  002B98  EC5F  F012         	call	_Lcd_Cmd
  3699  002B9C                     
  3700                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  3701  002B9C  0E02               	movlw	2
  3702  002B9E  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3703  002BA0  0E86               	movlw	134
  3704  002BA2  6E0E               	movwf	??_appLCD_Init^0,c
  3705  002BA4  0E99               	movlw	153
  3706  002BA6                     u4517:
  3707  002BA6  2EE8               	decfsz	wreg,f,c
  3708  002BA8  D7FE               	bra	u4517
  3709  002BAA  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3710  002BAC  D7FC               	bra	u4517
  3711  002BAE  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3712  002BB0  D7FA               	bra	u4517
  3713  002BB2  F000               	nop	
  3714  002BB4                     
  3715                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  3716  002BB4  0E03               	movlw	3
  3717  002BB6  6E07               	movwf	Lcd_Out@x^0,c
  3718  002BB8  0E0F               	movlw	low STR_3
  3719  002BBA  6E08               	movwf	Lcd_Out@buffer^0,c
  3720  002BBC  0E08               	movlw	high STR_3
  3721  002BBE  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3722  002BC0  0E01               	movlw	1
  3723  002BC2  ECE2  F013         	call	_Lcd_Out
  3724  002BC6                     
  3725                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  3726  002BC6  0E06               	movlw	6
  3727  002BC8  6E07               	movwf	Lcd_Out@x^0,c
  3728  002BCA  0E24               	movlw	low STR_4
  3729  002BCC  6E08               	movwf	Lcd_Out@buffer^0,c
  3730  002BCE  0E08               	movlw	high STR_4
  3731  002BD0  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3732  002BD2  0E02               	movlw	2
  3733  002BD4  ECE2  F013         	call	_Lcd_Out
  3734  002BD8                     
  3735                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  3736  002BD8  0E1F               	movlw	31
  3737  002BDA  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3738  002BDC  0E71               	movlw	113
  3739  002BDE  6E0E               	movwf	??_appLCD_Init^0,c
  3740  002BE0  0E1E               	movlw	30
  3741  002BE2                     u4527:
  3742  002BE2  2EE8               	decfsz	wreg,f,c
  3743  002BE4  D7FE               	bra	u4527
  3744  002BE6  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3745  002BE8  D7FC               	bra	u4527
  3746  002BEA  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3747  002BEC  D7FA               	bra	u4527
  3748  002BEE  D000               	nop2	
  3749                           
  3750                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  3751  002BF0  0E01               	movlw	1
  3752  002BF2  EC5F  F012         	call	_Lcd_Cmd
  3753  002BF6  0E02               	movlw	2
  3754  002BF8  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3755  002BFA  0E86               	movlw	134
  3756  002BFC  6E0E               	movwf	??_appLCD_Init^0,c
  3757  002BFE  0E99               	movlw	153
  3758  002C00                     u4537:
  3759  002C00  2EE8               	decfsz	wreg,f,c
  3760  002C02  D7FE               	bra	u4537
  3761  002C04  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3762  002C06  D7FC               	bra	u4537
  3763  002C08  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3764  002C0A  D7FA               	bra	u4537
  3765  002C0C  F000               	nop	
  3766  002C0E  0012               	return		;funcret
  3767  002C10                     __end_of_appLCD_Init:
  3768                           	callstack 0
  3769                           
  3770 ;; *************** function _Lcd_Init *****************
  3771 ;; Defined at:
  3772 ;;		line 31 in file "flex_lcd.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  i               1    7[COMRAM] unsigned char 
  3777 ;;  data            1    0        unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3787 ;;      Params:         0       0       0       0       0       0       0       0       0
  3788 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3789 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3790 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3791 ;;Total ram usage:        3 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    3
  3794 ;; This function calls:
  3795 ;;		_Lcd_Cmd
  3796 ;; This function is called by:
  3797 ;;		_appLCD_Init
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text18
  3802  002A1C                     __ptext18:
  3803                           	callstack 0
  3804  002A1C                     _Lcd_Init:
  3805                           	callstack 25
  3806  002A1C                     
  3807                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  3808  002A1C  9E95               	bcf	149,7,c	;volatile
  3809                           
  3810                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  3811  002A1E  9C95               	bcf	149,6,c	;volatile
  3812                           
  3813                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  3814  002A20  9A95               	bcf	149,5,c	;volatile
  3815                           
  3816                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  3817  002A22  9895               	bcf	149,4,c	;volatile
  3818                           
  3819                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  3820  002A24  9695               	bcf	149,3,c	;volatile
  3821                           
  3822                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  3823  002A26  9495               	bcf	149,2,c	;volatile
  3824  002A28                     
  3825                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  3826  002A28  0E85               	movlw	133
  3827  002A2A  6E07               	movwf	??_Lcd_Init^0,c
  3828  002A2C  0E76               	movlw	118
  3829  002A2E                     u4547:
  3830  002A2E  2EE8               	decfsz	wreg,f,c
  3831  002A30  D7FE               	bra	u4547
  3832  002A32  2E07               	decfsz	??_Lcd_Init^0,f,c
  3833  002A34  D7FC               	bra	u4547
  3834  002A36  D000               	nop2	
  3835  002A38                     
  3836                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  3837  002A38  0E00               	movlw	0
  3838  002A3A  6E08               	movwf	Lcd_Init@i^0,c
  3839  002A3C                     l97:
  3840                           
  3841                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  3842  002A3C  9E8C               	bcf	140,7,c	;volatile
  3843                           
  3844                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  3845  002A3E  9C8C               	bcf	140,6,c	;volatile
  3846                           
  3847                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  3848  002A40  8A8C               	bsf	140,5,c	;volatile
  3849                           
  3850                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  3851  002A42  888C               	bsf	140,4,c	;volatile
  3852                           
  3853                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  3854  002A44  968C               	bcf	140,3,c	;volatile
  3855                           
  3856                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  3857  002A46  948C               	bcf	140,2,c	;volatile
  3858                           
  3859                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  3860  002A48  9E8C               	bcf	140,7,c	;volatile
  3861                           
  3862                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  3863  002A4A  9C8C               	bcf	140,6,c	;volatile
  3864                           
  3865                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  3866  002A4C  8A8C               	bsf	140,5,c	;volatile
  3867                           
  3868                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  3869  002A4E  888C               	bsf	140,4,c	;volatile
  3870                           
  3871                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  3872  002A50  868C               	bsf	140,3,c	;volatile
  3873                           
  3874                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  3875  002A52  948C               	bcf	140,2,c	;volatile
  3876  002A54                     
  3877                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  3878  002A54  0E05               	movlw	5
  3879  002A56                     u4557:
  3880  002A56  2EE8               	decfsz	wreg,f,c
  3881  002A58  D7FE               	bra	u4557
  3882  002A5A                     
  3883                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  3884  002A5A  9E8C               	bcf	140,7,c	;volatile
  3885  002A5C                     
  3886                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  3887  002A5C  9C8C               	bcf	140,6,c	;volatile
  3888  002A5E                     
  3889                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  3890  002A5E  8A8C               	bsf	140,5,c	;volatile
  3891  002A60                     
  3892                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  3893  002A60  888C               	bsf	140,4,c	;volatile
  3894  002A62                     
  3895                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  3896  002A62  968C               	bcf	140,3,c	;volatile
  3897  002A64                     
  3898                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  3899  002A64  948C               	bcf	140,2,c	;volatile
  3900                           
  3901                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3902  002A66  0E16               	movlw	22
  3903  002A68  6E07               	movwf	??_Lcd_Init^0,c
  3904  002A6A  0E6C               	movlw	108
  3905  002A6C                     u4567:
  3906  002A6C  2EE8               	decfsz	wreg,f,c
  3907  002A6E  D7FE               	bra	u4567
  3908  002A70  2E07               	decfsz	??_Lcd_Init^0,f,c
  3909  002A72  D7FC               	bra	u4567
  3910  002A74  D000               	nop2	
  3911  002A76                     
  3912                           ;flex_lcd.c: 61:     }
  3913  002A76  2A08               	incf	Lcd_Init@i^0,f,c
  3914  002A78  0E03               	movlw	3
  3915  002A7A  6408               	cpfsgt	Lcd_Init@i^0,c
  3916  002A7C  EF42  F015         	goto	u2751
  3917  002A80  EF44  F015         	goto	u2750
  3918  002A84                     u2751:
  3919  002A84  EF1E  F015         	goto	l97
  3920  002A88                     u2750:
  3921  002A88                     
  3922                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  3923  002A88  9E8C               	bcf	140,7,c	;volatile
  3924                           
  3925                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  3926  002A8A  9C8C               	bcf	140,6,c	;volatile
  3927                           
  3928                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  3929  002A8C  8A8C               	bsf	140,5,c	;volatile
  3930                           
  3931                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  3932  002A8E  988C               	bcf	140,4,c	;volatile
  3933                           
  3934                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  3935  002A90  968C               	bcf	140,3,c	;volatile
  3936                           
  3937                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  3938  002A92  948C               	bcf	140,2,c	;volatile
  3939                           
  3940                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  3941  002A94  9E8C               	bcf	140,7,c	;volatile
  3942                           
  3943                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  3944  002A96  9C8C               	bcf	140,6,c	;volatile
  3945                           
  3946                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  3947  002A98  8A8C               	bsf	140,5,c	;volatile
  3948                           
  3949                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  3950  002A9A  988C               	bcf	140,4,c	;volatile
  3951                           
  3952                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  3953  002A9C  868C               	bsf	140,3,c	;volatile
  3954                           
  3955                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  3956  002A9E  948C               	bcf	140,2,c	;volatile
  3957  002AA0                     
  3958                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3959  002AA0  0E05               	movlw	5
  3960  002AA2                     u4577:
  3961  002AA2  2EE8               	decfsz	wreg,f,c
  3962  002AA4  D7FE               	bra	u4577
  3963  002AA6                     
  3964                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  3965  002AA6  9E8C               	bcf	140,7,c	;volatile
  3966  002AA8                     
  3967                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  3968  002AA8  9C8C               	bcf	140,6,c	;volatile
  3969  002AAA                     
  3970                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  3971  002AAA  8A8C               	bsf	140,5,c	;volatile
  3972  002AAC                     
  3973                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  3974  002AAC  988C               	bcf	140,4,c	;volatile
  3975  002AAE                     
  3976                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  3977  002AAE  968C               	bcf	140,3,c	;volatile
  3978  002AB0                     
  3979                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  3980  002AB0  948C               	bcf	140,2,c	;volatile
  3981                           
  3982                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3983  002AB2  0E16               	movlw	22
  3984  002AB4  6E07               	movwf	??_Lcd_Init^0,c
  3985  002AB6  0E6C               	movlw	108
  3986  002AB8                     u4587:
  3987  002AB8  2EE8               	decfsz	wreg,f,c
  3988  002ABA  D7FE               	bra	u4587
  3989  002ABC  2E07               	decfsz	??_Lcd_Init^0,f,c
  3990  002ABE  D7FC               	bra	u4587
  3991  002AC0  D000               	nop2	
  3992  002AC2                     
  3993                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  3994  002AC2  0E28               	movlw	40
  3995  002AC4  EC5F  F012         	call	_Lcd_Cmd
  3996  002AC8                     
  3997                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  3998  002AC8  0E10               	movlw	16
  3999  002ACA  EC5F  F012         	call	_Lcd_Cmd
  4000  002ACE                     
  4001                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  4002  002ACE  0E01               	movlw	1
  4003  002AD0  EC5F  F012         	call	_Lcd_Cmd
  4004  002AD4                     
  4005                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  4006  002AD4  0E0F               	movlw	15
  4007  002AD6  EC5F  F012         	call	_Lcd_Cmd
  4008  002ADA  0012               	return		;funcret
  4009  002ADC                     __end_of_Lcd_Init:
  4010                           	callstack 0
  4011                           
  4012 ;; *************** function _appISRConfig *****************
  4013 ;; Defined at:
  4014 ;;		line 52 in file "app.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		None
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4028 ;;      Params:         0       0       0       0       0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4031 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    2
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_appInit
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text19
  4043  0030B6                     __ptext19:
  4044                           	callstack 0
  4045  0030B6                     _appISRConfig:
  4046                           	callstack 27
  4047  0030B6                     
  4048                           ;app.c: 57:     RCONbits.IPEN = 1;
  4049  0030B6  8ED0               	bsf	208,7,c	;volatile
  4050                           
  4051                           ;app.c: 58:     INTCONbits.GIE_GIEH = 1;
  4052  0030B8  8EF2               	bsf	242,7,c	;volatile
  4053                           
  4054                           ;app.c: 59:     INTCONbits.PEIE_GIEL = 1;
  4055  0030BA  8CF2               	bsf	242,6,c	;volatile
  4056  0030BC  0012               	return		;funcret
  4057  0030BE                     __end_of_appISRConfig:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _adcInit *****************
  4061 ;; Defined at:
  4062 ;;		line 10 in file "adc.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  ADC_PINs        1    wreg     unsigned char 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  ADC_PINs        1    4[COMRAM] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0
  4077 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4078 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4079 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4080 ;;Total ram usage:        2 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    2
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_appInit
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text20
  4091  002E32                     __ptext20:
  4092                           	callstack 0
  4093  002E32                     _adcInit:
  4094                           	callstack 27
  4095                           
  4096                           ;incstack = 0
  4097                           ;adcInit@ADC_PINs stored from wreg
  4098  002E32  6E05               	movwf	adcInit@ADC_PINs^0,c
  4099  002E34                     
  4100                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  4101  002E34  5005               	movf	adcInit@ADC_PINs^0,w,c
  4102  002E36  A4D8               	btfss	status,2,c
  4103  002E38  EF20  F017         	goto	u3411
  4104  002E3C  EF22  F017         	goto	u3410
  4105  002E40                     u3411:
  4106  002E40  EF28  F017         	goto	l3476
  4107  002E44                     u3410:
  4108  002E44                     
  4109                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  4110  002E44  50C1               	movf	193,w,c	;volatile
  4111  002E46  0BF0               	andlw	-16
  4112  002E48  090E               	iorlw	14
  4113  002E4A  6EC1               	movwf	193,c	;volatile
  4114                           
  4115                           ;adc.c: 16:     }
  4116  002E4C  EF30  F017         	goto	l3478
  4117  002E50                     l3476:
  4118                           
  4119                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  4120  002E50  5005               	movf	adcInit@ADC_PINs^0,w,c
  4121  002E52  080F               	sublw	15
  4122  002E54  6E04               	movwf	??_adcInit^0,c
  4123  002E56  50C1               	movf	193,w,c	;volatile
  4124  002E58  1804               	xorwf	??_adcInit^0,w,c
  4125  002E5A  0BF0               	andlw	-16
  4126  002E5C  1804               	xorwf	??_adcInit^0,w,c
  4127  002E5E  6EC1               	movwf	193,c	;volatile
  4128  002E60                     l3478:
  4129                           
  4130                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  4131  002E60  0ECF               	movlw	-49
  4132  002E62  16C1               	andwf	193,f,c	;volatile
  4133  002E64                     
  4134                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  4135  002E64  50C0               	movf	192,w,c	;volatile
  4136  002E66  0BC7               	andlw	-57
  4137  002E68  0910               	iorlw	16
  4138  002E6A  6EC0               	movwf	192,c	;volatile
  4139  002E6C                     
  4140                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  4141  002E6C  50C0               	movf	192,w,c	;volatile
  4142  002E6E  0BF8               	andlw	-8
  4143  002E70  0903               	iorlw	3
  4144  002E72  6EC0               	movwf	192,c	;volatile
  4145  002E74                     
  4146                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  4147  002E74  8EC0               	bsf	192,7,c	;volatile
  4148  002E76                     
  4149                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  4150  002E76  80C2               	bsf	194,0,c	;volatile
  4151  002E78  0012               	return		;funcret
  4152  002E7A                     __end_of_adcInit:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _teclado *****************
  4156 ;; Defined at:
  4157 ;;		line 10 in file "teclado.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  valor           2    3[COMRAM] PTR unsigned char 
  4160 ;;		 -> datos(24), 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4172 ;;      Params:         2       0       0       0       0       0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4175 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4176 ;;Total ram usage:        2 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    2
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_appStateInitial
  4183 ;;		_appGetElements
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text21
  4188  0016B4                     __ptext21:
  4189                           	callstack 0
  4190  0016B4                     _teclado:
  4191                           	callstack 27
  4192  0016B4                     
  4193                           ;teclado.c: 11:     *valor = 0;
  4194  0016B4  C004  FFD9         	movff	teclado@valor,fsr2l
  4195  0016B8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4196  0016BC  0E00               	movlw	0
  4197  0016BE  6EDF               	movwf	indf2,c
  4198  0016C0                     
  4199                           ;teclado.c: 12:     PORTB=0xF0;
  4200  0016C0  0EF0               	movlw	240
  4201  0016C2  6E81               	movwf	129,c	;volatile
  4202  0016C4                     
  4203                           ;teclado.c: 13:     if(PORTB != 0xF0){
  4204  0016C4  0EF0               	movlw	240
  4205  0016C6  1881               	xorwf	129,w,c	;volatile
  4206  0016C8  B4D8               	btfsc	status,2,c
  4207  0016CA  EF69  F00B         	goto	u3421
  4208  0016CE  EF6B  F00B         	goto	u3420
  4209  0016D2                     u3421:
  4210  0016D2  EF43  F00C         	goto	l3588
  4211  0016D6                     u3420:
  4212  0016D6                     
  4213                           ;teclado.c: 14:         PORTB=0xFE;
  4214  0016D6  0EFE               	movlw	254
  4215  0016D8  6E81               	movwf	129,c	;volatile
  4216  0016DA                     
  4217                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  4218  0016DA  B881               	btfsc	129,4,c	;volatile
  4219  0016DC  EF72  F00B         	goto	u3431
  4220  0016E0  EF74  F00B         	goto	u3430
  4221  0016E4                     u3431:
  4222  0016E4  EF7A  F00B         	goto	l3522
  4223  0016E8                     u3430:
  4224  0016E8  C004  FFD9         	movff	teclado@valor,fsr2l
  4225  0016EC  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4226  0016F0  0E2A               	movlw	42
  4227  0016F2  6EDF               	movwf	indf2,c
  4228  0016F4                     l3522:
  4229                           
  4230                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  4231  0016F4  BA81               	btfsc	129,5,c	;volatile
  4232  0016F6  EF7F  F00B         	goto	u3441
  4233  0016FA  EF81  F00B         	goto	u3440
  4234  0016FE                     u3441:
  4235  0016FE  EF87  F00B         	goto	l3526
  4236  001702                     u3440:
  4237  001702  C004  FFD9         	movff	teclado@valor,fsr2l
  4238  001706  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4239  00170A  0E30               	movlw	48
  4240  00170C  6EDF               	movwf	indf2,c
  4241  00170E                     l3526:
  4242                           
  4243                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  4244  00170E  BC81               	btfsc	129,6,c	;volatile
  4245  001710  EF8C  F00B         	goto	u3451
  4246  001714  EF8E  F00B         	goto	u3450
  4247  001718                     u3451:
  4248  001718  EF94  F00B         	goto	l3530
  4249  00171C                     u3450:
  4250  00171C  C004  FFD9         	movff	teclado@valor,fsr2l
  4251  001720  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4252  001724  0E23               	movlw	35
  4253  001726  6EDF               	movwf	indf2,c
  4254  001728                     l3530:
  4255                           
  4256                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  4257  001728  BE81               	btfsc	129,7,c	;volatile
  4258  00172A  EF99  F00B         	goto	u3461
  4259  00172E  EF9B  F00B         	goto	u3460
  4260  001732                     u3461:
  4261  001732  EFA1  F00B         	goto	l3534
  4262  001736                     u3460:
  4263  001736  C004  FFD9         	movff	teclado@valor,fsr2l
  4264  00173A  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4265  00173E  0E44               	movlw	68
  4266  001740  6EDF               	movwf	indf2,c
  4267  001742                     l3534:
  4268                           
  4269                           ;teclado.c: 19:         PORTB=0xFD;
  4270  001742  0EFD               	movlw	253
  4271  001744  6E81               	movwf	129,c	;volatile
  4272  001746                     
  4273                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  4274  001746  B881               	btfsc	129,4,c	;volatile
  4275  001748  EFA8  F00B         	goto	u3471
  4276  00174C  EFAA  F00B         	goto	u3470
  4277  001750                     u3471:
  4278  001750  EFB0  F00B         	goto	l3540
  4279  001754                     u3470:
  4280  001754  C004  FFD9         	movff	teclado@valor,fsr2l
  4281  001758  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4282  00175C  0E37               	movlw	55
  4283  00175E  6EDF               	movwf	indf2,c
  4284  001760                     l3540:
  4285                           
  4286                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  4287  001760  BA81               	btfsc	129,5,c	;volatile
  4288  001762  EFB5  F00B         	goto	u3481
  4289  001766  EFB7  F00B         	goto	u3480
  4290  00176A                     u3481:
  4291  00176A  EFBD  F00B         	goto	l3544
  4292  00176E                     u3480:
  4293  00176E  C004  FFD9         	movff	teclado@valor,fsr2l
  4294  001772  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4295  001776  0E38               	movlw	56
  4296  001778  6EDF               	movwf	indf2,c
  4297  00177A                     l3544:
  4298                           
  4299                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  4300  00177A  BC81               	btfsc	129,6,c	;volatile
  4301  00177C  EFC2  F00B         	goto	u3491
  4302  001780  EFC4  F00B         	goto	u3490
  4303  001784                     u3491:
  4304  001784  EFCA  F00B         	goto	l3548
  4305  001788                     u3490:
  4306  001788  C004  FFD9         	movff	teclado@valor,fsr2l
  4307  00178C  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4308  001790  0E39               	movlw	57
  4309  001792  6EDF               	movwf	indf2,c
  4310  001794                     l3548:
  4311                           
  4312                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  4313  001794  BE81               	btfsc	129,7,c	;volatile
  4314  001796  EFCF  F00B         	goto	u3501
  4315  00179A  EFD1  F00B         	goto	u3500
  4316  00179E                     u3501:
  4317  00179E  EFD7  F00B         	goto	l3552
  4318  0017A2                     u3500:
  4319  0017A2  C004  FFD9         	movff	teclado@valor,fsr2l
  4320  0017A6  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4321  0017AA  0E43               	movlw	67
  4322  0017AC  6EDF               	movwf	indf2,c
  4323  0017AE                     l3552:
  4324                           
  4325                           ;teclado.c: 24:         PORTB=0xFB;
  4326  0017AE  0EFB               	movlw	251
  4327  0017B0  6E81               	movwf	129,c	;volatile
  4328  0017B2                     
  4329                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  4330  0017B2  B881               	btfsc	129,4,c	;volatile
  4331  0017B4  EFDE  F00B         	goto	u3511
  4332  0017B8  EFE0  F00B         	goto	u3510
  4333  0017BC                     u3511:
  4334  0017BC  EFE6  F00B         	goto	l3558
  4335  0017C0                     u3510:
  4336  0017C0  C004  FFD9         	movff	teclado@valor,fsr2l
  4337  0017C4  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4338  0017C8  0E34               	movlw	52
  4339  0017CA  6EDF               	movwf	indf2,c
  4340  0017CC                     l3558:
  4341                           
  4342                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  4343  0017CC  BA81               	btfsc	129,5,c	;volatile
  4344  0017CE  EFEB  F00B         	goto	u3521
  4345  0017D2  EFED  F00B         	goto	u3520
  4346  0017D6                     u3521:
  4347  0017D6  EFF3  F00B         	goto	l3562
  4348  0017DA                     u3520:
  4349  0017DA  C004  FFD9         	movff	teclado@valor,fsr2l
  4350  0017DE  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4351  0017E2  0E35               	movlw	53
  4352  0017E4  6EDF               	movwf	indf2,c
  4353  0017E6                     l3562:
  4354                           
  4355                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  4356  0017E6  BC81               	btfsc	129,6,c	;volatile
  4357  0017E8  EFF8  F00B         	goto	u3531
  4358  0017EC  EFFA  F00B         	goto	u3530
  4359  0017F0                     u3531:
  4360  0017F0  EF00  F00C         	goto	l3566
  4361  0017F4                     u3530:
  4362  0017F4  C004  FFD9         	movff	teclado@valor,fsr2l
  4363  0017F8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4364  0017FC  0E36               	movlw	54
  4365  0017FE  6EDF               	movwf	indf2,c
  4366  001800                     l3566:
  4367                           
  4368                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  4369  001800  BE81               	btfsc	129,7,c	;volatile
  4370  001802  EF05  F00C         	goto	u3541
  4371  001806  EF07  F00C         	goto	u3540
  4372  00180A                     u3541:
  4373  00180A  EF0D  F00C         	goto	l3570
  4374  00180E                     u3540:
  4375  00180E  C004  FFD9         	movff	teclado@valor,fsr2l
  4376  001812  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4377  001816  0E42               	movlw	66
  4378  001818  6EDF               	movwf	indf2,c
  4379  00181A                     l3570:
  4380                           
  4381                           ;teclado.c: 29:         PORTB=0xF7;
  4382  00181A  0EF7               	movlw	247
  4383  00181C  6E81               	movwf	129,c	;volatile
  4384  00181E                     
  4385                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  4386  00181E  B881               	btfsc	129,4,c	;volatile
  4387  001820  EF14  F00C         	goto	u3551
  4388  001824  EF16  F00C         	goto	u3550
  4389  001828                     u3551:
  4390  001828  EF1C  F00C         	goto	l3576
  4391  00182C                     u3550:
  4392  00182C  C004  FFD9         	movff	teclado@valor,fsr2l
  4393  001830  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4394  001834  0E31               	movlw	49
  4395  001836  6EDF               	movwf	indf2,c
  4396  001838                     l3576:
  4397                           
  4398                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  4399  001838  BA81               	btfsc	129,5,c	;volatile
  4400  00183A  EF21  F00C         	goto	u3561
  4401  00183E  EF23  F00C         	goto	u3560
  4402  001842                     u3561:
  4403  001842  EF29  F00C         	goto	l3580
  4404  001846                     u3560:
  4405  001846  C004  FFD9         	movff	teclado@valor,fsr2l
  4406  00184A  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4407  00184E  0E32               	movlw	50
  4408  001850  6EDF               	movwf	indf2,c
  4409  001852                     l3580:
  4410                           
  4411                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  4412  001852  BC81               	btfsc	129,6,c	;volatile
  4413  001854  EF2E  F00C         	goto	u3571
  4414  001858  EF30  F00C         	goto	u3570
  4415  00185C                     u3571:
  4416  00185C  EF36  F00C         	goto	l3584
  4417  001860                     u3570:
  4418  001860  C004  FFD9         	movff	teclado@valor,fsr2l
  4419  001864  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4420  001868  0E33               	movlw	51
  4421  00186A  6EDF               	movwf	indf2,c
  4422  00186C                     l3584:
  4423                           
  4424                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  4425  00186C  BE81               	btfsc	129,7,c	;volatile
  4426  00186E  EF3B  F00C         	goto	u3581
  4427  001872  EF3D  F00C         	goto	u3580
  4428  001876                     u3581:
  4429  001876  EF43  F00C         	goto	l3588
  4430  00187A                     u3580:
  4431  00187A  C004  FFD9         	movff	teclado@valor,fsr2l
  4432  00187E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4433  001882  0E41               	movlw	65
  4434  001884  6EDF               	movwf	indf2,c
  4435  001886                     l3588:
  4436                           
  4437                           ;teclado.c: 35:     PORTB = 0xF0;
  4438  001886  0EF0               	movlw	240
  4439  001888  6E81               	movwf	129,c	;volatile
  4440  00188A                     l3590:
  4441  00188A  0EF0               	movlw	240
  4442  00188C  1881               	xorwf	129,w,c	;volatile
  4443  00188E  A4D8               	btfss	status,2,c
  4444  001890  EF4C  F00C         	goto	u3591
  4445  001894  EF4E  F00C         	goto	u3590
  4446  001898                     u3591:
  4447  001898  EF45  F00C         	goto	l3590
  4448  00189C                     u3590:
  4449  00189C  0012               	return		;funcret
  4450  00189E                     __end_of_teclado:
  4451                           	callstack 0
  4452                           
  4453 ;; *************** function _sprintf *****************
  4454 ;; Defined at:
  4455 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  s               2    8[BANK0 ] PTR unsigned char 
  4458 ;;		 -> appElemts@dataout(6), datos(24), 
  4459 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
  4460 ;;		 -> STR_6(3), STR_5(5), STR_2(9), STR_1(14), 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  f               6   20[BANK0 ] struct _IO_FILE
  4463 ;;  ap              2   18[BANK0 ] PTR void [1]
  4464 ;;		 -> ?_sprintf(2), 
  4465 ;;  ret             2    0        int 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    8[BANK0 ] int 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4475 ;;      Params:         0       8       0       0       0       0       0       0       0
  4476 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4478 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4479 ;;Total ram usage:       18 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    9
  4482 ;; This function calls:
  4483 ;;		_vfprintf
  4484 ;; This function is called by:
  4485 ;;		_appADC
  4486 ;;		_appBat
  4487 ;;		_appElemts
  4488 ;;		_appGetElements
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text22
  4493  002D46                     __ptext22:
  4494                           	callstack 0
  4495  002D46                     _sprintf:
  4496                           	callstack 19
  4497  002D46  0E98               	movlw	low (?_sprintf+4)
  4498  002D48  0100               	movlb	0	; () banked
  4499  002D4A  6F9E               	movwf	sprintf@ap& (0+255),b
  4500  002D4C  0E00               	movlw	high (?_sprintf+4)
  4501  002D4E  6F9F               	movwf	(sprintf@ap+1)& (0+255),b
  4502  002D50  C094  F0A0         	movff	sprintf@s,sprintf@f
  4503  002D54  C095  F0A1         	movff	sprintf@s+1,sprintf@f+1
  4504  002D58                     
  4505                           ; BSR set to: 0
  4506  002D58  0E00               	movlw	0
  4507  002D5A  6FA3               	movwf	(sprintf@f+3)& (0+255),b
  4508  002D5C  0E00               	movlw	0
  4509  002D5E  6FA2               	movwf	(sprintf@f+2)& (0+255),b
  4510  002D60                     
  4511                           ; BSR set to: 0
  4512  002D60  0E00               	movlw	0
  4513  002D62  6FA5               	movwf	(sprintf@f+5)& (0+255),b
  4514  002D64  0E00               	movlw	0
  4515  002D66  6FA4               	movwf	(sprintf@f+4)& (0+255),b
  4516  002D68                     
  4517                           ; BSR set to: 0
  4518  002D68  0EA0               	movlw	low sprintf@f
  4519  002D6A  6F8C               	movwf	vfprintf@fp& (0+255),b
  4520  002D6C  0E00               	movlw	high sprintf@f
  4521  002D6E  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  4522  002D70  C096  F08E         	movff	sprintf@fmt,vfprintf@fmt
  4523  002D74  C097  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4524  002D78  0E9E               	movlw	low sprintf@ap
  4525  002D7A  6F90               	movwf	vfprintf@ap& (0+255),b
  4526  002D7C  0E00               	movlw	high sprintf@ap
  4527  002D7E  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  4528  002D80  EC72  F016         	call	_vfprintf	;wreg free
  4529  002D84  0100               	movlb	0	; () banked
  4530  002D86  51A2               	movf	(sprintf@f+2)& (0+255),w,b
  4531  002D88  2594               	addwf	sprintf@s& (0+255),w,b
  4532  002D8A  6ED9               	movwf	fsr2l,c
  4533  002D8C  51A3               	movf	(sprintf@f+3)& (0+255),w,b
  4534  002D8E  2195               	addwfc	(sprintf@s+1)& (0+255),w,b
  4535  002D90  6EDA               	movwf	fsr2h,c
  4536  002D92  0E00               	movlw	0
  4537  002D94  6EDF               	movwf	indf2,c
  4538  002D96                     
  4539                           ; BSR set to: 0
  4540  002D96  0012               	return		;funcret
  4541  002D98                     __end_of_sprintf:
  4542                           	callstack 0
  4543                           
  4544 ;; *************** function _vfprintf *****************
  4545 ;; Defined at:
  4546 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  4549 ;;		 -> sprintf@f(6), 
  4550 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4551 ;;		 -> STR_6(3), STR_5(5), STR_2(9), STR_1(14), 
  4552 ;;  ap              2    4[BANK0 ] PTR PTR void 
  4553 ;;		 -> sprintf@ap(2), 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  4556 ;;		 -> STR_6(3), STR_5(5), STR_2(9), STR_1(14), 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  2    0[BANK0 ] int 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4566 ;;      Params:         0       6       0       0       0       0       0       0       0
  4567 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4569 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4570 ;;Total ram usage:        8 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    8
  4573 ;; This function calls:
  4574 ;;		_vfpfcnvrt
  4575 ;; This function is called by:
  4576 ;;		_sprintf
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text23
  4581  002CE4                     __ptext23:
  4582                           	callstack 0
  4583  002CE4                     _vfprintf:
  4584                           	callstack 19
  4585  002CE4                     
  4586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4587  002CE4  C08E  F092         	movff	vfprintf@fmt,vfprintf@cfmt
  4588  002CE8  C08F  F093         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4589  002CEC                     
  4590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4591  002CEC  0E00               	movlw	0
  4592  002CEE  0100               	movlb	0	; () banked
  4593  002CF0  6F67               	movwf	(_nout+1)& (0+255),b
  4594  002CF2  0E00               	movlw	0
  4595  002CF4  6F66               	movwf	_nout& (0+255),b
  4596                           
  4597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4598  002CF6  EF90  F016         	goto	l4186
  4599  002CFA                     l4184:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4603  002CFA  C08C  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4604  002CFE  C08D  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4605  002D02  0E92               	movlw	low vfprintf@cfmt
  4606  002D04  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4607  002D06  0E00               	movlw	high vfprintf@cfmt
  4608  002D08  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4609  002D0A  C090  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4610  002D0E  C091  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4611  002D12  EC2F  F006         	call	_vfpfcnvrt	;wreg free
  4612  002D16  5043               	movf	?_vfpfcnvrt^0,w,c
  4613  002D18  0100               	movlb	0	; () banked
  4614  002D1A  2766               	addwf	_nout& (0+255),f,b
  4615  002D1C  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4616  002D1E  2367               	addwfc	(_nout+1)& (0+255),f,b
  4617  002D20                     l4186:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4621  002D20  C092  FFF6         	movff	vfprintf@cfmt,tblptrl
  4622  002D24  C093  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4623  002D28                     	if	0	;tblptru may be non-zero
  4624  002D28                     	endif
  4625  002D28                     	if	0	;tblptru may be non-zero
  4626  002D28                     	endif
  4627  002D28  0008               	tblrd		*
  4628  002D2A  50F5               	movf	tablat,w,c
  4629  002D2C  0900               	iorlw	0
  4630  002D2E  A4D8               	btfss	status,2,c
  4631  002D30  EF9C  F016         	goto	u4381
  4632  002D34  EF9E  F016         	goto	u4380
  4633  002D38                     u4381:
  4634  002D38  EF7D  F016         	goto	l4184
  4635  002D3C                     u4380:
  4636  002D3C                     
  4637                           ; BSR set to: 0
  4638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4639  002D3C  C066  F08C         	movff	_nout,?_vfprintf
  4640  002D40  C067  F08D         	movff	_nout+1,?_vfprintf+1
  4641  002D44                     
  4642                           ; BSR set to: 0
  4643  002D44  0012               	return		;funcret
  4644  002D46                     __end_of_vfprintf:
  4645                           	callstack 0
  4646                           
  4647 ;; *************** function _vfpfcnvrt *****************
  4648 ;; Defined at:
  4649 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4652 ;;		 -> sprintf@f(6), 
  4653 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4654 ;;		 -> vfprintf@cfmt(2), 
  4655 ;;  ap              2   70[COMRAM] PTR PTR void 
  4656 ;;		 -> sprintf@ap(2), 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  ll              8   76[COMRAM] long long 
  4659 ;;  llu             8    0        unsigned long long 
  4660 ;;  f               4    0        unsigned long long 
  4661 ;;  vp              3    0        PTR void 
  4662 ;;  ct              3    0        unsigned char [3]
  4663 ;;  cp              3    0        PTR unsigned char 
  4664 ;;  done            2   85[COMRAM] int 
  4665 ;;  i               2    0        int 
  4666 ;;  c               1   84[COMRAM] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  2   66[COMRAM] int 
  4669 ;; Registers used:
  4670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4676 ;;      Params:         6       0       0       0       0       0       0       0       0
  4677 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4678 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4679 ;;      Totals:        23       0       0       0       0       0       0       0       0
  4680 ;;Total ram usage:       23 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:    7
  4683 ;; This function calls:
  4684 ;;		_atoi
  4685 ;;		_ctoa
  4686 ;;		_dtoa
  4687 ;;		_fputc
  4688 ;;		_isdigit
  4689 ;; This function is called by:
  4690 ;;		_vfprintf
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text24
  4695  000C5E                     __ptext24:
  4696                           	callstack 0
  4697  000C5E                     _vfpfcnvrt:
  4698                           	callstack 19
  4699  000C5E                     
  4700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4701  000C5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4702  000C62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4703  000C66  CFDE FFF6          	movff	postinc2,tblptrl
  4704  000C6A  CFDD FFF7          	movff	postdec2,tblptrh
  4705  000C6E                     	if	0	;tblptru may be non-zero
  4706  000C6E                     	endif
  4707  000C6E                     	if	0	;tblptru may be non-zero
  4708  000C6E                     	endif
  4709  000C6E  0008               	tblrd		*
  4710  000C70  50F5               	movf	tablat,w,c
  4711  000C72  0A25               	xorlw	37
  4712  000C74  A4D8               	btfss	status,2,c
  4713  000C76  EF3F  F006         	goto	u4261
  4714  000C7A  EF41  F006         	goto	u4260
  4715  000C7E                     u4261:
  4716  000C7E  EF02  F008         	goto	l4168
  4717  000C82                     u4260:
  4718  000C82                     
  4719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4720  000C82  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4721  000C86  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4722  000C8A  2ADE               	incf	postinc2,f,c
  4723  000C8C  0E00               	movlw	0
  4724  000C8E  22DD               	addwfc	postdec2,f,c
  4725  000C90                     
  4726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4727  000C90  0E00               	movlw	0
  4728  000C92  0100               	movlb	0	; () banked
  4729  000C94  6F69               	movwf	(_width+1)& (0+255),b
  4730  000C96  0E00               	movlw	0
  4731  000C98  6F68               	movwf	_width& (0+255),b
  4732  000C9A  C068  F05A         	movff	_width,_flags
  4733  000C9E  C069  F05B         	movff	_width+1,_flags+1
  4734  000CA2                     
  4735                           ; BSR set to: 0
  4736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4737  000CA2  696A               	setf	_prec& (0+255),b
  4738  000CA4  696B               	setf	(_prec+1)& (0+255),b
  4739  000CA6                     
  4740                           ; BSR set to: 0
  4741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4742  000CA6  0E00               	movlw	0
  4743  000CA8  6E57               	movwf	(vfpfcnvrt@done+1)^0,c
  4744  000CAA  0E00               	movlw	0
  4745  000CAC  6E56               	movwf	vfpfcnvrt@done^0,c
  4746                           
  4747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4748  000CAE  EF9F  F006         	goto	l4112
  4749  000CB2                     l4086:
  4750                           
  4751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4752  000CB2  805A               	bsf	_flags^0,0,c
  4753  000CB4                     l4088:
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4756  000CB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4757  000CB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4758  000CBC  2ADE               	incf	postinc2,f,c
  4759  000CBE  0E00               	movlw	0
  4760  000CC0  22DD               	addwfc	postdec2,f,c
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4763  000CC2  EF9F  F006         	goto	l4112
  4764  000CC6                     l4090:
  4765                           
  4766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4767  000CC6  825A               	bsf	_flags^0,1,c
  4768  000CC8  EF5A  F006         	goto	l4088
  4769  000CCC                     l4094:
  4770                           
  4771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4772  000CCC  845A               	bsf	_flags^0,2,c
  4773  000CCE  EF5A  F006         	goto	l4088
  4774  000CD2                     l4098:
  4775                           
  4776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4777  000CD2  865A               	bsf	_flags^0,3,c
  4778  000CD4  EF5A  F006         	goto	l4088
  4779  000CD8                     l4102:
  4780                           
  4781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4782  000CD8  885A               	bsf	_flags^0,4,c
  4783  000CDA  EF5A  F006         	goto	l4088
  4784  000CDE                     l4106:
  4785                           
  4786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4787  000CDE  0E00               	movlw	0
  4788  000CE0  6E57               	movwf	(vfpfcnvrt@done+1)^0,c
  4789  000CE2  0E01               	movlw	1
  4790  000CE4  6E56               	movwf	vfpfcnvrt@done^0,c
  4791                           
  4792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4793  000CE6  EF9F  F006         	goto	l4112
  4794  000CEA                     l4110:
  4795  000CEA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4796  000CEE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4797  000CF2  CFDE FFF6          	movff	postinc2,tblptrl
  4798  000CF6  CFDD FFF7          	movff	postdec2,tblptrh
  4799  000CFA                     	if	0	;tblptru may be non-zero
  4800  000CFA                     	endif
  4801  000CFA                     	if	0	;tblptru may be non-zero
  4802  000CFA                     	endif
  4803  000CFA  0008               	tblrd		*
  4804  000CFC  50F5               	movf	tablat,w,c
  4805  000CFE  6E49               	movwf	??_vfpfcnvrt^0,c
  4806  000D00  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  4807                           
  4808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4809                           ; Switch size 1, requested type "simple"
  4810                           ; Number of cases is 1, Range of values is 0 to 0
  4811                           ; switch strategies available:
  4812                           ; Name         Instructions Cycles
  4813                           ; simple_byte            4     3 (average)
  4814                           ;	Chosen strategy is simple_byte
  4815  000D02  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4816  000D04  0A00               	xorlw	0	; case 0
  4817  000D06  B4D8               	btfsc	status,2,c
  4818  000D08  EF88  F006         	goto	l4340
  4819  000D0C  EF6F  F006         	goto	l4106
  4820  000D10                     l4340:
  4821                           
  4822                           ; Switch size 1, requested type "simple"
  4823                           ; Number of cases is 5, Range of values is 32 to 48
  4824                           ; switch strategies available:
  4825                           ; Name         Instructions Cycles
  4826                           ; simple_byte           16     9 (average)
  4827                           ;	Chosen strategy is simple_byte
  4828  000D10  5049               	movf	??_vfpfcnvrt^0,w,c
  4829  000D12  0A20               	xorlw	32	; case 32
  4830  000D14  B4D8               	btfsc	status,2,c
  4831  000D16  EF69  F006         	goto	l4098
  4832  000D1A  0A03               	xorlw	3	; case 35
  4833  000D1C  B4D8               	btfsc	status,2,c
  4834  000D1E  EF6C  F006         	goto	l4102
  4835  000D22  0A08               	xorlw	8	; case 43
  4836  000D24  B4D8               	btfsc	status,2,c
  4837  000D26  EF66  F006         	goto	l4094
  4838  000D2A  0A06               	xorlw	6	; case 45
  4839  000D2C  B4D8               	btfsc	status,2,c
  4840  000D2E  EF59  F006         	goto	l4086
  4841  000D32  0A1D               	xorlw	29	; case 48
  4842  000D34  B4D8               	btfsc	status,2,c
  4843  000D36  EF63  F006         	goto	l4090
  4844  000D3A  EF6F  F006         	goto	l4106
  4845  000D3E                     l4112:
  4846                           
  4847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4848  000D3E  5056               	movf	vfpfcnvrt@done^0,w,c
  4849  000D40  1057               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  4850  000D42  B4D8               	btfsc	status,2,c
  4851  000D44  EFA6  F006         	goto	u4271
  4852  000D48  EFA8  F006         	goto	u4270
  4853  000D4C                     u4271:
  4854  000D4C  EF75  F006         	goto	l4110
  4855  000D50                     u4270:
  4856  000D50                     
  4857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4858  000D50  A05A               	btfss	_flags^0,0,c
  4859  000D52  EFAD  F006         	goto	u4281
  4860  000D56  EFAF  F006         	goto	u4280
  4861  000D5A                     u4281:
  4862  000D5A  EFB0  F006         	goto	l4116
  4863  000D5E                     u4280:
  4864  000D5E                     
  4865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4866  000D5E  925A               	bcf	_flags^0,1,c
  4867  000D60                     l4116:
  4868                           
  4869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4870  000D60  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4871  000D64  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4872  000D68  CFDE FFF6          	movff	postinc2,tblptrl
  4873  000D6C  CFDD FFF7          	movff	postdec2,tblptrh
  4874  000D70                     	if	0	;tblptru may be non-zero
  4875  000D70                     	endif
  4876  000D70                     	if	0	;tblptru may be non-zero
  4877  000D70                     	endif
  4878  000D70  0008               	tblrd		*
  4879  000D72  50F5               	movf	tablat,w,c
  4880  000D74  0A2A               	xorlw	42
  4881  000D76  A4D8               	btfss	status,2,c
  4882  000D78  EFC0  F006         	goto	u4291
  4883  000D7C  EFC2  F006         	goto	u4290
  4884  000D80                     u4291:
  4885  000D80  EFEC  F006         	goto	l4124
  4886  000D84                     u4290:
  4887  000D84                     
  4888                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4889  000D84  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4890  000D88  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4891  000D8C  2ADE               	incf	postinc2,f,c
  4892  000D8E  0E00               	movlw	0
  4893  000D90  22DD               	addwfc	postdec2,f,c
  4894                           
  4895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4896  000D92  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4897  000D96  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4898  000D9A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4899  000D9E  0E02               	movlw	2
  4900  000DA0  26DE               	addwf	postinc2,f,c
  4901  000DA2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4902  000DA6  0E00               	movlw	0
  4903  000DA8  22DD               	addwfc	postdec2,f,c
  4904  000DAA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4905  000DAE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4906  000DB2  CFDE F068          	movff	postinc2,_width
  4907  000DB6  CFDD F069          	movff	postdec2,_width+1
  4908  000DBA                     
  4909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4910  000DBA  0100               	movlb	0	; () banked
  4911  000DBC  BF69               	btfsc	(_width+1)& (0+255),7,b
  4912  000DBE  EFE5  F006         	goto	u4300
  4913  000DC2  EFE3  F006         	goto	u4301
  4914  000DC6                     u4301:
  4915  000DC6  EF2F  F007         	goto	l4134
  4916  000DCA                     u4300:
  4917  000DCA                     
  4918                           ; BSR set to: 0
  4919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4920  000DCA  805A               	bsf	_flags^0,0,c
  4921                           
  4922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4923  000DCC  6D68               	negf	_width& (0+255),b
  4924  000DCE  1F69               	comf	(_width+1)& (0+255),f,b
  4925  000DD0  B0D8               	btfsc	status,0,c
  4926  000DD2  2B69               	incf	(_width+1)& (0+255),f,b
  4927  000DD4  EF2F  F007         	goto	l4134
  4928  000DD8                     l4124:
  4929                           
  4930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4931  000DD8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4932  000DDC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4933  000DE0  CFDE F00B          	movff	postinc2,atoi@s
  4934  000DE4  CFDD F00C          	movff	postdec2,atoi@s+1
  4935  000DE8  EC1D  F00E         	call	_atoi	;wreg free
  4936  000DEC  C00B  F068         	movff	?_atoi,_width
  4937  000DF0  C00C  F069         	movff	?_atoi+1,_width+1
  4938                           
  4939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4940  000DF4  EF03  F007         	goto	l4128
  4941  000DF8                     l4126:
  4942                           
  4943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  4944  000DF8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4945  000DFC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4946  000E00  2ADE               	incf	postinc2,f,c
  4947  000E02  0E00               	movlw	0
  4948  000E04  22DD               	addwfc	postdec2,f,c
  4949  000E06                     l4128:
  4950  000E06  0ED0               	movlw	208
  4951  000E08  6E49               	movwf	??_vfpfcnvrt^0,c
  4952  000E0A  0EFF               	movlw	255
  4953  000E0C  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4954  000E0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4955  000E12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4956  000E16  CFDE FFF6          	movff	postinc2,tblptrl
  4957  000E1A  CFDD FFF7          	movff	postdec2,tblptrh
  4958  000E1E                     	if	0	;tblptru may be non-zero
  4959  000E1E                     	endif
  4960  000E1E                     	if	0	;tblptru may be non-zero
  4961  000E1E                     	endif
  4962  000E1E  0008               	tblrd		*
  4963  000E20  50F5               	movf	tablat,w,c
  4964  000E22  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4965  000E24  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4966  000E26  5049               	movf	??_vfpfcnvrt^0,w,c
  4967  000E28  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4968  000E2A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4969  000E2C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4970  000E2E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4971  000E30  E10A               	bnz	u4310
  4972  000E32  0E0A               	movlw	10
  4973  000E34  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4974  000E36  A0D8               	btfss	status,0,c
  4975  000E38  EF20  F007         	goto	u4311
  4976  000E3C  EF23  F007         	goto	u4310
  4977  000E40                     u4311:
  4978  000E40  0E01               	movlw	1
  4979  000E42  EF24  F007         	goto	u4320
  4980  000E46                     u4310:
  4981  000E46  0E00               	movlw	0
  4982  000E48                     u4320:
  4983  000E48  6E58               	movwf	_vfpfcnvrt$1657^0,c
  4984  000E4A  6A59               	clrf	(_vfpfcnvrt$1657+1)^0,c
  4985  000E4C  5058               	movf	_vfpfcnvrt$1657^0,w,c
  4986  000E4E  1059               	iorwf	(_vfpfcnvrt$1657+1)^0,w,c
  4987  000E50  A4D8               	btfss	status,2,c
  4988  000E52  EF2D  F007         	goto	u4331
  4989  000E56  EF2F  F007         	goto	u4330
  4990  000E5A                     u4331:
  4991  000E5A  EFFC  F006         	goto	l4126
  4992  000E5E                     u4330:
  4993  000E5E                     l4134:
  4994                           
  4995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  4996  000E5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4997  000E62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4998  000E66  CFDE FFF6          	movff	postinc2,tblptrl
  4999  000E6A  CFDD FFF7          	movff	postdec2,tblptrh
  5000  000E6E                     	if	0	;tblptru may be non-zero
  5001  000E6E                     	endif
  5002  000E6E                     	if	0	;tblptru may be non-zero
  5003  000E6E                     	endif
  5004  000E6E  0008               	tblrd		*
  5005  000E70  50F5               	movf	tablat,w,c
  5006  000E72  0A63               	xorlw	99
  5007  000E74  A4D8               	btfss	status,2,c
  5008  000E76  EF3F  F007         	goto	u4341
  5009  000E7A  EF41  F007         	goto	u4340
  5010  000E7E                     u4341:
  5011  000E7E  EF68  F007         	goto	l4142
  5012  000E82                     u4340:
  5013  000E82                     
  5014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  5015  000E82  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5016  000E86  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5017  000E8A  2ADE               	incf	postinc2,f,c
  5018  000E8C  0E00               	movlw	0
  5019  000E8E  22DD               	addwfc	postdec2,f,c
  5020                           
  5021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5022  000E90  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5023  000E94  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5024  000E98  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5025  000E9C  0E02               	movlw	2
  5026  000E9E  26DE               	addwf	postinc2,f,c
  5027  000EA0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5028  000EA4  0E00               	movlw	0
  5029  000EA6  22DD               	addwfc	postdec2,f,c
  5030  000EA8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5031  000EAC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5032  000EB0  50DF               	movf	indf2,w,c
  5033  000EB2  6E55               	movwf	vfpfcnvrt@c^0,c
  5034  000EB4                     
  5035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  5036  000EB4  C043  F00D         	movff	vfpfcnvrt@fp,ctoa@fp
  5037  000EB8  C044  F00E         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5038  000EBC  C055  F00F         	movff	vfpfcnvrt@c,ctoa@c
  5039  000EC0  EC77  F013         	call	_ctoa	;wreg free
  5040  000EC4  C00D  F043         	movff	?_ctoa,?_vfpfcnvrt
  5041  000EC8  C00E  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  5042  000ECC  EF1D  F008         	goto	l1069
  5043  000ED0                     l4142:
  5044                           
  5045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5046  000ED0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5047  000ED4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5048  000ED8  CFDE FFF6          	movff	postinc2,tblptrl
  5049  000EDC  CFDD FFF7          	movff	postdec2,tblptrh
  5050  000EE0                     	if	0	;tblptru may be non-zero
  5051  000EE0                     	endif
  5052  000EE0                     	if	0	;tblptru may be non-zero
  5053  000EE0                     	endif
  5054  000EE0  0008               	tblrd		*
  5055  000EE2  50F5               	movf	tablat,w,c
  5056  000EE4  0A64               	xorlw	100
  5057  000EE6  B4D8               	btfsc	status,2,c
  5058  000EE8  EF78  F007         	goto	u4351
  5059  000EEC  EF7A  F007         	goto	u4350
  5060  000EF0                     u4351:
  5061  000EF0  EF8C  F007         	goto	l4146
  5062  000EF4                     u4350:
  5063  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5064  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5065  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  5066  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  5067  000F04                     	if	0	;tblptru may be non-zero
  5068  000F04                     	endif
  5069  000F04                     	if	0	;tblptru may be non-zero
  5070  000F04                     	endif
  5071  000F04  0008               	tblrd		*
  5072  000F06  50F5               	movf	tablat,w,c
  5073  000F08  0A69               	xorlw	105
  5074  000F0A  A4D8               	btfss	status,2,c
  5075  000F0C  EF8A  F007         	goto	u4361
  5076  000F10  EF8C  F007         	goto	u4360
  5077  000F14                     u4361:
  5078  000F14  EFCC  F007         	goto	l4152
  5079  000F18                     u4360:
  5080  000F18                     l4146:
  5081                           
  5082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5083  000F18  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5084  000F1C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5085  000F20  2ADE               	incf	postinc2,f,c
  5086  000F22  0E00               	movlw	0
  5087  000F24  22DD               	addwfc	postdec2,f,c
  5088                           
  5089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5090  000F26  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5091  000F2A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5092  000F2E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5093  000F32  0E02               	movlw	2
  5094  000F34  26DE               	addwf	postinc2,f,c
  5095  000F36  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5096  000F3A  0E00               	movlw	0
  5097  000F3C  22DD               	addwfc	postdec2,f,c
  5098  000F3E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5099  000F42  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5100  000F46  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  5101  000F4A  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  5102  000F4E  0E00               	movlw	0
  5103  000F50  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5104  000F52  0EFF               	movlw	-1
  5105  000F54  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  5106  000F56  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  5107  000F58  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  5108  000F5A  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  5109  000F5C  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  5110  000F5E  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  5111  000F60                     
  5112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5113  000F60  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  5114  000F64  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5115  000F68  C04D  F021         	movff	vfpfcnvrt@ll,dtoa@d
  5116  000F6C  C04E  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5117  000F70  C04F  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5118  000F74  C050  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5119  000F78  C051  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5120  000F7C  C052  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5121  000F80  C053  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5122  000F84  C054  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5123  000F88  ECEB  F009         	call	_dtoa	;wreg free
  5124  000F8C  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  5125  000F90  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5126  000F94  EF1D  F008         	goto	l1069
  5127  000F98                     l4152:
  5128                           
  5129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5130  000F98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5131  000F9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5132  000FA0  CFDE FFF6          	movff	postinc2,tblptrl
  5133  000FA4  CFDD FFF7          	movff	postdec2,tblptrh
  5134  000FA8                     	if	0	;tblptru may be non-zero
  5135  000FA8                     	endif
  5136  000FA8                     	if	0	;tblptru may be non-zero
  5137  000FA8                     	endif
  5138  000FA8  0008               	tblrd		*
  5139  000FAA  50F5               	movf	tablat,w,c
  5140  000FAC  0A25               	xorlw	37
  5141  000FAE  A4D8               	btfss	status,2,c
  5142  000FB0  EFDC  F007         	goto	u4371
  5143  000FB4  EFDE  F007         	goto	u4370
  5144  000FB8                     u4371:
  5145  000FB8  EFF5  F007         	goto	l4162
  5146  000FBC                     u4370:
  5147  000FBC                     
  5148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5149  000FBC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5150  000FC0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5151  000FC4  2ADE               	incf	postinc2,f,c
  5152  000FC6  0E00               	movlw	0
  5153  000FC8  22DD               	addwfc	postdec2,f,c
  5154  000FCA                     
  5155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5156  000FCA  0E00               	movlw	0
  5157  000FCC  6E05               	movwf	(fputc@c+1)^0,c
  5158  000FCE  0E25               	movlw	37
  5159  000FD0  6E04               	movwf	fputc@c^0,c
  5160  000FD2  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5161  000FD6  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5162  000FDA  EC48  F014         	call	_fputc	;wreg free
  5163  000FDE                     l4158:
  5164                           
  5165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5166  000FDE  0E00               	movlw	0
  5167  000FE0  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5168  000FE2  0E01               	movlw	1
  5169  000FE4  6E43               	movwf	?_vfpfcnvrt^0,c
  5170  000FE6  EF1D  F008         	goto	l1069
  5171  000FEA                     l4162:
  5172                           
  5173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5174  000FEA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5175  000FEE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5176  000FF2  2ADE               	incf	postinc2,f,c
  5177  000FF4  0E00               	movlw	0
  5178  000FF6  22DD               	addwfc	postdec2,f,c
  5179  000FF8                     
  5180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5181  000FF8  0E00               	movlw	0
  5182  000FFA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5183  000FFC  0E00               	movlw	0
  5184  000FFE  6E43               	movwf	?_vfpfcnvrt^0,c
  5185  001000  EF1D  F008         	goto	l1069
  5186  001004                     l4168:
  5187                           
  5188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5189  001004  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5190  001008  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5191  00100C  CFDE FFF6          	movff	postinc2,tblptrl
  5192  001010  CFDD FFF7          	movff	postdec2,tblptrh
  5193  001014                     	if	0	;tblptru may be non-zero
  5194  001014                     	endif
  5195  001014                     	if	0	;tblptru may be non-zero
  5196  001014                     	endif
  5197  001014  0008               	tblrd		*
  5198  001016  50F5               	movf	tablat,w,c
  5199  001018  6E04               	movwf	fputc@c^0,c
  5200  00101A  6A05               	clrf	(fputc@c+1)^0,c
  5201  00101C  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5202  001020  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5203  001024  EC48  F014         	call	_fputc	;wreg free
  5204  001028                     
  5205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5206  001028  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5207  00102C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5208  001030  2ADE               	incf	postinc2,f,c
  5209  001032  0E00               	movlw	0
  5210  001034  22DD               	addwfc	postdec2,f,c
  5211  001036  EFEF  F007         	goto	l4158
  5212  00103A                     l1069:
  5213  00103A  0012               	return		;funcret
  5214  00103C                     __end_of_vfpfcnvrt:
  5215                           	callstack 0
  5216                           
  5217 ;; *************** function _dtoa *****************
  5218 ;; Defined at:
  5219 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5222 ;;		 -> sprintf@f(6), 
  5223 ;;  d               8   32[COMRAM] long long 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  n               8   56[COMRAM] long long 
  5226 ;;  i               2   64[COMRAM] int 
  5227 ;;  s               2   54[COMRAM] int 
  5228 ;;  w               2   52[COMRAM] int 
  5229 ;;  p               2   50[COMRAM] int 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  2   30[COMRAM] int 
  5232 ;; Registers used:
  5233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5239 ;;      Params:        10       0       0       0       0       0       0       0       0
  5240 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5241 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5242 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5243 ;;Total ram usage:       36 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    6
  5246 ;; This function calls:
  5247 ;;		___aodiv
  5248 ;;		___aomod
  5249 ;;		_abs
  5250 ;;		_pad
  5251 ;; This function is called by:
  5252 ;;		_vfpfcnvrt
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text25
  5257  0013D6                     __ptext25:
  5258                           	callstack 0
  5259  0013D6                     _dtoa:
  5260                           	callstack 19
  5261  0013D6                     
  5262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5263  0013D6  C021  F039         	movff	dtoa@d,dtoa@n
  5264  0013DA  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  5265  0013DE  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  5266  0013E2  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  5267  0013E6  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  5268  0013EA  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  5269  0013EE  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  5270  0013F2  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  5271  0013F6                     
  5272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5273  0013F6  BE40               	btfsc	(dtoa@n+7)^0,7,c
  5274  0013F8  EF00  F00A         	goto	u4041
  5275  0013FC  EF03  F00A         	goto	u4040
  5276  001400                     u4041:
  5277  001400  0E01               	movlw	1
  5278  001402  EF04  F00A         	goto	u4050
  5279  001406                     u4040:
  5280  001406  0E00               	movlw	0
  5281  001408                     u4050:
  5282  001408  6E37               	movwf	dtoa@s^0,c
  5283  00140A  6A38               	clrf	(dtoa@s+1)^0,c
  5284                           
  5285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5286  00140C  5037               	movf	dtoa@s^0,w,c
  5287  00140E  1038               	iorwf	(dtoa@s+1)^0,w,c
  5288  001410  B4D8               	btfsc	status,2,c
  5289  001412  EF0D  F00A         	goto	u4061
  5290  001416  EF0F  F00A         	goto	u4060
  5291  00141A                     u4061:
  5292  00141A  EF1F  F00A         	goto	l3978
  5293  00141E                     u4060:
  5294  00141E                     
  5295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5296  00141E  1E40               	comf	(dtoa@n+7)^0,f,c
  5297  001420  1E3F               	comf	(dtoa@n+6)^0,f,c
  5298  001422  1E3E               	comf	(dtoa@n+5)^0,f,c
  5299  001424  1E3D               	comf	(dtoa@n+4)^0,f,c
  5300  001426  1E3C               	comf	(dtoa@n+3)^0,f,c
  5301  001428  1E3B               	comf	(dtoa@n+2)^0,f,c
  5302  00142A  1E3A               	comf	(dtoa@n+1)^0,f,c
  5303  00142C  6C39               	negf	dtoa@n^0,c
  5304  00142E  0E00               	movlw	0
  5305  001430  223A               	addwfc	(dtoa@n+1)^0,f,c
  5306  001432  223B               	addwfc	(dtoa@n+2)^0,f,c
  5307  001434  223C               	addwfc	(dtoa@n+3)^0,f,c
  5308  001436  223D               	addwfc	(dtoa@n+4)^0,f,c
  5309  001438  223E               	addwfc	(dtoa@n+5)^0,f,c
  5310  00143A  223F               	addwfc	(dtoa@n+6)^0,f,c
  5311  00143C  2240               	addwfc	(dtoa@n+7)^0,f,c
  5312  00143E                     l3978:
  5313                           
  5314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5315  00143E  0100               	movlb	0	; () banked
  5316  001440  BF6B               	btfsc	(_prec+1)& (0+255),7,b
  5317  001442  EF25  F00A         	goto	u4071
  5318  001446  EF27  F00A         	goto	u4070
  5319  00144A                     u4071:
  5320  00144A  EF28  F00A         	goto	l3982
  5321  00144E                     u4070:
  5322  00144E                     
  5323                           ; BSR set to: 0
  5324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5325  00144E  925A               	bcf	_flags^0,1,c
  5326  001450                     l3982:
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5330  001450  BF6B               	btfsc	(_prec+1)& (0+255),7,b
  5331  001452  EF35  F00A         	goto	u4080
  5332  001456  516B               	movf	(_prec+1)& (0+255),w,b
  5333  001458  E106               	bnz	u4081
  5334  00145A  056A               	decf	_prec& (0+255),w,b
  5335  00145C  B0D8               	btfsc	status,0,c
  5336  00145E  EF33  F00A         	goto	u4081
  5337  001462  EF35  F00A         	goto	u4080
  5338  001466                     u4081:
  5339  001466  EF3B  F00A         	goto	l1022
  5340  00146A                     u4080:
  5341  00146A                     
  5342                           ; BSR set to: 0
  5343  00146A  0E00               	movlw	0
  5344  00146C  6E34               	movwf	(dtoa@p+1)^0,c
  5345  00146E  0E01               	movlw	1
  5346  001470  6E33               	movwf	dtoa@p^0,c
  5347  001472  EF3F  F00A         	goto	l1024
  5348  001476                     l1022:
  5349                           
  5350                           ; BSR set to: 0
  5351  001476  C06A  F033         	movff	_prec,dtoa@p
  5352  00147A  C06B  F034         	movff	_prec+1,dtoa@p+1
  5353  00147E                     l1024:
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5357  00147E  C068  F035         	movff	_width,dtoa@w
  5358  001482  C069  F036         	movff	_width+1,dtoa@w+1
  5359  001486                     
  5360                           ; BSR set to: 0
  5361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5362  001486  5037               	movf	dtoa@s^0,w,c
  5363  001488  1038               	iorwf	(dtoa@s+1)^0,w,c
  5364  00148A  A4D8               	btfss	status,2,c
  5365  00148C  EF4A  F00A         	goto	u4091
  5366  001490  EF4C  F00A         	goto	u4090
  5367  001494                     u4091:
  5368  001494  EF53  F00A         	goto	l3990
  5369  001498                     u4090:
  5370  001498                     
  5371                           ; BSR set to: 0
  5372  001498  A45A               	btfss	_flags^0,2,c
  5373  00149A  EF51  F00A         	goto	u4101
  5374  00149E  EF53  F00A         	goto	u4100
  5375  0014A2                     u4101:
  5376  0014A2  EF56  F00A         	goto	l3992
  5377  0014A6                     u4100:
  5378  0014A6                     l3990:
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5382  0014A6  0635               	decf	dtoa@w^0,f,c
  5383  0014A8  A0D8               	btfss	status,0,c
  5384  0014AA  0636               	decf	(dtoa@w+1)^0,f,c
  5385  0014AC                     l3992:
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5389  0014AC  0E00               	movlw	0
  5390  0014AE  6E42               	movwf	(dtoa@i+1)^0,c
  5391  0014B0  0E1F               	movlw	31
  5392  0014B2  6E41               	movwf	dtoa@i^0,c
  5393  0014B4                     
  5394                           ; BSR set to: 0
  5395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5396  0014B4  0E00               	movlw	0
  5397  0014B6  6F8B               	movwf	(_dbuf+31)& (0+255),b
  5398                           
  5399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5400  0014B8  EFDA  F00A         	goto	l4006
  5401  0014BC                     l3996:
  5402                           
  5403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5404  0014BC  0641               	decf	dtoa@i^0,f,c
  5405  0014BE  A0D8               	btfss	status,0,c
  5406  0014C0  0642               	decf	(dtoa@i+1)^0,f,c
  5407  0014C2                     
  5408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5409  0014C2  0E6C               	movlw	low _dbuf
  5410  0014C4  2441               	addwf	dtoa@i^0,w,c
  5411  0014C6  6ED9               	movwf	fsr2l,c
  5412  0014C8  0E00               	movlw	high _dbuf
  5413  0014CA  2042               	addwfc	(dtoa@i+1)^0,w,c
  5414  0014CC  6EDA               	movwf	fsr2h,c
  5415  0014CE  C039  F004         	movff	dtoa@n,___aomod@dividend
  5416  0014D2  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  5417  0014D6  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  5418  0014DA  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  5419  0014DE  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  5420  0014E2  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  5421  0014E6  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  5422  0014EA  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  5423  0014EE  0E0A               	movlw	10
  5424  0014F0  6E0C               	movwf	___aomod@divisor^0,c
  5425  0014F2  0E00               	movlw	0
  5426  0014F4  6E0D               	movwf	(___aomod@divisor+1)^0,c
  5427  0014F6  0E00               	movlw	0
  5428  0014F8  6E0E               	movwf	(___aomod@divisor+2)^0,c
  5429  0014FA  0E00               	movlw	0
  5430  0014FC  6E0F               	movwf	(___aomod@divisor+3)^0,c
  5431  0014FE  0E00               	movlw	0
  5432  001500  6E10               	movwf	(___aomod@divisor+4)^0,c
  5433  001502  0E00               	movlw	0
  5434  001504  6E11               	movwf	(___aomod@divisor+5)^0,c
  5435  001506  0E00               	movlw	0
  5436  001508  6E12               	movwf	(___aomod@divisor+6)^0,c
  5437  00150A  0E00               	movlw	0
  5438  00150C  6E13               	movwf	(___aomod@divisor+7)^0,c
  5439  00150E  EC64  F010         	call	___aomod	;wreg free
  5440  001512  C004  F029         	movff	?___aomod,??_dtoa
  5441  001516  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  5442  00151A  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  5443  00151E  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  5444  001522  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  5445  001526  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  5446  00152A  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  5447  00152E  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  5448  001532  C029  F016         	movff	??_dtoa,abs@a
  5449  001536  C02B  F017         	movff	??_dtoa+2,abs@a+1
  5450  00153A  EC5F  F017         	call	_abs	;wreg free
  5451  00153E  5016               	movf	?_abs^0,w,c
  5452  001540  0F30               	addlw	48
  5453  001542  6EDF               	movwf	indf2,c
  5454  001544                     
  5455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5456  001544  0633               	decf	dtoa@p^0,f,c
  5457  001546  A0D8               	btfss	status,0,c
  5458  001548  0634               	decf	(dtoa@p+1)^0,f,c
  5459  00154A                     
  5460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5461  00154A  0635               	decf	dtoa@w^0,f,c
  5462  00154C  A0D8               	btfss	status,0,c
  5463  00154E  0636               	decf	(dtoa@w+1)^0,f,c
  5464  001550                     
  5465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5466  001550  C039  F004         	movff	dtoa@n,___aodiv@dividend
  5467  001554  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  5468  001558  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  5469  00155C  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  5470  001560  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  5471  001564  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  5472  001568  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  5473  00156C  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  5474  001570  0E0A               	movlw	10
  5475  001572  6E0C               	movwf	___aodiv@divisor^0,c
  5476  001574  0E00               	movlw	0
  5477  001576  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  5478  001578  0E00               	movlw	0
  5479  00157A  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  5480  00157C  0E00               	movlw	0
  5481  00157E  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  5482  001580  0E00               	movlw	0
  5483  001582  6E10               	movwf	(___aodiv@divisor+4)^0,c
  5484  001584  0E00               	movlw	0
  5485  001586  6E11               	movwf	(___aodiv@divisor+5)^0,c
  5486  001588  0E00               	movlw	0
  5487  00158A  6E12               	movwf	(___aodiv@divisor+6)^0,c
  5488  00158C  0E00               	movlw	0
  5489  00158E  6E13               	movwf	(___aodiv@divisor+7)^0,c
  5490  001590  ECE5  F00E         	call	___aodiv	;wreg free
  5491  001594  C004  F039         	movff	?___aodiv,dtoa@n
  5492  001598  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  5493  00159C  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  5494  0015A0  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  5495  0015A4  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  5496  0015A8  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  5497  0015AC  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  5498  0015B0  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  5499  0015B4                     l4006:
  5500                           
  5501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5502  0015B4  BE42               	btfsc	(dtoa@i+1)^0,7,c
  5503  0015B6  EFE5  F00A         	goto	u4111
  5504  0015BA  5042               	movf	(dtoa@i+1)^0,w,c
  5505  0015BC  E108               	bnz	u4110
  5506  0015BE  0441               	decf	dtoa@i^0,w,c
  5507  0015C0  A0D8               	btfss	status,0,c
  5508  0015C2  EFE5  F00A         	goto	u4111
  5509  0015C6  EFE7  F00A         	goto	u4110
  5510  0015CA                     u4111:
  5511  0015CA  EF17  F00B         	goto	l4016
  5512  0015CE                     u4110:
  5513  0015CE  5039               	movf	dtoa@n^0,w,c
  5514  0015D0  103A               	iorwf	(dtoa@n+1)^0,w,c
  5515  0015D2  103B               	iorwf	(dtoa@n+2)^0,w,c
  5516  0015D4  103C               	iorwf	(dtoa@n+3)^0,w,c
  5517  0015D6  103D               	iorwf	(dtoa@n+4)^0,w,c
  5518  0015D8  103E               	iorwf	(dtoa@n+5)^0,w,c
  5519  0015DA  103F               	iorwf	(dtoa@n+6)^0,w,c
  5520  0015DC  1040               	iorwf	(dtoa@n+7)^0,w,c
  5521  0015DE  A4D8               	btfss	status,2,c
  5522  0015E0  EFF4  F00A         	goto	u4121
  5523  0015E4  EFF6  F00A         	goto	u4120
  5524  0015E8                     u4121:
  5525  0015E8  EF5E  F00A         	goto	l3996
  5526  0015EC                     u4120:
  5527  0015EC  BE34               	btfsc	(dtoa@p+1)^0,7,c
  5528  0015EE  EF03  F00B         	goto	u4130
  5529  0015F2  5034               	movf	(dtoa@p+1)^0,w,c
  5530  0015F4  E106               	bnz	u4131
  5531  0015F6  0433               	decf	dtoa@p^0,w,c
  5532  0015F8  B0D8               	btfsc	status,0,c
  5533  0015FA  EF01  F00B         	goto	u4131
  5534  0015FE  EF03  F00B         	goto	u4130
  5535  001602                     u4131:
  5536  001602  EF5E  F00A         	goto	l3996
  5537  001606                     u4130:
  5538  001606  BE36               	btfsc	(dtoa@w+1)^0,7,c
  5539  001608  EF0E  F00B         	goto	u4141
  5540  00160C  5036               	movf	(dtoa@w+1)^0,w,c
  5541  00160E  E108               	bnz	u4140
  5542  001610  0435               	decf	dtoa@w^0,w,c
  5543  001612  A0D8               	btfss	status,0,c
  5544  001614  EF0E  F00B         	goto	u4141
  5545  001618  EF10  F00B         	goto	u4140
  5546  00161C                     u4141:
  5547  00161C  EF17  F00B         	goto	l4016
  5548  001620                     u4140:
  5549  001620  B25A               	btfsc	_flags^0,1,c
  5550  001622  EF15  F00B         	goto	u4151
  5551  001626  EF17  F00B         	goto	u4150
  5552  00162A                     u4151:
  5553  00162A  EF5E  F00A         	goto	l3996
  5554  00162E                     u4150:
  5555  00162E                     l4016:
  5556                           
  5557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5558  00162E  5037               	movf	dtoa@s^0,w,c
  5559  001630  1038               	iorwf	(dtoa@s+1)^0,w,c
  5560  001632  A4D8               	btfss	status,2,c
  5561  001634  EF1E  F00B         	goto	u4161
  5562  001638  EF20  F00B         	goto	u4160
  5563  00163C                     u4161:
  5564  00163C  EF27  F00B         	goto	l4020
  5565  001640                     u4160:
  5566  001640  A45A               	btfss	_flags^0,2,c
  5567  001642  EF25  F00B         	goto	u4171
  5568  001646  EF27  F00B         	goto	u4170
  5569  00164A                     u4171:
  5570  00164A  EF45  F00B         	goto	l4030
  5571  00164E                     u4170:
  5572  00164E                     l4020:
  5573                           
  5574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5575  00164E  0641               	decf	dtoa@i^0,f,c
  5576  001650  A0D8               	btfss	status,0,c
  5577  001652  0642               	decf	(dtoa@i+1)^0,f,c
  5578  001654                     
  5579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5580  001654  5037               	movf	dtoa@s^0,w,c
  5581  001656  1038               	iorwf	(dtoa@s+1)^0,w,c
  5582  001658  A4D8               	btfss	status,2,c
  5583  00165A  EF31  F00B         	goto	u4181
  5584  00165E  EF33  F00B         	goto	u4180
  5585  001662                     u4181:
  5586  001662  EF39  F00B         	goto	l4026
  5587  001666                     u4180:
  5588  001666  0E00               	movlw	0
  5589  001668  6E32               	movwf	(_dtoa$1642+1)^0,c
  5590  00166A  0E2B               	movlw	43
  5591  00166C  6E31               	movwf	_dtoa$1642^0,c
  5592  00166E  EF3D  F00B         	goto	l4028
  5593  001672                     l4026:
  5594  001672  0E00               	movlw	0
  5595  001674  6E32               	movwf	(_dtoa$1642+1)^0,c
  5596  001676  0E2D               	movlw	45
  5597  001678  6E31               	movwf	_dtoa$1642^0,c
  5598  00167A                     l4028:
  5599  00167A  0E6C               	movlw	low _dbuf
  5600  00167C  2441               	addwf	dtoa@i^0,w,c
  5601  00167E  6ED9               	movwf	fsr2l,c
  5602  001680  0E00               	movlw	high _dbuf
  5603  001682  2042               	addwfc	(dtoa@i+1)^0,w,c
  5604  001684  6EDA               	movwf	fsr2h,c
  5605  001686  C031  FFDF         	movff	_dtoa$1642,indf2
  5606  00168A                     l4030:
  5607                           
  5608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5609  00168A  C01F  F014         	movff	dtoa@fp,pad@fp
  5610  00168E  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  5611  001692  0E6C               	movlw	low _dbuf
  5612  001694  2441               	addwf	dtoa@i^0,w,c
  5613  001696  6E16               	movwf	pad@buf^0,c
  5614  001698  0E00               	movlw	high _dbuf
  5615  00169A  2042               	addwfc	(dtoa@i+1)^0,w,c
  5616  00169C  6E17               	movwf	(pad@buf+1)^0,c
  5617  00169E  C035  F018         	movff	dtoa@w,pad@p
  5618  0016A2  C036  F019         	movff	dtoa@w+1,pad@p+1
  5619  0016A6  ECAD  F014         	call	_pad	;wreg free
  5620  0016AA  C014  F01F         	movff	?_pad,?_dtoa
  5621  0016AE  C015  F020         	movff	?_pad+1,?_dtoa+1
  5622  0016B2  0012               	return		;funcret
  5623  0016B4                     __end_of_dtoa:
  5624                           	callstack 0
  5625                           
  5626 ;; *************** function _pad *****************
  5627 ;; Defined at:
  5628 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  5631 ;;		 -> sprintf@f(6), 
  5632 ;;  buf             2   21[COMRAM] PTR unsigned char 
  5633 ;;		 -> dbuf(32), 
  5634 ;;  p               2   23[COMRAM] int 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  w               2   28[COMRAM] int 
  5637 ;;  i               2   26[COMRAM] int 
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  2   19[COMRAM] int 
  5640 ;; Registers used:
  5641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5647 ;;      Params:         6       0       0       0       0       0       0       0       0
  5648 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5649 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5650 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5651 ;;Total ram usage:       11 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; Hardware stack levels required when called:    5
  5654 ;; This function calls:
  5655 ;;		_fputc
  5656 ;;		_fputs
  5657 ;;		_strlen
  5658 ;; This function is called by:
  5659 ;;		_dtoa
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text26
  5664  00295A                     __ptext26:
  5665                           	callstack 0
  5666  00295A                     _pad:
  5667                           	callstack 19
  5668  00295A                     
  5669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5670  00295A  A05A               	btfss	_flags^0,0,c
  5671  00295C  EFB2  F014         	goto	u3901
  5672  002960  EFB4  F014         	goto	u3900
  5673  002964                     u3901:
  5674  002964  EFBE  F014         	goto	l3906
  5675  002968                     u3900:
  5676  002968                     
  5677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5678  002968  C016  F00D         	movff	pad@buf,fputs@s
  5679  00296C  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5680  002970  C014  F00F         	movff	pad@fp,fputs@fp
  5681  002974  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5682  002978  EC3D  F017         	call	_fputs	;wreg free
  5683  00297C                     l3906:
  5684                           
  5685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5686  00297C  BE19               	btfsc	(pad@p+1)^0,7,c
  5687  00297E  EFC3  F014         	goto	u3911
  5688  002982  EFC5  F014         	goto	u3910
  5689  002986                     u3911:
  5690  002986  EFCB  F014         	goto	l3910
  5691  00298A                     u3910:
  5692  00298A  C018  F01D         	movff	pad@p,pad@w
  5693  00298E  C019  F01E         	movff	pad@p+1,pad@w+1
  5694  002992  EFCF  F014         	goto	l995
  5695  002996                     l3910:
  5696  002996  0E00               	movlw	0
  5697  002998  6E1E               	movwf	(pad@w+1)^0,c
  5698  00299A  0E00               	movlw	0
  5699  00299C  6E1D               	movwf	pad@w^0,c
  5700  00299E                     l995:
  5701                           
  5702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5703  00299E  0E00               	movlw	0
  5704  0029A0  6E1C               	movwf	(pad@i+1)^0,c
  5705  0029A2  0E00               	movlw	0
  5706  0029A4  6E1B               	movwf	pad@i^0,c
  5707                           
  5708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5709  0029A6  EFE1  F014         	goto	l3916
  5710  0029AA                     l3912:
  5711                           
  5712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5713  0029AA  0E00               	movlw	0
  5714  0029AC  6E05               	movwf	(fputc@c+1)^0,c
  5715  0029AE  0E20               	movlw	32
  5716  0029B0  6E04               	movwf	fputc@c^0,c
  5717  0029B2  C014  F006         	movff	pad@fp,fputc@fp
  5718  0029B6  C015  F007         	movff	pad@fp+1,fputc@fp+1
  5719  0029BA  EC48  F014         	call	_fputc	;wreg free
  5720  0029BE                     
  5721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5722  0029BE  4A1B               	infsnz	pad@i^0,f,c
  5723  0029C0  2A1C               	incf	(pad@i+1)^0,f,c
  5724  0029C2                     l3916:
  5725                           
  5726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5727  0029C2  501D               	movf	pad@w^0,w,c
  5728  0029C4  5C1B               	subwf	pad@i^0,w,c
  5729  0029C6  501C               	movf	(pad@i+1)^0,w,c
  5730  0029C8  0A80               	xorlw	128
  5731  0029CA  6E1A               	movwf	??_pad^0,c
  5732  0029CC  501E               	movf	(pad@w+1)^0,w,c
  5733  0029CE  0A80               	xorlw	128
  5734  0029D0  581A               	subwfb	??_pad^0,w,c
  5735  0029D2  A0D8               	btfss	status,0,c
  5736  0029D4  EFEE  F014         	goto	u3921
  5737  0029D8  EFF0  F014         	goto	u3920
  5738  0029DC                     u3921:
  5739  0029DC  EFD5  F014         	goto	l3912
  5740  0029E0                     u3920:
  5741  0029E0                     
  5742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5743  0029E0  B05A               	btfsc	_flags^0,0,c
  5744  0029E2  EFF5  F014         	goto	u3931
  5745  0029E6  EFF7  F014         	goto	u3930
  5746  0029EA                     u3931:
  5747  0029EA  EF01  F015         	goto	l3920
  5748  0029EE                     u3930:
  5749  0029EE                     
  5750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5751  0029EE  C016  F00D         	movff	pad@buf,fputs@s
  5752  0029F2  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5753  0029F6  C014  F00F         	movff	pad@fp,fputs@fp
  5754  0029FA  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5755  0029FE  EC3D  F017         	call	_fputs	;wreg free
  5756  002A02                     l3920:
  5757                           
  5758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5759  002A02  C016  F004         	movff	pad@buf,strlen@s
  5760  002A06  C017  F005         	movff	pad@buf+1,strlen@s+1
  5761  002A0A  ECF3  F017         	call	_strlen	;wreg free
  5762  002A0E  501D               	movf	pad@w^0,w,c
  5763  002A10  2404               	addwf	?_strlen^0,w,c
  5764  002A12  6E14               	movwf	?_pad^0,c
  5765  002A14  501E               	movf	(pad@w+1)^0,w,c
  5766  002A16  2005               	addwfc	(?_strlen+1)^0,w,c
  5767  002A18  6E15               	movwf	(?_pad+1)^0,c
  5768  002A1A  0012               	return		;funcret
  5769  002A1C                     __end_of_pad:
  5770                           	callstack 0
  5771                           
  5772 ;; *************** function _strlen *****************
  5773 ;; Defined at:
  5774 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  s               2    3[COMRAM] PTR const unsigned char 
  5777 ;;		 -> dbuf(32), 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  a               2    5[COMRAM] PTR const unsigned char 
  5780 ;;		 -> dbuf(32), 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  2    3[COMRAM] unsigned int 
  5783 ;; Registers used:
  5784 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5790 ;;      Params:         2       0       0       0       0       0       0       0       0
  5791 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5793 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5794 ;;Total ram usage:        4 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    2
  5797 ;; This function calls:
  5798 ;;		Nothing
  5799 ;; This function is called by:
  5800 ;;		_pad
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text27
  5805  002FE6                     __ptext27:
  5806                           	callstack 0
  5807  002FE6                     _strlen:
  5808                           	callstack 21
  5809  002FE6  C004  F006         	movff	strlen@s,strlen@a
  5810  002FEA  C005  F007         	movff	strlen@s+1,strlen@a+1
  5811  002FEE  EFFB  F017         	goto	l3810
  5812  002FF2                     l3808:
  5813  002FF2  4A04               	infsnz	strlen@s^0,f,c
  5814  002FF4  2A05               	incf	(strlen@s+1)^0,f,c
  5815  002FF6                     l3810:
  5816  002FF6  C004  FFD9         	movff	strlen@s,fsr2l
  5817  002FFA  C005  FFDA         	movff	strlen@s+1,fsr2h
  5818  002FFE  50DF               	movf	indf2,w,c
  5819  003000  A4D8               	btfss	status,2,c
  5820  003002  EF05  F018         	goto	u3761
  5821  003006  EF07  F018         	goto	u3760
  5822  00300A                     u3761:
  5823  00300A  EFF9  F017         	goto	l3808
  5824  00300E                     u3760:
  5825  00300E  5006               	movf	strlen@a^0,w,c
  5826  003010  5C04               	subwf	strlen@s^0,w,c
  5827  003012  6E04               	movwf	?_strlen^0,c
  5828  003014  5007               	movf	(strlen@a+1)^0,w,c
  5829  003016  5805               	subwfb	(strlen@s+1)^0,w,c
  5830  003018  6E05               	movwf	(?_strlen+1)^0,c
  5831  00301A  0012               	return		;funcret
  5832  00301C                     __end_of_strlen:
  5833                           	callstack 0
  5834                           
  5835 ;; *************** function _fputs *****************
  5836 ;; Defined at:
  5837 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  s               2   12[COMRAM] PTR const unsigned char 
  5840 ;;		 -> dbuf(32), 
  5841 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  5842 ;;		 -> sprintf@f(6), 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  i               2   17[COMRAM] int 
  5845 ;;  c               1   16[COMRAM] unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  2   12[COMRAM] int 
  5848 ;; Registers used:
  5849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5855 ;;      Params:         4       0       0       0       0       0       0       0       0
  5856 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5858 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5859 ;;Total ram usage:        7 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    4
  5862 ;; This function calls:
  5863 ;;		_fputc
  5864 ;; This function is called by:
  5865 ;;		_pad
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text28
  5870  002E7A                     __ptext28:
  5871                           	callstack 0
  5872  002E7A                     _fputs:
  5873                           	callstack 19
  5874  002E7A  0E00               	movlw	0
  5875  002E7C  6E13               	movwf	(fputs@i+1)^0,c
  5876  002E7E  0E00               	movlw	0
  5877  002E80  6E12               	movwf	fputs@i^0,c
  5878  002E82  EF4E  F017         	goto	l3804
  5879  002E86                     l3800:
  5880  002E86  C011  F004         	movff	fputs@c,fputc@c
  5881  002E8A  6A05               	clrf	(fputc@c+1)^0,c
  5882  002E8C  C00F  F006         	movff	fputs@fp,fputc@fp
  5883  002E90  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  5884  002E94  EC48  F014         	call	_fputc	;wreg free
  5885  002E98  4A12               	infsnz	fputs@i^0,f,c
  5886  002E9A  2A13               	incf	(fputs@i+1)^0,f,c
  5887  002E9C                     l3804:
  5888  002E9C  5012               	movf	fputs@i^0,w,c
  5889  002E9E  240D               	addwf	fputs@s^0,w,c
  5890  002EA0  6ED9               	movwf	fsr2l,c
  5891  002EA2  5013               	movf	(fputs@i+1)^0,w,c
  5892  002EA4  200E               	addwfc	(fputs@s+1)^0,w,c
  5893  002EA6  6EDA               	movwf	fsr2h,c
  5894  002EA8  50DF               	movf	indf2,w,c
  5895  002EAA  6E11               	movwf	fputs@c^0,c
  5896  002EAC  5011               	movf	fputs@c^0,w,c
  5897  002EAE  A4D8               	btfss	status,2,c
  5898  002EB0  EF5C  F017         	goto	u3751
  5899  002EB4  EF5E  F017         	goto	u3750
  5900  002EB8                     u3751:
  5901  002EB8  EF43  F017         	goto	l3800
  5902  002EBC                     u3750:
  5903  002EBC  0012               	return		;funcret
  5904  002EBE                     __end_of_fputs:
  5905                           	callstack 0
  5906                           
  5907 ;; *************** function _abs *****************
  5908 ;; Defined at:
  5909 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  a               2   21[COMRAM] int 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  2   21[COMRAM] int 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5923 ;;      Params:         2       0       0       0       0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5925 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5926 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5927 ;;Total ram usage:        4 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    2
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_dtoa
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text29
  5938  002EBE                     __ptext29:
  5939                           	callstack 0
  5940  002EBE                     _abs:
  5941                           	callstack 22
  5942  002EBE  BE17               	btfsc	(abs@a+1)^0,7,c
  5943  002EC0  EF6C  F017         	goto	u3940
  5944  002EC4  5017               	movf	(abs@a+1)^0,w,c
  5945  002EC6  E106               	bnz	u3941
  5946  002EC8  0416               	decf	abs@a^0,w,c
  5947  002ECA  B0D8               	btfsc	status,0,c
  5948  002ECC  EF6A  F017         	goto	u3941
  5949  002ED0  EF6C  F017         	goto	u3940
  5950  002ED4                     u3941:
  5951  002ED4  EF7A  F017         	goto	l1083
  5952  002ED8                     u3940:
  5953  002ED8  C016  F018         	movff	abs@a,??_abs
  5954  002EDC  C017  F019         	movff	abs@a+1,??_abs+1
  5955  002EE0  1E18               	comf	??_abs^0,f,c
  5956  002EE2  1E19               	comf	(??_abs+1)^0,f,c
  5957  002EE4  4A18               	infsnz	??_abs^0,f,c
  5958  002EE6  2A19               	incf	(??_abs+1)^0,f,c
  5959  002EE8  C018  F016         	movff	??_abs,?_abs
  5960  002EEC  C019  F017         	movff	??_abs+1,?_abs+1
  5961  002EF0  EF7E  F017         	goto	l1086
  5962  002EF4                     l1083:
  5963  002EF4  C016  F016         	movff	abs@a,?_abs
  5964  002EF8  C017  F017         	movff	abs@a+1,?_abs+1
  5965  002EFC                     l1086:
  5966  002EFC  0012               	return		;funcret
  5967  002EFE                     __end_of_abs:
  5968                           	callstack 0
  5969                           
  5970 ;; *************** function ___aomod *****************
  5971 ;; Defined at:
  5972 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  dividend        8    3[COMRAM] long long 
  5975 ;;  divisor         8   11[COMRAM] long long 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  sign            1   20[COMRAM] unsigned char 
  5978 ;;  counter         1   19[COMRAM] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  8    3[COMRAM] long long 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5988 ;;      Params:        16       0       0       0       0       0       0       0       0
  5989 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5991 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5992 ;;Total ram usage:       18 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    2
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_dtoa
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text30
  6003  0020C8                     __ptext30:
  6004                           	callstack 0
  6005  0020C8                     ___aomod:
  6006                           	callstack 22
  6007  0020C8  0E00               	movlw	0
  6008  0020CA  6E15               	movwf	___aomod@sign^0,c
  6009  0020CC  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  6010  0020CE  EF6D  F010         	goto	u3840
  6011  0020D2  EF6B  F010         	goto	u3841
  6012  0020D6                     u3841:
  6013  0020D6  EF7F  F010         	goto	l3874
  6014  0020DA                     u3840:
  6015  0020DA  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6016  0020DC  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6017  0020DE  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6018  0020E0  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6019  0020E2  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6020  0020E4  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6021  0020E6  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6022  0020E8  6C04               	negf	___aomod@dividend^0,c
  6023  0020EA  0E00               	movlw	0
  6024  0020EC  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6025  0020EE  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6026  0020F0  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6027  0020F2  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6028  0020F4  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6029  0020F6  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6030  0020F8  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6031  0020FA  0E01               	movlw	1
  6032  0020FC  6E15               	movwf	___aomod@sign^0,c
  6033  0020FE                     l3874:
  6034  0020FE  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  6035  002100  EF86  F010         	goto	u3850
  6036  002104  EF84  F010         	goto	u3851
  6037  002108                     u3851:
  6038  002108  EF96  F010         	goto	l3878
  6039  00210C                     u3850:
  6040  00210C  1E13               	comf	(___aomod@divisor+7)^0,f,c
  6041  00210E  1E12               	comf	(___aomod@divisor+6)^0,f,c
  6042  002110  1E11               	comf	(___aomod@divisor+5)^0,f,c
  6043  002112  1E10               	comf	(___aomod@divisor+4)^0,f,c
  6044  002114  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  6045  002116  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  6046  002118  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  6047  00211A  6C0C               	negf	___aomod@divisor^0,c
  6048  00211C  0E00               	movlw	0
  6049  00211E  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  6050  002120  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  6051  002122  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  6052  002124  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  6053  002126  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  6054  002128  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  6055  00212A  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  6056  00212C                     l3878:
  6057  00212C  500C               	movf	___aomod@divisor^0,w,c
  6058  00212E  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  6059  002130  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  6060  002132  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  6061  002134  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  6062  002136  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  6063  002138  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  6064  00213A  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  6065  00213C  B4D8               	btfsc	status,2,c
  6066  00213E  EFA3  F010         	goto	u3861
  6067  002142  EFA5  F010         	goto	u3860
  6068  002146                     u3861:
  6069  002146  EFED  F010         	goto	l3894
  6070  00214A                     u3860:
  6071  00214A  0E01               	movlw	1
  6072  00214C  6E14               	movwf	___aomod@counter^0,c
  6073  00214E  EFB3  F010         	goto	l3884
  6074  002152                     l3882:
  6075  002152  90D8               	bcf	status,0,c
  6076  002154  360C               	rlcf	___aomod@divisor^0,f,c
  6077  002156  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  6078  002158  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  6079  00215A  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  6080  00215C  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  6081  00215E  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  6082  002160  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  6083  002162  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  6084  002164  2A14               	incf	___aomod@counter^0,f,c
  6085  002166                     l3884:
  6086  002166  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  6087  002168  EFB8  F010         	goto	u3871
  6088  00216C  EFBA  F010         	goto	u3870
  6089  002170                     u3871:
  6090  002170  EFA9  F010         	goto	l3882
  6091  002174                     u3870:
  6092  002174                     l3886:
  6093  002174  500C               	movf	___aomod@divisor^0,w,c
  6094  002176  5C04               	subwf	___aomod@dividend^0,w,c
  6095  002178  500D               	movf	(___aomod@divisor+1)^0,w,c
  6096  00217A  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  6097  00217C  500E               	movf	(___aomod@divisor+2)^0,w,c
  6098  00217E  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  6099  002180  500F               	movf	(___aomod@divisor+3)^0,w,c
  6100  002182  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  6101  002184  5010               	movf	(___aomod@divisor+4)^0,w,c
  6102  002186  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  6103  002188  5011               	movf	(___aomod@divisor+5)^0,w,c
  6104  00218A  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  6105  00218C  5012               	movf	(___aomod@divisor+6)^0,w,c
  6106  00218E  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  6107  002190  5013               	movf	(___aomod@divisor+7)^0,w,c
  6108  002192  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  6109  002194  A0D8               	btfss	status,0,c
  6110  002196  EFCF  F010         	goto	u3881
  6111  00219A  EFD1  F010         	goto	u3880
  6112  00219E                     u3881:
  6113  00219E  EFE1  F010         	goto	l3890
  6114  0021A2                     u3880:
  6115  0021A2  500C               	movf	___aomod@divisor^0,w,c
  6116  0021A4  5E04               	subwf	___aomod@dividend^0,f,c
  6117  0021A6  500D               	movf	(___aomod@divisor+1)^0,w,c
  6118  0021A8  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  6119  0021AA  500E               	movf	(___aomod@divisor+2)^0,w,c
  6120  0021AC  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  6121  0021AE  500F               	movf	(___aomod@divisor+3)^0,w,c
  6122  0021B0  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  6123  0021B2  5010               	movf	(___aomod@divisor+4)^0,w,c
  6124  0021B4  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  6125  0021B6  5011               	movf	(___aomod@divisor+5)^0,w,c
  6126  0021B8  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  6127  0021BA  5012               	movf	(___aomod@divisor+6)^0,w,c
  6128  0021BC  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  6129  0021BE  5013               	movf	(___aomod@divisor+7)^0,w,c
  6130  0021C0  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  6131  0021C2                     l3890:
  6132  0021C2  90D8               	bcf	status,0,c
  6133  0021C4  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  6134  0021C6  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  6135  0021C8  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  6136  0021CA  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  6137  0021CC  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  6138  0021CE  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  6139  0021D0  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  6140  0021D2  320C               	rrcf	___aomod@divisor^0,f,c
  6141  0021D4  2E14               	decfsz	___aomod@counter^0,f,c
  6142  0021D6  EFBA  F010         	goto	l3886
  6143  0021DA                     l3894:
  6144  0021DA  5015               	movf	___aomod@sign^0,w,c
  6145  0021DC  B4D8               	btfsc	status,2,c
  6146  0021DE  EFF3  F010         	goto	u3891
  6147  0021E2  EFF5  F010         	goto	u3890
  6148  0021E6                     u3891:
  6149  0021E6  EF05  F011         	goto	l3898
  6150  0021EA                     u3890:
  6151  0021EA  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6152  0021EC  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6153  0021EE  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6154  0021F0  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6155  0021F2  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6156  0021F4  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6157  0021F6  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6158  0021F8  6C04               	negf	___aomod@dividend^0,c
  6159  0021FA  0E00               	movlw	0
  6160  0021FC  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6161  0021FE  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6162  002200  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6163  002202  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6164  002204  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6165  002206  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6166  002208  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6167  00220A                     l3898:
  6168  00220A  C004  F004         	movff	___aomod@dividend,?___aomod
  6169  00220E  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  6170  002212  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  6171  002216  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  6172  00221A  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  6173  00221E  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  6174  002222  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  6175  002226  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  6176  00222A  0012               	return		;funcret
  6177  00222C                     __end_of___aomod:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function ___aodiv *****************
  6181 ;; Defined at:
  6182 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  dividend        8    3[COMRAM] long long 
  6185 ;;  divisor         8   11[COMRAM] long long 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  quotient        8   21[COMRAM] long long 
  6188 ;;  sign            1   20[COMRAM] unsigned char 
  6189 ;;  counter         1   19[COMRAM] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  8    3[COMRAM] long long 
  6192 ;; Registers used:
  6193 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6199 ;;      Params:        16       0       0       0       0       0       0       0       0
  6200 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6202 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6203 ;;Total ram usage:       26 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    2
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_dtoa
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text31
  6214  001DCA                     __ptext31:
  6215                           	callstack 0
  6216  001DCA                     ___aodiv:
  6217                           	callstack 22
  6218  001DCA  0E00               	movlw	0
  6219  001DCC  6E15               	movwf	___aodiv@sign^0,c
  6220  001DCE  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  6221  001DD0  EFEE  F00E         	goto	u3770
  6222  001DD4  EFEC  F00E         	goto	u3771
  6223  001DD8                     u3771:
  6224  001DD8  EF00  F00F         	goto	l3830
  6225  001DDC                     u3770:
  6226  001DDC  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  6227  001DDE  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  6228  001DE0  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  6229  001DE2  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  6230  001DE4  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  6231  001DE6  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  6232  001DE8  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  6233  001DEA  6C0C               	negf	___aodiv@divisor^0,c
  6234  001DEC  0E00               	movlw	0
  6235  001DEE  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  6236  001DF0  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  6237  001DF2  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  6238  001DF4  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  6239  001DF6  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  6240  001DF8  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  6241  001DFA  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  6242  001DFC  0E01               	movlw	1
  6243  001DFE  6E15               	movwf	___aodiv@sign^0,c
  6244  001E00                     l3830:
  6245  001E00  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  6246  001E02  EF07  F00F         	goto	u3780
  6247  001E06  EF05  F00F         	goto	u3781
  6248  001E0A                     u3781:
  6249  001E0A  EF19  F00F         	goto	l3836
  6250  001E0E                     u3780:
  6251  001E0E  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  6252  001E10  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  6253  001E12  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  6254  001E14  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  6255  001E16  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  6256  001E18  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  6257  001E1A  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  6258  001E1C  6C04               	negf	___aodiv@dividend^0,c
  6259  001E1E  0E00               	movlw	0
  6260  001E20  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  6261  001E22  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  6262  001E24  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  6263  001E26  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  6264  001E28  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  6265  001E2A  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  6266  001E2C  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  6267  001E2E  0E01               	movlw	1
  6268  001E30  1A15               	xorwf	___aodiv@sign^0,f,c
  6269  001E32                     l3836:
  6270  001E32  EE20  F016         	lfsr	2,___aodiv@quotient
  6271  001E36  0E07               	movlw	7
  6272  001E38                     u3791:
  6273  001E38  6ADE               	clrf	postinc2,c
  6274  001E3A  06E8               	decf	wreg,f,c
  6275  001E3C  E2FD               	bc	u3791
  6276  001E3E  500C               	movf	___aodiv@divisor^0,w,c
  6277  001E40  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  6278  001E42  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  6279  001E44  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  6280  001E46  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  6281  001E48  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  6282  001E4A  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  6283  001E4C  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  6284  001E4E  B4D8               	btfsc	status,2,c
  6285  001E50  EF2C  F00F         	goto	u3801
  6286  001E54  EF2E  F00F         	goto	u3800
  6287  001E58                     u3801:
  6288  001E58  EF80  F00F         	goto	l3858
  6289  001E5C                     u3800:
  6290  001E5C  0E01               	movlw	1
  6291  001E5E  6E14               	movwf	___aodiv@counter^0,c
  6292  001E60  EF3C  F00F         	goto	l3844
  6293  001E64                     l3842:
  6294  001E64  90D8               	bcf	status,0,c
  6295  001E66  360C               	rlcf	___aodiv@divisor^0,f,c
  6296  001E68  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  6297  001E6A  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  6298  001E6C  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  6299  001E6E  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  6300  001E70  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  6301  001E72  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  6302  001E74  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  6303  001E76  2A14               	incf	___aodiv@counter^0,f,c
  6304  001E78                     l3844:
  6305  001E78  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  6306  001E7A  EF41  F00F         	goto	u3811
  6307  001E7E  EF43  F00F         	goto	u3810
  6308  001E82                     u3811:
  6309  001E82  EF32  F00F         	goto	l3842
  6310  001E86                     u3810:
  6311  001E86                     l3846:
  6312  001E86  90D8               	bcf	status,0,c
  6313  001E88  3616               	rlcf	___aodiv@quotient^0,f,c
  6314  001E8A  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  6315  001E8C  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  6316  001E8E  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  6317  001E90  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  6318  001E92  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  6319  001E94  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  6320  001E96  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  6321  001E98  500C               	movf	___aodiv@divisor^0,w,c
  6322  001E9A  5C04               	subwf	___aodiv@dividend^0,w,c
  6323  001E9C  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6324  001E9E  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  6325  001EA0  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6326  001EA2  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  6327  001EA4  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6328  001EA6  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  6329  001EA8  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6330  001EAA  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  6331  001EAC  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6332  001EAE  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  6333  001EB0  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6334  001EB2  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  6335  001EB4  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6336  001EB6  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  6337  001EB8  A0D8               	btfss	status,0,c
  6338  001EBA  EF61  F00F         	goto	u3821
  6339  001EBE  EF63  F00F         	goto	u3820
  6340  001EC2                     u3821:
  6341  001EC2  EF74  F00F         	goto	l3854
  6342  001EC6                     u3820:
  6343  001EC6  500C               	movf	___aodiv@divisor^0,w,c
  6344  001EC8  5E04               	subwf	___aodiv@dividend^0,f,c
  6345  001ECA  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6346  001ECC  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  6347  001ECE  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6348  001ED0  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  6349  001ED2  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6350  001ED4  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  6351  001ED6  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6352  001ED8  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  6353  001EDA  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6354  001EDC  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  6355  001EDE  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6356  001EE0  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  6357  001EE2  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6358  001EE4  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  6359  001EE6  8016               	bsf	___aodiv@quotient^0,0,c
  6360  001EE8                     l3854:
  6361  001EE8  90D8               	bcf	status,0,c
  6362  001EEA  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  6363  001EEC  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  6364  001EEE  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  6365  001EF0  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  6366  001EF2  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  6367  001EF4  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  6368  001EF6  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  6369  001EF8  320C               	rrcf	___aodiv@divisor^0,f,c
  6370  001EFA  2E14               	decfsz	___aodiv@counter^0,f,c
  6371  001EFC  EF43  F00F         	goto	l3846
  6372  001F00                     l3858:
  6373  001F00  5015               	movf	___aodiv@sign^0,w,c
  6374  001F02  B4D8               	btfsc	status,2,c
  6375  001F04  EF86  F00F         	goto	u3831
  6376  001F08  EF88  F00F         	goto	u3830
  6377  001F0C                     u3831:
  6378  001F0C  EF98  F00F         	goto	l3862
  6379  001F10                     u3830:
  6380  001F10  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  6381  001F12  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  6382  001F14  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  6383  001F16  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  6384  001F18  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  6385  001F1A  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  6386  001F1C  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  6387  001F1E  6C16               	negf	___aodiv@quotient^0,c
  6388  001F20  0E00               	movlw	0
  6389  001F22  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  6390  001F24  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  6391  001F26  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  6392  001F28  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  6393  001F2A  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  6394  001F2C  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  6395  001F2E  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  6396  001F30                     l3862:
  6397  001F30  C016  F004         	movff	___aodiv@quotient,?___aodiv
  6398  001F34  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  6399  001F38  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  6400  001F3C  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  6401  001F40  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  6402  001F44  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  6403  001F48  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  6404  001F4C  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  6405  001F50  0012               	return		;funcret
  6406  001F52                     __end_of___aodiv:
  6407                           	callstack 0
  6408                           
  6409 ;; *************** function _ctoa *****************
  6410 ;; Defined at:
  6411 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  6414 ;;		 -> sprintf@f(6), 
  6415 ;;  c               1   14[COMRAM] unsigned char 
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  w               2   18[COMRAM] int 
  6418 ;;  l               2   16[COMRAM] int 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  2   12[COMRAM] int 
  6421 ;; Registers used:
  6422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6428 ;;      Params:         3       0       0       0       0       0       0       0       0
  6429 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6430 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6431 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6432 ;;Total ram usage:        8 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    4
  6435 ;; This function calls:
  6436 ;;		_fputc
  6437 ;; This function is called by:
  6438 ;;		_vfpfcnvrt
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text32
  6443  0026EE                     __ptext32:
  6444                           	callstack 0
  6445  0026EE                     _ctoa:
  6446                           	callstack 21
  6447  0026EE                     
  6448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  6449  0026EE  0100               	movlb	0	; () banked
  6450  0026F0  5168               	movf	_width& (0+255),w,b
  6451  0026F2  1169               	iorwf	(_width+1)& (0+255),w,b
  6452  0026F4  A4D8               	btfss	status,2,c
  6453  0026F6  EF7F  F013         	goto	u3991
  6454  0026FA  EF81  F013         	goto	u3990
  6455  0026FE                     u3991:
  6456  0026FE  EF87  F013         	goto	l3948
  6457  002702                     u3990:
  6458  002702                     
  6459                           ; BSR set to: 0
  6460  002702  C068  F013         	movff	_width,ctoa@w
  6461  002706  C069  F014         	movff	_width+1,ctoa@w+1
  6462  00270A  EF8D  F013         	goto	l3950
  6463  00270E                     l3948:
  6464                           
  6465                           ; BSR set to: 0
  6466  00270E  0EFF               	movlw	255
  6467  002710  2568               	addwf	_width& (0+255),w,b
  6468  002712  6E13               	movwf	ctoa@w^0,c
  6469  002714  0EFF               	movlw	255
  6470  002716  2169               	addwfc	(_width+1)& (0+255),w,b
  6471  002718  6E14               	movwf	(ctoa@w+1)^0,c
  6472  00271A                     l3950:
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  6476  00271A  A05A               	btfss	_flags^0,0,c
  6477  00271C  EF92  F013         	goto	u4001
  6478  002720  EF94  F013         	goto	u4000
  6479  002724                     u4001:
  6480  002724  EF9D  F013         	goto	l3954
  6481  002728                     u4000:
  6482  002728                     
  6483                           ; BSR set to: 0
  6484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  6485  002728  C00F  F004         	movff	ctoa@c,fputc@c
  6486  00272C  6A05               	clrf	(fputc@c+1)^0,c
  6487  00272E  C00D  F006         	movff	ctoa@fp,fputc@fp
  6488  002732  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
  6489  002736  EC48  F014         	call	_fputc	;wreg free
  6490  00273A                     l3954:
  6491                           
  6492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  6493  00273A  BE14               	btfsc	(ctoa@w+1)^0,7,c
  6494  00273C  EFA2  F013         	goto	u4011
  6495  002740  EFA4  F013         	goto	u4010
  6496  002744                     u4011:
  6497  002744  EFA6  F013         	goto	l3958
  6498  002748                     u4010:
  6499  002748  EFAA  F013         	goto	l1011
  6500  00274C                     l3958:
  6501  00274C  0E00               	movlw	0
  6502  00274E  6E14               	movwf	(ctoa@w+1)^0,c
  6503  002750  0E00               	movlw	0
  6504  002752  6E13               	movwf	ctoa@w^0,c
  6505  002754                     l1011:
  6506                           
  6507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  6508  002754  0E00               	movlw	0
  6509  002756  6E12               	movwf	(ctoa@l+1)^0,c
  6510  002758  0E00               	movlw	0
  6511  00275A  6E11               	movwf	ctoa@l^0,c
  6512                           
  6513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  6514  00275C  EFBC  F013         	goto	l3964
  6515  002760                     l3960:
  6516                           
  6517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  6518  002760  0E00               	movlw	0
  6519  002762  6E05               	movwf	(fputc@c+1)^0,c
  6520  002764  0E20               	movlw	32
  6521  002766  6E04               	movwf	fputc@c^0,c
  6522  002768  C00D  F006         	movff	ctoa@fp,fputc@fp
  6523  00276C  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
  6524  002770  EC48  F014         	call	_fputc	;wreg free
  6525  002774                     
  6526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  6527  002774  4A11               	infsnz	ctoa@l^0,f,c
  6528  002776  2A12               	incf	(ctoa@l+1)^0,f,c
  6529  002778                     l3964:
  6530                           
  6531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  6532  002778  5013               	movf	ctoa@w^0,w,c
  6533  00277A  5C11               	subwf	ctoa@l^0,w,c
  6534  00277C  5012               	movf	(ctoa@l+1)^0,w,c
  6535  00277E  0A80               	xorlw	128
  6536  002780  6E10               	movwf	??_ctoa^0,c
  6537  002782  5014               	movf	(ctoa@w+1)^0,w,c
  6538  002784  0A80               	xorlw	128
  6539  002786  5810               	subwfb	??_ctoa^0,w,c
  6540  002788  A0D8               	btfss	status,0,c
  6541  00278A  EFC9  F013         	goto	u4021
  6542  00278E  EFCB  F013         	goto	u4020
  6543  002792                     u4021:
  6544  002792  EFB0  F013         	goto	l3960
  6545  002796                     u4020:
  6546  002796                     
  6547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  6548  002796  B05A               	btfsc	_flags^0,0,c
  6549  002798  EFD0  F013         	goto	u4031
  6550  00279C  EFD2  F013         	goto	u4030
  6551  0027A0                     u4031:
  6552  0027A0  EFDB  F013         	goto	l3968
  6553  0027A4                     u4030:
  6554  0027A4                     
  6555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  6556  0027A4  C00F  F004         	movff	ctoa@c,fputc@c
  6557  0027A8  6A05               	clrf	(fputc@c+1)^0,c
  6558  0027AA  C00D  F006         	movff	ctoa@fp,fputc@fp
  6559  0027AE  C00E  F007         	movff	ctoa@fp+1,fputc@fp+1
  6560  0027B2  EC48  F014         	call	_fputc	;wreg free
  6561  0027B6                     l3968:
  6562                           
  6563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  6564  0027B6  0E01               	movlw	1
  6565  0027B8  2411               	addwf	ctoa@l^0,w,c
  6566  0027BA  6E0D               	movwf	?_ctoa^0,c
  6567  0027BC  0E00               	movlw	0
  6568  0027BE  2012               	addwfc	(ctoa@l+1)^0,w,c
  6569  0027C0  6E0E               	movwf	(?_ctoa+1)^0,c
  6570  0027C2  0012               	return		;funcret
  6571  0027C4                     __end_of_ctoa:
  6572                           	callstack 0
  6573                           
  6574 ;; *************** function _fputc *****************
  6575 ;; Defined at:
  6576 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  c               2    3[COMRAM] int 
  6579 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  6580 ;;		 -> sprintf@f(6), 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  2    3[COMRAM] int 
  6585 ;; Registers used:
  6586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6592 ;;      Params:         4       0       0       0       0       0       0       0       0
  6593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6594 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6595 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6596 ;;Total ram usage:        9 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    3
  6599 ;; This function calls:
  6600 ;;		_putch
  6601 ;; This function is called by:
  6602 ;;		_pad
  6603 ;;		_ctoa
  6604 ;;		_vfpfcnvrt
  6605 ;;		_fputs
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text33
  6610  002890                     __ptext33:
  6611                           	callstack 0
  6612  002890                     _fputc:
  6613                           	callstack 22
  6614  002890  5006               	movf	fputc@fp^0,w,c
  6615  002892  1007               	iorwf	(fputc@fp+1)^0,w,c
  6616  002894  B4D8               	btfsc	status,2,c
  6617  002896  EF4F  F014         	goto	u3711
  6618  00289A  EF51  F014         	goto	u3710
  6619  00289E                     u3711:
  6620  00289E  EF5A  F014         	goto	l3788
  6621  0028A2                     u3710:
  6622  0028A2  5006               	movf	fputc@fp^0,w,c
  6623  0028A4  1007               	iorwf	(fputc@fp+1)^0,w,c
  6624  0028A6  A4D8               	btfss	status,2,c
  6625  0028A8  EF58  F014         	goto	u3721
  6626  0028AC  EF5A  F014         	goto	u3720
  6627  0028B0                     u3721:
  6628  0028B0  EF5F  F014         	goto	l3790
  6629  0028B4                     u3720:
  6630  0028B4                     l3788:
  6631  0028B4  5004               	movf	fputc@c^0,w,c
  6632  0028B6  EC64  F018         	call	_putch
  6633  0028BA  EFAC  F014         	goto	l1143
  6634  0028BE                     l3790:
  6635  0028BE  EE20 F004          	lfsr	2,4
  6636  0028C2  5006               	movf	fputc@fp^0,w,c
  6637  0028C4  26D9               	addwf	fsr2l,f,c
  6638  0028C6  5007               	movf	(fputc@fp+1)^0,w,c
  6639  0028C8  22DA               	addwfc	fsr2h,f,c
  6640  0028CA  50DE               	movf	postinc2,w,c
  6641  0028CC  10DE               	iorwf	postinc2,w,c
  6642  0028CE  B4D8               	btfsc	status,2,c
  6643  0028D0  EF6C  F014         	goto	u3731
  6644  0028D4  EF6E  F014         	goto	u3730
  6645  0028D8                     u3731:
  6646  0028D8  EF89  F014         	goto	l3794
  6647  0028DC                     u3730:
  6648  0028DC  EE20 F004          	lfsr	2,4
  6649  0028E0  5006               	movf	fputc@fp^0,w,c
  6650  0028E2  26D9               	addwf	fsr2l,f,c
  6651  0028E4  5007               	movf	(fputc@fp+1)^0,w,c
  6652  0028E6  22DA               	addwfc	fsr2h,f,c
  6653  0028E8  EE10 F002          	lfsr	1,2
  6654  0028EC  5006               	movf	fputc@fp^0,w,c
  6655  0028EE  26E1               	addwf	fsr1l,f,c
  6656  0028F0  5007               	movf	(fputc@fp+1)^0,w,c
  6657  0028F2  22E2               	addwfc	fsr1h,f,c
  6658  0028F4  50DE               	movf	postinc2,w,c
  6659  0028F6  5CE6               	subwf	postinc1,w,c
  6660  0028F8  50E6               	movf	postinc1,w,c
  6661  0028FA  0A80               	xorlw	128
  6662  0028FC  6E0C               	movwf	(??_fputc+4)^0,c
  6663  0028FE  50DE               	movf	postinc2,w,c
  6664  002900  0A80               	xorlw	128
  6665  002902  580C               	subwfb	(??_fputc+4)^0,w,c
  6666  002904  B0D8               	btfsc	status,0,c
  6667  002906  EF87  F014         	goto	u3741
  6668  00290A  EF89  F014         	goto	u3740
  6669  00290E                     u3741:
  6670  00290E  EFAC  F014         	goto	l1143
  6671  002912                     u3740:
  6672  002912                     l3794:
  6673  002912  EE20 F002          	lfsr	2,2
  6674  002916  5006               	movf	fputc@fp^0,w,c
  6675  002918  26D9               	addwf	fsr2l,f,c
  6676  00291A  5007               	movf	(fputc@fp+1)^0,w,c
  6677  00291C  22DA               	addwfc	fsr2h,f,c
  6678  00291E  CFDE F008          	movff	postinc2,??_fputc
  6679  002922  CFDD F009          	movff	postdec2,??_fputc+1
  6680  002926  C006  FFD9         	movff	fputc@fp,fsr2l
  6681  00292A  C007  FFDA         	movff	fputc@fp+1,fsr2h
  6682  00292E  CFDE F00A          	movff	postinc2,??_fputc+2
  6683  002932  CFDD F00B          	movff	postdec2,??_fputc+3
  6684  002936  5008               	movf	??_fputc^0,w,c
  6685  002938  240A               	addwf	(??_fputc+2)^0,w,c
  6686  00293A  6ED9               	movwf	fsr2l,c
  6687  00293C  5009               	movf	(??_fputc+1)^0,w,c
  6688  00293E  200B               	addwfc	(??_fputc+3)^0,w,c
  6689  002940  6EDA               	movwf	fsr2h,c
  6690  002942  C004  FFDF         	movff	fputc@c,indf2
  6691  002946  EE20 F002          	lfsr	2,2
  6692  00294A  5006               	movf	fputc@fp^0,w,c
  6693  00294C  26D9               	addwf	fsr2l,f,c
  6694  00294E  5007               	movf	(fputc@fp+1)^0,w,c
  6695  002950  22DA               	addwfc	fsr2h,f,c
  6696  002952  2ADE               	incf	postinc2,f,c
  6697  002954  0E00               	movlw	0
  6698  002956  22DD               	addwfc	postdec2,f,c
  6699  002958                     l1143:
  6700  002958  0012               	return		;funcret
  6701  00295A                     __end_of_fputc:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function _putch *****************
  6705 ;; Defined at:
  6706 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  c               1    wreg     unsigned char 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  c               1    0[COMRAM] unsigned char 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		wreg
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6723 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6724 ;;Total ram usage:        0 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    2
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_fputc
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text34
  6735  0030C8                     __ptext34:
  6736                           	callstack 0
  6737  0030C8                     _putch:
  6738                           	callstack 22
  6739  0030C8  0012               	return		;funcret
  6740  0030CA                     __end_of_putch:
  6741                           	callstack 0
  6742                           
  6743 ;; *************** function _atoi *****************
  6744 ;; Defined at:
  6745 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6748 ;;		 -> STR_6(3), STR_5(5), STR_2(9), STR_1(14), 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  n               2   23[COMRAM] int 
  6751 ;;  neg             2   16[COMRAM] int 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  2   10[COMRAM] int 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6761 ;;      Params:         2       0       0       0       0       0       0       0       0
  6762 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6763 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6764 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6765 ;;Total ram usage:       15 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:    3
  6768 ;; This function calls:
  6769 ;;		___wmul
  6770 ;;		_isdigit
  6771 ;;		_isspace
  6772 ;; This function is called by:
  6773 ;;		_vfpfcnvrt
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           	psect	text35
  6778  001C3A                     __ptext35:
  6779                           	callstack 0
  6780  001C3A                     _atoi:
  6781                           	callstack 22
  6782  001C3A  0E00               	movlw	0
  6783  001C3C  6E19               	movwf	(atoi@n+1)^0,c
  6784  001C3E  0E00               	movlw	0
  6785  001C40  6E18               	movwf	atoi@n^0,c
  6786  001C42  0E00               	movlw	0
  6787  001C44  6E12               	movwf	(atoi@neg+1)^0,c
  6788  001C46  0E00               	movlw	0
  6789  001C48  6E11               	movwf	atoi@neg^0,c
  6790  001C4A  EF29  F00E         	goto	l4038
  6791  001C4E                     l4036:
  6792  001C4E  4A0B               	infsnz	atoi@s^0,f,c
  6793  001C50  2A0C               	incf	(atoi@s+1)^0,f,c
  6794  001C52                     l4038:
  6795  001C52  0E01               	movlw	1
  6796  001C54  6E17               	movwf	_atoi$1679^0,c
  6797  001C56  C00B  FFF6         	movff	atoi@s,tblptrl
  6798  001C5A  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6799  001C5E                     	if	0	;tblptru may be non-zero
  6800  001C5E                     	endif
  6801  001C5E                     	if	0	;tblptru may be non-zero
  6802  001C5E                     	endif
  6803  001C5E  0008               	tblrd		*
  6804  001C60  50F5               	movf	tablat,w,c
  6805  001C62  0A20               	xorlw	32
  6806  001C64  B4D8               	btfsc	status,2,c
  6807  001C66  EF37  F00E         	goto	u4191
  6808  001C6A  EF39  F00E         	goto	u4190
  6809  001C6E                     u4191:
  6810  001C6E  EF56  F00E         	goto	l4046
  6811  001C72                     u4190:
  6812  001C72  0EF7               	movlw	247
  6813  001C74  6E0D               	movwf	??_atoi^0,c
  6814  001C76  0EFF               	movlw	255
  6815  001C78  6E0E               	movwf	(??_atoi+1)^0,c
  6816  001C7A  C00B  FFF6         	movff	atoi@s,tblptrl
  6817  001C7E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6818  001C82                     	if	0	;tblptru may be non-zero
  6819  001C82                     	endif
  6820  001C82                     	if	0	;tblptru may be non-zero
  6821  001C82                     	endif
  6822  001C82  0008               	tblrd		*
  6823  001C84  50F5               	movf	tablat,w,c
  6824  001C86  6E0F               	movwf	(??_atoi+2)^0,c
  6825  001C88  6A10               	clrf	(??_atoi+3)^0,c
  6826  001C8A  500D               	movf	??_atoi^0,w,c
  6827  001C8C  260F               	addwf	(??_atoi+2)^0,f,c
  6828  001C8E  500E               	movf	(??_atoi+1)^0,w,c
  6829  001C90  2210               	addwfc	(??_atoi+3)^0,f,c
  6830  001C92  5010               	movf	(??_atoi+3)^0,w,c
  6831  001C94  E109               	bnz	u4200
  6832  001C96  0E05               	movlw	5
  6833  001C98  5C0F               	subwf	(??_atoi+2)^0,w,c
  6834  001C9A  A0D8               	btfss	status,0,c
  6835  001C9C  EF52  F00E         	goto	u4201
  6836  001CA0  EF54  F00E         	goto	u4200
  6837  001CA4                     u4201:
  6838  001CA4  EF56  F00E         	goto	l4046
  6839  001CA8                     u4200:
  6840  001CA8  0E00               	movlw	0
  6841  001CAA  6E17               	movwf	_atoi$1679^0,c
  6842  001CAC                     l4046:
  6843  001CAC  C017  F013         	movff	_atoi$1679,_atoi$1678
  6844  001CB0  6A14               	clrf	(_atoi$1678+1)^0,c
  6845  001CB2  5013               	movf	_atoi$1678^0,w,c
  6846  001CB4  1014               	iorwf	(_atoi$1678+1)^0,w,c
  6847  001CB6  A4D8               	btfss	status,2,c
  6848  001CB8  EF60  F00E         	goto	u4211
  6849  001CBC  EF62  F00E         	goto	u4210
  6850  001CC0                     u4211:
  6851  001CC0  EF27  F00E         	goto	l4036
  6852  001CC4                     u4210:
  6853  001CC4  EF6C  F00E         	goto	l4056
  6854  001CC8                     l4052:
  6855  001CC8  0E00               	movlw	0
  6856  001CCA  6E12               	movwf	(atoi@neg+1)^0,c
  6857  001CCC  0E01               	movlw	1
  6858  001CCE  6E11               	movwf	atoi@neg^0,c
  6859  001CD0                     l4054:
  6860  001CD0  4A0B               	infsnz	atoi@s^0,f,c
  6861  001CD2  2A0C               	incf	(atoi@s+1)^0,f,c
  6862  001CD4  EFA1  F00E         	goto	l4062
  6863  001CD8                     l4056:
  6864  001CD8  C00B  FFF6         	movff	atoi@s,tblptrl
  6865  001CDC  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6866  001CE0                     	if	0	;tblptru may be non-zero
  6867  001CE0                     	endif
  6868  001CE0                     	if	0	;tblptru may be non-zero
  6869  001CE0                     	endif
  6870  001CE0  0008               	tblrd		*
  6871  001CE2  50F5               	movf	tablat,w,c
  6872  001CE4  6E0D               	movwf	??_atoi^0,c
  6873  001CE6  6A0E               	clrf	(??_atoi+1)^0,c
  6874                           
  6875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6876                           ; Switch size 1, requested type "simple"
  6877                           ; Number of cases is 1, Range of values is 0 to 0
  6878                           ; switch strategies available:
  6879                           ; Name         Instructions Cycles
  6880                           ; simple_byte            4     3 (average)
  6881                           ;	Chosen strategy is simple_byte
  6882  001CE8  500E               	movf	(??_atoi+1)^0,w,c
  6883  001CEA  0A00               	xorlw	0	; case 0
  6884  001CEC  B4D8               	btfsc	status,2,c
  6885  001CEE  EF7B  F00E         	goto	l4342
  6886  001CF2  EFA1  F00E         	goto	l4062
  6887  001CF6                     l4342:
  6888                           
  6889                           ; Switch size 1, requested type "simple"
  6890                           ; Number of cases is 2, Range of values is 43 to 45
  6891                           ; switch strategies available:
  6892                           ; Name         Instructions Cycles
  6893                           ; simple_byte            7     4 (average)
  6894                           ;	Chosen strategy is simple_byte
  6895  001CF6  500D               	movf	??_atoi^0,w,c
  6896  001CF8  0A2B               	xorlw	43	; case 43
  6897  001CFA  B4D8               	btfsc	status,2,c
  6898  001CFC  EF68  F00E         	goto	l4054
  6899  001D00  0A06               	xorlw	6	; case 45
  6900  001D02  B4D8               	btfsc	status,2,c
  6901  001D04  EF64  F00E         	goto	l4052
  6902  001D08  EFA1  F00E         	goto	l4062
  6903  001D0C                     l4058:
  6904  001D0C  C018  F004         	movff	atoi@n,___wmul@multiplier
  6905  001D10  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  6906  001D14  0E00               	movlw	0
  6907  001D16  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  6908  001D18  0E0A               	movlw	10
  6909  001D1A  6E06               	movwf	___wmul@multiplicand^0,c
  6910  001D1C  EC0E  F018         	call	___wmul	;wreg free
  6911  001D20  C00B  FFF6         	movff	atoi@s,tblptrl
  6912  001D24  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6913  001D28                     	if	0	;tblptru may be non-zero
  6914  001D28                     	endif
  6915  001D28                     	if	0	;tblptru may be non-zero
  6916  001D28                     	endif
  6917  001D28  0008               	tblrd		*
  6918  001D2A  50F5               	movf	tablat,w,c
  6919  001D2C  5E04               	subwf	?___wmul^0,f,c
  6920  001D2E  0E00               	movlw	0
  6921  001D30  5A05               	subwfb	(?___wmul+1)^0,f,c
  6922  001D32  0E30               	movlw	48
  6923  001D34  2404               	addwf	?___wmul^0,w,c
  6924  001D36  6E18               	movwf	atoi@n^0,c
  6925  001D38  0E00               	movlw	0
  6926  001D3A  2005               	addwfc	(?___wmul+1)^0,w,c
  6927  001D3C  6E19               	movwf	(atoi@n+1)^0,c
  6928  001D3E  EF68  F00E         	goto	l4054
  6929  001D42                     l4062:
  6930  001D42  0ED0               	movlw	208
  6931  001D44  6E0D               	movwf	??_atoi^0,c
  6932  001D46  0EFF               	movlw	255
  6933  001D48  6E0E               	movwf	(??_atoi+1)^0,c
  6934  001D4A  C00B  FFF6         	movff	atoi@s,tblptrl
  6935  001D4E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6936  001D52                     	if	0	;tblptru may be non-zero
  6937  001D52                     	endif
  6938  001D52                     	if	0	;tblptru may be non-zero
  6939  001D52                     	endif
  6940  001D52  0008               	tblrd		*
  6941  001D54  50F5               	movf	tablat,w,c
  6942  001D56  6E0F               	movwf	(??_atoi+2)^0,c
  6943  001D58  6A10               	clrf	(??_atoi+3)^0,c
  6944  001D5A  500D               	movf	??_atoi^0,w,c
  6945  001D5C  260F               	addwf	(??_atoi+2)^0,f,c
  6946  001D5E  500E               	movf	(??_atoi+1)^0,w,c
  6947  001D60  2210               	addwfc	(??_atoi+3)^0,f,c
  6948  001D62  5010               	movf	(??_atoi+3)^0,w,c
  6949  001D64  E10A               	bnz	u4220
  6950  001D66  0E0A               	movlw	10
  6951  001D68  5C0F               	subwf	(??_atoi+2)^0,w,c
  6952  001D6A  A0D8               	btfss	status,0,c
  6953  001D6C  EFBA  F00E         	goto	u4221
  6954  001D70  EFBD  F00E         	goto	u4220
  6955  001D74                     u4221:
  6956  001D74  0E01               	movlw	1
  6957  001D76  EFBE  F00E         	goto	u4230
  6958  001D7A                     u4220:
  6959  001D7A  0E00               	movlw	0
  6960  001D7C                     u4230:
  6961  001D7C  6E15               	movwf	_atoi$1680^0,c
  6962  001D7E  6A16               	clrf	(_atoi$1680+1)^0,c
  6963  001D80  5015               	movf	_atoi$1680^0,w,c
  6964  001D82  1016               	iorwf	(_atoi$1680+1)^0,w,c
  6965  001D84  A4D8               	btfss	status,2,c
  6966  001D86  EFC7  F00E         	goto	u4241
  6967  001D8A  EFC9  F00E         	goto	u4240
  6968  001D8E                     u4241:
  6969  001D8E  EF86  F00E         	goto	l4058
  6970  001D92                     u4240:
  6971  001D92  5011               	movf	atoi@neg^0,w,c
  6972  001D94  1012               	iorwf	(atoi@neg+1)^0,w,c
  6973  001D96  A4D8               	btfss	status,2,c
  6974  001D98  EFD0  F00E         	goto	u4251
  6975  001D9C  EFD2  F00E         	goto	u4250
  6976  001DA0                     u4251:
  6977  001DA0  EFE0  F00E         	goto	l1114
  6978  001DA4                     u4250:
  6979  001DA4  C018  F00D         	movff	atoi@n,??_atoi
  6980  001DA8  C019  F00E         	movff	atoi@n+1,??_atoi+1
  6981  001DAC  1E0D               	comf	??_atoi^0,f,c
  6982  001DAE  1E0E               	comf	(??_atoi+1)^0,f,c
  6983  001DB0  4A0D               	infsnz	??_atoi^0,f,c
  6984  001DB2  2A0E               	incf	(??_atoi+1)^0,f,c
  6985  001DB4  C00D  F00B         	movff	??_atoi,?_atoi
  6986  001DB8  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  6987  001DBC  EFE4  F00E         	goto	l1117
  6988  001DC0                     l1114:
  6989  001DC0  C018  F00B         	movff	atoi@n,?_atoi
  6990  001DC4  C019  F00C         	movff	atoi@n+1,?_atoi+1
  6991  001DC8                     l1117:
  6992  001DC8  0012               	return		;funcret
  6993  001DCA                     __end_of_atoi:
  6994                           	callstack 0
  6995                           
  6996 ;; *************** function _isspace *****************
  6997 ;; Defined at:
  6998 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  c               2    3[COMRAM] int 
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;		None
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  2    3[COMRAM] int 
  7005 ;; Registers used:
  7006 ;;		wreg, status,2, status,0
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7012 ;;      Params:         2       0       0       0       0       0       0       0       0
  7013 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7014 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7015 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7016 ;;Total ram usage:        7 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; Hardware stack levels required when called:    2
  7019 ;; This function calls:
  7020 ;;		Nothing
  7021 ;; This function is called by:
  7022 ;;		_atoi
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           	psect	text36
  7027  002D98                     __ptext36:
  7028                           	callstack 0
  7029  002D98                     _isspace:
  7030                           	callstack 22
  7031  002D98  0E01               	movlw	1
  7032  002D9A  6E0A               	movwf	_isspace$1696^0,c
  7033  002D9C  0E20               	movlw	32
  7034  002D9E  1804               	xorwf	isspace@c^0,w,c
  7035  002DA0  1005               	iorwf	(isspace@c+1)^0,w,c
  7036  002DA2  B4D8               	btfsc	status,2,c
  7037  002DA4  EFD6  F016         	goto	u3971
  7038  002DA8  EFD8  F016         	goto	u3970
  7039  002DAC                     u3971:
  7040  002DAC  EFF1  F016         	goto	l3940
  7041  002DB0                     u3970:
  7042  002DB0  0EF7               	movlw	247
  7043  002DB2  6E06               	movwf	??_isspace^0,c
  7044  002DB4  0EFF               	movlw	255
  7045  002DB6  6E07               	movwf	(??_isspace+1)^0,c
  7046  002DB8  C004  F008         	movff	isspace@c,??_isspace+2
  7047  002DBC  C005  F009         	movff	isspace@c+1,??_isspace+3
  7048  002DC0  5006               	movf	??_isspace^0,w,c
  7049  002DC2  2608               	addwf	(??_isspace+2)^0,f,c
  7050  002DC4  5007               	movf	(??_isspace+1)^0,w,c
  7051  002DC6  2209               	addwfc	(??_isspace+3)^0,f,c
  7052  002DC8  5009               	movf	(??_isspace+3)^0,w,c
  7053  002DCA  E109               	bnz	u3980
  7054  002DCC  0E05               	movlw	5
  7055  002DCE  5C08               	subwf	(??_isspace+2)^0,w,c
  7056  002DD0  A0D8               	btfss	status,0,c
  7057  002DD2  EFED  F016         	goto	u3981
  7058  002DD6  EFEF  F016         	goto	u3980
  7059  002DDA                     u3981:
  7060  002DDA  EFF1  F016         	goto	l3940
  7061  002DDE                     u3980:
  7062  002DDE  0E00               	movlw	0
  7063  002DE0  6E0A               	movwf	_isspace$1696^0,c
  7064  002DE2                     l3940:
  7065  002DE2  C00A  F004         	movff	_isspace$1696,?_isspace
  7066  002DE6  6A05               	clrf	(?_isspace+1)^0,c
  7067  002DE8  0012               	return		;funcret
  7068  002DEA                     __end_of_isspace:
  7069                           	callstack 0
  7070                           
  7071 ;; *************** function _isdigit *****************
  7072 ;; Defined at:
  7073 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  c               2    3[COMRAM] int 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;		None
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  2    3[COMRAM] int 
  7080 ;; Registers used:
  7081 ;;		wreg, status,2, status,0
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7087 ;;      Params:         2       0       0       0       0       0       0       0       0
  7088 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7089 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7090 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7091 ;;Total ram usage:        6 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; Hardware stack levels required when called:    2
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_vfpfcnvrt
  7098 ;;		_atoi
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           	psect	text37
  7103  002F78                     __ptext37:
  7104                           	callstack 0
  7105  002F78                     _isdigit:
  7106                           	callstack 23
  7107  002F78  0ED0               	movlw	208
  7108  002F7A  6E06               	movwf	??_isdigit^0,c
  7109  002F7C  0EFF               	movlw	255
  7110  002F7E  6E07               	movwf	(??_isdigit+1)^0,c
  7111  002F80  C004  F008         	movff	isdigit@c,??_isdigit+2
  7112  002F84  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  7113  002F88  5006               	movf	??_isdigit^0,w,c
  7114  002F8A  2608               	addwf	(??_isdigit+2)^0,f,c
  7115  002F8C  5007               	movf	(??_isdigit+1)^0,w,c
  7116  002F8E  2209               	addwfc	(??_isdigit+3)^0,f,c
  7117  002F90  5009               	movf	(??_isdigit+3)^0,w,c
  7118  002F92  E10A               	bnz	u3950
  7119  002F94  0E0A               	movlw	10
  7120  002F96  5C08               	subwf	(??_isdigit+2)^0,w,c
  7121  002F98  A0D8               	btfss	status,0,c
  7122  002F9A  EFD1  F017         	goto	u3951
  7123  002F9E  EFD4  F017         	goto	u3950
  7124  002FA2                     u3951:
  7125  002FA2  0E01               	movlw	1
  7126  002FA4  EFD5  F017         	goto	u3960
  7127  002FA8                     u3950:
  7128  002FA8  0E00               	movlw	0
  7129  002FAA                     u3960:
  7130  002FAA  6E04               	movwf	?_isdigit^0,c
  7131  002FAC  6A05               	clrf	(?_isdigit+1)^0,c
  7132  002FAE  0012               	return		;funcret
  7133  002FB0                     __end_of_isdigit:
  7134                           	callstack 0
  7135                           
  7136 ;; *************** function ___wmul *****************
  7137 ;; Defined at:
  7138 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  multiplier      2    3[COMRAM] unsigned int 
  7141 ;;  multiplicand    2    5[COMRAM] unsigned int 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  product         2    7[COMRAM] unsigned int 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2    3[COMRAM] unsigned int 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0, prodl, prodh
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7153 ;;      Params:         4       0       0       0       0       0       0       0       0
  7154 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7156 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7157 ;;Total ram usage:        6 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:    2
  7160 ;; This function calls:
  7161 ;;		Nothing
  7162 ;; This function is called by:
  7163 ;;		_atoi
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           	psect	text38
  7168  00301C                     __ptext38:
  7169                           	callstack 0
  7170  00301C                     ___wmul:
  7171                           	callstack 22
  7172  00301C  5004               	movf	___wmul@multiplier^0,w,c
  7173  00301E  0206               	mulwf	___wmul@multiplicand^0,c
  7174  003020  CFF3 F008          	movff	prodl,___wmul@product
  7175  003024  CFF4 F009          	movff	prodh,___wmul@product+1
  7176  003028  5004               	movf	___wmul@multiplier^0,w,c
  7177  00302A  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  7178  00302C  50F3               	movf	243,w,c
  7179  00302E  2609               	addwf	(___wmul@product+1)^0,f,c
  7180  003030  5005               	movf	(___wmul@multiplier+1)^0,w,c
  7181  003032  0206               	mulwf	___wmul@multiplicand^0,c
  7182  003034  50F3               	movf	243,w,c
  7183  003036  2609               	addwf	(___wmul@product+1)^0,f,c
  7184  003038  C008  F004         	movff	___wmul@product,?___wmul
  7185  00303C  C009  F005         	movff	___wmul@product+1,?___wmul+1
  7186  003040  0012               	return		;funcret
  7187  003042                     __end_of___wmul:
  7188                           	callstack 0
  7189                           
  7190 ;; *************** function _appTimerStop *****************
  7191 ;; Defined at:
  7192 ;;		line 78 in file "servo.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		None
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7209 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7210 ;;Total ram usage:        0 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    2
  7213 ;; This function calls:
  7214 ;;		Nothing
  7215 ;; This function is called by:
  7216 ;;		_appGetElements
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           	psect	text39
  7221  0030C4                     __ptext39:
  7222                           	callstack 0
  7223  0030C4                     _appTimerStop:
  7224                           	callstack 27
  7225  0030C4                     
  7226                           ;servo.c: 80:     T3CONbits.TMR3ON = 0;
  7227  0030C4  90B1               	bcf	177,0,c	;volatile
  7228  0030C6  0012               	return		;funcret
  7229  0030C8                     __end_of_appTimerStop:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function _Lcd_Out *****************
  7233 ;; Defined at:
  7234 ;;		line 95 in file "flex_lcd.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  y               1    wreg     unsigned char 
  7237 ;;  x               1    6[COMRAM] unsigned char 
  7238 ;;  buffer          2    7[COMRAM] PTR const char 
  7239 ;;		 -> appElemts@dataout(6), STR_4(6), STR_3(12), datos.display(16), 
  7240 ;;		 -> datos(24), 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  y               1   11[COMRAM] unsigned char 
  7243 ;;  data            1   12[COMRAM] unsigned char 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      void 
  7246 ;; Registers used:
  7247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7253 ;;      Params:         3       0       0       0       0       0       0       0       0
  7254 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7255 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7256 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7257 ;;Total ram usage:        7 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    3
  7260 ;; This function calls:
  7261 ;;		_Lcd_Chr_CP
  7262 ;;		_Lcd_Cmd
  7263 ;; This function is called by:
  7264 ;;		_appADC
  7265 ;;		_appBat
  7266 ;;		_appLCD_Init
  7267 ;;		_appElemts
  7268 ;;		_appGetElements
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text40
  7273  0027C4                     __ptext40:
  7274                           	callstack 0
  7275  0027C4                     _Lcd_Out:
  7276                           	callstack 25
  7277                           
  7278                           ;incstack = 0
  7279                           ;Lcd_Out@y stored from wreg
  7280  0027C4  6E0C               	movwf	Lcd_Out@y^0,c
  7281  0027C6                     
  7282                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  7283  0027C6  EFF9  F013         	goto	l3006
  7284  0027CA                     l2996:
  7285                           
  7286                           ;flex_lcd.c: 101:             data = 128 + x;
  7287  0027CA  5007               	movf	Lcd_Out@x^0,w,c
  7288  0027CC  0F80               	addlw	128
  7289  0027CE  6E0D               	movwf	Lcd_Out@data^0,c
  7290                           
  7291                           ;flex_lcd.c: 102:             break;
  7292  0027D0  EF16  F014         	goto	l3008
  7293  0027D4                     l2998:
  7294                           
  7295                           ;flex_lcd.c: 104:             data = 192 + x;
  7296  0027D4  5007               	movf	Lcd_Out@x^0,w,c
  7297  0027D6  0FC0               	addlw	192
  7298  0027D8  6E0D               	movwf	Lcd_Out@data^0,c
  7299                           
  7300                           ;flex_lcd.c: 105:             break;
  7301  0027DA  EF16  F014         	goto	l3008
  7302  0027DE                     l3000:
  7303                           
  7304                           ;flex_lcd.c: 107:             data = 148 + x;
  7305  0027DE  5007               	movf	Lcd_Out@x^0,w,c
  7306  0027E0  0F94               	addlw	148
  7307  0027E2  6E0D               	movwf	Lcd_Out@data^0,c
  7308                           
  7309                           ;flex_lcd.c: 108:             break;
  7310  0027E4  EF16  F014         	goto	l3008
  7311  0027E8                     l3002:
  7312                           
  7313                           ;flex_lcd.c: 110:             data = 212 + x;
  7314  0027E8  5007               	movf	Lcd_Out@x^0,w,c
  7315  0027EA  0FD4               	addlw	212
  7316  0027EC  6E0D               	movwf	Lcd_Out@data^0,c
  7317                           
  7318                           ;flex_lcd.c: 111:             break;
  7319  0027EE  EF16  F014         	goto	l3008
  7320  0027F2                     l3006:
  7321  0027F2  500C               	movf	Lcd_Out@y^0,w,c
  7322  0027F4  6E0A               	movwf	??_Lcd_Out^0,c
  7323  0027F6  6A0B               	clrf	(??_Lcd_Out+1)^0,c
  7324                           
  7325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7326                           ; Switch size 1, requested type "simple"
  7327                           ; Number of cases is 1, Range of values is 0 to 0
  7328                           ; switch strategies available:
  7329                           ; Name         Instructions Cycles
  7330                           ; simple_byte            4     3 (average)
  7331                           ;	Chosen strategy is simple_byte
  7332  0027F8  500B               	movf	(??_Lcd_Out+1)^0,w,c
  7333  0027FA  0A00               	xorlw	0	; case 0
  7334  0027FC  B4D8               	btfsc	status,2,c
  7335  0027FE  EF03  F014         	goto	l4344
  7336  002802  EF16  F014         	goto	l3008
  7337  002806                     l4344:
  7338                           
  7339                           ; Switch size 1, requested type "simple"
  7340                           ; Number of cases is 4, Range of values is 1 to 4
  7341                           ; switch strategies available:
  7342                           ; Name         Instructions Cycles
  7343                           ; simple_byte           13     7 (average)
  7344                           ;	Chosen strategy is simple_byte
  7345  002806  500A               	movf	??_Lcd_Out^0,w,c
  7346  002808  0A01               	xorlw	1	; case 1
  7347  00280A  B4D8               	btfsc	status,2,c
  7348  00280C  EFE5  F013         	goto	l2996
  7349  002810  0A03               	xorlw	3	; case 2
  7350  002812  B4D8               	btfsc	status,2,c
  7351  002814  EFEA  F013         	goto	l2998
  7352  002818  0A01               	xorlw	1	; case 3
  7353  00281A  B4D8               	btfsc	status,2,c
  7354  00281C  EFEF  F013         	goto	l3000
  7355  002820  0A07               	xorlw	7	; case 4
  7356  002822  B4D8               	btfsc	status,2,c
  7357  002824  EFF4  F013         	goto	l3002
  7358  002828  EF16  F014         	goto	l3008
  7359  00282C                     l3008:
  7360                           
  7361                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  7362  00282C  500D               	movf	Lcd_Out@data^0,w,c
  7363  00282E  EC5F  F012         	call	_Lcd_Cmd
  7364                           
  7365                           ;flex_lcd.c: 116:     while(*buffer)
  7366  002832  EF2F  F014         	goto	l3014
  7367  002836                     l3010:
  7368                           
  7369                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  7370  002836  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7371  00283A  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7372  00283E  6AF8               	clrf	tblptru,c
  7373  002840  0E07               	movlw	(high __ramtop+-1)
  7374  002842  64F7               	cpfsgt	tblptrh,c
  7375  002844  D003               	bra	u2727
  7376  002846  0008               	tblrd		*
  7377  002848  50F5               	movf	tablat,w,c
  7378  00284A  D005               	bra	u2720
  7379  00284C                     u2727:
  7380  00284C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7381  002850  CFF7 FFE2          	movff	tblptrh,fsr1h
  7382  002854  50E7               	movf	indf1,w,c
  7383  002856                     u2720:
  7384  002856  EC16  F011         	call	_Lcd_Chr_CP
  7385  00285A                     
  7386                           ;flex_lcd.c: 119:         buffer++;
  7387  00285A  4A08               	infsnz	Lcd_Out@buffer^0,f,c
  7388  00285C  2A09               	incf	(Lcd_Out@buffer+1)^0,f,c
  7389  00285E                     l3014:
  7390                           
  7391                           ;flex_lcd.c: 116:     while(*buffer)
  7392  00285E  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7393  002862  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7394  002866  6AF8               	clrf	tblptru,c
  7395  002868  0E07               	movlw	(high __ramtop+-1)
  7396  00286A  64F7               	cpfsgt	tblptrh,c
  7397  00286C  D003               	bra	u2737
  7398  00286E  0008               	tblrd		*
  7399  002870  50F5               	movf	tablat,w,c
  7400  002872  D005               	bra	u2730
  7401  002874                     u2737:
  7402  002874  CFF6 FFE1          	movff	tblptrl,fsr1l
  7403  002878  CFF7 FFE2          	movff	tblptrh,fsr1h
  7404  00287C  50E7               	movf	indf1,w,c
  7405  00287E                     u2730:
  7406  00287E  0900               	iorlw	0
  7407  002880  A4D8               	btfss	status,2,c
  7408  002882  EF45  F014         	goto	u2741
  7409  002886  EF47  F014         	goto	u2740
  7410  00288A                     u2741:
  7411  00288A  EF1B  F014         	goto	l3010
  7412  00288E                     u2740:
  7413  00288E  0012               	return		;funcret
  7414  002890                     __end_of_Lcd_Out:
  7415                           	callstack 0
  7416                           
  7417 ;; *************** function _Lcd_Cmd *****************
  7418 ;; Defined at:
  7419 ;;		line 175 in file "flex_lcd.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  data            1    wreg     unsigned char 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;  data            1    5[COMRAM] unsigned char 
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  1    wreg      void 
  7426 ;; Registers used:
  7427 ;;		wreg, status,2, status,0
  7428 ;; Tracked objects:
  7429 ;;		On entry : 0/0
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7433 ;;      Params:         0       0       0       0       0       0       0       0       0
  7434 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7435 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7436 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7437 ;;Total ram usage:        3 bytes
  7438 ;; Hardware stack levels used:    1
  7439 ;; Hardware stack levels required when called:    2
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		_Lcd_Init
  7444 ;;		_Lcd_Out
  7445 ;;		_appLCD_Init
  7446 ;;		_appGetElements
  7447 ;;		_Lcd_Out2
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text41
  7452  0024BE                     __ptext41:
  7453                           	callstack 0
  7454  0024BE                     _Lcd_Cmd:
  7455                           	callstack 25
  7456                           
  7457                           ;incstack = 0
  7458                           ;Lcd_Cmd@data stored from wreg
  7459  0024BE  6E06               	movwf	Lcd_Cmd@data^0,c
  7460  0024C0                     
  7461                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  7462  0024C0  968C               	bcf	140,3,c	;volatile
  7463  0024C2  948C               	bcf	140,2,c	;volatile
  7464  0024C4                     
  7465                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  7466  0024C4  6A04               	clrf	??_Lcd_Cmd^0,c
  7467  0024C6  AE06               	btfss	Lcd_Cmd@data^0,7,c
  7468  0024C8  D001               	bra	u2565
  7469  0024CA  2A04               	incf	??_Lcd_Cmd^0,f,c
  7470  0024CC                     u2565:
  7471  0024CC  0E01               	movlw	1
  7472  0024CE  1604               	andwf	??_Lcd_Cmd^0,f,c
  7473  0024D0  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7474  0024D2  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7475  0024D4  508C               	movf	140,w,c	;volatile
  7476  0024D6  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7477  0024D8  0B7F               	andlw	-129
  7478  0024DA  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7479  0024DC  6E8C               	movwf	140,c	;volatile
  7480                           
  7481                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  7482  0024DE  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7483  0024E2  0E06               	movlw	6
  7484  0024E4  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7485  0024E6                     u2575:
  7486  0024E6  90D8               	bcf	status,0,c
  7487  0024E8  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7488  0024EA  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7489  0024EC  EF73  F012         	goto	u2575
  7490  0024F0  0E01               	movlw	1
  7491  0024F2  1604               	andwf	??_Lcd_Cmd^0,f,c
  7492  0024F4  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7493  0024F6  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7494  0024F8  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7495  0024FA  508C               	movf	140,w,c	;volatile
  7496  0024FC  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7497  0024FE  0BBF               	andlw	-65
  7498  002500  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7499  002502  6E8C               	movwf	140,c	;volatile
  7500                           
  7501                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  7502  002504  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7503  002508  0E05               	movlw	5
  7504  00250A  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7505  00250C                     u2585:
  7506  00250C  90D8               	bcf	status,0,c
  7507  00250E  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7508  002510  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7509  002512  EF86  F012         	goto	u2585
  7510  002516  0E01               	movlw	1
  7511  002518  1604               	andwf	??_Lcd_Cmd^0,f,c
  7512  00251A  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7513  00251C  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7514  00251E  508C               	movf	140,w,c	;volatile
  7515  002520  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7516  002522  0BDF               	andlw	-33
  7517  002524  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7518  002526  6E8C               	movwf	140,c	;volatile
  7519                           
  7520                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  7521  002528  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7522  00252C  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7523  00252E  0E0F               	movlw	15
  7524  002530  1604               	andwf	??_Lcd_Cmd^0,f,c
  7525  002532  0E01               	movlw	1
  7526  002534  1604               	andwf	??_Lcd_Cmd^0,f,c
  7527  002536  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7528  002538  508C               	movf	140,w,c	;volatile
  7529  00253A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7530  00253C  0BEF               	andlw	-17
  7531  00253E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7532  002540  6E8C               	movwf	140,c	;volatile
  7533  002542                     
  7534                           ;flex_lcd.c: 182:     _delay(10);
  7535  002542  0E03               	movlw	3
  7536  002544                     u4597:
  7537  002544  2EE8               	decfsz	wreg,f,c
  7538  002546  D7FE               	bra	u4597
  7539  002548  F000               	nop	
  7540  00254A                     
  7541                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  7542  00254A  868C               	bsf	140,3,c	;volatile
  7543  00254C                     
  7544                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7545  00254C  0E05               	movlw	5
  7546  00254E                     u4607:
  7547  00254E  2EE8               	decfsz	wreg,f,c
  7548  002550  D7FE               	bra	u4607
  7549  002552                     
  7550                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  7551  002552  968C               	bcf	140,3,c	;volatile
  7552                           
  7553                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  7554  002554  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7555  002558  90D8               	bcf	status,0,c
  7556  00255A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7557  00255C  90D8               	bcf	status,0,c
  7558  00255E  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7559  002560  90D8               	bcf	status,0,c
  7560  002562  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7561  002564  0E01               	movlw	1
  7562  002566  1604               	andwf	??_Lcd_Cmd^0,f,c
  7563  002568  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7564  00256A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7565  00256C  508C               	movf	140,w,c	;volatile
  7566  00256E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7567  002570  0B7F               	andlw	-129
  7568  002572  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7569  002574  6E8C               	movwf	140,c	;volatile
  7570                           
  7571                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  7572  002576  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7573  00257A  90D8               	bcf	status,0,c
  7574  00257C  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7575  00257E  90D8               	bcf	status,0,c
  7576  002580  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7577  002582  0E01               	movlw	1
  7578  002584  1604               	andwf	??_Lcd_Cmd^0,f,c
  7579  002586  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7580  002588  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7581  00258A  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7582  00258C  508C               	movf	140,w,c	;volatile
  7583  00258E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7584  002590  0BBF               	andlw	-65
  7585  002592  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7586  002594  6E8C               	movwf	140,c	;volatile
  7587                           
  7588                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  7589  002596  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7590  00259A  90D8               	bcf	status,0,c
  7591  00259C  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7592  00259E  0E01               	movlw	1
  7593  0025A0  1604               	andwf	??_Lcd_Cmd^0,f,c
  7594  0025A2  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7595  0025A4  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7596  0025A6  508C               	movf	140,w,c	;volatile
  7597  0025A8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7598  0025AA  0BDF               	andlw	-33
  7599  0025AC  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7600  0025AE  6E8C               	movwf	140,c	;volatile
  7601                           
  7602                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  7603  0025B0  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7604  0025B4  0E01               	movlw	1
  7605  0025B6  1604               	andwf	??_Lcd_Cmd^0,f,c
  7606  0025B8  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7607  0025BA  508C               	movf	140,w,c	;volatile
  7608  0025BC  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7609  0025BE  0BEF               	andlw	-17
  7610  0025C0  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7611  0025C2  6E8C               	movwf	140,c	;volatile
  7612  0025C4                     
  7613                           ;flex_lcd.c: 190:     _delay(10);
  7614  0025C4  0E03               	movlw	3
  7615  0025C6                     u4617:
  7616  0025C6  2EE8               	decfsz	wreg,f,c
  7617  0025C8  D7FE               	bra	u4617
  7618  0025CA  F000               	nop	
  7619  0025CC                     
  7620                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  7621  0025CC  868C               	bsf	140,3,c	;volatile
  7622  0025CE                     
  7623                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7624  0025CE  0E05               	movlw	5
  7625  0025D0                     u4627:
  7626  0025D0  2EE8               	decfsz	wreg,f,c
  7627  0025D2  D7FE               	bra	u4627
  7628  0025D4                     
  7629                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  7630  0025D4  968C               	bcf	140,3,c	;volatile
  7631  0025D6                     
  7632                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7633  0025D6  0E16               	movlw	22
  7634  0025D8  6E04               	movwf	??_Lcd_Cmd^0,c
  7635  0025DA  0E6C               	movlw	108
  7636  0025DC                     u4637:
  7637  0025DC  2EE8               	decfsz	wreg,f,c
  7638  0025DE  D7FE               	bra	u4637
  7639  0025E0  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  7640  0025E2  D7FC               	bra	u4637
  7641  0025E4  D000               	nop2	
  7642  0025E6  0012               	return		;funcret
  7643  0025E8                     __end_of_Lcd_Cmd:
  7644                           	callstack 0
  7645                           
  7646 ;; *************** function _Lcd_Chr_CP *****************
  7647 ;; Defined at:
  7648 ;;		line 151 in file "flex_lcd.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  data            1    wreg     char 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  data            1    5[COMRAM] char 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  1    wreg      void 
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7662 ;;      Params:         0       0       0       0       0       0       0       0       0
  7663 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7664 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7665 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7666 ;;Total ram usage:        3 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; Hardware stack levels required when called:    2
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_Lcd_Out
  7673 ;;		_Lcd_Out2
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text42
  7678  00222C                     __ptext42:
  7679                           	callstack 0
  7680  00222C                     _Lcd_Chr_CP:
  7681                           	callstack 25
  7682                           
  7683                           ;incstack = 0
  7684                           ;Lcd_Chr_CP@data stored from wreg
  7685  00222C  6E06               	movwf	Lcd_Chr_CP@data^0,c
  7686  00222E                     
  7687                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  7688  00222E  968C               	bcf	140,3,c	;volatile
  7689                           
  7690                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  7691  002230  848C               	bsf	140,2,c	;volatile
  7692  002232                     
  7693                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  7694  002232  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7695  002236  0E07               	movlw	7
  7696  002238  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7697  00223A                     u2595:
  7698  00223A  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7699  00223C  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7700  00223E  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7701  002240  EF1D  F011         	goto	u2595
  7702  002244  0E01               	movlw	1
  7703  002246  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7704  002248  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7705  00224A  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7706  00224C  508C               	movf	140,w,c	;volatile
  7707  00224E  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7708  002250  0B7F               	andlw	-129
  7709  002252  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7710  002254  6E8C               	movwf	140,c	;volatile
  7711                           
  7712                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  7713  002256  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7714  00225A  0E06               	movlw	6
  7715  00225C  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7716  00225E                     u2605:
  7717  00225E  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7718  002260  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7719  002262  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7720  002264  EF2F  F011         	goto	u2605
  7721  002268  0E01               	movlw	1
  7722  00226A  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7723  00226C  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7724  00226E  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7725  002270  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7726  002272  508C               	movf	140,w,c	;volatile
  7727  002274  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7728  002276  0BBF               	andlw	-65
  7729  002278  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7730  00227A  6E8C               	movwf	140,c	;volatile
  7731                           
  7732                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  7733  00227C  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7734  002280  0E05               	movlw	5
  7735  002282  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7736  002284                     u2615:
  7737  002284  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7738  002286  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7739  002288  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7740  00228A  EF42  F011         	goto	u2615
  7741  00228E  0E01               	movlw	1
  7742  002290  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7743  002292  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7744  002294  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7745  002296  508C               	movf	140,w,c	;volatile
  7746  002298  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7747  00229A  0BDF               	andlw	-33
  7748  00229C  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7749  00229E  6E8C               	movwf	140,c	;volatile
  7750                           
  7751                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  7752  0022A0  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7753  0022A4  0E04               	movlw	4
  7754  0022A6  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7755  0022A8                     u2625:
  7756  0022A8  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7757  0022AA  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7758  0022AC  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7759  0022AE  EF54  F011         	goto	u2625
  7760  0022B2  0E01               	movlw	1
  7761  0022B4  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7762  0022B6  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7763  0022B8  508C               	movf	140,w,c	;volatile
  7764  0022BA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7765  0022BC  0BEF               	andlw	-17
  7766  0022BE  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7767  0022C0  6E8C               	movwf	140,c	;volatile
  7768  0022C2                     
  7769                           ;flex_lcd.c: 159:     _delay(10);
  7770  0022C2  0E03               	movlw	3
  7771  0022C4                     u4647:
  7772  0022C4  2EE8               	decfsz	wreg,f,c
  7773  0022C6  D7FE               	bra	u4647
  7774  0022C8  F000               	nop	
  7775  0022CA                     
  7776                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  7777  0022CA  868C               	bsf	140,3,c	;volatile
  7778  0022CC                     
  7779                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7780  0022CC  0E05               	movlw	5
  7781  0022CE                     u4657:
  7782  0022CE  2EE8               	decfsz	wreg,f,c
  7783  0022D0  D7FE               	bra	u4657
  7784  0022D2                     
  7785                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  7786  0022D2  968C               	bcf	140,3,c	;volatile
  7787                           
  7788                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  7789  0022D4  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7790  0022D8  0E03               	movlw	3
  7791  0022DA  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7792  0022DC                     u2635:
  7793  0022DC  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7794  0022DE  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7795  0022E0  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7796  0022E2  EF6E  F011         	goto	u2635
  7797  0022E6  0E01               	movlw	1
  7798  0022E8  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7799  0022EA  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7800  0022EC  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7801  0022EE  508C               	movf	140,w,c	;volatile
  7802  0022F0  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7803  0022F2  0B7F               	andlw	-129
  7804  0022F4  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7805  0022F6  6E8C               	movwf	140,c	;volatile
  7806                           
  7807                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  7808  0022F8  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7809  0022FC  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7810  0022FE  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7811  002300  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7812  002302  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7813  002304  0E01               	movlw	1
  7814  002306  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7815  002308  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7816  00230A  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7817  00230C  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7818  00230E  508C               	movf	140,w,c	;volatile
  7819  002310  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7820  002312  0BBF               	andlw	-65
  7821  002314  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7822  002316  6E8C               	movwf	140,c	;volatile
  7823                           
  7824                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  7825  002318  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7826  00231C  0E01               	movlw	1
  7827  00231E  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7828  002320                     u2645:
  7829  002320  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7830  002322  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7831  002324  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7832  002326  EF90  F011         	goto	u2645
  7833  00232A  0E01               	movlw	1
  7834  00232C  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7835  00232E  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7836  002330  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7837  002332  508C               	movf	140,w,c	;volatile
  7838  002334  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7839  002336  0BDF               	andlw	-33
  7840  002338  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7841  00233A  6E8C               	movwf	140,c	;volatile
  7842                           
  7843                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  7844  00233C  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7845  002340  0E01               	movlw	1
  7846  002342  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7847  002344  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7848  002346  508C               	movf	140,w,c	;volatile
  7849  002348  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7850  00234A  0BEF               	andlw	-17
  7851  00234C  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7852  00234E  6E8C               	movwf	140,c	;volatile
  7853  002350                     
  7854                           ;flex_lcd.c: 167:     _delay(10);
  7855  002350  0E03               	movlw	3
  7856  002352                     u4667:
  7857  002352  2EE8               	decfsz	wreg,f,c
  7858  002354  D7FE               	bra	u4667
  7859  002356  F000               	nop	
  7860  002358                     
  7861                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  7862  002358  868C               	bsf	140,3,c	;volatile
  7863  00235A                     
  7864                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7865  00235A  0E05               	movlw	5
  7866  00235C                     u4677:
  7867  00235C  2EE8               	decfsz	wreg,f,c
  7868  00235E  D7FE               	bra	u4677
  7869  002360                     
  7870                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  7871  002360  968C               	bcf	140,3,c	;volatile
  7872  002362                     
  7873                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7874  002362  0E05               	movlw	5
  7875  002364                     u4687:
  7876  002364  2EE8               	decfsz	wreg,f,c
  7877  002366  D7FE               	bra	u4687
  7878  002368                     
  7879                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7880  002368  0E16               	movlw	22
  7881  00236A  6E04               	movwf	??_Lcd_Chr_CP^0,c
  7882  00236C  0E6C               	movlw	108
  7883  00236E                     u4697:
  7884  00236E  2EE8               	decfsz	wreg,f,c
  7885  002370  D7FE               	bra	u4697
  7886  002372  2E04               	decfsz	??_Lcd_Chr_CP^0,f,c
  7887  002374  D7FC               	bra	u4697
  7888  002376  D000               	nop2	
  7889  002378  0012               	return		;funcret
  7890  00237A                     __end_of_Lcd_Chr_CP:
  7891                           	callstack 0
  7892                           
  7893 ;; *************** function _isrL *****************
  7894 ;; Defined at:
  7895 ;;		line 62 in file "app.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;		None
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;		None
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  1    wreg      void 
  7902 ;; Registers used:
  7903 ;;		wreg, status,2, status,0
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7909 ;;      Params:         0       0       0       0       0       0       0       0       0
  7910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7911 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7912 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7913 ;;Total ram usage:        3 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; Hardware stack levels required when called:    1
  7916 ;; This function calls:
  7917 ;;		Nothing
  7918 ;; This function is called by:
  7919 ;;		Interrupt level 1
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	intcodelo
  7924  000018                     __pintcodelo:
  7925                           	callstack 0
  7926  000018                     _isrL:
  7927                           	callstack 19
  7928                           
  7929                           ;incstack = 0
  7930  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7931  00001A  CFD8 F001          	movff	status,??_isrL
  7932  00001E  CFE8 F002          	movff	wreg,??_isrL+1
  7933  000022  CFE0 F003          	movff	bsr,??_isrL+2
  7934  000026                     
  7935                           ;app.c: 64:     if(TMR3IE && TMR3IF)
  7936  000026  A2A0               	btfss	4000,1,c	;volatile
  7937  000028  EF18  F000         	goto	i1u443_21
  7938  00002C  EF1A  F000         	goto	i1u443_20
  7939  000030                     i1u443_21:
  7940  000030  EF4D  F000         	goto	i1l268
  7941  000034                     i1u443_20:
  7942  000034  A2A1               	btfss	4001,1,c	;volatile
  7943  000036  EF1F  F000         	goto	i1u444_21
  7944  00003A  EF21  F000         	goto	i1u444_20
  7945  00003E                     i1u444_21:
  7946  00003E  EF4D  F000         	goto	i1l268
  7947  000042                     i1u444_20:
  7948  000042                     
  7949                           ;app.c: 65:     {;app.c: 66:         TMR3IF = 0;
  7950  000042  92A1               	bcf	4001,1,c	;volatile
  7951  000044                     
  7952                           ;app.c: 67:         datos.counter++;
  7953  000044  0100               	movlb	0	; () banked
  7954  000046  2BB1               	incf	_datos& (0+255),f,b
  7955  000048                     
  7956                           ; BSR set to: 0
  7957                           ;app.c: 68:         if((datos.counter == 10) && (datos.state == 0))
  7958  000048  0E0A               	movlw	10
  7959  00004A  19B1               	xorwf	_datos& (0+255),w,b
  7960  00004C  A4D8               	btfss	status,2,c
  7961  00004E  EF2B  F000         	goto	i1u445_21
  7962  000052  EF2D  F000         	goto	i1u445_20
  7963  000056                     i1u445_21:
  7964  000056  EF3D  F000         	goto	i1l4274
  7965  00005A                     i1u445_20:
  7966  00005A                     
  7967                           ; BSR set to: 0
  7968  00005A  51B3               	movf	(_datos+2)& (0+255),w,b
  7969  00005C  A4D8               	btfss	status,2,c
  7970  00005E  EF33  F000         	goto	i1u446_21
  7971  000062  EF35  F000         	goto	i1u446_20
  7972  000066                     i1u446_21:
  7973  000066  EF3D  F000         	goto	i1l4274
  7974  00006A                     i1u446_20:
  7975  00006A                     
  7976                           ; BSR set to: 0
  7977                           ;app.c: 69:         {;app.c: 70:             datos.counter = 0;
  7978  00006A  0E00               	movlw	0
  7979  00006C  6FB1               	movwf	_datos& (0+255),b
  7980  00006E                     
  7981                           ; BSR set to: 0
  7982                           ;app.c: 71:             datos.nextFunc = appStateRecolectData;
  7983  00006E  0EB0               	movlw	low _appStateRecolectData
  7984  000070  6FC7               	movwf	(_datos+22)& (0+255),b
  7985  000072  0E2F               	movlw	high _appStateRecolectData
  7986  000074  6FC8               	movwf	(_datos+23)& (0+255),b
  7987                           
  7988                           ;app.c: 72:         }
  7989  000076  EF49  F000         	goto	i1l4278
  7990  00007A                     i1l4274:
  7991                           
  7992                           ; BSR set to: 0
  7993  00007A  05B3               	decf	(_datos+2)& (0+255),w,b
  7994  00007C  A4D8               	btfss	status,2,c
  7995  00007E  EF43  F000         	goto	i1u447_21
  7996  000082  EF45  F000         	goto	i1u447_20
  7997  000086                     i1u447_21:
  7998  000086  EF49  F000         	goto	i1l4278
  7999  00008A                     i1u447_20:
  8000  00008A                     
  8001                           ; BSR set to: 0
  8002                           ;app.c: 74:         {;app.c: 75:             datos.nextFunc = appGetElements;
  8003  00008A  0E82               	movlw	low _appGetElements
  8004  00008C  6FC7               	movwf	(_datos+22)& (0+255),b
  8005  00008E  0E2C               	movlw	high _appGetElements
  8006  000090  6FC8               	movwf	(_datos+23)& (0+255),b
  8007  000092                     i1l4278:
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;app.c: 77:         TMR3 = 20536;
  8011  000092  0E50               	movlw	80
  8012  000094  6EB3               	movwf	179,c	;volatile
  8013  000096  0E38               	movlw	56
  8014  000098  6EB2               	movwf	178,c	;volatile
  8015  00009A                     i1l268:
  8016  00009A  C003  FFE0         	movff	??_isrL+2,bsr
  8017  00009E  C002  FFE8         	movff	??_isrL+1,wreg
  8018  0000A2  C001  FFD8         	movff	??_isrL,status
  8019  0000A6  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8020  0000A8  0010               	retfie	
  8021  0000AA                     __end_of_isrL:
  8022                           	callstack 0
  8023                           
  8024 ;; *************** function _isrH *****************
  8025 ;; Defined at:
  8026 ;;		line 80 in file "app.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;		None
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;		None
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  1    wreg      void 
  8033 ;; Registers used:
  8034 ;;		None
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8040 ;;      Params:         0       0       0       0       0       0       0       0       0
  8041 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8043 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8044 ;;Total ram usage:        0 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		Interrupt level 2
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	intcode
  8054  000008                     __pintcode:
  8055                           	callstack 0
  8056  000008                     _isrH:
  8057                           	callstack 19
  8058                           
  8059                           ;incstack = 0
  8060  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8061  00000A  ED5F  F018         	call	int_func,f	;refresh shadow registers
  8062  00000E                     
  8063                           	psect	intcode_body
  8064  0030BE                     __pintcode_body:
  8065                           	callstack 19
  8066  0030BE                     int_func:
  8067                           	callstack 19
  8068  0030BE  0006               	pop		; remove dummy address from shadow register refresh
  8069  0030C0  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8070  0030C2  0011               	retfie		f
  8071  0030C4                     __end_of_isrH:
  8072                           	callstack 0
  8073                           
  8074                           	psect	rparam
  8075  0000                     
  8076                           	psect	temp
  8077  00005C                     btemp:
  8078                           	callstack 0
  8079  00005C                     	ds	1
  8080  0000                     int$flags	set	btemp
  8081  0000                     wtemp8	set	btemp+1
  8082  0000                     ttemp5	set	btemp+1
  8083  0000                     ttemp6	set	btemp+4
  8084  0000                     ttemp7	set	btemp+8
  8085                           
  8086                           	psect	idloc
  8087                           
  8088                           ;Config register IDLOC0 @ 0x200000
  8089                           ;	unspecified, using default values
  8090  200000                     	org	2097152
  8091  200000  FF                 	db	255
  8092                           
  8093                           ;Config register IDLOC1 @ 0x200001
  8094                           ;	unspecified, using default values
  8095  200001                     	org	2097153
  8096  200001  FF                 	db	255
  8097                           
  8098                           ;Config register IDLOC2 @ 0x200002
  8099                           ;	unspecified, using default values
  8100  200002                     	org	2097154
  8101  200002  FF                 	db	255
  8102                           
  8103                           ;Config register IDLOC3 @ 0x200003
  8104                           ;	unspecified, using default values
  8105  200003                     	org	2097155
  8106  200003  FF                 	db	255
  8107                           
  8108                           ;Config register IDLOC4 @ 0x200004
  8109                           ;	unspecified, using default values
  8110  200004                     	org	2097156
  8111  200004  FF                 	db	255
  8112                           
  8113                           ;Config register IDLOC5 @ 0x200005
  8114                           ;	unspecified, using default values
  8115  200005                     	org	2097157
  8116  200005  FF                 	db	255
  8117                           
  8118                           ;Config register IDLOC6 @ 0x200006
  8119                           ;	unspecified, using default values
  8120  200006                     	org	2097158
  8121  200006  FF                 	db	255
  8122                           
  8123                           ;Config register IDLOC7 @ 0x200007
  8124                           ;	unspecified, using default values
  8125  200007                     	org	2097159
  8126  200007  FF                 	db	255
  8127                           
  8128                           	psect	config
  8129                           
  8130                           ;Config register CONFIG1L @ 0x300000
  8131                           ;	PLL Prescaler Selection bits
  8132                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8133                           ;	System Clock Postscaler Selection bits
  8134                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8135                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8136                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8137  300000                     	org	3145728
  8138  300000  00                 	db	0
  8139                           
  8140                           ;Config register CONFIG1H @ 0x300001
  8141                           ;	Oscillator Selection bits
  8142                           ;	FOSC = HS, HS oscillator (HS)
  8143                           ;	Fail-Safe Clock Monitor Enable bit
  8144                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8145                           ;	Internal/External Oscillator Switchover bit
  8146                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8147  300001                     	org	3145729
  8148  300001  0C                 	db	12
  8149                           
  8150                           ;Config register CONFIG2L @ 0x300002
  8151                           ;	Power-up Timer Enable bit
  8152                           ;	PWRT = OFF, PWRT disabled
  8153                           ;	Brown-out Reset Enable bits
  8154                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8155                           ;	Brown-out Reset Voltage bits
  8156                           ;	BORV = 3, Minimum setting 2.05V
  8157                           ;	USB Voltage Regulator Enable bit
  8158                           ;	VREGEN = OFF, USB voltage regulator disabled
  8159  300002                     	org	3145730
  8160  300002  19                 	db	25
  8161                           
  8162                           ;Config register CONFIG2H @ 0x300003
  8163                           ;	Watchdog Timer Enable bit
  8164                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8165                           ;	Watchdog Timer Postscale Select bits
  8166                           ;	WDTPS = 32768, 1:32768
  8167  300003                     	org	3145731
  8168  300003  1E                 	db	30
  8169                           
  8170                           ; Padding undefined space
  8171  300004                     	org	3145732
  8172  300004  FF                 	db	255
  8173                           
  8174                           ;Config register CONFIG3H @ 0x300005
  8175                           ;	CCP2 MUX bit
  8176                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8177                           ;	PORTB A/D Enable bit
  8178                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8179                           ;	Low-Power Timer 1 Oscillator Enable bit
  8180                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8181                           ;	MCLR Pin Enable bit
  8182                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8183  300005                     	org	3145733
  8184  300005  81                 	db	129
  8185                           
  8186                           ;Config register CONFIG4L @ 0x300006
  8187                           ;	Stack Full/Underflow Reset Enable bit
  8188                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8189                           ;	Single-Supply ICSP Enable bit
  8190                           ;	LVP = OFF, Single-Supply ICSP disabled
  8191                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8192                           ;	ICPRT = OFF, ICPORT disabled
  8193                           ;	Extended Instruction Set Enable bit
  8194                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8195                           ;	Background Debugger Enable bit
  8196                           ;	DEBUG = 0x1, unprogrammed default
  8197  300006                     	org	3145734
  8198  300006  81                 	db	129
  8199                           
  8200                           ; Padding undefined space
  8201  300007                     	org	3145735
  8202  300007  FF                 	db	255
  8203                           
  8204                           ;Config register CONFIG5L @ 0x300008
  8205                           ;	Code Protection bit
  8206                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8207                           ;	Code Protection bit
  8208                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8209                           ;	Code Protection bit
  8210                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8211                           ;	Code Protection bit
  8212                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8213  300008                     	org	3145736
  8214  300008  0F                 	db	15
  8215                           
  8216                           ;Config register CONFIG5H @ 0x300009
  8217                           ;	Boot Block Code Protection bit
  8218                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8219                           ;	Data EEPROM Code Protection bit
  8220                           ;	CPD = OFF, Data EEPROM is not code-protected
  8221  300009                     	org	3145737
  8222  300009  C0                 	db	192
  8223                           
  8224                           ;Config register CONFIG6L @ 0x30000A
  8225                           ;	Write Protection bit
  8226                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8227                           ;	Write Protection bit
  8228                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8229                           ;	Write Protection bit
  8230                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8231                           ;	Write Protection bit
  8232                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8233  30000A                     	org	3145738
  8234  30000A  0F                 	db	15
  8235                           
  8236                           ;Config register CONFIG6H @ 0x30000B
  8237                           ;	Configuration Register Write Protection bit
  8238                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8239                           ;	Boot Block Write Protection bit
  8240                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8241                           ;	Data EEPROM Write Protection bit
  8242                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8243  30000B                     	org	3145739
  8244  30000B  E0                 	db	224
  8245                           
  8246                           ;Config register CONFIG7L @ 0x30000C
  8247                           ;	Table Read Protection bit
  8248                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8249                           ;	Table Read Protection bit
  8250                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8251                           ;	Table Read Protection bit
  8252                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8253                           ;	Table Read Protection bit
  8254                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8255  30000C                     	org	3145740
  8256  30000C  0F                 	db	15
  8257                           
  8258                           ;Config register CONFIG7H @ 0x30000D
  8259                           ;	Boot Block Table Read Protection bit
  8260                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8261  30000D                     	org	3145741
  8262  30000D  40                 	db	64
  8263                           tosu	equ	0xFFF
  8264                           tosh	equ	0xFFE
  8265                           tosl	equ	0xFFD
  8266                           stkptr	equ	0xFFC
  8267                           pclatu	equ	0xFFB
  8268                           pclath	equ	0xFFA
  8269                           pcl	equ	0xFF9
  8270                           tblptru	equ	0xFF8
  8271                           tblptrh	equ	0xFF7
  8272                           tblptrl	equ	0xFF6
  8273                           tablat	equ	0xFF5
  8274                           prodh	equ	0xFF4
  8275                           prodl	equ	0xFF3
  8276                           indf0	equ	0xFEF
  8277                           postinc0	equ	0xFEE
  8278                           postdec0	equ	0xFED
  8279                           preinc0	equ	0xFEC
  8280                           plusw0	equ	0xFEB
  8281                           fsr0h	equ	0xFEA
  8282                           fsr0l	equ	0xFE9
  8283                           wreg	equ	0xFE8
  8284                           indf1	equ	0xFE7
  8285                           postinc1	equ	0xFE6
  8286                           postdec1	equ	0xFE5
  8287                           preinc1	equ	0xFE4
  8288                           plusw1	equ	0xFE3
  8289                           fsr1h	equ	0xFE2
  8290                           fsr1l	equ	0xFE1
  8291                           bsr	equ	0xFE0
  8292                           indf2	equ	0xFDF
  8293                           postinc2	equ	0xFDE
  8294                           postdec2	equ	0xFDD
  8295                           preinc2	equ	0xFDC
  8296                           plusw2	equ	0xFDB
  8297                           fsr2h	equ	0xFDA
  8298                           fsr2l	equ	0xFD9
  8299                           status	equ	0xFD8

Data Sizes:
    Strings     49
    Constant    0
    Data        24
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160     37     105
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 24
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[24]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 24
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[24]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1554_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 24
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[24]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 24
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[24]), 

    memset@dest	PTR void  size(2) Largest target is 24
		 -> datos(BANK0[24]), 

    memset@s	PTR unsigned char  size(2) Largest target is 24
		 -> datos(BANK0[24]), 

    appElemts@elements	PTR const unsigned char  size(2) Largest target is 24
		 -> datos.elements(BANK0[1]), datos(BANK0[24]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 24
		 -> appElemts@dataout(BANK0[6]), STR_4(CODE[6]), STR_3(CODE[12]), datos.display(BANK0[16]), 
		 -> datos(BANK0[24]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 24
		 -> datos(BANK0[24]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data	PTR struct _state size(2) Largest target is 24
		 -> datos(BANK0[24]), 

    sp__memset	PTR void  size(2) Largest target is 24
		 -> datos(BANK0[24]), 

    S164_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data	PTR struct _state size(2) Largest target is 24
		 -> datos(BANK0[24]), 


Critical Paths under _main in COMRAM

    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_teclado
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appElemts
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    _appGetElements->_sprintf
    _sprintf->_vfprintf

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   83387
                                             35 BANK0      2     2      0
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   63447
                             _appADC
                             _appBat
                          _appElemts
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            9     7      2   16936
                                             26 BANK0      9     7      2
                            _Lcd_Out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   23092
                                             26 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   23419
                                             26 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1175
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                              7 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     479
                                             71 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             46 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             81 COMRAM     6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0     526
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    1980
                            _adcInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    1936
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              6 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   17434
                                             26 BANK0      2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                       _appTimerStop
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   15287
                                              8 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   14249
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   13710
                                             66 COMRAM    23    17      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6763
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4497
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    2077
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    2051
                                             12 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1577
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1665
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     562
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Out                                              7     4      3    1445
                                              6 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Chr_CP                                           3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStop
     _sprintf
       ___awmod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
     _teclado
   _appInit *
     _adcInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
   _appStateInitial *
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _fputc
                 _putch
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _fputc
                 _putch
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _fputc
                 _putch
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      69       5       65.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C4      20        0.0%
DATA                 0      0      C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 30 03:42:35 2021

                 ___fldiv@aexp 0047                   ___fldiv@bexp 0046                   ___fldiv@sign 003F  
                           l23 2E78                             l32 24BC                             l26 2F60  
                           l35 1A84                             l28 2F6E                             l29 2F76  
                           l84 189C                             l97 2A3C                             l98 2A88  
                           l99 2ADA                             bsr 000FE0            ___wmul@multiplicand 0006  
                          l112 288E                            l131 25E6                            l134 2C0E  
                          l128 2378                            l250 3064                            l403 222A  
                          l243 3094                            l190 30B4                            l246 2FE4  
                          l520 2B8A                            l193 30C6                            l259 30BC  
                          l187 30A8                            l276 3040                            l390 1F50  
                          l198 2E30                            l900 0B54                            l573 26EC  
                          l907 0C1E                            l931 1ADC                            l860 1234  
                          l934 1C38                            l871 12F2                            l863 11F8  
                          l951 20C6                            l872 12E0                            l945 1BD0  
                          l858 13D4                            l890 08F8                            l938 1B74  
                          l964 2D96                            l869 127A                            l894 0C5C  
                          l897 0AEE                            l995 299E                            l899 0B66  
                          l998 29E0                adcInit@ADC_PINs 0005                            _PR2 000FCB  
                          _abs 2EBE                            _pad 295A                   ___awmod@sign 0057  
                          tosl 000FFD                            wreg 000FE8                   ___flmul@aexp 0027  
                 ___flmul@bexp 0028                   ___flmul@sign 0022                   ___flmul@temp 002D  
                 ___flmul@prod 0029                   ___fltol@exp1 0051                           l1000 2A1A  
                         l1011 2754                           l1014 2796                           l1022 1476  
                         l1120 2FAE                           l1016 27C2                           l1024 147E  
                         l1114 1DC0                           l1042 16B2                           ?_abs 0016  
                         l1117 1DC8                           l1143 2958                           l1151 2EBC  
                         l3000 27DE                           l1128 2DE8                           l1160 301A  
                         l1056 0D50                           l3010 2836                           l3002 27E8  
                         l1154 30C8                           l1083 2EF4                           l3012 285A  
                         l3020 2A1C                           l3100 10AE                           l1069 103A  
                         l3014 285E                           l3006 27F2                           l1086 2EFC  
                         l1078 2D3C                           l3030 2A54                           l3022 2A28  
                         l3110 10EE                           l3102 10BC                           l1079 2D44  
                         l3008 282C                           l4000 1544                           l3040 2A62  
                         l3032 2A5A                           l3024 2A38                           l3200 13B0  
                         l3120 112E                           l3112 10F0                           l3104 10BE  
                         l4010 15EC                           l4002 154A                           l3050 2AA8  
                         l3042 2A64                           l3034 2A5C                           l3202 13B4  
                         l3130 115E                           l3122 1136                           l3106 10CE  
                         l3114 10F8                           l4020 164E                           l4012 1606  
                         l4004 1550                           l3060 2AC2                           l3052 2AAA  
                         l3044 2A76                           l3036 2A5E                           l3204 13C2  
                         l3140 119C                           l3132 115E                           l3124 113A  
                         l3116 1108                           l3108 10DE                           l3300 0ADE  
                         l3220 084E                           l4022 1654                           l4030 168A  
                         l4014 1620                           l4006 15B4                           l4110 0CEA  
                         l4102 0CD8                           l3070 2ACE                           l3062 2AC2  
                         l3054 2AAC                           l3046 2AA0                           l3038 2A60  
                         l3206 13C8                           l3150 11E8                           l3142 11AC  
                         l3118 111E                           l3310 0B1E                           l3302 0AEC  
                         l3230 0886                           l3222 0850                           l4040 1C56  
                         l4024 1666                           l4008 15CE                           l4016 162E  
                         l4120 0DBA                           l4112 0D3E                           l3072 2ACE  
                         l3064 2AC2                           l3056 2AAE                           l3048 2AA6  
                         l3208 13CA                           l3160 1232                           l3152 11F6  
                         l3144 11BC                           l3136 1172                           l3128 114E  
                         l3080 1048                           l3320 0B90                           l3312 0B4C  
                         l3304 0AFE                           l3240 08B2                           l3232 0896  
                         l3224 0860                           l3216 0834                           l4200 237A  
                         l4050 1CB2                           l4042 1C72                           l4034 1C3A  
                         l4026 1672                           l4018 1640                           l4122 0DCA  
                         l4114 0D5E                           l4106 0CDE                           l3074 2AD4  
                         l3066 2AC8                           l3058 2AB0                           l3170 1278  
                         l3162 1244                           l3154 1202                           l3146 11C4  
                         l3138 118C                           l3090 1088                           l3082 1056  
                         l3330 0C06                           l3322 0BBA                           l3306 0B0C  
                         l3250 0908                           l3242 08C2                           l3234 089C  
                         l3226 0870                           l3218 0840                           l4202 239C  
                         l4210 189E                           l4052 1CC8                           l4044 1CA8  
                         l4036 1C4E                           l4028 167A                           l4132 0E4C  
                         l4124 0DD8                           l4116 0D60                           l3076 2AD4  
                         l3068 2AC8                           l3180 12D8                           l3164 125A  
                         l3172 128A                           l3156 1220                           l3148 11D4  
                         l3092 108A                           l3084 1058                           l3332 0C22  
                         l3340 0C48                           l3316 0B76                           l3324 0BBE  
                         l3308 0B10                           l3260 0942                           l3252 0918  
                         l3244 08D2                           l3236 08A2                           l3228 0880  
                         l3420 26CC                           l3404 2678                           l4204 23C4  
                         l4220 1A6C                           l4212 18DC                           l4070 1DA4  
                         l4062 1D42                           l4054 1CD0                           l4046 1CAC  
                         l4038 1C52                           l4142 0ED0                           l4126 0DF8  
                         l4134 0E5E                           l4118 0D84                           l3510 16B4  
                         l3350 2AEE                           l3190 1346                           l3174 1298  
                         l3166 1260                           l3158 1222                           l3086 1068  
                         l3094 1092                           l3078 103C                           l3342 0C4C  
                         l3334 0C32                           l3326 0BD8                           l3318 0B82  
                         l3270 0994                           l3262 0958                           l3246 08E2  
                         l3238 08B0                           l3422 26DC                           l3414 26A0  
                         l3406 2682                           l3430 1AA6                           l4206 241C  
                         l4214 195A                           l4222 2DEA                           l4230 2FDA  
                         l4056 1CD8                           l4152 0F98                           l4144 0EF4  
                         l4136 0E82                           l4128 0E06                           l4080 0C90  
                         l3520 16E8                           l3512 16C0                           l3600 2BD8  
                         l3360 2B22                           l3352 2AF6                           l3184 1302  
                         l3192 134A                           l3176 129C                           l3168 126A  
                         l3096 10A2                           l3088 1078                           l3336 0C40  
                         l3328 0BEC                           l3280 09DA                           l3272 09A2  
                         l3264 0964                           l3256 092C                           l3248 08E8  
                         l3416 26AC                           l3408 268C                           l3440 1B1E  
                         l3432 1AEC                           l4208 24A4                           l4216 19A8  
                         l4224 2DF6                           l4240 2CB0                           l4232 2C82  
                         l4066 1D80                           l4058 1D0C                           l4170 1028  
                         l4154 0FBC                           l4162 0FEA                           l4146 0F18  
                         l4138 0EB4                           l4090 0CC6                           l4082 0CA2  
                         l3530 1728                           l3522 16F4                           l3514 16C4  
                         l3602 2BF6                           l3610 30A2                           l3370 2B5E  
                         l3362 2B2A                           l3354 2AFA                           l3346 2ADC  
                         l3194 1364                           l3186 130E                           l3178 12AA  
                         l3098 10A8                           l3338 0C42                           l3290 0A48  
                         l3282 09F4                           l3274 09AE                           l3266 097C  
                         l3258 0938                           l3418 26BC                           l3450 1BA6  
                         l3442 1B2A                           l3434 1B02                           l3426 1A88  
                         l4218 1A40                           l4226 2E1E                           l4242 2CCC  
                         l4234 2C86                           l4250 2C18                           l2900 2552  
                         l3620 30C4                           l4068 1D92                           l4164 0FF8  
                         l4156 0FCA                           l4148 0F60                           l4340 0D10  
                         l4084 0CA6                           l4076 0C5E                           l4180 2CE4  
                         l3540 1760                           l3532 1736                           l3524 1702  
                         l3516 16D6                           l3612 30A4                           l3604 3096  
                         l3372 2B64                           l3364 2B32                           l3356 2B08  
                         l3348 2AE0                           l3196 137A                           l3188 131C  
                         l3292 0A72                           l3284 0A04                           l3276 09BE  
                         l3268 0988                           l3460 1BE4                           l3452 1BB2  
                         l3444 1B5C                           l3428 1A98                           l4228 2FB0  
                         l4236 2C8C                           l4252 2C1C                           l4244 2C10  
                         l2910 25D6                           l2902 25C4                           l4342 1CF6  
                         l4158 0FDE                           l4094 0CCC                           l4086 0CB2  
                         l4078 0C82                           l4182 2CEC                           l4190 2D58  
                         l3550 17A2                           l3542 176E                           l3534 1742  
                         l3526 170E                           l3518 16DA                           l3614 30A6  
                         l3606 309C                           l3630 307E                           l3366 2B40  
                         l3374 2B6A                           l3358 2B10                           l3198 1394  
                         l3294 0AA8                           l3286 0A20                           l3278 09CA  
                         l3390 263C                           l3382 25E8                           l3462 1C08  
                         l3454 1BC0                           l3446 1B5E                           l3438 1B16  
                         l4238 2CA4                           l4254 2C44                           l4246 2C14  
                         l2920 22CC                           l2912 222E                           l2904 25CC  
                         l4344 2806                           l3800 2E86                           l4088 0CB4  
                         l4168 1004                           l4184 2CFA                           l4192 2D60  
                         l3560 17DA                           l3552 17AE                           l3544 177A  
                         l3536 1746                           l3528 171C                           l3480 2E64  
                         l3472 2E34                           l3608 30A0                           l3616 30AA  
                         l3632 3082                           l3376 2B7A                           l3368 2B56  
                         l3296 0AB6                           l3288 0A2C                           l3392 263E  
                         l3384 25FE                           l3464 1C18                           l3456 1BDE  
                         l3448 1B6A                           l4256 2C5C                           l4248 2C16  
                         l2930 2360                           l2922 22D2                           l2914 2232  
                         l2906 25CE                           l3802 2E98                           l3810 2FF6  
                         l4098 0CD2                           l4186 2D20                           l4194 2D68  
                         l3570 181A                           l3562 17E6                           l3554 17B2  
                         l3546 1788                           l3538 1754                           l3482 2E6C  
                         l3474 2E44                           l3618 30B2                           l3634 3086  
                         l3378 2B82                           l3298 0AD4                           l3394 264E  
                         l3466 1C26                           l3458 1BE0                           l2932 2362  
                         l2924 2350                           l2916 22C2                           l2908 25D4  
                         l3804 2E9C                           l3812 300E                           l4196 2D84  
                         l4188 2D46                           l3580 1852                           l3572 181E  
                         l3564 17F4                           l3556 17C0                           l3548 1794  
                         l3484 2E74                           l3476 2E50                           l3628 30B6  
                         l3636 308C                           l3396 2652                           l3388 2612  
                         l3468 1C28                           l3644 3042                           l2934 2368  
                         l2926 2358                           l2918 22CA                           l3830 1E00  
                         l3822 1DCA                           l3806 2FE6                           l3910 2996  
                         l3902 295A                           l3590 188A                           l3582 1860  
                         l3574 182C                           l3566 1800                           l3558 17CC  
                         l3486 2E76                           l3478 2E60                           l3638 3090  
                         l3398 2660                           l2950 1F52                           l3646 304E  
                         ?_pad 0014                           l2928 235A                           l3816 301C  
                         l3840 1E5C                           l3832 1E0E                           l3824 1DCE  
                         l3808 2FF2                           l3920 2A02                           l3912 29AA  
                         l3904 2968                           l3584 186C                           l3576 1838  
                         l3568 180E                           l3592 2B8C                           l2944 2F3E  
                         l2960 1FB2                           l3648 3060                           l2890 24C0  
                         l3818 3038                           l3850 1EC6                           l3842 1E64  
                         l3834 1E2E                           l3826 1DDC                           l3914 29BE  
                         l3906 297C                           l3586 187A                           l3578 1846  
                         l3594 2B9C                           l2946 2F50                           l2962 200A  
                         l2954 1F70                           l2892 24C4                           l3940 2DE2  
                         l3932 2D98                           l3860 1F10                           l3852 1EE6  
                         l3844 1E78                           l3836 1E32                           l3828 1DFC  
                         l3924 2EBE                           l3916 29C2                           l3908 298A  
                         l3588 1886                           l3596 2BB4                           l2948 2F5E  
                         l2980 20B4                           l2972 206A                           l2956 1F7C  
                         l2894 2542                           l3934 2D9C                           l3790 28BE  
                         l3950 271A                           l3862 1F30                           l3854 1EE8  
                         l3846 1E86                           l3838 1E3E                           l3870 20DA  
                         l3926 2ED8                           l3918 29EE                           l3598 2BC6  
                         l2974 209E                           l2966 2024                           l2896 254A  
                         l3928 2F78                           l3936 2DB0                           l3792 28DC  
                         l3784 2890                           l3960 2760                           l3952 2728  
                         l3944 26EE                           l3856 1EFA                           l3848 1E98  
                         l3880 214A                           l3872 20FA                           l2976 20AA  
                         l2968 2050                           l2898 254C                           l2994 27C6  
                         l3938 2DDE                           l3794 2912                           l3786 28A2  
                         l3962 2774                           l3954 273A                           l3946 2702  
                         l3858 1F00                           l3890 21C2                           l3882 2152  
                         l3874 20FE                           l3866 20C8                           l2978 20B0  
                         l2996 27CA                           l3788 28B4                           l3964 2778  
                         l3948 270E                           l3892 21D4                           l3884 2166  
                         l3876 210C                           l3868 20CC                           l3980 144E  
                         l3972 13D6                           l2998 27D4                           l3966 27A4  
                         l3958 274C                           l3886 2174                           l3894 21DA  
                         l3878 212C                           l3798 2E7A                           l3990 14A6  
                         l3982 1450                           l3974 13F6                           l3968 27B6  
                         l3896 21EA                           l3888 21A2                           l3992 14AC  
                         l3984 146A                           l3976 141E                           l3898 220A  
                         l3994 14B4                           l3986 1486                           l3978 143E  
                         l3996 14BC                           l3988 1498                           l3998 14C2  
                         STR_1 0801                           STR_2 081B                           STR_3 080F  
                         STR_4 0824                           STR_5 082A                           STR_6 082F  
                         u3000 0860                           u3001 085C                           u3010 0870  
                         u3011 086C                           u3100 0B1E                           u3020 08B0  
                         u3101 0B1A                           u3021 08AC                           u3110 0B4C  
                         u3030 08C2                           u3111 0B48                           u3031 08BE  
                         u4000 2728                           u3200 2B22                           u3120 0B62  
                         u3040 08D2                           u4001 2724                           u3201 2B1E  
                         u3121 0B5E                           u3041 08CE                           u4010 2748  
                         u3210 2B40                           u3130 0B76                           u3050 0908  
                         u4011 2744                           u3211 2B3C                           u3131 0B72  
                         u3051 0904                           u4020 2796                           u4100 14A6  
                         u3220 2B56                           u3140 0B90                           u3060 0918  
                         u3300 26CC                           u4021 2792                           u4101 14A2  
                         u3221 2B52                           u3141 0B8C                           u3061 0914  
                         u3301 26C8                           u4030 27A4                           u4110 15CE  
                         u3230 2B7A                           u3150 0BD8                           u3070 0A92  
                         u3310 1A98                           u4031 27A0                           u4111 15CA  
                         u3231 2B76                           u3151 0BD4                           u3311 1A94  
                         u4200 1CA8                           u4120 15EC                           u4040 1406  
                         u3160 0C06                           u3080 0AEC                           u3240 25FE  
                         u3400 1C26                           u3320 1AA6                           u4201 1CA4  
                         u4121 15E8                           u4041 1400                           u3161 0C02  
                         u3081 0AE8                           u3241 25FA                           u3401 1C22  
                         u3321 1AA2                           u4210 1CC4                           u4130 1606  
                         u4050 1408                           u3410 2E44                           u3170 0C40  
                         u3090 0B0C                           u3250 2632                           u3330 1B02  
                         u4211 1CC0                           u4131 1602                           u3411 2E40  
                         u3171 0C3C                           u3091 0B08                           u3075 0A88  
                         u3331 1AFE                           u4220 1D7A                           u4140 1620  
                         u4060 141E                           u4300 0DCA                           u3500 17A2  
                         u3420 16D6                           u3180 2AEE                           u3260 2660  
                         u3340 1B58                           u2700 2066                           u2605 225E  
                         u4221 1D74                           u4141 161C                           u4061 141A  
                         u4301 0DC6                           u3501 179E                           u3421 16D2  
                         u3181 2AEA                           u3261 265C                           u3341 1B54  
                         u2701 2062                           u4230 1D7C                           u4150 162E  
                         u4070 144E                           u4310 0E46                           u3510 17C0  
                         u3430 16E8                           u3190 2B08                           u3270 2674  
                         u3350 1BA2                           u2710 20C6                           u2615 2284  
                         u4151 162A                           u4071 144A                           u4311 0E40  
                         u3511 17BC                           u3431 16E4                           u3191 2B04  
                         u3271 2670                           u3255 2628                           u3351 1B9E  
                         u2711 20C2                           u2720 2856                           u4240 1D92  
                         u4160 1640                           u4080 146A                           u4320 0E48  
                         u3520 17DA                           u3440 1702                           u2800 10CE  
                         u3280 269C                           u3360 1BC0                           u4400 2C30  
                         u2625 22A8                           u4241 1D8E                           u4161 163C  
                         u4081 1466                           u3521 17D6                           u3441 16FE  
                         u2801 10CA                           u3281 2698                           u3361 1BBC  
                         u4401 2C26                           u2730 287E                           u4250 1DA4  
                         u4170 164E                           u4090 1498                           u4330 0E5E  
                         u3530 17F4                           u3450 171C                           u2810 10DE  
                         u3290 26BC                           u3370 1BD0                           u3610 3060  
                         u2635 22DC                           u4251 1DA0                           u4171 164A  
                         u4091 1494                           u4331 0E5A                           u3531 17F0  
                         u3451 1718                           u2811 10DA                           u3291 26B8  
                         u3371 1BCC                           u3611 305C                           u2740 288E  
                         u4180 1666                           u4340 0E82                           u4260 0C82  
                         u3540 180E                           u3460 1736                           u2900 1298  
                         u2820 111E                           u3380 1BDE                           u2660 2F6E  
                         u2645 2320                           u2565 24CC                           u2741 288A  
                         u4181 1662                           u4341 0E7E                           u4261 0C7E  
                         u3541 180A                           u3461 1732                           u2901 1294  
                         u2821 111A                           u3381 1BDA                           u2661 2F6A  
                         u4190 1C72                           u3710 28A2                           u4350 0EF4  
                         u4270 0D50                           u3550 182C                           u3470 1754  
                         u2750 2A88                           u2910 12AA                           u2830 115E  
                         u3390 1C18                           u2670 1F6C                           u2575 24E6  
                         u2727 284C                           u4191 1C6E                           u3711 289E  
                         u4351 0EF0                           u4271 0D4C                           u3551 1828  
                         u3471 1750                           u2751 2A84                           u2911 12A6  
                         u2831 115A                           u3391 1C14                           u2671 1F68  
                         u3720 28B4                           u3800 1E5C                           u4360 0F18  
                         u4280 0D5E                           u3560 1846                           u3480 176E  
                         u2920 12D8                           u2840 11D4                           u2760 1056  
                         u2680 1FAE                           u2585 250C                           u2737 2874  
                         u3721 28B0                           u3801 1E58                           u4361 0F14  
                         u4281 0D5A                           u3561 1842                           u3481 176A  
                         u2921 12D4                           u2841 11D0                           u2761 1052  
                         u2681 1FAA                           u3730 28DC                           u3810 1E86  
                         u4370 0FBC                           u4290 0D84                           u3570 1860  
                         u3490 1788                           u2930 12EE                           u2850 11F6  
                         u2770 1068                           u2690 2020                           u4418 2C34  
                         u2595 223A                           u3731 28D8                           u3811 1E82  
                         u4371 0FB8                           u4291 0D80                           u3571 185C  
                         u3491 1784                           u2931 12EA                           u2851 11F2  
                         u2771 1064                           u4507 2F56                           u2691 201C  
                         u3740 2912                           u3820 1EC6                           u3900 2968  
                         u4380 2D3C                           u3580 187A                           u2940 1302  
                         u2860 1220                           u2780 1078                           u4428 2C66  
                         u3741 290E                           u3821 1EC2                           u3901 2964  
                         u4381 2D38                           u3581 1876                           u4517 2BA6  
                         u2941 12FE                           u2861 121C                           u2781 1074  
                         u4429 2C7A                           u3830 1F10                           u3750 2EBC  
                         u3910 298A                           u3590 189C                           u2950 131C  
                         u2870 1244                           u2790 10BC                           u4607 254E  
                         u3831 1F0C                           u3751 2EB8                           u3911 2986  
                         u3591 1898                           u4527 2BE2                           u2951 1318  
                         u2871 1240                           u2791 10B8                           u4391 2DF0  
                         u3840 20DA                           u3760 300E                           u3920 29E0  
                         u2960 1364                           u2880 125A                           u4617 25C6  
                         u3841 20D6                           u3761 300A                           u3921 29DC  
                         u4537 2C00                           u2961 1360                           u2881 1256  
                         u3770 1DDC                           u3850 210C                           u3930 29EE  
                         u2970 1394                           u2890 1278                           u4627 25D0  
                         u3771 1DD8                           u3851 2108                           u3931 29EA  
                         u4547 2A2E                           u2971 1390                           u2891 1274  
                         u3780 1E0E                           u3860 214A                           u3940 2ED8  
                         u2980 13C2                           u4637 25DC                           u3781 1E0A  
                         u3861 2146                           u3941 2ED4                           u4557 2A56  
                         u2981 13BE                           u3950 2FA8                           u3870 2174  
                         u2990 084E                           u4647 22C4                           u3951 2FA2  
                         u3791 1E38                           u3871 2170                           u4567 2A6C  
                         u2991 084A                           u4487 2C50                           u3960 2FAA  
                         u3880 21A2                           u4657 22CE                           u3881 219E  
                         u4577 2AA2                           u4497 2C98                           u3970 2DB0  
                         u3890 21EA                           u4667 2352                           u3971 2DAC  
                         u3891 21E6                           u4587 2AB8                           u3980 2DDE  
                         u4677 235C                           u4597 2544                           u3981 2DDA  
                         u3990 2702                           u4687 2364                           u3991 26FE  
                         u4697 236E                           _TMR2 000FCC                           _TMR3 000FB2  
                         abs@a 0016                           _dbuf 006C                           _atoi 1C3A  
                         _ctoa 26EE                           _main 2C10                           _dtoa 13D6  
                         _isrH 0008                           _isrL 0018                           _prec 006A  
                         _nout 0066                           pad@i 001B                           pad@p 0018  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001D  
                         fsr2l 000FD9                           btemp 005C                           prodh 000FF4  
                         prodl 000FF3                           start 00AA                ___fldiv@new_exp 0040  
 __end_of_appStateRecolectData 2FE6                __end_of_Lcd_Cmd 25E8                __end_of_Lcd_Out 2890  
                 ___param_bank 000000                     _Lcd_Chr_CP 222C           __size_of_appLCD_Init 0084  
                        ??_abs 0018                          ??_pad 001A                  ___fltol@sign1 0050  
              __end_of___aodiv 1F52                          ?_atoi 000B                          ?_ctoa 000D  
                        ?_main 0001                          ?_dtoa 001F                __end_of___aomod 222C  
                        ?_isrH 0001                          ?_isrL 0001                __end_of_adcInit 2E7A  
              __end_of___fldiv 13D6                          _ADRES 000FC3                __end_of___awmod 2B8C  
              __end_of___flmul 0C5E                __end_of___fltol 26EE                          i1l268 009A  
      __end_of_appStateInitial 3066                          i2l273 30C0                   vfpfcnvrt@fmt 0045  
                        _PORTB 000F81                          _TRISB 000F93                __end_of_appInit 3096  
                        _datos 00B1                          _flags 005A                          _fputc 2890  
                        _fputs 2E7A                __end_of_isdigit 2FB0                          atoi@n 0018  
                        pad@fp 0014                          atoi@s 000B                          _width 0068  
                        ctoa@c 000F                          _putch 30C8                          ctoa@l 0011  
                        ctoa@w 0013                          dtoa@d 0021                          dtoa@i 0041  
                        dtoa@n 0039                          dtoa@p 0033                          dtoa@s 0037  
                        dtoa@w 0035                __end_of_teclado 189E                __end_of_isspace 2DEA  
                        pclath 000FFA                          tablat 000FF5                          ttemp5 005D  
                        ttemp6 0060                          ttemp7 0064                          status 000FD8  
                        wtemp8 005D                __end_of_sprintf 2D98           __end_of_appTimerInit 30AA  
         __end_of_appTimerStop 30C8               __end_of_Lcd_Init 2ADC                __initialization 2EFE  
                 __end_of_atoi 1DCA                   __end_of_ctoa 27C4                   __end_of_main 2C82  
                 __end_of_dtoa 16B4                   __end_of_isrH 30C4                   __end_of_isrL 00AA  
                       ??_atoi 000D                         ??_ctoa 0010                         ??_main 00AF  
                       ??_dtoa 0029                         ??_isrH 0001                         ??_isrL 0001  
                __activetblptr 000002                 _appGetElements 2C82                         ?_fputc 0004  
                       ?_fputs 000D          __size_of_appISRConfig 0008                         ?_putch 0001  
                       i1l4260 0034                         i1l4270 006A                         i1l4262 0042  
                       i1l4272 006E                         i1l4264 0044                         i1l4274 007A  
                       i1l4266 0048                         i1l4258 0026                         i1l4276 008A  
                       i1l4268 005A                         i1l4278 0092                      ??_Lcd_Cmd 0004  
                vfpfcnvrt@done 0056                         _TMR3IE 007D01                         _TMR3IF 007D09  
                    ??_Lcd_Out 000A               __end_of___xxtofl 1C3A                   vfprintf@cfmt 0092  
                  ?_Lcd_Chr_CP 0001                         _appADC 237A                      ??___aodiv 0014  
                    ??___aomod 0014                         ___wmul 301C                      ??_adcInit 0004  
                    ??___fldiv 0037                      ??___awmod 0056                      ??___flmul 001E  
                       _appBat 189E                      ??___fltol 004C                         _memset 1F52  
                       clear_0 2F24                ___awmod@divisor 0054                      ??_appInit 0010  
       __end_of_appGetElements 2CE4                ___awmod@counter 0056                         pad@buf 0016  
                       ctoa@fp 000D                         dtoa@fp 001F                         _strlen 2FE6  
                 _appISRConfig 30B6                         fputc@c 0004               ?_appStateInitial 0001  
                       fputs@c 0011                         fputs@i 0012                         fputs@s 000D  
                    ??_isdigit 0006                      ??_teclado 0006                   __mediumconst 0000  
                    ??_isspace 0006                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8           _appStateRecolectData 2FB0              adcGetValue@PinADC 0007  
                       putch@c 0001               __end_of_vfprintf 2D46                      ??_sprintf 005A  
                 ___xxtofl@arg 0012                   ___xxtofl@exp 0011                   ___xxtofl@val 0008  
                   __accesstop 0060        __end_of__initialization 2F2E          __end_of_appTimerStart 30B6  
                ___rparam_used 000001                     ___fltol@f1 0048                 __pcstackCOMRAM 0001  
                 __pidataBANK0 3066                  __end_of_fputc 295A                  __end_of_fputs 2EBE  
                __end_of_putch 30CA             __size_of_appElemts 0048                ?_appGetElements 0001  
                ??_adcGetValue 0006          ?_appStateRecolectData 0001                      ?_Lcd_Init 0001  
                      ??_fputc 0008                        ??_fputs 0011            __size_of_Lcd_Chr_CP 014E  
                      ??_putch 0004          __size_of_appTimerInit 0014                     __pbssBANK0 0060  
        __size_of_appTimerStop 0004                        ?_appADC 00A6                        ?___wmul 0004  
                      ?_appBat 00A6                        ?_memset 0004                     appADC@data 00A6  
                      ?_strlen 0004                   _appTimerInit 3096                      ?___xxtofl 0008  
                 _appTimerStop 30C4             __size_of_vfpfcnvrt 03DE                     ??_Lcd_Init 0007  
          __end_of_adcGetValue 2F78              __end_of_appElemts 2E32                        _Lcd_Cmd 24BE  
                      _Lcd_Out 27C4                  ??_appLCD_Init 000E                        __Hparam 0000  
                      __Lparam 0000                        ___aodiv 1DCA                        ___aomod 20C8  
                      _adcInit 2E32                        ___fldiv 103C                        ___awmod 2ADC  
                      ___flmul 0834                        ___fltol 25E8                __size_of_appADC 0144  
              __size_of___wmul 0026                __size_of_appBat 01E8                      ?_vfprintf 008C  
                   appBat@data 00A6                   __psmallconst 0800                        __pcinit 2EFE  
              __size_of_memset 0176                        _appInit 307E                        __ramtop 0800  
                      __ptext0 2C10                        __ptext1 2C82                        __ptext2 3042  
                      __ptext3 2FB0                        __ptext4 2DEA                        __ptext5 189E  
                      __ptext6 237A                        __ptext7 1F52                        __ptext8 2F3C  
                      __ptext9 1A86                __size_of_strlen 0036                      _T2CONbits 000FCA  
                 __size_of_abs 0040                   __size_of_pad 00C2         ??_appStateRecolectData 005A  
                      _isdigit 2F78                     ??___xxtofl 000C                      _T3CONbits 000FB1  
             ___awmod@dividend 0052                        _teclado 16B4                        _isspace 2D98  
                      atoi@neg 0011                        _sprintf 2D46                 __pintcode_body 30BE  
         end_of_initialization 2F2E                        fputc@fp 0006                        memset@c 0006  
                      memset@k 000C                        memset@n 0008                        memset@s 000E  
                __Lmediumconst 0000                        int_func 30BE                        fputs@fp 000F  
            __end_of_vfpfcnvrt 103C                      Lcd_Init@i 0008                   ??_Lcd_Chr_CP 0004  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 005A  
          __end_of_appLCD_Init 2C10                        strlen@a 0006                        strlen@s 0004  
                    _PORTBbits 000F81                    _adcGetValue 2F3C                  ___xxtofl@sign 0010  
                    _TRISBbits 000F93                      _TRISDbits 000F95                    ___fldiv@grs 0042  
                  ___fldiv@rem 003B             __end_of_Lcd_Chr_CP 237A                    ___flmul@grs 0023  
             ??_appGetElements 00A6                 __end_of_appADC 24BE                    vfpfcnvrt@ap 0047  
                  vfpfcnvrt@fp 0043                    vfpfcnvrt@ll 004D                 __end_of___wmul 3042  
               __end_of_appBat 1A86                 __end_of_memset 20C8                 __end_of_strlen 301C  
          start_initialization 2EFE                    __end_of_abs 2EFE                    __end_of_pad 2A1C  
                Lcd_Out@buffer 0008       __size_of_appStateInitial 0024              __size_of_Lcd_Init 00C0  
           fp__appStateInitial 000E                    _appLCD_Init 2B8C                    vfprintf@fmt 008E  
                     ??_appADC 005A                       ??___wmul 0008                       ??_appBat 00A8  
                  _appBat$1959 00AA                    __pdataBANK0 00B1                       ??_memset 000A  
                   memset@dest 0004                       ??_strlen 0006                      ___fldiv@a 0033  
                    ___fldiv@b 002F         __size_of_appTimerStart 000C                      ___flmul@a 001A  
                    ___flmul@b 0016                    __pbssCOMRAM 005A                  __pcstackBANK0 008C  
             ___aodiv@dividend 0004              __size_of___xxtofl 01B4        fp__appStateRecolectData 000E  
                     ?_Lcd_Cmd 0001                       ?_Lcd_Out 0007                      _atoi$1680 0015  
                    _atoi$1678 0013                      _atoi$1679 0017                      _appElemts 2DEA  
                    _dtoa$1642 0031              appElemts@elements 00A6                      __pintcode 0008  
                     ?___aodiv 0004                       ?___aomod 0004                       ?_adcInit 0001  
                     ?___fldiv 002F               ___aodiv@quotient 0016                       ?___awmod 0052  
                     ?___flmul 0016                       ?___fltol 0048                    __pintcodelo 0018  
                     ?_appInit 0001              __size_of_vfprintf 0062                    __smallconst 0800  
                     ?_isdigit 0004                   teclado@valor 0004                       ?_teclado 0004  
                     ?_isspace 0004                       ?_sprintf 0094                 __size_of_fputc 00CA  
               __size_of_fputs 0044                 __size_of_putch 0002                 ___wmul@product 0008  
                     _LATBbits 000F8A                       _LATDbits 000F8C                  _appTimerStart 30AA  
                     _IPR2bits 000FA2                       _PIE2bits 000FA0              ??_appStateInitial 0006  
                   ?_appElemts 00A6                       i1u443_20 0034                       i1u443_21 0030  
                     i1u444_20 0042                       i1u444_21 003E                       i1u445_20 005A  
                     i1u445_21 0056                       i1u446_20 006A                       i1u446_21 0066  
                     i1u447_20 008A                       i1u447_21 0086                       _PIR1bits 000F9E  
                     _PIR2bits 000FA1                       _GO_nDONE 007E11                       _RCONbits 000FD0  
                     Lcd_Out@x 0007                       Lcd_Out@y 000C                      _vfpfcnvrt 0C5E  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0004                  ?_appISRConfig 0001                   ?_adcGetValue 0004  
__size_of_appStateRecolectData 0036                   _isspace$1696 000A                       _Lcd_Init 2A1C  
                   vfpfcnvrt@c 0055                    _INTCON2bits 000FF1                      copy_data0 2F12  
               ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A               __size_of_Lcd_Out 00CC  
                     __Hrparam 0000                     vfprintf@ap 0090                       __Lrparam 0000  
                   vfprintf@fp 008C               __size_of___aodiv 0188               __size_of___aomod 0164  
             __size_of_adcInit 0048               __size_of___fldiv 039A               __size_of___awmod 00B0  
             __size_of___flmul 042A               __size_of___fltol 0106                  appADC@lm35val 00A8  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000C                 ??_appISRConfig 0004  
              ___aodiv@counter 0014               __size_of_appInit 0018                     sprintf@fmt 0096  
                     ___xxtofl 1A86               appElemts@dataout 00A9               __size_of_isdigit 0038  
               Lcd_Chr_CP@data 0006               __size_of_teclado 01EA               __size_of_isspace 0052  
                     __ptext10 25E8                       __ptext11 0834                       __ptext20 2E32  
                     __ptext12 103C                       __ptext21 16B4                       __ptext13 2ADC  
                     __ptext30 20C8                       __ptext22 2D46                       __ptext14 307E  
                     __ptext31 1DCA                       __ptext23 2CE4                       __ptext15 30AA  
                     __ptext40 27C4                       __ptext32 26EE                       __ptext24 0C5E  
                     __ptext16 3096                       __ptext41 24BE                       __ptext33 2890  
                     __ptext25 13D6                       __ptext17 2B8C                       __ptext42 222C  
                     __ptext34 30C8                       __ptext26 295A                       __ptext18 2A1C  
                     __ptext35 1C3A                       __ptext27 2FE6                       __ptext19 30B6  
                     __ptext36 2D98                       __ptext28 2E7A                       __ptext37 2F78  
                     __ptext29 2EBE                       __ptext38 301C                       __ptext39 30C4  
             __size_of_sprintf 0052                    Lcd_Cmd@data 0006                  __size_of_atoi 0190  
                __size_of_ctoa 00D6                  __size_of_main 0072                  __size_of_dtoa 02DE  
                __size_of_isrH 30BC                  __size_of_isrL 0092                    ??_appElemts 00A8  
                 ?_appLCD_Init 0001                       int$flags 005C                       _vfprintf 2CE4  
             ___aomod@dividend 0004                  ?_appTimerInit 0001                    Lcd_Out@data 000D  
               _vfpfcnvrt$1657 0058                  ?_appTimerStop 0001                     _INTCONbits 000FF2  
                     isdigit@c 0004                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 009E                ??_appTimerStart 0004                       isspace@c 0004  
               appElemts@F3559 0060                ___aomod@divisor 000C                    ??_vfpfcnvrt 0049  
              ___aomod@counter 0014                 ??_appTimerInit 0004                       sprintf@f 00A0  
                     sprintf@s 0094                 ??_appTimerStop 0004        __size_of_appGetElements 0062  
            fp__appGetElements 000E           __size_of_adcGetValue 003C                _appStateInitial 3042  
                 ___aodiv@sign 0015           __end_of_appISRConfig 30BE                   ___aomod@sign 0015  
