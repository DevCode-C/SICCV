

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jun 03 19:20:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 12/02/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  0037F4                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _datos
   120  0037F4  00                 	db	0
   121  0037F5  0000               	dw	0
   122  0037F7  08                 	db	8
   123  0037F8  0000               	dw	0
   124  0037FA  00                 	db	0
   125  0037FB  00                 	db	0
   126  0037FC  00                 	db	0
   127  0037FD  00                 	db	0
   128  0037FE  00                 	db	0
   129  0037FF  00                 	db	0
   130  003800  00                 	db	0
   131  003801  00                 	db	0
   132  003802  00                 	db	0
   133  003803  00                 	db	0
   134  003804  00                 	db	0
   135  003805  00                 	db	0
   136  003806  00                 	db	0
   137  003807  00                 	db	0
   138  003808  00                 	db	0
   139  003809  00                 	db	0
   140  00380A  00                 	db	0
   141  00380B  F4                 	db	low _confirmacion
   142  00380C  34                 	db	high _confirmacion
   143  0000                     _TMR0	set	4054
   144  0000                     _TMR3	set	4018
   145  0000                     _ADRES	set	4035
   146  0000                     _TXREG	set	4013
   147  0000                     _IPR1bits	set	3999
   148  0000                     _PIE1bits	set	3997
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _TXSTAbits	set	4012
   151  0000                     _SPBRG	set	4015
   152  0000                     _BAUDCONbits	set	4024
   153  0000                     _PORTAbits	set	3968
   154  0000                     _LATAbits	set	3977
   155  0000                     _RCONbits	set	4048
   156  0000                     _PIE2bits	set	4000
   157  0000                     _IPR2bits	set	4002
   158  0000                     _PIR2bits	set	4001
   159  0000                     _INTCONbits	set	4082
   160  0000                     _T0CONbits	set	4053
   161  0000                     _T3CONbits	set	4017
   162  0000                     _LATEbits	set	3981
   163  0000                     _PIR1bits	set	3998
   164  0000                     _PR2	set	4043
   165  0000                     _TMR2	set	4044
   166  0000                     _TRISEbits	set	3990
   167  0000                     _T2CONbits	set	4042
   168  0000                     _LATDbits	set	3980
   169  0000                     _TRISDbits	set	3989
   170  0000                     _PORTBbits	set	3969
   171  0000                     _PORTB	set	3969
   172  0000                     _RCREG	set	4014
   173  0000                     _TRISAbits	set	3986
   174  0000                     _INTCON2bits	set	4081
   175  0000                     _TRISB	set	3987
   176  0000                     _LATCbits	set	3979
   177  0000                     _TRISCbits	set	3988
   178  0000                     _ADCON0bits	set	4034
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON1bits	set	4033
   181  0000                     _RCIE	set	31981
   182  0000                     _RCIF	set	31989
   183  0000                     _TMR0IF	set	32658
   184  0000                     _TMR0IE	set	32661
   185  0000                     _TMR3IF	set	32009
   186  0000                     _TMR3IE	set	32001
   187  0000                     _GO_nDONE	set	32273
   188                           
   189                           	psect	smallconst
   190  000800                     __psmallconst:
   191                           	callstack 0
   192  000800  00                 	db	0
   193  000801                     STR_9:
   194  000801  52                 	db	82	;'R'
   195  000802  65                 	db	101	;'e'
   196  000803  63                 	db	99	;'c'
   197  000804  61                 	db	97	;'a'
   198  000805  72                 	db	114	;'r'
   199  000806  67                 	db	103	;'g'
   200  000807  61                 	db	97	;'a'
   201  000808  20                 	db	32
   202  000809  50                 	db	80	;'P'
   203  00080A  6F                 	db	111	;'o'
   204  00080B  72                 	db	114	;'r'
   205  00080C  66                 	db	102	;'f'
   206  00080D  61                 	db	97	;'a'
   207  00080E  76                 	db	118	;'v'
   208  00080F  6F                 	db	111	;'o'
   209  000810  72                 	db	114	;'r'
   210  000811  00                 	db	0
   211  000812                     STR_6:
   212  000812  43                 	db	67	;'C'
   213  000813  20                 	db	32
   214  000814  64                 	db	100	;'d'
   215  000815  65                 	db	101	;'e'
   216  000816  20                 	db	32
   217  000817  76                 	db	118	;'v'
   218  000818  61                 	db	97	;'a'
   219  000819  63                 	db	99	;'c'
   220  00081A  75                 	db	117	;'u'
   221  00081B  6E                 	db	110	;'n'
   222  00081C  61                 	db	97	;'a'
   223  00081D  73                 	db	115	;'s'
   224  00081E  3A                 	db	58	;':'
   225  00081F  00                 	db	0
   226  000820                     STR_1:
   227  000820  54                 	db	84	;'T'
   228  000821  3A                 	db	58	;':'
   229  000822  25                 	db	37
   230  000823  30                 	db	48	;'0'
   231  000824  32                 	db	50	;'2'
   232  000825  64                 	db	100	;'d'
   233  000826  2E                 	db	46
   234  000827  25                 	db	37
   235  000828  30                 	db	48	;'0'
   236  000829  32                 	db	50	;'2'
   237  00082A  64                 	db	100	;'d'
   238  00082B  20                 	db	32
   239  00082C  43                 	db	67	;'C'
   240  00082D  00                 	db	0
   241  00082E                     STR_12:
   242  00082E  49                 	db	73	;'I'
   243  00082F  6E                 	db	110	;'n'
   244  000830  66                 	db	102	;'f'
   245  000831  6F                 	db	111	;'o'
   246  000832  72                 	db	114	;'r'
   247  000833  6D                 	db	109	;'m'
   248  000834  61                 	db	97	;'a'
   249  000835  63                 	db	99	;'c'
   250  000836  69                 	db	105	;'i'
   251  000837  6F                 	db	111	;'o'
   252  000838  6E                 	db	110	;'n'
   253  000839  40                 	db	64	;'@'
   254  00083A  00                 	db	0
   255  00083B                     STR_10:
   256  00083B  43                 	db	67	;'C'
   257  00083C  6F                 	db	111	;'o'
   258  00083D  6E                 	db	110	;'n'
   259  00083E  66                 	db	102	;'f'
   260  00083F  69                 	db	105	;'i'
   261  000840  72                 	db	114	;'r'
   262  000841  6D                 	db	109	;'m'
   263  000842  61                 	db	97	;'a'
   264  000843  63                 	db	99	;'c'
   265  000844  69                 	db	105	;'i'
   266  000845  6F                 	db	111	;'o'
   267  000846  6E                 	db	110	;'n'
   268  000847  00                 	db	0
   269  000848                     STR_8:
   270  000848  53                 	db	83	;'S'
   271  000849  69                 	db	105	;'i'
   272  00084A  6E                 	db	110	;'n'
   273  00084B  20                 	db	32
   274  00084C  76                 	db	118	;'v'
   275  00084D  61                 	db	97	;'a'
   276  00084E  63                 	db	99	;'c'
   277  00084F  75                 	db	117	;'u'
   278  000850  6E                 	db	110	;'n'
   279  000851  61                 	db	97	;'a'
   280  000852  73                 	db	115	;'s'
   281  000853  00                 	db	0
   282  000854                     STR_3:
   283  000854  42                 	db	66	;'B'
   284  000855  69                 	db	105	;'i'
   285  000856  65                 	db	101	;'e'
   286  000857  6E                 	db	110	;'n'
   287  000858  76                 	db	118	;'v'
   288  000859  65                 	db	101	;'e'
   289  00085A  6E                 	db	110	;'n'
   290  00085B  69                 	db	105	;'i'
   291  00085C  64                 	db	100	;'d'
   292  00085D  6F                 	db	111	;'o'
   293  00085E  73                 	db	115	;'s'
   294  00085F  00                 	db	0
   295  000860                     STR_14:
   296  000860  41                 	db	65	;'A'
   297  000861  63                 	db	99	;'c'
   298  000862  74                 	db	116	;'t'
   299  000863  69                 	db	105	;'i'
   300  000864  76                 	db	118	;'v'
   301  000865  61                 	db	97	;'a'
   302  000866  64                 	db	100	;'d'
   303  000867  6F                 	db	111	;'o'
   304  000868  40                 	db	64	;'@'
   305  000869  00                 	db	0
   306  00086A                     STR_2:
   307  00086A  42                 	db	66	;'B'
   308  00086B  61                 	db	97	;'a'
   309  00086C  74                 	db	116	;'t'
   310  00086D  3A                 	db	58	;':'
   311  00086E  25                 	db	37
   312  00086F  30                 	db	48	;'0'
   313  000870  32                 	db	50	;'2'
   314  000871  64                 	db	100	;'d'
   315  000872  00                 	db	0
   316  000873                     STR_4:
   317  000873  53                 	db	83	;'S'
   318  000874  49                 	db	73	;'I'
   319  000875  43                 	db	67	;'C'
   320  000876  43                 	db	67	;'C'
   321  000877  56                 	db	86	;'V'
   322  000878  00                 	db	0
   323  000879                     STR_5:
   324  000879  23                 	db	35
   325  00087A  3A                 	db	58	;':'
   326  00087B  25                 	db	37
   327  00087C  64                 	db	100	;'d'
   328  00087D  00                 	db	0
   329  00087E  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334  003588                     __pcinit:
   335                           	callstack 0
   336  003588                     start_initialization:
   337                           	callstack 0
   338  003588                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK0 (25 bytes)
   342                           ; load TBLPTR registers with __pidataBANK0
   343  003588  0EF4               	movlw	low __pidataBANK0
   344  00358A  6EF6               	movwf	tblptrl,c
   345  00358C  0E37               	movlw	high __pidataBANK0
   346  00358E  6EF7               	movwf	tblptrh,c
   347  003590  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   348  003592  6EF8               	movwf	tblptru,c
   349  003594  EE00  F0C2         	lfsr	0,__pdataBANK0
   350  003598  EE10 F019          	lfsr	1,25
   351  00359C                     copy_data0:
   352  00359C  0009               	tblrd		*+
   353  00359E  CFF5 FFEE          	movff	tablat,postinc0
   354  0035A2  50E5               	movf	postdec1,w,c
   355  0035A4  50E1               	movf	fsr1l,w,c
   356  0035A6  E1FA               	bnz	copy_data0
   357                           
   358                           ; Clear objects allocated to BANK0 (54 bytes)
   359  0035A8  EE00  F060         	lfsr	0,__pbssBANK0
   360  0035AC  0E36               	movlw	54
   361  0035AE                     clear_0:
   362  0035AE  6AEE               	clrf	postinc0,c
   363  0035B0  06E8               	decf	wreg,f,c
   364  0035B2  E1FD               	bnz	clear_0
   365                           
   366                           ; Clear objects allocated to COMRAM (6 bytes)
   367  0035B4  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
   368  0035B6  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   369  0035B8  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   370  0035BA  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   371  0035BC  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   372  0035BE  6A53               	clrf	__pbssCOMRAM& (0+255),c
   373  0035C0                     end_of_initialization:
   374                           	callstack 0
   375  0035C0                     __end_of__initialization:
   376                           	callstack 0
   377  0035C0  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   378  0035C2  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   379  0035C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   380  0035C6  6EF8               	movwf	tblptru,c
   381  0035C8  0100               	movlb	0
   382  0035CA  EFA1  F01B         	goto	_main	;jump to C main() function
   383                           
   384                           	psect	bssCOMRAM
   385  000053                     __pbssCOMRAM:
   386                           	callstack 0
   387  000053                     _prec:
   388                           	callstack 0
   389  000053                     	ds	2
   390  000055                     _flags:
   391                           	callstack 0
   392  000055                     	ds	2
   393  000057                     isrH@counter:
   394                           	callstack 0
   395  000057                     	ds	1
   396  000058                     isrL@tTimerCounter:
   397                           	callstack 0
   398  000058                     	ds	1
   399                           
   400                           	psect	bssBANK0
   401  000060                     __pbssBANK0:
   402                           	callstack 0
   403  000060                     _nout:
   404                           	callstack 0
   405  000060                     	ds	2
   406  000062                     _width:
   407                           	callstack 0
   408  000062                     	ds	2
   409  000064                     isrL@bloqueo:
   410                           	callstack 0
   411  000064                     	ds	2
   412  000066                     _dbuf:
   413                           	callstack 0
   414  000066                     	ds	32
   415  000086                     _puerto:
   416                           	callstack 0
   417  000086                     	ds	16
   418                           
   419                           	psect	dataBANK0
   420  0000C2                     __pdataBANK0:
   421                           	callstack 0
   422  0000C2                     _datos:
   423                           	callstack 0
   424  0000C2                     	ds	25
   425                           
   426                           	psect	cstackBANK0
   427  000096                     __pcstackBANK0:
   428                           	callstack 0
   429  000096                     ___fltol@sign1:
   430                           	callstack 0
   431  000096                     vfpfcnvrt@ll:
   432                           	callstack 0
   433                           
   434                           ; 8 bytes @ 0x0
   435  000096                     	ds	1
   436  000097                     ___fltol@exp1:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x1
   440  000097                     	ds	1
   441  000098                     ?___awmod:
   442                           	callstack 0
   443  000098                     ___awmod@dividend:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2
   447  000098                     	ds	2
   448  00009A                     ___awmod@divisor:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x4
   452  00009A                     	ds	2
   453  00009C                     ___awmod@counter:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x6
   457  00009C                     	ds	1
   458  00009D                     ___awmod@sign:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x7
   462  00009D                     	ds	1
   463  00009E                     vfpfcnvrt@done:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x8
   467  00009E                     	ds	2
   468  0000A0                     _vfpfcnvrt$2357:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xA
   472  0000A0                     	ds	2
   473  0000A2                     ?_vfprintf:
   474                           	callstack 0
   475  0000A2                     vfprintf@fp:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xC
   479  0000A2                     	ds	2
   480  0000A4                     vfprintf@fmt:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xE
   484  0000A4                     	ds	2
   485  0000A6                     vfprintf@ap:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x10
   489  0000A6                     	ds	2
   490  0000A8                     ?_sprintf:
   491                           	callstack 0
   492  0000A8                     sprintf@s:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x12
   496  0000A8                     	ds	2
   497  0000AA                     sprintf@fmt:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x14
   501  0000AA                     	ds	8
   502  0000B2                     sprintf@ap:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1C
   506  0000B2                     	ds	2
   507  0000B4                     sprintf@f:
   508                           	callstack 0
   509                           
   510                           ; 6 bytes @ 0x1E
   511  0000B4                     	ds	6
   512  0000BA                     appADC@data:
   513                           	callstack 0
   514  0000BA                     appBat@data:
   515                           	callstack 0
   516  0000BA                     appElemts@data:
   517                           	callstack 0
   518  0000BA                     appSubGetData@data_Inout:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x24
   522  0000BA                     	ds	2
   523  0000BC                     ??_appBat:
   524  0000BC                     appSubGetData@cantidad:
   525                           	callstack 0
   526  0000BC                     appADC@lm35val:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x26
   530  0000BC                     	ds	2
   531  0000BE                     appSubGetData@inout:
   532                           	callstack 0
   533  0000BE                     _appBat$2657:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x28
   537  0000BE                     	ds	1
   538  0000BF                     ??_appGetElements:
   539                           
   540                           ; 1 bytes @ 0x29
   541  0000BF                     	ds	3
   542                           
   543                           	psect	cstackCOMRAM
   544  000001                     __pcstackCOMRAM:
   545                           	callstack 0
   546  000001                     ??_isrH:
   547  000001                     
   548                           ; 1 bytes @ 0x0
   549  000001                     	ds	3
   550  000004                     ??_isrL:
   551                           
   552                           ; 1 bytes @ 0x3
   553  000004                     	ds	3
   554  000007                     ??_Lcd_Cmd:
   555  000007                     ??_Lcd_Chr_CP:
   556  000007                     ??_adcInit:
   557  000007                     ?_memcmp:
   558                           	callstack 0
   559  000007                     ?_strlen:
   560                           	callstack 0
   561  000007                     ?_isdigit:
   562                           	callstack 0
   563  000007                     ?_isspace:
   564                           	callstack 0
   565  000007                     ?_adcGetValue:
   566                           	callstack 0
   567  000007                     ?___wmul:
   568                           	callstack 0
   569  000007                     ?___lldiv:
   570                           	callstack 0
   571  000007                     ?___aodiv:
   572                           	callstack 0
   573  000007                     ?___aomod:
   574                           	callstack 0
   575  000007                     setServoAngle@pin:
   576                           	callstack 0
   577  000007                     teclado@valor:
   578                           	callstack 0
   579  000007                     appCounterInit@reload:
   580                           	callstack 0
   581  000007                     ___wmul@multiplier:
   582                           	callstack 0
   583  000007                     memcmp@vl:
   584                           	callstack 0
   585  000007                     memset@dest:
   586                           	callstack 0
   587  000007                     isdigit@c:
   588                           	callstack 0
   589  000007                     isspace@c:
   590                           	callstack 0
   591  000007                     fputc@c:
   592                           	callstack 0
   593  000007                     strlen@s:
   594                           	callstack 0
   595  000007                     ___lldiv@dividend:
   596                           	callstack 0
   597  000007                     ___aodiv@dividend:
   598                           	callstack 0
   599  000007                     ___aomod@dividend:
   600                           	callstack 0
   601                           
   602                           ; 8 bytes @ 0x6
   603  000007                     	ds	1
   604  000008                     ??_setServoAngle:
   605  000008                     adcInit@ADC_PINs:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x7
   609  000008                     	ds	1
   610  000009                     ??_isdigit:
   611  000009                     ??_isspace:
   612  000009                     ??_adcGetValue:
   613  000009                     Lcd_Chr_CP@data:
   614                           	callstack 0
   615  000009                     Lcd_Cmd@data:
   616                           	callstack 0
   617  000009                     ___wmul@multiplicand:
   618                           	callstack 0
   619  000009                     memcmp@vr:
   620                           	callstack 0
   621  000009                     memset@c:
   622                           	callstack 0
   623  000009                     fputc@fp:
   624                           	callstack 0
   625  000009                     strlen@a:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x8
   629  000009                     	ds	1
   630  00000A                     ??_Lcd_Init:
   631  00000A                     adcGetValue@PinADC:
   632                           	callstack 0
   633  00000A                     Lcd_Out@x:
   634                           	callstack 0
   635  00000A                     setServoAngle@angle:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x9
   639  00000A                     	ds	1
   640  00000B                     ??_fputc:
   641  00000B                     ?___xxtofl:
   642                           	callstack 0
   643  00000B                     Lcd_Init@i:
   644                           	callstack 0
   645  00000B                     setServo@pulsos:
   646                           	callstack 0
   647  00000B                     Lcd_Out@buffer:
   648                           	callstack 0
   649  00000B                     sendData@data:
   650                           	callstack 0
   651  00000B                     ___wmul@product:
   652                           	callstack 0
   653  00000B                     memcmp@n:
   654                           	callstack 0
   655  00000B                     memset@n:
   656                           	callstack 0
   657  00000B                     ___lldiv@divisor:
   658                           	callstack 0
   659  00000B                     ___xxtofl@val:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0xA
   663  00000B                     	ds	1
   664  00000C                     setServo@pin:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0xB
   668  00000C                     	ds	1
   669  00000D                     ??_memset:
   670  00000D                     ??_Lcd_Out:
   671  00000D                     ??_sendData:
   672  00000D                     ??_memcmp:
   673  00000D                     setServo@angle:
   674                           	callstack 0
   675  00000D                     _isspace$2395:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0xC
   679  00000D                     	ds	1
   680  00000E                     ?_atoi:
   681                           	callstack 0
   682  00000E                     setServo@i:
   683                           	callstack 0
   684  00000E                     memcmp@l:
   685                           	callstack 0
   686  00000E                     atoi@s:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xD
   690  00000E                     	ds	1
   691  00000F                     ??___xxtofl:
   692  00000F                     Lcd_Out@y:
   693                           	callstack 0
   694  00000F                     sendData@i:
   695                           	callstack 0
   696  00000F                     appSubGiveElemts@data:
   697                           	callstack 0
   698  00000F                     memset@k:
   699                           	callstack 0
   700  00000F                     ___lldiv@quotient:
   701                           	callstack 0
   702  00000F                     ___aodiv@divisor:
   703                           	callstack 0
   704  00000F                     ___aomod@divisor:
   705                           	callstack 0
   706                           
   707                           ; 8 bytes @ 0xE
   708  00000F                     	ds	1
   709  000010                     ??_atoi:
   710  000010                     Lcd_Out@data:
   711                           	callstack 0
   712  000010                     memcmp@r:
   713                           	callstack 0
   714  000010                     fputs@s:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0xF
   718  000010                     	ds	1
   719  000011                     ??_confirmacion:
   720  000011                     ??_warning:
   721  000011                     ??_appLCD_Init:
   722  000011                     memset@s:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x10
   726  000011                     	ds	1
   727  000012                     fputs@fp:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x11
   731  000012                     	ds	1
   732  000013                     ??_readUART:
   733  000013                     ___lldiv@counter:
   734                           	callstack 0
   735  000013                     ___xxtofl@sign:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x12
   739  000013                     	ds	1
   740  000014                     ___xxtofl@exp:
   741                           	callstack 0
   742  000014                     fputs@c:
   743                           	callstack 0
   744  000014                     atoi@neg:
   745                           	callstack 0
   746  000014                     uart_Init@baud:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x13
   750  000014                     	ds	1
   751  000015                     fputs@i:
   752                           	callstack 0
   753  000015                     ___xxtofl@arg:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x14
   757  000015                     	ds	1
   758  000016                     _atoi$2377:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x15
   762  000016                     	ds	1
   763  000017                     ?_pad:
   764                           	callstack 0
   765  000017                     ___aodiv@counter:
   766                           	callstack 0
   767  000017                     ___aomod@counter:
   768                           	callstack 0
   769  000017                     pad@fp:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x16
   773  000017                     	ds	1
   774  000018                     ___aodiv@sign:
   775                           	callstack 0
   776  000018                     ___aomod@sign:
   777                           	callstack 0
   778  000018                     _atoi$2379:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x17
   782  000018                     	ds	1
   783  000019                     ?_abs:
   784                           	callstack 0
   785  000019                     ?___flmul:
   786                           	callstack 0
   787  000019                     pad@buf:
   788                           	callstack 0
   789  000019                     abs@a:
   790                           	callstack 0
   791  000019                     ___flmul@b:
   792                           	callstack 0
   793  000019                     ___aodiv@quotient:
   794                           	callstack 0
   795                           
   796                           ; 8 bytes @ 0x18
   797  000019                     	ds	1
   798  00001A                     _atoi$2378:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x19
   802  00001A                     	ds	1
   803  00001B                     ??_abs:
   804  00001B                     pad@p:
   805                           	callstack 0
   806  00001B                     atoi@n:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x1A
   810  00001B                     	ds	2
   811  00001D                     ??_pad:
   812  00001D                     ___flmul@a:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x1C
   816  00001D                     	ds	1
   817  00001E                     pad@i:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x1D
   821  00001E                     	ds	2
   822  000020                     pad@w:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x1F
   826  000020                     	ds	1
   827  000021                     ??___flmul:
   828                           
   829                           ; 1 bytes @ 0x20
   830  000021                     	ds	1
   831  000022                     ?_dtoa:
   832                           	callstack 0
   833  000022                     dtoa@fp:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x21
   837  000022                     	ds	2
   838  000024                     dtoa@d:
   839                           	callstack 0
   840                           
   841                           ; 8 bytes @ 0x23
   842  000024                     	ds	1
   843  000025                     ___flmul@sign:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x24
   847  000025                     	ds	1
   848  000026                     ___flmul@grs:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x25
   852  000026                     	ds	4
   853  00002A                     ___flmul@aexp:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x29
   857  00002A                     	ds	1
   858  00002B                     ___flmul@bexp:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x2A
   862  00002B                     	ds	1
   863  00002C                     ??_dtoa:
   864  00002C                     ___flmul@prod:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x2B
   868  00002C                     	ds	4
   869  000030                     ___flmul@temp:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x2F
   873  000030                     	ds	2
   874  000032                     ?___fldiv:
   875                           	callstack 0
   876  000032                     ___fldiv@b:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x31
   880  000032                     	ds	2
   881  000034                     _dtoa$2342:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x33
   885  000034                     	ds	2
   886  000036                     dtoa@p:
   887                           	callstack 0
   888  000036                     ___fldiv@a:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x35
   892  000036                     	ds	2
   893  000038                     dtoa@w:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x37
   897  000038                     	ds	2
   898  00003A                     ??___fldiv:
   899  00003A                     dtoa@s:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x39
   903  00003A                     	ds	2
   904  00003C                     dtoa@n:
   905                           	callstack 0
   906                           
   907                           ; 8 bytes @ 0x3B
   908  00003C                     	ds	2
   909  00003E                     ___fldiv@rem:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x3D
   913  00003E                     	ds	4
   914  000042                     ___fldiv@sign:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x41
   918  000042                     	ds	1
   919  000043                     ___fldiv@new_exp:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x42
   923  000043                     	ds	1
   924  000044                     dtoa@i:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x43
   928  000044                     	ds	1
   929  000045                     ___fldiv@grs:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x44
   933  000045                     	ds	1
   934  000046                     ?_vfpfcnvrt:
   935                           	callstack 0
   936  000046                     vfpfcnvrt@fp:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x45
   940  000046                     	ds	2
   941  000048                     vfpfcnvrt@fmt:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x47
   945  000048                     	ds	1
   946  000049                     ___fldiv@bexp:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x48
   950  000049                     	ds	1
   951  00004A                     ___fldiv@aexp:
   952                           	callstack 0
   953  00004A                     vfpfcnvrt@ap:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x49
   957  00004A                     	ds	1
   958  00004B                     ?___fltol:
   959                           	callstack 0
   960  00004B                     ___fltol@f1:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x4A
   964  00004B                     	ds	1
   965  00004C                     ??_vfpfcnvrt:
   966                           
   967                           ; 1 bytes @ 0x4B
   968  00004C                     	ds	3
   969  00004F                     ??___fltol:
   970                           
   971                           ; 1 bytes @ 0x4E
   972  00004F                     	ds	1
   973  000050                     vfprintf@cfmt:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x4F
   977  000050                     	ds	3
   978  000053                     
   979                           ; 1 bytes @ 0x52
   980 ;;
   981 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   982 ;;
   983 ;; *************** function _main *****************
   984 ;; Defined at:
   985 ;;		line 13 in file "main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   999 ;;      Params:         0       0       0       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1002 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels required when called:   12
  1005 ;; This function calls:
  1006 ;;		_appGetElements
  1007 ;;		_appInit
  1008 ;;		_appStateInitial
  1009 ;;		_appStateRecolectData
  1010 ;;		_confirmacion
  1011 ;;		_readUART
  1012 ;;		_sendinformation
  1013 ;;		_warning
  1014 ;; This function is called by:
  1015 ;;		Startup code after reset
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text0
  1020  003742                     __ptext0:
  1021                           	callstack 0
  1022  003742                     _main:
  1023                           	callstack 19
  1024  003742                     
  1025                           ;main.c: 15:     TRISB = 0xF0;
  1026  003742  0EF0               	movlw	240
  1027  003744  6E93               	movwf	147,c	;volatile
  1028  003746                     
  1029                           ;main.c: 16:     INTCON2bits.RBPU = 0;
  1030  003746  9EF1               	bcf	241,7,c	;volatile
  1031  003748                     
  1032                           ;main.c: 17:     TRISAbits.TRISA2 = 0;
  1033  003748  9492               	bcf	146,2,c	;volatile
  1034  00374A                     
  1035                           ;main.c: 18:     TRISAbits.TRISA5 = 0;
  1036  00374A  9A92               	bcf	146,5,c	;volatile
  1037  00374C                     
  1038                           ;main.c: 19:     appInit();
  1039  00374C  ECE7  F01A         	call	_appInit	;wreg free
  1040  003750                     l4837:
  1041                           
  1042                           ;main.c: 21:     {;main.c: 22:         datos.nextFunc();
  1043  003750  EE20  F0D9         	lfsr	2,_datos+23
  1044  003754  D802               	call	u4368
  1045  003756  EFB7  F01B         	goto	u4369
  1046  00375A                     u4368:
  1047  00375A  0005               	push	
  1048  00375C  6EFA               	movwf	pclath,c
  1049  00375E  50DE               	movf	postinc2,w,c
  1050  003760  6EFD               	movwf	tosl,c
  1051  003762  50DE               	movf	postinc2,w,c
  1052  003764  6EFE               	movwf	tosh,c
  1053  003766  50F8               	movf	tblptru,w,c
  1054  003768  6EFF               	movwf	tosu,c
  1055  00376A  50FA               	movf	pclath,w,c
  1056  00376C  0012               	return		;indir
  1057  00376E                     u4369:
  1058  00376E  EFA8  F01B         	goto	l4837
  1059  003772  EF78  F000         	goto	start
  1060  003776                     __end_of_main:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _sendinformation *****************
  1064 ;; Defined at:
  1065 ;;		line 131 in file "app.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1082 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:   11
  1086 ;; This function calls:
  1087 ;;		_appADC
  1088 ;;		_appBat
  1089 ;;		_appElemts
  1090 ;;		_appTimerStart
  1091 ;;		_memset
  1092 ;;		_sendData
  1093 ;;		_sprintf
  1094 ;; This function is called by:
  1095 ;;		_readUART
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text1
  1101  002D3A                     __ptext1:
  1102                           	callstack 0
  1103  002D3A                     _sendinformation:
  1104                           	callstack 19
  1105  002D3A                     
  1106                           ;app.c: 133:     appADC(&datos);
  1107  002D3A  0EC2               	movlw	low _datos
  1108  002D3C  0100               	movlb	0	; () banked
  1109  002D3E  6FBA               	movwf	appADC@data& (0+255),b
  1110  002D40  0E00               	movlw	high _datos
  1111  002D42  6FBB               	movwf	(appADC@data+1)& (0+255),b
  1112  002D44  EC0A  F00E         	call	_appADC	;wreg free
  1113  002D48                     
  1114                           ;app.c: 134:     sendData(&datos);
  1115  002D48  0EC2               	movlw	low _datos
  1116  002D4A  6E0B               	movwf	sendData@data^0,c
  1117  002D4C  0E00               	movlw	high _datos
  1118  002D4E  6E0C               	movwf	(sendData@data+1)^0,c
  1119  002D50  EC75  F019         	call	_sendData	;wreg free
  1120  002D54                     
  1121                           ;app.c: 135:     appBat(&datos);
  1122  002D54  0EC2               	movlw	low _datos
  1123  002D56  0100               	movlb	0	; () banked
  1124  002D58  6FBA               	movwf	appBat@data& (0+255),b
  1125  002D5A  0E00               	movlw	high _datos
  1126  002D5C  6FBB               	movwf	(appBat@data+1)& (0+255),b
  1127  002D5E  EC3C  F00C         	call	_appBat	;wreg free
  1128                           
  1129                           ;app.c: 136:     sendData(&datos);
  1130  002D62  0EC2               	movlw	low _datos
  1131  002D64  6E0B               	movwf	sendData@data^0,c
  1132  002D66  0E00               	movlw	high _datos
  1133  002D68  6E0C               	movwf	(sendData@data+1)^0,c
  1134  002D6A  EC75  F019         	call	_sendData	;wreg free
  1135  002D6E                     
  1136                           ;app.c: 137:     appElemts(&datos);
  1137  002D6E  0EC2               	movlw	low _datos
  1138  002D70  0100               	movlb	0	; () banked
  1139  002D72  6FBA               	movwf	appElemts@data& (0+255),b
  1140  002D74  0E00               	movlw	high _datos
  1141  002D76  6FBB               	movwf	(appElemts@data+1)& (0+255),b
  1142  002D78  EC42  F019         	call	_appElemts	;wreg free
  1143  002D7C                     
  1144                           ;app.c: 138:     sendData(&datos);
  1145  002D7C  0EC2               	movlw	low _datos
  1146  002D7E  6E0B               	movwf	sendData@data^0,c
  1147  002D80  0E00               	movlw	high _datos
  1148  002D82  6E0C               	movwf	(sendData@data+1)^0,c
  1149  002D84  EC75  F019         	call	_sendData	;wreg free
  1150  002D88                     
  1151                           ;app.c: 139:     memset(datos.display,0,sizeof(datos.display));
  1152  002D88  0EC9               	movlw	low (_datos+7)
  1153  002D8A  6E07               	movwf	memset@dest^0,c
  1154  002D8C  0E00               	movlw	high (_datos+7)
  1155  002D8E  6E08               	movwf	(memset@dest+1)^0,c
  1156  002D90  0E00               	movlw	0
  1157  002D92  6E0A               	movwf	(memset@c+1)^0,c
  1158  002D94  0E00               	movlw	0
  1159  002D96  6E09               	movwf	memset@c^0,c
  1160  002D98  0E00               	movlw	0
  1161  002D9A  6E0C               	movwf	(memset@n+1)^0,c
  1162  002D9C  0E10               	movlw	16
  1163  002D9E  6E0B               	movwf	memset@n^0,c
  1164  002DA0  EC6D  F010         	call	_memset	;wreg free
  1165  002DA4                     
  1166                           ;app.c: 140:     sprintf((char *)datos.display,"@");
  1167  002DA4  0EC9               	movlw	low (_datos+7)
  1168  002DA6  0100               	movlb	0	; () banked
  1169  002DA8  6FA8               	movwf	sprintf@s& (0+255),b
  1170  002DAA  0E00               	movlw	high (_datos+7)
  1171  002DAC  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  1172  002DAE  0E39               	movlw	low (STR_12+11)
  1173  002DB0  6FAA               	movwf	sprintf@fmt& (0+255),b
  1174  002DB2  0E08               	movlw	high (STR_12+11)
  1175  002DB4  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  1176  002DB6  EC03  F01A         	call	_sprintf	;wreg free
  1177                           
  1178                           ;app.c: 141:     sendData(&datos);
  1179  002DBA  0EC2               	movlw	low _datos
  1180  002DBC  6E0B               	movwf	sendData@data^0,c
  1181  002DBE  0E00               	movlw	high _datos
  1182  002DC0  6E0C               	movwf	(sendData@data+1)^0,c
  1183  002DC2  EC75  F019         	call	_sendData	;wreg free
  1184  002DC6                     
  1185                           ;app.c: 143:     appTimerStart();
  1186  002DC6  EC2A  F01C         	call	_appTimerStart	;wreg free
  1187  002DCA                     
  1188                           ;app.c: 144:     memset(datos.display,0,sizeof(datos.display));
  1189  002DCA  0EC9               	movlw	low (_datos+7)
  1190  002DCC  6E07               	movwf	memset@dest^0,c
  1191  002DCE  0E00               	movlw	high (_datos+7)
  1192  002DD0  6E08               	movwf	(memset@dest+1)^0,c
  1193  002DD2  0E00               	movlw	0
  1194  002DD4  6E0A               	movwf	(memset@c+1)^0,c
  1195  002DD6  0E00               	movlw	0
  1196  002DD8  6E09               	movwf	memset@c^0,c
  1197  002DDA  0E00               	movlw	0
  1198  002DDC  6E0C               	movwf	(memset@n+1)^0,c
  1199  002DDE  0E10               	movlw	16
  1200  002DE0  6E0B               	movwf	memset@n^0,c
  1201  002DE2  EC6D  F010         	call	_memset	;wreg free
  1202  002DE6                     
  1203                           ;app.c: 145:     datos.state = 0;
  1204  002DE6  0E00               	movlw	0
  1205  002DE8  0100               	movlb	0	; () banked
  1206  002DEA  6FC5               	movwf	(_datos+3)& (0+255),b
  1207  002DEC                     
  1208                           ; BSR set to: 0
  1209                           ;app.c: 146:     datos.nextFunc = appStateInitial;
  1210  002DEC  0EAA               	movlw	low _appStateInitial
  1211  002DEE  6FD9               	movwf	(_datos+23)& (0+255),b
  1212  002DF0  0E34               	movlw	high _appStateInitial
  1213  002DF2  6FDA               	movwf	(_datos+24)& (0+255),b
  1214  002DF4                     
  1215                           ; BSR set to: 0
  1216  002DF4  0012               	return		;funcret
  1217  002DF6                     __end_of_sendinformation:
  1218                           	callstack 0
  1219                           
  1220 ;; *************** function _appStateInitial *****************
  1221 ;; Defined at:
  1222 ;;		line 56 in file "app.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1239 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    4
  1243 ;; This function calls:
  1244 ;;		_setServo
  1245 ;;		_teclado
  1246 ;; This function is called by:
  1247 ;;		_appStateRecolectData
  1248 ;;		_appGetElements
  1249 ;;		_sendinformation
  1250 ;;		_main
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text2
  1255  0034AA                     __ptext2:
  1256                           	callstack 0
  1257  0034AA                     _appStateInitial:
  1258                           	callstack 26
  1259  0034AA                     
  1260                           ;app.c: 59:     teclado(&datos.character);
  1261  0034AA  0EC8               	movlw	low (_datos+6)
  1262  0034AC  6E07               	movwf	teclado@valor^0,c
  1263  0034AE  0E00               	movlw	high (_datos+6)
  1264  0034B0  6E08               	movwf	(teclado@valor+1)^0,c
  1265  0034B2  EC47  F00B         	call	_teclado	;wreg free
  1266  0034B6                     
  1267                           ;app.c: 60:     if(datos.character != 0)
  1268  0034B6  0100               	movlb	0	; () banked
  1269  0034B8  51C8               	movf	(_datos+6)& (0+255),w,b
  1270  0034BA  B4D8               	btfsc	status,2,c
  1271  0034BC  EF62  F01A         	goto	u3931
  1272  0034C0  EF64  F01A         	goto	u3930
  1273  0034C4                     u3931:
  1274  0034C4  EF6A  F01A         	goto	l362
  1275  0034C8                     u3930:
  1276  0034C8                     
  1277                           ; BSR set to: 0
  1278                           ;app.c: 61:     {;app.c: 62:         datos.state = 1;
  1279  0034C8  0E01               	movlw	1
  1280  0034CA  6FC5               	movwf	(_datos+3)& (0+255),b
  1281                           
  1282                           ;app.c: 63:         datos.character = 0;
  1283  0034CC  0E00               	movlw	0
  1284  0034CE  6FC8               	movwf	(_datos+6)& (0+255),b
  1285                           
  1286                           ;app.c: 64:     }
  1287  0034D0  EF79  F01A         	goto	l365
  1288  0034D4                     l362:
  1289                           
  1290                           ; BSR set to: 0
  1291  0034D4  A680               	btfss	128,3,c	;volatile
  1292  0034D6  EF6F  F01A         	goto	u3941
  1293  0034DA  EF71  F01A         	goto	u3940
  1294  0034DE                     u3941:
  1295  0034DE  EF79  F01A         	goto	l365
  1296  0034E2                     u3940:
  1297  0034E2                     
  1298                           ; BSR set to: 0
  1299                           ;app.c: 66:     {;app.c: 67:         setServo(33,10,0);
  1300  0034E2  0E0A               	movlw	10
  1301  0034E4  6E0B               	movwf	setServo@pulsos^0,c
  1302  0034E6  0E00               	movlw	0
  1303  0034E8  6E0C               	movwf	setServo@pin^0,c
  1304  0034EA  0E21               	movlw	33
  1305  0034EC  ECD2  F01B         	call	_setServo
  1306  0034F0                     
  1307                           ;app.c: 68:         TMR3IF = 1;
  1308  0034F0  82A1               	bsf	4001,1,c	;volatile
  1309  0034F2                     l365:
  1310  0034F2  0012               	return		;funcret
  1311  0034F4                     __end_of_appStateInitial:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _readUART *****************
  1315 ;; Defined at:
  1316 ;;		line 39 in file "UART.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1332 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1333 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1334 ;;Total ram usage:        2 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    3
  1337 ;; This function calls:
  1338 ;;		_Lcd_Cmd
  1339 ;;		_memcmp
  1340 ;;		_memset
  1341 ;; This function is called by:
  1342 ;;		_isrH
  1343 ;;		_main
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text3
  1348  00294E                     __ptext3:
  1349                           	callstack 0
  1350  00294E                     _readUART:
  1351                           	callstack 27
  1352  00294E                     
  1353                           ;UART.c: 41:     if(!memcmp(puerto,"Informacion@",12))
  1354  00294E  0E86               	movlw	low _puerto
  1355  002950  6E07               	movwf	memcmp@vl^0,c
  1356  002952  0E00               	movlw	high _puerto
  1357  002954  6E08               	movwf	(memcmp@vl+1)^0,c
  1358  002956  0E2E               	movlw	low STR_12
  1359  002958  6E09               	movwf	memcmp@vr^0,c
  1360  00295A  0E08               	movlw	high STR_12
  1361  00295C  6E0A               	movwf	(memcmp@vr+1)^0,c
  1362  00295E  0E00               	movlw	0
  1363  002960  6E0C               	movwf	(memcmp@n+1)^0,c
  1364  002962  0E0C               	movlw	12
  1365  002964  6E0B               	movwf	memcmp@n^0,c
  1366  002966  ECF8  F017         	call	_memcmp	;wreg free
  1367  00296A  5007               	movf	?_memcmp^0,w,c
  1368  00296C  1008               	iorwf	(?_memcmp+1)^0,w,c
  1369  00296E  A4D8               	btfss	status,2,c
  1370  002970  EFBC  F014         	goto	u4341
  1371  002974  EFBE  F014         	goto	u4340
  1372  002978                     u4341:
  1373  002978  EFD5  F014         	goto	l4815
  1374  00297C                     u4340:
  1375  00297C                     
  1376                           ;UART.c: 42:     {;UART.c: 43:         memset(puerto,0,sizeof(puerto));
  1377  00297C  0E86               	movlw	low _puerto
  1378  00297E  6E07               	movwf	memset@dest^0,c
  1379  002980  0E00               	movlw	high _puerto
  1380  002982  6E08               	movwf	(memset@dest+1)^0,c
  1381  002984  0E00               	movlw	0
  1382  002986  6E0A               	movwf	(memset@c+1)^0,c
  1383  002988  0E00               	movlw	0
  1384  00298A  6E09               	movwf	memset@c^0,c
  1385  00298C  0E00               	movlw	0
  1386  00298E  6E0C               	movwf	(memset@n+1)^0,c
  1387  002990  0E08               	movlw	8
  1388  002992  6E0B               	movwf	memset@n^0,c
  1389  002994  EC6D  F010         	call	_memset	;wreg free
  1390  002998                     
  1391                           ;UART.c: 44:         datos.state = 0;
  1392  002998  0E00               	movlw	0
  1393  00299A  0100               	movlb	0	; () banked
  1394  00299C  6FC5               	movwf	(_datos+3)& (0+255),b
  1395  00299E                     
  1396                           ; BSR set to: 0
  1397                           ;UART.c: 45:         datos.nextFunc = sendinformation;
  1398  00299E  0E3A               	movlw	low _sendinformation
  1399  0029A0  6FD9               	movwf	(_datos+23)& (0+255),b
  1400  0029A2  0E2D               	movlw	high _sendinformation
  1401  0029A4  6FDA               	movwf	(_datos+24)& (0+255),b
  1402                           
  1403                           ;UART.c: 46:     }
  1404  0029A6  EF10  F015         	goto	l436
  1405  0029AA                     l4815:
  1406  0029AA  0E86               	movlw	low _puerto
  1407  0029AC  6E07               	movwf	memcmp@vl^0,c
  1408  0029AE  0E00               	movlw	high _puerto
  1409  0029B0  6E08               	movwf	(memcmp@vl+1)^0,c
  1410  0029B2  0E60               	movlw	low STR_14
  1411  0029B4  6E09               	movwf	memcmp@vr^0,c
  1412  0029B6  0E08               	movlw	high STR_14
  1413  0029B8  6E0A               	movwf	(memcmp@vr+1)^0,c
  1414  0029BA  0E00               	movlw	0
  1415  0029BC  6E0C               	movwf	(memcmp@n+1)^0,c
  1416  0029BE  0E09               	movlw	9
  1417  0029C0  6E0B               	movwf	memcmp@n^0,c
  1418  0029C2  ECF8  F017         	call	_memcmp	;wreg free
  1419  0029C6  5007               	movf	?_memcmp^0,w,c
  1420  0029C8  1008               	iorwf	(?_memcmp+1)^0,w,c
  1421  0029CA  A4D8               	btfss	status,2,c
  1422  0029CC  EFEA  F014         	goto	u4351
  1423  0029D0  EFEC  F014         	goto	u4350
  1424  0029D4                     u4351:
  1425  0029D4  EF10  F015         	goto	l436
  1426  0029D8                     u4350:
  1427  0029D8                     
  1428                           ;UART.c: 48:     {;UART.c: 49:         (Lcd_Cmd(1),_delay((unsigned long)((100)*(1200000
      +                          0/4000.0))));
  1429  0029D8  0E01               	movlw	1
  1430  0029DA  EC81  F012         	call	_Lcd_Cmd
  1431  0029DE  0E02               	movlw	2
  1432  0029E0  6E14               	movwf	(??_readUART+1)^0,c
  1433  0029E2  0E86               	movlw	134
  1434  0029E4  6E13               	movwf	??_readUART^0,c
  1435  0029E6  0E99               	movlw	153
  1436  0029E8                     u4497:
  1437  0029E8  2EE8               	decfsz	wreg,f,c
  1438  0029EA  D7FE               	bra	u4497
  1439  0029EC  2E13               	decfsz	??_readUART^0,f,c
  1440  0029EE  D7FC               	bra	u4497
  1441  0029F0  2E14               	decfsz	(??_readUART+1)^0,f,c
  1442  0029F2  D7FA               	bra	u4497
  1443  0029F4  F000               	nop	
  1444  0029F6                     
  1445                           ;UART.c: 50:         memset(puerto,0,sizeof(puerto));
  1446  0029F6  0E86               	movlw	low _puerto
  1447  0029F8  6E07               	movwf	memset@dest^0,c
  1448  0029FA  0E00               	movlw	high _puerto
  1449  0029FC  6E08               	movwf	(memset@dest+1)^0,c
  1450  0029FE  0E00               	movlw	0
  1451  002A00  6E0A               	movwf	(memset@c+1)^0,c
  1452  002A02  0E00               	movlw	0
  1453  002A04  6E09               	movwf	memset@c^0,c
  1454  002A06  0E00               	movlw	0
  1455  002A08  6E0C               	movwf	(memset@n+1)^0,c
  1456  002A0A  0E08               	movlw	8
  1457  002A0C  6E0B               	movwf	memset@n^0,c
  1458  002A0E  EC6D  F010         	call	_memset	;wreg free
  1459  002A12                     
  1460                           ;UART.c: 51:         datos.state = 0;
  1461  002A12  0E00               	movlw	0
  1462  002A14  0100               	movlb	0	; () banked
  1463  002A16  6FC5               	movwf	(_datos+3)& (0+255),b
  1464  002A18                     
  1465                           ; BSR set to: 0
  1466                           ;UART.c: 52:         datos.nextFunc = appStateRecolectData;
  1467  002A18  0E8E               	movlw	low _appStateRecolectData
  1468  002A1A  6FD9               	movwf	(_datos+23)& (0+255),b
  1469  002A1C  0E30               	movlw	high _appStateRecolectData
  1470  002A1E  6FDA               	movwf	(_datos+24)& (0+255),b
  1471  002A20                     l436:
  1472  002A20  0012               	return		;funcret
  1473  002A22                     __end_of_readUART:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _appGetElements *****************
  1477 ;; Defined at:
  1478 ;;		line 72 in file "app.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1492 ;;      Params:         0       0       0       0       0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1494 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1495 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1496 ;;Total ram usage:        2 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:   11
  1499 ;; This function calls:
  1500 ;;		_Lcd_Cmd
  1501 ;;		_appSubGetData
  1502 ;;		_appSubGiveElemts
  1503 ;;		_appTimerStart
  1504 ;;		_appTimerStop
  1505 ;; This function is called by:
  1506 ;;		_isrL
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text4
  1512  0031A6                     __ptext4:
  1513                           	callstack 0
  1514  0031A6                     _appGetElements:
  1515                           	callstack 19
  1516  0031A6                     
  1517                           ;app.c: 74:     datos.state = 2;
  1518  0031A6  0E02               	movlw	2
  1519  0031A8  0100               	movlb	0	; () banked
  1520  0031AA  6FC5               	movwf	(_datos+3)& (0+255),b
  1521  0031AC                     
  1522                           ; BSR set to: 0
  1523                           ;app.c: 75:     appTimerStop();
  1524  0031AC  EC28  F01C         	call	_appTimerStop	;wreg free
  1525  0031B0                     
  1526                           ;app.c: 76:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1527  0031B0  0E01               	movlw	1
  1528  0031B2  EC81  F012         	call	_Lcd_Cmd
  1529  0031B6  0E02               	movlw	2
  1530  0031B8  0100               	movlb	0	; () banked
  1531  0031BA  6FC0               	movwf	(??_appGetElements+1)& (0+255),b
  1532  0031BC  0E86               	movlw	134
  1533  0031BE  6FBF               	movwf	??_appGetElements& (0+255),b
  1534  0031C0  0E99               	movlw	153
  1535  0031C2                     u4507:
  1536  0031C2  2EE8               	decfsz	wreg,f,c
  1537  0031C4  D7FE               	bra	u4507
  1538  0031C6  2FBF               	decfsz	??_appGetElements& (0+255),f,b
  1539  0031C8  D7FC               	bra	u4507
  1540  0031CA  2FC0               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1541  0031CC  D7FA               	bra	u4507
  1542  0031CE                     
  1543                           ;app.c: 77:     appSubGetData(&datos);
  1544  0031CE  0EC2               	movlw	low _datos
  1545  0031D0  0100               	movlb	0	; () banked
  1546  0031D2  6FBA               	movwf	appSubGetData@data_Inout& (0+255),b
  1547  0031D4  0E00               	movlw	high _datos
  1548  0031D6  6FBB               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1549  0031D8  EC28  F014         	call	_appSubGetData	;wreg free
  1550  0031DC                     
  1551                           ;app.c: 78:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1552  0031DC  0E01               	movlw	1
  1553  0031DE  EC81  F012         	call	_Lcd_Cmd
  1554  0031E2  0E02               	movlw	2
  1555  0031E4  0100               	movlb	0	; () banked
  1556  0031E6  6FC0               	movwf	(??_appGetElements+1)& (0+255),b
  1557  0031E8  0E86               	movlw	134
  1558  0031EA  6FBF               	movwf	??_appGetElements& (0+255),b
  1559  0031EC  0E99               	movlw	153
  1560  0031EE                     u4517:
  1561  0031EE  2EE8               	decfsz	wreg,f,c
  1562  0031F0  D7FE               	bra	u4517
  1563  0031F2  2FBF               	decfsz	??_appGetElements& (0+255),f,b
  1564  0031F4  D7FC               	bra	u4517
  1565  0031F6  2FC0               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1566  0031F8  D7FA               	bra	u4517
  1567  0031FA                     
  1568                           ;app.c: 79:     appSubGiveElemts(&datos);
  1569  0031FA  0EC2               	movlw	low _datos
  1570  0031FC  6E0F               	movwf	appSubGiveElemts@data^0,c
  1571  0031FE  0E00               	movlw	high _datos
  1572  003200  6E10               	movwf	(appSubGiveElemts@data+1)^0,c
  1573  003202  EC13  F01C         	call	_appSubGiveElemts	;wreg free
  1574  003206                     
  1575                           ;app.c: 80:     datos.nextFunc = appStateInitial;
  1576  003206  0EAA               	movlw	low _appStateInitial
  1577  003208  0100               	movlb	0	; () banked
  1578  00320A  6FD9               	movwf	(_datos+23)& (0+255),b
  1579  00320C  0E34               	movlw	high _appStateInitial
  1580  00320E  6FDA               	movwf	(_datos+24)& (0+255),b
  1581  003210                     
  1582                           ; BSR set to: 0
  1583                           ;app.c: 81:     appTimerStart();
  1584  003210  EC2A  F01C         	call	_appTimerStart	;wreg free
  1585  003214  0012               	return		;funcret
  1586  003216                     __end_of_appGetElements:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _appStateRecolectData *****************
  1590 ;; Defined at:
  1591 ;;		line 35 in file "app.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1605 ;;      Params:         0       0       0       0       0       0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1608 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1609 ;;Total ram usage:        0 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:   11
  1612 ;; This function calls:
  1613 ;;		_appADC
  1614 ;;		_appBat
  1615 ;;		_appCounterStop
  1616 ;;		_appElemts
  1617 ;;		_setServo
  1618 ;; This function is called by:
  1619 ;;		_isrL
  1620 ;;		_readUART
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text5
  1626  00308E                     __ptext5:
  1627                           	callstack 0
  1628  00308E                     _appStateRecolectData:
  1629                           	callstack 19
  1630  00308E                     
  1631                           ;app.c: 37:     appADC(&datos);
  1632  00308E  0EC2               	movlw	low _datos
  1633  003090  0100               	movlb	0	; () banked
  1634  003092  6FBA               	movwf	appADC@data& (0+255),b
  1635  003094  0E00               	movlw	high _datos
  1636  003096  6FBB               	movwf	(appADC@data+1)& (0+255),b
  1637  003098  EC0A  F00E         	call	_appADC	;wreg free
  1638                           
  1639                           ;app.c: 38:     appBat(&datos);
  1640  00309C  0EC2               	movlw	low _datos
  1641  00309E  0100               	movlb	0	; () banked
  1642  0030A0  6FBA               	movwf	appBat@data& (0+255),b
  1643  0030A2  0E00               	movlw	high _datos
  1644  0030A4  6FBB               	movwf	(appBat@data+1)& (0+255),b
  1645  0030A6  EC3C  F00C         	call	_appBat	;wreg free
  1646                           
  1647                           ;app.c: 40:     appElemts(&datos);
  1648  0030AA  0EC2               	movlw	low _datos
  1649  0030AC  0100               	movlb	0	; () banked
  1650  0030AE  6FBA               	movwf	appElemts@data& (0+255),b
  1651  0030B0  0E00               	movlw	high _datos
  1652  0030B2  6FBB               	movwf	(appElemts@data+1)& (0+255),b
  1653  0030B4  EC42  F019         	call	_appElemts	;wreg free
  1654  0030B8                     
  1655                           ;app.c: 41:     if(datos.state == 2)
  1656  0030B8  0E02               	movlw	2
  1657  0030BA  0100               	movlb	0	; () banked
  1658  0030BC  19C5               	xorwf	(_datos+3)& (0+255),w,b
  1659  0030BE  A4D8               	btfss	status,2,c
  1660  0030C0  EF64  F018         	goto	u4321
  1661  0030C4  EF66  F018         	goto	u4320
  1662  0030C8                     u4321:
  1663  0030C8  EF8B  F018         	goto	l4763
  1664  0030CC                     u4320:
  1665  0030CC                     
  1666                           ; BSR set to: 0
  1667                           ;app.c: 42:     {;app.c: 43:         LATAbits.LA5 = 1;
  1668  0030CC  8A89               	bsf	137,5,c	;volatile
  1669  0030CE                     
  1670                           ; BSR set to: 0
  1671                           ;app.c: 44:         if(datos.elements == TMR0)
  1672  0030CE  50D6               	movf	214,w,c	;volatile
  1673  0030D0  19C3               	xorwf	(_datos+1)& (0+255),w,b
  1674  0030D2  E107               	bnz	u4331
  1675  0030D4  50D7               	movf	215,w,c	;volatile
  1676  0030D6  19C4               	xorwf	(_datos+2)& (0+255),w,b
  1677  0030D8  A4D8               	btfss	status,2,c
  1678  0030DA  EF71  F018         	goto	u4331
  1679  0030DE  EF73  F018         	goto	u4330
  1680  0030E2                     u4331:
  1681  0030E2  EF8B  F018         	goto	l4763
  1682  0030E6                     u4330:
  1683  0030E6                     
  1684                           ; BSR set to: 0
  1685                           ;app.c: 45:         {;app.c: 46:             datos.elements = (int16_t)TMR0;
  1686  0030E6  CFD6 F0C3          	movff	4054,_datos+1	;volatile
  1687  0030EA  CFD7 F0C4          	movff	4055,_datos+2	;volatile
  1688  0030EE                     
  1689                           ; BSR set to: 0
  1690                           ;app.c: 47:             appCounterStop();
  1691  0030EE  EC26  F01C         	call	_appCounterStop	;wreg free
  1692  0030F2                     
  1693                           ;app.c: 48:             datos.state = 0;
  1694  0030F2  0E00               	movlw	0
  1695  0030F4  0100               	movlb	0	; () banked
  1696  0030F6  6FC5               	movwf	(_datos+3)& (0+255),b
  1697  0030F8                     
  1698                           ; BSR set to: 0
  1699                           ;app.c: 49:             setServo(33,10,2);
  1700  0030F8  0E0A               	movlw	10
  1701  0030FA  6E0B               	movwf	setServo@pulsos^0,c
  1702  0030FC  0E02               	movlw	2
  1703  0030FE  6E0C               	movwf	setServo@pin^0,c
  1704  003100  0E21               	movlw	33
  1705  003102  ECD2  F01B         	call	_setServo
  1706  003106                     
  1707                           ;app.c: 50:             LATAbits.LA5 = 0;
  1708  003106  9A89               	bcf	137,5,c	;volatile
  1709  003108                     
  1710                           ;app.c: 51:             setServo(45,10,0);
  1711  003108  0E0A               	movlw	10
  1712  00310A  6E0B               	movwf	setServo@pulsos^0,c
  1713  00310C  0E00               	movlw	0
  1714  00310E  6E0C               	movwf	setServo@pin^0,c
  1715  003110  0E2D               	movlw	45
  1716  003112  ECD2  F01B         	call	_setServo
  1717  003116                     l4763:
  1718                           
  1719                           ;app.c: 54:     datos.nextFunc = appStateInitial;
  1720  003116  0EAA               	movlw	low _appStateInitial
  1721  003118  0100               	movlb	0	; () banked
  1722  00311A  6FD9               	movwf	(_datos+23)& (0+255),b
  1723  00311C  0E34               	movlw	high _appStateInitial
  1724  00311E  6FDA               	movwf	(_datos+24)& (0+255),b
  1725  003120                     
  1726                           ; BSR set to: 0
  1727  003120  0012               	return		;funcret
  1728  003122                     __end_of_appStateRecolectData:
  1729                           	callstack 0
  1730                           
  1731 ;; *************** function _confirmacion *****************
  1732 ;; Defined at:
  1733 ;;		line 123 in file "app.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1747 ;;      Params:         0       0       0       0       0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1749 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1750 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1751 ;;Total ram usage:        2 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    4
  1754 ;; This function calls:
  1755 ;;		_Lcd_Cmd
  1756 ;;		_Lcd_Out
  1757 ;;		_appTimerStart
  1758 ;; This function is called by:
  1759 ;;		_isrL
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text6
  1765  0034F4                     __ptext6:
  1766                           	callstack 0
  1767  0034F4                     _confirmacion:
  1768                           	callstack 26
  1769  0034F4                     
  1770                           ;app.c: 125:     Lcd_Out(1,0, (const int8_t*)"Confirmacion");
  1771  0034F4  0E00               	movlw	0
  1772  0034F6  6E0A               	movwf	Lcd_Out@x^0,c
  1773  0034F8  0E3B               	movlw	low STR_10
  1774  0034FA  6E0B               	movwf	Lcd_Out@buffer^0,c
  1775  0034FC  0E08               	movlw	high STR_10
  1776  0034FE  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1777  003500  0E01               	movlw	1
  1778  003502  EC11  F015         	call	_Lcd_Out
  1779  003506                     l4315:
  1780  003506  0E08               	movlw	8
  1781  003508  0100               	movlb	0	; () banked
  1782  00350A  19C5               	xorwf	(_datos+3)& (0+255),w,b
  1783  00350C  B4D8               	btfsc	status,2,c
  1784  00350E  EF8B  F01A         	goto	u3961
  1785  003512  EF8D  F01A         	goto	u3960
  1786  003516                     u3961:
  1787  003516  EF83  F01A         	goto	l4315
  1788  00351A                     u3960:
  1789  00351A                     
  1790                           ; BSR set to: 0
  1791                           ;app.c: 127:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1792  00351A  0E01               	movlw	1
  1793  00351C  EC81  F012         	call	_Lcd_Cmd
  1794  003520  0E02               	movlw	2
  1795  003522  6E12               	movwf	(??_confirmacion+1)^0,c
  1796  003524  0E86               	movlw	134
  1797  003526  6E11               	movwf	??_confirmacion^0,c
  1798  003528  0E99               	movlw	153
  1799  00352A                     u4527:
  1800  00352A  2EE8               	decfsz	wreg,f,c
  1801  00352C  D7FE               	bra	u4527
  1802  00352E  2E11               	decfsz	??_confirmacion^0,f,c
  1803  003530  D7FC               	bra	u4527
  1804  003532  2E12               	decfsz	(??_confirmacion+1)^0,f,c
  1805  003534  D7FA               	bra	u4527
  1806  003536  F000               	nop	
  1807  003538                     
  1808                           ;app.c: 128:     appTimerStart();
  1809  003538  EC2A  F01C         	call	_appTimerStart	;wreg free
  1810  00353C  0012               	return		;funcret
  1811  00353E                     __end_of_confirmacion:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _warning *****************
  1815 ;; Defined at:
  1816 ;;		line 112 in file "app.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1830 ;;      Params:         0       0       0       0       0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1832 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1833 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1834 ;;Total ram usage:        2 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    4
  1837 ;; This function calls:
  1838 ;;		_Lcd_Cmd
  1839 ;;		_Lcd_Out
  1840 ;;		_appTimerStart
  1841 ;;		_appTimerStop
  1842 ;;		_setServo
  1843 ;; This function is called by:
  1844 ;;		_isrH
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text7
  1850  003216                     __ptext7:
  1851                           	callstack 0
  1852  003216                     _warning:
  1853                           	callstack 26
  1854  003216                     
  1855                           ;app.c: 114:     appTimerStop();
  1856  003216  EC28  F01C         	call	_appTimerStop	;wreg free
  1857  00321A                     
  1858                           ;app.c: 115:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1859  00321A  0E01               	movlw	1
  1860  00321C  EC81  F012         	call	_Lcd_Cmd
  1861  003220  0E02               	movlw	2
  1862  003222  6E12               	movwf	(??_warning+1)^0,c
  1863  003224  0E86               	movlw	134
  1864  003226  6E11               	movwf	??_warning^0,c
  1865  003228  0E99               	movlw	153
  1866  00322A                     u4537:
  1867  00322A  2EE8               	decfsz	wreg,f,c
  1868  00322C  D7FE               	bra	u4537
  1869  00322E  2E11               	decfsz	??_warning^0,f,c
  1870  003230  D7FC               	bra	u4537
  1871  003232  2E12               	decfsz	(??_warning+1)^0,f,c
  1872  003234  D7FA               	bra	u4537
  1873  003236  F000               	nop	
  1874  003238                     
  1875                           ;app.c: 116:     Lcd_Out(1,0, (const int8_t*)"Sin vacunas");
  1876  003238  0E00               	movlw	0
  1877  00323A  6E0A               	movwf	Lcd_Out@x^0,c
  1878  00323C  0E48               	movlw	low STR_8
  1879  00323E  6E0B               	movwf	Lcd_Out@buffer^0,c
  1880  003240  0E08               	movlw	high STR_8
  1881  003242  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1882  003244  0E01               	movlw	1
  1883  003246  EC11  F015         	call	_Lcd_Out
  1884  00324A                     
  1885                           ;app.c: 117:     Lcd_Out(2,0, (const int8_t*)"Recarga Porfavor");
  1886  00324A  0E00               	movlw	0
  1887  00324C  6E0A               	movwf	Lcd_Out@x^0,c
  1888  00324E  0E01               	movlw	low STR_9
  1889  003250  6E0B               	movwf	Lcd_Out@buffer^0,c
  1890  003252  0E08               	movlw	high STR_9
  1891  003254  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1892  003256  0E02               	movlw	2
  1893  003258  EC11  F015         	call	_Lcd_Out
  1894  00325C                     
  1895                           ;app.c: 118:     setServo(45,10,1);
  1896  00325C  0E0A               	movlw	10
  1897  00325E  6E0B               	movwf	setServo@pulsos^0,c
  1898  003260  0E01               	movlw	1
  1899  003262  6E0C               	movwf	setServo@pin^0,c
  1900  003264  0E2D               	movlw	45
  1901  003266  ECD2  F01B         	call	_setServo
  1902  00326A                     l4309:
  1903  00326A  0E0A               	movlw	10
  1904  00326C  0100               	movlb	0	; () banked
  1905  00326E  19C5               	xorwf	(_datos+3)& (0+255),w,b
  1906  003270  B4D8               	btfsc	status,2,c
  1907  003272  EF3D  F019         	goto	u3951
  1908  003276  EF3F  F019         	goto	u3950
  1909  00327A                     u3951:
  1910  00327A  EF35  F019         	goto	l4309
  1911  00327E                     u3950:
  1912  00327E                     
  1913                           ; BSR set to: 0
  1914                           ;app.c: 120:     appTimerStart();
  1915  00327E  EC2A  F01C         	call	_appTimerStart	;wreg free
  1916  003282  0012               	return		;funcret
  1917  003284                     __end_of_warning:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function _sendData *****************
  1921 ;; Defined at:
  1922 ;;		line 56 in file "UART.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  data            2   10[COMRAM] PTR struct _state
  1925 ;;		 -> datos(25), 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  i               1   14[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1937 ;;      Params:         2       0       0       0       0       0       0       0       0
  1938 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1939 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1940 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1941 ;;Total ram usage:        5 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    3
  1944 ;; This function calls:
  1945 ;;		_strlen
  1946 ;; This function is called by:
  1947 ;;		_sendinformation
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text8
  1952  0032EA                     __ptext8:
  1953                           	callstack 0
  1954  0032EA                     _sendData:
  1955                           	callstack 26
  1956  0032EA                     
  1957                           ;UART.c: 56: void sendData(StateMachine *data);UART.c: 57: {;UART.c: 58:     for(uint8_t
      +                           i = 0; i < strlen((const char *)data->display);)
  1958  0032EA  0E00               	movlw	0
  1959  0032EC  6E0F               	movwf	sendData@i^0,c
  1960  0032EE  EF8F  F019         	goto	l4211
  1961  0032F2                     l440:
  1962                           
  1963                           ;UART.c: 59:         {;UART.c: 60:             if(TXSTAbits.TRMT == 1)
  1964  0032F2  A2AC               	btfss	172,1,c	;volatile
  1965  0032F4  EF7E  F019         	goto	u3861
  1966  0032F8  EF80  F019         	goto	u3860
  1967  0032FC                     u3861:
  1968  0032FC  EF8F  F019         	goto	l4211
  1969  003300                     u3860:
  1970  003300                     
  1971                           ;UART.c: 61:             {;UART.c: 62:                 TXREG = data->display[i];
  1972  003300  500F               	movf	sendData@i^0,w,c
  1973  003302  240B               	addwf	sendData@data^0,w,c
  1974  003304  6E0D               	movwf	??_sendData^0,c
  1975  003306  0E00               	movlw	0
  1976  003308  200C               	addwfc	(sendData@data+1)^0,w,c
  1977  00330A  6E0E               	movwf	(??_sendData+1)^0,c
  1978  00330C  0E07               	movlw	7
  1979  00330E  240D               	addwf	??_sendData^0,w,c
  1980  003310  6ED9               	movwf	fsr2l,c
  1981  003312  0E00               	movlw	0
  1982  003314  200E               	addwfc	(??_sendData+1)^0,w,c
  1983  003316  6EDA               	movwf	fsr2h,c
  1984  003318  50DF               	movf	indf2,w,c
  1985  00331A  6EAD               	movwf	173,c	;volatile
  1986  00331C                     
  1987                           ;UART.c: 63:                 i++;
  1988  00331C  2A0F               	incf	sendData@i^0,f,c
  1989  00331E                     l4211:
  1990  00331E  0E07               	movlw	7
  1991  003320  240B               	addwf	sendData@data^0,w,c
  1992  003322  6E07               	movwf	strlen@s^0,c
  1993  003324  0E00               	movlw	0
  1994  003326  200C               	addwfc	(sendData@data+1)^0,w,c
  1995  003328  6E08               	movwf	(strlen@s+1)^0,c
  1996  00332A  EC86  F01B         	call	_strlen	;wreg free
  1997  00332E  500F               	movf	sendData@i^0,w,c
  1998  003330  6E0D               	movwf	??_sendData^0,c
  1999  003332  6A0E               	clrf	(??_sendData+1)^0,c
  2000  003334  5007               	movf	?_strlen^0,w,c
  2001  003336  5C0D               	subwf	??_sendData^0,w,c
  2002  003338  5008               	movf	(?_strlen+1)^0,w,c
  2003  00333A  580E               	subwfb	(??_sendData+1)^0,w,c
  2004  00333C  A0D8               	btfss	status,0,c
  2005  00333E  EFA3  F019         	goto	u3871
  2006  003342  EFA5  F019         	goto	u3870
  2007  003346                     u3871:
  2008  003346  EF79  F019         	goto	l440
  2009  00334A                     u3870:
  2010  00334A  0012               	return		;funcret
  2011  00334C                     __end_of_sendData:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function _memcmp *****************
  2015 ;; Defined at:
  2016 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memcmp.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  vl              2    6[COMRAM] PTR const void 
  2019 ;;		 -> puerto(16), 
  2020 ;;  vr              2    8[COMRAM] PTR const void 
  2021 ;;		 -> STR_15(10), STR_13(13), 
  2022 ;;  n               2   10[COMRAM] unsigned int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  r               2   15[COMRAM] PTR const unsigned char 
  2025 ;;		 -> STR_15(10), STR_13(13), 
  2026 ;;  l               2   13[COMRAM] PTR const unsigned char 
  2027 ;;		 -> puerto(16), 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  2    6[COMRAM] int 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2037 ;;      Params:         6       0       0       0       0       0       0       0       0
  2038 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2039 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2040 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2041 ;;Total ram usage:       11 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    2
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_readUART
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text9
  2052  002FF0                     __ptext9:
  2053                           	callstack 0
  2054  002FF0                     _memcmp:
  2055                           	callstack 27
  2056  002FF0  C007  F00E         	movff	memcmp@vl,memcmp@l
  2057  002FF4  C008  F00F         	movff	memcmp@vl+1,memcmp@l+1
  2058  002FF8  C009  F010         	movff	memcmp@vr,memcmp@r
  2059  002FFC  C00A  F011         	movff	memcmp@vr+1,memcmp@r+1
  2060  003000  EF09  F018         	goto	l4217
  2061  003004                     l4215:
  2062  003004  060B               	decf	memcmp@n^0,f,c
  2063  003006  A0D8               	btfss	status,0,c
  2064  003008  060C               	decf	(memcmp@n+1)^0,f,c
  2065  00300A  4A0E               	infsnz	memcmp@l^0,f,c
  2066  00300C  2A0F               	incf	(memcmp@l+1)^0,f,c
  2067  00300E  4A10               	infsnz	memcmp@r^0,f,c
  2068  003010  2A11               	incf	(memcmp@r+1)^0,f,c
  2069  003012                     l4217:
  2070  003012  500B               	movf	memcmp@n^0,w,c
  2071  003014  100C               	iorwf	(memcmp@n+1)^0,w,c
  2072  003016  B4D8               	btfsc	status,2,c
  2073  003018  EF10  F018         	goto	u3881
  2074  00301C  EF12  F018         	goto	u3880
  2075  003020                     u3881:
  2076  003020  EF26  F018         	goto	l4221
  2077  003024                     u3880:
  2078  003024  C00E  FFD9         	movff	memcmp@l,fsr2l
  2079  003028  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2080  00302C  50DF               	movf	indf2,w,c
  2081  00302E  6E0D               	movwf	??_memcmp^0,c
  2082  003030  C010  FFF6         	movff	memcmp@r,tblptrl
  2083  003034  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2084  003038                     	if	0	;tblptru may be non-zero
  2085  003038                     	endif
  2086  003038                     	if	0	;tblptru may be non-zero
  2087  003038                     	endif
  2088  003038  0008               	tblrd		*
  2089  00303A  50F5               	movf	tablat,w,c
  2090  00303C  180D               	xorwf	??_memcmp^0,w,c
  2091  00303E  B4D8               	btfsc	status,2,c
  2092  003040  EF24  F018         	goto	u3891
  2093  003044  EF26  F018         	goto	u3890
  2094  003048                     u3891:
  2095  003048  EF02  F018         	goto	l4215
  2096  00304C                     u3890:
  2097  00304C                     l4221:
  2098  00304C  500B               	movf	memcmp@n^0,w,c
  2099  00304E  100C               	iorwf	(memcmp@n+1)^0,w,c
  2100  003050  A4D8               	btfss	status,2,c
  2101  003052  EF2D  F018         	goto	u3901
  2102  003056  EF2F  F018         	goto	u3900
  2103  00305A                     u3901:
  2104  00305A  EF35  F018         	goto	l4225
  2105  00305E                     u3900:
  2106  00305E  0E00               	movlw	0
  2107  003060  6E08               	movwf	(?_memcmp+1)^0,c
  2108  003062  0E00               	movlw	0
  2109  003064  6E07               	movwf	?_memcmp^0,c
  2110  003066  EF46  F018         	goto	l1129
  2111  00306A                     l4225:
  2112  00306A  C00E  FFD9         	movff	memcmp@l,fsr2l
  2113  00306E  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2114  003072  50DF               	movf	indf2,w,c
  2115  003074  6E0D               	movwf	??_memcmp^0,c
  2116  003076  C010  FFF6         	movff	memcmp@r,tblptrl
  2117  00307A  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2118  00307E                     	if	0	;tblptru may be non-zero
  2119  00307E                     	endif
  2120  00307E                     	if	0	;tblptru may be non-zero
  2121  00307E                     	endif
  2122  00307E  0008               	tblrd		*
  2123  003080  50F5               	movf	tablat,w,c
  2124  003082  5C0D               	subwf	??_memcmp^0,w,c
  2125  003084  6E07               	movwf	?_memcmp^0,c
  2126  003086  6A08               	clrf	(?_memcmp+1)^0,c
  2127  003088  A0D8               	btfss	status,0,c
  2128  00308A  0608               	decf	(?_memcmp+1)^0,f,c
  2129  00308C                     l1129:
  2130  00308C  0012               	return		;funcret
  2131  00308E                     __end_of_memcmp:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _appElemts *****************
  2135 ;; Defined at:
  2136 ;;		line 154 in file "servo.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  data            2   36[BANK0 ] PTR struct _state
  2139 ;;		 -> datos(25), 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2151 ;;      Params:         0       2       0       0       0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2154 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2155 ;;Total ram usage:        2 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:   10
  2158 ;; This function calls:
  2159 ;;		_Lcd_Out
  2160 ;;		_memset
  2161 ;;		_sprintf
  2162 ;; This function is called by:
  2163 ;;		_appStateRecolectData
  2164 ;;		_sendinformation
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text10
  2169  003284                     __ptext10:
  2170                           	callstack 0
  2171  003284                     _appElemts:
  2172                           	callstack 19
  2173  003284                     
  2174                           ;servo.c: 154: void appElemts(StateMachine *data);servo.c: 155: {;servo.c: 157:     mems
      +                          et(data->display,0,sizeof(data->display));
  2175  003284  0E07               	movlw	7
  2176  003286  0100               	movlb	0	; () banked
  2177  003288  25BA               	addwf	appElemts@data& (0+255),w,b
  2178  00328A  6E07               	movwf	memset@dest^0,c
  2179  00328C  0E00               	movlw	0
  2180  00328E  21BB               	addwfc	(appElemts@data+1)& (0+255),w,b
  2181  003290  6E08               	movwf	(memset@dest+1)^0,c
  2182  003292  0E00               	movlw	0
  2183  003294  6E0A               	movwf	(memset@c+1)^0,c
  2184  003296  0E00               	movlw	0
  2185  003298  6E09               	movwf	memset@c^0,c
  2186  00329A  0E00               	movlw	0
  2187  00329C  6E0C               	movwf	(memset@n+1)^0,c
  2188  00329E  0E10               	movlw	16
  2189  0032A0  6E0B               	movwf	memset@n^0,c
  2190  0032A2  EC6D  F010         	call	_memset	;wreg free
  2191  0032A6                     
  2192                           ;servo.c: 158:     sprintf((char *)data->display,"#:%d",(256 - (TMR0)));
  2193  0032A6  0E07               	movlw	7
  2194  0032A8  0100               	movlb	0	; () banked
  2195  0032AA  25BA               	addwf	appElemts@data& (0+255),w,b
  2196  0032AC  6FA8               	movwf	sprintf@s& (0+255),b
  2197  0032AE  0E00               	movlw	0
  2198  0032B0  21BB               	addwfc	(appElemts@data+1)& (0+255),w,b
  2199  0032B2  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  2200  0032B4  0E79               	movlw	low STR_5
  2201  0032B6  6FAA               	movwf	sprintf@fmt& (0+255),b
  2202  0032B8  0E08               	movlw	high STR_5
  2203  0032BA  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  2204  0032BC  50D6               	movf	214,w,c	;volatile
  2205  0032BE  0800               	sublw	0
  2206  0032C0  6FAC               	movwf	(?_sprintf+4)& (0+255),b
  2207  0032C2  50D7               	movf	215,w,c	;volatile
  2208  0032C4  A0D8               	btfss	status,0,c
  2209  0032C6  2AE8               	incf	wreg,f,c
  2210  0032C8  0801               	sublw	1
  2211  0032CA  6FAD               	movwf	(?_sprintf+5)& (0+255),b
  2212  0032CC  EC03  F01A         	call	_sprintf	;wreg free
  2213  0032D0                     
  2214                           ;servo.c: 159:     Lcd_Out(2,10, (int8_t*)data->display);
  2215  0032D0  0E0A               	movlw	10
  2216  0032D2  6E0A               	movwf	Lcd_Out@x^0,c
  2217  0032D4  0E07               	movlw	7
  2218  0032D6  0100               	movlb	0	; () banked
  2219  0032D8  25BA               	addwf	appElemts@data& (0+255),w,b
  2220  0032DA  6E0B               	movwf	Lcd_Out@buffer^0,c
  2221  0032DC  0E00               	movlw	0
  2222  0032DE  21BB               	addwfc	(appElemts@data+1)& (0+255),w,b
  2223  0032E0  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2224  0032E2  0E02               	movlw	2
  2225  0032E4  EC11  F015         	call	_Lcd_Out
  2226  0032E8  0012               	return		;funcret
  2227  0032EA                     __end_of_appElemts:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _appCounterStop *****************
  2231 ;; Defined at:
  2232 ;;		line 148 in file "servo.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;		None
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		None
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2246 ;;      Params:         0       0       0       0       0       0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2249 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2250 ;;Total ram usage:        0 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    2
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_appStateRecolectData
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text11
  2261  00384C                     __ptext11:
  2262                           	callstack 0
  2263  00384C                     _appCounterStop:
  2264                           	callstack 27
  2265  00384C                     
  2266                           ;servo.c: 150:     T0CONbits.TMR0ON = 0;
  2267  00384C  9ED5               	bcf	213,7,c	;volatile
  2268  00384E  0012               	return		;funcret
  2269  003850                     __end_of_appCounterStop:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function _appBat *****************
  2273 ;; Defined at:
  2274 ;;		line 73 in file "adc.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  data            2   36[BANK0 ] PTR struct _state
  2277 ;;		 -> datos(25), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2289 ;;      Params:         0       2       0       0       0       0       0       0       0
  2290 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2291 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2292 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2293 ;;Total ram usage:        8 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:   10
  2296 ;; This function calls:
  2297 ;;		_Lcd_Out
  2298 ;;		___fldiv
  2299 ;;		___flmul
  2300 ;;		___fltol
  2301 ;;		___xxtofl
  2302 ;;		_adcGetValue
  2303 ;;		_memset
  2304 ;;		_sprintf
  2305 ;; This function is called by:
  2306 ;;		_appStateRecolectData
  2307 ;;		_sendinformation
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text12
  2312  001878                     __ptext12:
  2313                           	callstack 0
  2314  001878                     _appBat:
  2315                           	callstack 19
  2316  001878                     
  2317                           ;adc.c: 73: void appBat(StateMachine *data);adc.c: 74: {;adc.c: 75:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2318  001878  0E07               	movlw	7
  2319  00187A  0100               	movlb	0	; () banked
  2320  00187C  25BA               	addwf	appBat@data& (0+255),w,b
  2321  00187E  6E07               	movwf	memset@dest^0,c
  2322  001880  0E00               	movlw	0
  2323  001882  21BB               	addwfc	(appBat@data+1)& (0+255),w,b
  2324  001884  6E08               	movwf	(memset@dest+1)^0,c
  2325  001886  0E00               	movlw	0
  2326  001888  6E0A               	movwf	(memset@c+1)^0,c
  2327  00188A  0E00               	movlw	0
  2328  00188C  6E09               	movwf	memset@c^0,c
  2329  00188E  0E00               	movlw	0
  2330  001890  6E0C               	movwf	(memset@n+1)^0,c
  2331  001892  0E10               	movlw	16
  2332  001894  6E0B               	movwf	memset@n^0,c
  2333  001896  EC6D  F010         	call	_memset	;wreg free
  2334                           
  2335                           ;adc.c: 80:     data->bat = adcGetValue(1);
  2336  00189A  0E01               	movlw	1
  2337  00189C  EC4C  F01B         	call	_adcGetValue
  2338  0018A0  0100               	movlb	0	; () banked
  2339  0018A2  EE20 F004          	lfsr	2,4
  2340  0018A6  51BA               	movf	appBat@data& (0+255),w,b
  2341  0018A8  26D9               	addwf	fsr2l,f,c
  2342  0018AA  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2343  0018AC  22DA               	addwfc	fsr2h,f,c
  2344  0018AE  C007  FFDE         	movff	?_adcGetValue,postinc2
  2345  0018B2  C008  FFDD         	movff	?_adcGetValue+1,postdec2
  2346  0018B6                     
  2347                           ; BSR set to: 0
  2348                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2349  0018B6  0E00               	movlw	0
  2350  0018B8  6E36               	movwf	___fldiv@a^0,c
  2351  0018BA  0E00               	movlw	0
  2352  0018BC  6E37               	movwf	(___fldiv@a+1)^0,c
  2353  0018BE  0E80               	movlw	128
  2354  0018C0  6E38               	movwf	(___fldiv@a+2)^0,c
  2355  0018C2  0E44               	movlw	68
  2356  0018C4  6E39               	movwf	(___fldiv@a+3)^0,c
  2357  0018C6  0E00               	movlw	0
  2358  0018C8  6E1D               	movwf	___flmul@a^0,c
  2359  0018CA  0E00               	movlw	0
  2360  0018CC  6E1E               	movwf	(___flmul@a+1)^0,c
  2361  0018CE  0EA0               	movlw	160
  2362  0018D0  6E1F               	movwf	(___flmul@a+2)^0,c
  2363  0018D2  0E40               	movlw	64
  2364  0018D4  6E20               	movwf	(___flmul@a+3)^0,c
  2365  0018D6  EE20 F004          	lfsr	2,4
  2366  0018DA  51BA               	movf	appBat@data& (0+255),w,b
  2367  0018DC  26D9               	addwf	fsr2l,f,c
  2368  0018DE  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2369  0018E0  22DA               	addwfc	fsr2h,f,c
  2370  0018E2  CFDE F0BC          	movff	postinc2,??_appBat
  2371  0018E6  CFDD F0BD          	movff	postdec2,??_appBat+1
  2372  0018EA  C0BC  F00B         	movff	??_appBat,___xxtofl@val
  2373  0018EE  C0BD  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2374  0018F2  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2375  0018F4  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2376  0018F6  0E00               	movlw	0
  2377  0018F8  EC30  F00D         	call	___xxtofl
  2378  0018FC  C00B  F019         	movff	?___xxtofl,___flmul@b
  2379  001900  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2380  001904  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2381  001908  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2382  00190C  EC40  F004         	call	___flmul	;wreg free
  2383  001910  C019  F032         	movff	?___flmul,___fldiv@b
  2384  001914  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2385  001918  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2386  00191C  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2387  001920  EC55  F006         	call	___fldiv	;wreg free
  2388  001924  C032  F0BE         	movff	?___fldiv,_appBat$2657
  2389  001928  C033  F0BF         	movff	?___fldiv+1,_appBat$2657+1
  2390  00192C  C034  F0C0         	movff	?___fldiv+2,_appBat$2657+2
  2391  001930  C035  F0C1         	movff	?___fldiv+3,_appBat$2657+3
  2392  001934                     
  2393                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2394  001934  0E00               	movlw	0
  2395  001936  6E1D               	movwf	___flmul@a^0,c
  2396  001938  0E00               	movlw	0
  2397  00193A  6E1E               	movwf	(___flmul@a+1)^0,c
  2398  00193C  0EC8               	movlw	200
  2399  00193E  6E1F               	movwf	(___flmul@a+2)^0,c
  2400  001940  0E42               	movlw	66
  2401  001942  6E20               	movwf	(___flmul@a+3)^0,c
  2402  001944  C0BE  F019         	movff	_appBat$2657,___flmul@b
  2403  001948  C0BF  F01A         	movff	_appBat$2657+1,___flmul@b+1
  2404  00194C  C0C0  F01B         	movff	_appBat$2657+2,___flmul@b+2
  2405  001950  C0C1  F01C         	movff	_appBat$2657+3,___flmul@b+3
  2406  001954  EC40  F004         	call	___flmul	;wreg free
  2407  001958  C019  F04B         	movff	?___flmul,___fltol@f1
  2408  00195C  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2409  001960  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2410  001964  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2411  001968  ECA4  F013         	call	___fltol	;wreg free
  2412  00196C  0100               	movlb	0	; () banked
  2413  00196E  EE20 F004          	lfsr	2,4
  2414  001972  51BA               	movf	appBat@data& (0+255),w,b
  2415  001974  26D9               	addwf	fsr2l,f,c
  2416  001976  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2417  001978  22DA               	addwfc	fsr2h,f,c
  2418  00197A  C04B  FFDE         	movff	?___fltol,postinc2
  2419  00197E  C04C  FFDD         	movff	?___fltol+1,postdec2
  2420  001982                     
  2421                           ; BSR set to: 0
  2422                           ;adc.c: 82:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  2423  001982  0E00               	movlw	0
  2424  001984  6E36               	movwf	___fldiv@a^0,c
  2425  001986  0E00               	movlw	0
  2426  001988  6E37               	movwf	(___fldiv@a+1)^0,c
  2427  00198A  0EFA               	movlw	250
  2428  00198C  6E38               	movwf	(___fldiv@a+2)^0,c
  2429  00198E  0E43               	movlw	67
  2430  001990  6E39               	movwf	(___fldiv@a+3)^0,c
  2431  001992  0E00               	movlw	0
  2432  001994  6E1D               	movwf	___flmul@a^0,c
  2433  001996  0E00               	movlw	0
  2434  001998  6E1E               	movwf	(___flmul@a+1)^0,c
  2435  00199A  0EC8               	movlw	200
  2436  00199C  6E1F               	movwf	(___flmul@a+2)^0,c
  2437  00199E  0E42               	movlw	66
  2438  0019A0  6E20               	movwf	(___flmul@a+3)^0,c
  2439  0019A2  EE20 F004          	lfsr	2,4
  2440  0019A6  51BA               	movf	appBat@data& (0+255),w,b
  2441  0019A8  26D9               	addwf	fsr2l,f,c
  2442  0019AA  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2443  0019AC  22DA               	addwfc	fsr2h,f,c
  2444  0019AE  CFDE F0BC          	movff	postinc2,??_appBat
  2445  0019B2  CFDD F0BD          	movff	postdec2,??_appBat+1
  2446  0019B6  C0BC  F00B         	movff	??_appBat,___xxtofl@val
  2447  0019BA  C0BD  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2448  0019BE  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2449  0019C0  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2450  0019C2  0E00               	movlw	0
  2451  0019C4  EC30  F00D         	call	___xxtofl
  2452  0019C8  C00B  F019         	movff	?___xxtofl,___flmul@b
  2453  0019CC  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2454  0019D0  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2455  0019D4  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2456  0019D8  EC40  F004         	call	___flmul	;wreg free
  2457  0019DC  C019  F032         	movff	?___flmul,___fldiv@b
  2458  0019E0  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2459  0019E4  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2460  0019E8  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2461  0019EC  EC55  F006         	call	___fldiv	;wreg free
  2462  0019F0  C032  F04B         	movff	?___fldiv,___fltol@f1
  2463  0019F4  C033  F04C         	movff	?___fldiv+1,___fltol@f1+1
  2464  0019F8  C034  F04D         	movff	?___fldiv+2,___fltol@f1+2
  2465  0019FC  C035  F04E         	movff	?___fldiv+3,___fltol@f1+3
  2466  001A00  ECA4  F013         	call	___fltol	;wreg free
  2467  001A04  0100               	movlb	0	; () banked
  2468  001A06  EE20 F004          	lfsr	2,4
  2469  001A0A  51BA               	movf	appBat@data& (0+255),w,b
  2470  001A0C  26D9               	addwf	fsr2l,f,c
  2471  001A0E  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2472  001A10  22DA               	addwfc	fsr2h,f,c
  2473  001A12  C04B  FFDE         	movff	?___fltol,postinc2
  2474  001A16  C04C  FFDD         	movff	?___fltol+1,postdec2
  2475  001A1A                     
  2476                           ; BSR set to: 0
  2477                           ;adc.c: 83:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  2478  001A1A  0E07               	movlw	7
  2479  001A1C  25BA               	addwf	appBat@data& (0+255),w,b
  2480  001A1E  6FA8               	movwf	sprintf@s& (0+255),b
  2481  001A20  0E00               	movlw	0
  2482  001A22  21BB               	addwfc	(appBat@data+1)& (0+255),w,b
  2483  001A24  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  2484  001A26  0E6A               	movlw	low STR_2
  2485  001A28  6FAA               	movwf	sprintf@fmt& (0+255),b
  2486  001A2A  0E08               	movlw	high STR_2
  2487  001A2C  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  2488  001A2E  EE20 F004          	lfsr	2,4
  2489  001A32  51BA               	movf	appBat@data& (0+255),w,b
  2490  001A34  26D9               	addwf	fsr2l,f,c
  2491  001A36  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2492  001A38  22DA               	addwfc	fsr2h,f,c
  2493  001A3A  CFDE F0AC          	movff	postinc2,?_sprintf+4
  2494  001A3E  CFDD F0AD          	movff	postdec2,?_sprintf+5
  2495  001A42  EC03  F01A         	call	_sprintf	;wreg free
  2496  001A46                     
  2497                           ;adc.c: 84:     Lcd_Out(2,0, (int8_t*)data->display);
  2498  001A46  0E00               	movlw	0
  2499  001A48  6E0A               	movwf	Lcd_Out@x^0,c
  2500  001A4A  0E07               	movlw	7
  2501  001A4C  0100               	movlb	0	; () banked
  2502  001A4E  25BA               	addwf	appBat@data& (0+255),w,b
  2503  001A50  6E0B               	movwf	Lcd_Out@buffer^0,c
  2504  001A52  0E00               	movlw	0
  2505  001A54  21BB               	addwfc	(appBat@data+1)& (0+255),w,b
  2506  001A56  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2507  001A58  0E02               	movlw	2
  2508  001A5A  EC11  F015         	call	_Lcd_Out
  2509  001A5E  0012               	return		;funcret
  2510  001A60                     __end_of_appBat:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _appADC *****************
  2514 ;; Defined at:
  2515 ;;		line 55 in file "adc.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  data            2   36[BANK0 ] PTR struct _state
  2518 ;;		 -> datos(25), 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  lm35val         4   38[BANK0 ] float 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2530 ;;      Params:         0       2       0       0       0       0       0       0       0
  2531 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2533 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2534 ;;Total ram usage:        6 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:   10
  2537 ;; This function calls:
  2538 ;;		_Lcd_Out
  2539 ;;		___awmod
  2540 ;;		___fldiv
  2541 ;;		___flmul
  2542 ;;		___fltol
  2543 ;;		___xxtofl
  2544 ;;		_adcGetValue
  2545 ;;		_memset
  2546 ;;		_sprintf
  2547 ;; This function is called by:
  2548 ;;		_appStateRecolectData
  2549 ;;		_sendinformation
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text13
  2554  001C14                     __ptext13:
  2555                           	callstack 0
  2556  001C14                     _appADC:
  2557                           	callstack 19
  2558  001C14                     
  2559                           ;adc.c: 55: void appADC(StateMachine *data);adc.c: 56: {;adc.c: 57:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2560  001C14  0E07               	movlw	7
  2561  001C16  0100               	movlb	0	; () banked
  2562  001C18  25BA               	addwf	appADC@data& (0+255),w,b
  2563  001C1A  6E07               	movwf	memset@dest^0,c
  2564  001C1C  0E00               	movlw	0
  2565  001C1E  21BB               	addwfc	(appADC@data+1)& (0+255),w,b
  2566  001C20  6E08               	movwf	(memset@dest+1)^0,c
  2567  001C22  0E00               	movlw	0
  2568  001C24  6E0A               	movwf	(memset@c+1)^0,c
  2569  001C26  0E00               	movlw	0
  2570  001C28  6E09               	movwf	memset@c^0,c
  2571  001C2A  0E00               	movlw	0
  2572  001C2C  6E0C               	movwf	(memset@n+1)^0,c
  2573  001C2E  0E10               	movlw	16
  2574  001C30  6E0B               	movwf	memset@n^0,c
  2575  001C32  EC6D  F010         	call	_memset	;wreg free
  2576  001C36                     
  2577                           ;adc.c: 58:     float lm35val = adcGetValue(0);
  2578  001C36  0E00               	movlw	0
  2579  001C38  EC4C  F01B         	call	_adcGetValue
  2580  001C3C  C007  F00B         	movff	?_adcGetValue,___xxtofl@val
  2581  001C40  C008  F00C         	movff	?_adcGetValue+1,___xxtofl@val+1
  2582  001C44  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2583  001C46  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2584  001C48  0E00               	movlw	0
  2585  001C4A  EC30  F00D         	call	___xxtofl
  2586  001C4E  C00B  F0BC         	movff	?___xxtofl,appADC@lm35val
  2587  001C52  C00C  F0BD         	movff	?___xxtofl+1,appADC@lm35val+1
  2588  001C56  C00D  F0BE         	movff	?___xxtofl+2,appADC@lm35val+2
  2589  001C5A  C00E  F0BF         	movff	?___xxtofl+3,appADC@lm35val+3
  2590  001C5E                     
  2591                           ;adc.c: 59:     lm35val = (float)((lm35val*4.88)/10.0);
  2592  001C5E  0EF6               	movlw	246
  2593  001C60  6E1D               	movwf	___flmul@a^0,c
  2594  001C62  0E28               	movlw	40
  2595  001C64  6E1E               	movwf	(___flmul@a+1)^0,c
  2596  001C66  0E9C               	movlw	156
  2597  001C68  6E1F               	movwf	(___flmul@a+2)^0,c
  2598  001C6A  0E40               	movlw	64
  2599  001C6C  6E20               	movwf	(___flmul@a+3)^0,c
  2600  001C6E  C0BC  F019         	movff	appADC@lm35val,___flmul@b
  2601  001C72  C0BD  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2602  001C76  C0BE  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2603  001C7A  C0BF  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2604  001C7E  EC40  F004         	call	___flmul	;wreg free
  2605  001C82  C019  F032         	movff	?___flmul,___fldiv@b
  2606  001C86  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2607  001C8A  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2608  001C8E  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2609  001C92  0E00               	movlw	0
  2610  001C94  6E36               	movwf	___fldiv@a^0,c
  2611  001C96  0E00               	movlw	0
  2612  001C98  6E37               	movwf	(___fldiv@a+1)^0,c
  2613  001C9A  0E20               	movlw	32
  2614  001C9C  6E38               	movwf	(___fldiv@a+2)^0,c
  2615  001C9E  0E41               	movlw	65
  2616  001CA0  6E39               	movwf	(___fldiv@a+3)^0,c
  2617  001CA2  EC55  F006         	call	___fldiv	;wreg free
  2618  001CA6  C032  F0BC         	movff	?___fldiv,appADC@lm35val
  2619  001CAA  C033  F0BD         	movff	?___fldiv+1,appADC@lm35val+1
  2620  001CAE  C034  F0BE         	movff	?___fldiv+2,appADC@lm35val+2
  2621  001CB2  C035  F0BF         	movff	?___fldiv+3,appADC@lm35val+3
  2622  001CB6                     
  2623                           ;adc.c: 61:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  2624  001CB6  0E07               	movlw	7
  2625  001CB8  0100               	movlb	0	; () banked
  2626  001CBA  25BA               	addwf	appADC@data& (0+255),w,b
  2627  001CBC  6FA8               	movwf	sprintf@s& (0+255),b
  2628  001CBE  0E00               	movlw	0
  2629  001CC0  21BB               	addwfc	(appADC@data+1)& (0+255),w,b
  2630  001CC2  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  2631  001CC4  0E20               	movlw	low STR_1
  2632  001CC6  6FAA               	movwf	sprintf@fmt& (0+255),b
  2633  001CC8  0E08               	movlw	high STR_1
  2634  001CCA  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  2635  001CCC  C0BC  F04B         	movff	appADC@lm35val,___fltol@f1
  2636  001CD0  C0BD  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2637  001CD4  C0BE  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2638  001CD8  C0BF  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2639  001CDC  ECA4  F013         	call	___fltol	;wreg free
  2640  001CE0  504B               	movf	?___fltol^0,w,c
  2641  001CE2  0100               	movlb	0	; () banked
  2642  001CE4  6FAC               	movwf	(?_sprintf+4)& (0+255),b
  2643  001CE6  6BAD               	clrf	(?_sprintf+5)& (0+255),b
  2644  001CE8  0E00               	movlw	0
  2645  001CEA  6E1D               	movwf	___flmul@a^0,c
  2646  001CEC  0E00               	movlw	0
  2647  001CEE  6E1E               	movwf	(___flmul@a+1)^0,c
  2648  001CF0  0EC8               	movlw	200
  2649  001CF2  6E1F               	movwf	(___flmul@a+2)^0,c
  2650  001CF4  0E42               	movlw	66
  2651  001CF6  6E20               	movwf	(___flmul@a+3)^0,c
  2652  001CF8  C0BC  F019         	movff	appADC@lm35val,___flmul@b
  2653  001CFC  C0BD  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2654  001D00  C0BE  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2655  001D04  C0BF  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2656  001D08  EC40  F004         	call	___flmul	;wreg free
  2657  001D0C  C019  F04B         	movff	?___flmul,___fltol@f1
  2658  001D10  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2659  001D14  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2660  001D18  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2661  001D1C  ECA4  F013         	call	___fltol	;wreg free
  2662  001D20  504B               	movf	?___fltol^0,w,c
  2663  001D22  0100               	movlb	0	; () banked
  2664  001D24  6F98               	movwf	___awmod@dividend& (0+255),b
  2665  001D26  6B99               	clrf	(___awmod@dividend+1)& (0+255),b
  2666  001D28  0E00               	movlw	0
  2667  001D2A  6F9B               	movwf	(___awmod@divisor+1)& (0+255),b
  2668  001D2C  0E64               	movlw	100
  2669  001D2E  6F9A               	movwf	___awmod@divisor& (0+255),b
  2670  001D30  ECFB  F016         	call	___awmod	;wreg free
  2671  001D34  0100               	movlb	0	; () banked
  2672  001D36  5198               	movf	?___awmod& (0+255),w,b
  2673  001D38  6FAE               	movwf	(?_sprintf+6)& (0+255),b
  2674  001D3A  6BAF               	clrf	(?_sprintf+7)& (0+255),b
  2675  001D3C  EC03  F01A         	call	_sprintf	;wreg free
  2676  001D40                     
  2677                           ;adc.c: 62:     Lcd_Out(1,0, (int8_t*)data->display);
  2678  001D40  0E00               	movlw	0
  2679  001D42  6E0A               	movwf	Lcd_Out@x^0,c
  2680  001D44  0E07               	movlw	7
  2681  001D46  0100               	movlb	0	; () banked
  2682  001D48  25BA               	addwf	appADC@data& (0+255),w,b
  2683  001D4A  6E0B               	movwf	Lcd_Out@buffer^0,c
  2684  001D4C  0E00               	movlw	0
  2685  001D4E  21BB               	addwfc	(appADC@data+1)& (0+255),w,b
  2686  001D50  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2687  001D52  0E01               	movlw	1
  2688  001D54  EC11  F015         	call	_Lcd_Out
  2689                           
  2690                           ;adc.c: 63:     if(((int)lm35val < 2))
  2691  001D58  C0BC  F04B         	movff	appADC@lm35val,___fltol@f1
  2692  001D5C  C0BD  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2693  001D60  C0BE  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2694  001D64  C0BF  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2695  001D68  ECA4  F013         	call	___fltol	;wreg free
  2696  001D6C  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2697  001D6E  EFC4  F00E         	goto	u4270
  2698  001D72  504C               	movf	(?___fltol+1)^0,w,c
  2699  001D74  E107               	bnz	u4271
  2700  001D76  0E02               	movlw	2
  2701  001D78  5C4B               	subwf	?___fltol^0,w,c
  2702  001D7A  B0D8               	btfsc	status,0,c
  2703  001D7C  EFC2  F00E         	goto	u4271
  2704  001D80  EFC4  F00E         	goto	u4270
  2705  001D84                     u4271:
  2706  001D84  EFC7  F00E         	goto	l4699
  2707  001D88                     u4270:
  2708  001D88                     
  2709                           ;adc.c: 64:     {;adc.c: 65:         LATCbits.LATC1 = 0;
  2710  001D88  928B               	bcf	139,1,c	;volatile
  2711                           
  2712                           ;adc.c: 66:     }
  2713  001D8A  EFE0  F00E         	goto	l39
  2714  001D8E                     l4699:
  2715  001D8E  C0BC  F04B         	movff	appADC@lm35val,___fltol@f1
  2716  001D92  C0BD  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2717  001D96  C0BE  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2718  001D9A  C0BF  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2719  001D9E  ECA4  F013         	call	___fltol	;wreg free
  2720  001DA2  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2721  001DA4  EFDD  F00E         	goto	u4281
  2722  001DA8  504C               	movf	(?___fltol+1)^0,w,c
  2723  001DAA  E109               	bnz	u4280
  2724  001DAC  0E07               	movlw	7
  2725  001DAE  5C4B               	subwf	?___fltol^0,w,c
  2726  001DB0  A0D8               	btfss	status,0,c
  2727  001DB2  EFDD  F00E         	goto	u4281
  2728  001DB6  EFDF  F00E         	goto	u4280
  2729  001DBA                     u4281:
  2730  001DBA  EFE0  F00E         	goto	l39
  2731  001DBE                     u4280:
  2732  001DBE                     
  2733                           ;adc.c: 68:     {;adc.c: 69:         LATCbits.LATC1 = 1;
  2734  001DBE  828B               	bsf	139,1,c	;volatile
  2735  001DC0                     l39:
  2736  001DC0  0012               	return		;funcret
  2737  001DC2                     __end_of_appADC:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _adcGetValue *****************
  2741 ;; Defined at:
  2742 ;;		line 44 in file "adc.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  PinADC          1    wreg     unsigned char 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  PinADC          1    9[COMRAM] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  2    6[COMRAM] unsigned short 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2756 ;;      Params:         2       0       0       0       0       0       0       0       0
  2757 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2758 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2759 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2760 ;;Total ram usage:        4 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    2
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_appADC
  2767 ;;		_appBat
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text14
  2772  003698                     __ptext14:
  2773                           	callstack 0
  2774  003698                     _adcGetValue:
  2775                           	callstack 26
  2776                           
  2777                           ;incstack = 0
  2778                           ;adcGetValue@PinADC stored from wreg
  2779  003698  6E0A               	movwf	adcGetValue@PinADC^0,c
  2780  00369A                     
  2781                           ;adc.c: 44: uint16_t adcGetValue(uint8_t PinADC);adc.c: 45: {;adc.c: 46:     ADCON0bits.
      +                          CHS = PinADC;
  2782  00369A  C00A  F009         	movff	adcGetValue@PinADC,??_adcGetValue
  2783  00369E  4609               	rlncf	??_adcGetValue^0,f,c
  2784  0036A0  4609               	rlncf	??_adcGetValue^0,f,c
  2785  0036A2  50C2               	movf	194,w,c	;volatile
  2786  0036A4  1809               	xorwf	??_adcGetValue^0,w,c
  2787  0036A6  0BC3               	andlw	-61
  2788  0036A8  1809               	xorwf	??_adcGetValue^0,w,c
  2789  0036AA  6EC2               	movwf	194,c	;volatile
  2790  0036AC                     
  2791                           ;adc.c: 47:     _delay((unsigned long)((2)*(12000000/4000.0)));
  2792  0036AC  0E08               	movlw	8
  2793  0036AE  6E09               	movwf	??_adcGetValue^0,c
  2794  0036B0  0ECA               	movlw	202
  2795  0036B2                     u4547:
  2796  0036B2  2EE8               	decfsz	wreg,f,c
  2797  0036B4  D7FE               	bra	u4547
  2798  0036B6  2E09               	decfsz	??_adcGetValue^0,f,c
  2799  0036B8  D7FC               	bra	u4547
  2800  0036BA                     
  2801                           ;adc.c: 48:     GO_nDONE = 1;
  2802  0036BA  82C2               	bsf	4034,1,c	;volatile
  2803  0036BC                     l30:
  2804                           
  2805                           ;adc.c: 49:     while(ADCON0bits.GO_DONE)
  2806  0036BC  B2C2               	btfsc	194,1,c	;volatile
  2807  0036BE  EF63  F01B         	goto	u2821
  2808  0036C2  EF65  F01B         	goto	u2820
  2809  0036C6                     u2821:
  2810  0036C6  EF5E  F01B         	goto	l30
  2811  0036CA                     u2820:
  2812  0036CA                     
  2813                           ;adc.c: 52:     return ADRES;
  2814  0036CA  CFC3 F007          	movff	4035,?_adcGetValue	;volatile
  2815  0036CE  CFC4 F008          	movff	4036,?_adcGetValue+1	;volatile
  2816  0036D2  0012               	return		;funcret
  2817  0036D4                     __end_of_adcGetValue:
  2818                           	callstack 0
  2819                           
  2820 ;; *************** function ___xxtofl *****************
  2821 ;; Defined at:
  2822 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  sign            1    wreg     unsigned char 
  2825 ;;  val             4   10[COMRAM] long 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  sign            1   18[COMRAM] unsigned char 
  2828 ;;  arg             4   20[COMRAM] unsigned long 
  2829 ;;  exp             1   19[COMRAM] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  4   10[COMRAM] unsigned char 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2839 ;;      Params:         4       0       0       0       0       0       0       0       0
  2840 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2841 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2842 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2843 ;;Total ram usage:       14 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    2
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_appADC
  2850 ;;		_appBat
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text15
  2855  001A60                     __ptext15:
  2856                           	callstack 0
  2857  001A60                     ___xxtofl:
  2858                           	callstack 26
  2859                           
  2860                           ;incstack = 0
  2861                           ;___xxtofl@sign stored from wreg
  2862  001A60  6E13               	movwf	___xxtofl@sign^0,c
  2863  001A62  5013               	movf	___xxtofl@sign^0,w,c
  2864  001A64  B4D8               	btfsc	status,2,c
  2865  001A66  EF37  F00D         	goto	u3691
  2866  001A6A  EF39  F00D         	goto	u3690
  2867  001A6E                     u3691:
  2868  001A6E  EF5B  F00D         	goto	l1101
  2869  001A72                     u3690:
  2870  001A72  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  2871  001A74  EF40  F00D         	goto	u3700
  2872  001A78  EF3E  F00D         	goto	u3701
  2873  001A7C                     u3701:
  2874  001A7C  EF5B  F00D         	goto	l1101
  2875  001A80                     u3700:
  2876  001A80  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  2877  001A84  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  2878  001A88  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  2879  001A8C  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  2880  001A90  1E0F               	comf	??___xxtofl^0,f,c
  2881  001A92  1E10               	comf	(??___xxtofl+1)^0,f,c
  2882  001A94  1E11               	comf	(??___xxtofl+2)^0,f,c
  2883  001A96  1E12               	comf	(??___xxtofl+3)^0,f,c
  2884  001A98  2A0F               	incf	??___xxtofl^0,f,c
  2885  001A9A  0E00               	movlw	0
  2886  001A9C  2210               	addwfc	(??___xxtofl+1)^0,f,c
  2887  001A9E  2211               	addwfc	(??___xxtofl+2)^0,f,c
  2888  001AA0  2212               	addwfc	(??___xxtofl+3)^0,f,c
  2889  001AA2  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  2890  001AA6  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  2891  001AAA  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  2892  001AAE  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  2893  001AB2  EF63  F00D         	goto	l3997
  2894  001AB6                     l1101:
  2895  001AB6  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  2896  001ABA  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2897  001ABE  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2898  001AC2  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2899  001AC6                     l3997:
  2900  001AC6  500B               	movf	___xxtofl@val^0,w,c
  2901  001AC8  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  2902  001ACA  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  2903  001ACC  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  2904  001ACE  A4D8               	btfss	status,2,c
  2905  001AD0  EF6C  F00D         	goto	u3711
  2906  001AD4  EF6E  F00D         	goto	u3710
  2907  001AD8                     u3711:
  2908  001AD8  EF78  F00D         	goto	l4003
  2909  001ADC                     u3710:
  2910  001ADC  0E00               	movlw	0
  2911  001ADE  6E0B               	movwf	?___xxtofl^0,c
  2912  001AE0  0E00               	movlw	0
  2913  001AE2  6E0C               	movwf	(?___xxtofl+1)^0,c
  2914  001AE4  0E00               	movlw	0
  2915  001AE6  6E0D               	movwf	(?___xxtofl+2)^0,c
  2916  001AE8  0E00               	movlw	0
  2917  001AEA  6E0E               	movwf	(?___xxtofl+3)^0,c
  2918  001AEC  EF09  F00E         	goto	l1104
  2919  001AF0                     l4003:
  2920  001AF0  0E96               	movlw	150
  2921  001AF2  6E14               	movwf	___xxtofl@exp^0,c
  2922  001AF4  EF82  F00D         	goto	l4007
  2923  001AF8                     l4005:
  2924  001AF8  2A14               	incf	___xxtofl@exp^0,f,c
  2925  001AFA  90D8               	bcf	status,0,c
  2926  001AFC  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2927  001AFE  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2928  001B00  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2929  001B02  3215               	rrcf	___xxtofl@arg^0,f,c
  2930  001B04                     l4007:
  2931  001B04  0E00               	movlw	0
  2932  001B06  1415               	andwf	___xxtofl@arg^0,w,c
  2933  001B08  6E0F               	movwf	??___xxtofl^0,c
  2934  001B0A  0E00               	movlw	0
  2935  001B0C  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2936  001B0E  6E10               	movwf	(??___xxtofl+1)^0,c
  2937  001B10  0E00               	movlw	0
  2938  001B12  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2939  001B14  6E11               	movwf	(??___xxtofl+2)^0,c
  2940  001B16  0EFE               	movlw	254
  2941  001B18  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2942  001B1A  6E12               	movwf	(??___xxtofl+3)^0,c
  2943  001B1C  500F               	movf	??___xxtofl^0,w,c
  2944  001B1E  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2945  001B20  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2946  001B22  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2947  001B24  A4D8               	btfss	status,2,c
  2948  001B26  EF97  F00D         	goto	u3721
  2949  001B2A  EF99  F00D         	goto	u3720
  2950  001B2E                     u3721:
  2951  001B2E  EF7C  F00D         	goto	l4005
  2952  001B32                     u3720:
  2953  001B32  EFA7  F00D         	goto	l1108
  2954  001B36                     l4009:
  2955  001B36  2A14               	incf	___xxtofl@exp^0,f,c
  2956  001B38  0E01               	movlw	1
  2957  001B3A  2615               	addwf	___xxtofl@arg^0,f,c
  2958  001B3C  0E00               	movlw	0
  2959  001B3E  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  2960  001B40  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  2961  001B42  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  2962  001B44  90D8               	bcf	status,0,c
  2963  001B46  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2964  001B48  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2965  001B4A  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2966  001B4C  3215               	rrcf	___xxtofl@arg^0,f,c
  2967  001B4E                     l1108:
  2968  001B4E  0E00               	movlw	0
  2969  001B50  1415               	andwf	___xxtofl@arg^0,w,c
  2970  001B52  6E0F               	movwf	??___xxtofl^0,c
  2971  001B54  0E00               	movlw	0
  2972  001B56  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2973  001B58  6E10               	movwf	(??___xxtofl+1)^0,c
  2974  001B5A  0E00               	movlw	0
  2975  001B5C  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2976  001B5E  6E11               	movwf	(??___xxtofl+2)^0,c
  2977  001B60  0EFF               	movlw	255
  2978  001B62  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2979  001B64  6E12               	movwf	(??___xxtofl+3)^0,c
  2980  001B66  500F               	movf	??___xxtofl^0,w,c
  2981  001B68  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2982  001B6A  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2983  001B6C  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2984  001B6E  A4D8               	btfss	status,2,c
  2985  001B70  EFBC  F00D         	goto	u3731
  2986  001B74  EFBE  F00D         	goto	u3730
  2987  001B78                     u3731:
  2988  001B78  EF9B  F00D         	goto	l4009
  2989  001B7C                     u3730:
  2990  001B7C  EFC6  F00D         	goto	l4017
  2991  001B80                     l4015:
  2992  001B80  0614               	decf	___xxtofl@exp^0,f,c
  2993  001B82  90D8               	bcf	status,0,c
  2994  001B84  3615               	rlcf	___xxtofl@arg^0,f,c
  2995  001B86  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  2996  001B88  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  2997  001B8A  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  2998  001B8C                     l4017:
  2999  001B8C  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  3000  001B8E  EFCB  F00D         	goto	u3741
  3001  001B92  EFCD  F00D         	goto	u3740
  3002  001B96                     u3741:
  3003  001B96  EFD5  F00D         	goto	l1115
  3004  001B9A                     u3740:
  3005  001B9A  0E02               	movlw	2
  3006  001B9C  6014               	cpfslt	___xxtofl@exp^0,c
  3007  001B9E  EFD3  F00D         	goto	u3751
  3008  001BA2  EFD5  F00D         	goto	u3750
  3009  001BA6                     u3751:
  3010  001BA6  EFC0  F00D         	goto	l4015
  3011  001BAA                     u3750:
  3012  001BAA                     l1115:
  3013  001BAA  B014               	btfsc	___xxtofl@exp^0,0,c
  3014  001BAC  EFDA  F00D         	goto	u3761
  3015  001BB0  EFDC  F00D         	goto	u3760
  3016  001BB4                     u3761:
  3017  001BB4  EFDD  F00D         	goto	l4023
  3018  001BB8                     u3760:
  3019  001BB8  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  3020  001BBA                     l4023:
  3021  001BBA  90D8               	bcf	status,0,c
  3022  001BBC  3214               	rrcf	___xxtofl@exp^0,f,c
  3023  001BBE  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  3024  001BC2  6A10               	clrf	(??___xxtofl+1)^0,c
  3025  001BC4  6A11               	clrf	(??___xxtofl+2)^0,c
  3026  001BC6  6A12               	clrf	(??___xxtofl+3)^0,c
  3027  001BC8  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  3028  001BCC  6A11               	clrf	(??___xxtofl+2)^0,c
  3029  001BCE  6A10               	clrf	(??___xxtofl+1)^0,c
  3030  001BD0  6A0F               	clrf	??___xxtofl^0,c
  3031  001BD2  500F               	movf	??___xxtofl^0,w,c
  3032  001BD4  1215               	iorwf	___xxtofl@arg^0,f,c
  3033  001BD6  5010               	movf	(??___xxtofl+1)^0,w,c
  3034  001BD8  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  3035  001BDA  5011               	movf	(??___xxtofl+2)^0,w,c
  3036  001BDC  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  3037  001BDE  5012               	movf	(??___xxtofl+3)^0,w,c
  3038  001BE0  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  3039  001BE2  5013               	movf	___xxtofl@sign^0,w,c
  3040  001BE4  B4D8               	btfsc	status,2,c
  3041  001BE6  EFF7  F00D         	goto	u3771
  3042  001BEA  EFF9  F00D         	goto	u3770
  3043  001BEE                     u3771:
  3044  001BEE  EF01  F00E         	goto	l4033
  3045  001BF2                     u3770:
  3046  001BF2  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  3047  001BF4  EF00  F00E         	goto	u3780
  3048  001BF8  EFFE  F00D         	goto	u3781
  3049  001BFC                     u3781:
  3050  001BFC  EF01  F00E         	goto	l4033
  3051  001C00                     u3780:
  3052  001C00  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  3053  001C02                     l4033:
  3054  001C02  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  3055  001C06  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  3056  001C0A  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  3057  001C0E  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  3058  001C12                     l1104:
  3059  001C12  0012               	return		;funcret
  3060  001C14                     __end_of___xxtofl:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function ___fltol *****************
  3064 ;; Defined at:
  3065 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  f1              4   74[COMRAM] unsigned char 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  exp1            1    1[BANK0 ] unsigned char 
  3070 ;;  sign1           1    0[BANK0 ] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  4   74[COMRAM] long 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3080 ;;      Params:         4       0       0       0       0       0       0       0       0
  3081 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3082 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3083 ;;      Totals:         8       2       0       0       0       0       0       0       0
  3084 ;;Total ram usage:       10 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    2
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_appADC
  3091 ;;		_appBat
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text16
  3096  002748                     __ptext16:
  3097                           	callstack 0
  3098  002748                     ___fltol:
  3099                           	callstack 26
  3100  002748  344D               	rlcf	(___fltol@f1+2)^0,w,c
  3101  00274A  344E               	rlcf	(___fltol@f1+3)^0,w,c
  3102  00274C  0100               	movlb	0	; () banked
  3103  00274E  6F97               	movwf	___fltol@exp1& (0+255),b
  3104  002750  5197               	movf	___fltol@exp1& (0+255),w,b
  3105  002752  A4D8               	btfss	status,2,c
  3106  002754  EFAE  F013         	goto	u4201
  3107  002758  EFB0  F013         	goto	u4200
  3108  00275C                     u4201:
  3109  00275C  EFBA  F013         	goto	l4649
  3110  002760                     u4200:
  3111  002760                     l4645:
  3112                           
  3113                           ; BSR set to: 0
  3114  002760  0E00               	movlw	0
  3115  002762  6E4B               	movwf	?___fltol^0,c
  3116  002764  0E00               	movlw	0
  3117  002766  6E4C               	movwf	(?___fltol+1)^0,c
  3118  002768  0E00               	movlw	0
  3119  00276A  6E4D               	movwf	(?___fltol+2)^0,c
  3120  00276C  0E00               	movlw	0
  3121  00276E  6E4E               	movwf	(?___fltol+3)^0,c
  3122  002770  EF27  F014         	goto	l743
  3123  002774                     l4649:
  3124                           
  3125                           ; BSR set to: 0
  3126  002774  C04B  F04F         	movff	___fltol@f1,??___fltol
  3127  002778  C04C  F050         	movff	___fltol@f1+1,??___fltol+1
  3128  00277C  C04D  F051         	movff	___fltol@f1+2,??___fltol+2
  3129  002780  C04E  F052         	movff	___fltol@f1+3,??___fltol+3
  3130  002784  0E20               	movlw	32
  3131  002786  EFCA  F013         	goto	u4210
  3132  00278A                     u4215:
  3133  00278A  90D8               	bcf	status,0,c
  3134  00278C  3252               	rrcf	(??___fltol+3)^0,f,c
  3135  00278E  3251               	rrcf	(??___fltol+2)^0,f,c
  3136  002790  3250               	rrcf	(??___fltol+1)^0,f,c
  3137  002792  324F               	rrcf	??___fltol^0,f,c
  3138  002794                     u4210:
  3139  002794  2EE8               	decfsz	wreg,f,c
  3140  002796  EFC5  F013         	goto	u4215
  3141  00279A  504F               	movf	??___fltol^0,w,c
  3142  00279C  6F96               	movwf	___fltol@sign1& (0+255),b
  3143  00279E                     
  3144                           ; BSR set to: 0
  3145  00279E  8E4D               	bsf	(___fltol@f1+2)^0,7,c
  3146  0027A0                     
  3147                           ; BSR set to: 0
  3148  0027A0  0EFF               	movlw	255
  3149  0027A2  164B               	andwf	___fltol@f1^0,f,c
  3150  0027A4  0EFF               	movlw	255
  3151  0027A6  164C               	andwf	(___fltol@f1+1)^0,f,c
  3152  0027A8  0EFF               	movlw	255
  3153  0027AA  164D               	andwf	(___fltol@f1+2)^0,f,c
  3154  0027AC  0E00               	movlw	0
  3155  0027AE  164E               	andwf	(___fltol@f1+3)^0,f,c
  3156  0027B0                     
  3157                           ; BSR set to: 0
  3158  0027B0  0E96               	movlw	150
  3159  0027B2  5F97               	subwf	___fltol@exp1& (0+255),f,b
  3160  0027B4                     
  3161                           ; BSR set to: 0
  3162  0027B4  BF97               	btfsc	___fltol@exp1& (0+255),7,b
  3163  0027B6  EFE1  F013         	goto	u4220
  3164  0027BA  EFDF  F013         	goto	u4221
  3165  0027BE                     u4221:
  3166  0027BE  EFF7  F013         	goto	l4669
  3167  0027C2                     u4220:
  3168  0027C2                     
  3169                           ; BSR set to: 0
  3170  0027C2  5197               	movf	___fltol@exp1& (0+255),w,b
  3171  0027C4  0A80               	xorlw	128
  3172  0027C6  0F97               	addlw	151
  3173  0027C8  B0D8               	btfsc	status,0,c
  3174  0027CA  EFE9  F013         	goto	u4231
  3175  0027CE  EFEB  F013         	goto	u4230
  3176  0027D2                     u4231:
  3177  0027D2  EFED  F013         	goto	l4665
  3178  0027D6                     u4230:
  3179  0027D6  EFB0  F013         	goto	l4645
  3180  0027DA                     l4665:
  3181                           
  3182                           ; BSR set to: 0
  3183  0027DA  90D8               	bcf	status,0,c
  3184  0027DC  324E               	rrcf	(___fltol@f1+3)^0,f,c
  3185  0027DE  324D               	rrcf	(___fltol@f1+2)^0,f,c
  3186  0027E0  324C               	rrcf	(___fltol@f1+1)^0,f,c
  3187  0027E2  324B               	rrcf	___fltol@f1^0,f,c
  3188  0027E4                     
  3189                           ; BSR set to: 0
  3190  0027E4  3F97               	incfsz	___fltol@exp1& (0+255),f,b
  3191  0027E6  EFED  F013         	goto	l4665
  3192  0027EA  EF0F  F014         	goto	l4679
  3193  0027EE                     l4669:
  3194                           
  3195                           ; BSR set to: 0
  3196  0027EE  0E1F               	movlw	31
  3197  0027F0  6597               	cpfsgt	___fltol@exp1& (0+255),b
  3198  0027F2  EFFD  F013         	goto	u4241
  3199  0027F6  EFFF  F013         	goto	u4240
  3200  0027FA                     u4241:
  3201  0027FA  EF07  F014         	goto	l4677
  3202  0027FE                     u4240:
  3203  0027FE  EFB0  F013         	goto	l4645
  3204  002802                     l4675:
  3205                           
  3206                           ; BSR set to: 0
  3207  002802  90D8               	bcf	status,0,c
  3208  002804  364B               	rlcf	___fltol@f1^0,f,c
  3209  002806  364C               	rlcf	(___fltol@f1+1)^0,f,c
  3210  002808  364D               	rlcf	(___fltol@f1+2)^0,f,c
  3211  00280A  364E               	rlcf	(___fltol@f1+3)^0,f,c
  3212  00280C  0797               	decf	___fltol@exp1& (0+255),f,b
  3213  00280E                     l4677:
  3214                           
  3215                           ; BSR set to: 0
  3216  00280E  5197               	movf	___fltol@exp1& (0+255),w,b
  3217  002810  A4D8               	btfss	status,2,c
  3218  002812  EF0D  F014         	goto	u4251
  3219  002816  EF0F  F014         	goto	u4250
  3220  00281A                     u4251:
  3221  00281A  EF01  F014         	goto	l4675
  3222  00281E                     u4250:
  3223  00281E                     l4679:
  3224                           
  3225                           ; BSR set to: 0
  3226  00281E  5196               	movf	___fltol@sign1& (0+255),w,b
  3227  002820  B4D8               	btfsc	status,2,c
  3228  002822  EF15  F014         	goto	u4261
  3229  002826  EF17  F014         	goto	u4260
  3230  00282A                     u4261:
  3231  00282A  EF1F  F014         	goto	l4683
  3232  00282E                     u4260:
  3233  00282E                     
  3234                           ; BSR set to: 0
  3235  00282E  1E4E               	comf	(___fltol@f1+3)^0,f,c
  3236  002830  1E4D               	comf	(___fltol@f1+2)^0,f,c
  3237  002832  1E4C               	comf	(___fltol@f1+1)^0,f,c
  3238  002834  6C4B               	negf	___fltol@f1^0,c
  3239  002836  0E00               	movlw	0
  3240  002838  224C               	addwfc	(___fltol@f1+1)^0,f,c
  3241  00283A  224D               	addwfc	(___fltol@f1+2)^0,f,c
  3242  00283C  224E               	addwfc	(___fltol@f1+3)^0,f,c
  3243  00283E                     l4683:
  3244                           
  3245                           ; BSR set to: 0
  3246  00283E  C04B  F04B         	movff	___fltol@f1,?___fltol
  3247  002842  C04C  F04C         	movff	___fltol@f1+1,?___fltol+1
  3248  002846  C04D  F04D         	movff	___fltol@f1+2,?___fltol+2
  3249  00284A  C04E  F04E         	movff	___fltol@f1+3,?___fltol+3
  3250  00284E                     l743:
  3251                           
  3252                           ; BSR set to: 0
  3253  00284E  0012               	return		;funcret
  3254  002850                     __end_of___fltol:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function ___flmul *****************
  3258 ;; Defined at:
  3259 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  b               4   24[COMRAM] long 
  3262 ;;  a               4   28[COMRAM] long 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  prod            4   43[COMRAM] struct .
  3265 ;;  grs             4   37[COMRAM] unsigned long 
  3266 ;;  temp            2   47[COMRAM] struct .
  3267 ;;  bexp            1   42[COMRAM] unsigned char 
  3268 ;;  aexp            1   41[COMRAM] unsigned char 
  3269 ;;  sign            1   36[COMRAM] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  4   24[COMRAM] unsigned char 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0, prodl, prodh
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3279 ;;      Params:         8       0       0       0       0       0       0       0       0
  3280 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3281 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3282 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3283 ;;Total ram usage:       25 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    2
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_appADC
  3290 ;;		_appBat
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text17
  3295  000880                     __ptext17:
  3296                           	callstack 0
  3297  000880                     ___flmul:
  3298                           	callstack 26
  3299  000880  501C               	movf	(___flmul@b+3)^0,w,c
  3300  000882  0B80               	andlw	128
  3301  000884  6E25               	movwf	___flmul@sign^0,c
  3302  000886  501C               	movf	(___flmul@b+3)^0,w,c
  3303  000888  241C               	addwf	(___flmul@b+3)^0,w,c
  3304  00088A  6E2B               	movwf	___flmul@bexp^0,c
  3305  00088C  AE1B               	btfss	(___flmul@b+2)^0,7,c
  3306  00088E  EF4B  F004         	goto	u3371
  3307  000892  EF4D  F004         	goto	u3370
  3308  000896                     u3371:
  3309  000896  EF4E  F004         	goto	l3787
  3310  00089A                     u3370:
  3311  00089A  802B               	bsf	___flmul@bexp^0,0,c
  3312  00089C                     l3787:
  3313  00089C  502B               	movf	___flmul@bexp^0,w,c
  3314  00089E  B4D8               	btfsc	status,2,c
  3315  0008A0  EF54  F004         	goto	u3381
  3316  0008A4  EF56  F004         	goto	u3380
  3317  0008A8                     u3381:
  3318  0008A8  EF69  F004         	goto	l3795
  3319  0008AC                     u3380:
  3320  0008AC  282B               	incf	___flmul@bexp^0,w,c
  3321  0008AE  A4D8               	btfss	status,2,c
  3322  0008B0  EF5C  F004         	goto	u3391
  3323  0008B4  EF5E  F004         	goto	u3390
  3324  0008B8                     u3391:
  3325  0008B8  EF66  F004         	goto	l3793
  3326  0008BC                     u3390:
  3327  0008BC  0E00               	movlw	0
  3328  0008BE  6E19               	movwf	___flmul@b^0,c
  3329  0008C0  0E00               	movlw	0
  3330  0008C2  6E1A               	movwf	(___flmul@b+1)^0,c
  3331  0008C4  0E00               	movlw	0
  3332  0008C6  6E1B               	movwf	(___flmul@b+2)^0,c
  3333  0008C8  0E00               	movlw	0
  3334  0008CA  6E1C               	movwf	(___flmul@b+3)^0,c
  3335  0008CC                     l3793:
  3336  0008CC  8E1B               	bsf	(___flmul@b+2)^0,7,c
  3337  0008CE  EF71  F004         	goto	l3797
  3338  0008D2                     l3795:
  3339  0008D2  0E00               	movlw	0
  3340  0008D4  6E19               	movwf	___flmul@b^0,c
  3341  0008D6  0E00               	movlw	0
  3342  0008D8  6E1A               	movwf	(___flmul@b+1)^0,c
  3343  0008DA  0E00               	movlw	0
  3344  0008DC  6E1B               	movwf	(___flmul@b+2)^0,c
  3345  0008DE  0E00               	movlw	0
  3346  0008E0  6E1C               	movwf	(___flmul@b+3)^0,c
  3347  0008E2                     l3797:
  3348  0008E2  5020               	movf	(___flmul@a+3)^0,w,c
  3349  0008E4  0B80               	andlw	128
  3350  0008E6  1A25               	xorwf	___flmul@sign^0,f,c
  3351  0008E8  5020               	movf	(___flmul@a+3)^0,w,c
  3352  0008EA  2420               	addwf	(___flmul@a+3)^0,w,c
  3353  0008EC  6E2A               	movwf	___flmul@aexp^0,c
  3354  0008EE  AE1F               	btfss	(___flmul@a+2)^0,7,c
  3355  0008F0  EF7C  F004         	goto	u3401
  3356  0008F4  EF7E  F004         	goto	u3400
  3357  0008F8                     u3401:
  3358  0008F8  EF7F  F004         	goto	l3805
  3359  0008FC                     u3400:
  3360  0008FC  802A               	bsf	___flmul@aexp^0,0,c
  3361  0008FE                     l3805:
  3362  0008FE  502A               	movf	___flmul@aexp^0,w,c
  3363  000900  B4D8               	btfsc	status,2,c
  3364  000902  EF85  F004         	goto	u3411
  3365  000906  EF87  F004         	goto	u3410
  3366  00090A                     u3411:
  3367  00090A  EF9A  F004         	goto	l3813
  3368  00090E                     u3410:
  3369  00090E  282A               	incf	___flmul@aexp^0,w,c
  3370  000910  A4D8               	btfss	status,2,c
  3371  000912  EF8D  F004         	goto	u3421
  3372  000916  EF8F  F004         	goto	u3420
  3373  00091A                     u3421:
  3374  00091A  EF97  F004         	goto	l3811
  3375  00091E                     u3420:
  3376  00091E  0E00               	movlw	0
  3377  000920  6E1D               	movwf	___flmul@a^0,c
  3378  000922  0E00               	movlw	0
  3379  000924  6E1E               	movwf	(___flmul@a+1)^0,c
  3380  000926  0E00               	movlw	0
  3381  000928  6E1F               	movwf	(___flmul@a+2)^0,c
  3382  00092A  0E00               	movlw	0
  3383  00092C  6E20               	movwf	(___flmul@a+3)^0,c
  3384  00092E                     l3811:
  3385  00092E  8E1F               	bsf	(___flmul@a+2)^0,7,c
  3386  000930  EFA2  F004         	goto	l1060
  3387  000934                     l3813:
  3388  000934  0E00               	movlw	0
  3389  000936  6E1D               	movwf	___flmul@a^0,c
  3390  000938  0E00               	movlw	0
  3391  00093A  6E1E               	movwf	(___flmul@a+1)^0,c
  3392  00093C  0E00               	movlw	0
  3393  00093E  6E1F               	movwf	(___flmul@a+2)^0,c
  3394  000940  0E00               	movlw	0
  3395  000942  6E20               	movwf	(___flmul@a+3)^0,c
  3396  000944                     l1060:
  3397  000944  502A               	movf	___flmul@aexp^0,w,c
  3398  000946  B4D8               	btfsc	status,2,c
  3399  000948  EFA8  F004         	goto	u3431
  3400  00094C  EFAA  F004         	goto	u3430
  3401  000950                     u3431:
  3402  000950  EFB2  F004         	goto	l3817
  3403  000954                     u3430:
  3404  000954  502B               	movf	___flmul@bexp^0,w,c
  3405  000956  A4D8               	btfss	status,2,c
  3406  000958  EFB0  F004         	goto	u3441
  3407  00095C  EFB2  F004         	goto	u3440
  3408  000960                     u3441:
  3409  000960  EFBC  F004         	goto	l3821
  3410  000964                     u3440:
  3411  000964                     l3817:
  3412  000964  0E00               	movlw	0
  3413  000966  6E19               	movwf	?___flmul^0,c
  3414  000968  0E00               	movlw	0
  3415  00096A  6E1A               	movwf	(?___flmul+1)^0,c
  3416  00096C  0E00               	movlw	0
  3417  00096E  6E1B               	movwf	(?___flmul+2)^0,c
  3418  000970  0E00               	movlw	0
  3419  000972  6E1C               	movwf	(?___flmul+3)^0,c
  3420  000974  EF54  F006         	goto	l1064
  3421  000978                     l3821:
  3422  000978  501F               	movf	(___flmul@a+2)^0,w,c
  3423  00097A  0219               	mulwf	___flmul@b^0,c
  3424  00097C  CFF3 F030          	movff	prodl,___flmul@temp
  3425  000980  CFF4 F031          	movff	prodh,___flmul@temp+1
  3426  000984  5030               	movf	___flmul@temp^0,w,c
  3427  000986  6E26               	movwf	___flmul@grs^0,c
  3428  000988  6A27               	clrf	(___flmul@grs+1)^0,c
  3429  00098A  6A28               	clrf	(___flmul@grs+2)^0,c
  3430  00098C  6A29               	clrf	(___flmul@grs+3)^0,c
  3431  00098E  5031               	movf	(___flmul@temp+1)^0,w,c
  3432  000990  6E2C               	movwf	___flmul@prod^0,c
  3433  000992  6A2D               	clrf	(___flmul@prod+1)^0,c
  3434  000994  6A2E               	clrf	(___flmul@prod+2)^0,c
  3435  000996  6A2F               	clrf	(___flmul@prod+3)^0,c
  3436  000998  501E               	movf	(___flmul@a+1)^0,w,c
  3437  00099A  021A               	mulwf	(___flmul@b+1)^0,c
  3438  00099C  CFF3 F030          	movff	prodl,___flmul@temp
  3439  0009A0  CFF4 F031          	movff	prodh,___flmul@temp+1
  3440  0009A4  5030               	movf	___flmul@temp^0,w,c
  3441  0009A6  2626               	addwf	___flmul@grs^0,f,c
  3442  0009A8  0E00               	movlw	0
  3443  0009AA  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3444  0009AC  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3445  0009AE  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3446  0009B0  5031               	movf	(___flmul@temp+1)^0,w,c
  3447  0009B2  262C               	addwf	___flmul@prod^0,f,c
  3448  0009B4  0E00               	movlw	0
  3449  0009B6  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3450  0009B8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3451  0009BA  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3452  0009BC  501D               	movf	___flmul@a^0,w,c
  3453  0009BE  021B               	mulwf	(___flmul@b+2)^0,c
  3454  0009C0  CFF3 F030          	movff	prodl,___flmul@temp
  3455  0009C4  CFF4 F031          	movff	prodh,___flmul@temp+1
  3456  0009C8  5030               	movf	___flmul@temp^0,w,c
  3457  0009CA  2626               	addwf	___flmul@grs^0,f,c
  3458  0009CC  0E00               	movlw	0
  3459  0009CE  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3460  0009D0  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3461  0009D2  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3462  0009D4  5031               	movf	(___flmul@temp+1)^0,w,c
  3463  0009D6  262C               	addwf	___flmul@prod^0,f,c
  3464  0009D8  0E00               	movlw	0
  3465  0009DA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3466  0009DC  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3467  0009DE  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3468  0009E0  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3469  0009E4  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3470  0009E8  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3471  0009EC  6A26               	clrf	___flmul@grs^0,c
  3472  0009EE  501D               	movf	___flmul@a^0,w,c
  3473  0009F0  021A               	mulwf	(___flmul@b+1)^0,c
  3474  0009F2  CFF3 F030          	movff	prodl,___flmul@temp
  3475  0009F6  CFF4 F031          	movff	prodh,___flmul@temp+1
  3476  0009FA  5030               	movf	___flmul@temp^0,w,c
  3477  0009FC  2626               	addwf	___flmul@grs^0,f,c
  3478  0009FE  5031               	movf	(___flmul@temp+1)^0,w,c
  3479  000A00  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3480  000A02  0E00               	movlw	0
  3481  000A04  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3482  000A06  0E00               	movlw	0
  3483  000A08  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3484  000A0A  501E               	movf	(___flmul@a+1)^0,w,c
  3485  000A0C  0219               	mulwf	___flmul@b^0,c
  3486  000A0E  CFF3 F030          	movff	prodl,___flmul@temp
  3487  000A12  CFF4 F031          	movff	prodh,___flmul@temp+1
  3488  000A16  5030               	movf	___flmul@temp^0,w,c
  3489  000A18  2626               	addwf	___flmul@grs^0,f,c
  3490  000A1A  5031               	movf	(___flmul@temp+1)^0,w,c
  3491  000A1C  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3492  000A1E  0E00               	movlw	0
  3493  000A20  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3494  000A22  0E00               	movlw	0
  3495  000A24  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3496  000A26  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3497  000A2A  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3498  000A2E  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3499  000A32  6A26               	clrf	___flmul@grs^0,c
  3500  000A34  501D               	movf	___flmul@a^0,w,c
  3501  000A36  0219               	mulwf	___flmul@b^0,c
  3502  000A38  CFF3 F030          	movff	prodl,___flmul@temp
  3503  000A3C  CFF4 F031          	movff	prodh,___flmul@temp+1
  3504  000A40  5030               	movf	___flmul@temp^0,w,c
  3505  000A42  2626               	addwf	___flmul@grs^0,f,c
  3506  000A44  5031               	movf	(___flmul@temp+1)^0,w,c
  3507  000A46  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3508  000A48  0E00               	movlw	0
  3509  000A4A  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3510  000A4C  0E00               	movlw	0
  3511  000A4E  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3512  000A50  501F               	movf	(___flmul@a+2)^0,w,c
  3513  000A52  021A               	mulwf	(___flmul@b+1)^0,c
  3514  000A54  CFF3 F030          	movff	prodl,___flmul@temp
  3515  000A58  CFF4 F031          	movff	prodh,___flmul@temp+1
  3516  000A5C  5030               	movf	___flmul@temp^0,w,c
  3517  000A5E  262C               	addwf	___flmul@prod^0,f,c
  3518  000A60  5031               	movf	(___flmul@temp+1)^0,w,c
  3519  000A62  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3520  000A64  0E00               	movlw	0
  3521  000A66  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3522  000A68  0E00               	movlw	0
  3523  000A6A  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3524  000A6C  501E               	movf	(___flmul@a+1)^0,w,c
  3525  000A6E  021B               	mulwf	(___flmul@b+2)^0,c
  3526  000A70  CFF3 F030          	movff	prodl,___flmul@temp
  3527  000A74  CFF4 F031          	movff	prodh,___flmul@temp+1
  3528  000A78  5030               	movf	___flmul@temp^0,w,c
  3529  000A7A  262C               	addwf	___flmul@prod^0,f,c
  3530  000A7C  5031               	movf	(___flmul@temp+1)^0,w,c
  3531  000A7E  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3532  000A80  0E00               	movlw	0
  3533  000A82  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3534  000A84  0E00               	movlw	0
  3535  000A86  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3536  000A88  501F               	movf	(___flmul@a+2)^0,w,c
  3537  000A8A  021B               	mulwf	(___flmul@b+2)^0,c
  3538  000A8C  CFF3 F030          	movff	prodl,___flmul@temp
  3539  000A90  CFF4 F031          	movff	prodh,___flmul@temp+1
  3540  000A94  5030               	movf	___flmul@temp^0,w,c
  3541  000A96  6E21               	movwf	??___flmul^0,c
  3542  000A98  5031               	movf	(___flmul@temp+1)^0,w,c
  3543  000A9A  6E22               	movwf	(??___flmul+1)^0,c
  3544  000A9C  6A23               	clrf	(??___flmul+2)^0,c
  3545  000A9E  6A24               	clrf	(??___flmul+3)^0,c
  3546  000AA0  C023  F024         	movff	??___flmul+2,??___flmul+3
  3547  000AA4  C022  F023         	movff	??___flmul+1,??___flmul+2
  3548  000AA8  C021  F022         	movff	??___flmul,??___flmul+1
  3549  000AAC  6A21               	clrf	??___flmul^0,c
  3550  000AAE  5021               	movf	??___flmul^0,w,c
  3551  000AB0  262C               	addwf	___flmul@prod^0,f,c
  3552  000AB2  5022               	movf	(??___flmul+1)^0,w,c
  3553  000AB4  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3554  000AB6  5023               	movf	(??___flmul+2)^0,w,c
  3555  000AB8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3556  000ABA  5024               	movf	(??___flmul+3)^0,w,c
  3557  000ABC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3558  000ABE  C026  F021         	movff	___flmul@grs,??___flmul
  3559  000AC2  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  3560  000AC6  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  3561  000ACA  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  3562  000ACE  0E19               	movlw	25
  3563  000AD0  EF6F  F005         	goto	u3450
  3564  000AD4                     u3455:
  3565  000AD4  90D8               	bcf	status,0,c
  3566  000AD6  3224               	rrcf	(??___flmul+3)^0,f,c
  3567  000AD8  3223               	rrcf	(??___flmul+2)^0,f,c
  3568  000ADA  3222               	rrcf	(??___flmul+1)^0,f,c
  3569  000ADC  3221               	rrcf	??___flmul^0,f,c
  3570  000ADE                     u3450:
  3571  000ADE  2EE8               	decfsz	wreg,f,c
  3572  000AE0  EF6A  F005         	goto	u3455
  3573  000AE4  5021               	movf	??___flmul^0,w,c
  3574  000AE6  262C               	addwf	___flmul@prod^0,f,c
  3575  000AE8  5022               	movf	(??___flmul+1)^0,w,c
  3576  000AEA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3577  000AEC  5023               	movf	(??___flmul+2)^0,w,c
  3578  000AEE  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3579  000AF0  5024               	movf	(??___flmul+3)^0,w,c
  3580  000AF2  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3581  000AF4  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3582  000AF8  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3583  000AFC  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3584  000B00  6A26               	clrf	___flmul@grs^0,c
  3585  000B02  502A               	movf	___flmul@aexp^0,w,c
  3586  000B04  C02B  F021         	movff	___flmul@bexp,??___flmul
  3587  000B08  6A22               	clrf	(??___flmul+1)^0,c
  3588  000B0A  2621               	addwf	??___flmul^0,f,c
  3589  000B0C  0E00               	movlw	0
  3590  000B0E  2222               	addwfc	(??___flmul+1)^0,f,c
  3591  000B10  0E82               	movlw	130
  3592  000B12  2421               	addwf	??___flmul^0,w,c
  3593  000B14  6E30               	movwf	___flmul@temp^0,c
  3594  000B16  0EFF               	movlw	255
  3595  000B18  2022               	addwfc	(??___flmul+1)^0,w,c
  3596  000B1A  6E31               	movwf	(___flmul@temp+1)^0,c
  3597  000B1C  EFA5  F005         	goto	l3869
  3598  000B20                     l3863:
  3599  000B20  90D8               	bcf	status,0,c
  3600  000B22  362C               	rlcf	___flmul@prod^0,f,c
  3601  000B24  362D               	rlcf	(___flmul@prod+1)^0,f,c
  3602  000B26  362E               	rlcf	(___flmul@prod+2)^0,f,c
  3603  000B28  362F               	rlcf	(___flmul@prod+3)^0,f,c
  3604  000B2A  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3605  000B2C  EF9A  F005         	goto	u3461
  3606  000B30  EF9C  F005         	goto	u3460
  3607  000B34                     u3461:
  3608  000B34  EF9D  F005         	goto	l1067
  3609  000B38                     u3460:
  3610  000B38  802C               	bsf	___flmul@prod^0,0,c
  3611  000B3A                     l1067:
  3612  000B3A  90D8               	bcf	status,0,c
  3613  000B3C  3626               	rlcf	___flmul@grs^0,f,c
  3614  000B3E  3627               	rlcf	(___flmul@grs+1)^0,f,c
  3615  000B40  3628               	rlcf	(___flmul@grs+2)^0,f,c
  3616  000B42  3629               	rlcf	(___flmul@grs+3)^0,f,c
  3617  000B44  0630               	decf	___flmul@temp^0,f,c
  3618  000B46  A0D8               	btfss	status,0,c
  3619  000B48  0631               	decf	(___flmul@temp+1)^0,f,c
  3620  000B4A                     l3869:
  3621  000B4A  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  3622  000B4C  EFAA  F005         	goto	u3471
  3623  000B50  EFAC  F005         	goto	u3470
  3624  000B54                     u3471:
  3625  000B54  EF90  F005         	goto	l3863
  3626  000B58                     u3470:
  3627  000B58  0E00               	movlw	0
  3628  000B5A  6E2A               	movwf	___flmul@aexp^0,c
  3629  000B5C  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3630  000B5E  EFB3  F005         	goto	u3481
  3631  000B62  EFB5  F005         	goto	u3480
  3632  000B66                     u3481:
  3633  000B66  EFD9  F005         	goto	l1069
  3634  000B6A                     u3480:
  3635  000B6A  0EFF               	movlw	255
  3636  000B6C  1426               	andwf	___flmul@grs^0,w,c
  3637  000B6E  6E21               	movwf	??___flmul^0,c
  3638  000B70  0EFF               	movlw	255
  3639  000B72  1427               	andwf	(___flmul@grs+1)^0,w,c
  3640  000B74  6E22               	movwf	(??___flmul+1)^0,c
  3641  000B76  0EFF               	movlw	255
  3642  000B78  1428               	andwf	(___flmul@grs+2)^0,w,c
  3643  000B7A  6E23               	movwf	(??___flmul+2)^0,c
  3644  000B7C  0E7F               	movlw	127
  3645  000B7E  1429               	andwf	(___flmul@grs+3)^0,w,c
  3646  000B80  6E24               	movwf	(??___flmul+3)^0,c
  3647  000B82  5021               	movf	??___flmul^0,w,c
  3648  000B84  1022               	iorwf	(??___flmul+1)^0,w,c
  3649  000B86  1023               	iorwf	(??___flmul+2)^0,w,c
  3650  000B88  1024               	iorwf	(??___flmul+3)^0,w,c
  3651  000B8A  B4D8               	btfsc	status,2,c
  3652  000B8C  EFCA  F005         	goto	u3491
  3653  000B90  EFCC  F005         	goto	u3490
  3654  000B94                     u3491:
  3655  000B94  EFD0  F005         	goto	l1070
  3656  000B98                     u3490:
  3657  000B98                     l3877:
  3658  000B98  0E01               	movlw	1
  3659  000B9A  6E2A               	movwf	___flmul@aexp^0,c
  3660  000B9C  EFD9  F005         	goto	l1069
  3661  000BA0                     l1070:
  3662  000BA0  A02C               	btfss	___flmul@prod^0,0,c
  3663  000BA2  EFD5  F005         	goto	u3501
  3664  000BA6  EFD7  F005         	goto	u3500
  3665  000BAA                     u3501:
  3666  000BAA  EFD9  F005         	goto	l1069
  3667  000BAE                     u3500:
  3668  000BAE  EFCC  F005         	goto	l3877
  3669  000BB2                     l1069:
  3670  000BB2  502A               	movf	___flmul@aexp^0,w,c
  3671  000BB4  B4D8               	btfsc	status,2,c
  3672  000BB6  EFDF  F005         	goto	u3511
  3673  000BBA  EFE1  F005         	goto	u3510
  3674  000BBE                     u3511:
  3675  000BBE  EF05  F006         	goto	l3889
  3676  000BC2                     u3510:
  3677  000BC2  0E01               	movlw	1
  3678  000BC4  262C               	addwf	___flmul@prod^0,f,c
  3679  000BC6  0E00               	movlw	0
  3680  000BC8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3681  000BCA  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3682  000BCC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3683  000BCE  A02F               	btfss	(___flmul@prod+3)^0,0,c
  3684  000BD0  EFEC  F005         	goto	u3521
  3685  000BD4  EFEE  F005         	goto	u3520
  3686  000BD8                     u3521:
  3687  000BD8  EF05  F006         	goto	l3889
  3688  000BDC                     u3520:
  3689  000BDC  C02C  F021         	movff	___flmul@prod,??___flmul
  3690  000BE0  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  3691  000BE4  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  3692  000BE8  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  3693  000BEC  3424               	rlcf	(??___flmul+3)^0,w,c
  3694  000BEE  3224               	rrcf	(??___flmul+3)^0,f,c
  3695  000BF0  3223               	rrcf	(??___flmul+2)^0,f,c
  3696  000BF2  3222               	rrcf	(??___flmul+1)^0,f,c
  3697  000BF4  3221               	rrcf	??___flmul^0,f,c
  3698  000BF6  C021  F02C         	movff	??___flmul,___flmul@prod
  3699  000BFA  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  3700  000BFE  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  3701  000C02  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  3702  000C06  4A30               	infsnz	___flmul@temp^0,f,c
  3703  000C08  2A31               	incf	(___flmul@temp+1)^0,f,c
  3704  000C0A                     l3889:
  3705  000C0A  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3706  000C0C  EF10  F006         	goto	u3531
  3707  000C10  5031               	movf	(___flmul@temp+1)^0,w,c
  3708  000C12  E108               	bnz	u3530
  3709  000C14  2830               	incf	___flmul@temp^0,w,c
  3710  000C16  A0D8               	btfss	status,0,c
  3711  000C18  EF10  F006         	goto	u3531
  3712  000C1C  EF12  F006         	goto	u3530
  3713  000C20                     u3531:
  3714  000C20  EF1C  F006         	goto	l3893
  3715  000C24                     u3530:
  3716  000C24  0E00               	movlw	0
  3717  000C26  6E2C               	movwf	___flmul@prod^0,c
  3718  000C28  0E00               	movlw	0
  3719  000C2A  6E2D               	movwf	(___flmul@prod+1)^0,c
  3720  000C2C  0E80               	movlw	128
  3721  000C2E  6E2E               	movwf	(___flmul@prod+2)^0,c
  3722  000C30  0E7F               	movlw	127
  3723  000C32  6E2F               	movwf	(___flmul@prod+3)^0,c
  3724  000C34  EF4A  F006         	goto	l3905
  3725  000C38                     l3893:
  3726  000C38  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3727  000C3A  EF29  F006         	goto	u3540
  3728  000C3E  5031               	movf	(___flmul@temp+1)^0,w,c
  3729  000C40  E106               	bnz	u3541
  3730  000C42  0430               	decf	___flmul@temp^0,w,c
  3731  000C44  B0D8               	btfsc	status,0,c
  3732  000C46  EF27  F006         	goto	u3541
  3733  000C4A  EF29  F006         	goto	u3540
  3734  000C4E                     u3541:
  3735  000C4E  EF35  F006         	goto	l1077
  3736  000C52                     u3540:
  3737  000C52  0E00               	movlw	0
  3738  000C54  6E2C               	movwf	___flmul@prod^0,c
  3739  000C56  0E00               	movlw	0
  3740  000C58  6E2D               	movwf	(___flmul@prod+1)^0,c
  3741  000C5A  0E00               	movlw	0
  3742  000C5C  6E2E               	movwf	(___flmul@prod+2)^0,c
  3743  000C5E  0E00               	movlw	0
  3744  000C60  6E2F               	movwf	(___flmul@prod+3)^0,c
  3745  000C62  0E00               	movlw	0
  3746  000C64  6E25               	movwf	___flmul@sign^0,c
  3747  000C66  EF4A  F006         	goto	l3905
  3748  000C6A                     l1077:
  3749  000C6A  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  3750  000C6E  0EFF               	movlw	255
  3751  000C70  162C               	andwf	___flmul@prod^0,f,c
  3752  000C72  0EFF               	movlw	255
  3753  000C74  162D               	andwf	(___flmul@prod+1)^0,f,c
  3754  000C76  0E7F               	movlw	127
  3755  000C78  162E               	andwf	(___flmul@prod+2)^0,f,c
  3756  000C7A  0E00               	movlw	0
  3757  000C7C  162F               	andwf	(___flmul@prod+3)^0,f,c
  3758  000C7E  A02B               	btfss	___flmul@bexp^0,0,c
  3759  000C80  EF44  F006         	goto	u3551
  3760  000C84  EF46  F006         	goto	u3550
  3761  000C88                     u3551:
  3762  000C88  EF47  F006         	goto	l3903
  3763  000C8C                     u3550:
  3764  000C8C  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  3765  000C8E                     l3903:
  3766  000C8E  90D8               	bcf	status,0,c
  3767  000C90  302B               	rrcf	___flmul@bexp^0,w,c
  3768  000C92  6E2F               	movwf	(___flmul@prod+3)^0,c
  3769  000C94                     l3905:
  3770  000C94  5025               	movf	___flmul@sign^0,w,c
  3771  000C96  122F               	iorwf	(___flmul@prod+3)^0,f,c
  3772  000C98  C02C  F019         	movff	___flmul@prod,?___flmul
  3773  000C9C  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  3774  000CA0  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  3775  000CA4  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  3776  000CA8                     l1064:
  3777  000CA8  0012               	return		;funcret
  3778  000CAA                     __end_of___flmul:
  3779                           	callstack 0
  3780                           
  3781 ;; *************** function ___fldiv *****************
  3782 ;; Defined at:
  3783 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  b               4   49[COMRAM] unsigned char 
  3786 ;;  a               4   53[COMRAM] unsigned char 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  grs             4   68[COMRAM] unsigned long 
  3789 ;;  rem             4   61[COMRAM] unsigned long 
  3790 ;;  new_exp         2   66[COMRAM] short 
  3791 ;;  aexp            1   73[COMRAM] unsigned char 
  3792 ;;  bexp            1   72[COMRAM] unsigned char 
  3793 ;;  sign            1   65[COMRAM] unsigned char 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  4   49[COMRAM] unsigned char 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3803 ;;      Params:         8       0       0       0       0       0       0       0       0
  3804 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3805 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3806 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3807 ;;Total ram usage:       25 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    2
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_appADC
  3814 ;;		_appBat
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text18
  3819  000CAA                     __ptext18:
  3820                           	callstack 0
  3821  000CAA                     ___fldiv:
  3822                           	callstack 26
  3823  000CAA  5035               	movf	(___fldiv@b+3)^0,w,c
  3824  000CAC  0B80               	andlw	128
  3825  000CAE  6E42               	movwf	___fldiv@sign^0,c
  3826  000CB0  5035               	movf	(___fldiv@b+3)^0,w,c
  3827  000CB2  2435               	addwf	(___fldiv@b+3)^0,w,c
  3828  000CB4  6E49               	movwf	___fldiv@bexp^0,c
  3829  000CB6  AE34               	btfss	(___fldiv@b+2)^0,7,c
  3830  000CB8  EF60  F006         	goto	u3141
  3831  000CBC  EF62  F006         	goto	u3140
  3832  000CC0                     u3141:
  3833  000CC0  EF63  F006         	goto	l3649
  3834  000CC4                     u3140:
  3835  000CC4  8049               	bsf	___fldiv@bexp^0,0,c
  3836  000CC6                     l3649:
  3837  000CC6  5049               	movf	___fldiv@bexp^0,w,c
  3838  000CC8  B4D8               	btfsc	status,2,c
  3839  000CCA  EF69  F006         	goto	u3151
  3840  000CCE  EF6B  F006         	goto	u3150
  3841  000CD2                     u3151:
  3842  000CD2  EF80  F006         	goto	l3659
  3843  000CD6                     u3150:
  3844  000CD6  2849               	incf	___fldiv@bexp^0,w,c
  3845  000CD8  A4D8               	btfss	status,2,c
  3846  000CDA  EF71  F006         	goto	u3161
  3847  000CDE  EF73  F006         	goto	u3160
  3848  000CE2                     u3161:
  3849  000CE2  EF7B  F006         	goto	l3655
  3850  000CE6                     u3160:
  3851  000CE6  0E00               	movlw	0
  3852  000CE8  6E32               	movwf	___fldiv@b^0,c
  3853  000CEA  0E00               	movlw	0
  3854  000CEC  6E33               	movwf	(___fldiv@b+1)^0,c
  3855  000CEE  0E00               	movlw	0
  3856  000CF0  6E34               	movwf	(___fldiv@b+2)^0,c
  3857  000CF2  0E00               	movlw	0
  3858  000CF4  6E35               	movwf	(___fldiv@b+3)^0,c
  3859  000CF6                     l3655:
  3860  000CF6  8E34               	bsf	(___fldiv@b+2)^0,7,c
  3861  000CF8  0E00               	movlw	0
  3862  000CFA  6E35               	movwf	(___fldiv@b+3)^0,c
  3863  000CFC  EF88  F006         	goto	l3661
  3864  000D00                     l3659:
  3865  000D00  0E00               	movlw	0
  3866  000D02  6E32               	movwf	___fldiv@b^0,c
  3867  000D04  0E00               	movlw	0
  3868  000D06  6E33               	movwf	(___fldiv@b+1)^0,c
  3869  000D08  0E00               	movlw	0
  3870  000D0A  6E34               	movwf	(___fldiv@b+2)^0,c
  3871  000D0C  0E00               	movlw	0
  3872  000D0E  6E35               	movwf	(___fldiv@b+3)^0,c
  3873  000D10                     l3661:
  3874  000D10  5039               	movf	(___fldiv@a+3)^0,w,c
  3875  000D12  0B80               	andlw	128
  3876  000D14  1A42               	xorwf	___fldiv@sign^0,f,c
  3877  000D16  5039               	movf	(___fldiv@a+3)^0,w,c
  3878  000D18  2439               	addwf	(___fldiv@a+3)^0,w,c
  3879  000D1A  6E4A               	movwf	___fldiv@aexp^0,c
  3880  000D1C  AE38               	btfss	(___fldiv@a+2)^0,7,c
  3881  000D1E  EF93  F006         	goto	u3171
  3882  000D22  EF95  F006         	goto	u3170
  3883  000D26                     u3171:
  3884  000D26  EF96  F006         	goto	l3669
  3885  000D2A                     u3170:
  3886  000D2A  804A               	bsf	___fldiv@aexp^0,0,c
  3887  000D2C                     l3669:
  3888  000D2C  504A               	movf	___fldiv@aexp^0,w,c
  3889  000D2E  B4D8               	btfsc	status,2,c
  3890  000D30  EF9C  F006         	goto	u3181
  3891  000D34  EF9E  F006         	goto	u3180
  3892  000D38                     u3181:
  3893  000D38  EFB3  F006         	goto	l3679
  3894  000D3C                     u3180:
  3895  000D3C  284A               	incf	___fldiv@aexp^0,w,c
  3896  000D3E  A4D8               	btfss	status,2,c
  3897  000D40  EFA4  F006         	goto	u3191
  3898  000D44  EFA6  F006         	goto	u3190
  3899  000D48                     u3191:
  3900  000D48  EFAE  F006         	goto	l3675
  3901  000D4C                     u3190:
  3902  000D4C  0E00               	movlw	0
  3903  000D4E  6E36               	movwf	___fldiv@a^0,c
  3904  000D50  0E00               	movlw	0
  3905  000D52  6E37               	movwf	(___fldiv@a+1)^0,c
  3906  000D54  0E00               	movlw	0
  3907  000D56  6E38               	movwf	(___fldiv@a+2)^0,c
  3908  000D58  0E00               	movlw	0
  3909  000D5A  6E39               	movwf	(___fldiv@a+3)^0,c
  3910  000D5C                     l3675:
  3911  000D5C  8E38               	bsf	(___fldiv@a+2)^0,7,c
  3912  000D5E  0E00               	movlw	0
  3913  000D60  6E39               	movwf	(___fldiv@a+3)^0,c
  3914  000D62  EFBB  F006         	goto	l3681
  3915  000D66                     l3679:
  3916  000D66  0E00               	movlw	0
  3917  000D68  6E36               	movwf	___fldiv@a^0,c
  3918  000D6A  0E00               	movlw	0
  3919  000D6C  6E37               	movwf	(___fldiv@a+1)^0,c
  3920  000D6E  0E00               	movlw	0
  3921  000D70  6E38               	movwf	(___fldiv@a+2)^0,c
  3922  000D72  0E00               	movlw	0
  3923  000D74  6E39               	movwf	(___fldiv@a+3)^0,c
  3924  000D76                     l3681:
  3925  000D76  5036               	movf	___fldiv@a^0,w,c
  3926  000D78  1037               	iorwf	(___fldiv@a+1)^0,w,c
  3927  000D7A  1038               	iorwf	(___fldiv@a+2)^0,w,c
  3928  000D7C  1039               	iorwf	(___fldiv@a+3)^0,w,c
  3929  000D7E  A4D8               	btfss	status,2,c
  3930  000D80  EFC4  F006         	goto	u3201
  3931  000D84  EFC6  F006         	goto	u3200
  3932  000D88                     u3201:
  3933  000D88  EFDE  F006         	goto	l3693
  3934  000D8C                     u3200:
  3935  000D8C  0E00               	movlw	0
  3936  000D8E  6E32               	movwf	___fldiv@b^0,c
  3937  000D90  0E00               	movlw	0
  3938  000D92  6E33               	movwf	(___fldiv@b+1)^0,c
  3939  000D94  0E00               	movlw	0
  3940  000D96  6E34               	movwf	(___fldiv@b+2)^0,c
  3941  000D98  0E00               	movlw	0
  3942  000D9A  6E35               	movwf	(___fldiv@b+3)^0,c
  3943  000D9C  0E80               	movlw	128
  3944  000D9E  1234               	iorwf	(___fldiv@b+2)^0,f,c
  3945  000DA0  0E7F               	movlw	127
  3946  000DA2  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3947  000DA4                     l3687:
  3948  000DA4  5042               	movf	___fldiv@sign^0,w,c
  3949  000DA6  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3950  000DA8  C032  F032         	movff	___fldiv@b,?___fldiv
  3951  000DAC  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  3952  000DB0  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  3953  000DB4  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  3954  000DB8  EF21  F008         	goto	l1028
  3955  000DBC                     l3693:
  3956  000DBC  5049               	movf	___fldiv@bexp^0,w,c
  3957  000DBE  A4D8               	btfss	status,2,c
  3958  000DC0  EFE4  F006         	goto	u3211
  3959  000DC4  EFE6  F006         	goto	u3210
  3960  000DC8                     u3211:
  3961  000DC8  EFF0  F006         	goto	l3701
  3962  000DCC                     u3210:
  3963  000DCC  0E00               	movlw	0
  3964  000DCE  6E32               	movwf	?___fldiv^0,c
  3965  000DD0  0E00               	movlw	0
  3966  000DD2  6E33               	movwf	(?___fldiv+1)^0,c
  3967  000DD4  0E00               	movlw	0
  3968  000DD6  6E34               	movwf	(?___fldiv+2)^0,c
  3969  000DD8  0E00               	movlw	0
  3970  000DDA  6E35               	movwf	(?___fldiv+3)^0,c
  3971  000DDC  EF21  F008         	goto	l1028
  3972  000DE0                     l3701:
  3973  000DE0  504A               	movf	___fldiv@aexp^0,w,c
  3974  000DE2  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  3975  000DE6  6A3B               	clrf	(??___fldiv+1)^0,c
  3976  000DE8  5E3A               	subwf	??___fldiv^0,f,c
  3977  000DEA  0E00               	movlw	0
  3978  000DEC  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  3979  000DEE  0E7F               	movlw	127
  3980  000DF0  243A               	addwf	??___fldiv^0,w,c
  3981  000DF2  6E43               	movwf	___fldiv@new_exp^0,c
  3982  000DF4  0E00               	movlw	0
  3983  000DF6  203B               	addwfc	(??___fldiv+1)^0,w,c
  3984  000DF8  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  3985  000DFA  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  3986  000DFE  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  3987  000E02  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  3988  000E06  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  3989  000E0A  0E00               	movlw	0
  3990  000E0C  6E32               	movwf	___fldiv@b^0,c
  3991  000E0E  0E00               	movlw	0
  3992  000E10  6E33               	movwf	(___fldiv@b+1)^0,c
  3993  000E12  0E00               	movlw	0
  3994  000E14  6E34               	movwf	(___fldiv@b+2)^0,c
  3995  000E16  0E00               	movlw	0
  3996  000E18  6E35               	movwf	(___fldiv@b+3)^0,c
  3997  000E1A  0E00               	movlw	0
  3998  000E1C  6E45               	movwf	___fldiv@grs^0,c
  3999  000E1E  0E00               	movlw	0
  4000  000E20  6E46               	movwf	(___fldiv@grs+1)^0,c
  4001  000E22  0E00               	movlw	0
  4002  000E24  6E47               	movwf	(___fldiv@grs+2)^0,c
  4003  000E26  0E00               	movlw	0
  4004  000E28  6E48               	movwf	(___fldiv@grs+3)^0,c
  4005  000E2A  0E00               	movlw	0
  4006  000E2C  6E4A               	movwf	___fldiv@aexp^0,c
  4007  000E2E  EF51  F007         	goto	l1030
  4008  000E32                     l3711:
  4009  000E32  504A               	movf	___fldiv@aexp^0,w,c
  4010  000E34  B4D8               	btfsc	status,2,c
  4011  000E36  EF1F  F007         	goto	u3221
  4012  000E3A  EF21  F007         	goto	u3220
  4013  000E3E                     u3221:
  4014  000E3E  EF38  F007         	goto	l3719
  4015  000E42                     u3220:
  4016  000E42  90D8               	bcf	status,0,c
  4017  000E44  363E               	rlcf	___fldiv@rem^0,f,c
  4018  000E46  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  4019  000E48  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  4020  000E4A  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  4021  000E4C  90D8               	bcf	status,0,c
  4022  000E4E  3632               	rlcf	___fldiv@b^0,f,c
  4023  000E50  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4024  000E52  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4025  000E54  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4026  000E56  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4027  000E58  EF30  F007         	goto	u3231
  4028  000E5C  EF32  F007         	goto	u3230
  4029  000E60                     u3231:
  4030  000E60  EF33  F007         	goto	l1033
  4031  000E64                     u3230:
  4032  000E64  8032               	bsf	___fldiv@b^0,0,c
  4033  000E66                     l1033:
  4034  000E66  90D8               	bcf	status,0,c
  4035  000E68  3645               	rlcf	___fldiv@grs^0,f,c
  4036  000E6A  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4037  000E6C  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4038  000E6E  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4039  000E70                     l3719:
  4040  000E70  5036               	movf	___fldiv@a^0,w,c
  4041  000E72  5C3E               	subwf	___fldiv@rem^0,w,c
  4042  000E74  5037               	movf	(___fldiv@a+1)^0,w,c
  4043  000E76  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  4044  000E78  5038               	movf	(___fldiv@a+2)^0,w,c
  4045  000E7A  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  4046  000E7C  5039               	movf	(___fldiv@a+3)^0,w,c
  4047  000E7E  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  4048  000E80  A0D8               	btfss	status,0,c
  4049  000E82  EF45  F007         	goto	u3241
  4050  000E86  EF47  F007         	goto	u3240
  4051  000E8A                     u3241:
  4052  000E8A  EF50  F007         	goto	l3725
  4053  000E8E                     u3240:
  4054  000E8E  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  4055  000E90  5036               	movf	___fldiv@a^0,w,c
  4056  000E92  5E3E               	subwf	___fldiv@rem^0,f,c
  4057  000E94  5037               	movf	(___fldiv@a+1)^0,w,c
  4058  000E96  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  4059  000E98  5038               	movf	(___fldiv@a+2)^0,w,c
  4060  000E9A  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  4061  000E9C  5039               	movf	(___fldiv@a+3)^0,w,c
  4062  000E9E  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  4063  000EA0                     l3725:
  4064  000EA0  2A4A               	incf	___fldiv@aexp^0,f,c
  4065  000EA2                     l1030:
  4066  000EA2  0E19               	movlw	25
  4067  000EA4  644A               	cpfsgt	___fldiv@aexp^0,c
  4068  000EA6  EF57  F007         	goto	u3251
  4069  000EAA  EF59  F007         	goto	u3250
  4070  000EAE                     u3251:
  4071  000EAE  EF19  F007         	goto	l3711
  4072  000EB2                     u3250:
  4073  000EB2  503E               	movf	___fldiv@rem^0,w,c
  4074  000EB4  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  4075  000EB6  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  4076  000EB8  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  4077  000EBA  B4D8               	btfsc	status,2,c
  4078  000EBC  EF62  F007         	goto	u3261
  4079  000EC0  EF64  F007         	goto	u3260
  4080  000EC4                     u3261:
  4081  000EC4  EF7C  F007         	goto	l3737
  4082  000EC8                     u3260:
  4083  000EC8  8045               	bsf	___fldiv@grs^0,0,c
  4084  000ECA  EF7C  F007         	goto	l3737
  4085  000ECE                     l3731:
  4086  000ECE  90D8               	bcf	status,0,c
  4087  000ED0  3632               	rlcf	___fldiv@b^0,f,c
  4088  000ED2  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4089  000ED4  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4090  000ED6  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4091  000ED8  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4092  000EDA  EF71  F007         	goto	u3271
  4093  000EDE  EF73  F007         	goto	u3270
  4094  000EE2                     u3271:
  4095  000EE2  EF74  F007         	goto	l1039
  4096  000EE6                     u3270:
  4097  000EE6  8032               	bsf	___fldiv@b^0,0,c
  4098  000EE8                     l1039:
  4099  000EE8  90D8               	bcf	status,0,c
  4100  000EEA  3645               	rlcf	___fldiv@grs^0,f,c
  4101  000EEC  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4102  000EEE  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4103  000EF0  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4104  000EF2  0643               	decf	___fldiv@new_exp^0,f,c
  4105  000EF4  A0D8               	btfss	status,0,c
  4106  000EF6  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  4107  000EF8                     l3737:
  4108  000EF8  AE34               	btfss	(___fldiv@b+2)^0,7,c
  4109  000EFA  EF81  F007         	goto	u3281
  4110  000EFE  EF83  F007         	goto	u3280
  4111  000F02                     u3281:
  4112  000F02  EF67  F007         	goto	l3731
  4113  000F06                     u3280:
  4114  000F06  0E00               	movlw	0
  4115  000F08  6E4A               	movwf	___fldiv@aexp^0,c
  4116  000F0A  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4117  000F0C  EF8A  F007         	goto	u3291
  4118  000F10  EF8C  F007         	goto	u3290
  4119  000F14                     u3291:
  4120  000F14  EFB0  F007         	goto	l1041
  4121  000F18                     u3290:
  4122  000F18  0EFF               	movlw	255
  4123  000F1A  1445               	andwf	___fldiv@grs^0,w,c
  4124  000F1C  6E3A               	movwf	??___fldiv^0,c
  4125  000F1E  0EFF               	movlw	255
  4126  000F20  1446               	andwf	(___fldiv@grs+1)^0,w,c
  4127  000F22  6E3B               	movwf	(??___fldiv+1)^0,c
  4128  000F24  0EFF               	movlw	255
  4129  000F26  1447               	andwf	(___fldiv@grs+2)^0,w,c
  4130  000F28  6E3C               	movwf	(??___fldiv+2)^0,c
  4131  000F2A  0E7F               	movlw	127
  4132  000F2C  1448               	andwf	(___fldiv@grs+3)^0,w,c
  4133  000F2E  6E3D               	movwf	(??___fldiv+3)^0,c
  4134  000F30  503A               	movf	??___fldiv^0,w,c
  4135  000F32  103B               	iorwf	(??___fldiv+1)^0,w,c
  4136  000F34  103C               	iorwf	(??___fldiv+2)^0,w,c
  4137  000F36  103D               	iorwf	(??___fldiv+3)^0,w,c
  4138  000F38  B4D8               	btfsc	status,2,c
  4139  000F3A  EFA1  F007         	goto	u3301
  4140  000F3E  EFA3  F007         	goto	u3300
  4141  000F42                     u3301:
  4142  000F42  EFA7  F007         	goto	l1042
  4143  000F46                     u3300:
  4144  000F46                     l3745:
  4145  000F46  0E01               	movlw	1
  4146  000F48  6E4A               	movwf	___fldiv@aexp^0,c
  4147  000F4A  EFB0  F007         	goto	l1041
  4148  000F4E                     l1042:
  4149  000F4E  A032               	btfss	___fldiv@b^0,0,c
  4150  000F50  EFAC  F007         	goto	u3311
  4151  000F54  EFAE  F007         	goto	u3310
  4152  000F58                     u3311:
  4153  000F58  EFB0  F007         	goto	l1041
  4154  000F5C                     u3310:
  4155  000F5C  EFA3  F007         	goto	l3745
  4156  000F60                     l1041:
  4157  000F60  504A               	movf	___fldiv@aexp^0,w,c
  4158  000F62  B4D8               	btfsc	status,2,c
  4159  000F64  EFB6  F007         	goto	u3321
  4160  000F68  EFB8  F007         	goto	u3320
  4161  000F6C                     u3321:
  4162  000F6C  EFDC  F007         	goto	l3757
  4163  000F70                     u3320:
  4164  000F70  0E01               	movlw	1
  4165  000F72  2632               	addwf	___fldiv@b^0,f,c
  4166  000F74  0E00               	movlw	0
  4167  000F76  2233               	addwfc	(___fldiv@b+1)^0,f,c
  4168  000F78  2234               	addwfc	(___fldiv@b+2)^0,f,c
  4169  000F7A  2235               	addwfc	(___fldiv@b+3)^0,f,c
  4170  000F7C  A035               	btfss	(___fldiv@b+3)^0,0,c
  4171  000F7E  EFC3  F007         	goto	u3331
  4172  000F82  EFC5  F007         	goto	u3330
  4173  000F86                     u3331:
  4174  000F86  EFDC  F007         	goto	l3757
  4175  000F8A                     u3330:
  4176  000F8A  C032  F03A         	movff	___fldiv@b,??___fldiv
  4177  000F8E  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  4178  000F92  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  4179  000F96  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  4180  000F9A  343D               	rlcf	(??___fldiv+3)^0,w,c
  4181  000F9C  323D               	rrcf	(??___fldiv+3)^0,f,c
  4182  000F9E  323C               	rrcf	(??___fldiv+2)^0,f,c
  4183  000FA0  323B               	rrcf	(??___fldiv+1)^0,f,c
  4184  000FA2  323A               	rrcf	??___fldiv^0,f,c
  4185  000FA4  C03A  F032         	movff	??___fldiv,___fldiv@b
  4186  000FA8  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  4187  000FAC  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  4188  000FB0  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  4189  000FB4  4A43               	infsnz	___fldiv@new_exp^0,f,c
  4190  000FB6  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  4191  000FB8                     l3757:
  4192  000FB8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4193  000FBA  EFE7  F007         	goto	u3341
  4194  000FBE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4195  000FC0  E108               	bnz	u3340
  4196  000FC2  2843               	incf	___fldiv@new_exp^0,w,c
  4197  000FC4  A0D8               	btfss	status,0,c
  4198  000FC6  EFE7  F007         	goto	u3341
  4199  000FCA  EFE9  F007         	goto	u3340
  4200  000FCE                     u3341:
  4201  000FCE  EFF4  F007         	goto	l3761
  4202  000FD2                     u3340:
  4203  000FD2  0E00               	movlw	0
  4204  000FD4  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4205  000FD6  6843               	setf	___fldiv@new_exp^0,c
  4206  000FD8  0E00               	movlw	0
  4207  000FDA  6E32               	movwf	___fldiv@b^0,c
  4208  000FDC  0E00               	movlw	0
  4209  000FDE  6E33               	movwf	(___fldiv@b+1)^0,c
  4210  000FE0  0E00               	movlw	0
  4211  000FE2  6E34               	movwf	(___fldiv@b+2)^0,c
  4212  000FE4  0E00               	movlw	0
  4213  000FE6  6E35               	movwf	(___fldiv@b+3)^0,c
  4214  000FE8                     l3761:
  4215  000FE8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4216  000FEA  EF01  F008         	goto	u3350
  4217  000FEE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4218  000FF0  E106               	bnz	u3351
  4219  000FF2  0443               	decf	___fldiv@new_exp^0,w,c
  4220  000FF4  B0D8               	btfsc	status,0,c
  4221  000FF6  EFFF  F007         	goto	u3351
  4222  000FFA  EF01  F008         	goto	u3350
  4223  000FFE                     u3351:
  4224  000FFE  EF0F  F008         	goto	l3765
  4225  001002                     u3350:
  4226  001002  0E00               	movlw	0
  4227  001004  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4228  001006  0E00               	movlw	0
  4229  001008  6E43               	movwf	___fldiv@new_exp^0,c
  4230  00100A  0E00               	movlw	0
  4231  00100C  6E32               	movwf	___fldiv@b^0,c
  4232  00100E  0E00               	movlw	0
  4233  001010  6E33               	movwf	(___fldiv@b+1)^0,c
  4234  001012  0E00               	movlw	0
  4235  001014  6E34               	movwf	(___fldiv@b+2)^0,c
  4236  001016  0E00               	movlw	0
  4237  001018  6E35               	movwf	(___fldiv@b+3)^0,c
  4238  00101A  0E00               	movlw	0
  4239  00101C  6E42               	movwf	___fldiv@sign^0,c
  4240  00101E                     l3765:
  4241  00101E  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  4242  001022  A049               	btfss	___fldiv@bexp^0,0,c
  4243  001024  EF16  F008         	goto	u3361
  4244  001028  EF18  F008         	goto	u3360
  4245  00102C                     u3361:
  4246  00102C  EF1B  F008         	goto	l3771
  4247  001030                     u3360:
  4248  001030  8E34               	bsf	(___fldiv@b+2)^0,7,c
  4249  001032  EF1C  F008         	goto	l3773
  4250  001036                     l3771:
  4251  001036  9E34               	bcf	(___fldiv@b+2)^0,7,c
  4252  001038                     l3773:
  4253  001038  90D8               	bcf	status,0,c
  4254  00103A  3049               	rrcf	___fldiv@bexp^0,w,c
  4255  00103C  6E35               	movwf	(___fldiv@b+3)^0,c
  4256  00103E  EFD2  F006         	goto	l3687
  4257  001042                     l1028:
  4258  001042  0012               	return		;funcret
  4259  001044                     __end_of___fldiv:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function ___awmod *****************
  4263 ;; Defined at:
  4264 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  dividend        2    2[BANK0 ] int 
  4267 ;;  divisor         2    4[BANK0 ] int 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  sign            1    7[BANK0 ] unsigned char 
  4270 ;;  counter         1    6[BANK0 ] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2    2[BANK0 ] int 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4280 ;;      Params:         0       4       0       0       0       0       0       0       0
  4281 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4283 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4284 ;;Total ram usage:        6 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:    2
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_appADC
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text19
  4295  002DF6                     __ptext19:
  4296                           	callstack 0
  4297  002DF6                     ___awmod:
  4298                           	callstack 26
  4299  002DF6  0E00               	movlw	0
  4300  002DF8  0100               	movlb	0	; () banked
  4301  002DFA  6F9D               	movwf	___awmod@sign& (0+255),b
  4302  002DFC                     
  4303                           ; BSR set to: 0
  4304  002DFC  BF99               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4305  002DFE  EF05  F017         	goto	u4140
  4306  002E02  EF03  F017         	goto	u4141
  4307  002E06                     u4141:
  4308  002E06  EF0B  F017         	goto	l4615
  4309  002E0A                     u4140:
  4310  002E0A                     
  4311                           ; BSR set to: 0
  4312  002E0A  6D98               	negf	___awmod@dividend& (0+255),b
  4313  002E0C  1F99               	comf	(___awmod@dividend+1)& (0+255),f,b
  4314  002E0E  B0D8               	btfsc	status,0,c
  4315  002E10  2B99               	incf	(___awmod@dividend+1)& (0+255),f,b
  4316  002E12                     
  4317                           ; BSR set to: 0
  4318  002E12  0E01               	movlw	1
  4319  002E14  6F9D               	movwf	___awmod@sign& (0+255),b
  4320  002E16                     l4615:
  4321                           
  4322                           ; BSR set to: 0
  4323  002E16  BF9B               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4324  002E18  EF12  F017         	goto	u4150
  4325  002E1C  EF10  F017         	goto	u4151
  4326  002E20                     u4151:
  4327  002E20  EF16  F017         	goto	l4619
  4328  002E24                     u4150:
  4329  002E24                     
  4330                           ; BSR set to: 0
  4331  002E24  6D9A               	negf	___awmod@divisor& (0+255),b
  4332  002E26  1F9B               	comf	(___awmod@divisor+1)& (0+255),f,b
  4333  002E28  B0D8               	btfsc	status,0,c
  4334  002E2A  2B9B               	incf	(___awmod@divisor+1)& (0+255),f,b
  4335  002E2C                     l4619:
  4336                           
  4337                           ; BSR set to: 0
  4338  002E2C  519A               	movf	___awmod@divisor& (0+255),w,b
  4339  002E2E  119B               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4340  002E30  B4D8               	btfsc	status,2,c
  4341  002E32  EF1D  F017         	goto	u4161
  4342  002E36  EF1F  F017         	goto	u4160
  4343  002E3A                     u4161:
  4344  002E3A  EF43  F017         	goto	l4635
  4345  002E3E                     u4160:
  4346  002E3E                     
  4347                           ; BSR set to: 0
  4348  002E3E  0E01               	movlw	1
  4349  002E40  6F9C               	movwf	___awmod@counter& (0+255),b
  4350  002E42  EF27  F017         	goto	l4625
  4351  002E46                     l4623:
  4352                           
  4353                           ; BSR set to: 0
  4354  002E46  90D8               	bcf	status,0,c
  4355  002E48  379A               	rlcf	___awmod@divisor& (0+255),f,b
  4356  002E4A  379B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4357  002E4C  2B9C               	incf	___awmod@counter& (0+255),f,b
  4358  002E4E                     l4625:
  4359                           
  4360                           ; BSR set to: 0
  4361  002E4E  AF9B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4362  002E50  EF2C  F017         	goto	u4171
  4363  002E54  EF2E  F017         	goto	u4170
  4364  002E58                     u4171:
  4365  002E58  EF23  F017         	goto	l4623
  4366  002E5C                     u4170:
  4367  002E5C                     l4627:
  4368                           
  4369                           ; BSR set to: 0
  4370  002E5C  519A               	movf	___awmod@divisor& (0+255),w,b
  4371  002E5E  5D98               	subwf	___awmod@dividend& (0+255),w,b
  4372  002E60  519B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4373  002E62  5999               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4374  002E64  A0D8               	btfss	status,0,c
  4375  002E66  EF37  F017         	goto	u4181
  4376  002E6A  EF39  F017         	goto	u4180
  4377  002E6E                     u4181:
  4378  002E6E  EF3D  F017         	goto	l4631
  4379  002E72                     u4180:
  4380  002E72                     
  4381                           ; BSR set to: 0
  4382  002E72  519A               	movf	___awmod@divisor& (0+255),w,b
  4383  002E74  5F98               	subwf	___awmod@dividend& (0+255),f,b
  4384  002E76  519B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4385  002E78  5B99               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4386  002E7A                     l4631:
  4387                           
  4388                           ; BSR set to: 0
  4389  002E7A  90D8               	bcf	status,0,c
  4390  002E7C  339B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4391  002E7E  339A               	rrcf	___awmod@divisor& (0+255),f,b
  4392  002E80                     
  4393                           ; BSR set to: 0
  4394  002E80  2F9C               	decfsz	___awmod@counter& (0+255),f,b
  4395  002E82  EF2E  F017         	goto	l4627
  4396  002E86                     l4635:
  4397                           
  4398                           ; BSR set to: 0
  4399  002E86  519D               	movf	___awmod@sign& (0+255),w,b
  4400  002E88  B4D8               	btfsc	status,2,c
  4401  002E8A  EF49  F017         	goto	u4191
  4402  002E8E  EF4B  F017         	goto	u4190
  4403  002E92                     u4191:
  4404  002E92  EF4F  F017         	goto	l4639
  4405  002E96                     u4190:
  4406  002E96                     
  4407                           ; BSR set to: 0
  4408  002E96  6D98               	negf	___awmod@dividend& (0+255),b
  4409  002E98  1F99               	comf	(___awmod@dividend+1)& (0+255),f,b
  4410  002E9A  B0D8               	btfsc	status,0,c
  4411  002E9C  2B99               	incf	(___awmod@dividend+1)& (0+255),f,b
  4412  002E9E                     l4639:
  4413                           
  4414                           ; BSR set to: 0
  4415  002E9E  C098  F098         	movff	___awmod@dividend,?___awmod
  4416  002EA2  C099  F099         	movff	___awmod@dividend+1,?___awmod+1
  4417  002EA6                     
  4418                           ; BSR set to: 0
  4419  002EA6  0012               	return		;funcret
  4420  002EA8                     __end_of___awmod:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _appInit *****************
  4424 ;; Defined at:
  4425 ;;		line 12 in file "app.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    5
  4446 ;; This function calls:
  4447 ;;		_adcInit
  4448 ;;		_appCounterInit
  4449 ;;		_appISRConfig
  4450 ;;		_appLCD_Init
  4451 ;;		_appTimerInit
  4452 ;;		_servoInit
  4453 ;;		_setServo
  4454 ;;		_uart_Init
  4455 ;; This function is called by:
  4456 ;;		_main
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text20
  4461  0035CE                     __ptext20:
  4462                           	callstack 0
  4463  0035CE                     _appInit:
  4464                           	callstack 25
  4465  0035CE                     
  4466                           ;app.c: 14:     appISRConfig();
  4467  0035CE  EC22  F01C         	call	_appISRConfig	;wreg free
  4468  0035D2                     
  4469                           ;app.c: 15:     appLCD_Init();
  4470  0035D2  EC91  F018         	call	_appLCD_Init	;wreg free
  4471  0035D6                     
  4472                           ;app.c: 16:     adcInit(2);
  4473  0035D6  0E02               	movlw	2
  4474  0035D8  EC9F  F01A         	call	_adcInit
  4475  0035DC                     
  4476                           ;app.c: 17:     appTimerInit();
  4477  0035DC  ECBB  F01B         	call	_appTimerInit	;wreg free
  4478  0035E0                     
  4479                           ;app.c: 18:     appCounterInit(0);
  4480  0035E0  0E00               	movlw	0
  4481  0035E2  6E08               	movwf	(appCounterInit@reload+1)^0,c
  4482  0035E4  0E00               	movlw	0
  4483  0035E6  6E07               	movwf	appCounterInit@reload^0,c
  4484  0035E8  EC1D  F01C         	call	_appCounterInit	;wreg free
  4485  0035EC                     
  4486                           ;app.c: 19:     servoInit();
  4487  0035EC  EC07  F01C         	call	_servoInit	;wreg free
  4488  0035F0                     
  4489                           ;app.c: 20:     uart_Init(9600);
  4490  0035F0  0E80               	movlw	128
  4491  0035F2  6E14               	movwf	uart_Init@baud^0,c
  4492  0035F4  0E25               	movlw	37
  4493  0035F6  6E15               	movwf	(uart_Init@baud+1)^0,c
  4494  0035F8  0E00               	movlw	0
  4495  0035FA  6E16               	movwf	(uart_Init@baud+2)^0,c
  4496  0035FC  0E00               	movlw	0
  4497  0035FE  6E17               	movwf	(uart_Init@baud+3)^0,c
  4498  003600  ECD7  F019         	call	_uart_Init	;wreg free
  4499  003604                     
  4500                           ;app.c: 21:     setServo(33,10,0);
  4501  003604  0E0A               	movlw	10
  4502  003606  6E0B               	movwf	setServo@pulsos^0,c
  4503  003608  0E00               	movlw	0
  4504  00360A  6E0C               	movwf	setServo@pin^0,c
  4505  00360C  0E21               	movlw	33
  4506  00360E  ECD2  F01B         	call	_setServo
  4507  003612  0012               	return		;funcret
  4508  003614                     __end_of_appInit:
  4509                           	callstack 0
  4510                           
  4511 ;; *************** function _uart_Init *****************
  4512 ;; Defined at:
  4513 ;;		line 18 in file "UART.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  baud            4   19[COMRAM] unsigned long 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, status,2, status,0, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4527 ;;      Params:         4       0       0       0       0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4530 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4531 ;;Total ram usage:        4 bytes
  4532 ;; Hardware stack levels used:    1
  4533 ;; Hardware stack levels required when called:    3
  4534 ;; This function calls:
  4535 ;;		___lldiv
  4536 ;; This function is called by:
  4537 ;;		_appInit
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text21
  4542  0033AE                     __ptext21:
  4543                           	callstack 0
  4544  0033AE                     _uart_Init:
  4545                           	callstack 26
  4546  0033AE                     
  4547                           ;UART.c: 18: void uart_Init(uint32_t baud);UART.c: 19: {;UART.c: 20:     TRISCbits.RC6 =
      +                           0;
  4548  0033AE  9C94               	bcf	148,6,c	;volatile
  4549                           
  4550                           ;UART.c: 21:     TRISCbits.RC7 = 1;
  4551  0033B0  8E94               	bsf	148,7,c	;volatile
  4552                           
  4553                           ;UART.c: 23:     BAUDCONbits.BRG16 = 0;
  4554  0033B2  96B8               	bcf	184,3,c	;volatile
  4555  0033B4                     
  4556                           ;UART.c: 24:     SPBRG = (uint8_t)(((12000000/baud)/64)-1);
  4557  0033B4  0E00               	movlw	0
  4558  0033B6  6E07               	movwf	___lldiv@dividend^0,c
  4559  0033B8  0E1B               	movlw	27
  4560  0033BA  6E08               	movwf	(___lldiv@dividend+1)^0,c
  4561  0033BC  0EB7               	movlw	183
  4562  0033BE  6E09               	movwf	(___lldiv@dividend+2)^0,c
  4563  0033C0  0E00               	movlw	0
  4564  0033C2  6E0A               	movwf	(___lldiv@dividend+3)^0,c
  4565  0033C4  C014  F00B         	movff	uart_Init@baud,___lldiv@divisor
  4566  0033C8  C015  F00C         	movff	uart_Init@baud+1,___lldiv@divisor+1
  4567  0033CC  C016  F00D         	movff	uart_Init@baud+2,___lldiv@divisor+2
  4568  0033D0  C017  F00E         	movff	uart_Init@baud+3,___lldiv@divisor+3
  4569  0033D4  EC54  F017         	call	___lldiv	;wreg free
  4570  0033D8  0E07               	movlw	7
  4571  0033DA  EFF4  F019         	goto	u3820
  4572  0033DE                     u3825:
  4573  0033DE  90D8               	bcf	status,0,c
  4574  0033E0  320A               	rrcf	(?___lldiv+3)^0,f,c
  4575  0033E2  3209               	rrcf	(?___lldiv+2)^0,f,c
  4576  0033E4  3208               	rrcf	(?___lldiv+1)^0,f,c
  4577  0033E6  3207               	rrcf	?___lldiv^0,f,c
  4578  0033E8                     u3820:
  4579  0033E8  2EE8               	decfsz	wreg,f,c
  4580  0033EA  EFEF  F019         	goto	u3825
  4581  0033EE  0407               	decf	?___lldiv^0,w,c
  4582  0033F0  6EAF               	movwf	175,c	;volatile
  4583  0033F2                     
  4584                           ;UART.c: 26:     TXSTAbits.BRGH = 0;
  4585  0033F2  94AC               	bcf	172,2,c	;volatile
  4586  0033F4                     
  4587                           ;UART.c: 27:     TXSTAbits.SYNC = 0;
  4588  0033F4  98AC               	bcf	172,4,c	;volatile
  4589  0033F6                     
  4590                           ;UART.c: 28:     TXSTAbits.TX9 = 0;
  4591  0033F6  9CAC               	bcf	172,6,c	;volatile
  4592  0033F8                     
  4593                           ;UART.c: 29:     TXSTAbits.TXEN = 1;
  4594  0033F8  8AAC               	bsf	172,5,c	;volatile
  4595  0033FA                     
  4596                           ;UART.c: 31:     RCSTAbits.SPEN = 1;
  4597  0033FA  8EAB               	bsf	171,7,c	;volatile
  4598  0033FC                     
  4599                           ;UART.c: 32:     RCSTAbits.RC9 = 0;
  4600  0033FC  9CAB               	bcf	171,6,c	;volatile
  4601  0033FE                     
  4602                           ;UART.c: 33:     RCSTAbits.CREN = 1;
  4603  0033FE  88AB               	bsf	171,4,c	;volatile
  4604  003400                     
  4605                           ;UART.c: 35:     PIE1bits.RCIE = 1;
  4606  003400  8A9D               	bsf	157,5,c	;volatile
  4607  003402                     
  4608                           ;UART.c: 36:     IPR1bits.RCIP =1;
  4609  003402  8A9F               	bsf	159,5,c	;volatile
  4610  003404  0012               	return		;funcret
  4611  003406                     __end_of_uart_Init:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function ___lldiv *****************
  4615 ;; Defined at:
  4616 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  dividend        4    6[COMRAM] unsigned long 
  4619 ;;  divisor         4   10[COMRAM] unsigned long 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  quotient        4   14[COMRAM] unsigned long 
  4622 ;;  counter         1   18[COMRAM] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  4    6[COMRAM] unsigned long 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4632 ;;      Params:         8       0       0       0       0       0       0       0       0
  4633 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4635 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4636 ;;Total ram usage:       13 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    2
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_uart_Init
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text22
  4647  002EA8                     __ptext22:
  4648                           	callstack 0
  4649  002EA8                     ___lldiv:
  4650                           	callstack 26
  4651  002EA8  0E00               	movlw	0
  4652  002EAA  6E0F               	movwf	___lldiv@quotient^0,c
  4653  002EAC  0E00               	movlw	0
  4654  002EAE  6E10               	movwf	(___lldiv@quotient+1)^0,c
  4655  002EB0  0E00               	movlw	0
  4656  002EB2  6E11               	movwf	(___lldiv@quotient+2)^0,c
  4657  002EB4  0E00               	movlw	0
  4658  002EB6  6E12               	movwf	(___lldiv@quotient+3)^0,c
  4659  002EB8  500B               	movf	___lldiv@divisor^0,w,c
  4660  002EBA  100C               	iorwf	(___lldiv@divisor+1)^0,w,c
  4661  002EBC  100D               	iorwf	(___lldiv@divisor+2)^0,w,c
  4662  002EBE  100E               	iorwf	(___lldiv@divisor+3)^0,w,c
  4663  002EC0  B4D8               	btfsc	status,2,c
  4664  002EC2  EF65  F017         	goto	u3111
  4665  002EC6  EF67  F017         	goto	u3110
  4666  002ECA                     u3111:
  4667  002ECA  EF9D  F017         	goto	l473
  4668  002ECE                     u3110:
  4669  002ECE  0E01               	movlw	1
  4670  002ED0  6E13               	movwf	___lldiv@counter^0,c
  4671  002ED2  EF71  F017         	goto	l3629
  4672  002ED6                     l3627:
  4673  002ED6  90D8               	bcf	status,0,c
  4674  002ED8  360B               	rlcf	___lldiv@divisor^0,f,c
  4675  002EDA  360C               	rlcf	(___lldiv@divisor+1)^0,f,c
  4676  002EDC  360D               	rlcf	(___lldiv@divisor+2)^0,f,c
  4677  002EDE  360E               	rlcf	(___lldiv@divisor+3)^0,f,c
  4678  002EE0  2A13               	incf	___lldiv@counter^0,f,c
  4679  002EE2                     l3629:
  4680  002EE2  AE0E               	btfss	(___lldiv@divisor+3)^0,7,c
  4681  002EE4  EF76  F017         	goto	u3121
  4682  002EE8  EF78  F017         	goto	u3120
  4683  002EEC                     u3121:
  4684  002EEC  EF6B  F017         	goto	l3627
  4685  002EF0                     u3120:
  4686  002EF0                     l3631:
  4687  002EF0  90D8               	bcf	status,0,c
  4688  002EF2  360F               	rlcf	___lldiv@quotient^0,f,c
  4689  002EF4  3610               	rlcf	(___lldiv@quotient+1)^0,f,c
  4690  002EF6  3611               	rlcf	(___lldiv@quotient+2)^0,f,c
  4691  002EF8  3612               	rlcf	(___lldiv@quotient+3)^0,f,c
  4692  002EFA  500B               	movf	___lldiv@divisor^0,w,c
  4693  002EFC  5C07               	subwf	___lldiv@dividend^0,w,c
  4694  002EFE  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4695  002F00  5808               	subwfb	(___lldiv@dividend+1)^0,w,c
  4696  002F02  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4697  002F04  5809               	subwfb	(___lldiv@dividend+2)^0,w,c
  4698  002F06  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4699  002F08  580A               	subwfb	(___lldiv@dividend+3)^0,w,c
  4700  002F0A  A0D8               	btfss	status,0,c
  4701  002F0C  EF8A  F017         	goto	u3131
  4702  002F10  EF8C  F017         	goto	u3130
  4703  002F14                     u3131:
  4704  002F14  EF95  F017         	goto	l3639
  4705  002F18                     u3130:
  4706  002F18  500B               	movf	___lldiv@divisor^0,w,c
  4707  002F1A  5E07               	subwf	___lldiv@dividend^0,f,c
  4708  002F1C  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4709  002F1E  5A08               	subwfb	(___lldiv@dividend+1)^0,f,c
  4710  002F20  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4711  002F22  5A09               	subwfb	(___lldiv@dividend+2)^0,f,c
  4712  002F24  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4713  002F26  5A0A               	subwfb	(___lldiv@dividend+3)^0,f,c
  4714  002F28  800F               	bsf	___lldiv@quotient^0,0,c
  4715  002F2A                     l3639:
  4716  002F2A  90D8               	bcf	status,0,c
  4717  002F2C  320E               	rrcf	(___lldiv@divisor+3)^0,f,c
  4718  002F2E  320D               	rrcf	(___lldiv@divisor+2)^0,f,c
  4719  002F30  320C               	rrcf	(___lldiv@divisor+1)^0,f,c
  4720  002F32  320B               	rrcf	___lldiv@divisor^0,f,c
  4721  002F34  2E13               	decfsz	___lldiv@counter^0,f,c
  4722  002F36  EF78  F017         	goto	l3631
  4723  002F3A                     l473:
  4724  002F3A  C00F  F007         	movff	___lldiv@quotient,?___lldiv
  4725  002F3E  C010  F008         	movff	___lldiv@quotient+1,?___lldiv+1
  4726  002F42  C011  F009         	movff	___lldiv@quotient+2,?___lldiv+2
  4727  002F46  C012  F00A         	movff	___lldiv@quotient+3,?___lldiv+3
  4728  002F4A  0012               	return		;funcret
  4729  002F4C                     __end_of___lldiv:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _servoInit *****************
  4733 ;; Defined at:
  4734 ;;		line 4 in file "servo.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;		None
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;		None
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4748 ;;      Params:         0       0       0       0       0       0       0       0       0
  4749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4751 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4752 ;;Total ram usage:        0 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    2
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_appInit
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text23
  4763  00380E                     __ptext23:
  4764                           	callstack 0
  4765  00380E                     _servoInit:
  4766                           	callstack 27
  4767  00380E                     
  4768                           ;servo.c: 10:     T2CONbits.T2CKPS = 0b10;
  4769  00380E  50CA               	movf	202,w,c	;volatile
  4770  003810  0BFC               	andlw	-4
  4771  003812  0902               	iorlw	2
  4772  003814  6ECA               	movwf	202,c	;volatile
  4773  003816                     
  4774                           ;servo.c: 11:     T2CONbits.T2OUTPS0 = 1;
  4775  003816  86CA               	bsf	202,3,c	;volatile
  4776  003818                     
  4777                           ;servo.c: 12:     T2CONbits.T2OUTPS1 = 1;
  4778  003818  88CA               	bsf	202,4,c	;volatile
  4779  00381A                     
  4780                           ;servo.c: 13:     T2CONbits.T2OUTPS2 = 1;
  4781  00381A  8ACA               	bsf	202,5,c	;volatile
  4782  00381C                     
  4783                           ;servo.c: 14:     T2CONbits.T2OUTPS3 = 1;
  4784  00381C  8CCA               	bsf	202,6,c	;volatile
  4785  00381E                     
  4786                           ;servo.c: 15:     TRISEbits.TRISE0 = 0;
  4787  00381E  9096               	bcf	150,0,c	;volatile
  4788  003820                     
  4789                           ;servo.c: 16:     TRISEbits.TRISE1 = 0;
  4790  003820  9296               	bcf	150,1,c	;volatile
  4791  003822                     
  4792                           ;servo.c: 17:     TRISEbits.TRISE2 = 0;
  4793  003822  9496               	bcf	150,2,c	;volatile
  4794  003824  0012               	return		;funcret
  4795  003826                     __end_of_servoInit:
  4796                           	callstack 0
  4797                           
  4798 ;; *************** function _appTimerInit *****************
  4799 ;; Defined at:
  4800 ;;		line 85 in file "servo.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4814 ;;      Params:         0       0       0       0       0       0       0       0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4817 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4818 ;;Total ram usage:        0 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    2
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_appInit
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text24
  4829  003776                     __ptext24:
  4830                           	callstack 0
  4831  003776                     _appTimerInit:
  4832                           	callstack 27
  4833  003776                     
  4834                           ;servo.c: 90:     T3CONbits.TMR3ON = 0;
  4835  003776  90B1               	bcf	177,0,c	;volatile
  4836                           
  4837                           ;servo.c: 91:     T3CONbits.RD16 = 1;
  4838  003778  8EB1               	bsf	177,7,c	;volatile
  4839                           
  4840                           ;servo.c: 92:     T3CONbits.TMR3CS = 0;
  4841  00377A  92B1               	bcf	177,1,c	;volatile
  4842  00377C                     
  4843                           ;servo.c: 93:     T3CONbits.T3CKPS = 0b11;
  4844  00377C  0E30               	movlw	48
  4845  00377E  12B1               	iorwf	177,f,c	;volatile
  4846  003780                     
  4847                           ;servo.c: 94:     T3CONbits.T3NSYNC = 1;
  4848  003780  84B1               	bsf	177,2,c	;volatile
  4849                           
  4850                           ;servo.c: 95:     TMR3 = 20536;
  4851  003782  0E50               	movlw	80
  4852  003784  6EB3               	movwf	179,c	;volatile
  4853  003786  0E38               	movlw	56
  4854  003788  6EB2               	movwf	178,c	;volatile
  4855  00378A                     
  4856                           ;servo.c: 100:     T0CONbits.TMR0ON = 0;
  4857  00378A  9ED5               	bcf	213,7,c	;volatile
  4858  00378C                     
  4859                           ;servo.c: 101:     T0CONbits.T08BIT = 1;
  4860  00378C  8CD5               	bsf	213,6,c	;volatile
  4861  00378E                     
  4862                           ;servo.c: 102:     T0CONbits.T0CS = 1;
  4863  00378E  8AD5               	bsf	213,5,c	;volatile
  4864  003790                     
  4865                           ;servo.c: 103:     T0CONbits.T0SE = 0;
  4866  003790  98D5               	bcf	213,4,c	;volatile
  4867  003792                     
  4868                           ;servo.c: 104:     T0CONbits.PSA = 1;
  4869  003792  86D5               	bsf	213,3,c	;volatile
  4870  003794                     
  4871                           ;servo.c: 106:     TRISAbits.TRISA4 = 1;
  4872  003794  8892               	bsf	146,4,c	;volatile
  4873  003796                     
  4874                           ;servo.c: 112:     INTCONbits.TMR0IE = 1;
  4875  003796  8AF2               	bsf	242,5,c	;volatile
  4876  003798                     
  4877                           ;servo.c: 113:     INTCONbits.TMR0IF = 0;
  4878  003798  94F2               	bcf	242,2,c	;volatile
  4879  00379A                     
  4880                           ;servo.c: 114:     INTCON2bits.TMR0IP = 1;
  4881  00379A  84F1               	bsf	241,2,c	;volatile
  4882  00379C                     
  4883                           ;servo.c: 120:     PIR2bits.TMR3IF = 0;
  4884  00379C  92A1               	bcf	161,1,c	;volatile
  4885  00379E                     
  4886                           ;servo.c: 121:     IPR2bits.TMR3IP = 0;
  4887  00379E  92A2               	bcf	162,1,c	;volatile
  4888  0037A0                     
  4889                           ;servo.c: 122:     PIE2bits.TMR3IE = 1;
  4890  0037A0  82A0               	bsf	160,1,c	;volatile
  4891  0037A2  0012               	return		;funcret
  4892  0037A4                     __end_of_appTimerInit:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function _appLCD_Init *****************
  4896 ;; Defined at:
  4897 ;;		line 197 in file "flex_lcd.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4911 ;;      Params:         0       0       0       0       0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4913 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4914 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4915 ;;Total ram usage:        2 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    4
  4918 ;; This function calls:
  4919 ;;		_Lcd_Cmd
  4920 ;;		_Lcd_Init
  4921 ;;		_Lcd_Out
  4922 ;; This function is called by:
  4923 ;;		_appInit
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text25
  4928  003122                     __ptext25:
  4929                           	callstack 0
  4930  003122                     _appLCD_Init:
  4931                           	callstack 25
  4932  003122                     
  4933                           ;flex_lcd.c: 199:     Lcd_Init();
  4934  003122  EC3D  F016         	call	_Lcd_Init	;wreg free
  4935                           
  4936                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  4937  003126  0E01               	movlw	1
  4938  003128  EC81  F012         	call	_Lcd_Cmd
  4939                           
  4940                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  4941  00312C  0E0C               	movlw	12
  4942  00312E  EC81  F012         	call	_Lcd_Cmd
  4943  003132                     
  4944                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  4945  003132  0E02               	movlw	2
  4946  003134  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4947  003136  0E86               	movlw	134
  4948  003138  6E11               	movwf	??_appLCD_Init^0,c
  4949  00313A  0E99               	movlw	153
  4950  00313C                     u4557:
  4951  00313C  2EE8               	decfsz	wreg,f,c
  4952  00313E  D7FE               	bra	u4557
  4953  003140  2E11               	decfsz	??_appLCD_Init^0,f,c
  4954  003142  D7FC               	bra	u4557
  4955  003144  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4956  003146  D7FA               	bra	u4557
  4957  003148  F000               	nop	
  4958  00314A                     
  4959                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  4960  00314A  0E03               	movlw	3
  4961  00314C  6E0A               	movwf	Lcd_Out@x^0,c
  4962  00314E  0E54               	movlw	low STR_3
  4963  003150  6E0B               	movwf	Lcd_Out@buffer^0,c
  4964  003152  0E08               	movlw	high STR_3
  4965  003154  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  4966  003156  0E01               	movlw	1
  4967  003158  EC11  F015         	call	_Lcd_Out
  4968  00315C                     
  4969                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  4970  00315C  0E06               	movlw	6
  4971  00315E  6E0A               	movwf	Lcd_Out@x^0,c
  4972  003160  0E73               	movlw	low STR_4
  4973  003162  6E0B               	movwf	Lcd_Out@buffer^0,c
  4974  003164  0E08               	movlw	high STR_4
  4975  003166  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  4976  003168  0E02               	movlw	2
  4977  00316A  EC11  F015         	call	_Lcd_Out
  4978  00316E                     
  4979                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  4980  00316E  0E1F               	movlw	31
  4981  003170  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4982  003172  0E71               	movlw	113
  4983  003174  6E11               	movwf	??_appLCD_Init^0,c
  4984  003176  0E1E               	movlw	30
  4985  003178                     u4567:
  4986  003178  2EE8               	decfsz	wreg,f,c
  4987  00317A  D7FE               	bra	u4567
  4988  00317C  2E11               	decfsz	??_appLCD_Init^0,f,c
  4989  00317E  D7FC               	bra	u4567
  4990  003180  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4991  003182  D7FA               	bra	u4567
  4992  003184  D000               	nop2	
  4993                           
  4994                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  4995  003186  0E01               	movlw	1
  4996  003188  EC81  F012         	call	_Lcd_Cmd
  4997  00318C  0E02               	movlw	2
  4998  00318E  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4999  003190  0E86               	movlw	134
  5000  003192  6E11               	movwf	??_appLCD_Init^0,c
  5001  003194  0E99               	movlw	153
  5002  003196                     u4577:
  5003  003196  2EE8               	decfsz	wreg,f,c
  5004  003198  D7FE               	bra	u4577
  5005  00319A  2E11               	decfsz	??_appLCD_Init^0,f,c
  5006  00319C  D7FC               	bra	u4577
  5007  00319E  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  5008  0031A0  D7FA               	bra	u4577
  5009  0031A2  F000               	nop	
  5010  0031A4  0012               	return		;funcret
  5011  0031A6                     __end_of_appLCD_Init:
  5012                           	callstack 0
  5013                           
  5014 ;; *************** function _Lcd_Init *****************
  5015 ;; Defined at:
  5016 ;;		line 31 in file "flex_lcd.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;		None
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  i               1   10[COMRAM] unsigned char 
  5021 ;;  data            1    0        unsigned char 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0
  5032 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5033 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5034 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5035 ;;Total ram usage:        3 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    3
  5038 ;; This function calls:
  5039 ;;		_Lcd_Cmd
  5040 ;; This function is called by:
  5041 ;;		_appLCD_Init
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text26
  5046  002C7A                     __ptext26:
  5047                           	callstack 0
  5048  002C7A                     _Lcd_Init:
  5049                           	callstack 25
  5050  002C7A                     
  5051                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  5052  002C7A  9E95               	bcf	149,7,c	;volatile
  5053                           
  5054                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  5055  002C7C  9C95               	bcf	149,6,c	;volatile
  5056                           
  5057                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  5058  002C7E  9A95               	bcf	149,5,c	;volatile
  5059                           
  5060                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  5061  002C80  9895               	bcf	149,4,c	;volatile
  5062                           
  5063                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  5064  002C82  9695               	bcf	149,3,c	;volatile
  5065                           
  5066                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  5067  002C84  9495               	bcf	149,2,c	;volatile
  5068  002C86                     
  5069                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  5070  002C86  0E85               	movlw	133
  5071  002C88  6E0A               	movwf	??_Lcd_Init^0,c
  5072  002C8A  0E76               	movlw	118
  5073  002C8C                     u4587:
  5074  002C8C  2EE8               	decfsz	wreg,f,c
  5075  002C8E  D7FE               	bra	u4587
  5076  002C90  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5077  002C92  D7FC               	bra	u4587
  5078  002C94  D000               	nop2	
  5079  002C96                     
  5080                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  5081  002C96  0E00               	movlw	0
  5082  002C98  6E0B               	movwf	Lcd_Init@i^0,c
  5083  002C9A                     l156:
  5084                           
  5085                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  5086  002C9A  9E8C               	bcf	140,7,c	;volatile
  5087                           
  5088                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  5089  002C9C  9C8C               	bcf	140,6,c	;volatile
  5090                           
  5091                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  5092  002C9E  8A8C               	bsf	140,5,c	;volatile
  5093                           
  5094                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  5095  002CA0  888C               	bsf	140,4,c	;volatile
  5096                           
  5097                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  5098  002CA2  968C               	bcf	140,3,c	;volatile
  5099                           
  5100                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  5101  002CA4  948C               	bcf	140,2,c	;volatile
  5102                           
  5103                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  5104  002CA6  9E8C               	bcf	140,7,c	;volatile
  5105                           
  5106                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  5107  002CA8  9C8C               	bcf	140,6,c	;volatile
  5108                           
  5109                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  5110  002CAA  8A8C               	bsf	140,5,c	;volatile
  5111                           
  5112                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  5113  002CAC  888C               	bsf	140,4,c	;volatile
  5114                           
  5115                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  5116  002CAE  868C               	bsf	140,3,c	;volatile
  5117                           
  5118                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  5119  002CB0  948C               	bcf	140,2,c	;volatile
  5120  002CB2                     
  5121                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  5122  002CB2  0E05               	movlw	5
  5123  002CB4                     u4597:
  5124  002CB4  2EE8               	decfsz	wreg,f,c
  5125  002CB6  D7FE               	bra	u4597
  5126  002CB8                     
  5127                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  5128  002CB8  9E8C               	bcf	140,7,c	;volatile
  5129  002CBA                     
  5130                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  5131  002CBA  9C8C               	bcf	140,6,c	;volatile
  5132  002CBC                     
  5133                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  5134  002CBC  8A8C               	bsf	140,5,c	;volatile
  5135  002CBE                     
  5136                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  5137  002CBE  888C               	bsf	140,4,c	;volatile
  5138  002CC0                     
  5139                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  5140  002CC0  968C               	bcf	140,3,c	;volatile
  5141  002CC2                     
  5142                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  5143  002CC2  948C               	bcf	140,2,c	;volatile
  5144                           
  5145                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5146  002CC4  0E16               	movlw	22
  5147  002CC6  6E0A               	movwf	??_Lcd_Init^0,c
  5148  002CC8  0E6C               	movlw	108
  5149  002CCA                     u4607:
  5150  002CCA  2EE8               	decfsz	wreg,f,c
  5151  002CCC  D7FE               	bra	u4607
  5152  002CCE  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5153  002CD0  D7FC               	bra	u4607
  5154  002CD2  D000               	nop2	
  5155  002CD4                     
  5156                           ;flex_lcd.c: 61:     }
  5157  002CD4  2A0B               	incf	Lcd_Init@i^0,f,c
  5158  002CD6  0E03               	movlw	3
  5159  002CD8  640B               	cpfsgt	Lcd_Init@i^0,c
  5160  002CDA  EF71  F016         	goto	u3091
  5161  002CDE  EF73  F016         	goto	u3090
  5162  002CE2                     u3091:
  5163  002CE2  EF4D  F016         	goto	l156
  5164  002CE6                     u3090:
  5165  002CE6                     
  5166                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  5167  002CE6  9E8C               	bcf	140,7,c	;volatile
  5168                           
  5169                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  5170  002CE8  9C8C               	bcf	140,6,c	;volatile
  5171                           
  5172                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  5173  002CEA  8A8C               	bsf	140,5,c	;volatile
  5174                           
  5175                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  5176  002CEC  988C               	bcf	140,4,c	;volatile
  5177                           
  5178                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  5179  002CEE  968C               	bcf	140,3,c	;volatile
  5180                           
  5181                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  5182  002CF0  948C               	bcf	140,2,c	;volatile
  5183                           
  5184                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  5185  002CF2  9E8C               	bcf	140,7,c	;volatile
  5186                           
  5187                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  5188  002CF4  9C8C               	bcf	140,6,c	;volatile
  5189                           
  5190                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  5191  002CF6  8A8C               	bsf	140,5,c	;volatile
  5192                           
  5193                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  5194  002CF8  988C               	bcf	140,4,c	;volatile
  5195                           
  5196                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  5197  002CFA  868C               	bsf	140,3,c	;volatile
  5198                           
  5199                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  5200  002CFC  948C               	bcf	140,2,c	;volatile
  5201  002CFE                     
  5202                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  5203  002CFE  0E05               	movlw	5
  5204  002D00                     u4617:
  5205  002D00  2EE8               	decfsz	wreg,f,c
  5206  002D02  D7FE               	bra	u4617
  5207  002D04                     
  5208                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  5209  002D04  9E8C               	bcf	140,7,c	;volatile
  5210  002D06                     
  5211                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  5212  002D06  9C8C               	bcf	140,6,c	;volatile
  5213  002D08                     
  5214                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  5215  002D08  8A8C               	bsf	140,5,c	;volatile
  5216  002D0A                     
  5217                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  5218  002D0A  988C               	bcf	140,4,c	;volatile
  5219  002D0C                     
  5220                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  5221  002D0C  968C               	bcf	140,3,c	;volatile
  5222  002D0E                     
  5223                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  5224  002D0E  948C               	bcf	140,2,c	;volatile
  5225                           
  5226                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5227  002D10  0E16               	movlw	22
  5228  002D12  6E0A               	movwf	??_Lcd_Init^0,c
  5229  002D14  0E6C               	movlw	108
  5230  002D16                     u4627:
  5231  002D16  2EE8               	decfsz	wreg,f,c
  5232  002D18  D7FE               	bra	u4627
  5233  002D1A  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5234  002D1C  D7FC               	bra	u4627
  5235  002D1E  D000               	nop2	
  5236  002D20                     
  5237                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  5238  002D20  0E28               	movlw	40
  5239  002D22  EC81  F012         	call	_Lcd_Cmd
  5240  002D26                     
  5241                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  5242  002D26  0E10               	movlw	16
  5243  002D28  EC81  F012         	call	_Lcd_Cmd
  5244  002D2C                     
  5245                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  5246  002D2C  0E01               	movlw	1
  5247  002D2E  EC81  F012         	call	_Lcd_Cmd
  5248  002D32                     
  5249                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  5250  002D32  0E0F               	movlw	15
  5251  002D34  EC81  F012         	call	_Lcd_Cmd
  5252  002D38  0012               	return		;funcret
  5253  002D3A                     __end_of_Lcd_Init:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function _appISRConfig *****************
  5257 ;; Defined at:
  5258 ;;		line 25 in file "app.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      void 
  5265 ;; Registers used:
  5266 ;;		None
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5272 ;;      Params:         0       0       0       0       0       0       0       0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5275 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5276 ;;Total ram usage:        0 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    2
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_appInit
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text27
  5287  003844                     __ptext27:
  5288                           	callstack 0
  5289  003844                     _appISRConfig:
  5290                           	callstack 27
  5291  003844                     
  5292                           ;app.c: 30:     RCONbits.IPEN = 1;
  5293  003844  8ED0               	bsf	208,7,c	;volatile
  5294                           
  5295                           ;app.c: 31:     INTCONbits.GIE_GIEH = 1;
  5296  003846  8EF2               	bsf	242,7,c	;volatile
  5297                           
  5298                           ;app.c: 32:     INTCONbits.PEIE_GIEL = 1;
  5299  003848  8CF2               	bsf	242,6,c	;volatile
  5300  00384A  0012               	return		;funcret
  5301  00384C                     __end_of_appISRConfig:
  5302                           	callstack 0
  5303                           
  5304 ;; *************** function _appCounterInit *****************
  5305 ;; Defined at:
  5306 ;;		line 136 in file "servo.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  reload          2    6[COMRAM] unsigned short 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1    wreg      void 
  5313 ;; Registers used:
  5314 ;;		None
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5320 ;;      Params:         2       0       0       0       0       0       0       0       0
  5321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5323 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5324 ;;Total ram usage:        2 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    2
  5327 ;; This function calls:
  5328 ;;		Nothing
  5329 ;; This function is called by:
  5330 ;;		_appInit
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text28
  5335  00383A                     __ptext28:
  5336                           	callstack 0
  5337  00383A                     _appCounterInit:
  5338                           	callstack 27
  5339  00383A                     
  5340                           ;servo.c: 136: void appCounterInit(uint16_t reload);servo.c: 137: {;servo.c: 139:     TM
      +                          R0 = reload;
  5341  00383A  C007  FFD6         	movff	appCounterInit@reload,4054	;volatile
  5342  00383E  C008  FFD7         	movff	appCounterInit@reload+1,4055	;volatile
  5343  003842  0012               	return		;funcret
  5344  003844                     __end_of_appCounterInit:
  5345                           	callstack 0
  5346                           
  5347 ;; *************** function _adcInit *****************
  5348 ;; Defined at:
  5349 ;;		line 10 in file "adc.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  ADC_PINs        1    wreg     unsigned char 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  ADC_PINs        1    7[COMRAM] unsigned char 
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      void 
  5356 ;; Registers used:
  5357 ;;		wreg, status,2, status,0
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0
  5364 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5365 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5366 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5367 ;;Total ram usage:        2 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    2
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_appInit
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text29
  5378  00353E                     __ptext29:
  5379                           	callstack 0
  5380  00353E                     _adcInit:
  5381                           	callstack 27
  5382                           
  5383                           ;incstack = 0
  5384                           ;adcInit@ADC_PINs stored from wreg
  5385  00353E  6E08               	movwf	adcInit@ADC_PINs^0,c
  5386  003540                     
  5387                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  5388  003540  5008               	movf	adcInit@ADC_PINs^0,w,c
  5389  003542  A4D8               	btfss	status,2,c
  5390  003544  EFA6  F01A         	goto	u3791
  5391  003548  EFA8  F01A         	goto	u3790
  5392  00354C                     u3791:
  5393  00354C  EFAE  F01A         	goto	l4041
  5394  003550                     u3790:
  5395  003550                     
  5396                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  5397  003550  50C1               	movf	193,w,c	;volatile
  5398  003552  0BF0               	andlw	-16
  5399  003554  090E               	iorlw	14
  5400  003556  6EC1               	movwf	193,c	;volatile
  5401                           
  5402                           ;adc.c: 16:     }
  5403  003558  EFB6  F01A         	goto	l4043
  5404  00355C                     l4041:
  5405                           
  5406                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  5407  00355C  5008               	movf	adcInit@ADC_PINs^0,w,c
  5408  00355E  080F               	sublw	15
  5409  003560  6E07               	movwf	??_adcInit^0,c
  5410  003562  50C1               	movf	193,w,c	;volatile
  5411  003564  1807               	xorwf	??_adcInit^0,w,c
  5412  003566  0BF0               	andlw	-16
  5413  003568  1807               	xorwf	??_adcInit^0,w,c
  5414  00356A  6EC1               	movwf	193,c	;volatile
  5415  00356C                     l4043:
  5416                           
  5417                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  5418  00356C  0ECF               	movlw	-49
  5419  00356E  16C1               	andwf	193,f,c	;volatile
  5420  003570                     
  5421                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  5422  003570  50C0               	movf	192,w,c	;volatile
  5423  003572  0BC7               	andlw	-57
  5424  003574  0910               	iorlw	16
  5425  003576  6EC0               	movwf	192,c	;volatile
  5426  003578                     
  5427                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  5428  003578  50C0               	movf	192,w,c	;volatile
  5429  00357A  0BF8               	andlw	-8
  5430  00357C  0903               	iorlw	3
  5431  00357E  6EC0               	movwf	192,c	;volatile
  5432  003580                     
  5433                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  5434  003580  8EC0               	bsf	192,7,c	;volatile
  5435  003582                     
  5436                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  5437  003582  80C2               	bsf	194,0,c	;volatile
  5438  003584                     
  5439                           ;adc.c: 41:     TRISCbits.TRISC1 = 0;
  5440  003584  9294               	bcf	148,1,c	;volatile
  5441  003586  0012               	return		;funcret
  5442  003588                     __end_of_adcInit:
  5443                           	callstack 0
  5444                           
  5445 ;; *************** function _appTimerStop *****************
  5446 ;; Defined at:
  5447 ;;		line 131 in file "servo.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		None
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5461 ;;      Params:         0       0       0       0       0       0       0       0       0
  5462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5464 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5465 ;;Total ram usage:        0 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    2
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_appGetElements
  5472 ;;		_warning
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text30
  5477  003850                     __ptext30:
  5478                           	callstack 0
  5479  003850                     _appTimerStop:
  5480                           	callstack 27
  5481  003850                     
  5482                           ;servo.c: 133:     T3CONbits.TMR3ON = 0;
  5483  003850  90B1               	bcf	177,0,c	;volatile
  5484  003852  0012               	return		;funcret
  5485  003854                     __end_of_appTimerStop:
  5486                           	callstack 0
  5487                           
  5488 ;; *************** function _appTimerStart *****************
  5489 ;; Defined at:
  5490 ;;		line 124 in file "servo.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		None
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5504 ;;      Params:         0       0       0       0       0       0       0       0       0
  5505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5508 ;;Total ram usage:        0 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    2
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_appGetElements
  5515 ;;		_warning
  5516 ;;		_confirmacion
  5517 ;;		_sendinformation
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text31
  5522  003854                     __ptext31:
  5523                           	callstack 0
  5524  003854                     _appTimerStart:
  5525                           	callstack 27
  5526  003854                     
  5527                           ;servo.c: 128:     T3CONbits.TMR3ON = 1;
  5528  003854  80B1               	bsf	177,0,c	;volatile
  5529  003856  0012               	return		;funcret
  5530  003858                     __end_of_appTimerStart:
  5531                           	callstack 0
  5532                           
  5533 ;; *************** function _appSubGiveElemts *****************
  5534 ;; Defined at:
  5535 ;;		line 106 in file "app.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  data            2   14[COMRAM] PTR struct _state
  5538 ;;		 -> datos(25), 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5550 ;;      Params:         2       0       0       0       0       0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5553 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5554 ;;Total ram usage:        2 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    4
  5557 ;; This function calls:
  5558 ;;		_appCounterStart
  5559 ;;		_setServo
  5560 ;; This function is called by:
  5561 ;;		_appGetElements
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text32
  5566  003826                     __ptext32:
  5567                           	callstack 0
  5568  003826                     _appSubGiveElemts:
  5569                           	callstack 25
  5570  003826                     
  5571                           ;app.c: 106: void appSubGiveElemts(StateMachine *data);app.c: 107: {;app.c: 108:     app
      +                          CounterStart();
  5572  003826  EC2C  F01C         	call	_appCounterStart	;wreg free
  5573  00382A                     
  5574                           ;app.c: 109:     setServo(39,10,2);
  5575  00382A  0E0A               	movlw	10
  5576  00382C  6E0B               	movwf	setServo@pulsos^0,c
  5577  00382E  0E02               	movlw	2
  5578  003830  6E0C               	movwf	setServo@pin^0,c
  5579  003832  0E27               	movlw	39
  5580  003834  ECD2  F01B         	call	_setServo
  5581  003838  0012               	return		;funcret
  5582  00383A                     __end_of_appSubGiveElemts:
  5583                           	callstack 0
  5584                           
  5585 ;; *************** function _setServo *****************
  5586 ;; Defined at:
  5587 ;;		line 77 in file "servo.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  angle           1    wreg     unsigned char 
  5590 ;;  pulsos          1   10[COMRAM] unsigned char 
  5591 ;;  pin             1   11[COMRAM] unsigned char 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  angle           1   12[COMRAM] unsigned char 
  5594 ;;  i               1   13[COMRAM] unsigned char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  1    wreg      void 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5604 ;;      Params:         2       0       0       0       0       0       0       0       0
  5605 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5607 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5608 ;;Total ram usage:        4 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    3
  5611 ;; This function calls:
  5612 ;;		_setServoAngle
  5613 ;; This function is called by:
  5614 ;;		_appInit
  5615 ;;		_appStateRecolectData
  5616 ;;		_appStateInitial
  5617 ;;		_appSubGiveElemts
  5618 ;;		_warning
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text33
  5623  0037A4                     __ptext33:
  5624                           	callstack 0
  5625  0037A4                     _setServo:
  5626                           	callstack 26
  5627                           
  5628                           ;incstack = 0
  5629                           ;setServo@angle stored from wreg
  5630  0037A4  6E0D               	movwf	setServo@angle^0,c
  5631  0037A6                     
  5632                           ;servo.c: 77: void setServo(uint8_t angle, uint8_t pulsos, uint8_t pin);servo.c: 78: {;s
      +                          ervo.c: 79:     for(uint8_t i = 0; i < pulsos; i++)
  5633  0037A6  0E00               	movlw	0
  5634  0037A8  6E0E               	movwf	setServo@i^0,c
  5635  0037AA  EFDD  F01B         	goto	l3617
  5636  0037AE                     l3613:
  5637                           
  5638                           ;servo.c: 80:     {;servo.c: 81:         setServoAngle(angle, pin);
  5639  0037AE  C00C  F007         	movff	setServo@pin,setServoAngle@pin
  5640  0037B2  500D               	movf	setServo@angle^0,w,c
  5641  0037B4  EC16  F013         	call	_setServoAngle
  5642  0037B8                     
  5643                           ;servo.c: 82:     }
  5644  0037B8  2A0E               	incf	setServo@i^0,f,c
  5645  0037BA                     l3617:
  5646  0037BA  500B               	movf	setServo@pulsos^0,w,c
  5647  0037BC  5C0E               	subwf	setServo@i^0,w,c
  5648  0037BE  A0D8               	btfss	status,0,c
  5649  0037C0  EFE4  F01B         	goto	u3101
  5650  0037C4  EFE6  F01B         	goto	u3100
  5651  0037C8                     u3101:
  5652  0037C8  EFD7  F01B         	goto	l3613
  5653  0037CC                     u3100:
  5654  0037CC  0012               	return		;funcret
  5655  0037CE                     __end_of_setServo:
  5656                           	callstack 0
  5657                           
  5658 ;; *************** function _setServoAngle *****************
  5659 ;; Defined at:
  5660 ;;		line 20 in file "servo.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  angle           1    wreg     unsigned char 
  5663 ;;  pin             1    6[COMRAM] unsigned char 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  angle           1    9[COMRAM] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2, status,0
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5675 ;;      Params:         1       0       0       0       0       0       0       0       0
  5676 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5677 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5678 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5679 ;;Total ram usage:        4 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:    2
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_setServo
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text34
  5690  00262C                     __ptext34:
  5691                           	callstack 0
  5692  00262C                     _setServoAngle:
  5693                           	callstack 26
  5694                           
  5695                           ;incstack = 0
  5696                           ;setServoAngle@angle stored from wreg
  5697  00262C  6E0A               	movwf	setServoAngle@angle^0,c
  5698  00262E                     
  5699                           ;servo.c: 20: void setServoAngle(uint8_t angle, uint8_t pin);servo.c: 21: {;servo.c: 23:
      +                               TMR2 = angle;
  5700  00262E  C00A  FFCC         	movff	setServoAngle@angle,4044	;volatile
  5701  002632                     
  5702                           ;servo.c: 24:     PR2 = 255;
  5703  002632  68CB               	setf	203,c	;volatile
  5704  002634                     
  5705                           ;servo.c: 26:     PIR1bits.TMR2IF = 0;
  5706  002634  929E               	bcf	158,1,c	;volatile
  5707                           
  5708                           ;servo.c: 28:     switch(pin)
  5709  002636  EF26  F013         	goto	l3359
  5710  00263A                     l240:
  5711                           
  5712                           ;servo.c: 31:             LATEbits.LATE0 = 1;
  5713  00263A  808D               	bsf	141,0,c	;volatile
  5714                           
  5715                           ;servo.c: 32:             break;
  5716  00263C  EF3F  F013         	goto	l3361
  5717  002640                     l242:
  5718                           
  5719                           ;servo.c: 34:             LATEbits.LATE1 = 1;
  5720  002640  828D               	bsf	141,1,c	;volatile
  5721                           
  5722                           ;servo.c: 35:             break;
  5723  002642  EF3F  F013         	goto	l3361
  5724  002646                     l243:
  5725                           
  5726                           ;servo.c: 37:             LATEbits.LATE2 = 1;
  5727  002646  848D               	bsf	141,2,c	;volatile
  5728                           
  5729                           ;servo.c: 38:             break;
  5730  002648  EF3F  F013         	goto	l3361
  5731  00264C                     l3359:
  5732  00264C  5007               	movf	setServoAngle@pin^0,w,c
  5733  00264E  6E08               	movwf	??_setServoAngle^0,c
  5734  002650  6A09               	clrf	(??_setServoAngle+1)^0,c
  5735                           
  5736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5737                           ; Switch size 1, requested type "simple"
  5738                           ; Number of cases is 1, Range of values is 0 to 0
  5739                           ; switch strategies available:
  5740                           ; Name         Instructions Cycles
  5741                           ; simple_byte            4     3 (average)
  5742                           ;	Chosen strategy is simple_byte
  5743  002652  5009               	movf	(??_setServoAngle+1)^0,w,c
  5744  002654  0A00               	xorlw	0	; case 0
  5745  002656  B4D8               	btfsc	status,2,c
  5746  002658  EF30  F013         	goto	l5023
  5747  00265C  EF3F  F013         	goto	l3361
  5748  002660                     l5023:
  5749                           
  5750                           ; Switch size 1, requested type "simple"
  5751                           ; Number of cases is 3, Range of values is 0 to 2
  5752                           ; switch strategies available:
  5753                           ; Name         Instructions Cycles
  5754                           ; simple_byte           10     6 (average)
  5755                           ;	Chosen strategy is simple_byte
  5756  002660  5008               	movf	??_setServoAngle^0,w,c
  5757  002662  0A00               	xorlw	0	; case 0
  5758  002664  B4D8               	btfsc	status,2,c
  5759  002666  EF1D  F013         	goto	l240
  5760  00266A  0A01               	xorlw	1	; case 1
  5761  00266C  B4D8               	btfsc	status,2,c
  5762  00266E  EF20  F013         	goto	l242
  5763  002672  0A03               	xorlw	3	; case 2
  5764  002674  B4D8               	btfsc	status,2,c
  5765  002676  EF23  F013         	goto	l243
  5766  00267A  EF3F  F013         	goto	l3361
  5767  00267E                     l3361:
  5768                           
  5769                           ;servo.c: 41:     if(angle == 45)
  5770  00267E  0E2D               	movlw	45
  5771  002680  180A               	xorwf	setServoAngle@angle^0,w,c
  5772  002682  A4D8               	btfss	status,2,c
  5773  002684  EF46  F013         	goto	u2771
  5774  002688  EF48  F013         	goto	u2770
  5775  00268C                     u2771:
  5776  00268C  EF51  F013         	goto	l3365
  5777  002690                     u2770:
  5778  002690                     
  5779                           ;servo.c: 42:     {;servo.c: 43:         _delay((unsigned long)((2000)*(12000000/4000000
      +                          .0)));
  5780  002690  0E08               	movlw	8
  5781  002692  6E08               	movwf	??_setServoAngle^0,c
  5782  002694  0ECA               	movlw	202
  5783  002696                     u4637:
  5784  002696  2EE8               	decfsz	wreg,f,c
  5785  002698  D7FE               	bra	u4637
  5786  00269A  2E08               	decfsz	??_setServoAngle^0,f,c
  5787  00269C  D7FC               	bra	u4637
  5788                           
  5789                           ;servo.c: 44:     }
  5790  00269E  EF75  F013         	goto	l3373
  5791  0026A2                     l3365:
  5792  0026A2  0E21               	movlw	33
  5793  0026A4  180A               	xorwf	setServoAngle@angle^0,w,c
  5794  0026A6  A4D8               	btfss	status,2,c
  5795  0026A8  EF58  F013         	goto	u2781
  5796  0026AC  EF5A  F013         	goto	u2780
  5797  0026B0                     u2781:
  5798  0026B0  EF64  F013         	goto	l3369
  5799  0026B4                     u2780:
  5800  0026B4                     
  5801                           ;servo.c: 46:     {;servo.c: 47:         _delay((unsigned long)((1000)*(12000000/4000000
      +                          .0)));
  5802  0026B4  0E04               	movlw	4
  5803  0026B6  6E08               	movwf	??_setServoAngle^0,c
  5804  0026B8  0EE4               	movlw	228
  5805  0026BA                     u4647:
  5806  0026BA  2EE8               	decfsz	wreg,f,c
  5807  0026BC  D7FE               	bra	u4647
  5808  0026BE  2E08               	decfsz	??_setServoAngle^0,f,c
  5809  0026C0  D7FC               	bra	u4647
  5810  0026C2  D000               	nop2	
  5811                           
  5812                           ;servo.c: 48:     }
  5813  0026C4  EF75  F013         	goto	l3373
  5814  0026C8                     l3369:
  5815  0026C8  0E27               	movlw	39
  5816  0026CA  180A               	xorwf	setServoAngle@angle^0,w,c
  5817  0026CC  A4D8               	btfss	status,2,c
  5818  0026CE  EF6B  F013         	goto	u2791
  5819  0026D2  EF6D  F013         	goto	u2790
  5820  0026D6                     u2791:
  5821  0026D6  EF75  F013         	goto	l3373
  5822  0026DA                     u2790:
  5823  0026DA                     
  5824                           ;servo.c: 50:     {;servo.c: 51:         _delay((unsigned long)((1500)*(12000000/4000000
      +                          .0)));
  5825  0026DA  0E06               	movlw	6
  5826  0026DC  6E08               	movwf	??_setServoAngle^0,c
  5827  0026DE  0ED7               	movlw	215
  5828  0026E0                     u4657:
  5829  0026E0  2EE8               	decfsz	wreg,f,c
  5830  0026E2  D7FE               	bra	u4657
  5831  0026E4  2E08               	decfsz	??_setServoAngle^0,f,c
  5832  0026E6  D7FC               	bra	u4657
  5833  0026E8  F000               	nop	
  5834  0026EA                     l3373:
  5835                           
  5836                           ;servo.c: 54:     T2CONbits.TMR2ON = 1;
  5837  0026EA  84CA               	bsf	202,2,c	;volatile
  5838                           
  5839                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5840  0026EC  EF9A  F013         	goto	l249
  5841  0026F0                     l252:
  5842                           
  5843                           ;servo.c: 60:                 LATEbits.LATE0 = 0;
  5844  0026F0  908D               	bcf	141,0,c	;volatile
  5845                           
  5846                           ;servo.c: 61:                 break;
  5847  0026F2  EF9A  F013         	goto	l249
  5848  0026F6                     l254:
  5849                           
  5850                           ;servo.c: 63:                 LATEbits.LATE1 = 0;
  5851  0026F6  928D               	bcf	141,1,c	;volatile
  5852                           
  5853                           ;servo.c: 64:                 break;
  5854  0026F8  EF9A  F013         	goto	l249
  5855  0026FC                     l255:
  5856                           
  5857                           ;servo.c: 66:                 LATEbits.LATE2 = 0;
  5858  0026FC  948D               	bcf	141,2,c	;volatile
  5859                           
  5860                           ;servo.c: 67:                 break;
  5861  0026FE  EF9A  F013         	goto	l249
  5862  002702                     l3377:
  5863  002702  5007               	movf	setServoAngle@pin^0,w,c
  5864  002704  6E08               	movwf	??_setServoAngle^0,c
  5865  002706  6A09               	clrf	(??_setServoAngle+1)^0,c
  5866                           
  5867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5868                           ; Switch size 1, requested type "simple"
  5869                           ; Number of cases is 1, Range of values is 0 to 0
  5870                           ; switch strategies available:
  5871                           ; Name         Instructions Cycles
  5872                           ; simple_byte            4     3 (average)
  5873                           ;	Chosen strategy is simple_byte
  5874  002708  5009               	movf	(??_setServoAngle+1)^0,w,c
  5875  00270A  0A00               	xorlw	0	; case 0
  5876  00270C  B4D8               	btfsc	status,2,c
  5877  00270E  EF8B  F013         	goto	l5025
  5878  002712  EF9A  F013         	goto	l249
  5879  002716                     l5025:
  5880                           
  5881                           ; Switch size 1, requested type "simple"
  5882                           ; Number of cases is 3, Range of values is 0 to 2
  5883                           ; switch strategies available:
  5884                           ; Name         Instructions Cycles
  5885                           ; simple_byte           10     6 (average)
  5886                           ;	Chosen strategy is simple_byte
  5887  002716  5008               	movf	??_setServoAngle^0,w,c
  5888  002718  0A00               	xorlw	0	; case 0
  5889  00271A  B4D8               	btfsc	status,2,c
  5890  00271C  EF78  F013         	goto	l252
  5891  002720  0A01               	xorlw	1	; case 1
  5892  002722  B4D8               	btfsc	status,2,c
  5893  002724  EF7B  F013         	goto	l254
  5894  002728  0A03               	xorlw	3	; case 2
  5895  00272A  B4D8               	btfsc	status,2,c
  5896  00272C  EF7E  F013         	goto	l255
  5897  002730  EF9A  F013         	goto	l249
  5898  002734                     l249:
  5899                           
  5900                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5901  002734  A29E               	btfss	158,1,c	;volatile
  5902  002736  EF9F  F013         	goto	u2801
  5903  00273A  EFA1  F013         	goto	u2800
  5904  00273E                     u2801:
  5905  00273E  EF81  F013         	goto	l3377
  5906  002742                     u2800:
  5907  002742                     
  5908                           ;servo.c: 71:     T2CONbits.TMR2ON = 0;
  5909  002742  94CA               	bcf	202,2,c	;volatile
  5910                           
  5911                           ;servo.c: 72:     PIR1bits.TMR2IF = 0;
  5912  002744  929E               	bcf	158,1,c	;volatile
  5913  002746  0012               	return		;funcret
  5914  002748                     __end_of_setServoAngle:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function _appCounterStart *****************
  5918 ;; Defined at:
  5919 ;;		line 142 in file "servo.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		None
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5933 ;;      Params:         0       0       0       0       0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5936 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5937 ;;Total ram usage:        0 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    2
  5940 ;; This function calls:
  5941 ;;		Nothing
  5942 ;; This function is called by:
  5943 ;;		_appSubGiveElemts
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text35
  5948  003858                     __ptext35:
  5949                           	callstack 0
  5950  003858                     _appCounterStart:
  5951                           	callstack 26
  5952  003858                     
  5953                           ;servo.c: 145:     T0CONbits.TMR0ON = 1;
  5954  003858  8ED5               	bsf	213,7,c	;volatile
  5955  00385A  0012               	return		;funcret
  5956  00385C                     __end_of_appCounterStart:
  5957                           	callstack 0
  5958                           
  5959 ;; *************** function _appSubGetData *****************
  5960 ;; Defined at:
  5961 ;;		line 86 in file "app.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  5964 ;;		 -> datos(25), 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;  cantidad        2   38[BANK0 ] unsigned short 
  5967 ;;  inout           1   40[BANK0 ] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5977 ;;      Params:         0       2       0       0       0       0       0       0       0
  5978 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5980 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5981 ;;Total ram usage:        5 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:   10
  5984 ;; This function calls:
  5985 ;;		_Lcd_Out
  5986 ;;		___wmul
  5987 ;;		_memset
  5988 ;;		_sprintf
  5989 ;;		_teclado
  5990 ;; This function is called by:
  5991 ;;		_appGetElements
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text36
  5996  002850                     __ptext36:
  5997                           	callstack 0
  5998  002850                     _appSubGetData:
  5999                           	callstack 19
  6000  002850                     
  6001                           ;app.c: 86: void appSubGetData(StateMachine *data_Inout);app.c: 87: {;app.c: 88:     uin
      +                          t16_t cantidad = 0;
  6002  002850  0E00               	movlw	0
  6003  002852  0100               	movlb	0	; () banked
  6004  002854  6FBD               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  6005  002856  0E00               	movlw	0
  6006  002858  6FBC               	movwf	appSubGetData@cantidad& (0+255),b
  6007                           
  6008                           ;app.c: 89:     uint8_t inout = 0;
  6009  00285A  0E00               	movlw	0
  6010  00285C  6FBE               	movwf	appSubGetData@inout& (0+255),b
  6011  00285E                     
  6012                           ; BSR set to: 0
  6013                           ;app.c: 90:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  6014  00285E  0E07               	movlw	7
  6015  002860  25BA               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6016  002862  6E07               	movwf	memset@dest^0,c
  6017  002864  0E00               	movlw	0
  6018  002866  21BB               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6019  002868  6E08               	movwf	(memset@dest+1)^0,c
  6020  00286A  0E00               	movlw	0
  6021  00286C  6E0A               	movwf	(memset@c+1)^0,c
  6022  00286E  0E00               	movlw	0
  6023  002870  6E09               	movwf	memset@c^0,c
  6024  002872  0E00               	movlw	0
  6025  002874  6E0C               	movwf	(memset@n+1)^0,c
  6026  002876  0E10               	movlw	16
  6027  002878  6E0B               	movwf	memset@n^0,c
  6028  00287A  EC6D  F010         	call	_memset	;wreg free
  6029  00287E                     
  6030                           ;app.c: 91:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  6031  00287E  0E00               	movlw	0
  6032  002880  6E0A               	movwf	Lcd_Out@x^0,c
  6033  002882  0E12               	movlw	low STR_6
  6034  002884  6E0B               	movwf	Lcd_Out@buffer^0,c
  6035  002886  0E08               	movlw	high STR_6
  6036  002888  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6037  00288A  0E01               	movlw	1
  6038  00288C  EC11  F015         	call	_Lcd_Out
  6039                           
  6040                           ;app.c: 92:     while(inout != '*')
  6041  002890  EF92  F014         	goto	l4739
  6042  002894                     l4727:
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;app.c: 93:     {;app.c: 94:         teclado(&inout);
  6046  002894  0EBE               	movlw	low appSubGetData@inout
  6047  002896  6E07               	movwf	teclado@valor^0,c
  6048  002898  0E00               	movlw	high appSubGetData@inout
  6049  00289A  6E08               	movwf	(teclado@valor+1)^0,c
  6050  00289C  EC47  F00B         	call	_teclado	;wreg free
  6051  0028A0                     
  6052                           ;app.c: 96:         if((inout >= '0') && (inout <= '9'))
  6053  0028A0  0E2F               	movlw	47
  6054  0028A2  0100               	movlb	0	; () banked
  6055  0028A4  65BE               	cpfsgt	appSubGetData@inout& (0+255),b
  6056  0028A6  EF57  F014         	goto	u4291
  6057  0028AA  EF59  F014         	goto	u4290
  6058  0028AE                     u4291:
  6059  0028AE  EF76  F014         	goto	l4735
  6060  0028B2                     u4290:
  6061  0028B2                     
  6062                           ; BSR set to: 0
  6063  0028B2  0E3A               	movlw	58
  6064  0028B4  61BE               	cpfslt	appSubGetData@inout& (0+255),b
  6065  0028B6  EF5F  F014         	goto	u4301
  6066  0028BA  EF61  F014         	goto	u4300
  6067  0028BE                     u4301:
  6068  0028BE  EF76  F014         	goto	l4735
  6069  0028C2                     u4300:
  6070  0028C2                     
  6071                           ; BSR set to: 0
  6072                           ;app.c: 97:         {;app.c: 98:             cantidad = (cantidad*10)+(inout - 48);
  6073  0028C2  C0BC  F007         	movff	appSubGetData@cantidad,___wmul@multiplier
  6074  0028C6  C0BD  F008         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  6075  0028CA  0E00               	movlw	0
  6076  0028CC  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  6077  0028CE  0E0A               	movlw	10
  6078  0028D0  6E09               	movwf	___wmul@multiplicand^0,c
  6079  0028D2  ECE7  F01B         	call	___wmul	;wreg free
  6080  0028D6  0100               	movlb	0	; () banked
  6081  0028D8  51BE               	movf	appSubGetData@inout& (0+255),w,b
  6082  0028DA  2607               	addwf	?___wmul^0,f,c
  6083  0028DC  0E00               	movlw	0
  6084  0028DE  2208               	addwfc	(?___wmul+1)^0,f,c
  6085  0028E0  0ED0               	movlw	208
  6086  0028E2  2407               	addwf	?___wmul^0,w,c
  6087  0028E4  6FBC               	movwf	appSubGetData@cantidad& (0+255),b
  6088  0028E6  0EFF               	movlw	255
  6089  0028E8  2008               	addwfc	(?___wmul+1)^0,w,c
  6090  0028EA  6FBD               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  6091  0028EC                     l4735:
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;app.c: 100:         sprintf((char *)data_Inout->display,"%d",cantidad);
  6095  0028EC  0E07               	movlw	7
  6096  0028EE  25BA               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6097  0028F0  6FA8               	movwf	sprintf@s& (0+255),b
  6098  0028F2  0E00               	movlw	0
  6099  0028F4  21BB               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6100  0028F6  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  6101  0028F8  0E7B               	movlw	low (STR_5+2)
  6102  0028FA  6FAA               	movwf	sprintf@fmt& (0+255),b
  6103  0028FC  0E08               	movlw	high (STR_5+2)
  6104  0028FE  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  6105  002900  C0BC  F0AC         	movff	appSubGetData@cantidad,?_sprintf+4
  6106  002904  C0BD  F0AD         	movff	appSubGetData@cantidad+1,?_sprintf+5
  6107  002908  EC03  F01A         	call	_sprintf	;wreg free
  6108  00290C                     
  6109                           ;app.c: 101:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  6110  00290C  0E00               	movlw	0
  6111  00290E  6E0A               	movwf	Lcd_Out@x^0,c
  6112  002910  0E07               	movlw	7
  6113  002912  0100               	movlb	0	; () banked
  6114  002914  25BA               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6115  002916  6E0B               	movwf	Lcd_Out@buffer^0,c
  6116  002918  0E00               	movlw	0
  6117  00291A  21BB               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6118  00291C  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6119  00291E  0E02               	movlw	2
  6120  002920  EC11  F015         	call	_Lcd_Out
  6121  002924                     l4739:
  6122                           
  6123                           ;app.c: 92:     while(inout != '*')
  6124  002924  0E2A               	movlw	42
  6125  002926  0100               	movlb	0	; () banked
  6126  002928  19BE               	xorwf	appSubGetData@inout& (0+255),w,b
  6127  00292A  A4D8               	btfss	status,2,c
  6128  00292C  EF9A  F014         	goto	u4311
  6129  002930  EF9C  F014         	goto	u4310
  6130  002934                     u4311:
  6131  002934  EF4A  F014         	goto	l4727
  6132  002938                     u4310:
  6133  002938                     
  6134                           ; BSR set to: 0
  6135                           ;app.c: 103:     data_Inout->elements += (int16_t)cantidad;
  6136  002938  EE20 F001          	lfsr	2,1
  6137  00293C  51BA               	movf	appSubGetData@data_Inout& (0+255),w,b
  6138  00293E  26D9               	addwf	fsr2l,f,c
  6139  002940  51BB               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  6140  002942  22DA               	addwfc	fsr2h,f,c
  6141  002944  51BC               	movf	appSubGetData@cantidad& (0+255),w,b
  6142  002946  26DE               	addwf	postinc2,f,c
  6143  002948  51BD               	movf	(appSubGetData@cantidad+1)& (0+255),w,b
  6144  00294A  22DD               	addwfc	postdec2,f,c
  6145  00294C                     
  6146                           ; BSR set to: 0
  6147  00294C  0012               	return		;funcret
  6148  00294E                     __end_of_appSubGetData:
  6149                           	callstack 0
  6150                           
  6151 ;; *************** function _teclado *****************
  6152 ;; Defined at:
  6153 ;;		line 10 in file "teclado.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  valor           2    6[COMRAM] PTR unsigned char 
  6156 ;;		 -> appSubGetData@inout(1), datos(25), 
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;		None
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  1    wreg      void 
  6161 ;; Registers used:
  6162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6168 ;;      Params:         2       0       0       0       0       0       0       0       0
  6169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6171 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6172 ;;Total ram usage:        2 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    2
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_appStateInitial
  6179 ;;		_appSubGetData
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text37
  6184  00168E                     __ptext37:
  6185                           	callstack 0
  6186  00168E                     _teclado:
  6187                           	callstack 27
  6188  00168E                     
  6189                           ;teclado.c: 11:     *valor = 0;
  6190  00168E  C007  FFD9         	movff	teclado@valor,fsr2l
  6191  001692  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6192  001696  0E00               	movlw	0
  6193  001698  6EDF               	movwf	indf2,c
  6194  00169A                     
  6195                           ;teclado.c: 12:     PORTB=0xF0;
  6196  00169A  0EF0               	movlw	240
  6197  00169C  6E81               	movwf	129,c	;volatile
  6198  00169E                     
  6199                           ;teclado.c: 13:     if(PORTB != 0xF0){
  6200  00169E  0EF0               	movlw	240
  6201  0016A0  1881               	xorwf	129,w,c	;volatile
  6202  0016A2  B4D8               	btfsc	status,2,c
  6203  0016A4  EF56  F00B         	goto	u2911
  6204  0016A8  EF58  F00B         	goto	u2910
  6205  0016AC                     u2911:
  6206  0016AC  EF30  F00C         	goto	l3549
  6207  0016B0                     u2910:
  6208  0016B0                     
  6209                           ;teclado.c: 14:         PORTB=0xFE;
  6210  0016B0  0EFE               	movlw	254
  6211  0016B2  6E81               	movwf	129,c	;volatile
  6212  0016B4                     
  6213                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  6214  0016B4  B881               	btfsc	129,4,c	;volatile
  6215  0016B6  EF5F  F00B         	goto	u2921
  6216  0016BA  EF61  F00B         	goto	u2920
  6217  0016BE                     u2921:
  6218  0016BE  EF67  F00B         	goto	l3483
  6219  0016C2                     u2920:
  6220  0016C2  C007  FFD9         	movff	teclado@valor,fsr2l
  6221  0016C6  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6222  0016CA  0E2A               	movlw	42
  6223  0016CC  6EDF               	movwf	indf2,c
  6224  0016CE                     l3483:
  6225                           
  6226                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  6227  0016CE  BA81               	btfsc	129,5,c	;volatile
  6228  0016D0  EF6C  F00B         	goto	u2931
  6229  0016D4  EF6E  F00B         	goto	u2930
  6230  0016D8                     u2931:
  6231  0016D8  EF74  F00B         	goto	l3487
  6232  0016DC                     u2930:
  6233  0016DC  C007  FFD9         	movff	teclado@valor,fsr2l
  6234  0016E0  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6235  0016E4  0E30               	movlw	48
  6236  0016E6  6EDF               	movwf	indf2,c
  6237  0016E8                     l3487:
  6238                           
  6239                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  6240  0016E8  BC81               	btfsc	129,6,c	;volatile
  6241  0016EA  EF79  F00B         	goto	u2941
  6242  0016EE  EF7B  F00B         	goto	u2940
  6243  0016F2                     u2941:
  6244  0016F2  EF81  F00B         	goto	l3491
  6245  0016F6                     u2940:
  6246  0016F6  C007  FFD9         	movff	teclado@valor,fsr2l
  6247  0016FA  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6248  0016FE  0E23               	movlw	35
  6249  001700  6EDF               	movwf	indf2,c
  6250  001702                     l3491:
  6251                           
  6252                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  6253  001702  BE81               	btfsc	129,7,c	;volatile
  6254  001704  EF86  F00B         	goto	u2951
  6255  001708  EF88  F00B         	goto	u2950
  6256  00170C                     u2951:
  6257  00170C  EF8E  F00B         	goto	l3495
  6258  001710                     u2950:
  6259  001710  C007  FFD9         	movff	teclado@valor,fsr2l
  6260  001714  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6261  001718  0E44               	movlw	68
  6262  00171A  6EDF               	movwf	indf2,c
  6263  00171C                     l3495:
  6264                           
  6265                           ;teclado.c: 19:         PORTB=0xFD;
  6266  00171C  0EFD               	movlw	253
  6267  00171E  6E81               	movwf	129,c	;volatile
  6268  001720                     
  6269                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  6270  001720  B881               	btfsc	129,4,c	;volatile
  6271  001722  EF95  F00B         	goto	u2961
  6272  001726  EF97  F00B         	goto	u2960
  6273  00172A                     u2961:
  6274  00172A  EF9D  F00B         	goto	l3501
  6275  00172E                     u2960:
  6276  00172E  C007  FFD9         	movff	teclado@valor,fsr2l
  6277  001732  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6278  001736  0E37               	movlw	55
  6279  001738  6EDF               	movwf	indf2,c
  6280  00173A                     l3501:
  6281                           
  6282                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  6283  00173A  BA81               	btfsc	129,5,c	;volatile
  6284  00173C  EFA2  F00B         	goto	u2971
  6285  001740  EFA4  F00B         	goto	u2970
  6286  001744                     u2971:
  6287  001744  EFAA  F00B         	goto	l3505
  6288  001748                     u2970:
  6289  001748  C007  FFD9         	movff	teclado@valor,fsr2l
  6290  00174C  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6291  001750  0E38               	movlw	56
  6292  001752  6EDF               	movwf	indf2,c
  6293  001754                     l3505:
  6294                           
  6295                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  6296  001754  BC81               	btfsc	129,6,c	;volatile
  6297  001756  EFAF  F00B         	goto	u2981
  6298  00175A  EFB1  F00B         	goto	u2980
  6299  00175E                     u2981:
  6300  00175E  EFB7  F00B         	goto	l3509
  6301  001762                     u2980:
  6302  001762  C007  FFD9         	movff	teclado@valor,fsr2l
  6303  001766  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6304  00176A  0E39               	movlw	57
  6305  00176C  6EDF               	movwf	indf2,c
  6306  00176E                     l3509:
  6307                           
  6308                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  6309  00176E  BE81               	btfsc	129,7,c	;volatile
  6310  001770  EFBC  F00B         	goto	u2991
  6311  001774  EFBE  F00B         	goto	u2990
  6312  001778                     u2991:
  6313  001778  EFC4  F00B         	goto	l3513
  6314  00177C                     u2990:
  6315  00177C  C007  FFD9         	movff	teclado@valor,fsr2l
  6316  001780  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6317  001784  0E43               	movlw	67
  6318  001786  6EDF               	movwf	indf2,c
  6319  001788                     l3513:
  6320                           
  6321                           ;teclado.c: 24:         PORTB=0xFB;
  6322  001788  0EFB               	movlw	251
  6323  00178A  6E81               	movwf	129,c	;volatile
  6324  00178C                     
  6325                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  6326  00178C  B881               	btfsc	129,4,c	;volatile
  6327  00178E  EFCB  F00B         	goto	u3001
  6328  001792  EFCD  F00B         	goto	u3000
  6329  001796                     u3001:
  6330  001796  EFD3  F00B         	goto	l3519
  6331  00179A                     u3000:
  6332  00179A  C007  FFD9         	movff	teclado@valor,fsr2l
  6333  00179E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6334  0017A2  0E34               	movlw	52
  6335  0017A4  6EDF               	movwf	indf2,c
  6336  0017A6                     l3519:
  6337                           
  6338                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  6339  0017A6  BA81               	btfsc	129,5,c	;volatile
  6340  0017A8  EFD8  F00B         	goto	u3011
  6341  0017AC  EFDA  F00B         	goto	u3010
  6342  0017B0                     u3011:
  6343  0017B0  EFE0  F00B         	goto	l3523
  6344  0017B4                     u3010:
  6345  0017B4  C007  FFD9         	movff	teclado@valor,fsr2l
  6346  0017B8  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6347  0017BC  0E35               	movlw	53
  6348  0017BE  6EDF               	movwf	indf2,c
  6349  0017C0                     l3523:
  6350                           
  6351                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  6352  0017C0  BC81               	btfsc	129,6,c	;volatile
  6353  0017C2  EFE5  F00B         	goto	u3021
  6354  0017C6  EFE7  F00B         	goto	u3020
  6355  0017CA                     u3021:
  6356  0017CA  EFED  F00B         	goto	l3527
  6357  0017CE                     u3020:
  6358  0017CE  C007  FFD9         	movff	teclado@valor,fsr2l
  6359  0017D2  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6360  0017D6  0E36               	movlw	54
  6361  0017D8  6EDF               	movwf	indf2,c
  6362  0017DA                     l3527:
  6363                           
  6364                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  6365  0017DA  BE81               	btfsc	129,7,c	;volatile
  6366  0017DC  EFF2  F00B         	goto	u3031
  6367  0017E0  EFF4  F00B         	goto	u3030
  6368  0017E4                     u3031:
  6369  0017E4  EFFA  F00B         	goto	l3531
  6370  0017E8                     u3030:
  6371  0017E8  C007  FFD9         	movff	teclado@valor,fsr2l
  6372  0017EC  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6373  0017F0  0E42               	movlw	66
  6374  0017F2  6EDF               	movwf	indf2,c
  6375  0017F4                     l3531:
  6376                           
  6377                           ;teclado.c: 29:         PORTB=0xF7;
  6378  0017F4  0EF7               	movlw	247
  6379  0017F6  6E81               	movwf	129,c	;volatile
  6380  0017F8                     
  6381                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  6382  0017F8  B881               	btfsc	129,4,c	;volatile
  6383  0017FA  EF01  F00C         	goto	u3041
  6384  0017FE  EF03  F00C         	goto	u3040
  6385  001802                     u3041:
  6386  001802  EF09  F00C         	goto	l3537
  6387  001806                     u3040:
  6388  001806  C007  FFD9         	movff	teclado@valor,fsr2l
  6389  00180A  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6390  00180E  0E31               	movlw	49
  6391  001810  6EDF               	movwf	indf2,c
  6392  001812                     l3537:
  6393                           
  6394                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  6395  001812  BA81               	btfsc	129,5,c	;volatile
  6396  001814  EF0E  F00C         	goto	u3051
  6397  001818  EF10  F00C         	goto	u3050
  6398  00181C                     u3051:
  6399  00181C  EF16  F00C         	goto	l3541
  6400  001820                     u3050:
  6401  001820  C007  FFD9         	movff	teclado@valor,fsr2l
  6402  001824  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6403  001828  0E32               	movlw	50
  6404  00182A  6EDF               	movwf	indf2,c
  6405  00182C                     l3541:
  6406                           
  6407                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  6408  00182C  BC81               	btfsc	129,6,c	;volatile
  6409  00182E  EF1B  F00C         	goto	u3061
  6410  001832  EF1D  F00C         	goto	u3060
  6411  001836                     u3061:
  6412  001836  EF23  F00C         	goto	l3545
  6413  00183A                     u3060:
  6414  00183A  C007  FFD9         	movff	teclado@valor,fsr2l
  6415  00183E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6416  001842  0E33               	movlw	51
  6417  001844  6EDF               	movwf	indf2,c
  6418  001846                     l3545:
  6419                           
  6420                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  6421  001846  BE81               	btfsc	129,7,c	;volatile
  6422  001848  EF28  F00C         	goto	u3071
  6423  00184C  EF2A  F00C         	goto	u3070
  6424  001850                     u3071:
  6425  001850  EF30  F00C         	goto	l3549
  6426  001854                     u3070:
  6427  001854  C007  FFD9         	movff	teclado@valor,fsr2l
  6428  001858  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6429  00185C  0E41               	movlw	65
  6430  00185E  6EDF               	movwf	indf2,c
  6431  001860                     l3549:
  6432                           
  6433                           ;teclado.c: 35:     PORTB = 0xF0;
  6434  001860  0EF0               	movlw	240
  6435  001862  6E81               	movwf	129,c	;volatile
  6436  001864                     l3551:
  6437  001864  0EF0               	movlw	240
  6438  001866  1881               	xorwf	129,w,c	;volatile
  6439  001868  A4D8               	btfss	status,2,c
  6440  00186A  EF39  F00C         	goto	u3081
  6441  00186E  EF3B  F00C         	goto	u3080
  6442  001872                     u3081:
  6443  001872  EF32  F00C         	goto	l3551
  6444  001876                     u3080:
  6445  001876  0012               	return		;funcret
  6446  001878                     __end_of_teclado:
  6447                           	callstack 0
  6448                           
  6449 ;; *************** function _sprintf *****************
  6450 ;; Defined at:
  6451 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  s               2   18[BANK0 ] PTR unsigned char 
  6454 ;;		 -> datos(25), 
  6455 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  6456 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6457 ;;		 -> STR_1(14), 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  f               6   30[BANK0 ] struct _IO_FILE
  6460 ;;  ap              2   28[BANK0 ] PTR void [1]
  6461 ;;		 -> ?_sprintf(2), 
  6462 ;;  ret             2    0        int 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  2   18[BANK0 ] int 
  6465 ;; Registers used:
  6466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6472 ;;      Params:         0       8       0       0       0       0       0       0       0
  6473 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6475 ;;      Totals:         0      18       0       0       0       0       0       0       0
  6476 ;;Total ram usage:       18 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    9
  6479 ;; This function calls:
  6480 ;;		_vfprintf
  6481 ;; This function is called by:
  6482 ;;		_appADC
  6483 ;;		_appBat
  6484 ;;		_appElemts
  6485 ;;		_appSubGetData
  6486 ;;		_sendinformation
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text38
  6491  003406                     __ptext38:
  6492                           	callstack 0
  6493  003406                     _sprintf:
  6494                           	callstack 20
  6495  003406  0EAC               	movlw	low (?_sprintf+4)
  6496  003408  0100               	movlb	0	; () banked
  6497  00340A  6FB2               	movwf	sprintf@ap& (0+255),b
  6498  00340C  0E00               	movlw	high (?_sprintf+4)
  6499  00340E  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
  6500  003410  C0A8  F0B4         	movff	sprintf@s,sprintf@f
  6501  003414  C0A9  F0B5         	movff	sprintf@s+1,sprintf@f+1
  6502  003418                     
  6503                           ; BSR set to: 0
  6504  003418  0E00               	movlw	0
  6505  00341A  6FB7               	movwf	(sprintf@f+3)& (0+255),b
  6506  00341C  0E00               	movlw	0
  6507  00341E  6FB6               	movwf	(sprintf@f+2)& (0+255),b
  6508  003420                     
  6509                           ; BSR set to: 0
  6510  003420  0E00               	movlw	0
  6511  003422  6FB9               	movwf	(sprintf@f+5)& (0+255),b
  6512  003424  0E00               	movlw	0
  6513  003426  6FB8               	movwf	(sprintf@f+4)& (0+255),b
  6514  003428                     
  6515                           ; BSR set to: 0
  6516  003428  0EB4               	movlw	low sprintf@f
  6517  00342A  6FA2               	movwf	vfprintf@fp& (0+255),b
  6518  00342C  0E00               	movlw	high sprintf@f
  6519  00342E  6FA3               	movwf	(vfprintf@fp+1)& (0+255),b
  6520  003430  C0AA  F0A4         	movff	sprintf@fmt,vfprintf@fmt
  6521  003434  C0AB  F0A5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6522  003438  0EB2               	movlw	low sprintf@ap
  6523  00343A  6FA6               	movwf	vfprintf@ap& (0+255),b
  6524  00343C  0E00               	movlw	high sprintf@ap
  6525  00343E  6FA7               	movwf	(vfprintf@ap+1)& (0+255),b
  6526  003440  ECA6  F019         	call	_vfprintf	;wreg free
  6527  003444  0100               	movlb	0	; () banked
  6528  003446  51B6               	movf	(sprintf@f+2)& (0+255),w,b
  6529  003448  25A8               	addwf	sprintf@s& (0+255),w,b
  6530  00344A  6ED9               	movwf	fsr2l,c
  6531  00344C  51B7               	movf	(sprintf@f+3)& (0+255),w,b
  6532  00344E  21A9               	addwfc	(sprintf@s+1)& (0+255),w,b
  6533  003450  6EDA               	movwf	fsr2h,c
  6534  003452  0E00               	movlw	0
  6535  003454  6EDF               	movwf	indf2,c
  6536  003456                     
  6537                           ; BSR set to: 0
  6538  003456  0012               	return		;funcret
  6539  003458                     __end_of_sprintf:
  6540                           	callstack 0
  6541                           
  6542 ;; *************** function _vfprintf *****************
  6543 ;; Defined at:
  6544 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  6547 ;;		 -> sprintf@f(6), 
  6548 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  6549 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6550 ;;		 -> STR_1(14), 
  6551 ;;  ap              2   16[BANK0 ] PTR PTR void 
  6552 ;;		 -> sprintf@ap(2), 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  6555 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6556 ;;		 -> STR_1(14), 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  2   12[BANK0 ] int 
  6559 ;; Registers used:
  6560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6566 ;;      Params:         0       6       0       0       0       0       0       0       0
  6567 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6569 ;;      Totals:         2       6       0       0       0       0       0       0       0
  6570 ;;Total ram usage:        8 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    8
  6573 ;; This function calls:
  6574 ;;		_vfpfcnvrt
  6575 ;; This function is called by:
  6576 ;;		_sprintf
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text39
  6581  00334C                     __ptext39:
  6582                           	callstack 0
  6583  00334C                     _vfprintf:
  6584                           	callstack 20
  6585  00334C                     
  6586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6587  00334C  C0A4  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  6588  003350  C0A5  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6589  003354                     
  6590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6591  003354  0E00               	movlw	0
  6592  003356  0100               	movlb	0	; () banked
  6593  003358  6F61               	movwf	(_nout+1)& (0+255),b
  6594  00335A  0E00               	movlw	0
  6595  00335C  6F60               	movwf	_nout& (0+255),b
  6596                           
  6597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6598  00335E  EFC4  F019         	goto	l4593
  6599  003362                     l4591:
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6603  003362  C0A2  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  6604  003366  C0A3  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6605  00336A  0E50               	movlw	low vfprintf@cfmt
  6606  00336C  6E48               	movwf	vfpfcnvrt@fmt^0,c
  6607  00336E  0E00               	movlw	high vfprintf@cfmt
  6608  003370  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6609  003372  C0A6  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  6610  003376  C0A7  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6611  00337A  EC22  F008         	call	_vfpfcnvrt	;wreg free
  6612  00337E  5046               	movf	?_vfpfcnvrt^0,w,c
  6613  003380  0100               	movlb	0	; () banked
  6614  003382  2760               	addwf	_nout& (0+255),f,b
  6615  003384  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  6616  003386  2361               	addwfc	(_nout+1)& (0+255),f,b
  6617  003388                     l4593:
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6621  003388  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  6622  00338C  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6623  003390                     	if	0	;tblptru may be non-zero
  6624  003390                     	endif
  6625  003390                     	if	0	;tblptru may be non-zero
  6626  003390                     	endif
  6627  003390  0008               	tblrd		*
  6628  003392  50F5               	movf	tablat,w,c
  6629  003394  0900               	iorlw	0
  6630  003396  A4D8               	btfss	status,2,c
  6631  003398  EFD0  F019         	goto	u4131
  6632  00339C  EFD2  F019         	goto	u4130
  6633  0033A0                     u4131:
  6634  0033A0  EFB1  F019         	goto	l4591
  6635  0033A4                     u4130:
  6636  0033A4                     
  6637                           ; BSR set to: 0
  6638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6639  0033A4  C060  F0A2         	movff	_nout,?_vfprintf
  6640  0033A8  C061  F0A3         	movff	_nout+1,?_vfprintf+1
  6641  0033AC                     
  6642                           ; BSR set to: 0
  6643  0033AC  0012               	return		;funcret
  6644  0033AE                     __end_of_vfprintf:
  6645                           	callstack 0
  6646                           
  6647 ;; *************** function _vfpfcnvrt *****************
  6648 ;; Defined at:
  6649 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  6652 ;;		 -> sprintf@f(6), 
  6653 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  6654 ;;		 -> vfprintf@cfmt(2), 
  6655 ;;  ap              2   73[COMRAM] PTR PTR void 
  6656 ;;		 -> sprintf@ap(2), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  ll              8    0[BANK0 ] long long 
  6659 ;;  llu             8    0        unsigned long long 
  6660 ;;  f               4    0        unsigned long long 
  6661 ;;  vp              3    0        PTR void 
  6662 ;;  ct              3    0        unsigned char [3]
  6663 ;;  cp              3    0        PTR unsigned char 
  6664 ;;  done            2    8[BANK0 ] int 
  6665 ;;  i               2    0        int 
  6666 ;;  c               1    0        unsigned char 
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  2   69[COMRAM] int 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6676 ;;      Params:         6       0       0       0       0       0       0       0       0
  6677 ;;      Locals:         0      12       0       0       0       0       0       0       0
  6678 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6679 ;;      Totals:        10      12       0       0       0       0       0       0       0
  6680 ;;Total ram usage:       22 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:    7
  6683 ;; This function calls:
  6684 ;;		_atoi
  6685 ;;		_dtoa
  6686 ;;		_fputc
  6687 ;;		_isdigit
  6688 ;; This function is called by:
  6689 ;;		_vfprintf
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text40
  6694  001044                     __ptext40:
  6695                           	callstack 0
  6696  001044                     _vfpfcnvrt:
  6697                           	callstack 20
  6698  001044                     
  6699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6700  001044  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6701  001048  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6702  00104C  CFDE FFF6          	movff	postinc2,tblptrl
  6703  001050  CFDD FFF7          	movff	postdec2,tblptrh
  6704  001054                     	if	0	;tblptru may be non-zero
  6705  001054                     	endif
  6706  001054                     	if	0	;tblptru may be non-zero
  6707  001054                     	endif
  6708  001054  0008               	tblrd		*
  6709  001056  50F5               	movf	tablat,w,c
  6710  001058  0A25               	xorlw	37
  6711  00105A  A4D8               	btfss	status,2,c
  6712  00105C  EF32  F008         	goto	u2571
  6713  001060  EF34  F008         	goto	u2570
  6714  001064                     u2571:
  6715  001064  EFBC  F009         	goto	l3287
  6716  001068                     u2570:
  6717  001068                     
  6718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6719  001068  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6720  00106C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6721  001070  2ADE               	incf	postinc2,f,c
  6722  001072  0E00               	movlw	0
  6723  001074  22DD               	addwfc	postdec2,f,c
  6724  001076                     
  6725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6726  001076  0E00               	movlw	0
  6727  001078  0100               	movlb	0	; () banked
  6728  00107A  6F63               	movwf	(_width+1)& (0+255),b
  6729  00107C  0E00               	movlw	0
  6730  00107E  6F62               	movwf	_width& (0+255),b
  6731  001080  C062  F055         	movff	_width,_flags
  6732  001084  C063  F056         	movff	_width+1,_flags+1
  6733  001088                     
  6734                           ; BSR set to: 0
  6735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6736  001088  6853               	setf	_prec^0,c
  6737  00108A  6854               	setf	(_prec+1)^0,c
  6738  00108C                     
  6739                           ; BSR set to: 0
  6740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  6741  00108C  0E00               	movlw	0
  6742  00108E  6F9F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6743  001090  0E00               	movlw	0
  6744  001092  6F9E               	movwf	vfpfcnvrt@done& (0+255),b
  6745                           
  6746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6747  001094  EF92  F008         	goto	l3239
  6748  001098                     l3213:
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  6752  001098  8055               	bsf	_flags^0,0,c
  6753  00109A                     l3215:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  6757  00109A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6758  00109E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6759  0010A2  2ADE               	incf	postinc2,f,c
  6760  0010A4  0E00               	movlw	0
  6761  0010A6  22DD               	addwfc	postdec2,f,c
  6762                           
  6763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  6764  0010A8  EF92  F008         	goto	l3239
  6765  0010AC                     l3217:
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  6769  0010AC  8255               	bsf	_flags^0,1,c
  6770  0010AE  EF4D  F008         	goto	l3215
  6771  0010B2                     l3221:
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  6775  0010B2  8455               	bsf	_flags^0,2,c
  6776  0010B4  EF4D  F008         	goto	l3215
  6777  0010B8                     l3225:
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  6781  0010B8  8655               	bsf	_flags^0,3,c
  6782  0010BA  EF4D  F008         	goto	l3215
  6783  0010BE                     l3229:
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  6787  0010BE  8855               	bsf	_flags^0,4,c
  6788  0010C0  EF4D  F008         	goto	l3215
  6789  0010C4                     l3233:
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  6793  0010C4  0E00               	movlw	0
  6794  0010C6  6F9F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6795  0010C8  0E01               	movlw	1
  6796  0010CA  6F9E               	movwf	vfpfcnvrt@done& (0+255),b
  6797                           
  6798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  6799  0010CC  EF92  F008         	goto	l3239
  6800  0010D0                     l3237:
  6801                           
  6802                           ; BSR set to: 0
  6803  0010D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6804  0010D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6805  0010D8  CFDE FFF6          	movff	postinc2,tblptrl
  6806  0010DC  CFDD FFF7          	movff	postdec2,tblptrh
  6807  0010E0                     	if	0	;tblptru may be non-zero
  6808  0010E0                     	endif
  6809  0010E0                     	if	0	;tblptru may be non-zero
  6810  0010E0                     	endif
  6811  0010E0  0008               	tblrd		*
  6812  0010E2  50F5               	movf	tablat,w,c
  6813  0010E4  6E4C               	movwf	??_vfpfcnvrt^0,c
  6814  0010E6  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  6815                           
  6816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6817                           ; Switch size 1, requested type "simple"
  6818                           ; Number of cases is 1, Range of values is 0 to 0
  6819                           ; switch strategies available:
  6820                           ; Name         Instructions Cycles
  6821                           ; simple_byte            4     3 (average)
  6822                           ;	Chosen strategy is simple_byte
  6823  0010E8  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  6824  0010EA  0A00               	xorlw	0	; case 0
  6825  0010EC  B4D8               	btfsc	status,2,c
  6826  0010EE  EF7B  F008         	goto	l5027
  6827  0010F2  EF62  F008         	goto	l3233
  6828  0010F6                     l5027:
  6829                           
  6830                           ; BSR set to: 0
  6831                           ; Switch size 1, requested type "simple"
  6832                           ; Number of cases is 5, Range of values is 32 to 48
  6833                           ; switch strategies available:
  6834                           ; Name         Instructions Cycles
  6835                           ; simple_byte           16     9 (average)
  6836                           ;	Chosen strategy is simple_byte
  6837  0010F6  504C               	movf	??_vfpfcnvrt^0,w,c
  6838  0010F8  0A20               	xorlw	32	; case 32
  6839  0010FA  B4D8               	btfsc	status,2,c
  6840  0010FC  EF5C  F008         	goto	l3225
  6841  001100  0A03               	xorlw	3	; case 35
  6842  001102  B4D8               	btfsc	status,2,c
  6843  001104  EF5F  F008         	goto	l3229
  6844  001108  0A08               	xorlw	8	; case 43
  6845  00110A  B4D8               	btfsc	status,2,c
  6846  00110C  EF59  F008         	goto	l3221
  6847  001110  0A06               	xorlw	6	; case 45
  6848  001112  B4D8               	btfsc	status,2,c
  6849  001114  EF4C  F008         	goto	l3213
  6850  001118  0A1D               	xorlw	29	; case 48
  6851  00111A  B4D8               	btfsc	status,2,c
  6852  00111C  EF56  F008         	goto	l3217
  6853  001120  EF62  F008         	goto	l3233
  6854  001124                     l3239:
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6858  001124  519E               	movf	vfpfcnvrt@done& (0+255),w,b
  6859  001126  119F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6860  001128  B4D8               	btfsc	status,2,c
  6861  00112A  EF99  F008         	goto	u2581
  6862  00112E  EF9B  F008         	goto	u2580
  6863  001132                     u2581:
  6864  001132  EF68  F008         	goto	l3237
  6865  001136                     u2580:
  6866  001136                     
  6867                           ; BSR set to: 0
  6868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  6869  001136  A055               	btfss	_flags^0,0,c
  6870  001138  EFA0  F008         	goto	u2591
  6871  00113C  EFA2  F008         	goto	u2590
  6872  001140                     u2591:
  6873  001140  EFA3  F008         	goto	l3243
  6874  001144                     u2590:
  6875  001144                     
  6876                           ; BSR set to: 0
  6877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  6878  001144  9255               	bcf	_flags^0,1,c
  6879  001146                     l3243:
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  6883  001146  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6884  00114A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6885  00114E  CFDE FFF6          	movff	postinc2,tblptrl
  6886  001152  CFDD FFF7          	movff	postdec2,tblptrh
  6887  001156                     	if	0	;tblptru may be non-zero
  6888  001156                     	endif
  6889  001156                     	if	0	;tblptru may be non-zero
  6890  001156                     	endif
  6891  001156  0008               	tblrd		*
  6892  001158  50F5               	movf	tablat,w,c
  6893  00115A  0A2A               	xorlw	42
  6894  00115C  A4D8               	btfss	status,2,c
  6895  00115E  EFB3  F008         	goto	u2601
  6896  001162  EFB5  F008         	goto	u2600
  6897  001166                     u2601:
  6898  001166  EFDE  F008         	goto	l3251
  6899  00116A                     u2600:
  6900  00116A                     
  6901                           ; BSR set to: 0
  6902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6903  00116A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6904  00116E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6905  001172  2ADE               	incf	postinc2,f,c
  6906  001174  0E00               	movlw	0
  6907  001176  22DD               	addwfc	postdec2,f,c
  6908                           
  6909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6910  001178  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6911  00117C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6912  001180  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6913  001184  0E02               	movlw	2
  6914  001186  26DE               	addwf	postinc2,f,c
  6915  001188  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6916  00118C  0E00               	movlw	0
  6917  00118E  22DD               	addwfc	postdec2,f,c
  6918  001190  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6919  001194  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6920  001198  CFDE F062          	movff	postinc2,_width
  6921  00119C  CFDD F063          	movff	postdec2,_width+1
  6922  0011A0                     
  6923                           ; BSR set to: 0
  6924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6925  0011A0  BF63               	btfsc	(_width+1)& (0+255),7,b
  6926  0011A2  EFD7  F008         	goto	u2610
  6927  0011A6  EFD5  F008         	goto	u2611
  6928  0011AA                     u2611:
  6929  0011AA  EF22  F009         	goto	l3261
  6930  0011AE                     u2610:
  6931  0011AE                     
  6932                           ; BSR set to: 0
  6933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6934  0011AE  8055               	bsf	_flags^0,0,c
  6935                           
  6936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6937  0011B0  6D62               	negf	_width& (0+255),b
  6938  0011B2  1F63               	comf	(_width+1)& (0+255),f,b
  6939  0011B4  B0D8               	btfsc	status,0,c
  6940  0011B6  2B63               	incf	(_width+1)& (0+255),f,b
  6941  0011B8  EF22  F009         	goto	l3261
  6942  0011BC                     l3251:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6946  0011BC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6947  0011C0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6948  0011C4  CFDE F00E          	movff	postinc2,atoi@s
  6949  0011C8  CFDD F00F          	movff	postdec2,atoi@s+1
  6950  0011CC  ECE1  F00E         	call	_atoi	;wreg free
  6951  0011D0  C00E  F062         	movff	?_atoi,_width
  6952  0011D4  C00F  F063         	movff	?_atoi+1,_width+1
  6953                           
  6954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6955  0011D8  EFF5  F008         	goto	l3255
  6956  0011DC                     l3253:
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6960  0011DC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6961  0011E0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6962  0011E4  2ADE               	incf	postinc2,f,c
  6963  0011E6  0E00               	movlw	0
  6964  0011E8  22DD               	addwfc	postdec2,f,c
  6965  0011EA                     l3255:
  6966  0011EA  0ED0               	movlw	208
  6967  0011EC  6E4C               	movwf	??_vfpfcnvrt^0,c
  6968  0011EE  0EFF               	movlw	255
  6969  0011F0  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  6970  0011F2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6971  0011F6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6972  0011FA  CFDE FFF6          	movff	postinc2,tblptrl
  6973  0011FE  CFDD FFF7          	movff	postdec2,tblptrh
  6974  001202                     	if	0	;tblptru may be non-zero
  6975  001202                     	endif
  6976  001202                     	if	0	;tblptru may be non-zero
  6977  001202                     	endif
  6978  001202  0008               	tblrd		*
  6979  001204  50F5               	movf	tablat,w,c
  6980  001206  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  6981  001208  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  6982  00120A  504C               	movf	??_vfpfcnvrt^0,w,c
  6983  00120C  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  6984  00120E  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  6985  001210  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  6986  001212  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  6987  001214  E10A               	bnz	u2620
  6988  001216  0E0A               	movlw	10
  6989  001218  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  6990  00121A  A0D8               	btfss	status,0,c
  6991  00121C  EF12  F009         	goto	u2621
  6992  001220  EF15  F009         	goto	u2620
  6993  001224                     u2621:
  6994  001224  0E01               	movlw	1
  6995  001226  EF16  F009         	goto	u2630
  6996  00122A                     u2620:
  6997  00122A  0E00               	movlw	0
  6998  00122C                     u2630:
  6999  00122C  0100               	movlb	0	; () banked
  7000  00122E  6FA0               	movwf	_vfpfcnvrt$2357& (0+255),b
  7001  001230  6BA1               	clrf	(_vfpfcnvrt$2357+1)& (0+255),b
  7002  001232                     
  7003                           ; BSR set to: 0
  7004  001232  51A0               	movf	_vfpfcnvrt$2357& (0+255),w,b
  7005  001234  11A1               	iorwf	(_vfpfcnvrt$2357+1)& (0+255),w,b
  7006  001236  A4D8               	btfss	status,2,c
  7007  001238  EF20  F009         	goto	u2641
  7008  00123C  EF22  F009         	goto	u2640
  7009  001240                     u2641:
  7010  001240  EFEE  F008         	goto	l3253
  7011  001244                     u2640:
  7012  001244                     l3261:
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7016  001244  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7017  001248  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7018  00124C  CFDE FFF6          	movff	postinc2,tblptrl
  7019  001250  CFDD FFF7          	movff	postdec2,tblptrh
  7020  001254                     	if	0	;tblptru may be non-zero
  7021  001254                     	endif
  7022  001254                     	if	0	;tblptru may be non-zero
  7023  001254                     	endif
  7024  001254  0008               	tblrd		*
  7025  001256  50F5               	movf	tablat,w,c
  7026  001258  0A64               	xorlw	100
  7027  00125A  B4D8               	btfsc	status,2,c
  7028  00125C  EF32  F009         	goto	u2651
  7029  001260  EF34  F009         	goto	u2650
  7030  001264                     u2651:
  7031  001264  EF46  F009         	goto	l3265
  7032  001268                     u2650:
  7033  001268                     
  7034                           ; BSR set to: 0
  7035  001268  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7036  00126C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7037  001270  CFDE FFF6          	movff	postinc2,tblptrl
  7038  001274  CFDD FFF7          	movff	postdec2,tblptrh
  7039  001278                     	if	0	;tblptru may be non-zero
  7040  001278                     	endif
  7041  001278                     	if	0	;tblptru may be non-zero
  7042  001278                     	endif
  7043  001278  0008               	tblrd		*
  7044  00127A  50F5               	movf	tablat,w,c
  7045  00127C  0A69               	xorlw	105
  7046  00127E  A4D8               	btfss	status,2,c
  7047  001280  EF44  F009         	goto	u2661
  7048  001284  EF46  F009         	goto	u2660
  7049  001288                     u2661:
  7050  001288  EF86  F009         	goto	l3271
  7051  00128C                     u2660:
  7052  00128C                     l3265:
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7056  00128C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7057  001290  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7058  001294  2ADE               	incf	postinc2,f,c
  7059  001296  0E00               	movlw	0
  7060  001298  22DD               	addwfc	postdec2,f,c
  7061                           
  7062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7063  00129A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7064  00129E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7065  0012A2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  7066  0012A6  0E02               	movlw	2
  7067  0012A8  26DE               	addwf	postinc2,f,c
  7068  0012AA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  7069  0012AE  0E00               	movlw	0
  7070  0012B0  22DD               	addwfc	postdec2,f,c
  7071  0012B2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7072  0012B6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7073  0012BA  CFDE F096          	movff	postinc2,vfpfcnvrt@ll
  7074  0012BE  CFDD F097          	movff	postdec2,vfpfcnvrt@ll+1
  7075  0012C2  0E00               	movlw	0
  7076  0012C4  BF97               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7077  0012C6  0EFF               	movlw	-1
  7078  0012C8  6F98               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7079  0012CA  6F99               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7080  0012CC  6F9A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7081  0012CE  6F9B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7082  0012D0  6F9C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7083  0012D2  6F9D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7084  0012D4                     
  7085                           ; BSR set to: 0
  7086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7087  0012D4  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  7088  0012D8  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7089  0012DC  C096  F024         	movff	vfpfcnvrt@ll,dtoa@d
  7090  0012E0  C097  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7091  0012E4  C098  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7092  0012E8  C099  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7093  0012EC  C09A  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7094  0012F0  C09B  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7095  0012F4  C09C  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7096  0012F8  C09D  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7097  0012FC  ECD8  F009         	call	_dtoa	;wreg free
  7098  001300  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  7099  001304  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7100  001308  EFD7  F009         	goto	l1237
  7101  00130C                     l3271:
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7105  00130C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7106  001310  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7107  001314  CFDE FFF6          	movff	postinc2,tblptrl
  7108  001318  CFDD FFF7          	movff	postdec2,tblptrh
  7109  00131C                     	if	0	;tblptru may be non-zero
  7110  00131C                     	endif
  7111  00131C                     	if	0	;tblptru may be non-zero
  7112  00131C                     	endif
  7113  00131C  0008               	tblrd		*
  7114  00131E  50F5               	movf	tablat,w,c
  7115  001320  0A25               	xorlw	37
  7116  001322  A4D8               	btfss	status,2,c
  7117  001324  EF96  F009         	goto	u2671
  7118  001328  EF98  F009         	goto	u2670
  7119  00132C                     u2671:
  7120  00132C  EFAF  F009         	goto	l3281
  7121  001330                     u2670:
  7122  001330                     
  7123                           ; BSR set to: 0
  7124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7125  001330  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7126  001334  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7127  001338  2ADE               	incf	postinc2,f,c
  7128  00133A  0E00               	movlw	0
  7129  00133C  22DD               	addwfc	postdec2,f,c
  7130  00133E                     
  7131                           ; BSR set to: 0
  7132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7133  00133E  0E00               	movlw	0
  7134  001340  6E08               	movwf	(fputc@c+1)^0,c
  7135  001342  0E25               	movlw	37
  7136  001344  6E07               	movwf	fputc@c^0,c
  7137  001346  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7138  00134A  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7139  00134E  EC77  F015         	call	_fputc	;wreg free
  7140  001352                     l3277:
  7141                           
  7142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7143  001352  0E00               	movlw	0
  7144  001354  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7145  001356  0E01               	movlw	1
  7146  001358  6E46               	movwf	?_vfpfcnvrt^0,c
  7147  00135A  EFD7  F009         	goto	l1237
  7148  00135E                     l3281:
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7152  00135E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7153  001362  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7154  001366  2ADE               	incf	postinc2,f,c
  7155  001368  0E00               	movlw	0
  7156  00136A  22DD               	addwfc	postdec2,f,c
  7157  00136C                     
  7158                           ; BSR set to: 0
  7159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7160  00136C  0E00               	movlw	0
  7161  00136E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7162  001370  0E00               	movlw	0
  7163  001372  6E46               	movwf	?_vfpfcnvrt^0,c
  7164  001374  EFD7  F009         	goto	l1237
  7165  001378                     l3287:
  7166                           
  7167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7168  001378  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7169  00137C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7170  001380  CFDE FFF6          	movff	postinc2,tblptrl
  7171  001384  CFDD FFF7          	movff	postdec2,tblptrh
  7172  001388                     	if	0	;tblptru may be non-zero
  7173  001388                     	endif
  7174  001388                     	if	0	;tblptru may be non-zero
  7175  001388                     	endif
  7176  001388  0008               	tblrd		*
  7177  00138A  50F5               	movf	tablat,w,c
  7178  00138C  6E07               	movwf	fputc@c^0,c
  7179  00138E  6A08               	clrf	(fputc@c+1)^0,c
  7180  001390  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7181  001394  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7182  001398  EC77  F015         	call	_fputc	;wreg free
  7183  00139C                     
  7184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7185  00139C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7186  0013A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7187  0013A4  2ADE               	incf	postinc2,f,c
  7188  0013A6  0E00               	movlw	0
  7189  0013A8  22DD               	addwfc	postdec2,f,c
  7190  0013AA  EFA9  F009         	goto	l3277
  7191  0013AE                     l1237:
  7192  0013AE  0012               	return		;funcret
  7193  0013B0                     __end_of_vfpfcnvrt:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _dtoa *****************
  7197 ;; Defined at:
  7198 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  7201 ;;		 -> sprintf@f(6), 
  7202 ;;  d               8   35[COMRAM] long long 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  n               8   59[COMRAM] long long 
  7205 ;;  i               2   67[COMRAM] int 
  7206 ;;  s               2   57[COMRAM] int 
  7207 ;;  w               2   55[COMRAM] int 
  7208 ;;  p               2   53[COMRAM] int 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  2   33[COMRAM] int 
  7211 ;; Registers used:
  7212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7218 ;;      Params:        10       0       0       0       0       0       0       0       0
  7219 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7220 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7221 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7222 ;;Total ram usage:       36 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    6
  7225 ;; This function calls:
  7226 ;;		___aodiv
  7227 ;;		___aomod
  7228 ;;		_abs
  7229 ;;		_pad
  7230 ;; This function is called by:
  7231 ;;		_vfpfcnvrt
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text41
  7236  0013B0                     __ptext41:
  7237                           	callstack 0
  7238  0013B0                     _dtoa:
  7239                           	callstack 20
  7240  0013B0                     
  7241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7242  0013B0  C024  F03C         	movff	dtoa@d,dtoa@n
  7243  0013B4  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  7244  0013B8  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  7245  0013BC  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  7246  0013C0  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  7247  0013C4  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  7248  0013C8  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  7249  0013CC  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  7250  0013D0                     
  7251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7252  0013D0  BE43               	btfsc	(dtoa@n+7)^0,7,c
  7253  0013D2  EFED  F009         	goto	u2351
  7254  0013D6  EFF0  F009         	goto	u2350
  7255  0013DA                     u2351:
  7256  0013DA  0E01               	movlw	1
  7257  0013DC  EFF1  F009         	goto	u2360
  7258  0013E0                     u2350:
  7259  0013E0  0E00               	movlw	0
  7260  0013E2                     u2360:
  7261  0013E2  6E3A               	movwf	dtoa@s^0,c
  7262  0013E4  6A3B               	clrf	(dtoa@s+1)^0,c
  7263                           
  7264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7265  0013E6  503A               	movf	dtoa@s^0,w,c
  7266  0013E8  103B               	iorwf	(dtoa@s+1)^0,w,c
  7267  0013EA  B4D8               	btfsc	status,2,c
  7268  0013EC  EFFA  F009         	goto	u2371
  7269  0013F0  EFFC  F009         	goto	u2370
  7270  0013F4                     u2371:
  7271  0013F4  EF0C  F00A         	goto	l3105
  7272  0013F8                     u2370:
  7273  0013F8                     
  7274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7275  0013F8  1E43               	comf	(dtoa@n+7)^0,f,c
  7276  0013FA  1E42               	comf	(dtoa@n+6)^0,f,c
  7277  0013FC  1E41               	comf	(dtoa@n+5)^0,f,c
  7278  0013FE  1E40               	comf	(dtoa@n+4)^0,f,c
  7279  001400  1E3F               	comf	(dtoa@n+3)^0,f,c
  7280  001402  1E3E               	comf	(dtoa@n+2)^0,f,c
  7281  001404  1E3D               	comf	(dtoa@n+1)^0,f,c
  7282  001406  6C3C               	negf	dtoa@n^0,c
  7283  001408  0E00               	movlw	0
  7284  00140A  223D               	addwfc	(dtoa@n+1)^0,f,c
  7285  00140C  223E               	addwfc	(dtoa@n+2)^0,f,c
  7286  00140E  223F               	addwfc	(dtoa@n+3)^0,f,c
  7287  001410  2240               	addwfc	(dtoa@n+4)^0,f,c
  7288  001412  2241               	addwfc	(dtoa@n+5)^0,f,c
  7289  001414  2242               	addwfc	(dtoa@n+6)^0,f,c
  7290  001416  2243               	addwfc	(dtoa@n+7)^0,f,c
  7291  001418                     l3105:
  7292                           
  7293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7294  001418  BE54               	btfsc	(_prec+1)^0,7,c
  7295  00141A  EF11  F00A         	goto	u2381
  7296  00141E  EF13  F00A         	goto	u2380
  7297  001422                     u2381:
  7298  001422  EF14  F00A         	goto	l3109
  7299  001426                     u2380:
  7300  001426                     
  7301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7302  001426  9255               	bcf	_flags^0,1,c
  7303  001428                     l3109:
  7304                           
  7305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7306  001428  BE54               	btfsc	(_prec+1)^0,7,c
  7307  00142A  EF21  F00A         	goto	u2390
  7308  00142E  5054               	movf	(_prec+1)^0,w,c
  7309  001430  E106               	bnz	u2391
  7310  001432  0453               	decf	_prec^0,w,c
  7311  001434  B0D8               	btfsc	status,0,c
  7312  001436  EF1F  F00A         	goto	u2391
  7313  00143A  EF21  F00A         	goto	u2390
  7314  00143E                     u2391:
  7315  00143E  EF27  F00A         	goto	l1188
  7316  001442                     u2390:
  7317  001442  0E00               	movlw	0
  7318  001444  6E37               	movwf	(dtoa@p+1)^0,c
  7319  001446  0E01               	movlw	1
  7320  001448  6E36               	movwf	dtoa@p^0,c
  7321  00144A  EF2B  F00A         	goto	l1190
  7322  00144E                     l1188:
  7323  00144E  C053  F036         	movff	_prec,dtoa@p
  7324  001452  C054  F037         	movff	_prec+1,dtoa@p+1
  7325  001456                     l1190:
  7326                           
  7327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7328  001456  C062  F038         	movff	_width,dtoa@w
  7329  00145A  C063  F039         	movff	_width+1,dtoa@w+1
  7330  00145E                     
  7331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7332  00145E  503A               	movf	dtoa@s^0,w,c
  7333  001460  103B               	iorwf	(dtoa@s+1)^0,w,c
  7334  001462  A4D8               	btfss	status,2,c
  7335  001464  EF36  F00A         	goto	u2401
  7336  001468  EF38  F00A         	goto	u2400
  7337  00146C                     u2401:
  7338  00146C  EF3F  F00A         	goto	l3117
  7339  001470                     u2400:
  7340  001470  A455               	btfss	_flags^0,2,c
  7341  001472  EF3D  F00A         	goto	u2411
  7342  001476  EF3F  F00A         	goto	u2410
  7343  00147A                     u2411:
  7344  00147A  EF42  F00A         	goto	l3119
  7345  00147E                     u2410:
  7346  00147E                     l3117:
  7347                           
  7348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  7349  00147E  0638               	decf	dtoa@w^0,f,c
  7350  001480  A0D8               	btfss	status,0,c
  7351  001482  0639               	decf	(dtoa@w+1)^0,f,c
  7352  001484                     l3119:
  7353                           
  7354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7355  001484  0E00               	movlw	0
  7356  001486  6E45               	movwf	(dtoa@i+1)^0,c
  7357  001488  0E1F               	movlw	31
  7358  00148A  6E44               	movwf	dtoa@i^0,c
  7359  00148C                     
  7360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7361  00148C  0E00               	movlw	0
  7362  00148E  0100               	movlb	0	; () banked
  7363  001490  6F85               	movwf	(_dbuf+31)& (0+255),b
  7364                           
  7365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7366  001492  EFC7  F00A         	goto	l3133
  7367  001496                     l3123:
  7368                           
  7369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  7370  001496  0644               	decf	dtoa@i^0,f,c
  7371  001498  A0D8               	btfss	status,0,c
  7372  00149A  0645               	decf	(dtoa@i+1)^0,f,c
  7373  00149C                     
  7374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7375  00149C  0E66               	movlw	low _dbuf
  7376  00149E  2444               	addwf	dtoa@i^0,w,c
  7377  0014A0  6ED9               	movwf	fsr2l,c
  7378  0014A2  0E00               	movlw	high _dbuf
  7379  0014A4  2045               	addwfc	(dtoa@i+1)^0,w,c
  7380  0014A6  6EDA               	movwf	fsr2h,c
  7381  0014A8  C03C  F007         	movff	dtoa@n,___aomod@dividend
  7382  0014AC  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  7383  0014B0  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  7384  0014B4  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  7385  0014B8  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  7386  0014BC  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  7387  0014C0  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  7388  0014C4  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  7389  0014C8  0E0A               	movlw	10
  7390  0014CA  6E0F               	movwf	___aomod@divisor^0,c
  7391  0014CC  0E00               	movlw	0
  7392  0014CE  6E10               	movwf	(___aomod@divisor+1)^0,c
  7393  0014D0  0E00               	movlw	0
  7394  0014D2  6E11               	movwf	(___aomod@divisor+2)^0,c
  7395  0014D4  0E00               	movlw	0
  7396  0014D6  6E12               	movwf	(___aomod@divisor+3)^0,c
  7397  0014D8  0E00               	movlw	0
  7398  0014DA  6E13               	movwf	(___aomod@divisor+4)^0,c
  7399  0014DC  0E00               	movlw	0
  7400  0014DE  6E14               	movwf	(___aomod@divisor+5)^0,c
  7401  0014E0  0E00               	movlw	0
  7402  0014E2  6E15               	movwf	(___aomod@divisor+6)^0,c
  7403  0014E4  0E00               	movlw	0
  7404  0014E6  6E16               	movwf	(___aomod@divisor+7)^0,c
  7405  0014E8  EC28  F011         	call	___aomod	;wreg free
  7406  0014EC  C007  F02C         	movff	?___aomod,??_dtoa
  7407  0014F0  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  7408  0014F4  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  7409  0014F8  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  7410  0014FC  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  7411  001500  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  7412  001504  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  7413  001508  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  7414  00150C  C02C  F019         	movff	??_dtoa,abs@a
  7415  001510  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  7416  001514  EC2C  F01B         	call	_abs	;wreg free
  7417  001518  5019               	movf	?_abs^0,w,c
  7418  00151A  0F30               	addlw	48
  7419  00151C  6EDF               	movwf	indf2,c
  7420  00151E                     
  7421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  7422  00151E  0636               	decf	dtoa@p^0,f,c
  7423  001520  A0D8               	btfss	status,0,c
  7424  001522  0637               	decf	(dtoa@p+1)^0,f,c
  7425  001524                     
  7426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  7427  001524  0638               	decf	dtoa@w^0,f,c
  7428  001526  A0D8               	btfss	status,0,c
  7429  001528  0639               	decf	(dtoa@w+1)^0,f,c
  7430  00152A                     
  7431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7432  00152A  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  7433  00152E  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  7434  001532  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  7435  001536  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  7436  00153A  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  7437  00153E  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  7438  001542  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  7439  001546  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  7440  00154A  0E0A               	movlw	10
  7441  00154C  6E0F               	movwf	___aodiv@divisor^0,c
  7442  00154E  0E00               	movlw	0
  7443  001550  6E10               	movwf	(___aodiv@divisor+1)^0,c
  7444  001552  0E00               	movlw	0
  7445  001554  6E11               	movwf	(___aodiv@divisor+2)^0,c
  7446  001556  0E00               	movlw	0
  7447  001558  6E12               	movwf	(___aodiv@divisor+3)^0,c
  7448  00155A  0E00               	movlw	0
  7449  00155C  6E13               	movwf	(___aodiv@divisor+4)^0,c
  7450  00155E  0E00               	movlw	0
  7451  001560  6E14               	movwf	(___aodiv@divisor+5)^0,c
  7452  001562  0E00               	movlw	0
  7453  001564  6E15               	movwf	(___aodiv@divisor+6)^0,c
  7454  001566  0E00               	movlw	0
  7455  001568  6E16               	movwf	(___aodiv@divisor+7)^0,c
  7456  00156A  ECA9  F00F         	call	___aodiv	;wreg free
  7457  00156E  C007  F03C         	movff	?___aodiv,dtoa@n
  7458  001572  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  7459  001576  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  7460  00157A  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  7461  00157E  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  7462  001582  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  7463  001586  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  7464  00158A  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  7465  00158E                     l3133:
  7466                           
  7467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7468  00158E  BE45               	btfsc	(dtoa@i+1)^0,7,c
  7469  001590  EFD2  F00A         	goto	u2421
  7470  001594  5045               	movf	(dtoa@i+1)^0,w,c
  7471  001596  E108               	bnz	u2420
  7472  001598  0444               	decf	dtoa@i^0,w,c
  7473  00159A  A0D8               	btfss	status,0,c
  7474  00159C  EFD2  F00A         	goto	u2421
  7475  0015A0  EFD4  F00A         	goto	u2420
  7476  0015A4                     u2421:
  7477  0015A4  EF04  F00B         	goto	l3143
  7478  0015A8                     u2420:
  7479  0015A8  503C               	movf	dtoa@n^0,w,c
  7480  0015AA  103D               	iorwf	(dtoa@n+1)^0,w,c
  7481  0015AC  103E               	iorwf	(dtoa@n+2)^0,w,c
  7482  0015AE  103F               	iorwf	(dtoa@n+3)^0,w,c
  7483  0015B0  1040               	iorwf	(dtoa@n+4)^0,w,c
  7484  0015B2  1041               	iorwf	(dtoa@n+5)^0,w,c
  7485  0015B4  1042               	iorwf	(dtoa@n+6)^0,w,c
  7486  0015B6  1043               	iorwf	(dtoa@n+7)^0,w,c
  7487  0015B8  A4D8               	btfss	status,2,c
  7488  0015BA  EFE1  F00A         	goto	u2431
  7489  0015BE  EFE3  F00A         	goto	u2430
  7490  0015C2                     u2431:
  7491  0015C2  EF4B  F00A         	goto	l3123
  7492  0015C6                     u2430:
  7493  0015C6  BE37               	btfsc	(dtoa@p+1)^0,7,c
  7494  0015C8  EFF0  F00A         	goto	u2440
  7495  0015CC  5037               	movf	(dtoa@p+1)^0,w,c
  7496  0015CE  E106               	bnz	u2441
  7497  0015D0  0436               	decf	dtoa@p^0,w,c
  7498  0015D2  B0D8               	btfsc	status,0,c
  7499  0015D4  EFEE  F00A         	goto	u2441
  7500  0015D8  EFF0  F00A         	goto	u2440
  7501  0015DC                     u2441:
  7502  0015DC  EF4B  F00A         	goto	l3123
  7503  0015E0                     u2440:
  7504  0015E0  BE39               	btfsc	(dtoa@w+1)^0,7,c
  7505  0015E2  EFFB  F00A         	goto	u2451
  7506  0015E6  5039               	movf	(dtoa@w+1)^0,w,c
  7507  0015E8  E108               	bnz	u2450
  7508  0015EA  0438               	decf	dtoa@w^0,w,c
  7509  0015EC  A0D8               	btfss	status,0,c
  7510  0015EE  EFFB  F00A         	goto	u2451
  7511  0015F2  EFFD  F00A         	goto	u2450
  7512  0015F6                     u2451:
  7513  0015F6  EF04  F00B         	goto	l3143
  7514  0015FA                     u2450:
  7515  0015FA  B255               	btfsc	_flags^0,1,c
  7516  0015FC  EF02  F00B         	goto	u2461
  7517  001600  EF04  F00B         	goto	u2460
  7518  001604                     u2461:
  7519  001604  EF4B  F00A         	goto	l3123
  7520  001608                     u2460:
  7521  001608                     l3143:
  7522                           
  7523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7524  001608  503A               	movf	dtoa@s^0,w,c
  7525  00160A  103B               	iorwf	(dtoa@s+1)^0,w,c
  7526  00160C  A4D8               	btfss	status,2,c
  7527  00160E  EF0B  F00B         	goto	u2471
  7528  001612  EF0D  F00B         	goto	u2470
  7529  001616                     u2471:
  7530  001616  EF14  F00B         	goto	l3147
  7531  00161A                     u2470:
  7532  00161A  A455               	btfss	_flags^0,2,c
  7533  00161C  EF12  F00B         	goto	u2481
  7534  001620  EF14  F00B         	goto	u2480
  7535  001624                     u2481:
  7536  001624  EF32  F00B         	goto	l3157
  7537  001628                     u2480:
  7538  001628                     l3147:
  7539                           
  7540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  7541  001628  0644               	decf	dtoa@i^0,f,c
  7542  00162A  A0D8               	btfss	status,0,c
  7543  00162C  0645               	decf	(dtoa@i+1)^0,f,c
  7544  00162E                     
  7545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7546  00162E  503A               	movf	dtoa@s^0,w,c
  7547  001630  103B               	iorwf	(dtoa@s+1)^0,w,c
  7548  001632  A4D8               	btfss	status,2,c
  7549  001634  EF1E  F00B         	goto	u2491
  7550  001638  EF20  F00B         	goto	u2490
  7551  00163C                     u2491:
  7552  00163C  EF26  F00B         	goto	l3153
  7553  001640                     u2490:
  7554  001640  0E00               	movlw	0
  7555  001642  6E35               	movwf	(_dtoa$2342+1)^0,c
  7556  001644  0E2B               	movlw	43
  7557  001646  6E34               	movwf	_dtoa$2342^0,c
  7558  001648  EF2A  F00B         	goto	l3155
  7559  00164C                     l3153:
  7560  00164C  0E00               	movlw	0
  7561  00164E  6E35               	movwf	(_dtoa$2342+1)^0,c
  7562  001650  0E2D               	movlw	45
  7563  001652  6E34               	movwf	_dtoa$2342^0,c
  7564  001654                     l3155:
  7565  001654  0E66               	movlw	low _dbuf
  7566  001656  2444               	addwf	dtoa@i^0,w,c
  7567  001658  6ED9               	movwf	fsr2l,c
  7568  00165A  0E00               	movlw	high _dbuf
  7569  00165C  2045               	addwfc	(dtoa@i+1)^0,w,c
  7570  00165E  6EDA               	movwf	fsr2h,c
  7571  001660  C034  FFDF         	movff	_dtoa$2342,indf2
  7572  001664                     l3157:
  7573                           
  7574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7575  001664  C022  F017         	movff	dtoa@fp,pad@fp
  7576  001668  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  7577  00166C  0E66               	movlw	low _dbuf
  7578  00166E  2444               	addwf	dtoa@i^0,w,c
  7579  001670  6E19               	movwf	pad@buf^0,c
  7580  001672  0E00               	movlw	high _dbuf
  7581  001674  2045               	addwfc	(dtoa@i+1)^0,w,c
  7582  001676  6E1A               	movwf	(pad@buf+1)^0,c
  7583  001678  C038  F01B         	movff	dtoa@w,pad@p
  7584  00167C  C039  F01C         	movff	dtoa@w+1,pad@p+1
  7585  001680  ECDC  F015         	call	_pad	;wreg free
  7586  001684  C017  F022         	movff	?_pad,?_dtoa
  7587  001688  C018  F023         	movff	?_pad+1,?_dtoa+1
  7588  00168C  0012               	return		;funcret
  7589  00168E                     __end_of_dtoa:
  7590                           	callstack 0
  7591                           
  7592 ;; *************** function _pad *****************
  7593 ;; Defined at:
  7594 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  7597 ;;		 -> sprintf@f(6), 
  7598 ;;  buf             2   24[COMRAM] PTR unsigned char 
  7599 ;;		 -> dbuf(32), 
  7600 ;;  p               2   26[COMRAM] int 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  w               2   31[COMRAM] int 
  7603 ;;  i               2   29[COMRAM] int 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  2   22[COMRAM] int 
  7606 ;; Registers used:
  7607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7613 ;;      Params:         6       0       0       0       0       0       0       0       0
  7614 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7615 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7616 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7617 ;;Total ram usage:       11 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; Hardware stack levels required when called:    5
  7620 ;; This function calls:
  7621 ;;		_fputc
  7622 ;;		_fputs
  7623 ;;		_strlen
  7624 ;; This function is called by:
  7625 ;;		_dtoa
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text42
  7630  002BB8                     __ptext42:
  7631                           	callstack 0
  7632  002BB8                     _pad:
  7633                           	callstack 20
  7634  002BB8                     
  7635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7636  002BB8  A055               	btfss	_flags^0,0,c
  7637  002BBA  EFE1  F015         	goto	u2261
  7638  002BBE  EFE3  F015         	goto	u2260
  7639  002BC2                     u2261:
  7640  002BC2  EFED  F015         	goto	l3061
  7641  002BC6                     u2260:
  7642  002BC6                     
  7643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7644  002BC6  C019  F010         	movff	pad@buf,fputs@s
  7645  002BCA  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7646  002BCE  C017  F012         	movff	pad@fp,fputs@fp
  7647  002BD2  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7648  002BD6  EC0A  F01B         	call	_fputs	;wreg free
  7649  002BDA                     l3061:
  7650                           
  7651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7652  002BDA  BE1C               	btfsc	(pad@p+1)^0,7,c
  7653  002BDC  EFF2  F015         	goto	u2271
  7654  002BE0  EFF4  F015         	goto	u2270
  7655  002BE4                     u2271:
  7656  002BE4  EFFA  F015         	goto	l3065
  7657  002BE8                     u2270:
  7658  002BE8  C01B  F020         	movff	pad@p,pad@w
  7659  002BEC  C01C  F021         	movff	pad@p+1,pad@w+1
  7660  002BF0  EFFE  F015         	goto	l1177
  7661  002BF4                     l3065:
  7662  002BF4  0E00               	movlw	0
  7663  002BF6  6E21               	movwf	(pad@w+1)^0,c
  7664  002BF8  0E00               	movlw	0
  7665  002BFA  6E20               	movwf	pad@w^0,c
  7666  002BFC                     l1177:
  7667                           
  7668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7669  002BFC  0E00               	movlw	0
  7670  002BFE  6E1F               	movwf	(pad@i+1)^0,c
  7671  002C00  0E00               	movlw	0
  7672  002C02  6E1E               	movwf	pad@i^0,c
  7673                           
  7674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7675  002C04  EF10  F016         	goto	l3071
  7676  002C08                     l3067:
  7677                           
  7678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7679  002C08  0E00               	movlw	0
  7680  002C0A  6E08               	movwf	(fputc@c+1)^0,c
  7681  002C0C  0E20               	movlw	32
  7682  002C0E  6E07               	movwf	fputc@c^0,c
  7683  002C10  C017  F009         	movff	pad@fp,fputc@fp
  7684  002C14  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  7685  002C18  EC77  F015         	call	_fputc	;wreg free
  7686  002C1C                     
  7687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7688  002C1C  4A1E               	infsnz	pad@i^0,f,c
  7689  002C1E  2A1F               	incf	(pad@i+1)^0,f,c
  7690  002C20                     l3071:
  7691                           
  7692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7693  002C20  5020               	movf	pad@w^0,w,c
  7694  002C22  5C1E               	subwf	pad@i^0,w,c
  7695  002C24  501F               	movf	(pad@i+1)^0,w,c
  7696  002C26  0A80               	xorlw	128
  7697  002C28  6E1D               	movwf	??_pad^0,c
  7698  002C2A  5021               	movf	(pad@w+1)^0,w,c
  7699  002C2C  0A80               	xorlw	128
  7700  002C2E  581D               	subwfb	??_pad^0,w,c
  7701  002C30  A0D8               	btfss	status,0,c
  7702  002C32  EF1D  F016         	goto	u2281
  7703  002C36  EF1F  F016         	goto	u2280
  7704  002C3A                     u2281:
  7705  002C3A  EF04  F016         	goto	l3067
  7706  002C3E                     u2280:
  7707  002C3E                     
  7708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7709  002C3E  B055               	btfsc	_flags^0,0,c
  7710  002C40  EF24  F016         	goto	u2291
  7711  002C44  EF26  F016         	goto	u2290
  7712  002C48                     u2291:
  7713  002C48  EF30  F016         	goto	l3075
  7714  002C4C                     u2290:
  7715  002C4C                     
  7716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7717  002C4C  C019  F010         	movff	pad@buf,fputs@s
  7718  002C50  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7719  002C54  C017  F012         	movff	pad@fp,fputs@fp
  7720  002C58  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7721  002C5C  EC0A  F01B         	call	_fputs	;wreg free
  7722  002C60                     l3075:
  7723                           
  7724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7725  002C60  C019  F007         	movff	pad@buf,strlen@s
  7726  002C64  C01A  F008         	movff	pad@buf+1,strlen@s+1
  7727  002C68  EC86  F01B         	call	_strlen	;wreg free
  7728  002C6C  5020               	movf	pad@w^0,w,c
  7729  002C6E  2407               	addwf	?_strlen^0,w,c
  7730  002C70  6E17               	movwf	?_pad^0,c
  7731  002C72  5021               	movf	(pad@w+1)^0,w,c
  7732  002C74  2008               	addwfc	(?_strlen+1)^0,w,c
  7733  002C76  6E18               	movwf	(?_pad+1)^0,c
  7734  002C78  0012               	return		;funcret
  7735  002C7A                     __end_of_pad:
  7736                           	callstack 0
  7737                           
  7738 ;; *************** function _strlen *****************
  7739 ;; Defined at:
  7740 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7743 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  a               2    8[COMRAM] PTR const unsigned char 
  7746 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  2    6[COMRAM] unsigned int 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7756 ;;      Params:         2       0       0       0       0       0       0       0       0
  7757 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7759 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7760 ;;Total ram usage:        4 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    2
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_sendData
  7767 ;;		_pad
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text43
  7772  00370C                     __ptext43:
  7773                           	callstack 0
  7774  00370C                     _strlen:
  7775                           	callstack 22
  7776  00370C  C007  F009         	movff	strlen@s,strlen@a
  7777  003710  C008  F00A         	movff	strlen@s+1,strlen@a+1
  7778  003714  EF8E  F01B         	goto	l2957
  7779  003718                     l2955:
  7780  003718  4A07               	infsnz	strlen@s^0,f,c
  7781  00371A  2A08               	incf	(strlen@s+1)^0,f,c
  7782  00371C                     l2957:
  7783  00371C  C007  FFD9         	movff	strlen@s,fsr2l
  7784  003720  C008  FFDA         	movff	strlen@s+1,fsr2h
  7785  003724  50DF               	movf	indf2,w,c
  7786  003726  A4D8               	btfss	status,2,c
  7787  003728  EF98  F01B         	goto	u2111
  7788  00372C  EF9A  F01B         	goto	u2110
  7789  003730                     u2111:
  7790  003730  EF8C  F01B         	goto	l2955
  7791  003734                     u2110:
  7792  003734  5009               	movf	strlen@a^0,w,c
  7793  003736  5C07               	subwf	strlen@s^0,w,c
  7794  003738  6E07               	movwf	?_strlen^0,c
  7795  00373A  500A               	movf	(strlen@a+1)^0,w,c
  7796  00373C  5808               	subwfb	(strlen@s+1)^0,w,c
  7797  00373E  6E08               	movwf	(?_strlen+1)^0,c
  7798  003740  0012               	return		;funcret
  7799  003742                     __end_of_strlen:
  7800                           	callstack 0
  7801                           
  7802 ;; *************** function _fputs *****************
  7803 ;; Defined at:
  7804 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7807 ;;		 -> dbuf(32), 
  7808 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7809 ;;		 -> sprintf@f(6), 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  i               2   20[COMRAM] int 
  7812 ;;  c               1   19[COMRAM] unsigned char 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  2   15[COMRAM] int 
  7815 ;; Registers used:
  7816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7822 ;;      Params:         4       0       0       0       0       0       0       0       0
  7823 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7825 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7826 ;;Total ram usage:        7 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; Hardware stack levels required when called:    4
  7829 ;; This function calls:
  7830 ;;		_fputc
  7831 ;; This function is called by:
  7832 ;;		_pad
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text44
  7837  003614                     __ptext44:
  7838                           	callstack 0
  7839  003614                     _fputs:
  7840                           	callstack 20
  7841  003614  0E00               	movlw	0
  7842  003616  6E16               	movwf	(fputs@i+1)^0,c
  7843  003618  0E00               	movlw	0
  7844  00361A  6E15               	movwf	fputs@i^0,c
  7845  00361C  EF1B  F01B         	goto	l2969
  7846  003620                     l2965:
  7847  003620  C014  F007         	movff	fputs@c,fputc@c
  7848  003624  6A08               	clrf	(fputc@c+1)^0,c
  7849  003626  C012  F009         	movff	fputs@fp,fputc@fp
  7850  00362A  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  7851  00362E  EC77  F015         	call	_fputc	;wreg free
  7852  003632  4A15               	infsnz	fputs@i^0,f,c
  7853  003634  2A16               	incf	(fputs@i+1)^0,f,c
  7854  003636                     l2969:
  7855  003636  5015               	movf	fputs@i^0,w,c
  7856  003638  2410               	addwf	fputs@s^0,w,c
  7857  00363A  6ED9               	movwf	fsr2l,c
  7858  00363C  5016               	movf	(fputs@i+1)^0,w,c
  7859  00363E  2011               	addwfc	(fputs@s+1)^0,w,c
  7860  003640  6EDA               	movwf	fsr2h,c
  7861  003642  50DF               	movf	indf2,w,c
  7862  003644  6E14               	movwf	fputs@c^0,c
  7863  003646  5014               	movf	fputs@c^0,w,c
  7864  003648  A4D8               	btfss	status,2,c
  7865  00364A  EF29  F01B         	goto	u2121
  7866  00364E  EF2B  F01B         	goto	u2120
  7867  003652                     u2121:
  7868  003652  EF10  F01B         	goto	l2965
  7869  003656                     u2120:
  7870  003656  0012               	return		;funcret
  7871  003658                     __end_of_fputs:
  7872                           	callstack 0
  7873                           
  7874 ;; *************** function _fputc *****************
  7875 ;; Defined at:
  7876 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  c               2    6[COMRAM] int 
  7879 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  7880 ;;		 -> sprintf@f(6), 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;		None
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  2    6[COMRAM] int 
  7885 ;; Registers used:
  7886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7892 ;;      Params:         4       0       0       0       0       0       0       0       0
  7893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7894 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7895 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7896 ;;Total ram usage:        9 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; Hardware stack levels required when called:    3
  7899 ;; This function calls:
  7900 ;;		_putch
  7901 ;; This function is called by:
  7902 ;;		_pad
  7903 ;;		_vfpfcnvrt
  7904 ;;		_fputs
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text45
  7909  002AEE                     __ptext45:
  7910                           	callstack 0
  7911  002AEE                     _fputc:
  7912                           	callstack 23
  7913  002AEE  5009               	movf	fputc@fp^0,w,c
  7914  002AF0  100A               	iorwf	(fputc@fp+1)^0,w,c
  7915  002AF2  B4D8               	btfsc	status,2,c
  7916  002AF4  EF7E  F015         	goto	u2071
  7917  002AF8  EF80  F015         	goto	u2070
  7918  002AFC                     u2071:
  7919  002AFC  EF89  F015         	goto	l2943
  7920  002B00                     u2070:
  7921  002B00  5009               	movf	fputc@fp^0,w,c
  7922  002B02  100A               	iorwf	(fputc@fp+1)^0,w,c
  7923  002B04  A4D8               	btfss	status,2,c
  7924  002B06  EF87  F015         	goto	u2081
  7925  002B0A  EF89  F015         	goto	u2080
  7926  002B0E                     u2081:
  7927  002B0E  EF8E  F015         	goto	l2945
  7928  002B12                     u2080:
  7929  002B12                     l2943:
  7930  002B12  5007               	movf	fputc@c^0,w,c
  7931  002B14  EC2E  F01C         	call	_putch
  7932  002B18  EFDB  F015         	goto	l1308
  7933  002B1C                     l2945:
  7934  002B1C  EE20 F004          	lfsr	2,4
  7935  002B20  5009               	movf	fputc@fp^0,w,c
  7936  002B22  26D9               	addwf	fsr2l,f,c
  7937  002B24  500A               	movf	(fputc@fp+1)^0,w,c
  7938  002B26  22DA               	addwfc	fsr2h,f,c
  7939  002B28  50DE               	movf	postinc2,w,c
  7940  002B2A  10DE               	iorwf	postinc2,w,c
  7941  002B2C  B4D8               	btfsc	status,2,c
  7942  002B2E  EF9B  F015         	goto	u2091
  7943  002B32  EF9D  F015         	goto	u2090
  7944  002B36                     u2091:
  7945  002B36  EFB8  F015         	goto	l2949
  7946  002B3A                     u2090:
  7947  002B3A  EE20 F004          	lfsr	2,4
  7948  002B3E  5009               	movf	fputc@fp^0,w,c
  7949  002B40  26D9               	addwf	fsr2l,f,c
  7950  002B42  500A               	movf	(fputc@fp+1)^0,w,c
  7951  002B44  22DA               	addwfc	fsr2h,f,c
  7952  002B46  EE10 F002          	lfsr	1,2
  7953  002B4A  5009               	movf	fputc@fp^0,w,c
  7954  002B4C  26E1               	addwf	fsr1l,f,c
  7955  002B4E  500A               	movf	(fputc@fp+1)^0,w,c
  7956  002B50  22E2               	addwfc	fsr1h,f,c
  7957  002B52  50DE               	movf	postinc2,w,c
  7958  002B54  5CE6               	subwf	postinc1,w,c
  7959  002B56  50E6               	movf	postinc1,w,c
  7960  002B58  0A80               	xorlw	128
  7961  002B5A  6E0F               	movwf	(??_fputc+4)^0,c
  7962  002B5C  50DE               	movf	postinc2,w,c
  7963  002B5E  0A80               	xorlw	128
  7964  002B60  580F               	subwfb	(??_fputc+4)^0,w,c
  7965  002B62  B0D8               	btfsc	status,0,c
  7966  002B64  EFB6  F015         	goto	u2101
  7967  002B68  EFB8  F015         	goto	u2100
  7968  002B6C                     u2101:
  7969  002B6C  EFDB  F015         	goto	l1308
  7970  002B70                     u2100:
  7971  002B70                     l2949:
  7972  002B70  EE20 F002          	lfsr	2,2
  7973  002B74  5009               	movf	fputc@fp^0,w,c
  7974  002B76  26D9               	addwf	fsr2l,f,c
  7975  002B78  500A               	movf	(fputc@fp+1)^0,w,c
  7976  002B7A  22DA               	addwfc	fsr2h,f,c
  7977  002B7C  CFDE F00B          	movff	postinc2,??_fputc
  7978  002B80  CFDD F00C          	movff	postdec2,??_fputc+1
  7979  002B84  C009  FFD9         	movff	fputc@fp,fsr2l
  7980  002B88  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  7981  002B8C  CFDE F00D          	movff	postinc2,??_fputc+2
  7982  002B90  CFDD F00E          	movff	postdec2,??_fputc+3
  7983  002B94  500B               	movf	??_fputc^0,w,c
  7984  002B96  240D               	addwf	(??_fputc+2)^0,w,c
  7985  002B98  6ED9               	movwf	fsr2l,c
  7986  002B9A  500C               	movf	(??_fputc+1)^0,w,c
  7987  002B9C  200E               	addwfc	(??_fputc+3)^0,w,c
  7988  002B9E  6EDA               	movwf	fsr2h,c
  7989  002BA0  C007  FFDF         	movff	fputc@c,indf2
  7990  002BA4  EE20 F002          	lfsr	2,2
  7991  002BA8  5009               	movf	fputc@fp^0,w,c
  7992  002BAA  26D9               	addwf	fsr2l,f,c
  7993  002BAC  500A               	movf	(fputc@fp+1)^0,w,c
  7994  002BAE  22DA               	addwfc	fsr2h,f,c
  7995  002BB0  2ADE               	incf	postinc2,f,c
  7996  002BB2  0E00               	movlw	0
  7997  002BB4  22DD               	addwfc	postdec2,f,c
  7998  002BB6                     l1308:
  7999  002BB6  0012               	return		;funcret
  8000  002BB8                     __end_of_fputc:
  8001                           	callstack 0
  8002                           
  8003 ;; *************** function _putch *****************
  8004 ;; Defined at:
  8005 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  c               1    wreg     unsigned char 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;  c               1    0[COMRAM] unsigned char 
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1    wreg      void 
  8012 ;; Registers used:
  8013 ;;		wreg
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8019 ;;      Params:         0       0       0       0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8022 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8023 ;;Total ram usage:        0 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:    2
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_fputc
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text46
  8034  00385C                     __ptext46:
  8035                           	callstack 0
  8036  00385C                     _putch:
  8037                           	callstack 23
  8038  00385C  0012               	return		;funcret
  8039  00385E                     __end_of_putch:
  8040                           	callstack 0
  8041                           
  8042 ;; *************** function _abs *****************
  8043 ;; Defined at:
  8044 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;  a               2   24[COMRAM] int 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;		None
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  2   24[COMRAM] int 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8058 ;;      Params:         2       0       0       0       0       0       0       0       0
  8059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8060 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8061 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8062 ;;Total ram usage:        4 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:    2
  8065 ;; This function calls:
  8066 ;;		Nothing
  8067 ;; This function is called by:
  8068 ;;		_dtoa
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           	psect	text47
  8073  003658                     __ptext47:
  8074                           	callstack 0
  8075  003658                     _abs:
  8076                           	callstack 23
  8077  003658  BE1A               	btfsc	(abs@a+1)^0,7,c
  8078  00365A  EF39  F01B         	goto	u2300
  8079  00365E  501A               	movf	(abs@a+1)^0,w,c
  8080  003660  E106               	bnz	u2301
  8081  003662  0419               	decf	abs@a^0,w,c
  8082  003664  B0D8               	btfsc	status,0,c
  8083  003666  EF37  F01B         	goto	u2301
  8084  00366A  EF39  F01B         	goto	u2300
  8085  00366E                     u2301:
  8086  00366E  EF47  F01B         	goto	l1248
  8087  003672                     u2300:
  8088  003672  C019  F01B         	movff	abs@a,??_abs
  8089  003676  C01A  F01C         	movff	abs@a+1,??_abs+1
  8090  00367A  1E1B               	comf	??_abs^0,f,c
  8091  00367C  1E1C               	comf	(??_abs+1)^0,f,c
  8092  00367E  4A1B               	infsnz	??_abs^0,f,c
  8093  003680  2A1C               	incf	(??_abs+1)^0,f,c
  8094  003682  C01B  F019         	movff	??_abs,?_abs
  8095  003686  C01C  F01A         	movff	??_abs+1,?_abs+1
  8096  00368A  EF4B  F01B         	goto	l1251
  8097  00368E                     l1248:
  8098  00368E  C019  F019         	movff	abs@a,?_abs
  8099  003692  C01A  F01A         	movff	abs@a+1,?_abs+1
  8100  003696                     l1251:
  8101  003696  0012               	return		;funcret
  8102  003698                     __end_of_abs:
  8103                           	callstack 0
  8104                           
  8105 ;; *************** function ___aomod *****************
  8106 ;; Defined at:
  8107 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  dividend        8    6[COMRAM] long long 
  8110 ;;  divisor         8   14[COMRAM] long long 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  sign            1   23[COMRAM] unsigned char 
  8113 ;;  counter         1   22[COMRAM] unsigned char 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  8    6[COMRAM] long long 
  8116 ;; Registers used:
  8117 ;;		wreg, status,2, status,0
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8123 ;;      Params:        16       0       0       0       0       0       0       0       0
  8124 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8126 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8127 ;;Total ram usage:       18 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    2
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_dtoa
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text48
  8138  002250                     __ptext48:
  8139                           	callstack 0
  8140  002250                     ___aomod:
  8141                           	callstack 23
  8142  002250  0E00               	movlw	0
  8143  002252  6E18               	movwf	___aomod@sign^0,c
  8144  002254  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  8145  002256  EF31  F011         	goto	u2200
  8146  00225A  EF2F  F011         	goto	u2201
  8147  00225E                     u2201:
  8148  00225E  EF43  F011         	goto	l3029
  8149  002262                     u2200:
  8150  002262  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8151  002264  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8152  002266  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8153  002268  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8154  00226A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8155  00226C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8156  00226E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8157  002270  6C07               	negf	___aomod@dividend^0,c
  8158  002272  0E00               	movlw	0
  8159  002274  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8160  002276  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8161  002278  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8162  00227A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8163  00227C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8164  00227E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8165  002280  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8166  002282  0E01               	movlw	1
  8167  002284  6E18               	movwf	___aomod@sign^0,c
  8168  002286                     l3029:
  8169  002286  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  8170  002288  EF4A  F011         	goto	u2210
  8171  00228C  EF48  F011         	goto	u2211
  8172  002290                     u2211:
  8173  002290  EF5A  F011         	goto	l3033
  8174  002294                     u2210:
  8175  002294  1E16               	comf	(___aomod@divisor+7)^0,f,c
  8176  002296  1E15               	comf	(___aomod@divisor+6)^0,f,c
  8177  002298  1E14               	comf	(___aomod@divisor+5)^0,f,c
  8178  00229A  1E13               	comf	(___aomod@divisor+4)^0,f,c
  8179  00229C  1E12               	comf	(___aomod@divisor+3)^0,f,c
  8180  00229E  1E11               	comf	(___aomod@divisor+2)^0,f,c
  8181  0022A0  1E10               	comf	(___aomod@divisor+1)^0,f,c
  8182  0022A2  6C0F               	negf	___aomod@divisor^0,c
  8183  0022A4  0E00               	movlw	0
  8184  0022A6  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  8185  0022A8  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  8186  0022AA  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  8187  0022AC  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  8188  0022AE  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  8189  0022B0  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  8190  0022B2  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  8191  0022B4                     l3033:
  8192  0022B4  500F               	movf	___aomod@divisor^0,w,c
  8193  0022B6  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  8194  0022B8  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  8195  0022BA  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  8196  0022BC  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  8197  0022BE  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  8198  0022C0  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  8199  0022C2  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  8200  0022C4  B4D8               	btfsc	status,2,c
  8201  0022C6  EF67  F011         	goto	u2221
  8202  0022CA  EF69  F011         	goto	u2220
  8203  0022CE                     u2221:
  8204  0022CE  EFB1  F011         	goto	l3049
  8205  0022D2                     u2220:
  8206  0022D2  0E01               	movlw	1
  8207  0022D4  6E17               	movwf	___aomod@counter^0,c
  8208  0022D6  EF77  F011         	goto	l3039
  8209  0022DA                     l3037:
  8210  0022DA  90D8               	bcf	status,0,c
  8211  0022DC  360F               	rlcf	___aomod@divisor^0,f,c
  8212  0022DE  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  8213  0022E0  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  8214  0022E2  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  8215  0022E4  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  8216  0022E6  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  8217  0022E8  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  8218  0022EA  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  8219  0022EC  2A17               	incf	___aomod@counter^0,f,c
  8220  0022EE                     l3039:
  8221  0022EE  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  8222  0022F0  EF7C  F011         	goto	u2231
  8223  0022F4  EF7E  F011         	goto	u2230
  8224  0022F8                     u2231:
  8225  0022F8  EF6D  F011         	goto	l3037
  8226  0022FC                     u2230:
  8227  0022FC                     l3041:
  8228  0022FC  500F               	movf	___aomod@divisor^0,w,c
  8229  0022FE  5C07               	subwf	___aomod@dividend^0,w,c
  8230  002300  5010               	movf	(___aomod@divisor+1)^0,w,c
  8231  002302  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  8232  002304  5011               	movf	(___aomod@divisor+2)^0,w,c
  8233  002306  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  8234  002308  5012               	movf	(___aomod@divisor+3)^0,w,c
  8235  00230A  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  8236  00230C  5013               	movf	(___aomod@divisor+4)^0,w,c
  8237  00230E  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  8238  002310  5014               	movf	(___aomod@divisor+5)^0,w,c
  8239  002312  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  8240  002314  5015               	movf	(___aomod@divisor+6)^0,w,c
  8241  002316  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  8242  002318  5016               	movf	(___aomod@divisor+7)^0,w,c
  8243  00231A  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  8244  00231C  A0D8               	btfss	status,0,c
  8245  00231E  EF93  F011         	goto	u2241
  8246  002322  EF95  F011         	goto	u2240
  8247  002326                     u2241:
  8248  002326  EFA5  F011         	goto	l3045
  8249  00232A                     u2240:
  8250  00232A  500F               	movf	___aomod@divisor^0,w,c
  8251  00232C  5E07               	subwf	___aomod@dividend^0,f,c
  8252  00232E  5010               	movf	(___aomod@divisor+1)^0,w,c
  8253  002330  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  8254  002332  5011               	movf	(___aomod@divisor+2)^0,w,c
  8255  002334  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  8256  002336  5012               	movf	(___aomod@divisor+3)^0,w,c
  8257  002338  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  8258  00233A  5013               	movf	(___aomod@divisor+4)^0,w,c
  8259  00233C  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  8260  00233E  5014               	movf	(___aomod@divisor+5)^0,w,c
  8261  002340  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  8262  002342  5015               	movf	(___aomod@divisor+6)^0,w,c
  8263  002344  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  8264  002346  5016               	movf	(___aomod@divisor+7)^0,w,c
  8265  002348  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  8266  00234A                     l3045:
  8267  00234A  90D8               	bcf	status,0,c
  8268  00234C  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  8269  00234E  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  8270  002350  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  8271  002352  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  8272  002354  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  8273  002356  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  8274  002358  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  8275  00235A  320F               	rrcf	___aomod@divisor^0,f,c
  8276  00235C  2E17               	decfsz	___aomod@counter^0,f,c
  8277  00235E  EF7E  F011         	goto	l3041
  8278  002362                     l3049:
  8279  002362  5018               	movf	___aomod@sign^0,w,c
  8280  002364  B4D8               	btfsc	status,2,c
  8281  002366  EFB7  F011         	goto	u2251
  8282  00236A  EFB9  F011         	goto	u2250
  8283  00236E                     u2251:
  8284  00236E  EFC9  F011         	goto	l3053
  8285  002372                     u2250:
  8286  002372  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8287  002374  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8288  002376  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8289  002378  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8290  00237A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8291  00237C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8292  00237E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8293  002380  6C07               	negf	___aomod@dividend^0,c
  8294  002382  0E00               	movlw	0
  8295  002384  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8296  002386  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8297  002388  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8298  00238A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8299  00238C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8300  00238E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8301  002390  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8302  002392                     l3053:
  8303  002392  C007  F007         	movff	___aomod@dividend,?___aomod
  8304  002396  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  8305  00239A  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  8306  00239E  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  8307  0023A2  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  8308  0023A6  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  8309  0023AA  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  8310  0023AE  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  8311  0023B2  0012               	return		;funcret
  8312  0023B4                     __end_of___aomod:
  8313                           	callstack 0
  8314                           
  8315 ;; *************** function ___aodiv *****************
  8316 ;; Defined at:
  8317 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  dividend        8    6[COMRAM] long long 
  8320 ;;  divisor         8   14[COMRAM] long long 
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;  quotient        8   24[COMRAM] long long 
  8323 ;;  sign            1   23[COMRAM] unsigned char 
  8324 ;;  counter         1   22[COMRAM] unsigned char 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  8    6[COMRAM] long long 
  8327 ;; Registers used:
  8328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8334 ;;      Params:        16       0       0       0       0       0       0       0       0
  8335 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8337 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8338 ;;Total ram usage:       26 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    2
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_dtoa
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text49
  8349  001F52                     __ptext49:
  8350                           	callstack 0
  8351  001F52                     ___aodiv:
  8352                           	callstack 23
  8353  001F52  0E00               	movlw	0
  8354  001F54  6E18               	movwf	___aodiv@sign^0,c
  8355  001F56  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  8356  001F58  EFB2  F00F         	goto	u2130
  8357  001F5C  EFB0  F00F         	goto	u2131
  8358  001F60                     u2131:
  8359  001F60  EFC4  F00F         	goto	l2985
  8360  001F64                     u2130:
  8361  001F64  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  8362  001F66  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  8363  001F68  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  8364  001F6A  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  8365  001F6C  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  8366  001F6E  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  8367  001F70  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  8368  001F72  6C0F               	negf	___aodiv@divisor^0,c
  8369  001F74  0E00               	movlw	0
  8370  001F76  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  8371  001F78  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  8372  001F7A  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  8373  001F7C  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  8374  001F7E  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  8375  001F80  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  8376  001F82  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  8377  001F84  0E01               	movlw	1
  8378  001F86  6E18               	movwf	___aodiv@sign^0,c
  8379  001F88                     l2985:
  8380  001F88  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  8381  001F8A  EFCB  F00F         	goto	u2140
  8382  001F8E  EFC9  F00F         	goto	u2141
  8383  001F92                     u2141:
  8384  001F92  EFDD  F00F         	goto	l2991
  8385  001F96                     u2140:
  8386  001F96  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  8387  001F98  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  8388  001F9A  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  8389  001F9C  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  8390  001F9E  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  8391  001FA0  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  8392  001FA2  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  8393  001FA4  6C07               	negf	___aodiv@dividend^0,c
  8394  001FA6  0E00               	movlw	0
  8395  001FA8  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  8396  001FAA  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  8397  001FAC  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  8398  001FAE  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  8399  001FB0  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  8400  001FB2  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  8401  001FB4  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  8402  001FB6  0E01               	movlw	1
  8403  001FB8  1A18               	xorwf	___aodiv@sign^0,f,c
  8404  001FBA                     l2991:
  8405  001FBA  EE20  F019         	lfsr	2,___aodiv@quotient
  8406  001FBE  0E07               	movlw	7
  8407  001FC0                     u2151:
  8408  001FC0  6ADE               	clrf	postinc2,c
  8409  001FC2  06E8               	decf	wreg,f,c
  8410  001FC4  E2FD               	bc	u2151
  8411  001FC6  500F               	movf	___aodiv@divisor^0,w,c
  8412  001FC8  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  8413  001FCA  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  8414  001FCC  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  8415  001FCE  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  8416  001FD0  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  8417  001FD2  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  8418  001FD4  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  8419  001FD6  B4D8               	btfsc	status,2,c
  8420  001FD8  EFF0  F00F         	goto	u2161
  8421  001FDC  EFF2  F00F         	goto	u2160
  8422  001FE0                     u2161:
  8423  001FE0  EF44  F010         	goto	l3013
  8424  001FE4                     u2160:
  8425  001FE4  0E01               	movlw	1
  8426  001FE6  6E17               	movwf	___aodiv@counter^0,c
  8427  001FE8  EF00  F010         	goto	l2999
  8428  001FEC                     l2997:
  8429  001FEC  90D8               	bcf	status,0,c
  8430  001FEE  360F               	rlcf	___aodiv@divisor^0,f,c
  8431  001FF0  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  8432  001FF2  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  8433  001FF4  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  8434  001FF6  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  8435  001FF8  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  8436  001FFA  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  8437  001FFC  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  8438  001FFE  2A17               	incf	___aodiv@counter^0,f,c
  8439  002000                     l2999:
  8440  002000  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  8441  002002  EF05  F010         	goto	u2171
  8442  002006  EF07  F010         	goto	u2170
  8443  00200A                     u2171:
  8444  00200A  EFF6  F00F         	goto	l2997
  8445  00200E                     u2170:
  8446  00200E                     l3001:
  8447  00200E  90D8               	bcf	status,0,c
  8448  002010  3619               	rlcf	___aodiv@quotient^0,f,c
  8449  002012  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  8450  002014  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  8451  002016  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  8452  002018  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  8453  00201A  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  8454  00201C  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  8455  00201E  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  8456  002020  500F               	movf	___aodiv@divisor^0,w,c
  8457  002022  5C07               	subwf	___aodiv@dividend^0,w,c
  8458  002024  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8459  002026  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  8460  002028  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8461  00202A  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  8462  00202C  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8463  00202E  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  8464  002030  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8465  002032  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  8466  002034  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8467  002036  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  8468  002038  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8469  00203A  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  8470  00203C  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8471  00203E  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  8472  002040  A0D8               	btfss	status,0,c
  8473  002042  EF25  F010         	goto	u2181
  8474  002046  EF27  F010         	goto	u2180
  8475  00204A                     u2181:
  8476  00204A  EF38  F010         	goto	l3009
  8477  00204E                     u2180:
  8478  00204E  500F               	movf	___aodiv@divisor^0,w,c
  8479  002050  5E07               	subwf	___aodiv@dividend^0,f,c
  8480  002052  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8481  002054  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  8482  002056  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8483  002058  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  8484  00205A  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8485  00205C  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  8486  00205E  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8487  002060  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  8488  002062  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8489  002064  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  8490  002066  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8491  002068  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  8492  00206A  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8493  00206C  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  8494  00206E  8019               	bsf	___aodiv@quotient^0,0,c
  8495  002070                     l3009:
  8496  002070  90D8               	bcf	status,0,c
  8497  002072  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  8498  002074  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  8499  002076  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  8500  002078  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  8501  00207A  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  8502  00207C  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  8503  00207E  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  8504  002080  320F               	rrcf	___aodiv@divisor^0,f,c
  8505  002082  2E17               	decfsz	___aodiv@counter^0,f,c
  8506  002084  EF07  F010         	goto	l3001
  8507  002088                     l3013:
  8508  002088  5018               	movf	___aodiv@sign^0,w,c
  8509  00208A  B4D8               	btfsc	status,2,c
  8510  00208C  EF4A  F010         	goto	u2191
  8511  002090  EF4C  F010         	goto	u2190
  8512  002094                     u2191:
  8513  002094  EF5C  F010         	goto	l3017
  8514  002098                     u2190:
  8515  002098  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  8516  00209A  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  8517  00209C  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  8518  00209E  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  8519  0020A0  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  8520  0020A2  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  8521  0020A4  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  8522  0020A6  6C19               	negf	___aodiv@quotient^0,c
  8523  0020A8  0E00               	movlw	0
  8524  0020AA  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  8525  0020AC  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  8526  0020AE  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  8527  0020B0  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  8528  0020B2  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  8529  0020B4  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  8530  0020B6  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  8531  0020B8                     l3017:
  8532  0020B8  C019  F007         	movff	___aodiv@quotient,?___aodiv
  8533  0020BC  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  8534  0020C0  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  8535  0020C4  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  8536  0020C8  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  8537  0020CC  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  8538  0020D0  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  8539  0020D4  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  8540  0020D8  0012               	return		;funcret
  8541  0020DA                     __end_of___aodiv:
  8542                           	callstack 0
  8543                           
  8544 ;; *************** function _atoi *****************
  8545 ;; Defined at:
  8546 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8549 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  8550 ;;		 -> STR_1(14), 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  n               2   26[COMRAM] int 
  8553 ;;  neg             2   19[COMRAM] int 
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  2   13[COMRAM] int 
  8556 ;; Registers used:
  8557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8563 ;;      Params:         2       0       0       0       0       0       0       0       0
  8564 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8565 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8566 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8567 ;;Total ram usage:       15 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    3
  8570 ;; This function calls:
  8571 ;;		___wmul
  8572 ;;		_isdigit
  8573 ;;		_isspace
  8574 ;; This function is called by:
  8575 ;;		_vfpfcnvrt
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text50
  8580  001DC2                     __ptext50:
  8581                           	callstack 0
  8582  001DC2                     _atoi:
  8583                           	callstack 23
  8584  001DC2  0E00               	movlw	0
  8585  001DC4  6E1C               	movwf	(atoi@n+1)^0,c
  8586  001DC6  0E00               	movlw	0
  8587  001DC8  6E1B               	movwf	atoi@n^0,c
  8588  001DCA  0E00               	movlw	0
  8589  001DCC  6E15               	movwf	(atoi@neg+1)^0,c
  8590  001DCE  0E00               	movlw	0
  8591  001DD0  6E14               	movwf	atoi@neg^0,c
  8592  001DD2  EFED  F00E         	goto	l3165
  8593  001DD6                     l3163:
  8594  001DD6  4A0E               	infsnz	atoi@s^0,f,c
  8595  001DD8  2A0F               	incf	(atoi@s+1)^0,f,c
  8596  001DDA                     l3165:
  8597  001DDA  0E01               	movlw	1
  8598  001DDC  6E1A               	movwf	_atoi$2378^0,c
  8599  001DDE  C00E  FFF6         	movff	atoi@s,tblptrl
  8600  001DE2  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8601  001DE6                     	if	0	;tblptru may be non-zero
  8602  001DE6                     	endif
  8603  001DE6                     	if	0	;tblptru may be non-zero
  8604  001DE6                     	endif
  8605  001DE6  0008               	tblrd		*
  8606  001DE8  50F5               	movf	tablat,w,c
  8607  001DEA  0A20               	xorlw	32
  8608  001DEC  B4D8               	btfsc	status,2,c
  8609  001DEE  EFFB  F00E         	goto	u2501
  8610  001DF2  EFFD  F00E         	goto	u2500
  8611  001DF6                     u2501:
  8612  001DF6  EF1A  F00F         	goto	l3173
  8613  001DFA                     u2500:
  8614  001DFA  0EF7               	movlw	247
  8615  001DFC  6E10               	movwf	??_atoi^0,c
  8616  001DFE  0EFF               	movlw	255
  8617  001E00  6E11               	movwf	(??_atoi+1)^0,c
  8618  001E02  C00E  FFF6         	movff	atoi@s,tblptrl
  8619  001E06  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8620  001E0A                     	if	0	;tblptru may be non-zero
  8621  001E0A                     	endif
  8622  001E0A                     	if	0	;tblptru may be non-zero
  8623  001E0A                     	endif
  8624  001E0A  0008               	tblrd		*
  8625  001E0C  50F5               	movf	tablat,w,c
  8626  001E0E  6E12               	movwf	(??_atoi+2)^0,c
  8627  001E10  6A13               	clrf	(??_atoi+3)^0,c
  8628  001E12  5010               	movf	??_atoi^0,w,c
  8629  001E14  2612               	addwf	(??_atoi+2)^0,f,c
  8630  001E16  5011               	movf	(??_atoi+1)^0,w,c
  8631  001E18  2213               	addwfc	(??_atoi+3)^0,f,c
  8632  001E1A  5013               	movf	(??_atoi+3)^0,w,c
  8633  001E1C  E109               	bnz	u2510
  8634  001E1E  0E05               	movlw	5
  8635  001E20  5C12               	subwf	(??_atoi+2)^0,w,c
  8636  001E22  A0D8               	btfss	status,0,c
  8637  001E24  EF16  F00F         	goto	u2511
  8638  001E28  EF18  F00F         	goto	u2510
  8639  001E2C                     u2511:
  8640  001E2C  EF1A  F00F         	goto	l3173
  8641  001E30                     u2510:
  8642  001E30  0E00               	movlw	0
  8643  001E32  6E1A               	movwf	_atoi$2378^0,c
  8644  001E34                     l3173:
  8645  001E34  C01A  F016         	movff	_atoi$2378,_atoi$2377
  8646  001E38  6A17               	clrf	(_atoi$2377+1)^0,c
  8647  001E3A  5016               	movf	_atoi$2377^0,w,c
  8648  001E3C  1017               	iorwf	(_atoi$2377+1)^0,w,c
  8649  001E3E  A4D8               	btfss	status,2,c
  8650  001E40  EF24  F00F         	goto	u2521
  8651  001E44  EF26  F00F         	goto	u2520
  8652  001E48                     u2521:
  8653  001E48  EFEB  F00E         	goto	l3163
  8654  001E4C                     u2520:
  8655  001E4C  EF30  F00F         	goto	l3183
  8656  001E50                     l3179:
  8657  001E50  0E00               	movlw	0
  8658  001E52  6E15               	movwf	(atoi@neg+1)^0,c
  8659  001E54  0E01               	movlw	1
  8660  001E56  6E14               	movwf	atoi@neg^0,c
  8661  001E58                     l3181:
  8662  001E58  4A0E               	infsnz	atoi@s^0,f,c
  8663  001E5A  2A0F               	incf	(atoi@s+1)^0,f,c
  8664  001E5C  EF65  F00F         	goto	l3189
  8665  001E60                     l3183:
  8666  001E60  C00E  FFF6         	movff	atoi@s,tblptrl
  8667  001E64  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8668  001E68                     	if	0	;tblptru may be non-zero
  8669  001E68                     	endif
  8670  001E68                     	if	0	;tblptru may be non-zero
  8671  001E68                     	endif
  8672  001E68  0008               	tblrd		*
  8673  001E6A  50F5               	movf	tablat,w,c
  8674  001E6C  6E10               	movwf	??_atoi^0,c
  8675  001E6E  6A11               	clrf	(??_atoi+1)^0,c
  8676                           
  8677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8678                           ; Switch size 1, requested type "simple"
  8679                           ; Number of cases is 1, Range of values is 0 to 0
  8680                           ; switch strategies available:
  8681                           ; Name         Instructions Cycles
  8682                           ; simple_byte            4     3 (average)
  8683                           ;	Chosen strategy is simple_byte
  8684  001E70  5011               	movf	(??_atoi+1)^0,w,c
  8685  001E72  0A00               	xorlw	0	; case 0
  8686  001E74  B4D8               	btfsc	status,2,c
  8687  001E76  EF3F  F00F         	goto	l5029
  8688  001E7A  EF65  F00F         	goto	l3189
  8689  001E7E                     l5029:
  8690                           
  8691                           ; Switch size 1, requested type "simple"
  8692                           ; Number of cases is 2, Range of values is 43 to 45
  8693                           ; switch strategies available:
  8694                           ; Name         Instructions Cycles
  8695                           ; simple_byte            7     4 (average)
  8696                           ;	Chosen strategy is simple_byte
  8697  001E7E  5010               	movf	??_atoi^0,w,c
  8698  001E80  0A2B               	xorlw	43	; case 43
  8699  001E82  B4D8               	btfsc	status,2,c
  8700  001E84  EF2C  F00F         	goto	l3181
  8701  001E88  0A06               	xorlw	6	; case 45
  8702  001E8A  B4D8               	btfsc	status,2,c
  8703  001E8C  EF28  F00F         	goto	l3179
  8704  001E90  EF65  F00F         	goto	l3189
  8705  001E94                     l3185:
  8706  001E94  C01B  F007         	movff	atoi@n,___wmul@multiplier
  8707  001E98  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  8708  001E9C  0E00               	movlw	0
  8709  001E9E  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  8710  001EA0  0E0A               	movlw	10
  8711  001EA2  6E09               	movwf	___wmul@multiplicand^0,c
  8712  001EA4  ECE7  F01B         	call	___wmul	;wreg free
  8713  001EA8  C00E  FFF6         	movff	atoi@s,tblptrl
  8714  001EAC  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8715  001EB0                     	if	0	;tblptru may be non-zero
  8716  001EB0                     	endif
  8717  001EB0                     	if	0	;tblptru may be non-zero
  8718  001EB0                     	endif
  8719  001EB0  0008               	tblrd		*
  8720  001EB2  50F5               	movf	tablat,w,c
  8721  001EB4  5E07               	subwf	?___wmul^0,f,c
  8722  001EB6  0E00               	movlw	0
  8723  001EB8  5A08               	subwfb	(?___wmul+1)^0,f,c
  8724  001EBA  0E30               	movlw	48
  8725  001EBC  2407               	addwf	?___wmul^0,w,c
  8726  001EBE  6E1B               	movwf	atoi@n^0,c
  8727  001EC0  0E00               	movlw	0
  8728  001EC2  2008               	addwfc	(?___wmul+1)^0,w,c
  8729  001EC4  6E1C               	movwf	(atoi@n+1)^0,c
  8730  001EC6  EF2C  F00F         	goto	l3181
  8731  001ECA                     l3189:
  8732  001ECA  0ED0               	movlw	208
  8733  001ECC  6E10               	movwf	??_atoi^0,c
  8734  001ECE  0EFF               	movlw	255
  8735  001ED0  6E11               	movwf	(??_atoi+1)^0,c
  8736  001ED2  C00E  FFF6         	movff	atoi@s,tblptrl
  8737  001ED6  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8738  001EDA                     	if	0	;tblptru may be non-zero
  8739  001EDA                     	endif
  8740  001EDA                     	if	0	;tblptru may be non-zero
  8741  001EDA                     	endif
  8742  001EDA  0008               	tblrd		*
  8743  001EDC  50F5               	movf	tablat,w,c
  8744  001EDE  6E12               	movwf	(??_atoi+2)^0,c
  8745  001EE0  6A13               	clrf	(??_atoi+3)^0,c
  8746  001EE2  5010               	movf	??_atoi^0,w,c
  8747  001EE4  2612               	addwf	(??_atoi+2)^0,f,c
  8748  001EE6  5011               	movf	(??_atoi+1)^0,w,c
  8749  001EE8  2213               	addwfc	(??_atoi+3)^0,f,c
  8750  001EEA  5013               	movf	(??_atoi+3)^0,w,c
  8751  001EEC  E10A               	bnz	u2530
  8752  001EEE  0E0A               	movlw	10
  8753  001EF0  5C12               	subwf	(??_atoi+2)^0,w,c
  8754  001EF2  A0D8               	btfss	status,0,c
  8755  001EF4  EF7E  F00F         	goto	u2531
  8756  001EF8  EF81  F00F         	goto	u2530
  8757  001EFC                     u2531:
  8758  001EFC  0E01               	movlw	1
  8759  001EFE  EF82  F00F         	goto	u2540
  8760  001F02                     u2530:
  8761  001F02  0E00               	movlw	0
  8762  001F04                     u2540:
  8763  001F04  6E18               	movwf	_atoi$2379^0,c
  8764  001F06  6A19               	clrf	(_atoi$2379+1)^0,c
  8765  001F08  5018               	movf	_atoi$2379^0,w,c
  8766  001F0A  1019               	iorwf	(_atoi$2379+1)^0,w,c
  8767  001F0C  A4D8               	btfss	status,2,c
  8768  001F0E  EF8B  F00F         	goto	u2551
  8769  001F12  EF8D  F00F         	goto	u2550
  8770  001F16                     u2551:
  8771  001F16  EF4A  F00F         	goto	l3185
  8772  001F1A                     u2550:
  8773  001F1A  5014               	movf	atoi@neg^0,w,c
  8774  001F1C  1015               	iorwf	(atoi@neg+1)^0,w,c
  8775  001F1E  A4D8               	btfss	status,2,c
  8776  001F20  EF94  F00F         	goto	u2561
  8777  001F24  EF96  F00F         	goto	u2560
  8778  001F28                     u2561:
  8779  001F28  EFA4  F00F         	goto	l1279
  8780  001F2C                     u2560:
  8781  001F2C  C01B  F010         	movff	atoi@n,??_atoi
  8782  001F30  C01C  F011         	movff	atoi@n+1,??_atoi+1
  8783  001F34  1E10               	comf	??_atoi^0,f,c
  8784  001F36  1E11               	comf	(??_atoi+1)^0,f,c
  8785  001F38  4A10               	infsnz	??_atoi^0,f,c
  8786  001F3A  2A11               	incf	(??_atoi+1)^0,f,c
  8787  001F3C  C010  F00E         	movff	??_atoi,?_atoi
  8788  001F40  C011  F00F         	movff	??_atoi+1,?_atoi+1
  8789  001F44  EFA8  F00F         	goto	l1282
  8790  001F48                     l1279:
  8791  001F48  C01B  F00E         	movff	atoi@n,?_atoi
  8792  001F4C  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  8793  001F50                     l1282:
  8794  001F50  0012               	return		;funcret
  8795  001F52                     __end_of_atoi:
  8796                           	callstack 0
  8797                           
  8798 ;; *************** function _isspace *****************
  8799 ;; Defined at:
  8800 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  c               2    6[COMRAM] int 
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;		None
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  2    6[COMRAM] int 
  8807 ;; Registers used:
  8808 ;;		wreg, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8814 ;;      Params:         2       0       0       0       0       0       0       0       0
  8815 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8816 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8817 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8818 ;;Total ram usage:        7 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    2
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_atoi
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text51
  8829  003458                     __ptext51:
  8830                           	callstack 0
  8831  003458                     _isspace:
  8832                           	callstack 23
  8833  003458  0E01               	movlw	1
  8834  00345A  6E0D               	movwf	_isspace$2395^0,c
  8835  00345C  0E20               	movlw	32
  8836  00345E  1807               	xorwf	isspace@c^0,w,c
  8837  003460  1008               	iorwf	(isspace@c+1)^0,w,c
  8838  003462  B4D8               	btfsc	status,2,c
  8839  003464  EF36  F01A         	goto	u2331
  8840  003468  EF38  F01A         	goto	u2330
  8841  00346C                     u2331:
  8842  00346C  EF51  F01A         	goto	l3095
  8843  003470                     u2330:
  8844  003470  0EF7               	movlw	247
  8845  003472  6E09               	movwf	??_isspace^0,c
  8846  003474  0EFF               	movlw	255
  8847  003476  6E0A               	movwf	(??_isspace+1)^0,c
  8848  003478  C007  F00B         	movff	isspace@c,??_isspace+2
  8849  00347C  C008  F00C         	movff	isspace@c+1,??_isspace+3
  8850  003480  5009               	movf	??_isspace^0,w,c
  8851  003482  260B               	addwf	(??_isspace+2)^0,f,c
  8852  003484  500A               	movf	(??_isspace+1)^0,w,c
  8853  003486  220C               	addwfc	(??_isspace+3)^0,f,c
  8854  003488  500C               	movf	(??_isspace+3)^0,w,c
  8855  00348A  E109               	bnz	u2340
  8856  00348C  0E05               	movlw	5
  8857  00348E  5C0B               	subwf	(??_isspace+2)^0,w,c
  8858  003490  A0D8               	btfss	status,0,c
  8859  003492  EF4D  F01A         	goto	u2341
  8860  003496  EF4F  F01A         	goto	u2340
  8861  00349A                     u2341:
  8862  00349A  EF51  F01A         	goto	l3095
  8863  00349E                     u2340:
  8864  00349E  0E00               	movlw	0
  8865  0034A0  6E0D               	movwf	_isspace$2395^0,c
  8866  0034A2                     l3095:
  8867  0034A2  C00D  F007         	movff	_isspace$2395,?_isspace
  8868  0034A6  6A08               	clrf	(?_isspace+1)^0,c
  8869  0034A8  0012               	return		;funcret
  8870  0034AA                     __end_of_isspace:
  8871                           	callstack 0
  8872                           
  8873 ;; *************** function _isdigit *****************
  8874 ;; Defined at:
  8875 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  c               2    6[COMRAM] int 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  2    6[COMRAM] int 
  8882 ;; Registers used:
  8883 ;;		wreg, status,2, status,0
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8889 ;;      Params:         2       0       0       0       0       0       0       0       0
  8890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8891 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8892 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8893 ;;Total ram usage:        6 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; Hardware stack levels required when called:    2
  8896 ;; This function calls:
  8897 ;;		Nothing
  8898 ;; This function is called by:
  8899 ;;		_vfpfcnvrt
  8900 ;;		_atoi
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text52
  8905  0036D4                     __ptext52:
  8906                           	callstack 0
  8907  0036D4                     _isdigit:
  8908                           	callstack 24
  8909  0036D4  0ED0               	movlw	208
  8910  0036D6  6E09               	movwf	??_isdigit^0,c
  8911  0036D8  0EFF               	movlw	255
  8912  0036DA  6E0A               	movwf	(??_isdigit+1)^0,c
  8913  0036DC  C007  F00B         	movff	isdigit@c,??_isdigit+2
  8914  0036E0  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  8915  0036E4  5009               	movf	??_isdigit^0,w,c
  8916  0036E6  260B               	addwf	(??_isdigit+2)^0,f,c
  8917  0036E8  500A               	movf	(??_isdigit+1)^0,w,c
  8918  0036EA  220C               	addwfc	(??_isdigit+3)^0,f,c
  8919  0036EC  500C               	movf	(??_isdigit+3)^0,w,c
  8920  0036EE  E10A               	bnz	u2310
  8921  0036F0  0E0A               	movlw	10
  8922  0036F2  5C0B               	subwf	(??_isdigit+2)^0,w,c
  8923  0036F4  A0D8               	btfss	status,0,c
  8924  0036F6  EF7F  F01B         	goto	u2311
  8925  0036FA  EF82  F01B         	goto	u2310
  8926  0036FE                     u2311:
  8927  0036FE  0E01               	movlw	1
  8928  003700  EF83  F01B         	goto	u2320
  8929  003704                     u2310:
  8930  003704  0E00               	movlw	0
  8931  003706                     u2320:
  8932  003706  6E07               	movwf	?_isdigit^0,c
  8933  003708  6A08               	clrf	(?_isdigit+1)^0,c
  8934  00370A  0012               	return		;funcret
  8935  00370C                     __end_of_isdigit:
  8936                           	callstack 0
  8937                           
  8938 ;; *************** function ___wmul *****************
  8939 ;; Defined at:
  8940 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  multiplier      2    6[COMRAM] unsigned int 
  8943 ;;  multiplicand    2    8[COMRAM] unsigned int 
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;  product         2   10[COMRAM] unsigned int 
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  2    6[COMRAM] unsigned int 
  8948 ;; Registers used:
  8949 ;;		wreg, status,2, status,0, prodl, prodh
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8955 ;;      Params:         4       0       0       0       0       0       0       0       0
  8956 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8958 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8959 ;;Total ram usage:        6 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    2
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_appSubGetData
  8966 ;;		_atoi
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text53
  8971  0037CE                     __ptext53:
  8972                           	callstack 0
  8973  0037CE                     ___wmul:
  8974                           	callstack 23
  8975  0037CE  5007               	movf	___wmul@multiplier^0,w,c
  8976  0037D0  0209               	mulwf	___wmul@multiplicand^0,c
  8977  0037D2  CFF3 F00B          	movff	prodl,___wmul@product
  8978  0037D6  CFF4 F00C          	movff	prodh,___wmul@product+1
  8979  0037DA  5007               	movf	___wmul@multiplier^0,w,c
  8980  0037DC  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  8981  0037DE  50F3               	movf	243,w,c
  8982  0037E0  260C               	addwf	(___wmul@product+1)^0,f,c
  8983  0037E2  5008               	movf	(___wmul@multiplier+1)^0,w,c
  8984  0037E4  0209               	mulwf	___wmul@multiplicand^0,c
  8985  0037E6  50F3               	movf	243,w,c
  8986  0037E8  260C               	addwf	(___wmul@product+1)^0,f,c
  8987  0037EA  C00B  F007         	movff	___wmul@product,?___wmul
  8988  0037EE  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  8989  0037F2  0012               	return		;funcret
  8990  0037F4                     __end_of___wmul:
  8991                           	callstack 0
  8992                           
  8993 ;; *************** function _memset *****************
  8994 ;; Defined at:
  8995 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  dest            2    6[COMRAM] PTR void 
  8998 ;;		 -> puerto(16), datos(25), 
  8999 ;;  c               2    8[COMRAM] int 
  9000 ;;  n               2   10[COMRAM] unsigned int 
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;  s               2   16[COMRAM] PTR unsigned char 
  9003 ;;		 -> puerto(16), datos(25), 
  9004 ;;  k               2   14[COMRAM] unsigned int 
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  2    6[COMRAM] PTR void 
  9007 ;; Registers used:
  9008 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9014 ;;      Params:         6       0       0       0       0       0       0       0       0
  9015 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9016 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9017 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9018 ;;Total ram usage:       12 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; Hardware stack levels required when called:    2
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_appADC
  9025 ;;		_appBat
  9026 ;;		_appElemts
  9027 ;;		_appSubGetData
  9028 ;;		_sendinformation
  9029 ;;		_readUART
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text54
  9034  0020DA                     __ptext54:
  9035                           	callstack 0
  9036  0020DA                     _memset:
  9037                           	callstack 27
  9038  0020DA  C007  F011         	movff	memset@dest,memset@s
  9039  0020DE  C008  F012         	movff	memset@dest+1,memset@s+1
  9040  0020E2  500B               	movf	memset@n^0,w,c
  9041  0020E4  100C               	iorwf	(memset@n+1)^0,w,c
  9042  0020E6  A4D8               	btfss	status,2,c
  9043  0020E8  EF78  F010         	goto	u2831
  9044  0020EC  EF7A  F010         	goto	u2830
  9045  0020F0                     u2831:
  9046  0020F0  EF7C  F010         	goto	l3405
  9047  0020F4                     u2830:
  9048  0020F4  EF27  F011         	goto	l1133
  9049  0020F8                     l3405:
  9050  0020F8  C011  FFD9         	movff	memset@s,fsr2l
  9051  0020FC  C012  FFDA         	movff	memset@s+1,fsr2h
  9052  002100  C009  FFDF         	movff	memset@c,indf2
  9053  002104  500B               	movf	memset@n^0,w,c
  9054  002106  2411               	addwf	memset@s^0,w,c
  9055  002108  6E0D               	movwf	??_memset^0,c
  9056  00210A  500C               	movf	(memset@n+1)^0,w,c
  9057  00210C  2012               	addwfc	(memset@s+1)^0,w,c
  9058  00210E  6E0E               	movwf	(??_memset+1)^0,c
  9059  002110  0EFF               	movlw	255
  9060  002112  240D               	addwf	??_memset^0,w,c
  9061  002114  6ED9               	movwf	fsr2l,c
  9062  002116  0EFF               	movlw	255
  9063  002118  200E               	addwfc	(??_memset+1)^0,w,c
  9064  00211A  6EDA               	movwf	fsr2h,c
  9065  00211C  C009  FFDF         	movff	memset@c,indf2
  9066  002120  500C               	movf	(memset@n+1)^0,w,c
  9067  002122  E107               	bnz	u2841
  9068  002124  0E03               	movlw	3
  9069  002126  5C0B               	subwf	memset@n^0,w,c
  9070  002128  B0D8               	btfsc	status,0,c
  9071  00212A  EF99  F010         	goto	u2841
  9072  00212E  EF9B  F010         	goto	u2840
  9073  002132                     u2841:
  9074  002132  EF9D  F010         	goto	l3411
  9075  002136                     u2840:
  9076  002136  EF27  F011         	goto	l1133
  9077  00213A                     l3411:
  9078  00213A  EE20 F001          	lfsr	2,1
  9079  00213E  5011               	movf	memset@s^0,w,c
  9080  002140  26D9               	addwf	fsr2l,f,c
  9081  002142  5012               	movf	(memset@s+1)^0,w,c
  9082  002144  22DA               	addwfc	fsr2h,f,c
  9083  002146  C009  FFDF         	movff	memset@c,indf2
  9084  00214A  EE20 F002          	lfsr	2,2
  9085  00214E  5011               	movf	memset@s^0,w,c
  9086  002150  26D9               	addwf	fsr2l,f,c
  9087  002152  5012               	movf	(memset@s+1)^0,w,c
  9088  002154  22DA               	addwfc	fsr2h,f,c
  9089  002156  C009  FFDF         	movff	memset@c,indf2
  9090  00215A  500B               	movf	memset@n^0,w,c
  9091  00215C  2411               	addwf	memset@s^0,w,c
  9092  00215E  6E0D               	movwf	??_memset^0,c
  9093  002160  500C               	movf	(memset@n+1)^0,w,c
  9094  002162  2012               	addwfc	(memset@s+1)^0,w,c
  9095  002164  6E0E               	movwf	(??_memset+1)^0,c
  9096  002166  0EFE               	movlw	254
  9097  002168  240D               	addwf	??_memset^0,w,c
  9098  00216A  6ED9               	movwf	fsr2l,c
  9099  00216C  0EFF               	movlw	255
  9100  00216E  200E               	addwfc	(??_memset+1)^0,w,c
  9101  002170  6EDA               	movwf	fsr2h,c
  9102  002172  C009  FFDF         	movff	memset@c,indf2
  9103  002176  500B               	movf	memset@n^0,w,c
  9104  002178  2411               	addwf	memset@s^0,w,c
  9105  00217A  6E0D               	movwf	??_memset^0,c
  9106  00217C  500C               	movf	(memset@n+1)^0,w,c
  9107  00217E  2012               	addwfc	(memset@s+1)^0,w,c
  9108  002180  6E0E               	movwf	(??_memset+1)^0,c
  9109  002182  0EFD               	movlw	253
  9110  002184  240D               	addwf	??_memset^0,w,c
  9111  002186  6ED9               	movwf	fsr2l,c
  9112  002188  0EFF               	movlw	255
  9113  00218A  200E               	addwfc	(??_memset+1)^0,w,c
  9114  00218C  6EDA               	movwf	fsr2h,c
  9115  00218E  C009  FFDF         	movff	memset@c,indf2
  9116  002192  500C               	movf	(memset@n+1)^0,w,c
  9117  002194  E107               	bnz	u2851
  9118  002196  0E07               	movlw	7
  9119  002198  5C0B               	subwf	memset@n^0,w,c
  9120  00219A  B0D8               	btfsc	status,0,c
  9121  00219C  EFD2  F010         	goto	u2851
  9122  0021A0  EFD4  F010         	goto	u2850
  9123  0021A4                     u2851:
  9124  0021A4  EFD6  F010         	goto	l3417
  9125  0021A8                     u2850:
  9126  0021A8  EF27  F011         	goto	l1133
  9127  0021AC                     l3417:
  9128  0021AC  EE20 F003          	lfsr	2,3
  9129  0021B0  5011               	movf	memset@s^0,w,c
  9130  0021B2  26D9               	addwf	fsr2l,f,c
  9131  0021B4  5012               	movf	(memset@s+1)^0,w,c
  9132  0021B6  22DA               	addwfc	fsr2h,f,c
  9133  0021B8  C009  FFDF         	movff	memset@c,indf2
  9134  0021BC  500B               	movf	memset@n^0,w,c
  9135  0021BE  2411               	addwf	memset@s^0,w,c
  9136  0021C0  6E0D               	movwf	??_memset^0,c
  9137  0021C2  500C               	movf	(memset@n+1)^0,w,c
  9138  0021C4  2012               	addwfc	(memset@s+1)^0,w,c
  9139  0021C6  6E0E               	movwf	(??_memset+1)^0,c
  9140  0021C8  0EFC               	movlw	252
  9141  0021CA  240D               	addwf	??_memset^0,w,c
  9142  0021CC  6ED9               	movwf	fsr2l,c
  9143  0021CE  0EFF               	movlw	255
  9144  0021D0  200E               	addwfc	(??_memset+1)^0,w,c
  9145  0021D2  6EDA               	movwf	fsr2h,c
  9146  0021D4  C009  FFDF         	movff	memset@c,indf2
  9147  0021D8  500C               	movf	(memset@n+1)^0,w,c
  9148  0021DA  E107               	bnz	u2861
  9149  0021DC  0E09               	movlw	9
  9150  0021DE  5C0B               	subwf	memset@n^0,w,c
  9151  0021E0  B0D8               	btfsc	status,0,c
  9152  0021E2  EFF5  F010         	goto	u2861
  9153  0021E6  EFF7  F010         	goto	u2860
  9154  0021EA                     u2861:
  9155  0021EA  EFF9  F010         	goto	l3423
  9156  0021EE                     u2860:
  9157  0021EE  EF27  F011         	goto	l1133
  9158  0021F2                     l3423:
  9159  0021F2  C011  F00D         	movff	memset@s,??_memset
  9160  0021F6  C012  F00E         	movff	memset@s+1,??_memset+1
  9161  0021FA  1E0D               	comf	??_memset^0,f,c
  9162  0021FC  1E0E               	comf	(??_memset+1)^0,f,c
  9163  0021FE  4A0D               	infsnz	??_memset^0,f,c
  9164  002200  2A0E               	incf	(??_memset+1)^0,f,c
  9165  002202  0E03               	movlw	3
  9166  002204  140D               	andwf	??_memset^0,w,c
  9167  002206  6E0F               	movwf	memset@k^0,c
  9168  002208  6A10               	clrf	(memset@k+1)^0,c
  9169  00220A  500F               	movf	memset@k^0,w,c
  9170  00220C  2611               	addwf	memset@s^0,f,c
  9171  00220E  5010               	movf	(memset@k+1)^0,w,c
  9172  002210  2212               	addwfc	(memset@s+1)^0,f,c
  9173  002212  500F               	movf	memset@k^0,w,c
  9174  002214  5E0B               	subwf	memset@n^0,f,c
  9175  002216  5010               	movf	(memset@k+1)^0,w,c
  9176  002218  5A0C               	subwfb	(memset@n+1)^0,f,c
  9177  00221A  0EFC               	movlw	252
  9178  00221C  160B               	andwf	memset@n^0,f,c
  9179  00221E  0EFF               	movlw	255
  9180  002220  160C               	andwf	(memset@n+1)^0,f,c
  9181  002222  EF1E  F011         	goto	l3431
  9182  002226                     l3425:
  9183  002226  C011  FFD9         	movff	memset@s,fsr2l
  9184  00222A  C012  FFDA         	movff	memset@s+1,fsr2h
  9185  00222E  C009  FFDF         	movff	memset@c,indf2
  9186  002232  060B               	decf	memset@n^0,f,c
  9187  002234  A0D8               	btfss	status,0,c
  9188  002236  060C               	decf	(memset@n+1)^0,f,c
  9189  002238  4A11               	infsnz	memset@s^0,f,c
  9190  00223A  2A12               	incf	(memset@s+1)^0,f,c
  9191  00223C                     l3431:
  9192  00223C  500B               	movf	memset@n^0,w,c
  9193  00223E  100C               	iorwf	(memset@n+1)^0,w,c
  9194  002240  A4D8               	btfss	status,2,c
  9195  002242  EF25  F011         	goto	u2871
  9196  002246  EF27  F011         	goto	u2870
  9197  00224A                     u2871:
  9198  00224A  EF13  F011         	goto	l3425
  9199  00224E                     u2870:
  9200  00224E                     l1133:
  9201  00224E  0012               	return		;funcret
  9202  002250                     __end_of_memset:
  9203                           	callstack 0
  9204                           
  9205 ;; *************** function _Lcd_Out *****************
  9206 ;; Defined at:
  9207 ;;		line 95 in file "flex_lcd.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  y               1    wreg     unsigned char 
  9210 ;;  x               1    9[COMRAM] unsigned char 
  9211 ;;  buffer          2   10[COMRAM] PTR const char 
  9212 ;;		 -> STR_10(13), STR_9(17), STR_8(12), STR_6(14), 
  9213 ;;		 -> STR_4(6), STR_3(12), datos.display(16), datos(25), 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  y               1   14[COMRAM] unsigned char 
  9216 ;;  data            1   15[COMRAM] unsigned char 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      void 
  9219 ;; Registers used:
  9220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9226 ;;      Params:         3       0       0       0       0       0       0       0       0
  9227 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9228 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9229 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9230 ;;Total ram usage:        7 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:    3
  9233 ;; This function calls:
  9234 ;;		_Lcd_Chr_CP
  9235 ;;		_Lcd_Cmd
  9236 ;; This function is called by:
  9237 ;;		_appADC
  9238 ;;		_appBat
  9239 ;;		_appLCD_Init
  9240 ;;		_appElemts
  9241 ;;		_appSubGetData
  9242 ;;		_warning
  9243 ;;		_confirmacion
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text55
  9248  002A22                     __ptext55:
  9249                           	callstack 0
  9250  002A22                     _Lcd_Out:
  9251                           	callstack 26
  9252                           
  9253                           ;incstack = 0
  9254                           ;Lcd_Out@y stored from wreg
  9255  002A22  6E0F               	movwf	Lcd_Out@y^0,c
  9256  002A24                     
  9257                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  9258  002A24  EF28  F015         	goto	l3457
  9259  002A28                     l3447:
  9260                           
  9261                           ;flex_lcd.c: 101:             data = 128 + x;
  9262  002A28  500A               	movf	Lcd_Out@x^0,w,c
  9263  002A2A  0F80               	addlw	128
  9264  002A2C  6E10               	movwf	Lcd_Out@data^0,c
  9265                           
  9266                           ;flex_lcd.c: 102:             break;
  9267  002A2E  EF45  F015         	goto	l3459
  9268  002A32                     l3449:
  9269                           
  9270                           ;flex_lcd.c: 104:             data = 192 + x;
  9271  002A32  500A               	movf	Lcd_Out@x^0,w,c
  9272  002A34  0FC0               	addlw	192
  9273  002A36  6E10               	movwf	Lcd_Out@data^0,c
  9274                           
  9275                           ;flex_lcd.c: 105:             break;
  9276  002A38  EF45  F015         	goto	l3459
  9277  002A3C                     l3451:
  9278                           
  9279                           ;flex_lcd.c: 107:             data = 148 + x;
  9280  002A3C  500A               	movf	Lcd_Out@x^0,w,c
  9281  002A3E  0F94               	addlw	148
  9282  002A40  6E10               	movwf	Lcd_Out@data^0,c
  9283                           
  9284                           ;flex_lcd.c: 108:             break;
  9285  002A42  EF45  F015         	goto	l3459
  9286  002A46                     l3453:
  9287                           
  9288                           ;flex_lcd.c: 110:             data = 212 + x;
  9289  002A46  500A               	movf	Lcd_Out@x^0,w,c
  9290  002A48  0FD4               	addlw	212
  9291  002A4A  6E10               	movwf	Lcd_Out@data^0,c
  9292                           
  9293                           ;flex_lcd.c: 111:             break;
  9294  002A4C  EF45  F015         	goto	l3459
  9295  002A50                     l3457:
  9296  002A50  500F               	movf	Lcd_Out@y^0,w,c
  9297  002A52  6E0D               	movwf	??_Lcd_Out^0,c
  9298  002A54  6A0E               	clrf	(??_Lcd_Out+1)^0,c
  9299                           
  9300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9301                           ; Switch size 1, requested type "simple"
  9302                           ; Number of cases is 1, Range of values is 0 to 0
  9303                           ; switch strategies available:
  9304                           ; Name         Instructions Cycles
  9305                           ; simple_byte            4     3 (average)
  9306                           ;	Chosen strategy is simple_byte
  9307  002A56  500E               	movf	(??_Lcd_Out+1)^0,w,c
  9308  002A58  0A00               	xorlw	0	; case 0
  9309  002A5A  B4D8               	btfsc	status,2,c
  9310  002A5C  EF32  F015         	goto	l5031
  9311  002A60  EF45  F015         	goto	l3459
  9312  002A64                     l5031:
  9313                           
  9314                           ; Switch size 1, requested type "simple"
  9315                           ; Number of cases is 4, Range of values is 1 to 4
  9316                           ; switch strategies available:
  9317                           ; Name         Instructions Cycles
  9318                           ; simple_byte           13     7 (average)
  9319                           ;	Chosen strategy is simple_byte
  9320  002A64  500D               	movf	??_Lcd_Out^0,w,c
  9321  002A66  0A01               	xorlw	1	; case 1
  9322  002A68  B4D8               	btfsc	status,2,c
  9323  002A6A  EF14  F015         	goto	l3447
  9324  002A6E  0A03               	xorlw	3	; case 2
  9325  002A70  B4D8               	btfsc	status,2,c
  9326  002A72  EF19  F015         	goto	l3449
  9327  002A76  0A01               	xorlw	1	; case 3
  9328  002A78  B4D8               	btfsc	status,2,c
  9329  002A7A  EF1E  F015         	goto	l3451
  9330  002A7E  0A07               	xorlw	7	; case 4
  9331  002A80  B4D8               	btfsc	status,2,c
  9332  002A82  EF23  F015         	goto	l3453
  9333  002A86  EF45  F015         	goto	l3459
  9334  002A8A                     l3459:
  9335                           
  9336                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  9337  002A8A  5010               	movf	Lcd_Out@data^0,w,c
  9338  002A8C  EC81  F012         	call	_Lcd_Cmd
  9339                           
  9340                           ;flex_lcd.c: 116:     while(*buffer)
  9341  002A90  EF5E  F015         	goto	l3465
  9342  002A94                     l3461:
  9343                           
  9344                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  9345  002A94  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9346  002A98  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9347  002A9C  6AF8               	clrf	tblptru,c
  9348  002A9E  0E07               	movlw	(high __ramtop+-1)
  9349  002AA0  64F7               	cpfsgt	tblptrh,c
  9350  002AA2  D003               	bra	u2887
  9351  002AA4  0008               	tblrd		*
  9352  002AA6  50F5               	movf	tablat,w,c
  9353  002AA8  D005               	bra	u2880
  9354  002AAA                     u2887:
  9355  002AAA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9356  002AAE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9357  002AB2  50E7               	movf	indf1,w,c
  9358  002AB4                     u2880:
  9359  002AB4  ECDA  F011         	call	_Lcd_Chr_CP
  9360  002AB8                     
  9361                           ;flex_lcd.c: 119:         buffer++;
  9362  002AB8  4A0B               	infsnz	Lcd_Out@buffer^0,f,c
  9363  002ABA  2A0C               	incf	(Lcd_Out@buffer+1)^0,f,c
  9364  002ABC                     l3465:
  9365                           
  9366                           ;flex_lcd.c: 116:     while(*buffer)
  9367  002ABC  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9368  002AC0  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9369  002AC4  6AF8               	clrf	tblptru,c
  9370  002AC6  0E07               	movlw	(high __ramtop+-1)
  9371  002AC8  64F7               	cpfsgt	tblptrh,c
  9372  002ACA  D003               	bra	u2897
  9373  002ACC  0008               	tblrd		*
  9374  002ACE  50F5               	movf	tablat,w,c
  9375  002AD0  D005               	bra	u2890
  9376  002AD2                     u2897:
  9377  002AD2  CFF6 FFE1          	movff	tblptrl,fsr1l
  9378  002AD6  CFF7 FFE2          	movff	tblptrh,fsr1h
  9379  002ADA  50E7               	movf	indf1,w,c
  9380  002ADC                     u2890:
  9381  002ADC  0900               	iorlw	0
  9382  002ADE  A4D8               	btfss	status,2,c
  9383  002AE0  EF74  F015         	goto	u2901
  9384  002AE4  EF76  F015         	goto	u2900
  9385  002AE8                     u2901:
  9386  002AE8  EF4A  F015         	goto	l3461
  9387  002AEC                     u2900:
  9388  002AEC  0012               	return		;funcret
  9389  002AEE                     __end_of_Lcd_Out:
  9390                           	callstack 0
  9391                           
  9392 ;; *************** function _Lcd_Cmd *****************
  9393 ;; Defined at:
  9394 ;;		line 175 in file "flex_lcd.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;  data            1    wreg     unsigned char 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  data            1    8[COMRAM] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1    wreg      void 
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9408 ;;      Params:         0       0       0       0       0       0       0       0       0
  9409 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9410 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9411 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9412 ;;Total ram usage:        3 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:    2
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		_Lcd_Init
  9419 ;;		_Lcd_Out
  9420 ;;		_appLCD_Init
  9421 ;;		_appGetElements
  9422 ;;		_warning
  9423 ;;		_confirmacion
  9424 ;;		_readUART
  9425 ;;		_Lcd_Out2
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text56
  9430  002502                     __ptext56:
  9431                           	callstack 0
  9432  002502                     _Lcd_Cmd:
  9433                           	callstack 26
  9434                           
  9435                           ;incstack = 0
  9436                           ;Lcd_Cmd@data stored from wreg
  9437  002502  6E09               	movwf	Lcd_Cmd@data^0,c
  9438  002504                     
  9439                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  9440  002504  968C               	bcf	140,3,c	;volatile
  9441  002506  948C               	bcf	140,2,c	;volatile
  9442  002508                     
  9443                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9444  002508  6A07               	clrf	??_Lcd_Cmd^0,c
  9445  00250A  AE09               	btfss	Lcd_Cmd@data^0,7,c
  9446  00250C  D001               	bra	u2685
  9447  00250E  2A07               	incf	??_Lcd_Cmd^0,f,c
  9448  002510                     u2685:
  9449  002510  0E01               	movlw	1
  9450  002512  1607               	andwf	??_Lcd_Cmd^0,f,c
  9451  002514  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9452  002516  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9453  002518  508C               	movf	140,w,c	;volatile
  9454  00251A  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9455  00251C  0B7F               	andlw	-129
  9456  00251E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9457  002520  6E8C               	movwf	140,c	;volatile
  9458                           
  9459                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9460  002522  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9461  002526  0E06               	movlw	6
  9462  002528  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9463  00252A                     u2695:
  9464  00252A  90D8               	bcf	status,0,c
  9465  00252C  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9466  00252E  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9467  002530  EF95  F012         	goto	u2695
  9468  002534  0E01               	movlw	1
  9469  002536  1607               	andwf	??_Lcd_Cmd^0,f,c
  9470  002538  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9471  00253A  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9472  00253C  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9473  00253E  508C               	movf	140,w,c	;volatile
  9474  002540  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9475  002542  0BBF               	andlw	-65
  9476  002544  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9477  002546  6E8C               	movwf	140,c	;volatile
  9478                           
  9479                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9480  002548  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9481  00254C  0E05               	movlw	5
  9482  00254E  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9483  002550                     u2705:
  9484  002550  90D8               	bcf	status,0,c
  9485  002552  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9486  002554  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9487  002556  EFA8  F012         	goto	u2705
  9488  00255A  0E01               	movlw	1
  9489  00255C  1607               	andwf	??_Lcd_Cmd^0,f,c
  9490  00255E  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9491  002560  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9492  002562  508C               	movf	140,w,c	;volatile
  9493  002564  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9494  002566  0BDF               	andlw	-33
  9495  002568  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9496  00256A  6E8C               	movwf	140,c	;volatile
  9497                           
  9498                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9499  00256C  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9500  002570  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9501  002572  0E0F               	movlw	15
  9502  002574  1607               	andwf	??_Lcd_Cmd^0,f,c
  9503  002576  0E01               	movlw	1
  9504  002578  1607               	andwf	??_Lcd_Cmd^0,f,c
  9505  00257A  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9506  00257C  508C               	movf	140,w,c	;volatile
  9507  00257E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9508  002580  0BEF               	andlw	-17
  9509  002582  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9510  002584  6E8C               	movwf	140,c	;volatile
  9511  002586                     
  9512                           ;flex_lcd.c: 182:     _delay(10);
  9513  002586  0E03               	movlw	3
  9514  002588                     u4667:
  9515  002588  2EE8               	decfsz	wreg,f,c
  9516  00258A  D7FE               	bra	u4667
  9517  00258C  F000               	nop	
  9518  00258E                     
  9519                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  9520  00258E  868C               	bsf	140,3,c	;volatile
  9521  002590                     
  9522                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9523  002590  0E05               	movlw	5
  9524  002592                     u4677:
  9525  002592  2EE8               	decfsz	wreg,f,c
  9526  002594  D7FE               	bra	u4677
  9527  002596                     
  9528                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  9529  002596  968C               	bcf	140,3,c	;volatile
  9530                           
  9531                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9532  002598  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9533  00259C  90D8               	bcf	status,0,c
  9534  00259E  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9535  0025A0  90D8               	bcf	status,0,c
  9536  0025A2  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9537  0025A4  90D8               	bcf	status,0,c
  9538  0025A6  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9539  0025A8  0E01               	movlw	1
  9540  0025AA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9541  0025AC  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9542  0025AE  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9543  0025B0  508C               	movf	140,w,c	;volatile
  9544  0025B2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9545  0025B4  0B7F               	andlw	-129
  9546  0025B6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9547  0025B8  6E8C               	movwf	140,c	;volatile
  9548                           
  9549                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9550  0025BA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9551  0025BE  90D8               	bcf	status,0,c
  9552  0025C0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9553  0025C2  90D8               	bcf	status,0,c
  9554  0025C4  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9555  0025C6  0E01               	movlw	1
  9556  0025C8  1607               	andwf	??_Lcd_Cmd^0,f,c
  9557  0025CA  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9558  0025CC  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9559  0025CE  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9560  0025D0  508C               	movf	140,w,c	;volatile
  9561  0025D2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9562  0025D4  0BBF               	andlw	-65
  9563  0025D6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9564  0025D8  6E8C               	movwf	140,c	;volatile
  9565                           
  9566                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9567  0025DA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9568  0025DE  90D8               	bcf	status,0,c
  9569  0025E0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9570  0025E2  0E01               	movlw	1
  9571  0025E4  1607               	andwf	??_Lcd_Cmd^0,f,c
  9572  0025E6  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9573  0025E8  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9574  0025EA  508C               	movf	140,w,c	;volatile
  9575  0025EC  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9576  0025EE  0BDF               	andlw	-33
  9577  0025F0  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9578  0025F2  6E8C               	movwf	140,c	;volatile
  9579                           
  9580                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  9581  0025F4  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9582  0025F8  0E01               	movlw	1
  9583  0025FA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9584  0025FC  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9585  0025FE  508C               	movf	140,w,c	;volatile
  9586  002600  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9587  002602  0BEF               	andlw	-17
  9588  002604  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9589  002606  6E8C               	movwf	140,c	;volatile
  9590  002608                     
  9591                           ;flex_lcd.c: 190:     _delay(10);
  9592  002608  0E03               	movlw	3
  9593  00260A                     u4687:
  9594  00260A  2EE8               	decfsz	wreg,f,c
  9595  00260C  D7FE               	bra	u4687
  9596  00260E  F000               	nop	
  9597  002610                     
  9598                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  9599  002610  868C               	bsf	140,3,c	;volatile
  9600  002612                     
  9601                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9602  002612  0E05               	movlw	5
  9603  002614                     u4697:
  9604  002614  2EE8               	decfsz	wreg,f,c
  9605  002616  D7FE               	bra	u4697
  9606  002618                     
  9607                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  9608  002618  968C               	bcf	140,3,c	;volatile
  9609  00261A                     
  9610                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9611  00261A  0E16               	movlw	22
  9612  00261C  6E07               	movwf	??_Lcd_Cmd^0,c
  9613  00261E  0E6C               	movlw	108
  9614  002620                     u4707:
  9615  002620  2EE8               	decfsz	wreg,f,c
  9616  002622  D7FE               	bra	u4707
  9617  002624  2E07               	decfsz	??_Lcd_Cmd^0,f,c
  9618  002626  D7FC               	bra	u4707
  9619  002628  D000               	nop2	
  9620  00262A  0012               	return		;funcret
  9621  00262C                     __end_of_Lcd_Cmd:
  9622                           	callstack 0
  9623                           
  9624 ;; *************** function _Lcd_Chr_CP *****************
  9625 ;; Defined at:
  9626 ;;		line 151 in file "flex_lcd.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;  data            1    wreg     char 
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;  data            1    8[COMRAM] char 
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  1    wreg      void 
  9633 ;; Registers used:
  9634 ;;		wreg, status,2, status,0
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9640 ;;      Params:         0       0       0       0       0       0       0       0       0
  9641 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9642 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9643 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9644 ;;Total ram usage:        3 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:    2
  9647 ;; This function calls:
  9648 ;;		Nothing
  9649 ;; This function is called by:
  9650 ;;		_Lcd_Out
  9651 ;;		_Lcd_Out2
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text57
  9656  0023B4                     __ptext57:
  9657                           	callstack 0
  9658  0023B4                     _Lcd_Chr_CP:
  9659                           	callstack 26
  9660                           
  9661                           ;incstack = 0
  9662                           ;Lcd_Chr_CP@data stored from wreg
  9663  0023B4  6E09               	movwf	Lcd_Chr_CP@data^0,c
  9664  0023B6                     
  9665                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  9666  0023B6  968C               	bcf	140,3,c	;volatile
  9667                           
  9668                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  9669  0023B8  848C               	bsf	140,2,c	;volatile
  9670  0023BA                     
  9671                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9672  0023BA  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9673  0023BE  0E07               	movlw	7
  9674  0023C0  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9675  0023C2                     u2715:
  9676  0023C2  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9677  0023C4  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9678  0023C6  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9679  0023C8  EFE1  F011         	goto	u2715
  9680  0023CC  0E01               	movlw	1
  9681  0023CE  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9682  0023D0  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9683  0023D2  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9684  0023D4  508C               	movf	140,w,c	;volatile
  9685  0023D6  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9686  0023D8  0B7F               	andlw	-129
  9687  0023DA  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9688  0023DC  6E8C               	movwf	140,c	;volatile
  9689                           
  9690                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9691  0023DE  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9692  0023E2  0E06               	movlw	6
  9693  0023E4  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9694  0023E6                     u2725:
  9695  0023E6  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9696  0023E8  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9697  0023EA  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9698  0023EC  EFF3  F011         	goto	u2725
  9699  0023F0  0E01               	movlw	1
  9700  0023F2  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9701  0023F4  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9702  0023F6  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9703  0023F8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9704  0023FA  508C               	movf	140,w,c	;volatile
  9705  0023FC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9706  0023FE  0BBF               	andlw	-65
  9707  002400  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9708  002402  6E8C               	movwf	140,c	;volatile
  9709                           
  9710                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9711  002404  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9712  002408  0E05               	movlw	5
  9713  00240A  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9714  00240C                     u2735:
  9715  00240C  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9716  00240E  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9717  002410  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9718  002412  EF06  F012         	goto	u2735
  9719  002416  0E01               	movlw	1
  9720  002418  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9721  00241A  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9722  00241C  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9723  00241E  508C               	movf	140,w,c	;volatile
  9724  002420  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9725  002422  0BDF               	andlw	-33
  9726  002424  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9727  002426  6E8C               	movwf	140,c	;volatile
  9728                           
  9729                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9730  002428  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9731  00242C  0E04               	movlw	4
  9732  00242E  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9733  002430                     u2745:
  9734  002430  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9735  002432  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9736  002434  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9737  002436  EF18  F012         	goto	u2745
  9738  00243A  0E01               	movlw	1
  9739  00243C  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9740  00243E  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9741  002440  508C               	movf	140,w,c	;volatile
  9742  002442  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9743  002444  0BEF               	andlw	-17
  9744  002446  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9745  002448  6E8C               	movwf	140,c	;volatile
  9746  00244A                     
  9747                           ;flex_lcd.c: 159:     _delay(10);
  9748  00244A  0E03               	movlw	3
  9749  00244C                     u4717:
  9750  00244C  2EE8               	decfsz	wreg,f,c
  9751  00244E  D7FE               	bra	u4717
  9752  002450  F000               	nop	
  9753  002452                     
  9754                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  9755  002452  868C               	bsf	140,3,c	;volatile
  9756  002454                     
  9757                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9758  002454  0E05               	movlw	5
  9759  002456                     u4727:
  9760  002456  2EE8               	decfsz	wreg,f,c
  9761  002458  D7FE               	bra	u4727
  9762  00245A                     
  9763                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  9764  00245A  968C               	bcf	140,3,c	;volatile
  9765                           
  9766                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9767  00245C  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9768  002460  0E03               	movlw	3
  9769  002462  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9770  002464                     u2755:
  9771  002464  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9772  002466  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9773  002468  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9774  00246A  EF32  F012         	goto	u2755
  9775  00246E  0E01               	movlw	1
  9776  002470  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9777  002472  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9778  002474  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9779  002476  508C               	movf	140,w,c	;volatile
  9780  002478  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9781  00247A  0B7F               	andlw	-129
  9782  00247C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9783  00247E  6E8C               	movwf	140,c	;volatile
  9784                           
  9785                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9786  002480  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9787  002484  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9788  002486  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9789  002488  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9790  00248A  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9791  00248C  0E01               	movlw	1
  9792  00248E  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9793  002490  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9794  002492  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9795  002494  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9796  002496  508C               	movf	140,w,c	;volatile
  9797  002498  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9798  00249A  0BBF               	andlw	-65
  9799  00249C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9800  00249E  6E8C               	movwf	140,c	;volatile
  9801                           
  9802                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9803  0024A0  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9804  0024A4  0E01               	movlw	1
  9805  0024A6  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9806  0024A8                     u2765:
  9807  0024A8  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9808  0024AA  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9809  0024AC  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9810  0024AE  EF54  F012         	goto	u2765
  9811  0024B2  0E01               	movlw	1
  9812  0024B4  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9813  0024B6  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9814  0024B8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9815  0024BA  508C               	movf	140,w,c	;volatile
  9816  0024BC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9817  0024BE  0BDF               	andlw	-33
  9818  0024C0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9819  0024C2  6E8C               	movwf	140,c	;volatile
  9820                           
  9821                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  9822  0024C4  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9823  0024C8  0E01               	movlw	1
  9824  0024CA  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9825  0024CC  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9826  0024CE  508C               	movf	140,w,c	;volatile
  9827  0024D0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9828  0024D2  0BEF               	andlw	-17
  9829  0024D4  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9830  0024D6  6E8C               	movwf	140,c	;volatile
  9831  0024D8                     
  9832                           ;flex_lcd.c: 167:     _delay(10);
  9833  0024D8  0E03               	movlw	3
  9834  0024DA                     u4737:
  9835  0024DA  2EE8               	decfsz	wreg,f,c
  9836  0024DC  D7FE               	bra	u4737
  9837  0024DE  F000               	nop	
  9838  0024E0                     
  9839                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  9840  0024E0  868C               	bsf	140,3,c	;volatile
  9841  0024E2                     
  9842                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9843  0024E2  0E05               	movlw	5
  9844  0024E4                     u4747:
  9845  0024E4  2EE8               	decfsz	wreg,f,c
  9846  0024E6  D7FE               	bra	u4747
  9847  0024E8                     
  9848                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  9849  0024E8  968C               	bcf	140,3,c	;volatile
  9850  0024EA                     
  9851                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9852  0024EA  0E05               	movlw	5
  9853  0024EC                     u4757:
  9854  0024EC  2EE8               	decfsz	wreg,f,c
  9855  0024EE  D7FE               	bra	u4757
  9856  0024F0                     
  9857                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9858  0024F0  0E16               	movlw	22
  9859  0024F2  6E07               	movwf	??_Lcd_Chr_CP^0,c
  9860  0024F4  0E6C               	movlw	108
  9861  0024F6                     u4767:
  9862  0024F6  2EE8               	decfsz	wreg,f,c
  9863  0024F8  D7FE               	bra	u4767
  9864  0024FA  2E07               	decfsz	??_Lcd_Chr_CP^0,f,c
  9865  0024FC  D7FC               	bra	u4767
  9866  0024FE  D000               	nop2	
  9867  002500  0012               	return		;funcret
  9868  002502                     __end_of_Lcd_Chr_CP:
  9869                           	callstack 0
  9870                           
  9871 ;; *************** function _isrL *****************
  9872 ;; Defined at:
  9873 ;;		line 27 in file "main.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9887 ;;      Params:         0       0       0       0       0       0       0       0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9889 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9890 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9891 ;;Total ram usage:        3 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    1
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		Interrupt level 1
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	intcodelo
  9902  000018                     __pintcodelo:
  9903                           	callstack 0
  9904  000018                     _isrL:
  9905                           	callstack 19
  9906                           
  9907                           ;incstack = 0
  9908  000018  8059               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9909  00001A  CFD8 F004          	movff	status,??_isrL
  9910  00001E  CFE8 F005          	movff	wreg,??_isrL+1
  9911  000022  CFE0 F006          	movff	bsr,??_isrL+2
  9912  000026                     
  9913                           ;main.c: 29:     static uint16_t bloqueo = 0;;main.c: 30:     static uint8_t tTimerCount
      +                          er = 0;;main.c: 31:     if(TMR3IE && TMR3IF)
  9914  000026  A2A0               	btfss	4000,1,c	;volatile
  9915  000028  EF18  F000         	goto	i1u437_21
  9916  00002C  EF1A  F000         	goto	i1u437_20
  9917  000030                     i1u437_21:
  9918  000030  EF70  F000         	goto	i1l105
  9919  000034                     i1u437_20:
  9920  000034  A2A1               	btfss	4001,1,c	;volatile
  9921  000036  EF1F  F000         	goto	i1u438_21
  9922  00003A  EF21  F000         	goto	i1u438_20
  9923  00003E                     i1u438_21:
  9924  00003E  EF70  F000         	goto	i1l105
  9925  000042                     i1u438_20:
  9926  000042                     
  9927                           ;main.c: 32:     {;main.c: 34:         tTimerCounter++;
  9928  000042  2A58               	incf	isrL@tTimerCounter^0,f,c
  9929                           
  9930                           ;main.c: 35:         bloqueo++;
  9931  000044  0100               	movlb	0	; () banked
  9932  000046  4B64               	infsnz	isrL@bloqueo& (0+255),f,b
  9933  000048  2B65               	incf	(isrL@bloqueo+1)& (0+255),f,b
  9934  00004A                     
  9935                           ; BSR set to: 0
  9936                           ;main.c: 36:         if((tTimerCounter == 2) && (datos.state == 0 || datos.state == 2))
  9937  00004A  0E02               	movlw	2
  9938  00004C  1858               	xorwf	isrL@tTimerCounter^0,w,c
  9939  00004E  A4D8               	btfss	status,2,c
  9940  000050  EF2C  F000         	goto	i1u439_21
  9941  000054  EF2E  F000         	goto	i1u439_20
  9942  000058                     i1u439_21:
  9943  000058  EF47  F000         	goto	i1l4855
  9944  00005C                     i1u439_20:
  9945  00005C                     
  9946                           ; BSR set to: 0
  9947  00005C  51C5               	movf	(_datos+3)& (0+255),w,b
  9948  00005E  B4D8               	btfsc	status,2,c
  9949  000060  EF34  F000         	goto	i1u440_21
  9950  000064  EF36  F000         	goto	i1u440_20
  9951  000068                     i1u440_21:
  9952  000068  EF3F  F000         	goto	i1l4851
  9953  00006C                     i1u440_20:
  9954  00006C                     
  9955                           ; BSR set to: 0
  9956  00006C  0E02               	movlw	2
  9957  00006E  19C5               	xorwf	(_datos+3)& (0+255),w,b
  9958  000070  A4D8               	btfss	status,2,c
  9959  000072  EF3D  F000         	goto	i1u441_21
  9960  000076  EF3F  F000         	goto	i1u441_20
  9961  00007A                     i1u441_21:
  9962  00007A  EF47  F000         	goto	i1l4855
  9963  00007E                     i1u441_20:
  9964  00007E                     i1l4851:
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;main.c: 37:         {;main.c: 38:             tTimerCounter = 0;
  9968  00007E  0E00               	movlw	0
  9969  000080  6E58               	movwf	isrL@tTimerCounter^0,c
  9970  000082                     
  9971                           ; BSR set to: 0
  9972                           ;main.c: 39:             datos.nextFunc = appStateRecolectData;
  9973  000082  0E8E               	movlw	low _appStateRecolectData
  9974  000084  6FD9               	movwf	(_datos+23)& (0+255),b
  9975  000086  0E30               	movlw	high _appStateRecolectData
  9976  000088  6FDA               	movwf	(_datos+24)& (0+255),b
  9977                           
  9978                           ;main.c: 40:         }
  9979  00008A  EF6B  F000         	goto	i1l4865
  9980  00008E                     i1l4855:
  9981                           
  9982                           ; BSR set to: 0
  9983  00008E  0EE8               	movlw	232
  9984  000090  1964               	xorwf	isrL@bloqueo& (0+255),w,b
  9985  000092  E107               	bnz	i1u442_21
  9986  000094  0E03               	movlw	3
  9987  000096  1965               	xorwf	(isrL@bloqueo+1)& (0+255),w,b
  9988  000098  A4D8               	btfss	status,2,c
  9989  00009A  EF51  F000         	goto	i1u442_21
  9990  00009E  EF53  F000         	goto	i1u442_20
  9991  0000A2                     i1u442_21:
  9992  0000A2  EF5F  F000         	goto	i1l4861
  9993  0000A6                     i1u442_20:
  9994  0000A6                     
  9995                           ; BSR set to: 0
  9996                           ;main.c: 42:         {;main.c: 43:             bloqueo = 0;
  9997  0000A6  0E00               	movlw	0
  9998  0000A8  6F65               	movwf	(isrL@bloqueo+1)& (0+255),b
  9999  0000AA  0E00               	movlw	0
 10000  0000AC  6F64               	movwf	isrL@bloqueo& (0+255),b
 10001                           
 10002                           ;main.c: 44:             datos.state = 8;
 10003  0000AE  0E08               	movlw	8
 10004  0000B0  6FC5               	movwf	(_datos+3)& (0+255),b
 10005  0000B2                     
 10006                           ; BSR set to: 0
 10007                           ;main.c: 45:             datos.nextFunc = confirmacion;
 10008  0000B2  0EF4               	movlw	low _confirmacion
 10009  0000B4  6FD9               	movwf	(_datos+23)& (0+255),b
 10010  0000B6  0E34               	movlw	high _confirmacion
 10011  0000B8  6FDA               	movwf	(_datos+24)& (0+255),b
 10012                           
 10013                           ;main.c: 46:         }
 10014  0000BA  EF6B  F000         	goto	i1l4865
 10015  0000BE                     i1l4861:
 10016                           
 10017                           ; BSR set to: 0
 10018  0000BE  05C5               	decf	(_datos+3)& (0+255),w,b
 10019  0000C0  A4D8               	btfss	status,2,c
 10020  0000C2  EF65  F000         	goto	i1u443_21
 10021  0000C6  EF67  F000         	goto	i1u443_20
 10022  0000CA                     i1u443_21:
 10023  0000CA  EF6B  F000         	goto	i1l4865
 10024  0000CE                     i1u443_20:
 10025  0000CE                     
 10026                           ; BSR set to: 0
 10027                           ;main.c: 48:         {;main.c: 49:             datos.nextFunc = appGetElements;
 10028  0000CE  0EA6               	movlw	low _appGetElements
 10029  0000D0  6FD9               	movwf	(_datos+23)& (0+255),b
 10030  0000D2  0E31               	movlw	high _appGetElements
 10031  0000D4  6FDA               	movwf	(_datos+24)& (0+255),b
 10032  0000D6                     i1l4865:
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;main.c: 51:         TMR3 = 20536;
 10036  0000D6  0E50               	movlw	80
 10037  0000D8  6EB3               	movwf	179,c	;volatile
 10038  0000DA  0E38               	movlw	56
 10039  0000DC  6EB2               	movwf	178,c	;volatile
 10040  0000DE                     
 10041                           ; BSR set to: 0
 10042                           ;main.c: 52:         TMR3IF = 0;
 10043  0000DE  92A1               	bcf	4001,1,c	;volatile
 10044  0000E0                     i1l105:
 10045  0000E0  C006  FFE0         	movff	??_isrL+2,bsr
 10046  0000E4  C005  FFE8         	movff	??_isrL+1,wreg
 10047  0000E8  C004  FFD8         	movff	??_isrL,status
 10048  0000EC  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10049  0000EE  0010               	retfie	
 10050  0000F0                     __end_of_isrL:
 10051                           	callstack 0
 10052                           
 10053 ;; *************** function _isrH *****************
 10054 ;; Defined at:
 10055 ;;		line 56 in file "main.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;		None
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10069 ;;      Params:         0       0       0       0       0       0       0       0       0
 10070 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10071 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10072 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10073 ;;Total ram usage:        3 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; This function calls:
 10076 ;;		Nothing
 10077 ;; This function is called by:
 10078 ;;		Interrupt level 2
 10079 ;; This function uses a non-reentrant model
 10080 ;;
 10081                           
 10082                           	psect	intcode
 10083  000008                     __pintcode:
 10084                           	callstack 0
 10085  000008                     _isrH:
 10086                           	callstack 19
 10087                           
 10088                           ;incstack = 0
 10089  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10090  00000A  EDA6  F017         	call	int_func,f	;refresh shadow registers
 10091  00000E                     
 10092                           	psect	intcode_body
 10093  002F4C                     __pintcode_body:
 10094                           	callstack 19
 10095  002F4C                     int_func:
 10096                           	callstack 19
 10097  002F4C  0006               	pop		; remove dummy address from shadow register refresh
 10098  002F4E  CFD9 F002          	movff	fsr2l,??_isrH+1
 10099  002F52  CFDA F003          	movff	fsr2h,??_isrH+2
 10100  002F56                     
 10101                           ;main.c: 58:     static uint8_t counter = 0;;main.c: 59:     if(TMR0IE && TMR0IF)
 10102  002F56  AAF2               	btfss	4082,5,c	;volatile
 10103  002F58  EFB0  F017         	goto	i2u444_41
 10104  002F5C  EFB2  F017         	goto	i2u444_40
 10105  002F60                     i2u444_41:
 10106  002F60  EFC1  F017         	goto	i2l4879
 10107  002F64                     i2u444_40:
 10108  002F64  A4F2               	btfss	4082,2,c	;volatile
 10109  002F66  EFB7  F017         	goto	i2u445_41
 10110  002F6A  EFB9  F017         	goto	i2u445_40
 10111  002F6E                     i2u445_41:
 10112  002F6E  EFC1  F017         	goto	i2l4879
 10113  002F72                     i2u445_40:
 10114  002F72                     
 10115                           ;main.c: 60:     {;main.c: 61:         TMR0IF = 0;
 10116  002F72  94F2               	bcf	4082,2,c	;volatile
 10117  002F74                     
 10118                           ;main.c: 62:         datos.state = 10;
 10119  002F74  0E0A               	movlw	10
 10120  002F76  0100               	movlb	0	; () banked
 10121  002F78  6FC5               	movwf	(_datos+3)& (0+255),b
 10122  002F7A                     
 10123                           ; BSR set to: 0
 10124                           ;main.c: 63:         datos.nextFunc = warning;
 10125  002F7A  0E16               	movlw	low _warning
 10126  002F7C  6FD9               	movwf	(_datos+23)& (0+255),b
 10127  002F7E  0E32               	movlw	high _warning
 10128  002F80  6FDA               	movwf	(_datos+24)& (0+255),b
 10129  002F82                     i2l4879:
 10130                           
 10131                           ;main.c: 65:     if(RCIF && RCIE)
 10132  002F82  AA9E               	btfss	3998,5,c	;volatile
 10133  002F84  EFC6  F017         	goto	i2u446_41
 10134  002F88  EFC8  F017         	goto	i2u446_40
 10135  002F8C                     i2u446_41:
 10136  002F8C  EFF2  F017         	goto	i2l116
 10137  002F90                     i2u446_40:
 10138  002F90  AA9D               	btfss	3997,5,c	;volatile
 10139  002F92  EFCD  F017         	goto	i2u447_41
 10140  002F96  EFCF  F017         	goto	i2u447_40
 10141  002F9A                     i2u447_41:
 10142  002F9A  EFF2  F017         	goto	i2l116
 10143  002F9E                     i2u447_40:
 10144  002F9E                     
 10145                           ;main.c: 66:     {;main.c: 67:         puerto[counter] = RCREG;
 10146  002F9E  0E86               	movlw	low _puerto
 10147  002FA0  2457               	addwf	isrH@counter^0,w,c
 10148  002FA2  6ED9               	movwf	fsr2l,c
 10149  002FA4  6ADA               	clrf	fsr2h,c
 10150  002FA6  0E00               	movlw	high _puerto
 10151  002FA8  22DA               	addwfc	fsr2h,f,c
 10152  002FAA  CFAE FFDF          	movff	4014,indf2	;volatile
 10153                           
 10154                           ;main.c: 68:         if(puerto[counter] != '@')
 10155  002FAE  0E86               	movlw	low _puerto
 10156  002FB0  2457               	addwf	isrH@counter^0,w,c
 10157  002FB2  6ED9               	movwf	fsr2l,c
 10158  002FB4  6ADA               	clrf	fsr2h,c
 10159  002FB6  0E00               	movlw	high _puerto
 10160  002FB8  22DA               	addwfc	fsr2h,f,c
 10161  002FBA  0E40               	movlw	64
 10162  002FBC  18DE               	xorwf	postinc2,w,c
 10163  002FBE  B4D8               	btfsc	status,2,c
 10164  002FC0  EFE4  F017         	goto	i2u448_41
 10165  002FC4  EFE6  F017         	goto	i2u448_40
 10166  002FC8                     i2u448_41:
 10167  002FC8  EFE9  F017         	goto	i2l4887
 10168  002FCC                     i2u448_40:
 10169  002FCC                     
 10170                           ;main.c: 69:         {;main.c: 70:             counter ++;
 10171  002FCC  2A57               	incf	isrH@counter^0,f,c
 10172                           
 10173                           ;main.c: 71:         }
 10174  002FCE  EFF2  F017         	goto	i2l116
 10175  002FD2                     i2l4887:
 10176                           
 10177                           ;main.c: 73:         {;main.c: 74:             datos.state = 4;
 10178  002FD2  0E04               	movlw	4
 10179  002FD4  0100               	movlb	0	; () banked
 10180  002FD6  6FC5               	movwf	(_datos+3)& (0+255),b
 10181  002FD8                     
 10182                           ; BSR set to: 0
 10183                           ;main.c: 75:             datos.nextFunc = readUART;
 10184  002FD8  0E4E               	movlw	low _readUART
 10185  002FDA  6FD9               	movwf	(_datos+23)& (0+255),b
 10186  002FDC  0E29               	movlw	high _readUART
 10187  002FDE  6FDA               	movwf	(_datos+24)& (0+255),b
 10188  002FE0                     
 10189                           ; BSR set to: 0
 10190                           ;main.c: 76:             counter = 0;
 10191  002FE0  0E00               	movlw	0
 10192  002FE2  6E57               	movwf	isrH@counter^0,c
 10193  002FE4                     i2l116:
 10194  002FE4  C003  FFDA         	movff	??_isrH+2,fsr2h
 10195  002FE8  C002  FFD9         	movff	??_isrH+1,fsr2l
 10196  002FEC  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10197  002FEE  0011               	retfie		f
 10198  002FF0                     __end_of_isrH:
 10199                           	callstack 0
 10200                           
 10201                           	psect	rparam
 10202  0000                     
 10203                           	psect	temp
 10204  000059                     btemp:
 10205                           	callstack 0
 10206  000059                     	ds	1
 10207  0000                     int$flags	set	btemp
 10208  0000                     wtemp8	set	btemp+1
 10209  0000                     ttemp5	set	btemp+1
 10210  0000                     ttemp6	set	btemp+4
 10211  0000                     ttemp7	set	btemp+8
 10212                           
 10213                           	psect	idloc
 10214                           
 10215                           ;Config register IDLOC0 @ 0x200000
 10216                           ;	unspecified, using default values
 10217  200000                     	org	2097152
 10218  200000  FF                 	db	255
 10219                           
 10220                           ;Config register IDLOC1 @ 0x200001
 10221                           ;	unspecified, using default values
 10222  200001                     	org	2097153
 10223  200001  FF                 	db	255
 10224                           
 10225                           ;Config register IDLOC2 @ 0x200002
 10226                           ;	unspecified, using default values
 10227  200002                     	org	2097154
 10228  200002  FF                 	db	255
 10229                           
 10230                           ;Config register IDLOC3 @ 0x200003
 10231                           ;	unspecified, using default values
 10232  200003                     	org	2097155
 10233  200003  FF                 	db	255
 10234                           
 10235                           ;Config register IDLOC4 @ 0x200004
 10236                           ;	unspecified, using default values
 10237  200004                     	org	2097156
 10238  200004  FF                 	db	255
 10239                           
 10240                           ;Config register IDLOC5 @ 0x200005
 10241                           ;	unspecified, using default values
 10242  200005                     	org	2097157
 10243  200005  FF                 	db	255
 10244                           
 10245                           ;Config register IDLOC6 @ 0x200006
 10246                           ;	unspecified, using default values
 10247  200006                     	org	2097158
 10248  200006  FF                 	db	255
 10249                           
 10250                           ;Config register IDLOC7 @ 0x200007
 10251                           ;	unspecified, using default values
 10252  200007                     	org	2097159
 10253  200007  FF                 	db	255
 10254                           
 10255                           	psect	config
 10256                           
 10257                           ;Config register CONFIG1L @ 0x300000
 10258                           ;	PLL Prescaler Selection bits
 10259                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10260                           ;	System Clock Postscaler Selection bits
 10261                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10262                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10263                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10264  300000                     	org	3145728
 10265  300000  00                 	db	0
 10266                           
 10267                           ;Config register CONFIG1H @ 0x300001
 10268                           ;	Oscillator Selection bits
 10269                           ;	FOSC = HS, HS oscillator (HS)
 10270                           ;	Fail-Safe Clock Monitor Enable bit
 10271                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10272                           ;	Internal/External Oscillator Switchover bit
 10273                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10274  300001                     	org	3145729
 10275  300001  0C                 	db	12
 10276                           
 10277                           ;Config register CONFIG2L @ 0x300002
 10278                           ;	Power-up Timer Enable bit
 10279                           ;	PWRT = OFF, PWRT disabled
 10280                           ;	Brown-out Reset Enable bits
 10281                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10282                           ;	Brown-out Reset Voltage bits
 10283                           ;	BORV = 3, Minimum setting 2.05V
 10284                           ;	USB Voltage Regulator Enable bit
 10285                           ;	VREGEN = OFF, USB voltage regulator disabled
 10286  300002                     	org	3145730
 10287  300002  19                 	db	25
 10288                           
 10289                           ;Config register CONFIG2H @ 0x300003
 10290                           ;	Watchdog Timer Enable bit
 10291                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10292                           ;	Watchdog Timer Postscale Select bits
 10293                           ;	WDTPS = 32768, 1:32768
 10294  300003                     	org	3145731
 10295  300003  1E                 	db	30
 10296                           
 10297                           ; Padding undefined space
 10298  300004                     	org	3145732
 10299  300004  FF                 	db	255
 10300                           
 10301                           ;Config register CONFIG3H @ 0x300005
 10302                           ;	CCP2 MUX bit
 10303                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10304                           ;	PORTB A/D Enable bit
 10305                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10306                           ;	Low-Power Timer 1 Oscillator Enable bit
 10307                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10308                           ;	MCLR Pin Enable bit
 10309                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10310  300005                     	org	3145733
 10311  300005  81                 	db	129
 10312                           
 10313                           ;Config register CONFIG4L @ 0x300006
 10314                           ;	Stack Full/Underflow Reset Enable bit
 10315                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10316                           ;	Single-Supply ICSP Enable bit
 10317                           ;	LVP = OFF, Single-Supply ICSP disabled
 10318                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10319                           ;	ICPRT = OFF, ICPORT disabled
 10320                           ;	Extended Instruction Set Enable bit
 10321                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10322                           ;	Background Debugger Enable bit
 10323                           ;	DEBUG = 0x1, unprogrammed default
 10324  300006                     	org	3145734
 10325  300006  81                 	db	129
 10326                           
 10327                           ; Padding undefined space
 10328  300007                     	org	3145735
 10329  300007  FF                 	db	255
 10330                           
 10331                           ;Config register CONFIG5L @ 0x300008
 10332                           ;	Code Protection bit
 10333                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10334                           ;	Code Protection bit
 10335                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10336                           ;	Code Protection bit
 10337                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10338                           ;	Code Protection bit
 10339                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10340  300008                     	org	3145736
 10341  300008  0F                 	db	15
 10342                           
 10343                           ;Config register CONFIG5H @ 0x300009
 10344                           ;	Boot Block Code Protection bit
 10345                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10346                           ;	Data EEPROM Code Protection bit
 10347                           ;	CPD = OFF, Data EEPROM is not code-protected
 10348  300009                     	org	3145737
 10349  300009  C0                 	db	192
 10350                           
 10351                           ;Config register CONFIG6L @ 0x30000A
 10352                           ;	Write Protection bit
 10353                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10354                           ;	Write Protection bit
 10355                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10356                           ;	Write Protection bit
 10357                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10358                           ;	Write Protection bit
 10359                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10360  30000A                     	org	3145738
 10361  30000A  0F                 	db	15
 10362                           
 10363                           ;Config register CONFIG6H @ 0x30000B
 10364                           ;	Configuration Register Write Protection bit
 10365                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10366                           ;	Boot Block Write Protection bit
 10367                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10368                           ;	Data EEPROM Write Protection bit
 10369                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10370  30000B                     	org	3145739
 10371  30000B  E0                 	db	224
 10372                           
 10373                           ;Config register CONFIG7L @ 0x30000C
 10374                           ;	Table Read Protection bit
 10375                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10376                           ;	Table Read Protection bit
 10377                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10378                           ;	Table Read Protection bit
 10379                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10380                           ;	Table Read Protection bit
 10381                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10382  30000C                     	org	3145740
 10383  30000C  0F                 	db	15
 10384                           
 10385                           ;Config register CONFIG7H @ 0x30000D
 10386                           ;	Boot Block Table Read Protection bit
 10387                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10388  30000D                     	org	3145741
 10389  30000D  40                 	db	64
 10390                           tosu	equ	0xFFF
 10391                           tosh	equ	0xFFE
 10392                           tosl	equ	0xFFD
 10393                           stkptr	equ	0xFFC
 10394                           pclatu	equ	0xFFB
 10395                           pclath	equ	0xFFA
 10396                           pcl	equ	0xFF9
 10397                           tblptru	equ	0xFF8
 10398                           tblptrh	equ	0xFF7
 10399                           tblptrl	equ	0xFF6
 10400                           tablat	equ	0xFF5
 10401                           prodh	equ	0xFF4
 10402                           prodl	equ	0xFF3
 10403                           indf0	equ	0xFEF
 10404                           postinc0	equ	0xFEE
 10405                           postdec0	equ	0xFED
 10406                           preinc0	equ	0xFEC
 10407                           plusw0	equ	0xFEB
 10408                           fsr0h	equ	0xFEA
 10409                           fsr0l	equ	0xFE9
 10410                           wreg	equ	0xFE8
 10411                           indf1	equ	0xFE7
 10412                           postinc1	equ	0xFE6
 10413                           postdec1	equ	0xFE5
 10414                           preinc1	equ	0xFE4
 10415                           plusw1	equ	0xFE3
 10416                           fsr1h	equ	0xFE2
 10417                           fsr1l	equ	0xFE1
 10418                           bsr	equ	0xFE0
 10419                           indf2	equ	0xFDF
 10420                           postinc2	equ	0xFDE
 10421                           postdec2	equ	0xFDD
 10422                           preinc2	equ	0xFDC
 10423                           plusw2	equ	0xFDB
 10424                           fsr2h	equ	0xFDA
 10425                           fsr2l	equ	0xFD9
 10426                           status	equ	0xFD8

Data Sizes:
    Strings     125
    Constant    0
    Data        25
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      88
    BANK0           160     44     123
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    appSubGiveElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2263_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memcmp@vr	PTR const void  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@vl	PTR const void  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    sendData@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    sendData@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_10(CODE[13]), STR_9(CODE[17]), STR_8(CODE[12]), STR_6(CODE[14]), 
		 -> STR_4(CODE[6]), STR_3(CODE[12]), datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    S196_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _warning->_Lcd_Out
    _sendData->_strlen
    _readUART->_memset
    _confirmacion->_Lcd_Out
    _appBat->___fltol
    _appADC->___fltol
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_setServo
    _appInit->_uart_Init
    _uart_Init->___lldiv
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _appSubGiveElemts->_setServo
    _setServo->_setServoAngle
    _sprintf->___fltol
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _sendinformation->_appBat
    _appStateRecolectData->_appBat
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    ___awmod->___fltol
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  155139
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
                       _confirmacion *
                           _readUART *
                    _sendinformation *
                            _warning *
 ---------------------------------------------------------------------------------
 (1) _warning                                              2     2      0    3439
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
                       _appTimerStop
                           _setServo
 ---------------------------------------------------------------------------------
 (1) _sendinformation                                      0     0      0   67164
                             _appADC
                             _appBat
                          _appElemts
                      _appTimerStart
                             _memset
                           _sendData
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendData                                             5     3      2     636
                                             10 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _readUART                                             2     2      0    3356
                                             18 COMRAM     2     2      0
                            _Lcd_Cmd
                             _memcmp
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              11     5      6     637
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _confirmacion                                         2     2      0    2229
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   55659
                             _appADC
                             _appBat
                     _appCounterStop
                          _appElemts
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            2     0      2   14405
                                             36 BANK0      2     0      2
                            _Lcd_Out
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appCounterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   19745
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20299
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                             10 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     817
                                             74 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             49 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     613
                                              2 BANK0      6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0    1736
                           _setServo
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    4308
                            _adcInit
                     _appCounterInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                          _servoInit
                           _setServo
                          _uart_Init
 ---------------------------------------------------------------------------------
 (2) _uart_Init                                            4     0      4     412
                                             19 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              6 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _servoInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2544
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              9 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appCounterInit                                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   17248
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                   _appSubGiveElemts
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGiveElemts                                     2     0      2    1286
                                             14 COMRAM     2     0      2
                    _appCounterStart
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _setServo                                             4     2      2    1210
                                             10 COMRAM     4     2      2
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (3) _setServoAngle                                        4     3      1     208
                                              6 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _appCounterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   15786
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    9536
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8324
                                             79 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    7794
                                             69 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4434
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2785
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1396
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     555
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2543
                                              6 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    2053
                                              9 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appSubGiveElemts
       _appCounterStart
       _setServo
         _setServoAngle
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appCounterInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _servoInit
     _setServo
       _setServoAngle
     _uart_Init
       ___lldiv
   _appStateInitial *
     _setServo
       _setServoAngle
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appCounterStop
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _setServo
       _setServoAngle
   _confirmacion *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
   _readUART *
     _Lcd_Cmd
     _memcmp
     _memset
   _sendinformation *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appTimerStart
     _memset
     _sendData
       _strlen
     _sprintf
       ___awmod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _warning *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
     _appTimerStop
     _setServo
       _setServoAngle

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      7B       5       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      58       1       93.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      20        0.0%
DATA                 0      0      D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jun 03 19:20:08 2021

                  fp__readUART 000E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                  ?_confirmacion 0001                             l30 36BC  
                           l32 36CA                             l33 36D2                             l42 1A5E  
                           l27 3586                             l39 1DC0                             bsr 000FE0  
          ___wmul@multiplicand 0009                            l143 1876                            l240 263A  
                          l242 2640                            l171 2AEC                            l243 2646  
                          l252 26F0                            l156 2C9A                            l236 3824  
                          l157 2CE6                            l190 262A                            l254 26F6  
                          l158 2D38                            l430 3404                            l255 26FC  
                          l263 37CC                            l351 3612                            l256 2742  
                          l272 3852                            l440 32F2                            l257 2746  
                          l249 2734                            l193 31A4                            l281 384E  
                          l354 384A                            l266 37A2                            l362 34D4  
                          l187 2500                            l275 3842                            l443 334A  
                          l284 32E8                            l436 2A20                            l269 3856  
                          l365 34F2                            l446 37F2                            l278 385A  
                          l390 353C                            l375 294C                            l359 3120  
                          l560 20D8                            l480 2F4A                            l384 3282  
                          l368 3214                            l473 2F3A                            l393 2DF4  
                          l378 3838                            l573 23B2                            l743 284E  
                          l690 2EA6                adcInit@ADC_PINs 0008                            _PR2 000FCB  
                          _abs 3658                            _pad 2BB8                   ___awmod@sign 009D  
                          tosl 000FFD                            wreg 000FE8                   ___flmul@aexp 002A  
                 ___flmul@bexp 002B                   ___flmul@sign 0025                   ___flmul@temp 0030  
                 ___flmul@prod 002C                   ___fltol@exp1 0097                           l1101 1AB6  
                         l1030 0EA2                           l1104 1C12                           l1041 0F60  
                         l1033 0E66                           l1042 0F4E                           l1115 1BAA  
                         ?_abs 0019                           l1028 1042                           l1060 0944  
                         l1108 1B4E                           l1133 224E                           l1222 1136  
                         l1070 0BA0                           l1039 0EE8                           l1208 168C  
                         l1064 0CA8                           l3001 200E                           l1129 308C  
                         l1146 3456                           l3011 2082                           l3003 2020  
                         l1251 3696                           l1243 33A4                           l1067 0B3A  
                         l1308 2BB6                           l1316 3656                           l1180 2C3E  
                         l1244 33AC                           l3005 204E                           l3013 2088  
                         l3021 2250                           l1325 3740                           l3101 13D0  
                         l1237 13AE                           l1077 0C6A                           l1069 0BB2  
                         l1182 2C78                           l1190 1456                           l3015 2098  
                         l3007 206E                           l3031 2294                           l3023 2254  
                         l1319 385C                           l3111 1442                           l3103 13F8  
                         l1248 368E                           l3017 20B8                           l3009 2070  
                         l3041 22FC                           l3033 22B4                           l3025 2262  
                         l1177 2BFC                           l3121 148C                           l3113 145E  
                         l3105 1418                           l1282 1F50                           l3051 2372  
                         l3043 232A                           l3035 22D2                           l3027 2282  
                         l3131 152A                           l3123 1496                           l3115 1470  
                         l3107 1426                           l3211 108C                           l3203 1044  
                         l4011 1B38                           l4003 1AF0                           l1188 144E  
                         l1285 370A                           l1293 34A8                           l3053 2392  
                         l3045 234A                           l3037 22DA                           l3029 2286  
                         l3061 2BDA                           l3141 15FA                           l3125 149C  
                         l3133 158E                           l3117 147E                           l3109 1428  
                         l3221 10B2                           l3213 1098                           l3205 1068  
                         l4101 381A                           l4021 1BB8                           l4013 1B44  
                         l4005 1AF8                           l3311 258E                           l1279 1F48  
                         l3047 235C                           l3039 22EE                           l3071 2C20  
                         l3063 2BE8                           l3151 1640                           l3135 15A8  
                         l3143 1608                           l3127 151E                           l3119 1484  
                         l3215 109A                           l3207 1076                           l4111 3776  
                         l4103 381C                           l4031 1C00                           l4023 1BBA  
                         l4015 1B80                           l4007 1B04                           l3321 2612  
                         l3313 2590                           l3305 2504                           l3401 20DA  
                         l3161 1DC2                           l3049 2362                           l3081 3672  
                         l3073 2C4C                           l3065 2BF4                           l3057 2BB8  
                         l3153 164C                           l3145 161A                           l3137 15C6  
                         l3129 1524                           l3241 1144                           l3233 10C4  
                         l3225 10B8                           l3217 10AC                           l3209 1088  
                         l4201 3826                           l4041 355C                           l4121 378E  
                         l4113 377C                           l4105 381E                           l4033 1C02  
                         l4025 1BBE                           l4017 1B8C                           l4009 1B36  
                         l3331 244A                           l3323 2618                           l3315 2596  
                         l3307 2508                           l3411 213A                           l3083 36D4  
                         l3091 3470                           l3171 1E30                           l3163 1DD6  
                         l3075 2C60                           l3067 2C08                           l3059 2BC6  
                         l3155 1654                           l3147 1628                           l3139 15E0  
                         l3251 11BC                           l3243 1146                           l4203 382A  
                         l4051 3582                           l4043 356C                           l4131 3798  
                         l4123 3790                           l4115 3780                           l4107 3820  
                         l4027 1BE2                           l4019 1B9A                           l4211 331E  
                         l3341 24E0                           l3333 2452                           l3325 261A  
                         l3317 2608                           l3309 2586                           l3413 2192  
                         l3405 20F8                           l3093 349E                           l3181 1E58  
                         l3173 1E34                           l3165 1DDA                           l3069 2C1C  
                         l3149 162E                           l3157 1664                           l3253 11DC  
                         l3261 1244                           l3245 116A                           l3237 10D0  
                         l3229 10BE                           l3501 173A                           l4141 3854  
                         l4053 3584                           l4045 3570                           l4037 3540  
                         l4133 379A                           l4125 3792                           l4117 378A  
                         l4109 3822                           l4029 1BF2                           l4221 304C  
                         l4213 2FF0                           l4205 32EA                           l4301 3220  
                         l3343 24E2                           l3335 2454                           l3327 23B6  
                         l3319 2610                           l5031 2A64                           l3431 223C  
                         l3423 21F2                           l3407 2104                           l3095 34A2  
                         l3087 3458                           l3183 1E60                           l3167 1DDE  
                         l3079 3658                           l3271 130C                           l3263 1268  
                         l3255 11EA                           l3247 11A0                           l3239 1124  
                         l3511 177C                           l3503 1748                           l5023 2660  
                         l3351 262E                           l4143 3850                           l4047 3578  
                         l4039 3550                           l4135 379C                           l4127 3794  
                         l4119 378C                           l4231 35D2                           l4223 305E  
                         l4215 3004                           l4207 3300                           l4311 327E  
                         l4303 3238                           l3345 24E8                           l3337 245A  
                         l3329 23BA                           l3425 2226                           l3417 21AC  
                         l3089 345C                           l3193 1F08                           l3185 1E94  
                         l3177 1E3A                           l3169 1DFA                           l3273 1330  
                         l3281 135E                           l3265 128C                           l3249 11AE  
                         l3521 17B4                           l3513 1788                           l3505 1754  
                         l5025 2716                           l3361 267E                           l3353 2632  
                         l4049 3580                           l4145 383A                           l3601 2D26  
                         l4137 379E                           l4129 3796                           l4161 33F2  
                         l4241 35F0                           l4233 35D6                           l4225 306A  
                         l4217 3012                           l4209 331C                           l4305 324A  
                         l4321 3538                           l4313 34F4                           l3347 24EA  
                         l3339 24D8                           l3451 2A3C                           l3427 2232  
                         l3419 21D8                           l3195 1F1A                           l3179 1E50  
                         l3099 13B0                           l3283 136C                           l3275 133E  
                         l3267 12D4                           l3259 1232                           l5027 10F6  
                         l3531 17F4                           l3523 17C0                           l3515 178C  
                         l3507 1762                           l3371 26DA                           l3363 2690  
                         l3355 2634                           l3611 37A6                           l4155 3844  
                         l3603 2D2C                           l4091 316E                           l4083 3122  
                         l4139 37A0                           l4171 33FC                           l4163 33F4  
                         l4243 3604                           l4235 35DC                           l4147 384C  
                         l4219 3024                           l4307 325C                           l4315 3506  
                         l3349 24F0                           l3461 2A94                           l3453 2A46  
                         l3445 2A24                           l3429 2238                           l3197 1F2C  
                         l5029 1E7E                           l3189 1ECA                           l3277 1352  
                         l3541 182C                           l3533 17F8                           l3525 17CE  
                         l3517 179A                           l3509 176E                           l3373 26EA  
                         l3365 26A2                           l3613 37AE                           l3605 2D2C  
                         l4093 318C                           l4085 3132                           l3621 2EA8  
                         l4173 33FE                           l4165 33F6                           l4157 33AE  
                         l4237 35E0                           l4229 35CE                           l3701 0DE0  
                         l4309 326A                           l4317 351A                           l3463 2AB8  
                         l3447 2A28                           l3287 1378                           l3551 1864  
                         l3543 183A                           l3535 1806                           l3527 17DA  
                         l3519 17A6                           l3471 168E                           l3367 26B4  
                         l3359 264C                           l3615 37B8                           l3607 2D32  
                         l4087 314A                           l4095 380E                           l3631 2EF0  
                         l3623 2EB8                           l4175 3400                           l4167 33F8  
                         l4159 33B4                           l4239 35EC                           l3711 0E32  
                         l3703 0DFA                           l4319 3520                           l4271 34C8  
                         l3465 2ABC                           l3449 2A32                           l3457 2A50  
                         l3289 139C                           l4601 3428                           l3545 1846  
                         l3537 1812                           l3529 17E8                           l3481 16C2  
                         l3473 169A                           l3377 2702                           l3369 26C8  
                         l3617 37BA                           l3609 2D32                           l3553 2C7A  
                         l4089 315C                           l4097 3816                           l3641 2F34  
                         l3633 2EFA                           l3625 2ECE                           l4177 3402  
                         l4169 33FA                           l3721 0E8E                           l3713 0E42  
                         l3705 0E0A                           l3801 08EE                           l4273 34E2  
                         l3459 2A8A                           l4603 3444                           l3547 1854  
                         l3539 1820                           l3491 1702                           l3483 16CE  
                         l3475 169E                           l3619 3858                           l3571 2CBE  
                         l3563 2CB2                           l3555 2C86                           l4099 3818  
                         l3635 2F18                           l3627 2ED6                           l4611 2E0A  
                         l3731 0ECE                           l3723 0E90                           l3715 0E56  
                         l3707 0E1A                           l3651 0CD6                           l3643 0CAA  
                         l3811 092E                           l3803 08FC                           l3395 369A  
                         l4275 34F0                           l4267 34AA                           l2941 2B00  
                         l3493 1710                           l3485 16DC                           l3477 16B0  
                         l3549 1860                           l3581 2D04                           l3573 2CC0  
                         l3565 2CB8                           l3557 2C96                           l3637 2F28  
                         l3629 2EE2                           l4621 2E3E                           l4613 2E12  
                         l3741 0F0A                           l3733 0ED8                           l3725 0EA0  
                         l3717 0E64                           l3709 0E2A                           l3661 0D10  
                         l3653 0CE6                           l3645 0CB6                           l3901 0C8C  
                         l3821 0978                           l3813 0934                           l3805 08FE  
                         l3397 36AC                           l4701 1DBE                           l4269 34B6  
                         ?_pad 0017                           l2943 2B12                           l3495 171C  
                         l3487 16E8                           l3479 16B4                           l3591 2D0E  
                         l3583 2D06                           l3575 2CC2                           l3567 2CBA  
                         l3639 2F2A                           l4631 2E7A                           l4623 2E46  
                         l4615 2E16                           l4607 2DF6                           l3751 0F7C  
                         l3743 0F18                           l3735 0EE6                           l3727 0EB2  
                         l3719 0E70                           l3671 0D3C                           l3663 0D16  
                         l3655 0CF6                           l3647 0CC4                           l3903 0C8E  
                         l3831 09C8                           l3823 0984                           l3815 0954  
                         l3807 090E                           l3399 36BA                           l4711 1A1A  
                         l4703 1878                           l2945 2B1C                           l2953 370C  
                         l3497 1720                           l3489 16F6                           l4721 2850  
                         l3593 2D20                           l3585 2D08                           l3577 2CD4  
                         l3569 2CBC                           l4633 2E80                           l4625 2E4E  
                         l4617 2E24                           l4609 2DFC                           l3761 0FE8  
                         l3753 0F8A                           l3745 0F46                           l3729 0EC8  
                         l3737 0EF8                           l3681 0D76                           l3673 0D4C  
                         l3665 0D1C                           l3657 0CF8                           l3649 0CC6  
                         l3905 0C94                           l3841 0A0A                           l3833 09D4  
                         l3825 098E                           l3817 0964                           l3809 091E  
                         l4713 1A46                           l4705 18B6                           l4297 3216  
                         l4801 2DCA                           l2971 37CE                           l2947 2B3A  
                         l2939 2AEE                           l2963 3614                           l2955 3718  
                         l3499 172E                           l4731 28B2                           l4723 285E  
                         l3595 2D20                           l3587 2D0A                           l3579 2CFE  
                         l4627 2E5C                           l4635 2E86                           l4619 2E2C  
                         l3771 1036                           l3763 1002                           l3755 0FB4  
                         l3739 0F06                           l3683 0D8C                           l3675 0D5C  
                         l3667 0D2A                           l3659 0D00                           l3907 0C98  
                         l3851 0A6C                           l3843 0A16                           l3835 09E0  
                         l3827 09A4                           l4651 279E                           l4643 2748  
                         l4707 1934                           l4715 3284                           l4299 321A  
                         l4811 2998                           l4803 2DE6                           l2973 37EA  
                         l2981 1F64                           l2949 2B70                           l2965 3620  
                         l2957 371C                           l4741 2938                           l4733 28C2  
                         l4725 287E                           l3597 2D20                           l3589 2D0C  
                         l4637 2E96                           l4629 2E72                           l3773 1038  
                         l3765 101E                           l3749 0F70                           l3757 0FB8  
                         l3685 0D9C                           l3693 0DBC                           l3677 0D5E  
                         l3669 0D2C                           l3861 0B02                           l3853 0A78  
                         l3845 0A26                           l3837 09EE                           l3829 09B0  
                         l3781 0880                           l4653 27A0                           l4645 2760  
                         l4709 1982                           l4717 32A6                           l4821 29F6  
                         l4813 299E                           l4805 2DEC                           l2991 1FBA  
                         l2983 1F84                           l2967 3632                           l2959 3734  
                         l4591 3362                           l4735 28EC                           l4727 2894  
                         l3599 2D26                           l4639 2E9E                           l3767 1022  
                         l3759 0FD2                           l3695 0DCC                           l3687 0DA4  
                         l3679 0D66                           l3871 0B58                           l3863 0B20  
                         l3855 0A94                           l3847 0A40                           l3839 09FA  
                         l3791 08BC                           l3783 088C                           l4655 27B0  
                         l4719 32D0                           l4751 30E6                           l4743 308E  
                         l4823 2A12                           l4815 29AA                           l4807 294E  
                         l4831 3748                           l2993 1FC6                           l2985 1F88  
                         l2977 1F52                           l2969 3636                           l4593 3388  
                         l4737 290C                           l4729 28A0                           l3769 1030  
                         l3697 0DCC                           l3689 0DA8                           l3881 0BC2  
                         l3873 0B5C                           l3865 0B2A                           l3857 0ABE  
                         l3849 0A50                           l3793 08CC                           l3785 089A  
                         l4681 282E                           l4665 27DA                           l4657 27B4  
                         l4649 2774                           l4761 3108                           l4753 30EE  
                         l4745 30B8                           l4825 2A18                           l4817 29D8  
                         l4809 297C                           l4833 374A                           l2995 1FE4  
                         l2987 1F96                           l2979 1F56                           l4587 334C  
                         l4595 3406                           l4739 2924                           l3891 0C24  
                         l3883 0BCE                           l3875 0B6A                           l3867 0B38  
                         l3859 0AF4                           l3795 08D2                           l3787 089C  
                         l4683 283E                           l4675 2802                           l4667 27E4  
                         l4659 27C2                           l4691 1C5E                           l4755 30F2  
                         l4747 30CC                           l4763 3116                           l4771 31B6  
                         l4819 29DE                           l4835 374C                           l4827 3742  
                         l2997 1FEC                           l2989 1FB6                           l4589 3354  
                         l4597 3418                           l3893 0C38                           l3885 0BDC  
                         l3877 0B98                           l3869 0B4A                           l3797 08E2  
                         l3789 08AC                           l4677 280E                           l4669 27EE  
                         l4693 1CB6                           l4757 30F8                           l4749 30CE  
                         l4781 3206                           l4773 31CE                           l4765 31A6  
                         l4837 3750                           l4829 3746                           l2999 2000  
                         l4599 3420                           l3895 0C52                           l3887 0C06  
                         l3799 08E8                           l4679 281E                           l3991 1A62  
                         l4695 1D40                           l4687 1C14                           l4759 3106  
                         l4783 3210                           l4775 31DC                           l4767 31AC  
                         l4791 2D6E                           l3897 0C6E                           l3889 0C0A  
                         l3993 1A72                           l4697 1D88                           l4689 1C36  
                         l4777 31E2                           l4769 31B0                           l4793 2D7C  
                         l4785 2D3A                           l3899 0C7E                           l3995 1A80  
                         l4699 1D8E                           l4779 31FA                           l4795 2D88  
                         l4787 2D48                           l3997 1AC6                           l4797 2DA4  
                         l4789 2D54                           l3999 1ADC                           l4799 2DC6  
                         STR_1 0820                           STR_2 086A                           STR_3 0854  
                         STR_4 0873                           STR_5 0879                           STR_6 0812  
                         STR_7 087B                           STR_8 0848                           STR_9 0801  
                         u2100 2B70                           u2101 2B6C                           u2110 3734  
                         u2111 3730                           u2200 2262                           u2120 3656  
                         u3000 179A                           u2201 225E                           u2121 3652  
                         u3001 1796                           u2130 1F64                           u2210 2294  
                         u3010 17B4                           u2131 1F60                           u2211 2290  
                         u3011 17B0                           u2140 1F96                           u2220 22D2  
                         u2300 3672                           u3020 17CE                           u3100 37CC  
                         u2141 1F92                           u2221 22CE                           u2301 366E  
                         u3021 17CA                           u3101 37C8                           u2310 3704  
                         u2230 22FC                           u2070 2B00                           u3030 17E8  
                         u3110 2ECE                           u2311 36FE                           u2151 1FC0  
                         u2231 22F8                           u2071 2AFC                           u3031 17E4  
                         u3111 2ECA                           u2320 3706                           u2160 1FE4  
                         u2240 232A                           u2080 2B12                           u2400 1470  
                         u3040 1806                           u3120 2EF0                           u3200 0D8C  
                         u2161 1FE0                           u2241 2326                           u2081 2B0E  
                         u2401 146C                           u3041 1802                           u3121 2EEC  
                         u3201 0D88                           u2330 3470                           u2170 200E  
                         u2250 2372                           u2090 2B3A                           u2410 147E  
                         u3050 1820                           u3130 2F18                           u3210 0DCC  
                         u2331 346C                           u2171 200A                           u2251 236E  
                         u2091 2B36                           u2411 147A                           u3051 181C  
                         u3131 2F14                           u3211 0DC8                           u2340 349E  
                         u2500 1DFA                           u2180 204E                           u2260 2BC6  
                         u2420 15A8                           u3060 183A                           u3300 0F46  
                         u3220 0E42                           u3140 0CC4                           u2341 349A  
                         u2501 1DF6                           u2181 204A                           u2261 2BC2  
                         u2421 15A4                           u3061 1836                           u3301 0F42  
                         u3221 0E3E                           u3141 0CC0                           u2510 1E30  
                         u2190 2098                           u2270 2BE8                           u2430 15C6  
                         u2350 13E0                           u3070 1854                           u3310 0F5C  
                         u3230 0E64                           u3150 0CD6                           u2511 1E2C  
                         u2191 2094                           u2271 2BE4                           u2431 15C2  
                         u2351 13DA                           u3071 1850                           u3311 0F58  
                         u3231 0E60                           u3151 0CD2                           u2520 1E4C  
                         u2280 2C3E                           u2440 15E0                           u2360 13E2  
                         u2600 116A                           u3080 1876                           u3320 0F70  
                         u3240 0E8E                           u3160 0CE6                           u3400 08FC  
                         u4200 2760                           u2521 1E48                           u2281 2C3A  
                         u2441 15DC                           u2601 1166                           u3081 1872  
                         u3321 0F6C                           u3241 0E8A                           u3161 0CE2  
                         u3401 08F8                           u4201 275C                           u2530 1F02  
                         u2290 2C4C                           u2450 15FA                           u2370 13F8  
                         u2610 11AE                           u4130 33A4                           u3090 2CE6  
                         u3330 0F8A                           u3250 0EB2                           u3170 0D2A  
                         u3410 090E                           u4210 2794                           u2531 1EFC  
                         u2291 2C48                           u2451 15F6                           u2371 13F4  
                         u2611 11AA                           u4131 33A0                           u3091 2CE2  
                         u3331 0F86                           u3251 0EAE                           u3171 0D26  
                         u3411 090A                           u2540 1F04                           u2460 1608  
                         u2380 1426                           u2620 122A                           u4300 28C2  
                         u4140 2E0A                           u3340 0FD2                           u3260 0EC8  
                         u3180 0D3C                           u3500 0BAE                           u3420 091E  
                         u4220 27C2                           u2461 1604                           u2381 1422  
                         u2621 1224                           u4301 28BE                           u4141 2E06  
                         u3341 0FCE                           u3261 0EC4                           u3181 0D38  
                         u3501 0BAA                           u3421 091A                           u4221 27BE  
                         u2550 1F1A                           u2470 161A                           u2390 1442  
                         u2630 122C                           u4310 2938                           u4150 2E24  
                         u3350 1002                           u3270 0EE6                           u3190 0D4C  
                         u3510 0BC2                           u3430 0954                           u4230 27D6  
                         u2551 1F16                           u2471 1616                           u2391 143E  
                         u4311 2934                           u4151 2E20                           u3351 0FFE  
                         u3271 0EE2                           u3191 0D48                           u3511 0BBE  
                         u3431 0950                           u4231 27D2                           u4215 278A  
                         u2560 1F2C                           u2480 1628                           u2640 1244  
                         u2800 2742                           u4160 2E3E                           u3360 1030  
                         u3280 0F06                           u3520 0BDC                           u3440 0964  
                         u4240 27FE                           u4320 30CC                           u2705 2550  
                         u2561 1F28                           u2481 1624                           u2641 1240  
                         u2801 273E                           u4161 2E3A                           u3361 102C  
                         u3281 0F02                           u3521 0BD8                           u3441 0960  
                         u4241 27FA                           u4321 30C8                           u2490 1640  
                         u2650 1268                           u2570 1068                           u4170 2E5C  
                         u3290 0F18                           u3530 0C24                           u3450 0ADE  
                         u3370 089A                           u4250 281E                           u4330 30E6  
                         u2715 23C2                           u2491 163C                           u2651 1264  
                         u2571 1064                           u4171 2E58                           u3291 0F14  
                         u3531 0C20                           u3371 0896                           u4251 281A  
                         u4331 30E2                           u2900 2AEC                           u2660 128C  
                         u2580 1136                           u4180 2E72                           u3540 0C52  
                         u3460 0B38                           u3380 08AC                           u4260 282E  
                         u3700 1A80                           u2820 36CA                           u4340 297C  
                         u2725 23E6                           u2901 2AE8                           u2661 1288  
                         u2581 1132                           u4181 2E6E                           u3541 0C4E  
                         u3461 0B34                           u3381 08A8                           u4261 282A  
                         u3701 1A7C                           u2821 36C6                           u4341 2978  
                         u2830 20F4                           u2670 1330                           u2590 1144  
                         u2910 16B0                           u4190 2E96                           u3550 0C8C  
                         u3470 0B58                           u3390 08BC                           u3710 1ADC  
                         u4270 1D88                           u4350 29D8                           u2735 240C  
                         u2831 20F0                           u2671 132C                           u2591 1140  
                         u2911 16AC                           u4191 2E92                           u3551 0C88  
                         u3471 0B54                           u3455 0AD4                           u3391 08B8  
                         u3711 1AD8                           u4271 1D84                           u4351 29D4  
                         u2840 2136                           u2920 16C2                           u3480 0B6A  
                         u3720 1B32                           u4280 1DBE                           u2745 2430  
                         u2841 2132                           u2921 16BE                           u3481 0B66  
                         u3721 1B2E                           u4281 1DBA                           u2850 21A8  
                         u2930 16DC                           u4290 28B2                           u2770 2690  
                         u3490 0B98                           u3730 1B7C                           u2755 2464  
                         u2851 21A4                           u2931 16D8                           u4291 28AE  
                         u2771 268C                           u3491 0B94                           u3731 1B78  
                         u4507 31C2                           u2860 21EE                           u2940 16F6  
                         u2780 26B4                           u3820 33E8                           u3740 1B9A  
                         u3900 305E                           u2765 24A8                           u2685 2510  
                         u2861 21EA                           u2941 16F2                           u2781 26B0  
                         u3741 1B96                           u3901 305A                           u4517 31EE  
                         u2870 224E                           u2950 1710                           u2790 26DA  
                         u3750 1BAA                           u2695 252A                           u2871 224A  
                         u2951 170C                           u2791 26D6                           u4607 2CCA  
                         u3751 1BA6                           u4527 352A                           u2880 2AB4  
                         u2960 172E                           u3760 1BB8                           u4368 375A  
                         u2961 172A                           u4617 2D00                           u3825 33DE  
                         u3761 1BB4                           u4537 322A                           u4369 376E  
                         u2890 2ADC                           u2970 1748                           u3770 1BF2  
                         u3690 1A72                           u3930 34C8                           u4707 2620  
                         u2971 1744                           u4627 2D16                           u3771 1BEE  
                         u3691 1A6E                           u4547 36B2                           u3931 34C4  
                         _RCIE 007CED                           u2980 1762                           u3780 1C00  
                         u3860 3300                           u3940 34E2                           _RCIF 007CF5  
                         u4717 244C                           u2981 175E                           u4637 2696  
                         u4557 313C                           u3781 1BFC                           u3861 32FC  
                         u3941 34DE                           u2990 177C                           u3790 3550  
                         u3870 334A                           u3950 327E                           u4727 2456  
                         u2887 2AAA                           u2991 1778                           u4647 26BA  
                         u3791 354C                           u4567 3178                           u3871 3346  
                         u3951 327A                           u3880 3024                           u3960 351A  
                         u4737 24DA                           u2897 2AD2                           u4657 26E0  
                         u4577 3196                           u3881 3020                           u3961 3516  
                         u4497 29E8                           u3890 304C                           u4747 24E4  
                         u4667 2588                           u4587 2C8C                           u3891 3048  
                         u4757 24EC                           u4677 2592                           u4597 2CB4  
                         u4767 24F6                           u4687 260A                           u4697 2614  
                         _TMR0 000FD6                           _TMR2 000FCC                           _TMR3 000FB2  
                         abs@a 0019                           _dbuf 0066                           _atoi 1DC2  
                         _main 3742                           _dtoa 13B0                           _isrH 0008  
                         _isrL 0018                           _prec 0053                           _nout 0060  
                         pad@i 001E                           pad@p 001B                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 0020                           fsr2l 000FD9  
                         btemp 0059                           prodh 000FF4                           prodl 000FF3  
                         start 00F0                ___fldiv@new_exp 0043   __end_of_appStateRecolectData 3122  
              __end_of_Lcd_Cmd 262C                __end_of_Lcd_Out 2AEE                   ___param_bank 000000  
                   _Lcd_Chr_CP 23B4           __size_of_appLCD_Init 0084                 ??_confirmacion 0011  
      __size_of_appCounterInit 000A                          ??_abs 001B                          ??_pad 001D  
      __size_of_appCounterStop 0004                 setServo@pulsos 000B                  ___fltol@sign1 0096  
              __end_of___aodiv 20DA                          ?_atoi 000E                          ?_main 0001  
                        ?_dtoa 0022                __end_of___aomod 23B4                          ?_isrH 0001  
                        ?_isrL 0001                __end_of_adcInit 3588                __end_of___fldiv 1044  
                        _ADRES 000FC3                          STR_10 083B                          STR_11 0839  
                        STR_12 082E                          STR_13 082E                          STR_14 0860  
                        STR_15 0860                __end_of___awmod 2EA8                __end_of___flmul 0CAA  
              __end_of___fltol 2850                __end_of___lldiv 2F4C                          i1l105 00E0  
                        i2l116 2FE4        __end_of_appStateInitial 34F4                          _RCREG 000FAE  
                 vfpfcnvrt@fmt 0048                          _SPBRG 000FAF                          _PORTB 000F81  
                        _TRISB 000F93                          _TXREG 000FAD                __end_of_appInit 3614  
        appSubGetData@cantidad 00BC                          _datos 00C2                          _flags 0055  
                        _fputc 2AEE                          _fputs 3614                __end_of_isdigit 370C  
                        atoi@n 001B                          pad@fp 0017                          atoi@s 000E  
                        _width 0062                          _putch 385C                          dtoa@d 0024  
                        dtoa@i 0044                          dtoa@n 003C                          dtoa@p 0036  
                        dtoa@s 003A                          dtoa@w 0038                __end_of_teclado 1878  
              __end_of_isspace 34AA                          pclath 000FFA                          tablat 000FF5  
              __end_of_warning 3284                          ttemp5 005A                          ttemp6 005D  
                        ttemp7 0061                          status 000FD8                          wtemp8 005A  
              __end_of_sprintf 3458           __end_of_appTimerInit 37A4           __end_of_appTimerStop 3854  
             __end_of_Lcd_Init 2D3A                    isrH@counter 0057                __initialization 3588  
                 __end_of_atoi 1F52                   __end_of_main 3776                   __end_of_dtoa 168E  
                 __end_of_isrH 2FF0                   __end_of_isrL 00F0                    isrL@bloqueo 0064  
                       ??_atoi 0010                         ??_main 0053                         ??_dtoa 002C  
                       ??_isrH 0001                         ??_isrL 0004       __size_of_appCounterStart 0004  
                __activetblptr 000002                 _appGetElements 31A6          __end_of_setServoAngle 2748  
                       ?_fputc 0007                         ?_fputs 0010          __size_of_appISRConfig 0008  
                       ?_putch 0001                         i1l4841 0034                         i1l4851 007E  
                       i1l4843 0042                         i1l4861 00BE                         i1l4853 0082  
                       i1l4845 004A                         i1l4863 00CE                         i1l4847 005C  
                       i1l4855 008E                         i1l4839 0026                         i1l4857 00A6  
                       i1l4865 00D6                         i1l4849 006C                         i1l4867 00DE  
                       i1l4859 00B2                         i2l4871 2F64                         i2l4881 2F90  
                       i2l4873 2F72                         i2l4891 2FE0                         i2l4883 2F9E  
                       i2l4875 2F74                         i2l4885 2FCC                         i2l4877 2F7A  
                       i2l4869 2F56                         i2l4887 2FD2                         i2l4879 2F82  
                       i2l4889 2FD8                      ??_Lcd_Cmd 0007                  vfpfcnvrt@done 009E  
                       _TMR0IE 007F95                         _TMR0IF 007F92                         _TMR3IE 007D01  
                       _TMR3IF 007D09                      ??_Lcd_Out 000D               __end_of___xxtofl 1C14  
                 vfprintf@cfmt 0050              ?_appSubGiveElemts 000F                    ?_Lcd_Chr_CP 0001  
                       _appADC 1C14                      ??___aodiv 0017                      ??___aomod 0017  
                       ___wmul 37CE                      ??_adcInit 0007                      ??___fldiv 003A  
                    ??___awmod 0053                      ??___flmul 0021                         _appBat 1878  
                    ??___fltol 004F                      ??___lldiv 000F               __end_of_readUART 2A22  
           ??_appSubGiveElemts 0011                         _memcmp 2FF0                         _memset 20DA  
                       clear_0 35AE                ___awmod@divisor 009A                      ??_appInit 0018  
       __end_of_appGetElements 3216                ___awmod@counter 009C                         pad@buf 0019  
                       _puerto 0086               __end_of_sendData 334C                         dtoa@fp 0022  
                       _strlen 370C               __end_of_setServo 37CE                   _appISRConfig 3844  
                       fputc@c 0007               ?_appStateInitial 0001                         fputs@c 0014  
                       fputs@i 0015                         fputs@s 0010                      ??_isdigit 0009  
                    ??_teclado 0009                   __mediumconst 0000                      ??_isspace 0009  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         _appStateRecolectData 308E              adcGetValue@PinADC 000A                         putch@c 0001  
        __end_of_appSubGetData 294E                      ??_warning 0011               __end_of_vfprintf 33AE  
                    ??_sprintf 0053           __end_of_confirmacion 353E                   ___xxtofl@arg 0015  
                 ___xxtofl@exp 0014             setServoAngle@angle 000A                   ___xxtofl@val 000B  
                   __accesstop 0060        __end_of__initialization 35C0          __end_of_appTimerStart 3858  
                ___rparam_used 000001                     ___fltol@f1 004B                 __pcstackCOMRAM 0001  
                 __pidataBANK0 37F4                 _appCounterInit 383A                 _appCounterStop 384C  
                __end_of_fputc 2BB8                  __end_of_fputs 3658                  __end_of_putch 385E  
           __size_of_appElemts 0066                ?_appGetElements 0001                  ??_adcGetValue 0009  
        ?_appStateRecolectData 0001                      ?_Lcd_Init 0001              ??_appCounterStart 0007  
                      ??_fputc 000B                        ??_fputs 0014            __size_of_Lcd_Chr_CP 014E  
                      ??_putch 0007          __size_of_appTimerInit 002E                     __pbssBANK0 0060  
             setServoAngle@pin 0007          __size_of_appTimerStop 0004       __size_of_sendinformation 00BC  
       __end_of_appCounterInit 3844             fp__sendinformation 000E         __end_of_appCounterStop 3850  
                      ?_appADC 00BA                        ?___wmul 0007                        ?_appBat 00BA  
                      ?_memcmp 0007                        ?_memset 0007                     appADC@data 00BA  
            isrL@tTimerCounter 0058             __size_of_uart_Init 0058                        ?_strlen 0007  
           __size_of_servoInit 0018                   _appTimerInit 3776                      ?___xxtofl 000B  
                 _appTimerStop 3850             __size_of_vfpfcnvrt 036C                     ??_Lcd_Init 000A  
          __end_of_adcGetValue 36D4                      ?_readUART 0001              __end_of_appElemts 32EA  
                      _Lcd_Cmd 2502                    setServo@pin 000C                        _Lcd_Out 2A22  
      appSubGetData@data_Inout 00BA                      ?_sendData 000B                  ??_appLCD_Init 0011  
                      __Hparam 0000                      ?_setServo 000B                        __Lparam 0000  
              ?_appCounterInit 0007                ?_appCounterStop 0001                        ___aodiv 1F52  
                      ___aomod 2250                        _adcInit 353E                        ___fldiv 0CAA  
                      ___awmod 2DF6                        ___flmul 0880                        ___fltol 2748  
              __size_of_appADC 01AE                        ___lldiv 2EA8                __size_of___wmul 0026  
              __size_of_appBat 01E8                      ?_vfprintf 00A2                     appBat@data 00BA  
                 __psmallconst 0800                        __pcinit 3588                __size_of_memcmp 009E  
              __size_of_memset 0176                        _appInit 35CE                        __ramtop 0800  
                      __ptext0 3742                        __ptext1 2D3A                        __ptext2 34AA  
                      __ptext3 294E                        __ptext4 31A6                        __ptext5 308E  
                      __ptext6 34F4                        __ptext7 3216                        __ptext8 32EA  
                      __ptext9 2FF0                      _T0CONbits 000FD5                __size_of_strlen 0036  
                    _T2CONbits 000FCA                   __size_of_abs 0040                   __size_of_pad 00C2  
       ??_appStateRecolectData 0053                        _isdigit 36D4                     ??___xxtofl 000F  
                    _T3CONbits 000FB1               ___awmod@dividend 0098          __size_of_confirmacion 004A  
                      _teclado 168E                        _isspace 3458                        _warning 3216  
                      atoi@neg 0014                        _sprintf 3406                 __pintcode_body 2F4C  
         end_of_initialization 35C0                        memcmp@l 000E                        memcmp@n 000B  
                   ??_readUART 0013                        memcmp@r 0010                        fputc@fp 0009  
                      memset@c 0009                        memset@k 000F                        memset@n 000B  
                      memset@s 0011                  __Lmediumconst 0000                        int_func 2F4C  
                      fputs@fp 0012              __end_of_uart_Init 3406                     ??_sendData 000D  
              ___lldiv@divisor 000B              __end_of_servoInit 3826                     ??_setServo 000D  
              ___lldiv@counter 0013           appCounterInit@reload 0007              __end_of_vfpfcnvrt 13B0  
                    Lcd_Init@i 000B                      _RCSTAbits 000FAB                   ??_Lcd_Chr_CP 0007  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 0050  
                appElemts@data 00BA                   _confirmacion 34F4            __end_of_appLCD_Init 31A6  
                      strlen@a 0009                        strlen@s 0007              ??_sendinformation 0053  
                    _PORTAbits 000F80                      _PORTBbits 000F81                    _adcGetValue 3698  
                ___xxtofl@sign 0013                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    _TRISDbits 000F95      __size_of_appSubGiveElemts 0014                      _TRISEbits 000F96  
                  ___fldiv@grs 0045                    ___fldiv@rem 003E             __end_of_Lcd_Chr_CP 2502  
                   fp__warning 000E                    ___flmul@grs 0026                      _TXSTAbits 000FAC  
       __size_of_setServoAngle 011C                  setServo@angle 000D               ??_appGetElements 00BF  
               __end_of_appADC 1DC2                    vfpfcnvrt@ap 004A                    vfpfcnvrt@fp 0046  
                  vfpfcnvrt@ll 0096                 __end_of___wmul 37F4                 __end_of_appBat 1A60  
                  _BAUDCONbits 000FB8                _appCounterStart 3858                 __end_of_memcmp 308E  
               __end_of_memset 2250                 __end_of_strlen 3742            start_initialization 3588  
                  __end_of_abs 3698                    __end_of_pad 2C7A                  Lcd_Out@buffer 000B  
     __size_of_appStateInitial 004A              __size_of_Lcd_Init 00C0             fp__appStateInitial 000E  
                  _appLCD_Init 3122                    vfprintf@fmt 00A4                       ??_appADC 0053  
                     ??___wmul 000B                       ??_appBat 00BC                    _appBat$2657 00BE  
       __size_of_appSubGetData 00FE                    __pdataBANK0 00C2                       ??_memcmp 000D  
                     ??_memset 000D                     memset@dest 0007                       ??_strlen 0009  
                 sendData@data 000B                      ___fldiv@a 0036                      ___fldiv@b 0032  
       __size_of_appTimerStart 0004                      ___flmul@a 001D                      ___flmul@b 0019  
                  __pbssCOMRAM 0053                  __pcstackBANK0 0096               ___aodiv@dividend 0007  
                _setServoAngle 262C              __size_of___xxtofl 01B4        fp__appStateRecolectData 000E  
                     ?_Lcd_Cmd 0001               ??_appCounterInit 0009                       ?_Lcd_Out 000A  
             ??_appCounterStop 0007                      _atoi$2377 0016                      _atoi$2378 001A  
                    _atoi$2379 0018              __size_of_readUART 00D4                      _appElemts 3284  
                    _dtoa$2342 0034        __end_of_appCounterStart 385C              __size_of_sendData 0062  
                    __pintcode 0008                       ?___aodiv 0007                       ?___aomod 0007  
            __size_of_setServo 002A                       ?_adcInit 0001                       ?___fldiv 0032  
             ___aodiv@quotient 0019                       ?___awmod 0098                       ?___flmul 0019  
                     ?___fltol 004B                       ?___lldiv 0007                    __pintcodelo 0018  
                     ?_appInit 0001              __size_of_vfprintf 0062                    __smallconst 0800  
                     ?_isdigit 0007                   teclado@valor 0007                       ?_teclado 0007  
               ?_setServoAngle 0007                       ?_isspace 0007               _appSubGiveElemts 3826  
                     ?_warning 0001                       ?_sprintf 00A8                  _appSubGetData 2850  
               __size_of_fputc 00CA                 __size_of_fputs 0044                 __size_of_putch 0002  
               ___wmul@product 000B                       _LATAbits 000F89                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _LATEbits 000F8D                  _appTimerStart 3854  
                     _IPR1bits 000F9F                       _IPR2bits 000FA2                       _PIE1bits 000F9D  
                     _PIE2bits 000FA0                _sendinformation 2D3A              ??_appStateInitial 000F  
                   ?_appElemts 00BA                       i1u440_20 006C                       i1u440_21 0068  
                     i1u441_20 007E                       i1u441_21 007A                       i1u442_20 00A6  
                     i1u442_21 00A2                       i1u443_20 00CE                       i1u443_21 00CA  
                     i1u437_20 0034                       i1u437_21 0030                       i1u438_20 0042  
                     i1u438_21 003E                       i1u439_20 005C                       i1u439_21 0058  
                     _PIR1bits 000F9E                       _PIR2bits 000FA1                       i2u444_40 2F64  
                     i2u444_41 2F60                       i2u445_40 2F72                       i2u445_41 2F6E  
                     i2u446_40 2F90                       i2u446_41 2F8C                       i2u447_40 2F9E  
                     i2u447_41 2F9A                       i2u448_40 2FCC                       i2u448_41 2FC8  
                     _GO_nDONE 007E11                      _uart_Init 33AE                       _RCONbits 000FD0  
                     Lcd_Out@x 000A                       Lcd_Out@y 000F                      _servoInit 380E  
                    _vfpfcnvrt 1044                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0007                  ?_appISRConfig 0001  
                 ?_adcGetValue 0007  __size_of_appStateRecolectData 0094                   _isspace$2395 000D  
                     _Lcd_Init 2C7A                 ?_appSubGetData 00BA                    _INTCON2bits 000FF1  
                    copy_data0 359C                 ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A  
             __size_of_Lcd_Out 00CC                       __Hrparam 0000                  uart_Init@baud 0014  
                   vfprintf@ap 00A6                       __Lrparam 0000                     vfprintf@fp 00A2  
             ?_appCounterStart 0001                     ?_uart_Init 0014                     ?_servoInit 0001  
             __size_of___aodiv 0188               __size_of___aomod 0164               __size_of_adcInit 004A  
             __size_of___fldiv 039A               __size_of___awmod 00B2               __size_of___flmul 042A  
             __size_of___fltol 0108                  appADC@lm35val 00BC               __size_of___lldiv 00A4  
                   ?_vfpfcnvrt 0046                ___aodiv@divisor 000F                 ??_appISRConfig 0007  
              ___aodiv@counter 0017               __size_of_appInit 0046                ??_setServoAngle 0008  
                   sprintf@fmt 00AA                      sendData@i 000F                       ___xxtofl 1A60  
             __size_of_isdigit 0038                 Lcd_Chr_CP@data 0009               __size_of_teclado 01EA  
             __size_of_isspace 0052                       __ptext10 3284                       __ptext11 384C  
                     __ptext20 35CE                       __ptext12 1878                       __ptext21 33AE  
                     __ptext13 1C14                       __ptext30 3850                       __ptext22 2EA8  
                     __ptext14 3698                       __ptext31 3854                       __ptext23 380E  
                     __ptext15 1A60                       __ptext40 1044                       __ptext32 3826  
                     __ptext24 3776                       __ptext16 2748                       __ptext41 13B0  
                     __ptext33 37A4                       __ptext25 3122                       __ptext17 0880  
                     __ptext50 1DC2                       __ptext42 2BB8                       __ptext34 262C  
                     __ptext26 2C7A                       __ptext18 0CAA                       __ptext51 3458  
                     __ptext43 370C                       __ptext35 3858                       __ptext27 3844  
                     __ptext19 2DF6                       __ptext52 36D4                       __ptext44 3614  
                     __ptext36 2850                       __ptext28 383A                       __ptext53 37CE  
                     __ptext45 2AEE                       __ptext37 168E                       __ptext29 353E  
                     __ptext54 20DA                       __ptext46 385C                       __ptext38 3406  
                     __ptext55 2A22                       __ptext47 3658                       __ptext39 334C  
                     __ptext56 2502                       __ptext48 2250                       __ptext57 23B4  
                     __ptext49 1F52               __size_of_warning 006E        __end_of_sendinformation 2DF6  
             __size_of_sprintf 0052                      setServo@i 000E                       _readUART 294E  
                  Lcd_Cmd@data 0009                  __size_of_atoi 0190                  __size_of_main 0034  
                __size_of_dtoa 02DE                  __size_of_isrH 2FE8                  __size_of_isrL 00D8  
                     _sendData 32EA                    ??_appElemts 0053                   ?_appLCD_Init 0001  
                     _setServo 37A4                       int$flags 0059                       _vfprintf 334C  
             ___aomod@dividend 0007             appSubGetData@inout 00BE                  ?_appTimerInit 0001  
                  Lcd_Out@data 0010                 _vfpfcnvrt$2357 00A0                  ?_appTimerStop 0001  
                   _INTCONbits 000FF2                ??_appSubGetData 0053                       memcmp@vl 0007  
                     memcmp@vr 0009                       isdigit@c 0007                       intlevel1 0000  
                     intlevel2 0000                      sprintf@ap 00B2                ??_appTimerStart 0007  
                     isspace@c 0007               ___lldiv@dividend 0007           appSubGiveElemts@data 000F  
              fp__confirmacion 000E       __end_of_appSubGiveElemts 383A                    ??_uart_Init 0018  
                  ??_servoInit 0007                ___aomod@divisor 000F                    ??_vfpfcnvrt 004C  
              ___aomod@counter 0017                 ??_appTimerInit 0007                       sprintf@f 00B4  
                     sprintf@s 00A8                 ??_appTimerStop 0007               ___lldiv@quotient 000F  
      __size_of_appGetElements 0070              fp__appGetElements 000E           __size_of_adcGetValue 003C  
              _appStateInitial 34AA               ?_sendinformation 0001                   ___aodiv@sign 0018  
         __end_of_appISRConfig 384C                   ___aomod@sign 0018  
