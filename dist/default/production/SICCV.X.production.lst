

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon May 31 00:15:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68  0000                     
    69                           ; Version 2.20
    70                           ; Generated 12/02/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4550 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  00311E                     __pidataBANK0:
   106                           	callstack 0
   107                           
   108                           ;initializer for _datos
   109  00311E  00                 	db	0
   110  00311F  00FF               	dw	255
   111  003121  00                 	db	0
   112  003122  0000               	dw	0
   113  003124  00                 	db	0
   114  003125  00                 	db	0
   115  003126  00                 	db	0
   116  003127  00                 	db	0
   117  003128  00                 	db	0
   118  003129  00                 	db	0
   119  00312A  00                 	db	0
   120  00312B  00                 	db	0
   121  00312C  00                 	db	0
   122  00312D  00                 	db	0
   123  00312E  00                 	db	0
   124  00312F  00                 	db	0
   125  003130  00                 	db	0
   126  003131  00                 	db	0
   127  003132  00                 	db	0
   128  003133  00                 	db	0
   129  003134  00                 	db	0
   130  003135  86                 	db	low _appStateInitial
   131  003136  30                 	db	high _appStateInitial
   132  0000                     _TMR0	set	4054
   133  0000                     _TMR3	set	4018
   134  0000                     _ADRES	set	4035
   135  0000                     _RCONbits	set	4048
   136  0000                     _PIE2bits	set	4000
   137  0000                     _IPR2bits	set	4002
   138  0000                     _PIR2bits	set	4001
   139  0000                     _INTCONbits	set	4082
   140  0000                     _T0CONbits	set	4053
   141  0000                     _T3CONbits	set	4017
   142  0000                     _LATBbits	set	3978
   143  0000                     _PIR1bits	set	3998
   144  0000                     _PR2	set	4043
   145  0000                     _TMR2	set	4044
   146  0000                     _TRISBbits	set	3987
   147  0000                     _T2CONbits	set	4042
   148  0000                     _LATDbits	set	3980
   149  0000                     _TRISDbits	set	3989
   150  0000                     _PORTBbits	set	3969
   151  0000                     _PORTB	set	3969
   152  0000                     _LATAbits	set	3977
   153  0000                     _TRISAbits	set	3986
   154  0000                     _INTCON2bits	set	4081
   155  0000                     _TRISB	set	3987
   156  0000                     _ADCON0bits	set	4034
   157  0000                     _ADCON2bits	set	4032
   158  0000                     _ADCON1bits	set	4033
   159  0000                     _TMR0IF	set	32658
   160  0000                     _TMR0IE	set	32661
   161  0000                     _TMR3IF	set	32009
   162  0000                     _TMR3IE	set	32001
   163  0000                     _GO_nDONE	set	32273
   164                           
   165                           	psect	smallconst
   166  000800                     __psmallconst:
   167                           	callstack 0
   168  000800  00                 	db	0
   169  000801                     STR_9:
   170  000801  52                 	db	82	;'R'
   171  000802  65                 	db	101	;'e'
   172  000803  63                 	db	99	;'c'
   173  000804  61                 	db	97	;'a'
   174  000805  72                 	db	114	;'r'
   175  000806  67                 	db	103	;'g'
   176  000807  61                 	db	97	;'a'
   177  000808  20                 	db	32
   178  000809  50                 	db	80	;'P'
   179  00080A  6F                 	db	111	;'o'
   180  00080B  72                 	db	114	;'r'
   181  00080C  20                 	db	32
   182  00080D  66                 	db	102	;'f'
   183  00080E  61                 	db	97	;'a'
   184  00080F  76                 	db	118	;'v'
   185  000810  6F                 	db	111	;'o'
   186  000811  72                 	db	114	;'r'
   187  000812  21                 	db	33
   188  000813  00                 	db	0
   189  000814                     STR_6:
   190  000814  43                 	db	67	;'C'
   191  000815  20                 	db	32
   192  000816  64                 	db	100	;'d'
   193  000817  65                 	db	101	;'e'
   194  000818  20                 	db	32
   195  000819  76                 	db	118	;'v'
   196  00081A  61                 	db	97	;'a'
   197  00081B  63                 	db	99	;'c'
   198  00081C  75                 	db	117	;'u'
   199  00081D  6E                 	db	110	;'n'
   200  00081E  61                 	db	97	;'a'
   201  00081F  73                 	db	115	;'s'
   202  000820  3A                 	db	58	;':'
   203  000821  00                 	db	0
   204  000822                     STR_1:
   205  000822  54                 	db	84	;'T'
   206  000823  3A                 	db	58	;':'
   207  000824  25                 	db	37
   208  000825  30                 	db	48	;'0'
   209  000826  32                 	db	50	;'2'
   210  000827  64                 	db	100	;'d'
   211  000828  2E                 	db	46
   212  000829  25                 	db	37
   213  00082A  30                 	db	48	;'0'
   214  00082B  32                 	db	50	;'2'
   215  00082C  64                 	db	100	;'d'
   216  00082D  20                 	db	32
   217  00082E  43                 	db	67	;'C'
   218  00082F  00                 	db	0
   219  000830                     STR_8:
   220  000830  53                 	db	83	;'S'
   221  000831  69                 	db	105	;'i'
   222  000832  6E                 	db	110	;'n'
   223  000833  20                 	db	32
   224  000834  76                 	db	118	;'v'
   225  000835  61                 	db	97	;'a'
   226  000836  63                 	db	99	;'c'
   227  000837  75                 	db	117	;'u'
   228  000838  6E                 	db	110	;'n'
   229  000839  61                 	db	97	;'a'
   230  00083A  73                 	db	115	;'s'
   231  00083B  00                 	db	0
   232  00083C                     STR_3:
   233  00083C  42                 	db	66	;'B'
   234  00083D  69                 	db	105	;'i'
   235  00083E  65                 	db	101	;'e'
   236  00083F  6E                 	db	110	;'n'
   237  000840  76                 	db	118	;'v'
   238  000841  65                 	db	101	;'e'
   239  000842  6E                 	db	110	;'n'
   240  000843  69                 	db	105	;'i'
   241  000844  64                 	db	100	;'d'
   242  000845  6F                 	db	111	;'o'
   243  000846  73                 	db	115	;'s'
   244  000847  00                 	db	0
   245  000848                     STR_2:
   246  000848  42                 	db	66	;'B'
   247  000849  61                 	db	97	;'a'
   248  00084A  74                 	db	116	;'t'
   249  00084B  3A                 	db	58	;':'
   250  00084C  25                 	db	37
   251  00084D  30                 	db	48	;'0'
   252  00084E  32                 	db	50	;'2'
   253  00084F  64                 	db	100	;'d'
   254  000850  00                 	db	0
   255  000851                     STR_4:
   256  000851  53                 	db	83	;'S'
   257  000852  49                 	db	73	;'I'
   258  000853  43                 	db	67	;'C'
   259  000854  43                 	db	67	;'C'
   260  000855  56                 	db	86	;'V'
   261  000856  00                 	db	0
   262  000857                     STR_5:
   263  000857  23                 	db	35
   264  000858  3A                 	db	58	;':'
   265  000859  25                 	db	37
   266  00085A  64                 	db	100	;'d'
   267  00085B  00                 	db	0
   268  00085C  00                 	db	0	; dummy byte at the end
   269  0000                     
   270                           ; #config settings
   271                           
   272                           	psect	cinit
   273  002EF2                     __pcinit:
   274                           	callstack 0
   275  002EF2                     start_initialization:
   276                           	callstack 0
   277  002EF2                     __initialization:
   278                           	callstack 0
   279                           
   280                           ; Initialize objects allocated to BANK0 (25 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282  002EF2  0E1E               	movlw	low __pidataBANK0
   283  002EF4  6EF6               	movwf	tblptrl,c
   284  002EF6  0E31               	movlw	high __pidataBANK0
   285  002EF8  6EF7               	movwf	tblptrh,c
   286  002EFA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287  002EFC  6EF8               	movwf	tblptru,c
   288  002EFE  EE00  F0B8         	lfsr	0,__pdataBANK0
   289  002F02  EE10 F019          	lfsr	1,25
   290  002F06                     copy_data0:
   291  002F06  0009               	tblrd		*+
   292  002F08  CFF5 FFEE          	movff	tablat,postinc0
   293  002F0C  50E5               	movf	postdec1,w,c
   294  002F0E  50E1               	movf	fsr1l,w,c
   295  002F10  E1FA               	bnz	copy_data0
   296                           
   297                           ; Clear objects allocated to BANK0 (42 bytes)
   298  002F12  EE00  F08E         	lfsr	0,__pbssBANK0
   299  002F16  0E2A               	movlw	42
   300  002F18                     clear_0:
   301  002F18  6AEE               	clrf	postinc0,c
   302  002F1A  06E8               	decf	wreg,f,c
   303  002F1C  E1FD               	bnz	clear_0
   304                           
   305                           ; Clear objects allocated to COMRAM (4 bytes)
   306  002F1E  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   307  002F20  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   308  002F22  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   309  002F24  6A58               	clrf	__pbssCOMRAM& (0+255),c
   310  002F26                     end_of_initialization:
   311                           	callstack 0
   312  002F26                     __end_of__initialization:
   313                           	callstack 0
   314  002F26  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   315  002F28  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   316  002F2A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   317  002F2C  6EF8               	movwf	tblptru,c
   318  002F2E  0100               	movlb	0
   319  002F30  EFF8  F015         	goto	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMRAM
   322  000058                     __pbssCOMRAM:
   323                           	callstack 0
   324  000058                     _prec:
   325                           	callstack 0
   326  000058                     	ds	2
   327  00005A                     _flags:
   328                           	callstack 0
   329  00005A                     	ds	2
   330                           
   331                           	psect	bssBANK0
   332  00008E                     __pbssBANK0:
   333                           	callstack 0
   334  00008E                     	ds	6
   335  000094                     _nout:
   336                           	callstack 0
   337  000094                     	ds	2
   338  000096                     _width:
   339                           	callstack 0
   340  000096                     	ds	2
   341  000098                     _dbuf:
   342                           	callstack 0
   343  000098                     	ds	32
   344                           
   345                           	psect	dataBANK0
   346  0000B8                     __pdataBANK0:
   347                           	callstack 0
   348  0000B8                     _datos:
   349                           	callstack 0
   350  0000B8                     	ds	25
   351                           
   352                           	psect	cstackBANK0
   353  000060                     __pcstackBANK0:
   354                           	callstack 0
   355  000060                     vfpfcnvrt@ll:
   356                           	callstack 0
   357                           
   358                           ; 8 bytes @ 0x0
   359  000060                     	ds	8
   360  000068                     vfpfcnvrt@done:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x8
   364  000068                     	ds	2
   365  00006A                     _vfpfcnvrt$1864:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0xA
   369  00006A                     	ds	2
   370  00006C                     ?_vfprintf:
   371                           	callstack 0
   372  00006C                     vfprintf@fp:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xC
   376  00006C                     	ds	2
   377  00006E                     vfprintf@fmt:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xE
   381  00006E                     	ds	2
   382  000070                     vfprintf@ap:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x10
   386  000070                     	ds	2
   387  000072                     ?_sprintf:
   388                           	callstack 0
   389  000072                     sprintf@s:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x12
   393  000072                     	ds	2
   394  000074                     sprintf@fmt:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x14
   398  000074                     	ds	8
   399  00007C                     sprintf@ap:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x1C
   403  00007C                     	ds	2
   404  00007E                     sprintf@f:
   405                           	callstack 0
   406                           
   407                           ; 6 bytes @ 0x1E
   408  00007E                     	ds	6
   409  000084                     appADC@data:
   410                           	callstack 0
   411  000084                     appBat@data:
   412                           	callstack 0
   413  000084                     appElemts@elements:
   414                           	callstack 0
   415  000084                     appSubGetData@data_Inout:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x24
   419  000084                     	ds	2
   420  000086                     ??_appBat:
   421  000086                     appSubGetData@cantidad:
   422                           	callstack 0
   423  000086                     appADC@lm35val:
   424                           	callstack 0
   425  000086                     appElemts@dataout:
   426                           	callstack 0
   427                           
   428                           ; 6 bytes @ 0x26
   429  000086                     	ds	2
   430  000088                     appSubGetData@inout:
   431                           	callstack 0
   432  000088                     _appBat$2173:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x28
   436  000088                     	ds	1
   437  000089                     ??_appGetElements:
   438                           
   439                           ; 1 bytes @ 0x29
   440  000089                     	ds	3
   441  00008C                     ??_main:
   442                           
   443                           ; 1 bytes @ 0x2C
   444  00008C                     	ds	2
   445                           
   446                           	psect	cstackCOMRAM
   447  000001                     __pcstackCOMRAM:
   448                           	callstack 0
   449  000001                     ??_isrL:
   450  000001                     
   451                           ; 1 bytes @ 0x0
   452  000001                     	ds	3
   453  000004                     ??_Lcd_Cmd:
   454  000004                     ??_Lcd_Chr_CP:
   455  000004                     ??_adcInit:
   456  000004                     ?_strlen:
   457                           	callstack 0
   458  000004                     ?_isdigit:
   459                           	callstack 0
   460  000004                     ?_isspace:
   461                           	callstack 0
   462  000004                     ?_adcGetValue:
   463                           	callstack 0
   464  000004                     ?___wmul:
   465                           	callstack 0
   466  000004                     ?___aodiv:
   467                           	callstack 0
   468  000004                     ?___aomod:
   469                           	callstack 0
   470  000004                     teclado@valor:
   471                           	callstack 0
   472  000004                     appCounterInit@reload:
   473                           	callstack 0
   474  000004                     appSubGiveElemts@data:
   475                           	callstack 0
   476  000004                     ___wmul@multiplier:
   477                           	callstack 0
   478  000004                     memset@dest:
   479                           	callstack 0
   480  000004                     isdigit@c:
   481                           	callstack 0
   482  000004                     isspace@c:
   483                           	callstack 0
   484  000004                     fputc@c:
   485                           	callstack 0
   486  000004                     strlen@s:
   487                           	callstack 0
   488  000004                     ___aodiv@dividend:
   489                           	callstack 0
   490  000004                     ___aomod@dividend:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x3
   494  000004                     	ds	1
   495  000005                     adcInit@ADC_PINs:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x4
   499  000005                     	ds	1
   500  000006                     ??_isdigit:
   501  000006                     ??_isspace:
   502  000006                     ??_adcGetValue:
   503  000006                     Lcd_Chr_CP@data:
   504                           	callstack 0
   505  000006                     Lcd_Cmd@data:
   506                           	callstack 0
   507  000006                     ___wmul@multiplicand:
   508                           	callstack 0
   509  000006                     memset@c:
   510                           	callstack 0
   511  000006                     fputc@fp:
   512                           	callstack 0
   513  000006                     strlen@a:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x5
   517  000006                     	ds	1
   518  000007                     ??_Lcd_Init:
   519  000007                     adcGetValue@PinADC:
   520                           	callstack 0
   521  000007                     Lcd_Out@x:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x6
   525  000007                     	ds	1
   526  000008                     ??_fputc:
   527  000008                     ?___xxtofl:
   528                           	callstack 0
   529  000008                     Lcd_Init@i:
   530                           	callstack 0
   531  000008                     Lcd_Out@buffer:
   532                           	callstack 0
   533  000008                     ___wmul@product:
   534                           	callstack 0
   535  000008                     memset@n:
   536                           	callstack 0
   537  000008                     ___xxtofl@val:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x7
   541  000008                     	ds	2
   542  00000A                     ??_memset:
   543  00000A                     ??_Lcd_Out:
   544  00000A                     _isspace$1902:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548  00000A                     	ds	1
   549  00000B                     ?_atoi:
   550                           	callstack 0
   551  00000B                     atoi@s:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xA
   555  00000B                     	ds	1
   556  00000C                     ??___xxtofl:
   557  00000C                     Lcd_Out@y:
   558                           	callstack 0
   559  00000C                     memset@k:
   560                           	callstack 0
   561  00000C                     ___aodiv@divisor:
   562                           	callstack 0
   563  00000C                     ___aomod@divisor:
   564                           	callstack 0
   565                           
   566                           ; 8 bytes @ 0xB
   567  00000C                     	ds	1
   568  00000D                     ??_atoi:
   569  00000D                     Lcd_Out@data:
   570                           	callstack 0
   571  00000D                     fputs@s:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0xC
   575  00000D                     	ds	1
   576  00000E                     ??_appLCD_Init:
   577  00000E                     ??_warning:
   578  00000E                     memset@s:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0xD
   582  00000E                     	ds	1
   583  00000F                     fputs@fp:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xE
   587  00000F                     	ds	1
   588  000010                     ___xxtofl@sign:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0xF
   592  000010                     	ds	1
   593  000011                     ___xxtofl@exp:
   594                           	callstack 0
   595  000011                     fputs@c:
   596                           	callstack 0
   597  000011                     atoi@neg:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x10
   601  000011                     	ds	1
   602  000012                     fputs@i:
   603                           	callstack 0
   604  000012                     ___xxtofl@arg:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x11
   608  000012                     	ds	1
   609  000013                     _atoi$1884:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x12
   613  000013                     	ds	1
   614  000014                     ?_pad:
   615                           	callstack 0
   616  000014                     ___aodiv@counter:
   617                           	callstack 0
   618  000014                     ___aomod@counter:
   619                           	callstack 0
   620  000014                     pad@fp:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x13
   624  000014                     	ds	1
   625  000015                     ___aodiv@sign:
   626                           	callstack 0
   627  000015                     ___aomod@sign:
   628                           	callstack 0
   629  000015                     _atoi$1886:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x14
   633  000015                     	ds	1
   634  000016                     ?_abs:
   635                           	callstack 0
   636  000016                     ?___flmul:
   637                           	callstack 0
   638  000016                     pad@buf:
   639                           	callstack 0
   640  000016                     abs@a:
   641                           	callstack 0
   642  000016                     ___flmul@b:
   643                           	callstack 0
   644  000016                     ___aodiv@quotient:
   645                           	callstack 0
   646                           
   647                           ; 8 bytes @ 0x15
   648  000016                     	ds	1
   649  000017                     _atoi$1885:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x16
   653  000017                     	ds	1
   654  000018                     ??_abs:
   655  000018                     pad@p:
   656                           	callstack 0
   657  000018                     atoi@n:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x17
   661  000018                     	ds	2
   662  00001A                     ??_pad:
   663  00001A                     ___flmul@a:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x19
   667  00001A                     	ds	1
   668  00001B                     pad@i:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x1A
   672  00001B                     	ds	2
   673  00001D                     pad@w:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x1C
   677  00001D                     	ds	1
   678  00001E                     ??___flmul:
   679                           
   680                           ; 1 bytes @ 0x1D
   681  00001E                     	ds	1
   682  00001F                     ?_dtoa:
   683                           	callstack 0
   684  00001F                     dtoa@fp:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x1E
   688  00001F                     	ds	2
   689  000021                     dtoa@d:
   690                           	callstack 0
   691                           
   692                           ; 8 bytes @ 0x20
   693  000021                     	ds	1
   694  000022                     ___flmul@sign:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x21
   698  000022                     	ds	1
   699  000023                     ___flmul@grs:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x22
   703  000023                     	ds	4
   704  000027                     ___flmul@aexp:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x26
   708  000027                     	ds	1
   709  000028                     ___flmul@bexp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x27
   713  000028                     	ds	1
   714  000029                     ??_dtoa:
   715  000029                     ___flmul@prod:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x28
   719  000029                     	ds	4
   720  00002D                     ___flmul@temp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x2C
   724  00002D                     	ds	2
   725  00002F                     ?___fldiv:
   726                           	callstack 0
   727  00002F                     ___fldiv@b:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x2E
   731  00002F                     	ds	2
   732  000031                     _dtoa$1849:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x30
   736  000031                     	ds	2
   737  000033                     dtoa@p:
   738                           	callstack 0
   739  000033                     ___fldiv@a:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x32
   743  000033                     	ds	2
   744  000035                     dtoa@w:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x34
   748  000035                     	ds	2
   749  000037                     ??___fldiv:
   750  000037                     dtoa@s:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x36
   754  000037                     	ds	2
   755  000039                     dtoa@n:
   756                           	callstack 0
   757                           
   758                           ; 8 bytes @ 0x38
   759  000039                     	ds	2
   760  00003B                     ___fldiv@rem:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x3A
   764  00003B                     	ds	4
   765  00003F                     ___fldiv@sign:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x3E
   769  00003F                     	ds	1
   770  000040                     ___fldiv@new_exp:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x3F
   774  000040                     	ds	1
   775  000041                     dtoa@i:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x40
   779  000041                     	ds	1
   780  000042                     ___fldiv@grs:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x41
   784  000042                     	ds	1
   785  000043                     ?_vfpfcnvrt:
   786                           	callstack 0
   787  000043                     vfpfcnvrt@fp:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x42
   791  000043                     	ds	2
   792  000045                     vfpfcnvrt@fmt:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x44
   796  000045                     	ds	1
   797  000046                     ___fldiv@bexp:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x45
   801  000046                     	ds	1
   802  000047                     ___fldiv@aexp:
   803                           	callstack 0
   804  000047                     vfpfcnvrt@ap:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x46
   808  000047                     	ds	1
   809  000048                     ?___fltol:
   810                           	callstack 0
   811  000048                     ___fltol@f1:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x47
   815  000048                     	ds	1
   816  000049                     ??_vfpfcnvrt:
   817                           
   818                           ; 1 bytes @ 0x48
   819  000049                     	ds	3
   820  00004C                     ??___fltol:
   821                           
   822                           ; 1 bytes @ 0x4B
   823  00004C                     	ds	1
   824  00004D                     vfprintf@cfmt:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x4C
   828  00004D                     	ds	3
   829  000050                     ___fltol@sign1:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0x4F
   833  000050                     	ds	1
   834  000051                     ___fltol@exp1:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x50
   838  000051                     	ds	1
   839  000052                     ?___awmod:
   840                           	callstack 0
   841  000052                     ___awmod@dividend:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x51
   845  000052                     	ds	2
   846  000054                     ___awmod@divisor:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x53
   850  000054                     	ds	2
   851  000056                     ___awmod@counter:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x55
   855  000056                     	ds	1
   856  000057                     ___awmod@sign:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x56
   860  000057                     	ds	1
   861  000058                     
   862                           ; 1 bytes @ 0x57
   863 ;;
   864 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   865 ;;
   866 ;; *************** function _main *****************
   867 ;; Defined at:
   868 ;;		line 12 in file "main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   882 ;;      Params:         0       0       0       0       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0       0       0
   884 ;;      Temps:          0       2       0       0       0       0       0       0       0
   885 ;;      Totals:         0       2       0       0       0       0       0       0       0
   886 ;;Total ram usage:        2 bytes
   887 ;; Hardware stack levels required when called:   12
   888 ;; This function calls:
   889 ;;		_appGetElements
   890 ;;		_appInit
   891 ;;		_appStateInitial
   892 ;;		_appStateRecolectData
   893 ;;		_warning
   894 ;; This function is called by:
   895 ;;		Startup code after reset
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text0
   900  002BF0                     __ptext0:
   901                           	callstack 0
   902  002BF0                     _main:
   903                           	callstack 19
   904  002BF0                     
   905                           ;main.c: 14:     TRISB = 0xF0;
   906  002BF0  0EF0               	movlw	240
   907  002BF2  6E93               	movwf	147,c	;volatile
   908  002BF4                     
   909                           ;main.c: 15:     INTCON2bits.RBPU = 0;
   910  002BF4  9EF1               	bcf	241,7,c	;volatile
   911  002BF6                     
   912                           ;main.c: 16:     TRISAbits.TRISA3 = 0;
   913  002BF6  9692               	bcf	146,3,c	;volatile
   914  002BF8                     
   915                           ;main.c: 17:     appInit();
   916  002BF8  EC7D  F018         	call	_appInit	;wreg free
   917  002BFC                     l4362:
   918                           
   919                           ;main.c: 19:     {;main.c: 20:         LATAbits.LA3 = !LATAbits.LA3;
   920  002BFC  A689               	btfss	137,3,c	;volatile
   921  002BFE  EF03  F016         	goto	u4351
   922  002C02  EF08  F016         	goto	u4350
   923  002C06                     u4351:
   924  002C06  0100               	movlb	0	; () banked
   925  002C08  6B8C               	clrf	??_main& (0+255),b
   926  002C0A  2B8C               	incf	??_main& (0+255),f,b
   927  002C0C  EF0A  F016         	goto	u4368
   928  002C10                     u4350:
   929  002C10  0100               	movlb	0	; () banked
   930  002C12  6B8C               	clrf	??_main& (0+255),b
   931  002C14                     u4368:
   932  002C14  478C               	rlncf	??_main& (0+255),f,b
   933  002C16  478C               	rlncf	??_main& (0+255),f,b
   934  002C18  478C               	rlncf	??_main& (0+255),f,b
   935  002C1A  5089               	movf	137,w,c	;volatile
   936  002C1C  198C               	xorwf	??_main& (0+255),w,b
   937  002C1E  0BF7               	andlw	-9
   938  002C20  198C               	xorwf	??_main& (0+255),w,b
   939  002C22  6E89               	movwf	137,c	;volatile
   940  002C24                     
   941                           ; BSR set to: 0
   942                           ;main.c: 21:         _delay((unsigned long)((100)*(12000000/4000.0)));
   943  002C24  0E02               	movlw	2
   944  002C26  0100               	movlb	0	; () banked
   945  002C28  6F8D               	movwf	(??_main+1)& (0+255),b
   946  002C2A  0E86               	movlw	134
   947  002C2C  6F8C               	movwf	??_main& (0+255),b
   948  002C2E  0E99               	movlw	153
   949  002C30                     u4437:
   950  002C30  2EE8               	decfsz	wreg,f,c
   951  002C32  D7FE               	bra	u4437
   952  002C34  2F8C               	decfsz	??_main& (0+255),f,b
   953  002C36  D7FC               	bra	u4437
   954  002C38  2F8D               	decfsz	(??_main+1)& (0+255),f,b
   955  002C3A  D7FA               	bra	u4437
   956  002C3C                     
   957                           ;main.c: 22:         datos.nextFunc();
   958  002C3C  EE20  F0CF         	lfsr	2,_datos+23
   959  002C40  D802               	call	u4378
   960  002C42  EF2D  F016         	goto	u4379
   961  002C46                     u4378:
   962  002C46  0005               	push	
   963  002C48  6EFA               	movwf	pclath,c
   964  002C4A  50DE               	movf	postinc2,w,c
   965  002C4C  6EFD               	movwf	tosl,c
   966  002C4E  50DE               	movf	postinc2,w,c
   967  002C50  6EFE               	movwf	tosh,c
   968  002C52  50F8               	movf	tblptru,w,c
   969  002C54  6EFF               	movwf	tosu,c
   970  002C56  50FA               	movf	pclath,w,c
   971  002C58  0012               	return		;indir
   972  002C5A                     u4379:
   973  002C5A  EFFE  F015         	goto	l4362
   974  002C5E  EF55  F000         	goto	start
   975  002C62                     __end_of_main:
   976                           	callstack 0
   977                           
   978 ;; *************** function _appGetElements *****************
   979 ;; Defined at:
   980 ;;		line 42 in file "app.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   994 ;;      Params:         0       0       0       0       0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0       0       0       0
   996 ;;      Temps:          0       2       0       0       0       0       0       0       0
   997 ;;      Totals:         0       2       0       0       0       0       0       0       0
   998 ;;Total ram usage:        2 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:   11
  1001 ;; This function calls:
  1002 ;;		_Lcd_Cmd
  1003 ;;		_appSubGetData
  1004 ;;		_appSubGiveElemts
  1005 ;;		_appTimerStart
  1006 ;;		_appTimerStop
  1007 ;; This function is called by:
  1008 ;;		_isrL
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text1
  1014  002C62                     __ptext1:
  1015                           	callstack 0
  1016  002C62                     _appGetElements:
  1017                           	callstack 19
  1018  002C62                     
  1019                           ;app.c: 44:     datos.state = 0;
  1020  002C62  0E00               	movlw	0
  1021  002C64  0100               	movlb	0	; () banked
  1022  002C66  6FBB               	movwf	(_datos+3)& (0+255),b
  1023  002C68                     
  1024                           ; BSR set to: 0
  1025                           ;app.c: 45:     appTimerStop();
  1026  002C68  ECB0  F018         	call	_appTimerStop	;wreg free
  1027  002C6C                     
  1028                           ;app.c: 46:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1029  002C6C  0E01               	movlw	1
  1030  002C6E  EC3B  F012         	call	_Lcd_Cmd
  1031  002C72  0E02               	movlw	2
  1032  002C74  0100               	movlb	0	; () banked
  1033  002C76  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
  1034  002C78  0E86               	movlw	134
  1035  002C7A  6F89               	movwf	??_appGetElements& (0+255),b
  1036  002C7C  0E99               	movlw	153
  1037  002C7E                     u4447:
  1038  002C7E  2EE8               	decfsz	wreg,f,c
  1039  002C80  D7FE               	bra	u4447
  1040  002C82  2F89               	decfsz	??_appGetElements& (0+255),f,b
  1041  002C84  D7FC               	bra	u4447
  1042  002C86  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1043  002C88  D7FA               	bra	u4447
  1044  002C8A                     
  1045                           ;app.c: 47:     appSubGetData(&datos);
  1046  002C8A  0EB8               	movlw	low _datos
  1047  002C8C  0100               	movlb	0	; () banked
  1048  002C8E  6F84               	movwf	appSubGetData@data_Inout& (0+255),b
  1049  002C90  0E00               	movlw	high _datos
  1050  002C92  6F85               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1051  002C94  EC53  F013         	call	_appSubGetData	;wreg free
  1052  002C98                     
  1053                           ;app.c: 48:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1054  002C98  0E01               	movlw	1
  1055  002C9A  EC3B  F012         	call	_Lcd_Cmd
  1056  002C9E  0E02               	movlw	2
  1057  002CA0  0100               	movlb	0	; () banked
  1058  002CA2  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
  1059  002CA4  0E86               	movlw	134
  1060  002CA6  6F89               	movwf	??_appGetElements& (0+255),b
  1061  002CA8  0E99               	movlw	153
  1062  002CAA                     u4457:
  1063  002CAA  2EE8               	decfsz	wreg,f,c
  1064  002CAC  D7FE               	bra	u4457
  1065  002CAE  2F89               	decfsz	??_appGetElements& (0+255),f,b
  1066  002CB0  D7FC               	bra	u4457
  1067  002CB2  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1068  002CB4  D7FA               	bra	u4457
  1069  002CB6                     
  1070                           ;app.c: 49:     appSubGiveElemts(&datos);
  1071  002CB6  0EB8               	movlw	low _datos
  1072  002CB8  6E04               	movwf	appSubGiveElemts@data^0,c
  1073  002CBA  0E00               	movlw	high _datos
  1074  002CBC  6E05               	movwf	(appSubGiveElemts@data+1)^0,c
  1075  002CBE  ECAD  F018         	call	_appSubGiveElemts	;wreg free
  1076  002CC2                     
  1077                           ;app.c: 50:     datos.nextFunc = appStateInitial;
  1078  002CC2  0E86               	movlw	low _appStateInitial
  1079  002CC4  0100               	movlb	0	; () banked
  1080  002CC6  6FCF               	movwf	(_datos+23)& (0+255),b
  1081  002CC8  0E30               	movlw	high _appStateInitial
  1082  002CCA  6FD0               	movwf	(_datos+24)& (0+255),b
  1083  002CCC                     
  1084                           ; BSR set to: 0
  1085                           ;app.c: 52:     appTimerStart();
  1086  002CCC  ECA3  F018         	call	_appTimerStart	;wreg free
  1087  002CD0  0012               	return		;funcret
  1088  002CD2                     __end_of_appGetElements:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _appStateRecolectData *****************
  1092 ;; Defined at:
  1093 ;;		line 24 in file "app.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:   11
  1114 ;; This function calls:
  1115 ;;		_appADC
  1116 ;;		_appBat
  1117 ;;		_appElemts
  1118 ;; This function is called by:
  1119 ;;		_isrL
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text2
  1125  002FE8                     __ptext2:
  1126                           	callstack 0
  1127  002FE8                     _appStateRecolectData:
  1128                           	callstack 19
  1129  002FE8                     
  1130                           ;app.c: 26:     appADC(&datos);
  1131  002FE8  0EB8               	movlw	low _datos
  1132  002FEA  0100               	movlb	0	; () banked
  1133  002FEC  6F84               	movwf	appADC@data& (0+255),b
  1134  002FEE  0E00               	movlw	high _datos
  1135  002FF0  6F85               	movwf	(appADC@data+1)& (0+255),b
  1136  002FF2  EC99  F011         	call	_appADC	;wreg free
  1137                           
  1138                           ;app.c: 27:     appBat(&datos);
  1139  002FF6  0EB8               	movlw	low _datos
  1140  002FF8  0100               	movlb	0	; () banked
  1141  002FFA  6F84               	movwf	appBat@data& (0+255),b
  1142  002FFC  0E00               	movlw	high _datos
  1143  002FFE  6F85               	movwf	(appBat@data+1)& (0+255),b
  1144  003000  EC2B  F00C         	call	_appBat	;wreg free
  1145                           
  1146                           ;app.c: 28:     appElemts(&datos.elements);
  1147  003004  0EB9               	movlw	low (_datos+1)
  1148  003006  0100               	movlb	0	; () banked
  1149  003008  6F84               	movwf	appElemts@elements& (0+255),b
  1150  00300A  0E00               	movlw	high (_datos+1)
  1151  00300C  6F85               	movwf	(appElemts@elements+1)& (0+255),b
  1152  00300E  EC34  F017         	call	_appElemts	;wreg free
  1153  003012                     
  1154                           ;app.c: 29:     datos.nextFunc = appStateInitial;
  1155  003012  0E86               	movlw	low _appStateInitial
  1156  003014  0100               	movlb	0	; () banked
  1157  003016  6FCF               	movwf	(_datos+23)& (0+255),b
  1158  003018  0E30               	movlw	high _appStateInitial
  1159  00301A  6FD0               	movwf	(_datos+24)& (0+255),b
  1160  00301C                     
  1161                           ; BSR set to: 0
  1162  00301C  0012               	return		;funcret
  1163  00301E                     __end_of_appStateRecolectData:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _appStateInitial *****************
  1167 ;; Defined at:
  1168 ;;		line 31 in file "app.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    3
  1189 ;; This function calls:
  1190 ;;		_teclado
  1191 ;; This function is called by:
  1192 ;;		_appStateRecolectData
  1193 ;;		_appGetElements
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text3
  1199  003086                     __ptext3:
  1200                           	callstack 0
  1201  003086                     _appStateInitial:
  1202                           	callstack 27
  1203  003086                     
  1204                           ;app.c: 34:     teclado(&datos.character);
  1205  003086  0EBE               	movlw	low (_datos+6)
  1206  003088  6E04               	movwf	teclado@valor^0,c
  1207  00308A  0E00               	movlw	high (_datos+6)
  1208  00308C  6E05               	movwf	(teclado@valor+1)^0,c
  1209  00308E  EC36  F00B         	call	_teclado	;wreg free
  1210  003092                     
  1211                           ;app.c: 35:     if(datos.character != 0)
  1212  003092  0100               	movlb	0	; () banked
  1213  003094  51BE               	movf	(_datos+6)& (0+255),w,b
  1214  003096  B4D8               	btfsc	status,2,c
  1215  003098  EF50  F018         	goto	u3571
  1216  00309C  EF52  F018         	goto	u3570
  1217  0030A0                     u3571:
  1218  0030A0  EF56  F018         	goto	l285
  1219  0030A4                     u3570:
  1220  0030A4                     
  1221                           ; BSR set to: 0
  1222                           ;app.c: 36:     {;app.c: 37:         datos.state = 1;
  1223  0030A4  0E01               	movlw	1
  1224  0030A6  6FBB               	movwf	(_datos+3)& (0+255),b
  1225                           
  1226                           ;app.c: 38:         datos.character = 0;
  1227  0030A8  0E00               	movlw	0
  1228  0030AA  6FBE               	movwf	(_datos+6)& (0+255),b
  1229  0030AC                     l285:
  1230                           
  1231                           ; BSR set to: 0
  1232  0030AC  0012               	return		;funcret
  1233  0030AE                     __end_of_appStateInitial:
  1234                           	callstack 0
  1235                           
  1236 ;; *************** function _warning *****************
  1237 ;; Defined at:
  1238 ;;		line 84 in file "app.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1252 ;;      Params:         0       0       0       0       0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1254 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1255 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1256 ;;Total ram usage:        2 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    4
  1259 ;; This function calls:
  1260 ;;		_Lcd_Cmd
  1261 ;;		_Lcd_Out
  1262 ;; This function is called by:
  1263 ;;		_isrH
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text4
  1269  002DD8                     __ptext4:
  1270                           	callstack 0
  1271  002DD8                     _warning:
  1272                           	callstack 26
  1273  002DD8                     
  1274                           ;app.c: 86:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1275  002DD8  0E01               	movlw	1
  1276  002DDA  EC3B  F012         	call	_Lcd_Cmd
  1277  002DDE  0E02               	movlw	2
  1278  002DE0  6E0F               	movwf	(??_warning+1)^0,c
  1279  002DE2  0E86               	movlw	134
  1280  002DE4  6E0E               	movwf	??_warning^0,c
  1281  002DE6  0E99               	movlw	153
  1282  002DE8                     u4467:
  1283  002DE8  2EE8               	decfsz	wreg,f,c
  1284  002DEA  D7FE               	bra	u4467
  1285  002DEC  2E0E               	decfsz	??_warning^0,f,c
  1286  002DEE  D7FC               	bra	u4467
  1287  002DF0  2E0F               	decfsz	(??_warning+1)^0,f,c
  1288  002DF2  D7FA               	bra	u4467
  1289  002DF4  F000               	nop	
  1290  002DF6                     l3758:
  1291                           
  1292                           ;app.c: 88:     {;app.c: 89:         Lcd_Out(1,0, (const int8_t*)"Sin vacunas");
  1293  002DF6  0E00               	movlw	0
  1294  002DF8  6E07               	movwf	Lcd_Out@x^0,c
  1295  002DFA  0E30               	movlw	low STR_8
  1296  002DFC  6E08               	movwf	Lcd_Out@buffer^0,c
  1297  002DFE  0E08               	movlw	high STR_8
  1298  002E00  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1299  002E02  0E01               	movlw	1
  1300  002E04  ECD2  F013         	call	_Lcd_Out
  1301  002E08                     
  1302                           ;app.c: 90:         Lcd_Out(2,0, (const int8_t*)"Recarga Por favor!");
  1303  002E08  0E00               	movlw	0
  1304  002E0A  6E07               	movwf	Lcd_Out@x^0,c
  1305  002E0C  0E01               	movlw	low STR_9
  1306  002E0E  6E08               	movwf	Lcd_Out@buffer^0,c
  1307  002E10  0E08               	movlw	high STR_9
  1308  002E12  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1309  002E14  0E02               	movlw	2
  1310  002E16  ECD2  F013         	call	_Lcd_Out
  1311  002E1A  EFFB  F016         	goto	l3758
  1312  002E1E  0012               	return		;funcret
  1313  002E20                     __end_of_warning:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _appElemts *****************
  1317 ;; Defined at:
  1318 ;;		line 118 in file "servo.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  elements        2   36[BANK0 ] PTR const short 
  1321 ;;		 -> datos.elements(2), datos(25), 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  dataout         6   38[BANK0 ] unsigned char [6]
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1333 ;;      Params:         0       2       0       0       0       0       0       0       0
  1334 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1336 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1337 ;;Total ram usage:        8 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:   10
  1340 ;; This function calls:
  1341 ;;		_Lcd_Out
  1342 ;;		_sprintf
  1343 ;; This function is called by:
  1344 ;;		_appStateRecolectData
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text5
  1349  002E68                     __ptext5:
  1350                           	callstack 0
  1351  002E68                     _appElemts:
  1352                           	callstack 19
  1353  002E68                     
  1354                           ;servo.c: 118: void appElemts(const int16_t * elements);servo.c: 119: {;servo.c: 120:   
      +                            uint8_t dataout[6] = {0};
  1355  002E68  EE20  F086         	lfsr	2,appElemts@dataout
  1356  002E6C  0E05               	movlw	5
  1357  002E6E                     u4311:
  1358  002E6E  6ADE               	clrf	postinc2,c
  1359  002E70  06E8               	decf	wreg,f,c
  1360  002E72  E2FD               	bc	u4311
  1361  002E74                     
  1362                           ;servo.c: 121:     sprintf((char *)dataout,"#:%d",*elements);
  1363  002E74  0E86               	movlw	low appElemts@dataout
  1364  002E76  0100               	movlb	0	; () banked
  1365  002E78  6F72               	movwf	sprintf@s& (0+255),b
  1366  002E7A  0E00               	movlw	high appElemts@dataout
  1367  002E7C  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1368  002E7E  0E57               	movlw	low STR_5
  1369  002E80  6F74               	movwf	sprintf@fmt& (0+255),b
  1370  002E82  0E08               	movlw	high STR_5
  1371  002E84  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1372  002E86  C084  FFD9         	movff	appElemts@elements,fsr2l
  1373  002E8A  C085  FFDA         	movff	appElemts@elements+1,fsr2h
  1374  002E8E  CFDE F076          	movff	postinc2,?_sprintf+4
  1375  002E92  CFDD F077          	movff	postdec2,?_sprintf+5
  1376  002E96  EC9A  F016         	call	_sprintf	;wreg free
  1377  002E9A                     
  1378                           ;servo.c: 122:     Lcd_Out(2,10, (int8_t*)dataout);
  1379  002E9A  0E0A               	movlw	10
  1380  002E9C  6E07               	movwf	Lcd_Out@x^0,c
  1381  002E9E  0E86               	movlw	low appElemts@dataout
  1382  002EA0  6E08               	movwf	Lcd_Out@buffer^0,c
  1383  002EA2  0E00               	movlw	high appElemts@dataout
  1384  002EA4  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1385  002EA6  0E02               	movlw	2
  1386  002EA8  ECD2  F013         	call	_Lcd_Out
  1387  002EAC  0012               	return		;funcret
  1388  002EAE                     __end_of_appElemts:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _appBat *****************
  1392 ;; Defined at:
  1393 ;;		line 63 in file "adc.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  data            2   36[BANK0 ] PTR struct _state
  1396 ;;		 -> datos(25), 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1408 ;;      Params:         0       2       0       0       0       0       0       0       0
  1409 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1410 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1411 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1412 ;;Total ram usage:        8 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:   10
  1415 ;; This function calls:
  1416 ;;		_Lcd_Out
  1417 ;;		___fldiv
  1418 ;;		___flmul
  1419 ;;		___fltol
  1420 ;;		___xxtofl
  1421 ;;		_adcGetValue
  1422 ;;		_memset
  1423 ;;		_sprintf
  1424 ;; This function is called by:
  1425 ;;		_appStateRecolectData
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text6
  1430  001856                     __ptext6:
  1431                           	callstack 0
  1432  001856                     _appBat:
  1433                           	callstack 19
  1434  001856                     
  1435                           ;adc.c: 63: void appBat(StateMachine *data);adc.c: 64: {;adc.c: 65:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1436  001856  0E07               	movlw	7
  1437  001858  0100               	movlb	0	; () banked
  1438  00185A  2584               	addwf	appBat@data& (0+255),w,b
  1439  00185C  6E04               	movwf	memset@dest^0,c
  1440  00185E  0E00               	movlw	0
  1441  001860  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1442  001862  6E05               	movwf	(memset@dest+1)^0,c
  1443  001864  0E00               	movlw	0
  1444  001866  6E07               	movwf	(memset@c+1)^0,c
  1445  001868  0E00               	movlw	0
  1446  00186A  6E06               	movwf	memset@c^0,c
  1447  00186C  0E00               	movlw	0
  1448  00186E  6E09               	movwf	(memset@n+1)^0,c
  1449  001870  0E10               	movlw	16
  1450  001872  6E08               	movwf	memset@n^0,c
  1451  001874  EC85  F00F         	call	_memset	;wreg free
  1452                           
  1453                           ;adc.c: 70:     data->bat = adcGetValue(1);
  1454  001878  0E01               	movlw	1
  1455  00187A  ECBA  F017         	call	_adcGetValue
  1456  00187E  0100               	movlb	0	; () banked
  1457  001880  EE20 F004          	lfsr	2,4
  1458  001884  5184               	movf	appBat@data& (0+255),w,b
  1459  001886  26D9               	addwf	fsr2l,f,c
  1460  001888  5185               	movf	(appBat@data+1)& (0+255),w,b
  1461  00188A  22DA               	addwfc	fsr2h,f,c
  1462  00188C  C004  FFDE         	movff	?_adcGetValue,postinc2
  1463  001890  C005  FFDD         	movff	?_adcGetValue+1,postdec2
  1464  001894                     
  1465                           ; BSR set to: 0
  1466                           ;adc.c: 71:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1467  001894  0E00               	movlw	0
  1468  001896  6E33               	movwf	___fldiv@a^0,c
  1469  001898  0E00               	movlw	0
  1470  00189A  6E34               	movwf	(___fldiv@a+1)^0,c
  1471  00189C  0E80               	movlw	128
  1472  00189E  6E35               	movwf	(___fldiv@a+2)^0,c
  1473  0018A0  0E44               	movlw	68
  1474  0018A2  6E36               	movwf	(___fldiv@a+3)^0,c
  1475  0018A4  0E00               	movlw	0
  1476  0018A6  6E1A               	movwf	___flmul@a^0,c
  1477  0018A8  0E00               	movlw	0
  1478  0018AA  6E1B               	movwf	(___flmul@a+1)^0,c
  1479  0018AC  0EA0               	movlw	160
  1480  0018AE  6E1C               	movwf	(___flmul@a+2)^0,c
  1481  0018B0  0E40               	movlw	64
  1482  0018B2  6E1D               	movwf	(___flmul@a+3)^0,c
  1483  0018B4  EE20 F004          	lfsr	2,4
  1484  0018B8  5184               	movf	appBat@data& (0+255),w,b
  1485  0018BA  26D9               	addwf	fsr2l,f,c
  1486  0018BC  5185               	movf	(appBat@data+1)& (0+255),w,b
  1487  0018BE  22DA               	addwfc	fsr2h,f,c
  1488  0018C0  CFDE F086          	movff	postinc2,??_appBat
  1489  0018C4  CFDD F087          	movff	postdec2,??_appBat+1
  1490  0018C8  C086  F008         	movff	??_appBat,___xxtofl@val
  1491  0018CC  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1492  0018D0  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1493  0018D2  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1494  0018D4  0E00               	movlw	0
  1495  0018D6  EC1F  F00D         	call	___xxtofl
  1496  0018DA  C008  F016         	movff	?___xxtofl,___flmul@b
  1497  0018DE  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1498  0018E2  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1499  0018E6  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1500  0018EA  EC2F  F004         	call	___flmul	;wreg free
  1501  0018EE  C016  F02F         	movff	?___flmul,___fldiv@b
  1502  0018F2  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1503  0018F6  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1504  0018FA  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1505  0018FE  EC44  F006         	call	___fldiv	;wreg free
  1506  001902  C02F  F088         	movff	?___fldiv,_appBat$2173
  1507  001906  C030  F089         	movff	?___fldiv+1,_appBat$2173+1
  1508  00190A  C031  F08A         	movff	?___fldiv+2,_appBat$2173+2
  1509  00190E  C032  F08B         	movff	?___fldiv+3,_appBat$2173+3
  1510  001912                     
  1511                           ;adc.c: 71:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1512  001912  0E00               	movlw	0
  1513  001914  6E1A               	movwf	___flmul@a^0,c
  1514  001916  0E00               	movlw	0
  1515  001918  6E1B               	movwf	(___flmul@a+1)^0,c
  1516  00191A  0EC8               	movlw	200
  1517  00191C  6E1C               	movwf	(___flmul@a+2)^0,c
  1518  00191E  0E42               	movlw	66
  1519  001920  6E1D               	movwf	(___flmul@a+3)^0,c
  1520  001922  C088  F016         	movff	_appBat$2173,___flmul@b
  1521  001926  C089  F017         	movff	_appBat$2173+1,___flmul@b+1
  1522  00192A  C08A  F018         	movff	_appBat$2173+2,___flmul@b+2
  1523  00192E  C08B  F019         	movff	_appBat$2173+3,___flmul@b+3
  1524  001932  EC2F  F004         	call	___flmul	;wreg free
  1525  001936  C016  F048         	movff	?___flmul,___fltol@f1
  1526  00193A  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1527  00193E  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1528  001942  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1529  001946  ECD0  F012         	call	___fltol	;wreg free
  1530  00194A  0100               	movlb	0	; () banked
  1531  00194C  EE20 F004          	lfsr	2,4
  1532  001950  5184               	movf	appBat@data& (0+255),w,b
  1533  001952  26D9               	addwf	fsr2l,f,c
  1534  001954  5185               	movf	(appBat@data+1)& (0+255),w,b
  1535  001956  22DA               	addwfc	fsr2h,f,c
  1536  001958  C048  FFDE         	movff	?___fltol,postinc2
  1537  00195C  C049  FFDD         	movff	?___fltol+1,postdec2
  1538  001960                     
  1539                           ; BSR set to: 0
  1540                           ;adc.c: 72:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  1541  001960  0E00               	movlw	0
  1542  001962  6E33               	movwf	___fldiv@a^0,c
  1543  001964  0E00               	movlw	0
  1544  001966  6E34               	movwf	(___fldiv@a+1)^0,c
  1545  001968  0EFA               	movlw	250
  1546  00196A  6E35               	movwf	(___fldiv@a+2)^0,c
  1547  00196C  0E43               	movlw	67
  1548  00196E  6E36               	movwf	(___fldiv@a+3)^0,c
  1549  001970  0E00               	movlw	0
  1550  001972  6E1A               	movwf	___flmul@a^0,c
  1551  001974  0E00               	movlw	0
  1552  001976  6E1B               	movwf	(___flmul@a+1)^0,c
  1553  001978  0EC8               	movlw	200
  1554  00197A  6E1C               	movwf	(___flmul@a+2)^0,c
  1555  00197C  0E42               	movlw	66
  1556  00197E  6E1D               	movwf	(___flmul@a+3)^0,c
  1557  001980  EE20 F004          	lfsr	2,4
  1558  001984  5184               	movf	appBat@data& (0+255),w,b
  1559  001986  26D9               	addwf	fsr2l,f,c
  1560  001988  5185               	movf	(appBat@data+1)& (0+255),w,b
  1561  00198A  22DA               	addwfc	fsr2h,f,c
  1562  00198C  CFDE F086          	movff	postinc2,??_appBat
  1563  001990  CFDD F087          	movff	postdec2,??_appBat+1
  1564  001994  C086  F008         	movff	??_appBat,___xxtofl@val
  1565  001998  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1566  00199C  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1567  00199E  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1568  0019A0  0E00               	movlw	0
  1569  0019A2  EC1F  F00D         	call	___xxtofl
  1570  0019A6  C008  F016         	movff	?___xxtofl,___flmul@b
  1571  0019AA  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1572  0019AE  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1573  0019B2  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1574  0019B6  EC2F  F004         	call	___flmul	;wreg free
  1575  0019BA  C016  F02F         	movff	?___flmul,___fldiv@b
  1576  0019BE  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1577  0019C2  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1578  0019C6  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1579  0019CA  EC44  F006         	call	___fldiv	;wreg free
  1580  0019CE  C02F  F048         	movff	?___fldiv,___fltol@f1
  1581  0019D2  C030  F049         	movff	?___fldiv+1,___fltol@f1+1
  1582  0019D6  C031  F04A         	movff	?___fldiv+2,___fltol@f1+2
  1583  0019DA  C032  F04B         	movff	?___fldiv+3,___fltol@f1+3
  1584  0019DE  ECD0  F012         	call	___fltol	;wreg free
  1585  0019E2  0100               	movlb	0	; () banked
  1586  0019E4  EE20 F004          	lfsr	2,4
  1587  0019E8  5184               	movf	appBat@data& (0+255),w,b
  1588  0019EA  26D9               	addwf	fsr2l,f,c
  1589  0019EC  5185               	movf	(appBat@data+1)& (0+255),w,b
  1590  0019EE  22DA               	addwfc	fsr2h,f,c
  1591  0019F0  C048  FFDE         	movff	?___fltol,postinc2
  1592  0019F4  C049  FFDD         	movff	?___fltol+1,postdec2
  1593  0019F8                     
  1594                           ; BSR set to: 0
  1595                           ;adc.c: 73:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  1596  0019F8  0E07               	movlw	7
  1597  0019FA  2584               	addwf	appBat@data& (0+255),w,b
  1598  0019FC  6F72               	movwf	sprintf@s& (0+255),b
  1599  0019FE  0E00               	movlw	0
  1600  001A00  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1601  001A02  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1602  001A04  0E48               	movlw	low STR_2
  1603  001A06  6F74               	movwf	sprintf@fmt& (0+255),b
  1604  001A08  0E08               	movlw	high STR_2
  1605  001A0A  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1606  001A0C  EE20 F004          	lfsr	2,4
  1607  001A10  5184               	movf	appBat@data& (0+255),w,b
  1608  001A12  26D9               	addwf	fsr2l,f,c
  1609  001A14  5185               	movf	(appBat@data+1)& (0+255),w,b
  1610  001A16  22DA               	addwfc	fsr2h,f,c
  1611  001A18  CFDE F076          	movff	postinc2,?_sprintf+4
  1612  001A1C  CFDD F077          	movff	postdec2,?_sprintf+5
  1613  001A20  EC9A  F016         	call	_sprintf	;wreg free
  1614  001A24                     
  1615                           ;adc.c: 74:     Lcd_Out(2,0, (int8_t*)data->display);
  1616  001A24  0E00               	movlw	0
  1617  001A26  6E07               	movwf	Lcd_Out@x^0,c
  1618  001A28  0E07               	movlw	7
  1619  001A2A  0100               	movlb	0	; () banked
  1620  001A2C  2584               	addwf	appBat@data& (0+255),w,b
  1621  001A2E  6E08               	movwf	Lcd_Out@buffer^0,c
  1622  001A30  0E00               	movlw	0
  1623  001A32  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1624  001A34  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1625  001A36  0E02               	movlw	2
  1626  001A38  ECD2  F013         	call	_Lcd_Out
  1627  001A3C  0012               	return		;funcret
  1628  001A3E                     __end_of_appBat:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _appADC *****************
  1632 ;; Defined at:
  1633 ;;		line 53 in file "adc.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  data            2   36[BANK0 ] PTR struct _state
  1636 ;;		 -> datos(25), 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  lm35val         4   38[BANK0 ] float 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1648 ;;      Params:         0       2       0       0       0       0       0       0       0
  1649 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1651 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1652 ;;Total ram usage:        6 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:   10
  1655 ;; This function calls:
  1656 ;;		_Lcd_Out
  1657 ;;		___awmod
  1658 ;;		___fldiv
  1659 ;;		___flmul
  1660 ;;		___fltol
  1661 ;;		___xxtofl
  1662 ;;		_adcGetValue
  1663 ;;		_memset
  1664 ;;		_sprintf
  1665 ;; This function is called by:
  1666 ;;		_appStateRecolectData
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text7
  1671  002332                     __ptext7:
  1672                           	callstack 0
  1673  002332                     _appADC:
  1674                           	callstack 19
  1675  002332                     
  1676                           ;adc.c: 53: void appADC(StateMachine *data);adc.c: 54: {;adc.c: 55:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1677  002332  0E07               	movlw	7
  1678  002334  0100               	movlb	0	; () banked
  1679  002336  2584               	addwf	appADC@data& (0+255),w,b
  1680  002338  6E04               	movwf	memset@dest^0,c
  1681  00233A  0E00               	movlw	0
  1682  00233C  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1683  00233E  6E05               	movwf	(memset@dest+1)^0,c
  1684  002340  0E00               	movlw	0
  1685  002342  6E07               	movwf	(memset@c+1)^0,c
  1686  002344  0E00               	movlw	0
  1687  002346  6E06               	movwf	memset@c^0,c
  1688  002348  0E00               	movlw	0
  1689  00234A  6E09               	movwf	(memset@n+1)^0,c
  1690  00234C  0E10               	movlw	16
  1691  00234E  6E08               	movwf	memset@n^0,c
  1692  002350  EC85  F00F         	call	_memset	;wreg free
  1693  002354                     
  1694                           ;adc.c: 56:     float lm35val = adcGetValue(0);
  1695  002354  0E00               	movlw	0
  1696  002356  ECBA  F017         	call	_adcGetValue
  1697  00235A  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1698  00235E  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1699  002362  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1700  002364  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1701  002366  0E00               	movlw	0
  1702  002368  EC1F  F00D         	call	___xxtofl
  1703  00236C  C008  F086         	movff	?___xxtofl,appADC@lm35val
  1704  002370  C009  F087         	movff	?___xxtofl+1,appADC@lm35val+1
  1705  002374  C00A  F088         	movff	?___xxtofl+2,appADC@lm35val+2
  1706  002378  C00B  F089         	movff	?___xxtofl+3,appADC@lm35val+3
  1707  00237C                     
  1708                           ;adc.c: 57:     lm35val = (float)((lm35val*4.88)/10.0);
  1709  00237C  0EF6               	movlw	246
  1710  00237E  6E1A               	movwf	___flmul@a^0,c
  1711  002380  0E28               	movlw	40
  1712  002382  6E1B               	movwf	(___flmul@a+1)^0,c
  1713  002384  0E9C               	movlw	156
  1714  002386  6E1C               	movwf	(___flmul@a+2)^0,c
  1715  002388  0E40               	movlw	64
  1716  00238A  6E1D               	movwf	(___flmul@a+3)^0,c
  1717  00238C  C086  F016         	movff	appADC@lm35val,___flmul@b
  1718  002390  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1719  002394  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1720  002398  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1721  00239C  EC2F  F004         	call	___flmul	;wreg free
  1722  0023A0  C016  F02F         	movff	?___flmul,___fldiv@b
  1723  0023A4  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1724  0023A8  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1725  0023AC  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1726  0023B0  0E00               	movlw	0
  1727  0023B2  6E33               	movwf	___fldiv@a^0,c
  1728  0023B4  0E00               	movlw	0
  1729  0023B6  6E34               	movwf	(___fldiv@a+1)^0,c
  1730  0023B8  0E20               	movlw	32
  1731  0023BA  6E35               	movwf	(___fldiv@a+2)^0,c
  1732  0023BC  0E41               	movlw	65
  1733  0023BE  6E36               	movwf	(___fldiv@a+3)^0,c
  1734  0023C0  EC44  F006         	call	___fldiv	;wreg free
  1735  0023C4  C02F  F086         	movff	?___fldiv,appADC@lm35val
  1736  0023C8  C030  F087         	movff	?___fldiv+1,appADC@lm35val+1
  1737  0023CC  C031  F088         	movff	?___fldiv+2,appADC@lm35val+2
  1738  0023D0  C032  F089         	movff	?___fldiv+3,appADC@lm35val+3
  1739  0023D4                     
  1740                           ;adc.c: 59:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  1741  0023D4  0E07               	movlw	7
  1742  0023D6  0100               	movlb	0	; () banked
  1743  0023D8  2584               	addwf	appADC@data& (0+255),w,b
  1744  0023DA  6F72               	movwf	sprintf@s& (0+255),b
  1745  0023DC  0E00               	movlw	0
  1746  0023DE  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1747  0023E0  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1748  0023E2  0E22               	movlw	low STR_1
  1749  0023E4  6F74               	movwf	sprintf@fmt& (0+255),b
  1750  0023E6  0E08               	movlw	high STR_1
  1751  0023E8  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1752  0023EA  C086  F048         	movff	appADC@lm35val,___fltol@f1
  1753  0023EE  C087  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1754  0023F2  C088  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1755  0023F6  C089  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1756  0023FA  ECD0  F012         	call	___fltol	;wreg free
  1757  0023FE  5048               	movf	?___fltol^0,w,c
  1758  002400  0100               	movlb	0	; () banked
  1759  002402  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1760  002404  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1761  002406  0E00               	movlw	0
  1762  002408  6E1A               	movwf	___flmul@a^0,c
  1763  00240A  0E00               	movlw	0
  1764  00240C  6E1B               	movwf	(___flmul@a+1)^0,c
  1765  00240E  0EC8               	movlw	200
  1766  002410  6E1C               	movwf	(___flmul@a+2)^0,c
  1767  002412  0E42               	movlw	66
  1768  002414  6E1D               	movwf	(___flmul@a+3)^0,c
  1769  002416  C086  F016         	movff	appADC@lm35val,___flmul@b
  1770  00241A  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1771  00241E  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1772  002422  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1773  002426  EC2F  F004         	call	___flmul	;wreg free
  1774  00242A  C016  F048         	movff	?___flmul,___fltol@f1
  1775  00242E  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1776  002432  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1777  002436  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1778  00243A  ECD0  F012         	call	___fltol	;wreg free
  1779  00243E  5048               	movf	?___fltol^0,w,c
  1780  002440  6E52               	movwf	___awmod@dividend^0,c
  1781  002442  6A53               	clrf	(___awmod@dividend+1)^0,c
  1782  002444  0E00               	movlw	0
  1783  002446  6E55               	movwf	(___awmod@divisor+1)^0,c
  1784  002448  0E64               	movlw	100
  1785  00244A  6E54               	movwf	___awmod@divisor^0,c
  1786  00244C  EC5E  F015         	call	___awmod	;wreg free
  1787  002450  5052               	movf	?___awmod^0,w,c
  1788  002452  0100               	movlb	0	; () banked
  1789  002454  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1790  002456  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1791  002458  EC9A  F016         	call	_sprintf	;wreg free
  1792  00245C                     
  1793                           ;adc.c: 60:     Lcd_Out(1,0, (int8_t*)data->display);
  1794  00245C  0E00               	movlw	0
  1795  00245E  6E07               	movwf	Lcd_Out@x^0,c
  1796  002460  0E07               	movlw	7
  1797  002462  0100               	movlb	0	; () banked
  1798  002464  2584               	addwf	appADC@data& (0+255),w,b
  1799  002466  6E08               	movwf	Lcd_Out@buffer^0,c
  1800  002468  0E00               	movlw	0
  1801  00246A  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1802  00246C  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1803  00246E  0E01               	movlw	1
  1804  002470  ECD2  F013         	call	_Lcd_Out
  1805  002474  0012               	return		;funcret
  1806  002476                     __end_of_appADC:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _adcGetValue *****************
  1810 ;; Defined at:
  1811 ;;		line 42 in file "adc.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  PinADC          1    wreg     unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  PinADC          1    6[COMRAM] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2    3[COMRAM] unsigned short 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1825 ;;      Params:         2       0       0       0       0       0       0       0       0
  1826 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1827 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1828 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    2
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_appADC
  1836 ;;		_appBat
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text8
  1841  002F74                     __ptext8:
  1842                           	callstack 0
  1843  002F74                     _adcGetValue:
  1844                           	callstack 26
  1845                           
  1846                           ;incstack = 0
  1847                           ;adcGetValue@PinADC stored from wreg
  1848  002F74  6E07               	movwf	adcGetValue@PinADC^0,c
  1849  002F76                     
  1850                           ;adc.c: 42: uint16_t adcGetValue(uint8_t PinADC);adc.c: 43: {;adc.c: 44:     ADCON0bits.
      +                          CHS = PinADC;
  1851  002F76  C007  F006         	movff	adcGetValue@PinADC,??_adcGetValue
  1852  002F7A  4606               	rlncf	??_adcGetValue^0,f,c
  1853  002F7C  4606               	rlncf	??_adcGetValue^0,f,c
  1854  002F7E  50C2               	movf	194,w,c	;volatile
  1855  002F80  1806               	xorwf	??_adcGetValue^0,w,c
  1856  002F82  0BC3               	andlw	-61
  1857  002F84  1806               	xorwf	??_adcGetValue^0,w,c
  1858  002F86  6EC2               	movwf	194,c	;volatile
  1859  002F88                     
  1860                           ;adc.c: 45:     _delay((unsigned long)((2)*(12000000/4000.0)));
  1861  002F88  0E08               	movlw	8
  1862  002F8A  6E06               	movwf	??_adcGetValue^0,c
  1863  002F8C  0ECA               	movlw	202
  1864  002F8E                     u4477:
  1865  002F8E  2EE8               	decfsz	wreg,f,c
  1866  002F90  D7FE               	bra	u4477
  1867  002F92  2E06               	decfsz	??_adcGetValue^0,f,c
  1868  002F94  D7FC               	bra	u4477
  1869  002F96                     
  1870                           ;adc.c: 46:     GO_nDONE = 1;
  1871  002F96  82C2               	bsf	4034,1,c	;volatile
  1872  002F98                     l26:
  1873                           
  1874                           ;adc.c: 47:     while(ADCON0bits.GO_DONE)
  1875  002F98  B2C2               	btfsc	194,1,c	;volatile
  1876  002F9A  EFD1  F017         	goto	u2591
  1877  002F9E  EFD3  F017         	goto	u2590
  1878  002FA2                     u2591:
  1879  002FA2  EFCC  F017         	goto	l26
  1880  002FA6                     u2590:
  1881  002FA6                     
  1882                           ;adc.c: 50:     return ADRES;
  1883  002FA6  CFC3 F004          	movff	4035,?_adcGetValue	;volatile
  1884  002FAA  CFC4 F005          	movff	4036,?_adcGetValue+1	;volatile
  1885  002FAE  0012               	return		;funcret
  1886  002FB0                     __end_of_adcGetValue:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function ___xxtofl *****************
  1890 ;; Defined at:
  1891 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  sign            1    wreg     unsigned char 
  1894 ;;  val             4    7[COMRAM] long 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  sign            1   15[COMRAM] unsigned char 
  1897 ;;  arg             4   17[COMRAM] unsigned long 
  1898 ;;  exp             1   16[COMRAM] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  4    7[COMRAM] unsigned char 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1908 ;;      Params:         4       0       0       0       0       0       0       0       0
  1909 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1910 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1911 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1912 ;;Total ram usage:       14 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    2
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_appADC
  1919 ;;		_appBat
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text9
  1924  001A3E                     __ptext9:
  1925                           	callstack 0
  1926  001A3E                     ___xxtofl:
  1927                           	callstack 26
  1928                           
  1929                           ;incstack = 0
  1930                           ;___xxtofl@sign stored from wreg
  1931  001A3E  6E10               	movwf	___xxtofl@sign^0,c
  1932  001A40  5010               	movf	___xxtofl@sign^0,w,c
  1933  001A42  B4D8               	btfsc	status,2,c
  1934  001A44  EF26  F00D         	goto	u3421
  1935  001A48  EF28  F00D         	goto	u3420
  1936  001A4C                     u3421:
  1937  001A4C  EF4A  F00D         	goto	l980
  1938  001A50                     u3420:
  1939  001A50  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  1940  001A52  EF2F  F00D         	goto	u3430
  1941  001A56  EF2D  F00D         	goto	u3431
  1942  001A5A                     u3431:
  1943  001A5A  EF4A  F00D         	goto	l980
  1944  001A5E                     u3430:
  1945  001A5E  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  1946  001A62  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  1947  001A66  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  1948  001A6A  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  1949  001A6E  1E0C               	comf	??___xxtofl^0,f,c
  1950  001A70  1E0D               	comf	(??___xxtofl+1)^0,f,c
  1951  001A72  1E0E               	comf	(??___xxtofl+2)^0,f,c
  1952  001A74  1E0F               	comf	(??___xxtofl+3)^0,f,c
  1953  001A76  2A0C               	incf	??___xxtofl^0,f,c
  1954  001A78  0E00               	movlw	0
  1955  001A7A  220D               	addwfc	(??___xxtofl+1)^0,f,c
  1956  001A7C  220E               	addwfc	(??___xxtofl+2)^0,f,c
  1957  001A7E  220F               	addwfc	(??___xxtofl+3)^0,f,c
  1958  001A80  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  1959  001A84  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  1960  001A88  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  1961  001A8C  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  1962  001A90  EF52  F00D         	goto	l3552
  1963  001A94                     l980:
  1964  001A94  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  1965  001A98  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1966  001A9C  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1967  001AA0  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1968  001AA4                     l3552:
  1969  001AA4  5008               	movf	___xxtofl@val^0,w,c
  1970  001AA6  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  1971  001AA8  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  1972  001AAA  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  1973  001AAC  A4D8               	btfss	status,2,c
  1974  001AAE  EF5B  F00D         	goto	u3441
  1975  001AB2  EF5D  F00D         	goto	u3440
  1976  001AB6                     u3441:
  1977  001AB6  EF67  F00D         	goto	l3558
  1978  001ABA                     u3440:
  1979  001ABA  0E00               	movlw	0
  1980  001ABC  6E08               	movwf	?___xxtofl^0,c
  1981  001ABE  0E00               	movlw	0
  1982  001AC0  6E09               	movwf	(?___xxtofl+1)^0,c
  1983  001AC2  0E00               	movlw	0
  1984  001AC4  6E0A               	movwf	(?___xxtofl+2)^0,c
  1985  001AC6  0E00               	movlw	0
  1986  001AC8  6E0B               	movwf	(?___xxtofl+3)^0,c
  1987  001ACA  EFF8  F00D         	goto	l983
  1988  001ACE                     l3558:
  1989  001ACE  0E96               	movlw	150
  1990  001AD0  6E11               	movwf	___xxtofl@exp^0,c
  1991  001AD2  EF71  F00D         	goto	l3562
  1992  001AD6                     l3560:
  1993  001AD6  2A11               	incf	___xxtofl@exp^0,f,c
  1994  001AD8  90D8               	bcf	status,0,c
  1995  001ADA  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  1996  001ADC  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  1997  001ADE  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  1998  001AE0  3212               	rrcf	___xxtofl@arg^0,f,c
  1999  001AE2                     l3562:
  2000  001AE2  0E00               	movlw	0
  2001  001AE4  1412               	andwf	___xxtofl@arg^0,w,c
  2002  001AE6  6E0C               	movwf	??___xxtofl^0,c
  2003  001AE8  0E00               	movlw	0
  2004  001AEA  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2005  001AEC  6E0D               	movwf	(??___xxtofl+1)^0,c
  2006  001AEE  0E00               	movlw	0
  2007  001AF0  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2008  001AF2  6E0E               	movwf	(??___xxtofl+2)^0,c
  2009  001AF4  0EFE               	movlw	254
  2010  001AF6  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2011  001AF8  6E0F               	movwf	(??___xxtofl+3)^0,c
  2012  001AFA  500C               	movf	??___xxtofl^0,w,c
  2013  001AFC  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2014  001AFE  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2015  001B00  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2016  001B02  A4D8               	btfss	status,2,c
  2017  001B04  EF86  F00D         	goto	u3451
  2018  001B08  EF88  F00D         	goto	u3450
  2019  001B0C                     u3451:
  2020  001B0C  EF6B  F00D         	goto	l3560
  2021  001B10                     u3450:
  2022  001B10  EF96  F00D         	goto	l987
  2023  001B14                     l3564:
  2024  001B14  2A11               	incf	___xxtofl@exp^0,f,c
  2025  001B16  0E01               	movlw	1
  2026  001B18  2612               	addwf	___xxtofl@arg^0,f,c
  2027  001B1A  0E00               	movlw	0
  2028  001B1C  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  2029  001B1E  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  2030  001B20  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  2031  001B22  90D8               	bcf	status,0,c
  2032  001B24  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2033  001B26  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2034  001B28  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2035  001B2A  3212               	rrcf	___xxtofl@arg^0,f,c
  2036  001B2C                     l987:
  2037  001B2C  0E00               	movlw	0
  2038  001B2E  1412               	andwf	___xxtofl@arg^0,w,c
  2039  001B30  6E0C               	movwf	??___xxtofl^0,c
  2040  001B32  0E00               	movlw	0
  2041  001B34  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2042  001B36  6E0D               	movwf	(??___xxtofl+1)^0,c
  2043  001B38  0E00               	movlw	0
  2044  001B3A  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2045  001B3C  6E0E               	movwf	(??___xxtofl+2)^0,c
  2046  001B3E  0EFF               	movlw	255
  2047  001B40  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2048  001B42  6E0F               	movwf	(??___xxtofl+3)^0,c
  2049  001B44  500C               	movf	??___xxtofl^0,w,c
  2050  001B46  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2051  001B48  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2052  001B4A  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2053  001B4C  A4D8               	btfss	status,2,c
  2054  001B4E  EFAB  F00D         	goto	u3461
  2055  001B52  EFAD  F00D         	goto	u3460
  2056  001B56                     u3461:
  2057  001B56  EF8A  F00D         	goto	l3564
  2058  001B5A                     u3460:
  2059  001B5A  EFB5  F00D         	goto	l3572
  2060  001B5E                     l3570:
  2061  001B5E  0611               	decf	___xxtofl@exp^0,f,c
  2062  001B60  90D8               	bcf	status,0,c
  2063  001B62  3612               	rlcf	___xxtofl@arg^0,f,c
  2064  001B64  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  2065  001B66  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  2066  001B68  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  2067  001B6A                     l3572:
  2068  001B6A  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  2069  001B6C  EFBA  F00D         	goto	u3471
  2070  001B70  EFBC  F00D         	goto	u3470
  2071  001B74                     u3471:
  2072  001B74  EFC4  F00D         	goto	l994
  2073  001B78                     u3470:
  2074  001B78  0E02               	movlw	2
  2075  001B7A  6011               	cpfslt	___xxtofl@exp^0,c
  2076  001B7C  EFC2  F00D         	goto	u3481
  2077  001B80  EFC4  F00D         	goto	u3480
  2078  001B84                     u3481:
  2079  001B84  EFAF  F00D         	goto	l3570
  2080  001B88                     u3480:
  2081  001B88                     l994:
  2082  001B88  B011               	btfsc	___xxtofl@exp^0,0,c
  2083  001B8A  EFC9  F00D         	goto	u3491
  2084  001B8E  EFCB  F00D         	goto	u3490
  2085  001B92                     u3491:
  2086  001B92  EFCC  F00D         	goto	l3578
  2087  001B96                     u3490:
  2088  001B96  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  2089  001B98                     l3578:
  2090  001B98  90D8               	bcf	status,0,c
  2091  001B9A  3211               	rrcf	___xxtofl@exp^0,f,c
  2092  001B9C  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  2093  001BA0  6A0D               	clrf	(??___xxtofl+1)^0,c
  2094  001BA2  6A0E               	clrf	(??___xxtofl+2)^0,c
  2095  001BA4  6A0F               	clrf	(??___xxtofl+3)^0,c
  2096  001BA6  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  2097  001BAA  6A0E               	clrf	(??___xxtofl+2)^0,c
  2098  001BAC  6A0D               	clrf	(??___xxtofl+1)^0,c
  2099  001BAE  6A0C               	clrf	??___xxtofl^0,c
  2100  001BB0  500C               	movf	??___xxtofl^0,w,c
  2101  001BB2  1212               	iorwf	___xxtofl@arg^0,f,c
  2102  001BB4  500D               	movf	(??___xxtofl+1)^0,w,c
  2103  001BB6  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  2104  001BB8  500E               	movf	(??___xxtofl+2)^0,w,c
  2105  001BBA  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  2106  001BBC  500F               	movf	(??___xxtofl+3)^0,w,c
  2107  001BBE  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  2108  001BC0  5010               	movf	___xxtofl@sign^0,w,c
  2109  001BC2  B4D8               	btfsc	status,2,c
  2110  001BC4  EFE6  F00D         	goto	u3501
  2111  001BC8  EFE8  F00D         	goto	u3500
  2112  001BCC                     u3501:
  2113  001BCC  EFF0  F00D         	goto	l3588
  2114  001BD0                     u3500:
  2115  001BD0  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2116  001BD2  EFEF  F00D         	goto	u3510
  2117  001BD6  EFED  F00D         	goto	u3511
  2118  001BDA                     u3511:
  2119  001BDA  EFF0  F00D         	goto	l3588
  2120  001BDE                     u3510:
  2121  001BDE  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  2122  001BE0                     l3588:
  2123  001BE0  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  2124  001BE4  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  2125  001BE8  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  2126  001BEC  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  2127  001BF0                     l983:
  2128  001BF0  0012               	return		;funcret
  2129  001BF2                     __end_of___xxtofl:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function ___fltol *****************
  2133 ;; Defined at:
  2134 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  f1              4   71[COMRAM] unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  exp1            1   80[COMRAM] unsigned char 
  2139 ;;  sign1           1   79[COMRAM] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  4   71[COMRAM] long 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2149 ;;      Params:         4       0       0       0       0       0       0       0       0
  2150 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2151 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2152 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2153 ;;Total ram usage:       10 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    2
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_appADC
  2160 ;;		_appBat
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text10
  2165  0025A0                     __ptext10:
  2166                           	callstack 0
  2167  0025A0                     ___fltol:
  2168                           	callstack 26
  2169  0025A0  344A               	rlcf	(___fltol@f1+2)^0,w,c
  2170  0025A2  344B               	rlcf	(___fltol@f1+3)^0,w,c
  2171  0025A4  6E51               	movwf	___fltol@exp1^0,c
  2172  0025A6  5051               	movf	___fltol@exp1^0,w,c
  2173  0025A8  A4D8               	btfss	status,2,c
  2174  0025AA  EFD9  F012         	goto	u3351
  2175  0025AE  EFDB  F012         	goto	u3350
  2176  0025B2                     u3351:
  2177  0025B2  EFE5  F012         	goto	l3508
  2178  0025B6                     u3350:
  2179  0025B6                     l3504:
  2180  0025B6  0E00               	movlw	0
  2181  0025B8  6E48               	movwf	?___fltol^0,c
  2182  0025BA  0E00               	movlw	0
  2183  0025BC  6E49               	movwf	(?___fltol+1)^0,c
  2184  0025BE  0E00               	movlw	0
  2185  0025C0  6E4A               	movwf	(?___fltol+2)^0,c
  2186  0025C2  0E00               	movlw	0
  2187  0025C4  6E4B               	movwf	(?___fltol+3)^0,c
  2188  0025C6  EF52  F013         	goto	l622
  2189  0025CA                     l3508:
  2190  0025CA  C048  F04C         	movff	___fltol@f1,??___fltol
  2191  0025CE  C049  F04D         	movff	___fltol@f1+1,??___fltol+1
  2192  0025D2  C04A  F04E         	movff	___fltol@f1+2,??___fltol+2
  2193  0025D6  C04B  F04F         	movff	___fltol@f1+3,??___fltol+3
  2194  0025DA  0E20               	movlw	32
  2195  0025DC  EFF5  F012         	goto	u3360
  2196  0025E0                     u3365:
  2197  0025E0  90D8               	bcf	status,0,c
  2198  0025E2  324F               	rrcf	(??___fltol+3)^0,f,c
  2199  0025E4  324E               	rrcf	(??___fltol+2)^0,f,c
  2200  0025E6  324D               	rrcf	(??___fltol+1)^0,f,c
  2201  0025E8  324C               	rrcf	??___fltol^0,f,c
  2202  0025EA                     u3360:
  2203  0025EA  2EE8               	decfsz	wreg,f,c
  2204  0025EC  EFF0  F012         	goto	u3365
  2205  0025F0  504C               	movf	??___fltol^0,w,c
  2206  0025F2  6E50               	movwf	___fltol@sign1^0,c
  2207  0025F4  8E4A               	bsf	(___fltol@f1+2)^0,7,c
  2208  0025F6  0EFF               	movlw	255
  2209  0025F8  1648               	andwf	___fltol@f1^0,f,c
  2210  0025FA  0EFF               	movlw	255
  2211  0025FC  1649               	andwf	(___fltol@f1+1)^0,f,c
  2212  0025FE  0EFF               	movlw	255
  2213  002600  164A               	andwf	(___fltol@f1+2)^0,f,c
  2214  002602  0E00               	movlw	0
  2215  002604  164B               	andwf	(___fltol@f1+3)^0,f,c
  2216  002606  0E96               	movlw	150
  2217  002608  5E51               	subwf	___fltol@exp1^0,f,c
  2218  00260A  BE51               	btfsc	___fltol@exp1^0,7,c
  2219  00260C  EF0C  F013         	goto	u3370
  2220  002610  EF0A  F013         	goto	u3371
  2221  002614                     u3371:
  2222  002614  EF22  F013         	goto	l3528
  2223  002618                     u3370:
  2224  002618  5051               	movf	___fltol@exp1^0,w,c
  2225  00261A  0A80               	xorlw	128
  2226  00261C  0F97               	addlw	151
  2227  00261E  B0D8               	btfsc	status,0,c
  2228  002620  EF14  F013         	goto	u3381
  2229  002624  EF16  F013         	goto	u3380
  2230  002628                     u3381:
  2231  002628  EF18  F013         	goto	l3524
  2232  00262C                     u3380:
  2233  00262C  EFDB  F012         	goto	l3504
  2234  002630                     l3524:
  2235  002630  90D8               	bcf	status,0,c
  2236  002632  324B               	rrcf	(___fltol@f1+3)^0,f,c
  2237  002634  324A               	rrcf	(___fltol@f1+2)^0,f,c
  2238  002636  3249               	rrcf	(___fltol@f1+1)^0,f,c
  2239  002638  3248               	rrcf	___fltol@f1^0,f,c
  2240  00263A  3E51               	incfsz	___fltol@exp1^0,f,c
  2241  00263C  EF18  F013         	goto	l3524
  2242  002640  EF3A  F013         	goto	l3538
  2243  002644                     l3528:
  2244  002644  0E1F               	movlw	31
  2245  002646  6451               	cpfsgt	___fltol@exp1^0,c
  2246  002648  EF28  F013         	goto	u3391
  2247  00264C  EF2A  F013         	goto	u3390
  2248  002650                     u3391:
  2249  002650  EF32  F013         	goto	l3536
  2250  002654                     u3390:
  2251  002654  EFDB  F012         	goto	l3504
  2252  002658                     l3534:
  2253  002658  90D8               	bcf	status,0,c
  2254  00265A  3648               	rlcf	___fltol@f1^0,f,c
  2255  00265C  3649               	rlcf	(___fltol@f1+1)^0,f,c
  2256  00265E  364A               	rlcf	(___fltol@f1+2)^0,f,c
  2257  002660  364B               	rlcf	(___fltol@f1+3)^0,f,c
  2258  002662  0651               	decf	___fltol@exp1^0,f,c
  2259  002664                     l3536:
  2260  002664  5051               	movf	___fltol@exp1^0,w,c
  2261  002666  A4D8               	btfss	status,2,c
  2262  002668  EF38  F013         	goto	u3401
  2263  00266C  EF3A  F013         	goto	u3400
  2264  002670                     u3401:
  2265  002670  EF2C  F013         	goto	l3534
  2266  002674                     u3400:
  2267  002674                     l3538:
  2268  002674  5050               	movf	___fltol@sign1^0,w,c
  2269  002676  B4D8               	btfsc	status,2,c
  2270  002678  EF40  F013         	goto	u3411
  2271  00267C  EF42  F013         	goto	u3410
  2272  002680                     u3411:
  2273  002680  EF4A  F013         	goto	l3542
  2274  002684                     u3410:
  2275  002684  1E4B               	comf	(___fltol@f1+3)^0,f,c
  2276  002686  1E4A               	comf	(___fltol@f1+2)^0,f,c
  2277  002688  1E49               	comf	(___fltol@f1+1)^0,f,c
  2278  00268A  6C48               	negf	___fltol@f1^0,c
  2279  00268C  0E00               	movlw	0
  2280  00268E  2249               	addwfc	(___fltol@f1+1)^0,f,c
  2281  002690  224A               	addwfc	(___fltol@f1+2)^0,f,c
  2282  002692  224B               	addwfc	(___fltol@f1+3)^0,f,c
  2283  002694                     l3542:
  2284  002694  C048  F048         	movff	___fltol@f1,?___fltol
  2285  002698  C049  F049         	movff	___fltol@f1+1,?___fltol+1
  2286  00269C  C04A  F04A         	movff	___fltol@f1+2,?___fltol+2
  2287  0026A0  C04B  F04B         	movff	___fltol@f1+3,?___fltol+3
  2288  0026A4                     l622:
  2289  0026A4  0012               	return		;funcret
  2290  0026A6                     __end_of___fltol:
  2291                           	callstack 0
  2292                           
  2293 ;; *************** function ___flmul *****************
  2294 ;; Defined at:
  2295 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  b               4   21[COMRAM] long 
  2298 ;;  a               4   25[COMRAM] long 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  prod            4   40[COMRAM] struct .
  2301 ;;  grs             4   34[COMRAM] unsigned long 
  2302 ;;  temp            2   44[COMRAM] struct .
  2303 ;;  bexp            1   39[COMRAM] unsigned char 
  2304 ;;  aexp            1   38[COMRAM] unsigned char 
  2305 ;;  sign            1   33[COMRAM] unsigned char 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  4   21[COMRAM] unsigned char 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0, prodl, prodh
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2315 ;;      Params:         8       0       0       0       0       0       0       0       0
  2316 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2317 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2318 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2319 ;;Total ram usage:       25 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    2
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_appADC
  2326 ;;		_appBat
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text11
  2331  00085E                     __ptext11:
  2332                           	callstack 0
  2333  00085E                     ___flmul:
  2334                           	callstack 26
  2335  00085E  5019               	movf	(___flmul@b+3)^0,w,c
  2336  000860  0B80               	andlw	128
  2337  000862  6E22               	movwf	___flmul@sign^0,c
  2338  000864  5019               	movf	(___flmul@b+3)^0,w,c
  2339  000866  2419               	addwf	(___flmul@b+3)^0,w,c
  2340  000868  6E28               	movwf	___flmul@bexp^0,c
  2341  00086A  AE18               	btfss	(___flmul@b+2)^0,7,c
  2342  00086C  EF3A  F004         	goto	u3101
  2343  000870  EF3C  F004         	goto	u3100
  2344  000874                     u3101:
  2345  000874  EF3D  F004         	goto	l3342
  2346  000878                     u3100:
  2347  000878  8028               	bsf	___flmul@bexp^0,0,c
  2348  00087A                     l3342:
  2349  00087A  5028               	movf	___flmul@bexp^0,w,c
  2350  00087C  B4D8               	btfsc	status,2,c
  2351  00087E  EF43  F004         	goto	u3111
  2352  000882  EF45  F004         	goto	u3110
  2353  000886                     u3111:
  2354  000886  EF58  F004         	goto	l3350
  2355  00088A                     u3110:
  2356  00088A  2828               	incf	___flmul@bexp^0,w,c
  2357  00088C  A4D8               	btfss	status,2,c
  2358  00088E  EF4B  F004         	goto	u3121
  2359  000892  EF4D  F004         	goto	u3120
  2360  000896                     u3121:
  2361  000896  EF55  F004         	goto	l3348
  2362  00089A                     u3120:
  2363  00089A  0E00               	movlw	0
  2364  00089C  6E16               	movwf	___flmul@b^0,c
  2365  00089E  0E00               	movlw	0
  2366  0008A0  6E17               	movwf	(___flmul@b+1)^0,c
  2367  0008A2  0E00               	movlw	0
  2368  0008A4  6E18               	movwf	(___flmul@b+2)^0,c
  2369  0008A6  0E00               	movlw	0
  2370  0008A8  6E19               	movwf	(___flmul@b+3)^0,c
  2371  0008AA                     l3348:
  2372  0008AA  8E18               	bsf	(___flmul@b+2)^0,7,c
  2373  0008AC  EF60  F004         	goto	l3352
  2374  0008B0                     l3350:
  2375  0008B0  0E00               	movlw	0
  2376  0008B2  6E16               	movwf	___flmul@b^0,c
  2377  0008B4  0E00               	movlw	0
  2378  0008B6  6E17               	movwf	(___flmul@b+1)^0,c
  2379  0008B8  0E00               	movlw	0
  2380  0008BA  6E18               	movwf	(___flmul@b+2)^0,c
  2381  0008BC  0E00               	movlw	0
  2382  0008BE  6E19               	movwf	(___flmul@b+3)^0,c
  2383  0008C0                     l3352:
  2384  0008C0  501D               	movf	(___flmul@a+3)^0,w,c
  2385  0008C2  0B80               	andlw	128
  2386  0008C4  1A22               	xorwf	___flmul@sign^0,f,c
  2387  0008C6  501D               	movf	(___flmul@a+3)^0,w,c
  2388  0008C8  241D               	addwf	(___flmul@a+3)^0,w,c
  2389  0008CA  6E27               	movwf	___flmul@aexp^0,c
  2390  0008CC  AE1C               	btfss	(___flmul@a+2)^0,7,c
  2391  0008CE  EF6B  F004         	goto	u3131
  2392  0008D2  EF6D  F004         	goto	u3130
  2393  0008D6                     u3131:
  2394  0008D6  EF6E  F004         	goto	l3360
  2395  0008DA                     u3130:
  2396  0008DA  8027               	bsf	___flmul@aexp^0,0,c
  2397  0008DC                     l3360:
  2398  0008DC  5027               	movf	___flmul@aexp^0,w,c
  2399  0008DE  B4D8               	btfsc	status,2,c
  2400  0008E0  EF74  F004         	goto	u3141
  2401  0008E4  EF76  F004         	goto	u3140
  2402  0008E8                     u3141:
  2403  0008E8  EF89  F004         	goto	l3368
  2404  0008EC                     u3140:
  2405  0008EC  2827               	incf	___flmul@aexp^0,w,c
  2406  0008EE  A4D8               	btfss	status,2,c
  2407  0008F0  EF7C  F004         	goto	u3151
  2408  0008F4  EF7E  F004         	goto	u3150
  2409  0008F8                     u3151:
  2410  0008F8  EF86  F004         	goto	l3366
  2411  0008FC                     u3150:
  2412  0008FC  0E00               	movlw	0
  2413  0008FE  6E1A               	movwf	___flmul@a^0,c
  2414  000900  0E00               	movlw	0
  2415  000902  6E1B               	movwf	(___flmul@a+1)^0,c
  2416  000904  0E00               	movlw	0
  2417  000906  6E1C               	movwf	(___flmul@a+2)^0,c
  2418  000908  0E00               	movlw	0
  2419  00090A  6E1D               	movwf	(___flmul@a+3)^0,c
  2420  00090C                     l3366:
  2421  00090C  8E1C               	bsf	(___flmul@a+2)^0,7,c
  2422  00090E  EF91  F004         	goto	l939
  2423  000912                     l3368:
  2424  000912  0E00               	movlw	0
  2425  000914  6E1A               	movwf	___flmul@a^0,c
  2426  000916  0E00               	movlw	0
  2427  000918  6E1B               	movwf	(___flmul@a+1)^0,c
  2428  00091A  0E00               	movlw	0
  2429  00091C  6E1C               	movwf	(___flmul@a+2)^0,c
  2430  00091E  0E00               	movlw	0
  2431  000920  6E1D               	movwf	(___flmul@a+3)^0,c
  2432  000922                     l939:
  2433  000922  5027               	movf	___flmul@aexp^0,w,c
  2434  000924  B4D8               	btfsc	status,2,c
  2435  000926  EF97  F004         	goto	u3161
  2436  00092A  EF99  F004         	goto	u3160
  2437  00092E                     u3161:
  2438  00092E  EFA1  F004         	goto	l3372
  2439  000932                     u3160:
  2440  000932  5028               	movf	___flmul@bexp^0,w,c
  2441  000934  A4D8               	btfss	status,2,c
  2442  000936  EF9F  F004         	goto	u3171
  2443  00093A  EFA1  F004         	goto	u3170
  2444  00093E                     u3171:
  2445  00093E  EFAB  F004         	goto	l3376
  2446  000942                     u3170:
  2447  000942                     l3372:
  2448  000942  0E00               	movlw	0
  2449  000944  6E16               	movwf	?___flmul^0,c
  2450  000946  0E00               	movlw	0
  2451  000948  6E17               	movwf	(?___flmul+1)^0,c
  2452  00094A  0E00               	movlw	0
  2453  00094C  6E18               	movwf	(?___flmul+2)^0,c
  2454  00094E  0E00               	movlw	0
  2455  000950  6E19               	movwf	(?___flmul+3)^0,c
  2456  000952  EF43  F006         	goto	l943
  2457  000956                     l3376:
  2458  000956  501C               	movf	(___flmul@a+2)^0,w,c
  2459  000958  0216               	mulwf	___flmul@b^0,c
  2460  00095A  CFF3 F02D          	movff	prodl,___flmul@temp
  2461  00095E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2462  000962  502D               	movf	___flmul@temp^0,w,c
  2463  000964  6E23               	movwf	___flmul@grs^0,c
  2464  000966  6A24               	clrf	(___flmul@grs+1)^0,c
  2465  000968  6A25               	clrf	(___flmul@grs+2)^0,c
  2466  00096A  6A26               	clrf	(___flmul@grs+3)^0,c
  2467  00096C  502E               	movf	(___flmul@temp+1)^0,w,c
  2468  00096E  6E29               	movwf	___flmul@prod^0,c
  2469  000970  6A2A               	clrf	(___flmul@prod+1)^0,c
  2470  000972  6A2B               	clrf	(___flmul@prod+2)^0,c
  2471  000974  6A2C               	clrf	(___flmul@prod+3)^0,c
  2472  000976  501B               	movf	(___flmul@a+1)^0,w,c
  2473  000978  0217               	mulwf	(___flmul@b+1)^0,c
  2474  00097A  CFF3 F02D          	movff	prodl,___flmul@temp
  2475  00097E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2476  000982  502D               	movf	___flmul@temp^0,w,c
  2477  000984  2623               	addwf	___flmul@grs^0,f,c
  2478  000986  0E00               	movlw	0
  2479  000988  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2480  00098A  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2481  00098C  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2482  00098E  502E               	movf	(___flmul@temp+1)^0,w,c
  2483  000990  2629               	addwf	___flmul@prod^0,f,c
  2484  000992  0E00               	movlw	0
  2485  000994  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2486  000996  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2487  000998  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2488  00099A  501A               	movf	___flmul@a^0,w,c
  2489  00099C  0218               	mulwf	(___flmul@b+2)^0,c
  2490  00099E  CFF3 F02D          	movff	prodl,___flmul@temp
  2491  0009A2  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2492  0009A6  502D               	movf	___flmul@temp^0,w,c
  2493  0009A8  2623               	addwf	___flmul@grs^0,f,c
  2494  0009AA  0E00               	movlw	0
  2495  0009AC  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2496  0009AE  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2497  0009B0  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2498  0009B2  502E               	movf	(___flmul@temp+1)^0,w,c
  2499  0009B4  2629               	addwf	___flmul@prod^0,f,c
  2500  0009B6  0E00               	movlw	0
  2501  0009B8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2502  0009BA  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2503  0009BC  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2504  0009BE  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2505  0009C2  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2506  0009C6  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2507  0009CA  6A23               	clrf	___flmul@grs^0,c
  2508  0009CC  501A               	movf	___flmul@a^0,w,c
  2509  0009CE  0217               	mulwf	(___flmul@b+1)^0,c
  2510  0009D0  CFF3 F02D          	movff	prodl,___flmul@temp
  2511  0009D4  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2512  0009D8  502D               	movf	___flmul@temp^0,w,c
  2513  0009DA  2623               	addwf	___flmul@grs^0,f,c
  2514  0009DC  502E               	movf	(___flmul@temp+1)^0,w,c
  2515  0009DE  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2516  0009E0  0E00               	movlw	0
  2517  0009E2  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2518  0009E4  0E00               	movlw	0
  2519  0009E6  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2520  0009E8  501B               	movf	(___flmul@a+1)^0,w,c
  2521  0009EA  0216               	mulwf	___flmul@b^0,c
  2522  0009EC  CFF3 F02D          	movff	prodl,___flmul@temp
  2523  0009F0  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2524  0009F4  502D               	movf	___flmul@temp^0,w,c
  2525  0009F6  2623               	addwf	___flmul@grs^0,f,c
  2526  0009F8  502E               	movf	(___flmul@temp+1)^0,w,c
  2527  0009FA  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2528  0009FC  0E00               	movlw	0
  2529  0009FE  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2530  000A00  0E00               	movlw	0
  2531  000A02  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2532  000A04  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2533  000A08  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2534  000A0C  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2535  000A10  6A23               	clrf	___flmul@grs^0,c
  2536  000A12  501A               	movf	___flmul@a^0,w,c
  2537  000A14  0216               	mulwf	___flmul@b^0,c
  2538  000A16  CFF3 F02D          	movff	prodl,___flmul@temp
  2539  000A1A  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2540  000A1E  502D               	movf	___flmul@temp^0,w,c
  2541  000A20  2623               	addwf	___flmul@grs^0,f,c
  2542  000A22  502E               	movf	(___flmul@temp+1)^0,w,c
  2543  000A24  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2544  000A26  0E00               	movlw	0
  2545  000A28  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2546  000A2A  0E00               	movlw	0
  2547  000A2C  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2548  000A2E  501C               	movf	(___flmul@a+2)^0,w,c
  2549  000A30  0217               	mulwf	(___flmul@b+1)^0,c
  2550  000A32  CFF3 F02D          	movff	prodl,___flmul@temp
  2551  000A36  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2552  000A3A  502D               	movf	___flmul@temp^0,w,c
  2553  000A3C  2629               	addwf	___flmul@prod^0,f,c
  2554  000A3E  502E               	movf	(___flmul@temp+1)^0,w,c
  2555  000A40  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2556  000A42  0E00               	movlw	0
  2557  000A44  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2558  000A46  0E00               	movlw	0
  2559  000A48  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2560  000A4A  501B               	movf	(___flmul@a+1)^0,w,c
  2561  000A4C  0218               	mulwf	(___flmul@b+2)^0,c
  2562  000A4E  CFF3 F02D          	movff	prodl,___flmul@temp
  2563  000A52  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2564  000A56  502D               	movf	___flmul@temp^0,w,c
  2565  000A58  2629               	addwf	___flmul@prod^0,f,c
  2566  000A5A  502E               	movf	(___flmul@temp+1)^0,w,c
  2567  000A5C  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2568  000A5E  0E00               	movlw	0
  2569  000A60  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2570  000A62  0E00               	movlw	0
  2571  000A64  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2572  000A66  501C               	movf	(___flmul@a+2)^0,w,c
  2573  000A68  0218               	mulwf	(___flmul@b+2)^0,c
  2574  000A6A  CFF3 F02D          	movff	prodl,___flmul@temp
  2575  000A6E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2576  000A72  502D               	movf	___flmul@temp^0,w,c
  2577  000A74  6E1E               	movwf	??___flmul^0,c
  2578  000A76  502E               	movf	(___flmul@temp+1)^0,w,c
  2579  000A78  6E1F               	movwf	(??___flmul+1)^0,c
  2580  000A7A  6A20               	clrf	(??___flmul+2)^0,c
  2581  000A7C  6A21               	clrf	(??___flmul+3)^0,c
  2582  000A7E  C020  F021         	movff	??___flmul+2,??___flmul+3
  2583  000A82  C01F  F020         	movff	??___flmul+1,??___flmul+2
  2584  000A86  C01E  F01F         	movff	??___flmul,??___flmul+1
  2585  000A8A  6A1E               	clrf	??___flmul^0,c
  2586  000A8C  501E               	movf	??___flmul^0,w,c
  2587  000A8E  2629               	addwf	___flmul@prod^0,f,c
  2588  000A90  501F               	movf	(??___flmul+1)^0,w,c
  2589  000A92  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2590  000A94  5020               	movf	(??___flmul+2)^0,w,c
  2591  000A96  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2592  000A98  5021               	movf	(??___flmul+3)^0,w,c
  2593  000A9A  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2594  000A9C  C023  F01E         	movff	___flmul@grs,??___flmul
  2595  000AA0  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  2596  000AA4  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  2597  000AA8  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  2598  000AAC  0E19               	movlw	25
  2599  000AAE  EF5E  F005         	goto	u3180
  2600  000AB2                     u3185:
  2601  000AB2  90D8               	bcf	status,0,c
  2602  000AB4  3221               	rrcf	(??___flmul+3)^0,f,c
  2603  000AB6  3220               	rrcf	(??___flmul+2)^0,f,c
  2604  000AB8  321F               	rrcf	(??___flmul+1)^0,f,c
  2605  000ABA  321E               	rrcf	??___flmul^0,f,c
  2606  000ABC                     u3180:
  2607  000ABC  2EE8               	decfsz	wreg,f,c
  2608  000ABE  EF59  F005         	goto	u3185
  2609  000AC2  501E               	movf	??___flmul^0,w,c
  2610  000AC4  2629               	addwf	___flmul@prod^0,f,c
  2611  000AC6  501F               	movf	(??___flmul+1)^0,w,c
  2612  000AC8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2613  000ACA  5020               	movf	(??___flmul+2)^0,w,c
  2614  000ACC  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2615  000ACE  5021               	movf	(??___flmul+3)^0,w,c
  2616  000AD0  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2617  000AD2  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2618  000AD6  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2619  000ADA  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2620  000ADE  6A23               	clrf	___flmul@grs^0,c
  2621  000AE0  5027               	movf	___flmul@aexp^0,w,c
  2622  000AE2  C028  F01E         	movff	___flmul@bexp,??___flmul
  2623  000AE6  6A1F               	clrf	(??___flmul+1)^0,c
  2624  000AE8  261E               	addwf	??___flmul^0,f,c
  2625  000AEA  0E00               	movlw	0
  2626  000AEC  221F               	addwfc	(??___flmul+1)^0,f,c
  2627  000AEE  0E82               	movlw	130
  2628  000AF0  241E               	addwf	??___flmul^0,w,c
  2629  000AF2  6E2D               	movwf	___flmul@temp^0,c
  2630  000AF4  0EFF               	movlw	255
  2631  000AF6  201F               	addwfc	(??___flmul+1)^0,w,c
  2632  000AF8  6E2E               	movwf	(___flmul@temp+1)^0,c
  2633  000AFA  EF94  F005         	goto	l3424
  2634  000AFE                     l3418:
  2635  000AFE  90D8               	bcf	status,0,c
  2636  000B00  3629               	rlcf	___flmul@prod^0,f,c
  2637  000B02  362A               	rlcf	(___flmul@prod+1)^0,f,c
  2638  000B04  362B               	rlcf	(___flmul@prod+2)^0,f,c
  2639  000B06  362C               	rlcf	(___flmul@prod+3)^0,f,c
  2640  000B08  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2641  000B0A  EF89  F005         	goto	u3191
  2642  000B0E  EF8B  F005         	goto	u3190
  2643  000B12                     u3191:
  2644  000B12  EF8C  F005         	goto	l946
  2645  000B16                     u3190:
  2646  000B16  8029               	bsf	___flmul@prod^0,0,c
  2647  000B18                     l946:
  2648  000B18  90D8               	bcf	status,0,c
  2649  000B1A  3623               	rlcf	___flmul@grs^0,f,c
  2650  000B1C  3624               	rlcf	(___flmul@grs+1)^0,f,c
  2651  000B1E  3625               	rlcf	(___flmul@grs+2)^0,f,c
  2652  000B20  3626               	rlcf	(___flmul@grs+3)^0,f,c
  2653  000B22  062D               	decf	___flmul@temp^0,f,c
  2654  000B24  A0D8               	btfss	status,0,c
  2655  000B26  062E               	decf	(___flmul@temp+1)^0,f,c
  2656  000B28                     l3424:
  2657  000B28  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  2658  000B2A  EF99  F005         	goto	u3201
  2659  000B2E  EF9B  F005         	goto	u3200
  2660  000B32                     u3201:
  2661  000B32  EF7F  F005         	goto	l3418
  2662  000B36                     u3200:
  2663  000B36  0E00               	movlw	0
  2664  000B38  6E27               	movwf	___flmul@aexp^0,c
  2665  000B3A  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2666  000B3C  EFA2  F005         	goto	u3211
  2667  000B40  EFA4  F005         	goto	u3210
  2668  000B44                     u3211:
  2669  000B44  EFC8  F005         	goto	l948
  2670  000B48                     u3210:
  2671  000B48  0EFF               	movlw	255
  2672  000B4A  1423               	andwf	___flmul@grs^0,w,c
  2673  000B4C  6E1E               	movwf	??___flmul^0,c
  2674  000B4E  0EFF               	movlw	255
  2675  000B50  1424               	andwf	(___flmul@grs+1)^0,w,c
  2676  000B52  6E1F               	movwf	(??___flmul+1)^0,c
  2677  000B54  0EFF               	movlw	255
  2678  000B56  1425               	andwf	(___flmul@grs+2)^0,w,c
  2679  000B58  6E20               	movwf	(??___flmul+2)^0,c
  2680  000B5A  0E7F               	movlw	127
  2681  000B5C  1426               	andwf	(___flmul@grs+3)^0,w,c
  2682  000B5E  6E21               	movwf	(??___flmul+3)^0,c
  2683  000B60  501E               	movf	??___flmul^0,w,c
  2684  000B62  101F               	iorwf	(??___flmul+1)^0,w,c
  2685  000B64  1020               	iorwf	(??___flmul+2)^0,w,c
  2686  000B66  1021               	iorwf	(??___flmul+3)^0,w,c
  2687  000B68  B4D8               	btfsc	status,2,c
  2688  000B6A  EFB9  F005         	goto	u3221
  2689  000B6E  EFBB  F005         	goto	u3220
  2690  000B72                     u3221:
  2691  000B72  EFBF  F005         	goto	l949
  2692  000B76                     u3220:
  2693  000B76                     l3432:
  2694  000B76  0E01               	movlw	1
  2695  000B78  6E27               	movwf	___flmul@aexp^0,c
  2696  000B7A  EFC8  F005         	goto	l948
  2697  000B7E                     l949:
  2698  000B7E  A029               	btfss	___flmul@prod^0,0,c
  2699  000B80  EFC4  F005         	goto	u3231
  2700  000B84  EFC6  F005         	goto	u3230
  2701  000B88                     u3231:
  2702  000B88  EFC8  F005         	goto	l948
  2703  000B8C                     u3230:
  2704  000B8C  EFBB  F005         	goto	l3432
  2705  000B90                     l948:
  2706  000B90  5027               	movf	___flmul@aexp^0,w,c
  2707  000B92  B4D8               	btfsc	status,2,c
  2708  000B94  EFCE  F005         	goto	u3241
  2709  000B98  EFD0  F005         	goto	u3240
  2710  000B9C                     u3241:
  2711  000B9C  EFF4  F005         	goto	l3444
  2712  000BA0                     u3240:
  2713  000BA0  0E01               	movlw	1
  2714  000BA2  2629               	addwf	___flmul@prod^0,f,c
  2715  000BA4  0E00               	movlw	0
  2716  000BA6  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2717  000BA8  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2718  000BAA  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2719  000BAC  A02C               	btfss	(___flmul@prod+3)^0,0,c
  2720  000BAE  EFDB  F005         	goto	u3251
  2721  000BB2  EFDD  F005         	goto	u3250
  2722  000BB6                     u3251:
  2723  000BB6  EFF4  F005         	goto	l3444
  2724  000BBA                     u3250:
  2725  000BBA  C029  F01E         	movff	___flmul@prod,??___flmul
  2726  000BBE  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  2727  000BC2  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  2728  000BC6  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  2729  000BCA  3421               	rlcf	(??___flmul+3)^0,w,c
  2730  000BCC  3221               	rrcf	(??___flmul+3)^0,f,c
  2731  000BCE  3220               	rrcf	(??___flmul+2)^0,f,c
  2732  000BD0  321F               	rrcf	(??___flmul+1)^0,f,c
  2733  000BD2  321E               	rrcf	??___flmul^0,f,c
  2734  000BD4  C01E  F029         	movff	??___flmul,___flmul@prod
  2735  000BD8  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  2736  000BDC  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  2737  000BE0  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  2738  000BE4  4A2D               	infsnz	___flmul@temp^0,f,c
  2739  000BE6  2A2E               	incf	(___flmul@temp+1)^0,f,c
  2740  000BE8                     l3444:
  2741  000BE8  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2742  000BEA  EFFF  F005         	goto	u3261
  2743  000BEE  502E               	movf	(___flmul@temp+1)^0,w,c
  2744  000BF0  E108               	bnz	u3260
  2745  000BF2  282D               	incf	___flmul@temp^0,w,c
  2746  000BF4  A0D8               	btfss	status,0,c
  2747  000BF6  EFFF  F005         	goto	u3261
  2748  000BFA  EF01  F006         	goto	u3260
  2749  000BFE                     u3261:
  2750  000BFE  EF0B  F006         	goto	l3448
  2751  000C02                     u3260:
  2752  000C02  0E00               	movlw	0
  2753  000C04  6E29               	movwf	___flmul@prod^0,c
  2754  000C06  0E00               	movlw	0
  2755  000C08  6E2A               	movwf	(___flmul@prod+1)^0,c
  2756  000C0A  0E80               	movlw	128
  2757  000C0C  6E2B               	movwf	(___flmul@prod+2)^0,c
  2758  000C0E  0E7F               	movlw	127
  2759  000C10  6E2C               	movwf	(___flmul@prod+3)^0,c
  2760  000C12  EF39  F006         	goto	l3460
  2761  000C16                     l3448:
  2762  000C16  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2763  000C18  EF18  F006         	goto	u3270
  2764  000C1C  502E               	movf	(___flmul@temp+1)^0,w,c
  2765  000C1E  E106               	bnz	u3271
  2766  000C20  042D               	decf	___flmul@temp^0,w,c
  2767  000C22  B0D8               	btfsc	status,0,c
  2768  000C24  EF16  F006         	goto	u3271
  2769  000C28  EF18  F006         	goto	u3270
  2770  000C2C                     u3271:
  2771  000C2C  EF24  F006         	goto	l956
  2772  000C30                     u3270:
  2773  000C30  0E00               	movlw	0
  2774  000C32  6E29               	movwf	___flmul@prod^0,c
  2775  000C34  0E00               	movlw	0
  2776  000C36  6E2A               	movwf	(___flmul@prod+1)^0,c
  2777  000C38  0E00               	movlw	0
  2778  000C3A  6E2B               	movwf	(___flmul@prod+2)^0,c
  2779  000C3C  0E00               	movlw	0
  2780  000C3E  6E2C               	movwf	(___flmul@prod+3)^0,c
  2781  000C40  0E00               	movlw	0
  2782  000C42  6E22               	movwf	___flmul@sign^0,c
  2783  000C44  EF39  F006         	goto	l3460
  2784  000C48                     l956:
  2785  000C48  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  2786  000C4C  0EFF               	movlw	255
  2787  000C4E  1629               	andwf	___flmul@prod^0,f,c
  2788  000C50  0EFF               	movlw	255
  2789  000C52  162A               	andwf	(___flmul@prod+1)^0,f,c
  2790  000C54  0E7F               	movlw	127
  2791  000C56  162B               	andwf	(___flmul@prod+2)^0,f,c
  2792  000C58  0E00               	movlw	0
  2793  000C5A  162C               	andwf	(___flmul@prod+3)^0,f,c
  2794  000C5C  A028               	btfss	___flmul@bexp^0,0,c
  2795  000C5E  EF33  F006         	goto	u3281
  2796  000C62  EF35  F006         	goto	u3280
  2797  000C66                     u3281:
  2798  000C66  EF36  F006         	goto	l3458
  2799  000C6A                     u3280:
  2800  000C6A  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  2801  000C6C                     l3458:
  2802  000C6C  90D8               	bcf	status,0,c
  2803  000C6E  3028               	rrcf	___flmul@bexp^0,w,c
  2804  000C70  6E2C               	movwf	(___flmul@prod+3)^0,c
  2805  000C72                     l3460:
  2806  000C72  5022               	movf	___flmul@sign^0,w,c
  2807  000C74  122C               	iorwf	(___flmul@prod+3)^0,f,c
  2808  000C76  C029  F016         	movff	___flmul@prod,?___flmul
  2809  000C7A  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  2810  000C7E  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  2811  000C82  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  2812  000C86                     l943:
  2813  000C86  0012               	return		;funcret
  2814  000C88                     __end_of___flmul:
  2815                           	callstack 0
  2816                           
  2817 ;; *************** function ___fldiv *****************
  2818 ;; Defined at:
  2819 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  b               4   46[COMRAM] unsigned char 
  2822 ;;  a               4   50[COMRAM] unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  grs             4   65[COMRAM] unsigned long 
  2825 ;;  rem             4   58[COMRAM] unsigned long 
  2826 ;;  new_exp         2   63[COMRAM] short 
  2827 ;;  aexp            1   70[COMRAM] unsigned char 
  2828 ;;  bexp            1   69[COMRAM] unsigned char 
  2829 ;;  sign            1   62[COMRAM] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  4   46[COMRAM] unsigned char 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2839 ;;      Params:         8       0       0       0       0       0       0       0       0
  2840 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2841 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2842 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2843 ;;Total ram usage:       25 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    2
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_appADC
  2850 ;;		_appBat
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text12
  2855  000C88                     __ptext12:
  2856                           	callstack 0
  2857  000C88                     ___fldiv:
  2858                           	callstack 26
  2859  000C88  5032               	movf	(___fldiv@b+3)^0,w,c
  2860  000C8A  0B80               	andlw	128
  2861  000C8C  6E3F               	movwf	___fldiv@sign^0,c
  2862  000C8E  5032               	movf	(___fldiv@b+3)^0,w,c
  2863  000C90  2432               	addwf	(___fldiv@b+3)^0,w,c
  2864  000C92  6E46               	movwf	___fldiv@bexp^0,c
  2865  000C94  AE31               	btfss	(___fldiv@b+2)^0,7,c
  2866  000C96  EF4F  F006         	goto	u2871
  2867  000C9A  EF51  F006         	goto	u2870
  2868  000C9E                     u2871:
  2869  000C9E  EF52  F006         	goto	l3204
  2870  000CA2                     u2870:
  2871  000CA2  8046               	bsf	___fldiv@bexp^0,0,c
  2872  000CA4                     l3204:
  2873  000CA4  5046               	movf	___fldiv@bexp^0,w,c
  2874  000CA6  B4D8               	btfsc	status,2,c
  2875  000CA8  EF58  F006         	goto	u2881
  2876  000CAC  EF5A  F006         	goto	u2880
  2877  000CB0                     u2881:
  2878  000CB0  EF6F  F006         	goto	l3214
  2879  000CB4                     u2880:
  2880  000CB4  2846               	incf	___fldiv@bexp^0,w,c
  2881  000CB6  A4D8               	btfss	status,2,c
  2882  000CB8  EF60  F006         	goto	u2891
  2883  000CBC  EF62  F006         	goto	u2890
  2884  000CC0                     u2891:
  2885  000CC0  EF6A  F006         	goto	l3210
  2886  000CC4                     u2890:
  2887  000CC4  0E00               	movlw	0
  2888  000CC6  6E2F               	movwf	___fldiv@b^0,c
  2889  000CC8  0E00               	movlw	0
  2890  000CCA  6E30               	movwf	(___fldiv@b+1)^0,c
  2891  000CCC  0E00               	movlw	0
  2892  000CCE  6E31               	movwf	(___fldiv@b+2)^0,c
  2893  000CD0  0E00               	movlw	0
  2894  000CD2  6E32               	movwf	(___fldiv@b+3)^0,c
  2895  000CD4                     l3210:
  2896  000CD4  8E31               	bsf	(___fldiv@b+2)^0,7,c
  2897  000CD6  0E00               	movlw	0
  2898  000CD8  6E32               	movwf	(___fldiv@b+3)^0,c
  2899  000CDA  EF77  F006         	goto	l3216
  2900  000CDE                     l3214:
  2901  000CDE  0E00               	movlw	0
  2902  000CE0  6E2F               	movwf	___fldiv@b^0,c
  2903  000CE2  0E00               	movlw	0
  2904  000CE4  6E30               	movwf	(___fldiv@b+1)^0,c
  2905  000CE6  0E00               	movlw	0
  2906  000CE8  6E31               	movwf	(___fldiv@b+2)^0,c
  2907  000CEA  0E00               	movlw	0
  2908  000CEC  6E32               	movwf	(___fldiv@b+3)^0,c
  2909  000CEE                     l3216:
  2910  000CEE  5036               	movf	(___fldiv@a+3)^0,w,c
  2911  000CF0  0B80               	andlw	128
  2912  000CF2  1A3F               	xorwf	___fldiv@sign^0,f,c
  2913  000CF4  5036               	movf	(___fldiv@a+3)^0,w,c
  2914  000CF6  2436               	addwf	(___fldiv@a+3)^0,w,c
  2915  000CF8  6E47               	movwf	___fldiv@aexp^0,c
  2916  000CFA  AE35               	btfss	(___fldiv@a+2)^0,7,c
  2917  000CFC  EF82  F006         	goto	u2901
  2918  000D00  EF84  F006         	goto	u2900
  2919  000D04                     u2901:
  2920  000D04  EF85  F006         	goto	l3224
  2921  000D08                     u2900:
  2922  000D08  8047               	bsf	___fldiv@aexp^0,0,c
  2923  000D0A                     l3224:
  2924  000D0A  5047               	movf	___fldiv@aexp^0,w,c
  2925  000D0C  B4D8               	btfsc	status,2,c
  2926  000D0E  EF8B  F006         	goto	u2911
  2927  000D12  EF8D  F006         	goto	u2910
  2928  000D16                     u2911:
  2929  000D16  EFA2  F006         	goto	l3234
  2930  000D1A                     u2910:
  2931  000D1A  2847               	incf	___fldiv@aexp^0,w,c
  2932  000D1C  A4D8               	btfss	status,2,c
  2933  000D1E  EF93  F006         	goto	u2921
  2934  000D22  EF95  F006         	goto	u2920
  2935  000D26                     u2921:
  2936  000D26  EF9D  F006         	goto	l3230
  2937  000D2A                     u2920:
  2938  000D2A  0E00               	movlw	0
  2939  000D2C  6E33               	movwf	___fldiv@a^0,c
  2940  000D2E  0E00               	movlw	0
  2941  000D30  6E34               	movwf	(___fldiv@a+1)^0,c
  2942  000D32  0E00               	movlw	0
  2943  000D34  6E35               	movwf	(___fldiv@a+2)^0,c
  2944  000D36  0E00               	movlw	0
  2945  000D38  6E36               	movwf	(___fldiv@a+3)^0,c
  2946  000D3A                     l3230:
  2947  000D3A  8E35               	bsf	(___fldiv@a+2)^0,7,c
  2948  000D3C  0E00               	movlw	0
  2949  000D3E  6E36               	movwf	(___fldiv@a+3)^0,c
  2950  000D40  EFAA  F006         	goto	l3236
  2951  000D44                     l3234:
  2952  000D44  0E00               	movlw	0
  2953  000D46  6E33               	movwf	___fldiv@a^0,c
  2954  000D48  0E00               	movlw	0
  2955  000D4A  6E34               	movwf	(___fldiv@a+1)^0,c
  2956  000D4C  0E00               	movlw	0
  2957  000D4E  6E35               	movwf	(___fldiv@a+2)^0,c
  2958  000D50  0E00               	movlw	0
  2959  000D52  6E36               	movwf	(___fldiv@a+3)^0,c
  2960  000D54                     l3236:
  2961  000D54  5033               	movf	___fldiv@a^0,w,c
  2962  000D56  1034               	iorwf	(___fldiv@a+1)^0,w,c
  2963  000D58  1035               	iorwf	(___fldiv@a+2)^0,w,c
  2964  000D5A  1036               	iorwf	(___fldiv@a+3)^0,w,c
  2965  000D5C  A4D8               	btfss	status,2,c
  2966  000D5E  EFB3  F006         	goto	u2931
  2967  000D62  EFB5  F006         	goto	u2930
  2968  000D66                     u2931:
  2969  000D66  EFCD  F006         	goto	l3248
  2970  000D6A                     u2930:
  2971  000D6A  0E00               	movlw	0
  2972  000D6C  6E2F               	movwf	___fldiv@b^0,c
  2973  000D6E  0E00               	movlw	0
  2974  000D70  6E30               	movwf	(___fldiv@b+1)^0,c
  2975  000D72  0E00               	movlw	0
  2976  000D74  6E31               	movwf	(___fldiv@b+2)^0,c
  2977  000D76  0E00               	movlw	0
  2978  000D78  6E32               	movwf	(___fldiv@b+3)^0,c
  2979  000D7A  0E80               	movlw	128
  2980  000D7C  1231               	iorwf	(___fldiv@b+2)^0,f,c
  2981  000D7E  0E7F               	movlw	127
  2982  000D80  1232               	iorwf	(___fldiv@b+3)^0,f,c
  2983  000D82                     l3242:
  2984  000D82  503F               	movf	___fldiv@sign^0,w,c
  2985  000D84  1232               	iorwf	(___fldiv@b+3)^0,f,c
  2986  000D86  C02F  F02F         	movff	___fldiv@b,?___fldiv
  2987  000D8A  C030  F030         	movff	___fldiv@b+1,?___fldiv+1
  2988  000D8E  C031  F031         	movff	___fldiv@b+2,?___fldiv+2
  2989  000D92  C032  F032         	movff	___fldiv@b+3,?___fldiv+3
  2990  000D96  EF10  F008         	goto	l907
  2991  000D9A                     l3248:
  2992  000D9A  5046               	movf	___fldiv@bexp^0,w,c
  2993  000D9C  A4D8               	btfss	status,2,c
  2994  000D9E  EFD3  F006         	goto	u2941
  2995  000DA2  EFD5  F006         	goto	u2940
  2996  000DA6                     u2941:
  2997  000DA6  EFDF  F006         	goto	l3256
  2998  000DAA                     u2940:
  2999  000DAA  0E00               	movlw	0
  3000  000DAC  6E2F               	movwf	?___fldiv^0,c
  3001  000DAE  0E00               	movlw	0
  3002  000DB0  6E30               	movwf	(?___fldiv+1)^0,c
  3003  000DB2  0E00               	movlw	0
  3004  000DB4  6E31               	movwf	(?___fldiv+2)^0,c
  3005  000DB6  0E00               	movlw	0
  3006  000DB8  6E32               	movwf	(?___fldiv+3)^0,c
  3007  000DBA  EF10  F008         	goto	l907
  3008  000DBE                     l3256:
  3009  000DBE  5047               	movf	___fldiv@aexp^0,w,c
  3010  000DC0  C046  F037         	movff	___fldiv@bexp,??___fldiv
  3011  000DC4  6A38               	clrf	(??___fldiv+1)^0,c
  3012  000DC6  5E37               	subwf	??___fldiv^0,f,c
  3013  000DC8  0E00               	movlw	0
  3014  000DCA  5A38               	subwfb	(??___fldiv+1)^0,f,c
  3015  000DCC  0E7F               	movlw	127
  3016  000DCE  2437               	addwf	??___fldiv^0,w,c
  3017  000DD0  6E40               	movwf	___fldiv@new_exp^0,c
  3018  000DD2  0E00               	movlw	0
  3019  000DD4  2038               	addwfc	(??___fldiv+1)^0,w,c
  3020  000DD6  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3021  000DD8  C02F  F03B         	movff	___fldiv@b,___fldiv@rem
  3022  000DDC  C030  F03C         	movff	___fldiv@b+1,___fldiv@rem+1
  3023  000DE0  C031  F03D         	movff	___fldiv@b+2,___fldiv@rem+2
  3024  000DE4  C032  F03E         	movff	___fldiv@b+3,___fldiv@rem+3
  3025  000DE8  0E00               	movlw	0
  3026  000DEA  6E2F               	movwf	___fldiv@b^0,c
  3027  000DEC  0E00               	movlw	0
  3028  000DEE  6E30               	movwf	(___fldiv@b+1)^0,c
  3029  000DF0  0E00               	movlw	0
  3030  000DF2  6E31               	movwf	(___fldiv@b+2)^0,c
  3031  000DF4  0E00               	movlw	0
  3032  000DF6  6E32               	movwf	(___fldiv@b+3)^0,c
  3033  000DF8  0E00               	movlw	0
  3034  000DFA  6E42               	movwf	___fldiv@grs^0,c
  3035  000DFC  0E00               	movlw	0
  3036  000DFE  6E43               	movwf	(___fldiv@grs+1)^0,c
  3037  000E00  0E00               	movlw	0
  3038  000E02  6E44               	movwf	(___fldiv@grs+2)^0,c
  3039  000E04  0E00               	movlw	0
  3040  000E06  6E45               	movwf	(___fldiv@grs+3)^0,c
  3041  000E08  0E00               	movlw	0
  3042  000E0A  6E47               	movwf	___fldiv@aexp^0,c
  3043  000E0C  EF40  F007         	goto	l909
  3044  000E10                     l3266:
  3045  000E10  5047               	movf	___fldiv@aexp^0,w,c
  3046  000E12  B4D8               	btfsc	status,2,c
  3047  000E14  EF0E  F007         	goto	u2951
  3048  000E18  EF10  F007         	goto	u2950
  3049  000E1C                     u2951:
  3050  000E1C  EF27  F007         	goto	l3274
  3051  000E20                     u2950:
  3052  000E20  90D8               	bcf	status,0,c
  3053  000E22  363B               	rlcf	___fldiv@rem^0,f,c
  3054  000E24  363C               	rlcf	(___fldiv@rem+1)^0,f,c
  3055  000E26  363D               	rlcf	(___fldiv@rem+2)^0,f,c
  3056  000E28  363E               	rlcf	(___fldiv@rem+3)^0,f,c
  3057  000E2A  90D8               	bcf	status,0,c
  3058  000E2C  362F               	rlcf	___fldiv@b^0,f,c
  3059  000E2E  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3060  000E30  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3061  000E32  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3062  000E34  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3063  000E36  EF1F  F007         	goto	u2961
  3064  000E3A  EF21  F007         	goto	u2960
  3065  000E3E                     u2961:
  3066  000E3E  EF22  F007         	goto	l912
  3067  000E42                     u2960:
  3068  000E42  802F               	bsf	___fldiv@b^0,0,c
  3069  000E44                     l912:
  3070  000E44  90D8               	bcf	status,0,c
  3071  000E46  3642               	rlcf	___fldiv@grs^0,f,c
  3072  000E48  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3073  000E4A  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3074  000E4C  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3075  000E4E                     l3274:
  3076  000E4E  5033               	movf	___fldiv@a^0,w,c
  3077  000E50  5C3B               	subwf	___fldiv@rem^0,w,c
  3078  000E52  5034               	movf	(___fldiv@a+1)^0,w,c
  3079  000E54  583C               	subwfb	(___fldiv@rem+1)^0,w,c
  3080  000E56  5035               	movf	(___fldiv@a+2)^0,w,c
  3081  000E58  583D               	subwfb	(___fldiv@rem+2)^0,w,c
  3082  000E5A  5036               	movf	(___fldiv@a+3)^0,w,c
  3083  000E5C  583E               	subwfb	(___fldiv@rem+3)^0,w,c
  3084  000E5E  A0D8               	btfss	status,0,c
  3085  000E60  EF34  F007         	goto	u2971
  3086  000E64  EF36  F007         	goto	u2970
  3087  000E68                     u2971:
  3088  000E68  EF3F  F007         	goto	l3280
  3089  000E6C                     u2970:
  3090  000E6C  8C45               	bsf	(___fldiv@grs+3)^0,6,c
  3091  000E6E  5033               	movf	___fldiv@a^0,w,c
  3092  000E70  5E3B               	subwf	___fldiv@rem^0,f,c
  3093  000E72  5034               	movf	(___fldiv@a+1)^0,w,c
  3094  000E74  5A3C               	subwfb	(___fldiv@rem+1)^0,f,c
  3095  000E76  5035               	movf	(___fldiv@a+2)^0,w,c
  3096  000E78  5A3D               	subwfb	(___fldiv@rem+2)^0,f,c
  3097  000E7A  5036               	movf	(___fldiv@a+3)^0,w,c
  3098  000E7C  5A3E               	subwfb	(___fldiv@rem+3)^0,f,c
  3099  000E7E                     l3280:
  3100  000E7E  2A47               	incf	___fldiv@aexp^0,f,c
  3101  000E80                     l909:
  3102  000E80  0E19               	movlw	25
  3103  000E82  6447               	cpfsgt	___fldiv@aexp^0,c
  3104  000E84  EF46  F007         	goto	u2981
  3105  000E88  EF48  F007         	goto	u2980
  3106  000E8C                     u2981:
  3107  000E8C  EF08  F007         	goto	l3266
  3108  000E90                     u2980:
  3109  000E90  503B               	movf	___fldiv@rem^0,w,c
  3110  000E92  103C               	iorwf	(___fldiv@rem+1)^0,w,c
  3111  000E94  103D               	iorwf	(___fldiv@rem+2)^0,w,c
  3112  000E96  103E               	iorwf	(___fldiv@rem+3)^0,w,c
  3113  000E98  B4D8               	btfsc	status,2,c
  3114  000E9A  EF51  F007         	goto	u2991
  3115  000E9E  EF53  F007         	goto	u2990
  3116  000EA2                     u2991:
  3117  000EA2  EF6B  F007         	goto	l3292
  3118  000EA6                     u2990:
  3119  000EA6  8042               	bsf	___fldiv@grs^0,0,c
  3120  000EA8  EF6B  F007         	goto	l3292
  3121  000EAC                     l3286:
  3122  000EAC  90D8               	bcf	status,0,c
  3123  000EAE  362F               	rlcf	___fldiv@b^0,f,c
  3124  000EB0  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3125  000EB2  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3126  000EB4  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3127  000EB6  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3128  000EB8  EF60  F007         	goto	u3001
  3129  000EBC  EF62  F007         	goto	u3000
  3130  000EC0                     u3001:
  3131  000EC0  EF63  F007         	goto	l918
  3132  000EC4                     u3000:
  3133  000EC4  802F               	bsf	___fldiv@b^0,0,c
  3134  000EC6                     l918:
  3135  000EC6  90D8               	bcf	status,0,c
  3136  000EC8  3642               	rlcf	___fldiv@grs^0,f,c
  3137  000ECA  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3138  000ECC  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3139  000ECE  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3140  000ED0  0640               	decf	___fldiv@new_exp^0,f,c
  3141  000ED2  A0D8               	btfss	status,0,c
  3142  000ED4  0641               	decf	(___fldiv@new_exp+1)^0,f,c
  3143  000ED6                     l3292:
  3144  000ED6  AE31               	btfss	(___fldiv@b+2)^0,7,c
  3145  000ED8  EF70  F007         	goto	u3011
  3146  000EDC  EF72  F007         	goto	u3010
  3147  000EE0                     u3011:
  3148  000EE0  EF56  F007         	goto	l3286
  3149  000EE4                     u3010:
  3150  000EE4  0E00               	movlw	0
  3151  000EE6  6E47               	movwf	___fldiv@aexp^0,c
  3152  000EE8  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3153  000EEA  EF79  F007         	goto	u3021
  3154  000EEE  EF7B  F007         	goto	u3020
  3155  000EF2                     u3021:
  3156  000EF2  EF9F  F007         	goto	l920
  3157  000EF6                     u3020:
  3158  000EF6  0EFF               	movlw	255
  3159  000EF8  1442               	andwf	___fldiv@grs^0,w,c
  3160  000EFA  6E37               	movwf	??___fldiv^0,c
  3161  000EFC  0EFF               	movlw	255
  3162  000EFE  1443               	andwf	(___fldiv@grs+1)^0,w,c
  3163  000F00  6E38               	movwf	(??___fldiv+1)^0,c
  3164  000F02  0EFF               	movlw	255
  3165  000F04  1444               	andwf	(___fldiv@grs+2)^0,w,c
  3166  000F06  6E39               	movwf	(??___fldiv+2)^0,c
  3167  000F08  0E7F               	movlw	127
  3168  000F0A  1445               	andwf	(___fldiv@grs+3)^0,w,c
  3169  000F0C  6E3A               	movwf	(??___fldiv+3)^0,c
  3170  000F0E  5037               	movf	??___fldiv^0,w,c
  3171  000F10  1038               	iorwf	(??___fldiv+1)^0,w,c
  3172  000F12  1039               	iorwf	(??___fldiv+2)^0,w,c
  3173  000F14  103A               	iorwf	(??___fldiv+3)^0,w,c
  3174  000F16  B4D8               	btfsc	status,2,c
  3175  000F18  EF90  F007         	goto	u3031
  3176  000F1C  EF92  F007         	goto	u3030
  3177  000F20                     u3031:
  3178  000F20  EF96  F007         	goto	l921
  3179  000F24                     u3030:
  3180  000F24                     l3300:
  3181  000F24  0E01               	movlw	1
  3182  000F26  6E47               	movwf	___fldiv@aexp^0,c
  3183  000F28  EF9F  F007         	goto	l920
  3184  000F2C                     l921:
  3185  000F2C  A02F               	btfss	___fldiv@b^0,0,c
  3186  000F2E  EF9B  F007         	goto	u3041
  3187  000F32  EF9D  F007         	goto	u3040
  3188  000F36                     u3041:
  3189  000F36  EF9F  F007         	goto	l920
  3190  000F3A                     u3040:
  3191  000F3A  EF92  F007         	goto	l3300
  3192  000F3E                     l920:
  3193  000F3E  5047               	movf	___fldiv@aexp^0,w,c
  3194  000F40  B4D8               	btfsc	status,2,c
  3195  000F42  EFA5  F007         	goto	u3051
  3196  000F46  EFA7  F007         	goto	u3050
  3197  000F4A                     u3051:
  3198  000F4A  EFCB  F007         	goto	l3312
  3199  000F4E                     u3050:
  3200  000F4E  0E01               	movlw	1
  3201  000F50  262F               	addwf	___fldiv@b^0,f,c
  3202  000F52  0E00               	movlw	0
  3203  000F54  2230               	addwfc	(___fldiv@b+1)^0,f,c
  3204  000F56  2231               	addwfc	(___fldiv@b+2)^0,f,c
  3205  000F58  2232               	addwfc	(___fldiv@b+3)^0,f,c
  3206  000F5A  A032               	btfss	(___fldiv@b+3)^0,0,c
  3207  000F5C  EFB2  F007         	goto	u3061
  3208  000F60  EFB4  F007         	goto	u3060
  3209  000F64                     u3061:
  3210  000F64  EFCB  F007         	goto	l3312
  3211  000F68                     u3060:
  3212  000F68  C02F  F037         	movff	___fldiv@b,??___fldiv
  3213  000F6C  C030  F038         	movff	___fldiv@b+1,??___fldiv+1
  3214  000F70  C031  F039         	movff	___fldiv@b+2,??___fldiv+2
  3215  000F74  C032  F03A         	movff	___fldiv@b+3,??___fldiv+3
  3216  000F78  343A               	rlcf	(??___fldiv+3)^0,w,c
  3217  000F7A  323A               	rrcf	(??___fldiv+3)^0,f,c
  3218  000F7C  3239               	rrcf	(??___fldiv+2)^0,f,c
  3219  000F7E  3238               	rrcf	(??___fldiv+1)^0,f,c
  3220  000F80  3237               	rrcf	??___fldiv^0,f,c
  3221  000F82  C037  F02F         	movff	??___fldiv,___fldiv@b
  3222  000F86  C038  F030         	movff	??___fldiv+1,___fldiv@b+1
  3223  000F8A  C039  F031         	movff	??___fldiv+2,___fldiv@b+2
  3224  000F8E  C03A  F032         	movff	??___fldiv+3,___fldiv@b+3
  3225  000F92  4A40               	infsnz	___fldiv@new_exp^0,f,c
  3226  000F94  2A41               	incf	(___fldiv@new_exp+1)^0,f,c
  3227  000F96                     l3312:
  3228  000F96  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3229  000F98  EFD6  F007         	goto	u3071
  3230  000F9C  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3231  000F9E  E108               	bnz	u3070
  3232  000FA0  2840               	incf	___fldiv@new_exp^0,w,c
  3233  000FA2  A0D8               	btfss	status,0,c
  3234  000FA4  EFD6  F007         	goto	u3071
  3235  000FA8  EFD8  F007         	goto	u3070
  3236  000FAC                     u3071:
  3237  000FAC  EFE3  F007         	goto	l3316
  3238  000FB0                     u3070:
  3239  000FB0  0E00               	movlw	0
  3240  000FB2  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3241  000FB4  6840               	setf	___fldiv@new_exp^0,c
  3242  000FB6  0E00               	movlw	0
  3243  000FB8  6E2F               	movwf	___fldiv@b^0,c
  3244  000FBA  0E00               	movlw	0
  3245  000FBC  6E30               	movwf	(___fldiv@b+1)^0,c
  3246  000FBE  0E00               	movlw	0
  3247  000FC0  6E31               	movwf	(___fldiv@b+2)^0,c
  3248  000FC2  0E00               	movlw	0
  3249  000FC4  6E32               	movwf	(___fldiv@b+3)^0,c
  3250  000FC6                     l3316:
  3251  000FC6  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3252  000FC8  EFF0  F007         	goto	u3080
  3253  000FCC  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3254  000FCE  E106               	bnz	u3081
  3255  000FD0  0440               	decf	___fldiv@new_exp^0,w,c
  3256  000FD2  B0D8               	btfsc	status,0,c
  3257  000FD4  EFEE  F007         	goto	u3081
  3258  000FD8  EFF0  F007         	goto	u3080
  3259  000FDC                     u3081:
  3260  000FDC  EFFE  F007         	goto	l3320
  3261  000FE0                     u3080:
  3262  000FE0  0E00               	movlw	0
  3263  000FE2  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3264  000FE4  0E00               	movlw	0
  3265  000FE6  6E40               	movwf	___fldiv@new_exp^0,c
  3266  000FE8  0E00               	movlw	0
  3267  000FEA  6E2F               	movwf	___fldiv@b^0,c
  3268  000FEC  0E00               	movlw	0
  3269  000FEE  6E30               	movwf	(___fldiv@b+1)^0,c
  3270  000FF0  0E00               	movlw	0
  3271  000FF2  6E31               	movwf	(___fldiv@b+2)^0,c
  3272  000FF4  0E00               	movlw	0
  3273  000FF6  6E32               	movwf	(___fldiv@b+3)^0,c
  3274  000FF8  0E00               	movlw	0
  3275  000FFA  6E3F               	movwf	___fldiv@sign^0,c
  3276  000FFC                     l3320:
  3277  000FFC  C040  F046         	movff	___fldiv@new_exp,___fldiv@bexp
  3278  001000  A046               	btfss	___fldiv@bexp^0,0,c
  3279  001002  EF05  F008         	goto	u3091
  3280  001006  EF07  F008         	goto	u3090
  3281  00100A                     u3091:
  3282  00100A  EF0A  F008         	goto	l3326
  3283  00100E                     u3090:
  3284  00100E  8E31               	bsf	(___fldiv@b+2)^0,7,c
  3285  001010  EF0B  F008         	goto	l3328
  3286  001014                     l3326:
  3287  001014  9E31               	bcf	(___fldiv@b+2)^0,7,c
  3288  001016                     l3328:
  3289  001016  90D8               	bcf	status,0,c
  3290  001018  3046               	rrcf	___fldiv@bexp^0,w,c
  3291  00101A  6E32               	movwf	(___fldiv@b+3)^0,c
  3292  00101C  EFC1  F006         	goto	l3242
  3293  001020                     l907:
  3294  001020  0012               	return		;funcret
  3295  001022                     __end_of___fldiv:
  3296                           	callstack 0
  3297                           
  3298 ;; *************** function ___awmod *****************
  3299 ;; Defined at:
  3300 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  dividend        2   81[COMRAM] int 
  3303 ;;  divisor         2   83[COMRAM] int 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  sign            1   86[COMRAM] unsigned char 
  3306 ;;  counter         1   85[COMRAM] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  2   81[COMRAM] int 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3316 ;;      Params:         4       0       0       0       0       0       0       0       0
  3317 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3319 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3320 ;;Total ram usage:        6 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    2
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_appADC
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text13
  3331  002ABC                     __ptext13:
  3332                           	callstack 0
  3333  002ABC                     ___awmod:
  3334                           	callstack 26
  3335  002ABC  0E00               	movlw	0
  3336  002ABE  6E57               	movwf	___awmod@sign^0,c
  3337  002AC0  BE53               	btfsc	(___awmod@dividend+1)^0,7,c
  3338  002AC2  EF67  F015         	goto	u3290
  3339  002AC6  EF65  F015         	goto	u3291
  3340  002ACA                     u3291:
  3341  002ACA  EF6D  F015         	goto	l3474
  3342  002ACE                     u3290:
  3343  002ACE  6C52               	negf	___awmod@dividend^0,c
  3344  002AD0  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3345  002AD2  B0D8               	btfsc	status,0,c
  3346  002AD4  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3347  002AD6  0E01               	movlw	1
  3348  002AD8  6E57               	movwf	___awmod@sign^0,c
  3349  002ADA                     l3474:
  3350  002ADA  BE55               	btfsc	(___awmod@divisor+1)^0,7,c
  3351  002ADC  EF74  F015         	goto	u3300
  3352  002AE0  EF72  F015         	goto	u3301
  3353  002AE4                     u3301:
  3354  002AE4  EF78  F015         	goto	l3478
  3355  002AE8                     u3300:
  3356  002AE8  6C54               	negf	___awmod@divisor^0,c
  3357  002AEA  1E55               	comf	(___awmod@divisor+1)^0,f,c
  3358  002AEC  B0D8               	btfsc	status,0,c
  3359  002AEE  2A55               	incf	(___awmod@divisor+1)^0,f,c
  3360  002AF0                     l3478:
  3361  002AF0  5054               	movf	___awmod@divisor^0,w,c
  3362  002AF2  1055               	iorwf	(___awmod@divisor+1)^0,w,c
  3363  002AF4  B4D8               	btfsc	status,2,c
  3364  002AF6  EF7F  F015         	goto	u3311
  3365  002AFA  EF81  F015         	goto	u3310
  3366  002AFE                     u3311:
  3367  002AFE  EFA5  F015         	goto	l3494
  3368  002B02                     u3310:
  3369  002B02  0E01               	movlw	1
  3370  002B04  6E56               	movwf	___awmod@counter^0,c
  3371  002B06  EF89  F015         	goto	l3484
  3372  002B0A                     l3482:
  3373  002B0A  90D8               	bcf	status,0,c
  3374  002B0C  3654               	rlcf	___awmod@divisor^0,f,c
  3375  002B0E  3655               	rlcf	(___awmod@divisor+1)^0,f,c
  3376  002B10  2A56               	incf	___awmod@counter^0,f,c
  3377  002B12                     l3484:
  3378  002B12  AE55               	btfss	(___awmod@divisor+1)^0,7,c
  3379  002B14  EF8E  F015         	goto	u3321
  3380  002B18  EF90  F015         	goto	u3320
  3381  002B1C                     u3321:
  3382  002B1C  EF85  F015         	goto	l3482
  3383  002B20                     u3320:
  3384  002B20                     l3486:
  3385  002B20  5054               	movf	___awmod@divisor^0,w,c
  3386  002B22  5C52               	subwf	___awmod@dividend^0,w,c
  3387  002B24  5055               	movf	(___awmod@divisor+1)^0,w,c
  3388  002B26  5853               	subwfb	(___awmod@dividend+1)^0,w,c
  3389  002B28  A0D8               	btfss	status,0,c
  3390  002B2A  EF99  F015         	goto	u3331
  3391  002B2E  EF9B  F015         	goto	u3330
  3392  002B32                     u3331:
  3393  002B32  EF9F  F015         	goto	l3490
  3394  002B36                     u3330:
  3395  002B36  5054               	movf	___awmod@divisor^0,w,c
  3396  002B38  5E52               	subwf	___awmod@dividend^0,f,c
  3397  002B3A  5055               	movf	(___awmod@divisor+1)^0,w,c
  3398  002B3C  5A53               	subwfb	(___awmod@dividend+1)^0,f,c
  3399  002B3E                     l3490:
  3400  002B3E  90D8               	bcf	status,0,c
  3401  002B40  3255               	rrcf	(___awmod@divisor+1)^0,f,c
  3402  002B42  3254               	rrcf	___awmod@divisor^0,f,c
  3403  002B44  2E56               	decfsz	___awmod@counter^0,f,c
  3404  002B46  EF90  F015         	goto	l3486
  3405  002B4A                     l3494:
  3406  002B4A  5057               	movf	___awmod@sign^0,w,c
  3407  002B4C  B4D8               	btfsc	status,2,c
  3408  002B4E  EFAB  F015         	goto	u3341
  3409  002B52  EFAD  F015         	goto	u3340
  3410  002B56                     u3341:
  3411  002B56  EFB1  F015         	goto	l3498
  3412  002B5A                     u3340:
  3413  002B5A  6C52               	negf	___awmod@dividend^0,c
  3414  002B5C  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3415  002B5E  B0D8               	btfsc	status,0,c
  3416  002B60  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3417  002B62                     l3498:
  3418  002B62  C052  F052         	movff	___awmod@dividend,?___awmod
  3419  002B66  C053  F053         	movff	___awmod@dividend+1,?___awmod+1
  3420  002B6A  0012               	return		;funcret
  3421  002B6C                     __end_of___awmod:
  3422                           	callstack 0
  3423                           
  3424 ;; *************** function _appInit *****************
  3425 ;; Defined at:
  3426 ;;		line 12 in file "app.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3440 ;;      Params:         0       0       0       0       0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3443 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    5
  3447 ;; This function calls:
  3448 ;;		_adcInit
  3449 ;;		_appCounterInit
  3450 ;;		_appISRConfig
  3451 ;;		_appLCD_Init
  3452 ;;		_appTimerInit
  3453 ;;		_appTimerStart
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text14
  3460  0030FA                     __ptext14:
  3461                           	callstack 0
  3462  0030FA                     _appInit:
  3463                           	callstack 25
  3464  0030FA                     
  3465                           ;app.c: 14:     appISRConfig();
  3466  0030FA  ECA9  F018         	call	_appISRConfig	;wreg free
  3467  0030FE                     
  3468                           ;app.c: 15:     appLCD_Init();
  3469  0030FE  ECB6  F015         	call	_appLCD_Init	;wreg free
  3470  003102                     
  3471                           ;app.c: 16:     adcInit(2);
  3472  003102  0E02               	movlw	2
  3473  003104  EC10  F017         	call	_adcInit
  3474  003108                     
  3475                           ;app.c: 17:     appTimerInit();
  3476  003108  EC57  F018         	call	_appTimerInit	;wreg free
  3477  00310C                     
  3478                           ;app.c: 18:     appCounterInit(250);
  3479  00310C  0E00               	movlw	0
  3480  00310E  6E05               	movwf	(appCounterInit@reload+1)^0,c
  3481  003110  0EFA               	movlw	250
  3482  003112  6E04               	movwf	appCounterInit@reload^0,c
  3483  003114  EC9C  F018         	call	_appCounterInit	;wreg free
  3484  003118                     
  3485                           ;app.c: 19:     appTimerStart();
  3486  003118  ECA3  F018         	call	_appTimerStart	;wreg free
  3487  00311C  0012               	return		;funcret
  3488  00311E                     __end_of_appInit:
  3489                           	callstack 0
  3490                           
  3491 ;; *************** function _appTimerInit *****************
  3492 ;; Defined at:
  3493 ;;		line 53 in file "servo.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      void 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3507 ;;      Params:         0       0       0       0       0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    2
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_appInit
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text15
  3522  0030AE                     __ptext15:
  3523                           	callstack 0
  3524  0030AE                     _appTimerInit:
  3525                           	callstack 27
  3526  0030AE                     
  3527                           ;servo.c: 58:     T3CONbits.TMR3ON = 0;
  3528  0030AE  90B1               	bcf	177,0,c	;volatile
  3529                           
  3530                           ;servo.c: 59:     T3CONbits.RD16 = 1;
  3531  0030B0  8EB1               	bsf	177,7,c	;volatile
  3532                           
  3533                           ;servo.c: 60:     T3CONbits.TMR3CS = 0;
  3534  0030B2  92B1               	bcf	177,1,c	;volatile
  3535  0030B4                     
  3536                           ;servo.c: 61:     T3CONbits.T3CKPS = 0b11;
  3537  0030B4  0E30               	movlw	48
  3538  0030B6  12B1               	iorwf	177,f,c	;volatile
  3539  0030B8                     
  3540                           ;servo.c: 62:     T3CONbits.T3NSYNC = 1;
  3541  0030B8  84B1               	bsf	177,2,c	;volatile
  3542  0030BA                     
  3543                           ;servo.c: 67:     T0CONbits.TMR0ON = 0;
  3544  0030BA  9ED5               	bcf	213,7,c	;volatile
  3545  0030BC                     
  3546                           ;servo.c: 68:     T0CONbits.T08BIT = 1;
  3547  0030BC  8CD5               	bsf	213,6,c	;volatile
  3548  0030BE                     
  3549                           ;servo.c: 69:     T0CONbits.T0CS = 1;
  3550  0030BE  8AD5               	bsf	213,5,c	;volatile
  3551  0030C0                     
  3552                           ;servo.c: 70:     T0CONbits.T0SE = 0;
  3553  0030C0  98D5               	bcf	213,4,c	;volatile
  3554  0030C2                     
  3555                           ;servo.c: 71:     T0CONbits.PSA = 1;
  3556  0030C2  86D5               	bsf	213,3,c	;volatile
  3557  0030C4                     
  3558                           ;servo.c: 73:     TRISAbits.TRISA4 = 1;
  3559  0030C4  8892               	bsf	146,4,c	;volatile
  3560  0030C6                     
  3561                           ;servo.c: 79:     INTCONbits.TMR0IE = 1;
  3562  0030C6  8AF2               	bsf	242,5,c	;volatile
  3563  0030C8                     
  3564                           ;servo.c: 80:     INTCONbits.TMR0IF = 0;
  3565  0030C8  94F2               	bcf	242,2,c	;volatile
  3566  0030CA                     
  3567                           ;servo.c: 81:     INTCON2bits.TMR0IP = 1;
  3568  0030CA  84F1               	bsf	241,2,c	;volatile
  3569  0030CC                     
  3570                           ;servo.c: 87:     PIR2bits.TMR3IF = 0;
  3571  0030CC  92A1               	bcf	161,1,c	;volatile
  3572  0030CE                     
  3573                           ;servo.c: 88:     IPR2bits.TMR3IP = 0;
  3574  0030CE  92A2               	bcf	162,1,c	;volatile
  3575  0030D0                     
  3576                           ;servo.c: 89:     PIE2bits.TMR3IE = 1;
  3577  0030D0  82A0               	bsf	160,1,c	;volatile
  3578  0030D2  0012               	return		;funcret
  3579  0030D4                     __end_of_appTimerInit:
  3580                           	callstack 0
  3581                           
  3582 ;; *************** function _appLCD_Init *****************
  3583 ;; Defined at:
  3584 ;;		line 197 in file "flex_lcd.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3600 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3601 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    4
  3605 ;; This function calls:
  3606 ;;		_Lcd_Cmd
  3607 ;;		_Lcd_Init
  3608 ;;		_Lcd_Out
  3609 ;; This function is called by:
  3610 ;;		_appInit
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text16
  3615  002B6C                     __ptext16:
  3616                           	callstack 0
  3617  002B6C                     _appLCD_Init:
  3618                           	callstack 25
  3619  002B6C                     
  3620                           ;flex_lcd.c: 199:     Lcd_Init();
  3621  002B6C  ECFE  F014         	call	_Lcd_Init	;wreg free
  3622                           
  3623                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  3624  002B70  0E01               	movlw	1
  3625  002B72  EC3B  F012         	call	_Lcd_Cmd
  3626                           
  3627                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  3628  002B76  0E0C               	movlw	12
  3629  002B78  EC3B  F012         	call	_Lcd_Cmd
  3630  002B7C                     
  3631                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  3632  002B7C  0E02               	movlw	2
  3633  002B7E  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3634  002B80  0E86               	movlw	134
  3635  002B82  6E0E               	movwf	??_appLCD_Init^0,c
  3636  002B84  0E99               	movlw	153
  3637  002B86                     u4487:
  3638  002B86  2EE8               	decfsz	wreg,f,c
  3639  002B88  D7FE               	bra	u4487
  3640  002B8A  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3641  002B8C  D7FC               	bra	u4487
  3642  002B8E  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3643  002B90  D7FA               	bra	u4487
  3644  002B92  F000               	nop	
  3645  002B94                     
  3646                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  3647  002B94  0E03               	movlw	3
  3648  002B96  6E07               	movwf	Lcd_Out@x^0,c
  3649  002B98  0E3C               	movlw	low STR_3
  3650  002B9A  6E08               	movwf	Lcd_Out@buffer^0,c
  3651  002B9C  0E08               	movlw	high STR_3
  3652  002B9E  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3653  002BA0  0E01               	movlw	1
  3654  002BA2  ECD2  F013         	call	_Lcd_Out
  3655  002BA6                     
  3656                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  3657  002BA6  0E06               	movlw	6
  3658  002BA8  6E07               	movwf	Lcd_Out@x^0,c
  3659  002BAA  0E51               	movlw	low STR_4
  3660  002BAC  6E08               	movwf	Lcd_Out@buffer^0,c
  3661  002BAE  0E08               	movlw	high STR_4
  3662  002BB0  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3663  002BB2  0E02               	movlw	2
  3664  002BB4  ECD2  F013         	call	_Lcd_Out
  3665  002BB8                     
  3666                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  3667  002BB8  0E1F               	movlw	31
  3668  002BBA  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3669  002BBC  0E71               	movlw	113
  3670  002BBE  6E0E               	movwf	??_appLCD_Init^0,c
  3671  002BC0  0E1E               	movlw	30
  3672  002BC2                     u4497:
  3673  002BC2  2EE8               	decfsz	wreg,f,c
  3674  002BC4  D7FE               	bra	u4497
  3675  002BC6  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3676  002BC8  D7FC               	bra	u4497
  3677  002BCA  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3678  002BCC  D7FA               	bra	u4497
  3679  002BCE  D000               	nop2	
  3680                           
  3681                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  3682  002BD0  0E01               	movlw	1
  3683  002BD2  EC3B  F012         	call	_Lcd_Cmd
  3684  002BD6  0E02               	movlw	2
  3685  002BD8  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3686  002BDA  0E86               	movlw	134
  3687  002BDC  6E0E               	movwf	??_appLCD_Init^0,c
  3688  002BDE  0E99               	movlw	153
  3689  002BE0                     u4507:
  3690  002BE0  2EE8               	decfsz	wreg,f,c
  3691  002BE2  D7FE               	bra	u4507
  3692  002BE4  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3693  002BE6  D7FC               	bra	u4507
  3694  002BE8  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3695  002BEA  D7FA               	bra	u4507
  3696  002BEC  F000               	nop	
  3697  002BEE  0012               	return		;funcret
  3698  002BF0                     __end_of_appLCD_Init:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _Lcd_Init *****************
  3702 ;; Defined at:
  3703 ;;		line 31 in file "flex_lcd.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  i               1    7[COMRAM] unsigned char 
  3708 ;;  data            1    0        unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0
  3719 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3720 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3721 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3722 ;;Total ram usage:        3 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    3
  3725 ;; This function calls:
  3726 ;;		_Lcd_Cmd
  3727 ;; This function is called by:
  3728 ;;		_appLCD_Init
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text17
  3733  0029FC                     __ptext17:
  3734                           	callstack 0
  3735  0029FC                     _Lcd_Init:
  3736                           	callstack 25
  3737  0029FC                     
  3738                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  3739  0029FC  9E95               	bcf	149,7,c	;volatile
  3740                           
  3741                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  3742  0029FE  9C95               	bcf	149,6,c	;volatile
  3743                           
  3744                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  3745  002A00  9A95               	bcf	149,5,c	;volatile
  3746                           
  3747                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  3748  002A02  9895               	bcf	149,4,c	;volatile
  3749                           
  3750                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  3751  002A04  9695               	bcf	149,3,c	;volatile
  3752                           
  3753                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  3754  002A06  9495               	bcf	149,2,c	;volatile
  3755  002A08                     
  3756                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  3757  002A08  0E85               	movlw	133
  3758  002A0A  6E07               	movwf	??_Lcd_Init^0,c
  3759  002A0C  0E76               	movlw	118
  3760  002A0E                     u4517:
  3761  002A0E  2EE8               	decfsz	wreg,f,c
  3762  002A10  D7FE               	bra	u4517
  3763  002A12  2E07               	decfsz	??_Lcd_Init^0,f,c
  3764  002A14  D7FC               	bra	u4517
  3765  002A16  D000               	nop2	
  3766  002A18                     
  3767                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  3768  002A18  0E00               	movlw	0
  3769  002A1A  6E08               	movwf	Lcd_Init@i^0,c
  3770  002A1C                     l99:
  3771                           
  3772                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  3773  002A1C  9E8C               	bcf	140,7,c	;volatile
  3774                           
  3775                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  3776  002A1E  9C8C               	bcf	140,6,c	;volatile
  3777                           
  3778                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  3779  002A20  8A8C               	bsf	140,5,c	;volatile
  3780                           
  3781                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  3782  002A22  888C               	bsf	140,4,c	;volatile
  3783                           
  3784                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  3785  002A24  968C               	bcf	140,3,c	;volatile
  3786                           
  3787                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  3788  002A26  948C               	bcf	140,2,c	;volatile
  3789                           
  3790                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  3791  002A28  9E8C               	bcf	140,7,c	;volatile
  3792                           
  3793                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  3794  002A2A  9C8C               	bcf	140,6,c	;volatile
  3795                           
  3796                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  3797  002A2C  8A8C               	bsf	140,5,c	;volatile
  3798                           
  3799                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  3800  002A2E  888C               	bsf	140,4,c	;volatile
  3801                           
  3802                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  3803  002A30  868C               	bsf	140,3,c	;volatile
  3804                           
  3805                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  3806  002A32  948C               	bcf	140,2,c	;volatile
  3807  002A34                     
  3808                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  3809  002A34  0E05               	movlw	5
  3810  002A36                     u4527:
  3811  002A36  2EE8               	decfsz	wreg,f,c
  3812  002A38  D7FE               	bra	u4527
  3813  002A3A                     
  3814                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  3815  002A3A  9E8C               	bcf	140,7,c	;volatile
  3816  002A3C                     
  3817                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  3818  002A3C  9C8C               	bcf	140,6,c	;volatile
  3819  002A3E                     
  3820                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  3821  002A3E  8A8C               	bsf	140,5,c	;volatile
  3822  002A40                     
  3823                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  3824  002A40  888C               	bsf	140,4,c	;volatile
  3825  002A42                     
  3826                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  3827  002A42  968C               	bcf	140,3,c	;volatile
  3828  002A44                     
  3829                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  3830  002A44  948C               	bcf	140,2,c	;volatile
  3831                           
  3832                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3833  002A46  0E16               	movlw	22
  3834  002A48  6E07               	movwf	??_Lcd_Init^0,c
  3835  002A4A  0E6C               	movlw	108
  3836  002A4C                     u4537:
  3837  002A4C  2EE8               	decfsz	wreg,f,c
  3838  002A4E  D7FE               	bra	u4537
  3839  002A50  2E07               	decfsz	??_Lcd_Init^0,f,c
  3840  002A52  D7FC               	bra	u4537
  3841  002A54  D000               	nop2	
  3842  002A56                     
  3843                           ;flex_lcd.c: 61:     }
  3844  002A56  2A08               	incf	Lcd_Init@i^0,f,c
  3845  002A58  0E03               	movlw	3
  3846  002A5A  6408               	cpfsgt	Lcd_Init@i^0,c
  3847  002A5C  EF32  F015         	goto	u2861
  3848  002A60  EF34  F015         	goto	u2860
  3849  002A64                     u2861:
  3850  002A64  EF0E  F015         	goto	l99
  3851  002A68                     u2860:
  3852  002A68                     
  3853                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  3854  002A68  9E8C               	bcf	140,7,c	;volatile
  3855                           
  3856                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  3857  002A6A  9C8C               	bcf	140,6,c	;volatile
  3858                           
  3859                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  3860  002A6C  8A8C               	bsf	140,5,c	;volatile
  3861                           
  3862                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  3863  002A6E  988C               	bcf	140,4,c	;volatile
  3864                           
  3865                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  3866  002A70  968C               	bcf	140,3,c	;volatile
  3867                           
  3868                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  3869  002A72  948C               	bcf	140,2,c	;volatile
  3870                           
  3871                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  3872  002A74  9E8C               	bcf	140,7,c	;volatile
  3873                           
  3874                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  3875  002A76  9C8C               	bcf	140,6,c	;volatile
  3876                           
  3877                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  3878  002A78  8A8C               	bsf	140,5,c	;volatile
  3879                           
  3880                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  3881  002A7A  988C               	bcf	140,4,c	;volatile
  3882                           
  3883                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  3884  002A7C  868C               	bsf	140,3,c	;volatile
  3885                           
  3886                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  3887  002A7E  948C               	bcf	140,2,c	;volatile
  3888  002A80                     
  3889                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3890  002A80  0E05               	movlw	5
  3891  002A82                     u4547:
  3892  002A82  2EE8               	decfsz	wreg,f,c
  3893  002A84  D7FE               	bra	u4547
  3894  002A86                     
  3895                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  3896  002A86  9E8C               	bcf	140,7,c	;volatile
  3897  002A88                     
  3898                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  3899  002A88  9C8C               	bcf	140,6,c	;volatile
  3900  002A8A                     
  3901                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  3902  002A8A  8A8C               	bsf	140,5,c	;volatile
  3903  002A8C                     
  3904                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  3905  002A8C  988C               	bcf	140,4,c	;volatile
  3906  002A8E                     
  3907                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  3908  002A8E  968C               	bcf	140,3,c	;volatile
  3909  002A90                     
  3910                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  3911  002A90  948C               	bcf	140,2,c	;volatile
  3912                           
  3913                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3914  002A92  0E16               	movlw	22
  3915  002A94  6E07               	movwf	??_Lcd_Init^0,c
  3916  002A96  0E6C               	movlw	108
  3917  002A98                     u4557:
  3918  002A98  2EE8               	decfsz	wreg,f,c
  3919  002A9A  D7FE               	bra	u4557
  3920  002A9C  2E07               	decfsz	??_Lcd_Init^0,f,c
  3921  002A9E  D7FC               	bra	u4557
  3922  002AA0  D000               	nop2	
  3923  002AA2                     
  3924                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  3925  002AA2  0E28               	movlw	40
  3926  002AA4  EC3B  F012         	call	_Lcd_Cmd
  3927  002AA8                     
  3928                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  3929  002AA8  0E10               	movlw	16
  3930  002AAA  EC3B  F012         	call	_Lcd_Cmd
  3931  002AAE                     
  3932                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  3933  002AAE  0E01               	movlw	1
  3934  002AB0  EC3B  F012         	call	_Lcd_Cmd
  3935  002AB4                     
  3936                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  3937  002AB4  0E0F               	movlw	15
  3938  002AB6  EC3B  F012         	call	_Lcd_Cmd
  3939  002ABA  0012               	return		;funcret
  3940  002ABC                     __end_of_Lcd_Init:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function _appISRConfig *****************
  3944 ;; Defined at:
  3945 ;;		line 55 in file "app.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		None
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    2
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_appInit
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text18
  3974  003152                     __ptext18:
  3975                           	callstack 0
  3976  003152                     _appISRConfig:
  3977                           	callstack 27
  3978  003152                     
  3979                           ;app.c: 60:     RCONbits.IPEN = 1;
  3980  003152  8ED0               	bsf	208,7,c	;volatile
  3981                           
  3982                           ;app.c: 61:     INTCONbits.GIE_GIEH = 1;
  3983  003154  8EF2               	bsf	242,7,c	;volatile
  3984                           
  3985                           ;app.c: 62:     INTCONbits.PEIE_GIEL = 1;
  3986  003156  8CF2               	bsf	242,6,c	;volatile
  3987  003158  0012               	return		;funcret
  3988  00315A                     __end_of_appISRConfig:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _appCounterInit *****************
  3992 ;; Defined at:
  3993 ;;		line 102 in file "servo.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  reload          2    3[COMRAM] unsigned short 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4007 ;;      Params:         2       0       0       0       0       0       0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4010 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4011 ;;Total ram usage:        2 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    2
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_appInit
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text19
  4022  003138                     __ptext19:
  4023                           	callstack 0
  4024  003138                     _appCounterInit:
  4025                           	callstack 27
  4026  003138                     
  4027                           ;servo.c: 102: void appCounterInit(uint16_t reload);servo.c: 103: {;servo.c: 104:     TM
      +                          R0 = reload + 1;
  4028  003138  0E01               	movlw	1
  4029  00313A  2404               	addwf	appCounterInit@reload^0,w,c
  4030  00313C  6ED6               	movwf	214,c	;volatile
  4031  00313E  0E00               	movlw	0
  4032  003140  2005               	addwfc	(appCounterInit@reload+1)^0,w,c
  4033  003142  6ED7               	movwf	215,c	;volatile
  4034  003144  0012               	return		;funcret
  4035  003146                     __end_of_appCounterInit:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _adcInit *****************
  4039 ;; Defined at:
  4040 ;;		line 10 in file "adc.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  ADC_PINs        1    wreg     unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  ADC_PINs        1    4[COMRAM] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4054 ;;      Params:         0       0       0       0       0       0       0       0       0
  4055 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4056 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4057 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4058 ;;Total ram usage:        2 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    2
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_appInit
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text20
  4069  002E20                     __ptext20:
  4070                           	callstack 0
  4071  002E20                     _adcInit:
  4072                           	callstack 27
  4073                           
  4074                           ;incstack = 0
  4075                           ;adcInit@ADC_PINs stored from wreg
  4076  002E20  6E05               	movwf	adcInit@ADC_PINs^0,c
  4077  002E22                     
  4078                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  4079  002E22  5005               	movf	adcInit@ADC_PINs^0,w,c
  4080  002E24  A4D8               	btfss	status,2,c
  4081  002E26  EF17  F017         	goto	u3521
  4082  002E2A  EF19  F017         	goto	u3520
  4083  002E2E                     u3521:
  4084  002E2E  EF1F  F017         	goto	l3596
  4085  002E32                     u3520:
  4086  002E32                     
  4087                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  4088  002E32  50C1               	movf	193,w,c	;volatile
  4089  002E34  0BF0               	andlw	-16
  4090  002E36  090E               	iorlw	14
  4091  002E38  6EC1               	movwf	193,c	;volatile
  4092                           
  4093                           ;adc.c: 16:     }
  4094  002E3A  EF27  F017         	goto	l3598
  4095  002E3E                     l3596:
  4096                           
  4097                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  4098  002E3E  5005               	movf	adcInit@ADC_PINs^0,w,c
  4099  002E40  080F               	sublw	15
  4100  002E42  6E04               	movwf	??_adcInit^0,c
  4101  002E44  50C1               	movf	193,w,c	;volatile
  4102  002E46  1804               	xorwf	??_adcInit^0,w,c
  4103  002E48  0BF0               	andlw	-16
  4104  002E4A  1804               	xorwf	??_adcInit^0,w,c
  4105  002E4C  6EC1               	movwf	193,c	;volatile
  4106  002E4E                     l3598:
  4107                           
  4108                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  4109  002E4E  0ECF               	movlw	-49
  4110  002E50  16C1               	andwf	193,f,c	;volatile
  4111  002E52                     
  4112                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  4113  002E52  50C0               	movf	192,w,c	;volatile
  4114  002E54  0BC7               	andlw	-57
  4115  002E56  0910               	iorlw	16
  4116  002E58  6EC0               	movwf	192,c	;volatile
  4117  002E5A                     
  4118                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  4119  002E5A  50C0               	movf	192,w,c	;volatile
  4120  002E5C  0BF8               	andlw	-8
  4121  002E5E  0903               	iorlw	3
  4122  002E60  6EC0               	movwf	192,c	;volatile
  4123  002E62                     
  4124                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  4125  002E62  8EC0               	bsf	192,7,c	;volatile
  4126  002E64                     
  4127                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  4128  002E64  80C2               	bsf	194,0,c	;volatile
  4129  002E66  0012               	return		;funcret
  4130  002E68                     __end_of_adcInit:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _appTimerStop *****************
  4134 ;; Defined at:
  4135 ;;		line 97 in file "servo.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		None
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    2
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_appGetElements
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text21
  4164  003160                     __ptext21:
  4165                           	callstack 0
  4166  003160                     _appTimerStop:
  4167                           	callstack 27
  4168  003160                     
  4169                           ;servo.c: 99:     T3CONbits.TMR3ON = 0;
  4170  003160  90B1               	bcf	177,0,c	;volatile
  4171  003162  0012               	return		;funcret
  4172  003164                     __end_of_appTimerStop:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _appTimerStart *****************
  4176 ;; Defined at:
  4177 ;;		line 91 in file "servo.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4191 ;;      Params:         0       0       0       0       0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4195 ;;Total ram usage:        0 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    2
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_appInit
  4202 ;;		_appGetElements
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text22
  4207  003146                     __ptext22:
  4208                           	callstack 0
  4209  003146                     _appTimerStart:
  4210                           	callstack 27
  4211  003146                     
  4212                           ;servo.c: 93:     TMR3 = 20536;
  4213  003146  0E50               	movlw	80
  4214  003148  6EB3               	movwf	179,c	;volatile
  4215  00314A  0E38               	movlw	56
  4216  00314C  6EB2               	movwf	178,c	;volatile
  4217  00314E                     
  4218                           ;servo.c: 94:     T3CONbits.TMR3ON = 1;
  4219  00314E  80B1               	bsf	177,0,c	;volatile
  4220  003150  0012               	return		;funcret
  4221  003152                     __end_of_appTimerStart:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _appSubGiveElemts *****************
  4225 ;; Defined at:
  4226 ;;		line 93 in file "app.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  data            2    3[COMRAM] PTR struct _state
  4229 ;;		 -> datos(25), 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4241 ;;      Params:         2       0       0       0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4244 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4245 ;;Total ram usage:        2 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    3
  4248 ;; This function calls:
  4249 ;;		_appCounterStart
  4250 ;; This function is called by:
  4251 ;;		_appGetElements
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text23
  4256  00315A                     __ptext23:
  4257                           	callstack 0
  4258  00315A                     _appSubGiveElemts:
  4259                           	callstack 26
  4260  00315A                     
  4261                           ;app.c: 93: void appSubGiveElemts(StateMachine *data);app.c: 94: {;app.c: 95:     appCou
      +                          nterStart();
  4262  00315A  ECB2  F018         	call	_appCounterStart	;wreg free
  4263  00315E  0012               	return		;funcret
  4264  003160                     __end_of_appSubGiveElemts:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _appCounterStart *****************
  4268 ;; Defined at:
  4269 ;;		line 107 in file "servo.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		None
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4286 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    2
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_appSubGiveElemts
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text24
  4298  003164                     __ptext24:
  4299                           	callstack 0
  4300  003164                     _appCounterStart:
  4301                           	callstack 26
  4302  003164                     
  4303                           ;servo.c: 110:     T0CONbits.TMR0ON = 1;
  4304  003164  8ED5               	bsf	213,7,c	;volatile
  4305  003166  0012               	return		;funcret
  4306  003168                     __end_of_appCounterStart:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function _appSubGetData *****************
  4310 ;; Defined at:
  4311 ;;		line 65 in file "app.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  4314 ;;		 -> datos(25), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  cantidad        2   38[BANK0 ] unsigned short 
  4317 ;;  inout           1   40[BANK0 ] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:         0       2       0       0       0       0       0       0       0
  4328 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4330 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4331 ;;Total ram usage:        5 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:   10
  4334 ;; This function calls:
  4335 ;;		_Lcd_Out
  4336 ;;		___wmul
  4337 ;;		_memset
  4338 ;;		_sprintf
  4339 ;;		_teclado
  4340 ;; This function is called by:
  4341 ;;		_appGetElements
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text25
  4346  0026A6                     __ptext25:
  4347                           	callstack 0
  4348  0026A6                     _appSubGetData:
  4349                           	callstack 19
  4350  0026A6                     
  4351                           ;app.c: 65: void appSubGetData(StateMachine *data_Inout);app.c: 66: {;app.c: 67:     uin
      +                          t16_t cantidad = 0;
  4352  0026A6  0E00               	movlw	0
  4353  0026A8  0100               	movlb	0	; () banked
  4354  0026AA  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  4355  0026AC  0E00               	movlw	0
  4356  0026AE  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  4357                           
  4358                           ;app.c: 68:     uint8_t inout = 0;
  4359  0026B0  0E00               	movlw	0
  4360  0026B2  6F88               	movwf	appSubGetData@inout& (0+255),b
  4361  0026B4                     
  4362                           ; BSR set to: 0
  4363                           ;app.c: 69:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  4364  0026B4  0E07               	movlw	7
  4365  0026B6  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4366  0026B8  6E04               	movwf	memset@dest^0,c
  4367  0026BA  0E00               	movlw	0
  4368  0026BC  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4369  0026BE  6E05               	movwf	(memset@dest+1)^0,c
  4370  0026C0  0E00               	movlw	0
  4371  0026C2  6E07               	movwf	(memset@c+1)^0,c
  4372  0026C4  0E00               	movlw	0
  4373  0026C6  6E06               	movwf	memset@c^0,c
  4374  0026C8  0E00               	movlw	0
  4375  0026CA  6E09               	movwf	(memset@n+1)^0,c
  4376  0026CC  0E10               	movlw	16
  4377  0026CE  6E08               	movwf	memset@n^0,c
  4378  0026D0  EC85  F00F         	call	_memset	;wreg free
  4379  0026D4                     
  4380                           ;app.c: 70:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  4381  0026D4  0E00               	movlw	0
  4382  0026D6  6E07               	movwf	Lcd_Out@x^0,c
  4383  0026D8  0E14               	movlw	low STR_6
  4384  0026DA  6E08               	movwf	Lcd_Out@buffer^0,c
  4385  0026DC  0E08               	movlw	high STR_6
  4386  0026DE  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  4387  0026E0  0E01               	movlw	1
  4388  0026E2  ECD2  F013         	call	_Lcd_Out
  4389                           
  4390                           ;app.c: 71:     while(inout != '*')
  4391  0026E6  EFBD  F013         	goto	l4326
  4392  0026EA                     l4314:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;app.c: 72:     {;app.c: 73:         teclado(&inout);
  4396  0026EA  0E88               	movlw	low appSubGetData@inout
  4397  0026EC  6E04               	movwf	teclado@valor^0,c
  4398  0026EE  0E00               	movlw	high appSubGetData@inout
  4399  0026F0  6E05               	movwf	(teclado@valor+1)^0,c
  4400  0026F2  EC36  F00B         	call	_teclado	;wreg free
  4401  0026F6                     
  4402                           ;app.c: 75:         if((inout >= '0') && (inout <= '9'))
  4403  0026F6  0E2F               	movlw	47
  4404  0026F8  0100               	movlb	0	; () banked
  4405  0026FA  6588               	cpfsgt	appSubGetData@inout& (0+255),b
  4406  0026FC  EF82  F013         	goto	u4321
  4407  002700  EF84  F013         	goto	u4320
  4408  002704                     u4321:
  4409  002704  EFA1  F013         	goto	l4322
  4410  002708                     u4320:
  4411  002708                     
  4412                           ; BSR set to: 0
  4413  002708  0E3A               	movlw	58
  4414  00270A  6188               	cpfslt	appSubGetData@inout& (0+255),b
  4415  00270C  EF8A  F013         	goto	u4331
  4416  002710  EF8C  F013         	goto	u4330
  4417  002714                     u4331:
  4418  002714  EFA1  F013         	goto	l4322
  4419  002718                     u4330:
  4420  002718                     
  4421                           ; BSR set to: 0
  4422                           ;app.c: 76:         {;app.c: 77:             cantidad = (cantidad*10)+(inout - 48);
  4423  002718  C086  F004         	movff	appSubGetData@cantidad,___wmul@multiplier
  4424  00271C  C087  F005         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  4425  002720  0E00               	movlw	0
  4426  002722  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  4427  002724  0E0A               	movlw	10
  4428  002726  6E06               	movwf	___wmul@multiplicand^0,c
  4429  002728  EC6A  F018         	call	___wmul	;wreg free
  4430  00272C  0100               	movlb	0	; () banked
  4431  00272E  5188               	movf	appSubGetData@inout& (0+255),w,b
  4432  002730  2604               	addwf	?___wmul^0,f,c
  4433  002732  0E00               	movlw	0
  4434  002734  2205               	addwfc	(?___wmul+1)^0,f,c
  4435  002736  0ED0               	movlw	208
  4436  002738  2404               	addwf	?___wmul^0,w,c
  4437  00273A  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  4438  00273C  0EFF               	movlw	255
  4439  00273E  2005               	addwfc	(?___wmul+1)^0,w,c
  4440  002740  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  4441  002742                     l4322:
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;app.c: 79:         sprintf((char *)data_Inout->display,"%d",cantidad);
  4445  002742  0E07               	movlw	7
  4446  002744  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4447  002746  6F72               	movwf	sprintf@s& (0+255),b
  4448  002748  0E00               	movlw	0
  4449  00274A  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4450  00274C  6F73               	movwf	(sprintf@s+1)& (0+255),b
  4451  00274E  0E59               	movlw	low (STR_5+2)
  4452  002750  6F74               	movwf	sprintf@fmt& (0+255),b
  4453  002752  0E08               	movlw	high (STR_5+2)
  4454  002754  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  4455  002756  C086  F076         	movff	appSubGetData@cantidad,?_sprintf+4
  4456  00275A  C087  F077         	movff	appSubGetData@cantidad+1,?_sprintf+5
  4457  00275E  EC9A  F016         	call	_sprintf	;wreg free
  4458  002762                     
  4459                           ;app.c: 80:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  4460  002762  0E00               	movlw	0
  4461  002764  6E07               	movwf	Lcd_Out@x^0,c
  4462  002766  0E07               	movlw	7
  4463  002768  0100               	movlb	0	; () banked
  4464  00276A  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4465  00276C  6E08               	movwf	Lcd_Out@buffer^0,c
  4466  00276E  0E00               	movlw	0
  4467  002770  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4468  002772  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  4469  002774  0E02               	movlw	2
  4470  002776  ECD2  F013         	call	_Lcd_Out
  4471  00277A                     l4326:
  4472                           
  4473                           ;app.c: 71:     while(inout != '*')
  4474  00277A  0E2A               	movlw	42
  4475  00277C  0100               	movlb	0	; () banked
  4476  00277E  1988               	xorwf	appSubGetData@inout& (0+255),w,b
  4477  002780  A4D8               	btfss	status,2,c
  4478  002782  EFC5  F013         	goto	u4341
  4479  002786  EFC7  F013         	goto	u4340
  4480  00278A                     u4341:
  4481  00278A  EF75  F013         	goto	l4314
  4482  00278E                     u4340:
  4483  00278E                     
  4484                           ; BSR set to: 0
  4485                           ;app.c: 82:     data_Inout->elements = (int16_t)cantidad;
  4486  00278E  EE20 F001          	lfsr	2,1
  4487  002792  5184               	movf	appSubGetData@data_Inout& (0+255),w,b
  4488  002794  26D9               	addwf	fsr2l,f,c
  4489  002796  5185               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  4490  002798  22DA               	addwfc	fsr2h,f,c
  4491  00279A  C086  FFDE         	movff	appSubGetData@cantidad,postinc2
  4492  00279E  C087  FFDD         	movff	appSubGetData@cantidad+1,postdec2
  4493  0027A2                     
  4494                           ; BSR set to: 0
  4495  0027A2  0012               	return		;funcret
  4496  0027A4                     __end_of_appSubGetData:
  4497                           	callstack 0
  4498                           
  4499 ;; *************** function _teclado *****************
  4500 ;; Defined at:
  4501 ;;		line 10 in file "teclado.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  valor           2    3[COMRAM] PTR unsigned char 
  4504 ;;		 -> appSubGetData@inout(1), datos(25), 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  1    wreg      void 
  4509 ;; Registers used:
  4510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4516 ;;      Params:         2       0       0       0       0       0       0       0       0
  4517 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4519 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4520 ;;Total ram usage:        2 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; Hardware stack levels required when called:    2
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_appStateInitial
  4527 ;;		_appSubGetData
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text26
  4532  00166C                     __ptext26:
  4533                           	callstack 0
  4534  00166C                     _teclado:
  4535                           	callstack 27
  4536  00166C                     
  4537                           ;teclado.c: 11:     *valor = 0;
  4538  00166C  C004  FFD9         	movff	teclado@valor,fsr2l
  4539  001670  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4540  001674  0E00               	movlw	0
  4541  001676  6EDF               	movwf	indf2,c
  4542  001678                     
  4543                           ;teclado.c: 12:     PORTB=0xF0;
  4544  001678  0EF0               	movlw	240
  4545  00167A  6E81               	movwf	129,c	;volatile
  4546  00167C                     
  4547                           ;teclado.c: 13:     if(PORTB != 0xF0){
  4548  00167C  0EF0               	movlw	240
  4549  00167E  1881               	xorwf	129,w,c	;volatile
  4550  001680  B4D8               	btfsc	status,2,c
  4551  001682  EF45  F00B         	goto	u2681
  4552  001686  EF47  F00B         	goto	u2680
  4553  00168A                     u2681:
  4554  00168A  EF1F  F00C         	goto	l3134
  4555  00168E                     u2680:
  4556  00168E                     
  4557                           ;teclado.c: 14:         PORTB=0xFE;
  4558  00168E  0EFE               	movlw	254
  4559  001690  6E81               	movwf	129,c	;volatile
  4560  001692                     
  4561                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  4562  001692  B881               	btfsc	129,4,c	;volatile
  4563  001694  EF4E  F00B         	goto	u2691
  4564  001698  EF50  F00B         	goto	u2690
  4565  00169C                     u2691:
  4566  00169C  EF56  F00B         	goto	l3068
  4567  0016A0                     u2690:
  4568  0016A0  C004  FFD9         	movff	teclado@valor,fsr2l
  4569  0016A4  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4570  0016A8  0E2A               	movlw	42
  4571  0016AA  6EDF               	movwf	indf2,c
  4572  0016AC                     l3068:
  4573                           
  4574                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  4575  0016AC  BA81               	btfsc	129,5,c	;volatile
  4576  0016AE  EF5B  F00B         	goto	u2701
  4577  0016B2  EF5D  F00B         	goto	u2700
  4578  0016B6                     u2701:
  4579  0016B6  EF63  F00B         	goto	l3072
  4580  0016BA                     u2700:
  4581  0016BA  C004  FFD9         	movff	teclado@valor,fsr2l
  4582  0016BE  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4583  0016C2  0E30               	movlw	48
  4584  0016C4  6EDF               	movwf	indf2,c
  4585  0016C6                     l3072:
  4586                           
  4587                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  4588  0016C6  BC81               	btfsc	129,6,c	;volatile
  4589  0016C8  EF68  F00B         	goto	u2711
  4590  0016CC  EF6A  F00B         	goto	u2710
  4591  0016D0                     u2711:
  4592  0016D0  EF70  F00B         	goto	l3076
  4593  0016D4                     u2710:
  4594  0016D4  C004  FFD9         	movff	teclado@valor,fsr2l
  4595  0016D8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4596  0016DC  0E23               	movlw	35
  4597  0016DE  6EDF               	movwf	indf2,c
  4598  0016E0                     l3076:
  4599                           
  4600                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  4601  0016E0  BE81               	btfsc	129,7,c	;volatile
  4602  0016E2  EF75  F00B         	goto	u2721
  4603  0016E6  EF77  F00B         	goto	u2720
  4604  0016EA                     u2721:
  4605  0016EA  EF7D  F00B         	goto	l3080
  4606  0016EE                     u2720:
  4607  0016EE  C004  FFD9         	movff	teclado@valor,fsr2l
  4608  0016F2  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4609  0016F6  0E44               	movlw	68
  4610  0016F8  6EDF               	movwf	indf2,c
  4611  0016FA                     l3080:
  4612                           
  4613                           ;teclado.c: 19:         PORTB=0xFD;
  4614  0016FA  0EFD               	movlw	253
  4615  0016FC  6E81               	movwf	129,c	;volatile
  4616  0016FE                     
  4617                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  4618  0016FE  B881               	btfsc	129,4,c	;volatile
  4619  001700  EF84  F00B         	goto	u2731
  4620  001704  EF86  F00B         	goto	u2730
  4621  001708                     u2731:
  4622  001708  EF8C  F00B         	goto	l3086
  4623  00170C                     u2730:
  4624  00170C  C004  FFD9         	movff	teclado@valor,fsr2l
  4625  001710  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4626  001714  0E37               	movlw	55
  4627  001716  6EDF               	movwf	indf2,c
  4628  001718                     l3086:
  4629                           
  4630                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  4631  001718  BA81               	btfsc	129,5,c	;volatile
  4632  00171A  EF91  F00B         	goto	u2741
  4633  00171E  EF93  F00B         	goto	u2740
  4634  001722                     u2741:
  4635  001722  EF99  F00B         	goto	l3090
  4636  001726                     u2740:
  4637  001726  C004  FFD9         	movff	teclado@valor,fsr2l
  4638  00172A  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4639  00172E  0E38               	movlw	56
  4640  001730  6EDF               	movwf	indf2,c
  4641  001732                     l3090:
  4642                           
  4643                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  4644  001732  BC81               	btfsc	129,6,c	;volatile
  4645  001734  EF9E  F00B         	goto	u2751
  4646  001738  EFA0  F00B         	goto	u2750
  4647  00173C                     u2751:
  4648  00173C  EFA6  F00B         	goto	l3094
  4649  001740                     u2750:
  4650  001740  C004  FFD9         	movff	teclado@valor,fsr2l
  4651  001744  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4652  001748  0E39               	movlw	57
  4653  00174A  6EDF               	movwf	indf2,c
  4654  00174C                     l3094:
  4655                           
  4656                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  4657  00174C  BE81               	btfsc	129,7,c	;volatile
  4658  00174E  EFAB  F00B         	goto	u2761
  4659  001752  EFAD  F00B         	goto	u2760
  4660  001756                     u2761:
  4661  001756  EFB3  F00B         	goto	l3098
  4662  00175A                     u2760:
  4663  00175A  C004  FFD9         	movff	teclado@valor,fsr2l
  4664  00175E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4665  001762  0E43               	movlw	67
  4666  001764  6EDF               	movwf	indf2,c
  4667  001766                     l3098:
  4668                           
  4669                           ;teclado.c: 24:         PORTB=0xFB;
  4670  001766  0EFB               	movlw	251
  4671  001768  6E81               	movwf	129,c	;volatile
  4672  00176A                     
  4673                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  4674  00176A  B881               	btfsc	129,4,c	;volatile
  4675  00176C  EFBA  F00B         	goto	u2771
  4676  001770  EFBC  F00B         	goto	u2770
  4677  001774                     u2771:
  4678  001774  EFC2  F00B         	goto	l3104
  4679  001778                     u2770:
  4680  001778  C004  FFD9         	movff	teclado@valor,fsr2l
  4681  00177C  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4682  001780  0E34               	movlw	52
  4683  001782  6EDF               	movwf	indf2,c
  4684  001784                     l3104:
  4685                           
  4686                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  4687  001784  BA81               	btfsc	129,5,c	;volatile
  4688  001786  EFC7  F00B         	goto	u2781
  4689  00178A  EFC9  F00B         	goto	u2780
  4690  00178E                     u2781:
  4691  00178E  EFCF  F00B         	goto	l3108
  4692  001792                     u2780:
  4693  001792  C004  FFD9         	movff	teclado@valor,fsr2l
  4694  001796  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4695  00179A  0E35               	movlw	53
  4696  00179C  6EDF               	movwf	indf2,c
  4697  00179E                     l3108:
  4698                           
  4699                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  4700  00179E  BC81               	btfsc	129,6,c	;volatile
  4701  0017A0  EFD4  F00B         	goto	u2791
  4702  0017A4  EFD6  F00B         	goto	u2790
  4703  0017A8                     u2791:
  4704  0017A8  EFDC  F00B         	goto	l3112
  4705  0017AC                     u2790:
  4706  0017AC  C004  FFD9         	movff	teclado@valor,fsr2l
  4707  0017B0  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4708  0017B4  0E36               	movlw	54
  4709  0017B6  6EDF               	movwf	indf2,c
  4710  0017B8                     l3112:
  4711                           
  4712                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  4713  0017B8  BE81               	btfsc	129,7,c	;volatile
  4714  0017BA  EFE1  F00B         	goto	u2801
  4715  0017BE  EFE3  F00B         	goto	u2800
  4716  0017C2                     u2801:
  4717  0017C2  EFE9  F00B         	goto	l3116
  4718  0017C6                     u2800:
  4719  0017C6  C004  FFD9         	movff	teclado@valor,fsr2l
  4720  0017CA  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4721  0017CE  0E42               	movlw	66
  4722  0017D0  6EDF               	movwf	indf2,c
  4723  0017D2                     l3116:
  4724                           
  4725                           ;teclado.c: 29:         PORTB=0xF7;
  4726  0017D2  0EF7               	movlw	247
  4727  0017D4  6E81               	movwf	129,c	;volatile
  4728  0017D6                     
  4729                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  4730  0017D6  B881               	btfsc	129,4,c	;volatile
  4731  0017D8  EFF0  F00B         	goto	u2811
  4732  0017DC  EFF2  F00B         	goto	u2810
  4733  0017E0                     u2811:
  4734  0017E0  EFF8  F00B         	goto	l3122
  4735  0017E4                     u2810:
  4736  0017E4  C004  FFD9         	movff	teclado@valor,fsr2l
  4737  0017E8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4738  0017EC  0E31               	movlw	49
  4739  0017EE  6EDF               	movwf	indf2,c
  4740  0017F0                     l3122:
  4741                           
  4742                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  4743  0017F0  BA81               	btfsc	129,5,c	;volatile
  4744  0017F2  EFFD  F00B         	goto	u2821
  4745  0017F6  EFFF  F00B         	goto	u2820
  4746  0017FA                     u2821:
  4747  0017FA  EF05  F00C         	goto	l3126
  4748  0017FE                     u2820:
  4749  0017FE  C004  FFD9         	movff	teclado@valor,fsr2l
  4750  001802  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4751  001806  0E32               	movlw	50
  4752  001808  6EDF               	movwf	indf2,c
  4753  00180A                     l3126:
  4754                           
  4755                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  4756  00180A  BC81               	btfsc	129,6,c	;volatile
  4757  00180C  EF0A  F00C         	goto	u2831
  4758  001810  EF0C  F00C         	goto	u2830
  4759  001814                     u2831:
  4760  001814  EF12  F00C         	goto	l3130
  4761  001818                     u2830:
  4762  001818  C004  FFD9         	movff	teclado@valor,fsr2l
  4763  00181C  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4764  001820  0E33               	movlw	51
  4765  001822  6EDF               	movwf	indf2,c
  4766  001824                     l3130:
  4767                           
  4768                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  4769  001824  BE81               	btfsc	129,7,c	;volatile
  4770  001826  EF17  F00C         	goto	u2841
  4771  00182A  EF19  F00C         	goto	u2840
  4772  00182E                     u2841:
  4773  00182E  EF1F  F00C         	goto	l3134
  4774  001832                     u2840:
  4775  001832  C004  FFD9         	movff	teclado@valor,fsr2l
  4776  001836  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4777  00183A  0E41               	movlw	65
  4778  00183C  6EDF               	movwf	indf2,c
  4779  00183E                     l3134:
  4780                           
  4781                           ;teclado.c: 35:     PORTB = 0xF0;
  4782  00183E  0EF0               	movlw	240
  4783  001840  6E81               	movwf	129,c	;volatile
  4784  001842                     l3136:
  4785  001842  0EF0               	movlw	240
  4786  001844  1881               	xorwf	129,w,c	;volatile
  4787  001846  A4D8               	btfss	status,2,c
  4788  001848  EF28  F00C         	goto	u2851
  4789  00184C  EF2A  F00C         	goto	u2850
  4790  001850                     u2851:
  4791  001850  EF21  F00C         	goto	l3136
  4792  001854                     u2850:
  4793  001854  0012               	return		;funcret
  4794  001856                     __end_of_teclado:
  4795                           	callstack 0
  4796                           
  4797 ;; *************** function _sprintf *****************
  4798 ;; Defined at:
  4799 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  s               2   18[BANK0 ] PTR unsigned char 
  4802 ;;		 -> appElemts@dataout(6), datos(25), 
  4803 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  4804 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  f               6   30[BANK0 ] struct _IO_FILE
  4807 ;;  ap              2   28[BANK0 ] PTR void [1]
  4808 ;;		 -> ?_sprintf(2), 
  4809 ;;  ret             2    0        int 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2   18[BANK0 ] int 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4819 ;;      Params:         0       8       0       0       0       0       0       0       0
  4820 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4822 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4823 ;;Total ram usage:       18 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    9
  4826 ;; This function calls:
  4827 ;;		_vfprintf
  4828 ;; This function is called by:
  4829 ;;		_appADC
  4830 ;;		_appBat
  4831 ;;		_appElemts
  4832 ;;		_appSubGetData
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text27
  4837  002D34                     __ptext27:
  4838                           	callstack 0
  4839  002D34                     _sprintf:
  4840                           	callstack 19
  4841  002D34  0E76               	movlw	low (?_sprintf+4)
  4842  002D36  0100               	movlb	0	; () banked
  4843  002D38  6F7C               	movwf	sprintf@ap& (0+255),b
  4844  002D3A  0E00               	movlw	high (?_sprintf+4)
  4845  002D3C  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  4846  002D3E  C072  F07E         	movff	sprintf@s,sprintf@f
  4847  002D42  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  4848  002D46                     
  4849                           ; BSR set to: 0
  4850  002D46  0E00               	movlw	0
  4851  002D48  6F81               	movwf	(sprintf@f+3)& (0+255),b
  4852  002D4A  0E00               	movlw	0
  4853  002D4C  6F80               	movwf	(sprintf@f+2)& (0+255),b
  4854  002D4E                     
  4855                           ; BSR set to: 0
  4856  002D4E  0E00               	movlw	0
  4857  002D50  6F83               	movwf	(sprintf@f+5)& (0+255),b
  4858  002D52  0E00               	movlw	0
  4859  002D54  6F82               	movwf	(sprintf@f+4)& (0+255),b
  4860  002D56                     
  4861                           ; BSR set to: 0
  4862  002D56  0E7E               	movlw	low sprintf@f
  4863  002D58  6F6C               	movwf	vfprintf@fp& (0+255),b
  4864  002D5A  0E00               	movlw	high sprintf@f
  4865  002D5C  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  4866  002D5E  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  4867  002D62  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4868  002D66  0E7C               	movlw	low sprintf@ap
  4869  002D68  6F70               	movwf	vfprintf@ap& (0+255),b
  4870  002D6A  0E00               	movlw	high sprintf@ap
  4871  002D6C  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  4872  002D6E  EC69  F016         	call	_vfprintf	;wreg free
  4873  002D72  0100               	movlb	0	; () banked
  4874  002D74  5180               	movf	(sprintf@f+2)& (0+255),w,b
  4875  002D76  2572               	addwf	sprintf@s& (0+255),w,b
  4876  002D78  6ED9               	movwf	fsr2l,c
  4877  002D7A  5181               	movf	(sprintf@f+3)& (0+255),w,b
  4878  002D7C  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  4879  002D7E  6EDA               	movwf	fsr2h,c
  4880  002D80  0E00               	movlw	0
  4881  002D82  6EDF               	movwf	indf2,c
  4882  002D84                     
  4883                           ; BSR set to: 0
  4884  002D84  0012               	return		;funcret
  4885  002D86                     __end_of_sprintf:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _vfprintf *****************
  4889 ;; Defined at:
  4890 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  4893 ;;		 -> sprintf@f(6), 
  4894 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  4895 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4896 ;;  ap              2   16[BANK0 ] PTR PTR void 
  4897 ;;		 -> sprintf@ap(2), 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  4900 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  2   12[BANK0 ] int 
  4903 ;; Registers used:
  4904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4910 ;;      Params:         0       6       0       0       0       0       0       0       0
  4911 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4913 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4914 ;;Total ram usage:        8 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    8
  4917 ;; This function calls:
  4918 ;;		_vfpfcnvrt
  4919 ;; This function is called by:
  4920 ;;		_sprintf
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text28
  4925  002CD2                     __ptext28:
  4926                           	callstack 0
  4927  002CD2                     _vfprintf:
  4928                           	callstack 19
  4929  002CD2                     
  4930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4931  002CD2  C06E  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  4932  002CD6  C06F  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4933  002CDA                     
  4934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4935  002CDA  0E00               	movlw	0
  4936  002CDC  0100               	movlb	0	; () banked
  4937  002CDE  6F95               	movwf	(_nout+1)& (0+255),b
  4938  002CE0  0E00               	movlw	0
  4939  002CE2  6F94               	movwf	_nout& (0+255),b
  4940                           
  4941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4942  002CE4  EF87  F016         	goto	l4266
  4943  002CE8                     l4264:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4947  002CE8  C06C  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4948  002CEC  C06D  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4949  002CF0  0E4D               	movlw	low vfprintf@cfmt
  4950  002CF2  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4951  002CF4  0E00               	movlw	high vfprintf@cfmt
  4952  002CF6  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4953  002CF8  C070  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4954  002CFC  C071  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4955  002D00  EC11  F008         	call	_vfpfcnvrt	;wreg free
  4956  002D04  5043               	movf	?_vfpfcnvrt^0,w,c
  4957  002D06  0100               	movlb	0	; () banked
  4958  002D08  2794               	addwf	_nout& (0+255),f,b
  4959  002D0A  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4960  002D0C  2395               	addwfc	(_nout+1)& (0+255),f,b
  4961  002D0E                     l4266:
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4965  002D0E  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  4966  002D12  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4967  002D16                     	if	0	;tblptru may be non-zero
  4968  002D16                     	endif
  4969  002D16                     	if	0	;tblptru may be non-zero
  4970  002D16                     	endif
  4971  002D16  0008               	tblrd		*
  4972  002D18  50F5               	movf	tablat,w,c
  4973  002D1A  0900               	iorlw	0
  4974  002D1C  A4D8               	btfss	status,2,c
  4975  002D1E  EF93  F016         	goto	u4301
  4976  002D22  EF95  F016         	goto	u4300
  4977  002D26                     u4301:
  4978  002D26  EF74  F016         	goto	l4264
  4979  002D2A                     u4300:
  4980  002D2A                     
  4981                           ; BSR set to: 0
  4982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4983  002D2A  C094  F06C         	movff	_nout,?_vfprintf
  4984  002D2E  C095  F06D         	movff	_nout+1,?_vfprintf+1
  4985  002D32                     
  4986                           ; BSR set to: 0
  4987  002D32  0012               	return		;funcret
  4988  002D34                     __end_of_vfprintf:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _vfpfcnvrt *****************
  4992 ;; Defined at:
  4993 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4996 ;;		 -> sprintf@f(6), 
  4997 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4998 ;;		 -> vfprintf@cfmt(2), 
  4999 ;;  ap              2   70[COMRAM] PTR PTR void 
  5000 ;;		 -> sprintf@ap(2), 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  ll              8    0[BANK0 ] long long 
  5003 ;;  llu             8    0        unsigned long long 
  5004 ;;  f               4    0        unsigned long long 
  5005 ;;  vp              3    0        PTR void 
  5006 ;;  ct              3    0        unsigned char [3]
  5007 ;;  cp              3    0        PTR unsigned char 
  5008 ;;  done            2    8[BANK0 ] int 
  5009 ;;  i               2    0        int 
  5010 ;;  c               1    0        unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  2   66[COMRAM] int 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5020 ;;      Params:         6       0       0       0       0       0       0       0       0
  5021 ;;      Locals:         0      12       0       0       0       0       0       0       0
  5022 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5023 ;;      Totals:        10      12       0       0       0       0       0       0       0
  5024 ;;Total ram usage:       22 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    7
  5027 ;; This function calls:
  5028 ;;		_atoi
  5029 ;;		_dtoa
  5030 ;;		_fputc
  5031 ;;		_isdigit
  5032 ;; This function is called by:
  5033 ;;		_vfprintf
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text29
  5038  001022                     __ptext29:
  5039                           	callstack 0
  5040  001022                     _vfpfcnvrt:
  5041                           	callstack 19
  5042  001022                     
  5043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5044  001022  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5045  001026  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5046  00102A  CFDE FFF6          	movff	postinc2,tblptrl
  5047  00102E  CFDD FFF7          	movff	postdec2,tblptrh
  5048  001032                     	if	0	;tblptru may be non-zero
  5049  001032                     	endif
  5050  001032                     	if	0	;tblptru may be non-zero
  5051  001032                     	endif
  5052  001032  0008               	tblrd		*
  5053  001034  50F5               	movf	tablat,w,c
  5054  001036  0A25               	xorlw	37
  5055  001038  A4D8               	btfss	status,2,c
  5056  00103A  EF21  F008         	goto	u4191
  5057  00103E  EF23  F008         	goto	u4190
  5058  001042                     u4191:
  5059  001042  EFAB  F009         	goto	l4242
  5060  001046                     u4190:
  5061  001046                     
  5062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5063  001046  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5064  00104A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5065  00104E  2ADE               	incf	postinc2,f,c
  5066  001050  0E00               	movlw	0
  5067  001052  22DD               	addwfc	postdec2,f,c
  5068  001054                     
  5069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5070  001054  0E00               	movlw	0
  5071  001056  0100               	movlb	0	; () banked
  5072  001058  6F97               	movwf	(_width+1)& (0+255),b
  5073  00105A  0E00               	movlw	0
  5074  00105C  6F96               	movwf	_width& (0+255),b
  5075  00105E  C096  F05A         	movff	_width,_flags
  5076  001062  C097  F05B         	movff	_width+1,_flags+1
  5077  001066                     
  5078                           ; BSR set to: 0
  5079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5080  001066  6858               	setf	_prec^0,c
  5081  001068  6859               	setf	(_prec+1)^0,c
  5082  00106A                     
  5083                           ; BSR set to: 0
  5084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  5085  00106A  0E00               	movlw	0
  5086  00106C  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5087  00106E  0E00               	movlw	0
  5088  001070  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  5089                           
  5090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5091  001072  EF81  F008         	goto	l4194
  5092  001076                     l4168:
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  5096  001076  805A               	bsf	_flags^0,0,c
  5097  001078                     l4170:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  5101  001078  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5102  00107C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5103  001080  2ADE               	incf	postinc2,f,c
  5104  001082  0E00               	movlw	0
  5105  001084  22DD               	addwfc	postdec2,f,c
  5106                           
  5107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  5108  001086  EF81  F008         	goto	l4194
  5109  00108A                     l4172:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  5113  00108A  825A               	bsf	_flags^0,1,c
  5114  00108C  EF3C  F008         	goto	l4170
  5115  001090                     l4176:
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  5119  001090  845A               	bsf	_flags^0,2,c
  5120  001092  EF3C  F008         	goto	l4170
  5121  001096                     l4180:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  5125  001096  865A               	bsf	_flags^0,3,c
  5126  001098  EF3C  F008         	goto	l4170
  5127  00109C                     l4184:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  5131  00109C  885A               	bsf	_flags^0,4,c
  5132  00109E  EF3C  F008         	goto	l4170
  5133  0010A2                     l4188:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  5137  0010A2  0E00               	movlw	0
  5138  0010A4  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5139  0010A6  0E01               	movlw	1
  5140  0010A8  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  5141                           
  5142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  5143  0010AA  EF81  F008         	goto	l4194
  5144  0010AE                     l4192:
  5145                           
  5146                           ; BSR set to: 0
  5147  0010AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5148  0010B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5149  0010B6  CFDE FFF6          	movff	postinc2,tblptrl
  5150  0010BA  CFDD FFF7          	movff	postdec2,tblptrh
  5151  0010BE                     	if	0	;tblptru may be non-zero
  5152  0010BE                     	endif
  5153  0010BE                     	if	0	;tblptru may be non-zero
  5154  0010BE                     	endif
  5155  0010BE  0008               	tblrd		*
  5156  0010C0  50F5               	movf	tablat,w,c
  5157  0010C2  6E49               	movwf	??_vfpfcnvrt^0,c
  5158  0010C4  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  5159                           
  5160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5161                           ; Switch size 1, requested type "simple"
  5162                           ; Number of cases is 1, Range of values is 0 to 0
  5163                           ; switch strategies available:
  5164                           ; Name         Instructions Cycles
  5165                           ; simple_byte            4     3 (average)
  5166                           ;	Chosen strategy is simple_byte
  5167  0010C6  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  5168  0010C8  0A00               	xorlw	0	; case 0
  5169  0010CA  B4D8               	btfsc	status,2,c
  5170  0010CC  EF6A  F008         	goto	l4480
  5171  0010D0  EF51  F008         	goto	l4188
  5172  0010D4                     l4480:
  5173                           
  5174                           ; BSR set to: 0
  5175                           ; Switch size 1, requested type "simple"
  5176                           ; Number of cases is 5, Range of values is 32 to 48
  5177                           ; switch strategies available:
  5178                           ; Name         Instructions Cycles
  5179                           ; simple_byte           16     9 (average)
  5180                           ;	Chosen strategy is simple_byte
  5181  0010D4  5049               	movf	??_vfpfcnvrt^0,w,c
  5182  0010D6  0A20               	xorlw	32	; case 32
  5183  0010D8  B4D8               	btfsc	status,2,c
  5184  0010DA  EF4B  F008         	goto	l4180
  5185  0010DE  0A03               	xorlw	3	; case 35
  5186  0010E0  B4D8               	btfsc	status,2,c
  5187  0010E2  EF4E  F008         	goto	l4184
  5188  0010E6  0A08               	xorlw	8	; case 43
  5189  0010E8  B4D8               	btfsc	status,2,c
  5190  0010EA  EF48  F008         	goto	l4176
  5191  0010EE  0A06               	xorlw	6	; case 45
  5192  0010F0  B4D8               	btfsc	status,2,c
  5193  0010F2  EF3B  F008         	goto	l4168
  5194  0010F6  0A1D               	xorlw	29	; case 48
  5195  0010F8  B4D8               	btfsc	status,2,c
  5196  0010FA  EF45  F008         	goto	l4172
  5197  0010FE  EF51  F008         	goto	l4188
  5198  001102                     l4194:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5202  001102  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  5203  001104  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5204  001106  B4D8               	btfsc	status,2,c
  5205  001108  EF88  F008         	goto	u4201
  5206  00110C  EF8A  F008         	goto	u4200
  5207  001110                     u4201:
  5208  001110  EF57  F008         	goto	l4192
  5209  001114                     u4200:
  5210  001114                     
  5211                           ; BSR set to: 0
  5212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  5213  001114  A05A               	btfss	_flags^0,0,c
  5214  001116  EF8F  F008         	goto	u4211
  5215  00111A  EF91  F008         	goto	u4210
  5216  00111E                     u4211:
  5217  00111E  EF92  F008         	goto	l4198
  5218  001122                     u4210:
  5219  001122                     
  5220                           ; BSR set to: 0
  5221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  5222  001122  925A               	bcf	_flags^0,1,c
  5223  001124                     l4198:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  5227  001124  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5228  001128  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5229  00112C  CFDE FFF6          	movff	postinc2,tblptrl
  5230  001130  CFDD FFF7          	movff	postdec2,tblptrh
  5231  001134                     	if	0	;tblptru may be non-zero
  5232  001134                     	endif
  5233  001134                     	if	0	;tblptru may be non-zero
  5234  001134                     	endif
  5235  001134  0008               	tblrd		*
  5236  001136  50F5               	movf	tablat,w,c
  5237  001138  0A2A               	xorlw	42
  5238  00113A  A4D8               	btfss	status,2,c
  5239  00113C  EFA2  F008         	goto	u4221
  5240  001140  EFA4  F008         	goto	u4220
  5241  001144                     u4221:
  5242  001144  EFCD  F008         	goto	l4206
  5243  001148                     u4220:
  5244  001148                     
  5245                           ; BSR set to: 0
  5246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  5247  001148  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5248  00114C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5249  001150  2ADE               	incf	postinc2,f,c
  5250  001152  0E00               	movlw	0
  5251  001154  22DD               	addwfc	postdec2,f,c
  5252                           
  5253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5254  001156  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5255  00115A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5256  00115E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5257  001162  0E02               	movlw	2
  5258  001164  26DE               	addwf	postinc2,f,c
  5259  001166  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5260  00116A  0E00               	movlw	0
  5261  00116C  22DD               	addwfc	postdec2,f,c
  5262  00116E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5263  001172  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5264  001176  CFDE F096          	movff	postinc2,_width
  5265  00117A  CFDD F097          	movff	postdec2,_width+1
  5266  00117E                     
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  5269  00117E  BF97               	btfsc	(_width+1)& (0+255),7,b
  5270  001180  EFC6  F008         	goto	u4230
  5271  001184  EFC4  F008         	goto	u4231
  5272  001188                     u4231:
  5273  001188  EF11  F009         	goto	l4216
  5274  00118C                     u4230:
  5275  00118C                     
  5276                           ; BSR set to: 0
  5277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  5278  00118C  805A               	bsf	_flags^0,0,c
  5279                           
  5280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  5281  00118E  6D96               	negf	_width& (0+255),b
  5282  001190  1F97               	comf	(_width+1)& (0+255),f,b
  5283  001192  B0D8               	btfsc	status,0,c
  5284  001194  2B97               	incf	(_width+1)& (0+255),f,b
  5285  001196  EF11  F009         	goto	l4216
  5286  00119A                     l4206:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  5290  00119A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5291  00119E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5292  0011A2  CFDE F00B          	movff	postinc2,atoi@s
  5293  0011A6  CFDD F00C          	movff	postdec2,atoi@s+1
  5294  0011AA  ECF9  F00D         	call	_atoi	;wreg free
  5295  0011AE  C00B  F096         	movff	?_atoi,_width
  5296  0011B2  C00C  F097         	movff	?_atoi+1,_width+1
  5297                           
  5298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5299  0011B6  EFE4  F008         	goto	l4210
  5300  0011BA                     l4208:
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  5304  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5305  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5306  0011C2  2ADE               	incf	postinc2,f,c
  5307  0011C4  0E00               	movlw	0
  5308  0011C6  22DD               	addwfc	postdec2,f,c
  5309  0011C8                     l4210:
  5310  0011C8  0ED0               	movlw	208
  5311  0011CA  6E49               	movwf	??_vfpfcnvrt^0,c
  5312  0011CC  0EFF               	movlw	255
  5313  0011CE  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  5314  0011D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5315  0011D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5316  0011D8  CFDE FFF6          	movff	postinc2,tblptrl
  5317  0011DC  CFDD FFF7          	movff	postdec2,tblptrh
  5318  0011E0                     	if	0	;tblptru may be non-zero
  5319  0011E0                     	endif
  5320  0011E0                     	if	0	;tblptru may be non-zero
  5321  0011E0                     	endif
  5322  0011E0  0008               	tblrd		*
  5323  0011E2  50F5               	movf	tablat,w,c
  5324  0011E4  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5325  0011E6  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  5326  0011E8  5049               	movf	??_vfpfcnvrt^0,w,c
  5327  0011EA  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5328  0011EC  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  5329  0011EE  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5330  0011F0  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  5331  0011F2  E10A               	bnz	u4240
  5332  0011F4  0E0A               	movlw	10
  5333  0011F6  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5334  0011F8  A0D8               	btfss	status,0,c
  5335  0011FA  EF01  F009         	goto	u4241
  5336  0011FE  EF04  F009         	goto	u4240
  5337  001202                     u4241:
  5338  001202  0E01               	movlw	1
  5339  001204  EF05  F009         	goto	u4250
  5340  001208                     u4240:
  5341  001208  0E00               	movlw	0
  5342  00120A                     u4250:
  5343  00120A  0100               	movlb	0	; () banked
  5344  00120C  6F6A               	movwf	_vfpfcnvrt$1864& (0+255),b
  5345  00120E  6B6B               	clrf	(_vfpfcnvrt$1864+1)& (0+255),b
  5346  001210                     
  5347                           ; BSR set to: 0
  5348  001210  516A               	movf	_vfpfcnvrt$1864& (0+255),w,b
  5349  001212  116B               	iorwf	(_vfpfcnvrt$1864+1)& (0+255),w,b
  5350  001214  A4D8               	btfss	status,2,c
  5351  001216  EF0F  F009         	goto	u4261
  5352  00121A  EF11  F009         	goto	u4260
  5353  00121E                     u4261:
  5354  00121E  EFDD  F008         	goto	l4208
  5355  001222                     u4260:
  5356  001222                     l4216:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5360  001222  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5361  001226  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5362  00122A  CFDE FFF6          	movff	postinc2,tblptrl
  5363  00122E  CFDD FFF7          	movff	postdec2,tblptrh
  5364  001232                     	if	0	;tblptru may be non-zero
  5365  001232                     	endif
  5366  001232                     	if	0	;tblptru may be non-zero
  5367  001232                     	endif
  5368  001232  0008               	tblrd		*
  5369  001234  50F5               	movf	tablat,w,c
  5370  001236  0A64               	xorlw	100
  5371  001238  B4D8               	btfsc	status,2,c
  5372  00123A  EF21  F009         	goto	u4271
  5373  00123E  EF23  F009         	goto	u4270
  5374  001242                     u4271:
  5375  001242  EF35  F009         	goto	l4220
  5376  001246                     u4270:
  5377  001246                     
  5378                           ; BSR set to: 0
  5379  001246  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5380  00124A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5381  00124E  CFDE FFF6          	movff	postinc2,tblptrl
  5382  001252  CFDD FFF7          	movff	postdec2,tblptrh
  5383  001256                     	if	0	;tblptru may be non-zero
  5384  001256                     	endif
  5385  001256                     	if	0	;tblptru may be non-zero
  5386  001256                     	endif
  5387  001256  0008               	tblrd		*
  5388  001258  50F5               	movf	tablat,w,c
  5389  00125A  0A69               	xorlw	105
  5390  00125C  A4D8               	btfss	status,2,c
  5391  00125E  EF33  F009         	goto	u4281
  5392  001262  EF35  F009         	goto	u4280
  5393  001266                     u4281:
  5394  001266  EF75  F009         	goto	l4226
  5395  00126A                     u4280:
  5396  00126A                     l4220:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5400  00126A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5401  00126E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5402  001272  2ADE               	incf	postinc2,f,c
  5403  001274  0E00               	movlw	0
  5404  001276  22DD               	addwfc	postdec2,f,c
  5405                           
  5406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5407  001278  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5408  00127C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5409  001280  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5410  001284  0E02               	movlw	2
  5411  001286  26DE               	addwf	postinc2,f,c
  5412  001288  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5413  00128C  0E00               	movlw	0
  5414  00128E  22DD               	addwfc	postdec2,f,c
  5415  001290  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5416  001294  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5417  001298  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  5418  00129C  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  5419  0012A0  0E00               	movlw	0
  5420  0012A2  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5421  0012A4  0EFF               	movlw	-1
  5422  0012A6  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5423  0012A8  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5424  0012AA  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5425  0012AC  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5426  0012AE  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5427  0012B0  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5428  0012B2                     
  5429                           ; BSR set to: 0
  5430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5431  0012B2  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  5432  0012B6  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5433  0012BA  C060  F021         	movff	vfpfcnvrt@ll,dtoa@d
  5434  0012BE  C061  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5435  0012C2  C062  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5436  0012C6  C063  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5437  0012CA  C064  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5438  0012CE  C065  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5439  0012D2  C066  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5440  0012D6  C067  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5441  0012DA  ECC7  F009         	call	_dtoa	;wreg free
  5442  0012DE  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  5443  0012E2  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5444  0012E6  EFC6  F009         	goto	l1104
  5445  0012EA                     l4226:
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5449  0012EA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5450  0012EE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5451  0012F2  CFDE FFF6          	movff	postinc2,tblptrl
  5452  0012F6  CFDD FFF7          	movff	postdec2,tblptrh
  5453  0012FA                     	if	0	;tblptru may be non-zero
  5454  0012FA                     	endif
  5455  0012FA                     	if	0	;tblptru may be non-zero
  5456  0012FA                     	endif
  5457  0012FA  0008               	tblrd		*
  5458  0012FC  50F5               	movf	tablat,w,c
  5459  0012FE  0A25               	xorlw	37
  5460  001300  A4D8               	btfss	status,2,c
  5461  001302  EF85  F009         	goto	u4291
  5462  001306  EF87  F009         	goto	u4290
  5463  00130A                     u4291:
  5464  00130A  EF9E  F009         	goto	l4236
  5465  00130E                     u4290:
  5466  00130E                     
  5467                           ; BSR set to: 0
  5468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5469  00130E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5470  001312  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5471  001316  2ADE               	incf	postinc2,f,c
  5472  001318  0E00               	movlw	0
  5473  00131A  22DD               	addwfc	postdec2,f,c
  5474  00131C                     
  5475                           ; BSR set to: 0
  5476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5477  00131C  0E00               	movlw	0
  5478  00131E  6E05               	movwf	(fputc@c+1)^0,c
  5479  001320  0E25               	movlw	37
  5480  001322  6E04               	movwf	fputc@c^0,c
  5481  001324  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5482  001328  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5483  00132C  EC38  F014         	call	_fputc	;wreg free
  5484  001330                     l4232:
  5485                           
  5486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5487  001330  0E00               	movlw	0
  5488  001332  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5489  001334  0E01               	movlw	1
  5490  001336  6E43               	movwf	?_vfpfcnvrt^0,c
  5491  001338  EFC6  F009         	goto	l1104
  5492  00133C                     l4236:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5496  00133C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5497  001340  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5498  001344  2ADE               	incf	postinc2,f,c
  5499  001346  0E00               	movlw	0
  5500  001348  22DD               	addwfc	postdec2,f,c
  5501  00134A                     
  5502                           ; BSR set to: 0
  5503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5504  00134A  0E00               	movlw	0
  5505  00134C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5506  00134E  0E00               	movlw	0
  5507  001350  6E43               	movwf	?_vfpfcnvrt^0,c
  5508  001352  EFC6  F009         	goto	l1104
  5509  001356                     l4242:
  5510                           
  5511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5512  001356  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5513  00135A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5514  00135E  CFDE FFF6          	movff	postinc2,tblptrl
  5515  001362  CFDD FFF7          	movff	postdec2,tblptrh
  5516  001366                     	if	0	;tblptru may be non-zero
  5517  001366                     	endif
  5518  001366                     	if	0	;tblptru may be non-zero
  5519  001366                     	endif
  5520  001366  0008               	tblrd		*
  5521  001368  50F5               	movf	tablat,w,c
  5522  00136A  6E04               	movwf	fputc@c^0,c
  5523  00136C  6A05               	clrf	(fputc@c+1)^0,c
  5524  00136E  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5525  001372  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5526  001376  EC38  F014         	call	_fputc	;wreg free
  5527  00137A                     
  5528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5529  00137A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5530  00137E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5531  001382  2ADE               	incf	postinc2,f,c
  5532  001384  0E00               	movlw	0
  5533  001386  22DD               	addwfc	postdec2,f,c
  5534  001388  EF98  F009         	goto	l4232
  5535  00138C                     l1104:
  5536  00138C  0012               	return		;funcret
  5537  00138E                     __end_of_vfpfcnvrt:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _dtoa *****************
  5541 ;; Defined at:
  5542 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5545 ;;		 -> sprintf@f(6), 
  5546 ;;  d               8   32[COMRAM] long long 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  n               8   56[COMRAM] long long 
  5549 ;;  i               2   64[COMRAM] int 
  5550 ;;  s               2   54[COMRAM] int 
  5551 ;;  w               2   52[COMRAM] int 
  5552 ;;  p               2   50[COMRAM] int 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  2   30[COMRAM] int 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5562 ;;      Params:        10       0       0       0       0       0       0       0       0
  5563 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5564 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5565 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5566 ;;Total ram usage:       36 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    6
  5569 ;; This function calls:
  5570 ;;		___aodiv
  5571 ;;		___aomod
  5572 ;;		_abs
  5573 ;;		_pad
  5574 ;; This function is called by:
  5575 ;;		_vfpfcnvrt
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text30
  5580  00138E                     __ptext30:
  5581                           	callstack 0
  5582  00138E                     _dtoa:
  5583                           	callstack 19
  5584  00138E                     
  5585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5586  00138E  C021  F039         	movff	dtoa@d,dtoa@n
  5587  001392  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  5588  001396  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  5589  00139A  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  5590  00139E  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  5591  0013A2  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  5592  0013A6  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  5593  0013AA  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  5594  0013AE                     
  5595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5596  0013AE  BE40               	btfsc	(dtoa@n+7)^0,7,c
  5597  0013B0  EFDC  F009         	goto	u3971
  5598  0013B4  EFDF  F009         	goto	u3970
  5599  0013B8                     u3971:
  5600  0013B8  0E01               	movlw	1
  5601  0013BA  EFE0  F009         	goto	u3980
  5602  0013BE                     u3970:
  5603  0013BE  0E00               	movlw	0
  5604  0013C0                     u3980:
  5605  0013C0  6E37               	movwf	dtoa@s^0,c
  5606  0013C2  6A38               	clrf	(dtoa@s+1)^0,c
  5607                           
  5608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5609  0013C4  5037               	movf	dtoa@s^0,w,c
  5610  0013C6  1038               	iorwf	(dtoa@s+1)^0,w,c
  5611  0013C8  B4D8               	btfsc	status,2,c
  5612  0013CA  EFE9  F009         	goto	u3991
  5613  0013CE  EFEB  F009         	goto	u3990
  5614  0013D2                     u3991:
  5615  0013D2  EFFB  F009         	goto	l4060
  5616  0013D6                     u3990:
  5617  0013D6                     
  5618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5619  0013D6  1E40               	comf	(dtoa@n+7)^0,f,c
  5620  0013D8  1E3F               	comf	(dtoa@n+6)^0,f,c
  5621  0013DA  1E3E               	comf	(dtoa@n+5)^0,f,c
  5622  0013DC  1E3D               	comf	(dtoa@n+4)^0,f,c
  5623  0013DE  1E3C               	comf	(dtoa@n+3)^0,f,c
  5624  0013E0  1E3B               	comf	(dtoa@n+2)^0,f,c
  5625  0013E2  1E3A               	comf	(dtoa@n+1)^0,f,c
  5626  0013E4  6C39               	negf	dtoa@n^0,c
  5627  0013E6  0E00               	movlw	0
  5628  0013E8  223A               	addwfc	(dtoa@n+1)^0,f,c
  5629  0013EA  223B               	addwfc	(dtoa@n+2)^0,f,c
  5630  0013EC  223C               	addwfc	(dtoa@n+3)^0,f,c
  5631  0013EE  223D               	addwfc	(dtoa@n+4)^0,f,c
  5632  0013F0  223E               	addwfc	(dtoa@n+5)^0,f,c
  5633  0013F2  223F               	addwfc	(dtoa@n+6)^0,f,c
  5634  0013F4  2240               	addwfc	(dtoa@n+7)^0,f,c
  5635  0013F6                     l4060:
  5636                           
  5637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5638  0013F6  BE59               	btfsc	(_prec+1)^0,7,c
  5639  0013F8  EF00  F00A         	goto	u4001
  5640  0013FC  EF02  F00A         	goto	u4000
  5641  001400                     u4001:
  5642  001400  EF03  F00A         	goto	l4064
  5643  001404                     u4000:
  5644  001404                     
  5645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5646  001404  925A               	bcf	_flags^0,1,c
  5647  001406                     l4064:
  5648                           
  5649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5650  001406  BE59               	btfsc	(_prec+1)^0,7,c
  5651  001408  EF10  F00A         	goto	u4010
  5652  00140C  5059               	movf	(_prec+1)^0,w,c
  5653  00140E  E106               	bnz	u4011
  5654  001410  0458               	decf	_prec^0,w,c
  5655  001412  B0D8               	btfsc	status,0,c
  5656  001414  EF0E  F00A         	goto	u4011
  5657  001418  EF10  F00A         	goto	u4010
  5658  00141C                     u4011:
  5659  00141C  EF16  F00A         	goto	l1055
  5660  001420                     u4010:
  5661  001420  0E00               	movlw	0
  5662  001422  6E34               	movwf	(dtoa@p+1)^0,c
  5663  001424  0E01               	movlw	1
  5664  001426  6E33               	movwf	dtoa@p^0,c
  5665  001428  EF1A  F00A         	goto	l1057
  5666  00142C                     l1055:
  5667  00142C  C058  F033         	movff	_prec,dtoa@p
  5668  001430  C059  F034         	movff	_prec+1,dtoa@p+1
  5669  001434                     l1057:
  5670                           
  5671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5672  001434  C096  F035         	movff	_width,dtoa@w
  5673  001438  C097  F036         	movff	_width+1,dtoa@w+1
  5674  00143C                     
  5675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5676  00143C  5037               	movf	dtoa@s^0,w,c
  5677  00143E  1038               	iorwf	(dtoa@s+1)^0,w,c
  5678  001440  A4D8               	btfss	status,2,c
  5679  001442  EF25  F00A         	goto	u4021
  5680  001446  EF27  F00A         	goto	u4020
  5681  00144A                     u4021:
  5682  00144A  EF2E  F00A         	goto	l4072
  5683  00144E                     u4020:
  5684  00144E  A45A               	btfss	_flags^0,2,c
  5685  001450  EF2C  F00A         	goto	u4031
  5686  001454  EF2E  F00A         	goto	u4030
  5687  001458                     u4031:
  5688  001458  EF31  F00A         	goto	l4074
  5689  00145C                     u4030:
  5690  00145C                     l4072:
  5691                           
  5692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5693  00145C  0635               	decf	dtoa@w^0,f,c
  5694  00145E  A0D8               	btfss	status,0,c
  5695  001460  0636               	decf	(dtoa@w+1)^0,f,c
  5696  001462                     l4074:
  5697                           
  5698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5699  001462  0E00               	movlw	0
  5700  001464  6E42               	movwf	(dtoa@i+1)^0,c
  5701  001466  0E1F               	movlw	31
  5702  001468  6E41               	movwf	dtoa@i^0,c
  5703  00146A                     
  5704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5705  00146A  0E00               	movlw	0
  5706  00146C  0100               	movlb	0	; () banked
  5707  00146E  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5708                           
  5709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5710  001470  EFB6  F00A         	goto	l4088
  5711  001474                     l4078:
  5712                           
  5713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5714  001474  0641               	decf	dtoa@i^0,f,c
  5715  001476  A0D8               	btfss	status,0,c
  5716  001478  0642               	decf	(dtoa@i+1)^0,f,c
  5717  00147A                     
  5718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5719  00147A  0E98               	movlw	low _dbuf
  5720  00147C  2441               	addwf	dtoa@i^0,w,c
  5721  00147E  6ED9               	movwf	fsr2l,c
  5722  001480  0E00               	movlw	high _dbuf
  5723  001482  2042               	addwfc	(dtoa@i+1)^0,w,c
  5724  001484  6EDA               	movwf	fsr2h,c
  5725  001486  C039  F004         	movff	dtoa@n,___aomod@dividend
  5726  00148A  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  5727  00148E  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  5728  001492  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  5729  001496  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  5730  00149A  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  5731  00149E  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  5732  0014A2  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  5733  0014A6  0E0A               	movlw	10
  5734  0014A8  6E0C               	movwf	___aomod@divisor^0,c
  5735  0014AA  0E00               	movlw	0
  5736  0014AC  6E0D               	movwf	(___aomod@divisor+1)^0,c
  5737  0014AE  0E00               	movlw	0
  5738  0014B0  6E0E               	movwf	(___aomod@divisor+2)^0,c
  5739  0014B2  0E00               	movlw	0
  5740  0014B4  6E0F               	movwf	(___aomod@divisor+3)^0,c
  5741  0014B6  0E00               	movlw	0
  5742  0014B8  6E10               	movwf	(___aomod@divisor+4)^0,c
  5743  0014BA  0E00               	movlw	0
  5744  0014BC  6E11               	movwf	(___aomod@divisor+5)^0,c
  5745  0014BE  0E00               	movlw	0
  5746  0014C0  6E12               	movwf	(___aomod@divisor+6)^0,c
  5747  0014C2  0E00               	movlw	0
  5748  0014C4  6E13               	movwf	(___aomod@divisor+7)^0,c
  5749  0014C6  EC40  F010         	call	___aomod	;wreg free
  5750  0014CA  C004  F029         	movff	?___aomod,??_dtoa
  5751  0014CE  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  5752  0014D2  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  5753  0014D6  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  5754  0014DA  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  5755  0014DE  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  5756  0014E2  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  5757  0014E6  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  5758  0014EA  C029  F016         	movff	??_dtoa,abs@a
  5759  0014EE  C02B  F017         	movff	??_dtoa+2,abs@a+1
  5760  0014F2  EC9A  F017         	call	_abs	;wreg free
  5761  0014F6  5016               	movf	?_abs^0,w,c
  5762  0014F8  0F30               	addlw	48
  5763  0014FA  6EDF               	movwf	indf2,c
  5764  0014FC                     
  5765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5766  0014FC  0633               	decf	dtoa@p^0,f,c
  5767  0014FE  A0D8               	btfss	status,0,c
  5768  001500  0634               	decf	(dtoa@p+1)^0,f,c
  5769  001502                     
  5770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5771  001502  0635               	decf	dtoa@w^0,f,c
  5772  001504  A0D8               	btfss	status,0,c
  5773  001506  0636               	decf	(dtoa@w+1)^0,f,c
  5774  001508                     
  5775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5776  001508  C039  F004         	movff	dtoa@n,___aodiv@dividend
  5777  00150C  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  5778  001510  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  5779  001514  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  5780  001518  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  5781  00151C  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  5782  001520  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  5783  001524  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  5784  001528  0E0A               	movlw	10
  5785  00152A  6E0C               	movwf	___aodiv@divisor^0,c
  5786  00152C  0E00               	movlw	0
  5787  00152E  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  5788  001530  0E00               	movlw	0
  5789  001532  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  5790  001534  0E00               	movlw	0
  5791  001536  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  5792  001538  0E00               	movlw	0
  5793  00153A  6E10               	movwf	(___aodiv@divisor+4)^0,c
  5794  00153C  0E00               	movlw	0
  5795  00153E  6E11               	movwf	(___aodiv@divisor+5)^0,c
  5796  001540  0E00               	movlw	0
  5797  001542  6E12               	movwf	(___aodiv@divisor+6)^0,c
  5798  001544  0E00               	movlw	0
  5799  001546  6E13               	movwf	(___aodiv@divisor+7)^0,c
  5800  001548  ECC1  F00E         	call	___aodiv	;wreg free
  5801  00154C  C004  F039         	movff	?___aodiv,dtoa@n
  5802  001550  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  5803  001554  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  5804  001558  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  5805  00155C  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  5806  001560  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  5807  001564  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  5808  001568  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  5809  00156C                     l4088:
  5810                           
  5811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5812  00156C  BE42               	btfsc	(dtoa@i+1)^0,7,c
  5813  00156E  EFC1  F00A         	goto	u4041
  5814  001572  5042               	movf	(dtoa@i+1)^0,w,c
  5815  001574  E108               	bnz	u4040
  5816  001576  0441               	decf	dtoa@i^0,w,c
  5817  001578  A0D8               	btfss	status,0,c
  5818  00157A  EFC1  F00A         	goto	u4041
  5819  00157E  EFC3  F00A         	goto	u4040
  5820  001582                     u4041:
  5821  001582  EFF3  F00A         	goto	l4098
  5822  001586                     u4040:
  5823  001586  5039               	movf	dtoa@n^0,w,c
  5824  001588  103A               	iorwf	(dtoa@n+1)^0,w,c
  5825  00158A  103B               	iorwf	(dtoa@n+2)^0,w,c
  5826  00158C  103C               	iorwf	(dtoa@n+3)^0,w,c
  5827  00158E  103D               	iorwf	(dtoa@n+4)^0,w,c
  5828  001590  103E               	iorwf	(dtoa@n+5)^0,w,c
  5829  001592  103F               	iorwf	(dtoa@n+6)^0,w,c
  5830  001594  1040               	iorwf	(dtoa@n+7)^0,w,c
  5831  001596  A4D8               	btfss	status,2,c
  5832  001598  EFD0  F00A         	goto	u4051
  5833  00159C  EFD2  F00A         	goto	u4050
  5834  0015A0                     u4051:
  5835  0015A0  EF3A  F00A         	goto	l4078
  5836  0015A4                     u4050:
  5837  0015A4  BE34               	btfsc	(dtoa@p+1)^0,7,c
  5838  0015A6  EFDF  F00A         	goto	u4060
  5839  0015AA  5034               	movf	(dtoa@p+1)^0,w,c
  5840  0015AC  E106               	bnz	u4061
  5841  0015AE  0433               	decf	dtoa@p^0,w,c
  5842  0015B0  B0D8               	btfsc	status,0,c
  5843  0015B2  EFDD  F00A         	goto	u4061
  5844  0015B6  EFDF  F00A         	goto	u4060
  5845  0015BA                     u4061:
  5846  0015BA  EF3A  F00A         	goto	l4078
  5847  0015BE                     u4060:
  5848  0015BE  BE36               	btfsc	(dtoa@w+1)^0,7,c
  5849  0015C0  EFEA  F00A         	goto	u4071
  5850  0015C4  5036               	movf	(dtoa@w+1)^0,w,c
  5851  0015C6  E108               	bnz	u4070
  5852  0015C8  0435               	decf	dtoa@w^0,w,c
  5853  0015CA  A0D8               	btfss	status,0,c
  5854  0015CC  EFEA  F00A         	goto	u4071
  5855  0015D0  EFEC  F00A         	goto	u4070
  5856  0015D4                     u4071:
  5857  0015D4  EFF3  F00A         	goto	l4098
  5858  0015D8                     u4070:
  5859  0015D8  B25A               	btfsc	_flags^0,1,c
  5860  0015DA  EFF1  F00A         	goto	u4081
  5861  0015DE  EFF3  F00A         	goto	u4080
  5862  0015E2                     u4081:
  5863  0015E2  EF3A  F00A         	goto	l4078
  5864  0015E6                     u4080:
  5865  0015E6                     l4098:
  5866                           
  5867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5868  0015E6  5037               	movf	dtoa@s^0,w,c
  5869  0015E8  1038               	iorwf	(dtoa@s+1)^0,w,c
  5870  0015EA  A4D8               	btfss	status,2,c
  5871  0015EC  EFFA  F00A         	goto	u4091
  5872  0015F0  EFFC  F00A         	goto	u4090
  5873  0015F4                     u4091:
  5874  0015F4  EF03  F00B         	goto	l4102
  5875  0015F8                     u4090:
  5876  0015F8  A45A               	btfss	_flags^0,2,c
  5877  0015FA  EF01  F00B         	goto	u4101
  5878  0015FE  EF03  F00B         	goto	u4100
  5879  001602                     u4101:
  5880  001602  EF21  F00B         	goto	l4112
  5881  001606                     u4100:
  5882  001606                     l4102:
  5883                           
  5884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5885  001606  0641               	decf	dtoa@i^0,f,c
  5886  001608  A0D8               	btfss	status,0,c
  5887  00160A  0642               	decf	(dtoa@i+1)^0,f,c
  5888  00160C                     
  5889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5890  00160C  5037               	movf	dtoa@s^0,w,c
  5891  00160E  1038               	iorwf	(dtoa@s+1)^0,w,c
  5892  001610  A4D8               	btfss	status,2,c
  5893  001612  EF0D  F00B         	goto	u4111
  5894  001616  EF0F  F00B         	goto	u4110
  5895  00161A                     u4111:
  5896  00161A  EF15  F00B         	goto	l4108
  5897  00161E                     u4110:
  5898  00161E  0E00               	movlw	0
  5899  001620  6E32               	movwf	(_dtoa$1849+1)^0,c
  5900  001622  0E2B               	movlw	43
  5901  001624  6E31               	movwf	_dtoa$1849^0,c
  5902  001626  EF19  F00B         	goto	l4110
  5903  00162A                     l4108:
  5904  00162A  0E00               	movlw	0
  5905  00162C  6E32               	movwf	(_dtoa$1849+1)^0,c
  5906  00162E  0E2D               	movlw	45
  5907  001630  6E31               	movwf	_dtoa$1849^0,c
  5908  001632                     l4110:
  5909  001632  0E98               	movlw	low _dbuf
  5910  001634  2441               	addwf	dtoa@i^0,w,c
  5911  001636  6ED9               	movwf	fsr2l,c
  5912  001638  0E00               	movlw	high _dbuf
  5913  00163A  2042               	addwfc	(dtoa@i+1)^0,w,c
  5914  00163C  6EDA               	movwf	fsr2h,c
  5915  00163E  C031  FFDF         	movff	_dtoa$1849,indf2
  5916  001642                     l4112:
  5917                           
  5918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5919  001642  C01F  F014         	movff	dtoa@fp,pad@fp
  5920  001646  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  5921  00164A  0E98               	movlw	low _dbuf
  5922  00164C  2441               	addwf	dtoa@i^0,w,c
  5923  00164E  6E16               	movwf	pad@buf^0,c
  5924  001650  0E00               	movlw	high _dbuf
  5925  001652  2042               	addwfc	(dtoa@i+1)^0,w,c
  5926  001654  6E17               	movwf	(pad@buf+1)^0,c
  5927  001656  C035  F018         	movff	dtoa@w,pad@p
  5928  00165A  C036  F019         	movff	dtoa@w+1,pad@p+1
  5929  00165E  EC9D  F014         	call	_pad	;wreg free
  5930  001662  C014  F01F         	movff	?_pad,?_dtoa
  5931  001666  C015  F020         	movff	?_pad+1,?_dtoa+1
  5932  00166A  0012               	return		;funcret
  5933  00166C                     __end_of_dtoa:
  5934                           	callstack 0
  5935                           
  5936 ;; *************** function _pad *****************
  5937 ;; Defined at:
  5938 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  5941 ;;		 -> sprintf@f(6), 
  5942 ;;  buf             2   21[COMRAM] PTR unsigned char 
  5943 ;;		 -> dbuf(32), 
  5944 ;;  p               2   23[COMRAM] int 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  w               2   28[COMRAM] int 
  5947 ;;  i               2   26[COMRAM] int 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  2   19[COMRAM] int 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5957 ;;      Params:         6       0       0       0       0       0       0       0       0
  5958 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5959 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5960 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5961 ;;Total ram usage:       11 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    5
  5964 ;; This function calls:
  5965 ;;		_fputc
  5966 ;;		_fputs
  5967 ;;		_strlen
  5968 ;; This function is called by:
  5969 ;;		_dtoa
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text31
  5974  00293A                     __ptext31:
  5975                           	callstack 0
  5976  00293A                     _pad:
  5977                           	callstack 19
  5978  00293A                     
  5979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5980  00293A  A05A               	btfss	_flags^0,0,c
  5981  00293C  EFA2  F014         	goto	u3881
  5982  002940  EFA4  F014         	goto	u3880
  5983  002944                     u3881:
  5984  002944  EFAE  F014         	goto	l4016
  5985  002948                     u3880:
  5986  002948                     
  5987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5988  002948  C016  F00D         	movff	pad@buf,fputs@s
  5989  00294C  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5990  002950  C014  F00F         	movff	pad@fp,fputs@fp
  5991  002954  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5992  002958  EC57  F017         	call	_fputs	;wreg free
  5993  00295C                     l4016:
  5994                           
  5995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5996  00295C  BE19               	btfsc	(pad@p+1)^0,7,c
  5997  00295E  EFB3  F014         	goto	u3891
  5998  002962  EFB5  F014         	goto	u3890
  5999  002966                     u3891:
  6000  002966  EFBB  F014         	goto	l4020
  6001  00296A                     u3890:
  6002  00296A  C018  F01D         	movff	pad@p,pad@w
  6003  00296E  C019  F01E         	movff	pad@p+1,pad@w+1
  6004  002972  EFBF  F014         	goto	l1044
  6005  002976                     l4020:
  6006  002976  0E00               	movlw	0
  6007  002978  6E1E               	movwf	(pad@w+1)^0,c
  6008  00297A  0E00               	movlw	0
  6009  00297C  6E1D               	movwf	pad@w^0,c
  6010  00297E                     l1044:
  6011                           
  6012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6013  00297E  0E00               	movlw	0
  6014  002980  6E1C               	movwf	(pad@i+1)^0,c
  6015  002982  0E00               	movlw	0
  6016  002984  6E1B               	movwf	pad@i^0,c
  6017                           
  6018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6019  002986  EFD1  F014         	goto	l4026
  6020  00298A                     l4022:
  6021                           
  6022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6023  00298A  0E00               	movlw	0
  6024  00298C  6E05               	movwf	(fputc@c+1)^0,c
  6025  00298E  0E20               	movlw	32
  6026  002990  6E04               	movwf	fputc@c^0,c
  6027  002992  C014  F006         	movff	pad@fp,fputc@fp
  6028  002996  C015  F007         	movff	pad@fp+1,fputc@fp+1
  6029  00299A  EC38  F014         	call	_fputc	;wreg free
  6030  00299E                     
  6031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6032  00299E  4A1B               	infsnz	pad@i^0,f,c
  6033  0029A0  2A1C               	incf	(pad@i+1)^0,f,c
  6034  0029A2                     l4026:
  6035                           
  6036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6037  0029A2  501D               	movf	pad@w^0,w,c
  6038  0029A4  5C1B               	subwf	pad@i^0,w,c
  6039  0029A6  501C               	movf	(pad@i+1)^0,w,c
  6040  0029A8  0A80               	xorlw	128
  6041  0029AA  6E1A               	movwf	??_pad^0,c
  6042  0029AC  501E               	movf	(pad@w+1)^0,w,c
  6043  0029AE  0A80               	xorlw	128
  6044  0029B0  581A               	subwfb	??_pad^0,w,c
  6045  0029B2  A0D8               	btfss	status,0,c
  6046  0029B4  EFDE  F014         	goto	u3901
  6047  0029B8  EFE0  F014         	goto	u3900
  6048  0029BC                     u3901:
  6049  0029BC  EFC5  F014         	goto	l4022
  6050  0029C0                     u3900:
  6051  0029C0                     
  6052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6053  0029C0  B05A               	btfsc	_flags^0,0,c
  6054  0029C2  EFE5  F014         	goto	u3911
  6055  0029C6  EFE7  F014         	goto	u3910
  6056  0029CA                     u3911:
  6057  0029CA  EFF1  F014         	goto	l4030
  6058  0029CE                     u3910:
  6059  0029CE                     
  6060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6061  0029CE  C016  F00D         	movff	pad@buf,fputs@s
  6062  0029D2  C017  F00E         	movff	pad@buf+1,fputs@s+1
  6063  0029D6  C014  F00F         	movff	pad@fp,fputs@fp
  6064  0029DA  C015  F010         	movff	pad@fp+1,fputs@fp+1
  6065  0029DE  EC57  F017         	call	_fputs	;wreg free
  6066  0029E2                     l4030:
  6067                           
  6068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6069  0029E2  C016  F004         	movff	pad@buf,strlen@s
  6070  0029E6  C017  F005         	movff	pad@buf+1,strlen@s+1
  6071  0029EA  EC0F  F018         	call	_strlen	;wreg free
  6072  0029EE  501D               	movf	pad@w^0,w,c
  6073  0029F0  2404               	addwf	?_strlen^0,w,c
  6074  0029F2  6E14               	movwf	?_pad^0,c
  6075  0029F4  501E               	movf	(pad@w+1)^0,w,c
  6076  0029F6  2005               	addwfc	(?_strlen+1)^0,w,c
  6077  0029F8  6E15               	movwf	(?_pad+1)^0,c
  6078  0029FA  0012               	return		;funcret
  6079  0029FC                     __end_of_pad:
  6080                           	callstack 0
  6081                           
  6082 ;; *************** function _strlen *****************
  6083 ;; Defined at:
  6084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  s               2    3[COMRAM] PTR const unsigned char 
  6087 ;;		 -> dbuf(32), 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  a               2    5[COMRAM] PTR const unsigned char 
  6090 ;;		 -> dbuf(32), 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  2    3[COMRAM] unsigned int 
  6093 ;; Registers used:
  6094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6100 ;;      Params:         2       0       0       0       0       0       0       0       0
  6101 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6103 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6104 ;;Total ram usage:        4 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    2
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_pad
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text32
  6115  00301E                     __ptext32:
  6116                           	callstack 0
  6117  00301E                     _strlen:
  6118                           	callstack 21
  6119  00301E  C004  F006         	movff	strlen@s,strlen@a
  6120  003022  C005  F007         	movff	strlen@s+1,strlen@a+1
  6121  003026  EF17  F018         	goto	l3920
  6122  00302A                     l3918:
  6123  00302A  4A04               	infsnz	strlen@s^0,f,c
  6124  00302C  2A05               	incf	(strlen@s+1)^0,f,c
  6125  00302E                     l3920:
  6126  00302E  C004  FFD9         	movff	strlen@s,fsr2l
  6127  003032  C005  FFDA         	movff	strlen@s+1,fsr2h
  6128  003036  50DF               	movf	indf2,w,c
  6129  003038  A4D8               	btfss	status,2,c
  6130  00303A  EF21  F018         	goto	u3741
  6131  00303E  EF23  F018         	goto	u3740
  6132  003042                     u3741:
  6133  003042  EF15  F018         	goto	l3918
  6134  003046                     u3740:
  6135  003046  5006               	movf	strlen@a^0,w,c
  6136  003048  5C04               	subwf	strlen@s^0,w,c
  6137  00304A  6E04               	movwf	?_strlen^0,c
  6138  00304C  5007               	movf	(strlen@a+1)^0,w,c
  6139  00304E  5805               	subwfb	(strlen@s+1)^0,w,c
  6140  003050  6E05               	movwf	(?_strlen+1)^0,c
  6141  003052  0012               	return		;funcret
  6142  003054                     __end_of_strlen:
  6143                           	callstack 0
  6144                           
  6145 ;; *************** function _fputs *****************
  6146 ;; Defined at:
  6147 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6150 ;;		 -> dbuf(32), 
  6151 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  6152 ;;		 -> sprintf@f(6), 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  i               2   17[COMRAM] int 
  6155 ;;  c               1   16[COMRAM] unsigned char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  2   12[COMRAM] int 
  6158 ;; Registers used:
  6159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6165 ;;      Params:         4       0       0       0       0       0       0       0       0
  6166 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6168 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6169 ;;Total ram usage:        7 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    4
  6172 ;; This function calls:
  6173 ;;		_fputc
  6174 ;; This function is called by:
  6175 ;;		_pad
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text33
  6180  002EAE                     __ptext33:
  6181                           	callstack 0
  6182  002EAE                     _fputs:
  6183                           	callstack 19
  6184  002EAE  0E00               	movlw	0
  6185  002EB0  6E13               	movwf	(fputs@i+1)^0,c
  6186  002EB2  0E00               	movlw	0
  6187  002EB4  6E12               	movwf	fputs@i^0,c
  6188  002EB6  EF68  F017         	goto	l3914
  6189  002EBA                     l3910:
  6190  002EBA  C011  F004         	movff	fputs@c,fputc@c
  6191  002EBE  6A05               	clrf	(fputc@c+1)^0,c
  6192  002EC0  C00F  F006         	movff	fputs@fp,fputc@fp
  6193  002EC4  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  6194  002EC8  EC38  F014         	call	_fputc	;wreg free
  6195  002ECC  4A12               	infsnz	fputs@i^0,f,c
  6196  002ECE  2A13               	incf	(fputs@i+1)^0,f,c
  6197  002ED0                     l3914:
  6198  002ED0  5012               	movf	fputs@i^0,w,c
  6199  002ED2  240D               	addwf	fputs@s^0,w,c
  6200  002ED4  6ED9               	movwf	fsr2l,c
  6201  002ED6  5013               	movf	(fputs@i+1)^0,w,c
  6202  002ED8  200E               	addwfc	(fputs@s+1)^0,w,c
  6203  002EDA  6EDA               	movwf	fsr2h,c
  6204  002EDC  50DF               	movf	indf2,w,c
  6205  002EDE  6E11               	movwf	fputs@c^0,c
  6206  002EE0  5011               	movf	fputs@c^0,w,c
  6207  002EE2  A4D8               	btfss	status,2,c
  6208  002EE4  EF76  F017         	goto	u3731
  6209  002EE8  EF78  F017         	goto	u3730
  6210  002EEC                     u3731:
  6211  002EEC  EF5D  F017         	goto	l3910
  6212  002EF0                     u3730:
  6213  002EF0  0012               	return		;funcret
  6214  002EF2                     __end_of_fputs:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function _fputc *****************
  6218 ;; Defined at:
  6219 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  c               2    3[COMRAM] int 
  6222 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  6223 ;;		 -> sprintf@f(6), 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  2    3[COMRAM] int 
  6228 ;; Registers used:
  6229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6235 ;;      Params:         4       0       0       0       0       0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6237 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6238 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6239 ;;Total ram usage:        9 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    3
  6242 ;; This function calls:
  6243 ;;		_putch
  6244 ;; This function is called by:
  6245 ;;		_pad
  6246 ;;		_vfpfcnvrt
  6247 ;;		_fputs
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text34
  6252  002870                     __ptext34:
  6253                           	callstack 0
  6254  002870                     _fputc:
  6255                           	callstack 22
  6256  002870  5006               	movf	fputc@fp^0,w,c
  6257  002872  1007               	iorwf	(fputc@fp+1)^0,w,c
  6258  002874  B4D8               	btfsc	status,2,c
  6259  002876  EF3F  F014         	goto	u3691
  6260  00287A  EF41  F014         	goto	u3690
  6261  00287E                     u3691:
  6262  00287E  EF4A  F014         	goto	l3898
  6263  002882                     u3690:
  6264  002882  5006               	movf	fputc@fp^0,w,c
  6265  002884  1007               	iorwf	(fputc@fp+1)^0,w,c
  6266  002886  A4D8               	btfss	status,2,c
  6267  002888  EF48  F014         	goto	u3701
  6268  00288C  EF4A  F014         	goto	u3700
  6269  002890                     u3701:
  6270  002890  EF4F  F014         	goto	l3900
  6271  002894                     u3700:
  6272  002894                     l3898:
  6273  002894  5004               	movf	fputc@c^0,w,c
  6274  002896  ECB4  F018         	call	_putch
  6275  00289A  EF9C  F014         	goto	l1175
  6276  00289E                     l3900:
  6277  00289E  EE20 F004          	lfsr	2,4
  6278  0028A2  5006               	movf	fputc@fp^0,w,c
  6279  0028A4  26D9               	addwf	fsr2l,f,c
  6280  0028A6  5007               	movf	(fputc@fp+1)^0,w,c
  6281  0028A8  22DA               	addwfc	fsr2h,f,c
  6282  0028AA  50DE               	movf	postinc2,w,c
  6283  0028AC  10DE               	iorwf	postinc2,w,c
  6284  0028AE  B4D8               	btfsc	status,2,c
  6285  0028B0  EF5C  F014         	goto	u3711
  6286  0028B4  EF5E  F014         	goto	u3710
  6287  0028B8                     u3711:
  6288  0028B8  EF79  F014         	goto	l3904
  6289  0028BC                     u3710:
  6290  0028BC  EE20 F004          	lfsr	2,4
  6291  0028C0  5006               	movf	fputc@fp^0,w,c
  6292  0028C2  26D9               	addwf	fsr2l,f,c
  6293  0028C4  5007               	movf	(fputc@fp+1)^0,w,c
  6294  0028C6  22DA               	addwfc	fsr2h,f,c
  6295  0028C8  EE10 F002          	lfsr	1,2
  6296  0028CC  5006               	movf	fputc@fp^0,w,c
  6297  0028CE  26E1               	addwf	fsr1l,f,c
  6298  0028D0  5007               	movf	(fputc@fp+1)^0,w,c
  6299  0028D2  22E2               	addwfc	fsr1h,f,c
  6300  0028D4  50DE               	movf	postinc2,w,c
  6301  0028D6  5CE6               	subwf	postinc1,w,c
  6302  0028D8  50E6               	movf	postinc1,w,c
  6303  0028DA  0A80               	xorlw	128
  6304  0028DC  6E0C               	movwf	(??_fputc+4)^0,c
  6305  0028DE  50DE               	movf	postinc2,w,c
  6306  0028E0  0A80               	xorlw	128
  6307  0028E2  580C               	subwfb	(??_fputc+4)^0,w,c
  6308  0028E4  B0D8               	btfsc	status,0,c
  6309  0028E6  EF77  F014         	goto	u3721
  6310  0028EA  EF79  F014         	goto	u3720
  6311  0028EE                     u3721:
  6312  0028EE  EF9C  F014         	goto	l1175
  6313  0028F2                     u3720:
  6314  0028F2                     l3904:
  6315  0028F2  EE20 F002          	lfsr	2,2
  6316  0028F6  5006               	movf	fputc@fp^0,w,c
  6317  0028F8  26D9               	addwf	fsr2l,f,c
  6318  0028FA  5007               	movf	(fputc@fp+1)^0,w,c
  6319  0028FC  22DA               	addwfc	fsr2h,f,c
  6320  0028FE  CFDE F008          	movff	postinc2,??_fputc
  6321  002902  CFDD F009          	movff	postdec2,??_fputc+1
  6322  002906  C006  FFD9         	movff	fputc@fp,fsr2l
  6323  00290A  C007  FFDA         	movff	fputc@fp+1,fsr2h
  6324  00290E  CFDE F00A          	movff	postinc2,??_fputc+2
  6325  002912  CFDD F00B          	movff	postdec2,??_fputc+3
  6326  002916  5008               	movf	??_fputc^0,w,c
  6327  002918  240A               	addwf	(??_fputc+2)^0,w,c
  6328  00291A  6ED9               	movwf	fsr2l,c
  6329  00291C  5009               	movf	(??_fputc+1)^0,w,c
  6330  00291E  200B               	addwfc	(??_fputc+3)^0,w,c
  6331  002920  6EDA               	movwf	fsr2h,c
  6332  002922  C004  FFDF         	movff	fputc@c,indf2
  6333  002926  EE20 F002          	lfsr	2,2
  6334  00292A  5006               	movf	fputc@fp^0,w,c
  6335  00292C  26D9               	addwf	fsr2l,f,c
  6336  00292E  5007               	movf	(fputc@fp+1)^0,w,c
  6337  002930  22DA               	addwfc	fsr2h,f,c
  6338  002932  2ADE               	incf	postinc2,f,c
  6339  002934  0E00               	movlw	0
  6340  002936  22DD               	addwfc	postdec2,f,c
  6341  002938                     l1175:
  6342  002938  0012               	return		;funcret
  6343  00293A                     __end_of_fputc:
  6344                           	callstack 0
  6345                           
  6346 ;; *************** function _putch *****************
  6347 ;; Defined at:
  6348 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  c               1    wreg     unsigned char 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  c               1    0[COMRAM] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  1    wreg      void 
  6355 ;; Registers used:
  6356 ;;		wreg
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6362 ;;      Params:         0       0       0       0       0       0       0       0       0
  6363 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6365 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6366 ;;Total ram usage:        0 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    2
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_fputc
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text35
  6377  003168                     __ptext35:
  6378                           	callstack 0
  6379  003168                     _putch:
  6380                           	callstack 22
  6381  003168  0012               	return		;funcret
  6382  00316A                     __end_of_putch:
  6383                           	callstack 0
  6384                           
  6385 ;; *************** function _abs *****************
  6386 ;; Defined at:
  6387 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  a               2   21[COMRAM] int 
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  2   21[COMRAM] int 
  6394 ;; Registers used:
  6395 ;;		wreg, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6401 ;;      Params:         2       0       0       0       0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6403 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6404 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6405 ;;Total ram usage:        4 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    2
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_dtoa
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text36
  6416  002F34                     __ptext36:
  6417                           	callstack 0
  6418  002F34                     _abs:
  6419                           	callstack 22
  6420  002F34  BE17               	btfsc	(abs@a+1)^0,7,c
  6421  002F36  EFA7  F017         	goto	u3920
  6422  002F3A  5017               	movf	(abs@a+1)^0,w,c
  6423  002F3C  E106               	bnz	u3921
  6424  002F3E  0416               	decf	abs@a^0,w,c
  6425  002F40  B0D8               	btfsc	status,0,c
  6426  002F42  EFA5  F017         	goto	u3921
  6427  002F46  EFA7  F017         	goto	u3920
  6428  002F4A                     u3921:
  6429  002F4A  EFB5  F017         	goto	l1115
  6430  002F4E                     u3920:
  6431  002F4E  C016  F018         	movff	abs@a,??_abs
  6432  002F52  C017  F019         	movff	abs@a+1,??_abs+1
  6433  002F56  1E18               	comf	??_abs^0,f,c
  6434  002F58  1E19               	comf	(??_abs+1)^0,f,c
  6435  002F5A  4A18               	infsnz	??_abs^0,f,c
  6436  002F5C  2A19               	incf	(??_abs+1)^0,f,c
  6437  002F5E  C018  F016         	movff	??_abs,?_abs
  6438  002F62  C019  F017         	movff	??_abs+1,?_abs+1
  6439  002F66  EFB9  F017         	goto	l1118
  6440  002F6A                     l1115:
  6441  002F6A  C016  F016         	movff	abs@a,?_abs
  6442  002F6E  C017  F017         	movff	abs@a+1,?_abs+1
  6443  002F72                     l1118:
  6444  002F72  0012               	return		;funcret
  6445  002F74                     __end_of_abs:
  6446                           	callstack 0
  6447                           
  6448 ;; *************** function ___aomod *****************
  6449 ;; Defined at:
  6450 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  dividend        8    3[COMRAM] long long 
  6453 ;;  divisor         8   11[COMRAM] long long 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  sign            1   20[COMRAM] unsigned char 
  6456 ;;  counter         1   19[COMRAM] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  8    3[COMRAM] long long 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6466 ;;      Params:        16       0       0       0       0       0       0       0       0
  6467 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6469 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6470 ;;Total ram usage:       18 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    2
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_dtoa
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text37
  6481  002080                     __ptext37:
  6482                           	callstack 0
  6483  002080                     ___aomod:
  6484                           	callstack 22
  6485  002080  0E00               	movlw	0
  6486  002082  6E15               	movwf	___aomod@sign^0,c
  6487  002084  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  6488  002086  EF49  F010         	goto	u3820
  6489  00208A  EF47  F010         	goto	u3821
  6490  00208E                     u3821:
  6491  00208E  EF5B  F010         	goto	l3984
  6492  002092                     u3820:
  6493  002092  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6494  002094  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6495  002096  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6496  002098  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6497  00209A  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6498  00209C  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6499  00209E  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6500  0020A0  6C04               	negf	___aomod@dividend^0,c
  6501  0020A2  0E00               	movlw	0
  6502  0020A4  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6503  0020A6  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6504  0020A8  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6505  0020AA  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6506  0020AC  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6507  0020AE  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6508  0020B0  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6509  0020B2  0E01               	movlw	1
  6510  0020B4  6E15               	movwf	___aomod@sign^0,c
  6511  0020B6                     l3984:
  6512  0020B6  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  6513  0020B8  EF62  F010         	goto	u3830
  6514  0020BC  EF60  F010         	goto	u3831
  6515  0020C0                     u3831:
  6516  0020C0  EF72  F010         	goto	l3988
  6517  0020C4                     u3830:
  6518  0020C4  1E13               	comf	(___aomod@divisor+7)^0,f,c
  6519  0020C6  1E12               	comf	(___aomod@divisor+6)^0,f,c
  6520  0020C8  1E11               	comf	(___aomod@divisor+5)^0,f,c
  6521  0020CA  1E10               	comf	(___aomod@divisor+4)^0,f,c
  6522  0020CC  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  6523  0020CE  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  6524  0020D0  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  6525  0020D2  6C0C               	negf	___aomod@divisor^0,c
  6526  0020D4  0E00               	movlw	0
  6527  0020D6  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  6528  0020D8  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  6529  0020DA  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  6530  0020DC  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  6531  0020DE  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  6532  0020E0  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  6533  0020E2  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  6534  0020E4                     l3988:
  6535  0020E4  500C               	movf	___aomod@divisor^0,w,c
  6536  0020E6  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  6537  0020E8  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  6538  0020EA  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  6539  0020EC  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  6540  0020EE  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  6541  0020F0  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  6542  0020F2  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  6543  0020F4  B4D8               	btfsc	status,2,c
  6544  0020F6  EF7F  F010         	goto	u3841
  6545  0020FA  EF81  F010         	goto	u3840
  6546  0020FE                     u3841:
  6547  0020FE  EFC9  F010         	goto	l4004
  6548  002102                     u3840:
  6549  002102  0E01               	movlw	1
  6550  002104  6E14               	movwf	___aomod@counter^0,c
  6551  002106  EF8F  F010         	goto	l3994
  6552  00210A                     l3992:
  6553  00210A  90D8               	bcf	status,0,c
  6554  00210C  360C               	rlcf	___aomod@divisor^0,f,c
  6555  00210E  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  6556  002110  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  6557  002112  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  6558  002114  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  6559  002116  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  6560  002118  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  6561  00211A  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  6562  00211C  2A14               	incf	___aomod@counter^0,f,c
  6563  00211E                     l3994:
  6564  00211E  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  6565  002120  EF94  F010         	goto	u3851
  6566  002124  EF96  F010         	goto	u3850
  6567  002128                     u3851:
  6568  002128  EF85  F010         	goto	l3992
  6569  00212C                     u3850:
  6570  00212C                     l3996:
  6571  00212C  500C               	movf	___aomod@divisor^0,w,c
  6572  00212E  5C04               	subwf	___aomod@dividend^0,w,c
  6573  002130  500D               	movf	(___aomod@divisor+1)^0,w,c
  6574  002132  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  6575  002134  500E               	movf	(___aomod@divisor+2)^0,w,c
  6576  002136  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  6577  002138  500F               	movf	(___aomod@divisor+3)^0,w,c
  6578  00213A  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  6579  00213C  5010               	movf	(___aomod@divisor+4)^0,w,c
  6580  00213E  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  6581  002140  5011               	movf	(___aomod@divisor+5)^0,w,c
  6582  002142  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  6583  002144  5012               	movf	(___aomod@divisor+6)^0,w,c
  6584  002146  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  6585  002148  5013               	movf	(___aomod@divisor+7)^0,w,c
  6586  00214A  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  6587  00214C  A0D8               	btfss	status,0,c
  6588  00214E  EFAB  F010         	goto	u3861
  6589  002152  EFAD  F010         	goto	u3860
  6590  002156                     u3861:
  6591  002156  EFBD  F010         	goto	l4000
  6592  00215A                     u3860:
  6593  00215A  500C               	movf	___aomod@divisor^0,w,c
  6594  00215C  5E04               	subwf	___aomod@dividend^0,f,c
  6595  00215E  500D               	movf	(___aomod@divisor+1)^0,w,c
  6596  002160  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  6597  002162  500E               	movf	(___aomod@divisor+2)^0,w,c
  6598  002164  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  6599  002166  500F               	movf	(___aomod@divisor+3)^0,w,c
  6600  002168  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  6601  00216A  5010               	movf	(___aomod@divisor+4)^0,w,c
  6602  00216C  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  6603  00216E  5011               	movf	(___aomod@divisor+5)^0,w,c
  6604  002170  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  6605  002172  5012               	movf	(___aomod@divisor+6)^0,w,c
  6606  002174  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  6607  002176  5013               	movf	(___aomod@divisor+7)^0,w,c
  6608  002178  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  6609  00217A                     l4000:
  6610  00217A  90D8               	bcf	status,0,c
  6611  00217C  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  6612  00217E  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  6613  002180  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  6614  002182  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  6615  002184  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  6616  002186  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  6617  002188  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  6618  00218A  320C               	rrcf	___aomod@divisor^0,f,c
  6619  00218C  2E14               	decfsz	___aomod@counter^0,f,c
  6620  00218E  EF96  F010         	goto	l3996
  6621  002192                     l4004:
  6622  002192  5015               	movf	___aomod@sign^0,w,c
  6623  002194  B4D8               	btfsc	status,2,c
  6624  002196  EFCF  F010         	goto	u3871
  6625  00219A  EFD1  F010         	goto	u3870
  6626  00219E                     u3871:
  6627  00219E  EFE1  F010         	goto	l4008
  6628  0021A2                     u3870:
  6629  0021A2  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6630  0021A4  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6631  0021A6  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6632  0021A8  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6633  0021AA  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6634  0021AC  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6635  0021AE  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6636  0021B0  6C04               	negf	___aomod@dividend^0,c
  6637  0021B2  0E00               	movlw	0
  6638  0021B4  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6639  0021B6  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6640  0021B8  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6641  0021BA  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6642  0021BC  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6643  0021BE  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6644  0021C0  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6645  0021C2                     l4008:
  6646  0021C2  C004  F004         	movff	___aomod@dividend,?___aomod
  6647  0021C6  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  6648  0021CA  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  6649  0021CE  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  6650  0021D2  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  6651  0021D6  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  6652  0021DA  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  6653  0021DE  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  6654  0021E2  0012               	return		;funcret
  6655  0021E4                     __end_of___aomod:
  6656                           	callstack 0
  6657                           
  6658 ;; *************** function ___aodiv *****************
  6659 ;; Defined at:
  6660 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  dividend        8    3[COMRAM] long long 
  6663 ;;  divisor         8   11[COMRAM] long long 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  quotient        8   21[COMRAM] long long 
  6666 ;;  sign            1   20[COMRAM] unsigned char 
  6667 ;;  counter         1   19[COMRAM] unsigned char 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  8    3[COMRAM] long long 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6677 ;;      Params:        16       0       0       0       0       0       0       0       0
  6678 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6680 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6681 ;;Total ram usage:       26 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    2
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_dtoa
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text38
  6692  001D82                     __ptext38:
  6693                           	callstack 0
  6694  001D82                     ___aodiv:
  6695                           	callstack 22
  6696  001D82  0E00               	movlw	0
  6697  001D84  6E15               	movwf	___aodiv@sign^0,c
  6698  001D86  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  6699  001D88  EFCA  F00E         	goto	u3750
  6700  001D8C  EFC8  F00E         	goto	u3751
  6701  001D90                     u3751:
  6702  001D90  EFDC  F00E         	goto	l3940
  6703  001D94                     u3750:
  6704  001D94  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  6705  001D96  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  6706  001D98  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  6707  001D9A  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  6708  001D9C  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  6709  001D9E  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  6710  001DA0  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  6711  001DA2  6C0C               	negf	___aodiv@divisor^0,c
  6712  001DA4  0E00               	movlw	0
  6713  001DA6  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  6714  001DA8  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  6715  001DAA  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  6716  001DAC  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  6717  001DAE  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  6718  001DB0  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  6719  001DB2  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  6720  001DB4  0E01               	movlw	1
  6721  001DB6  6E15               	movwf	___aodiv@sign^0,c
  6722  001DB8                     l3940:
  6723  001DB8  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  6724  001DBA  EFE3  F00E         	goto	u3760
  6725  001DBE  EFE1  F00E         	goto	u3761
  6726  001DC2                     u3761:
  6727  001DC2  EFF5  F00E         	goto	l3946
  6728  001DC6                     u3760:
  6729  001DC6  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  6730  001DC8  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  6731  001DCA  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  6732  001DCC  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  6733  001DCE  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  6734  001DD0  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  6735  001DD2  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  6736  001DD4  6C04               	negf	___aodiv@dividend^0,c
  6737  001DD6  0E00               	movlw	0
  6738  001DD8  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  6739  001DDA  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  6740  001DDC  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  6741  001DDE  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  6742  001DE0  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  6743  001DE2  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  6744  001DE4  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  6745  001DE6  0E01               	movlw	1
  6746  001DE8  1A15               	xorwf	___aodiv@sign^0,f,c
  6747  001DEA                     l3946:
  6748  001DEA  EE20  F016         	lfsr	2,___aodiv@quotient
  6749  001DEE  0E07               	movlw	7
  6750  001DF0                     u3771:
  6751  001DF0  6ADE               	clrf	postinc2,c
  6752  001DF2  06E8               	decf	wreg,f,c
  6753  001DF4  E2FD               	bc	u3771
  6754  001DF6  500C               	movf	___aodiv@divisor^0,w,c
  6755  001DF8  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  6756  001DFA  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  6757  001DFC  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  6758  001DFE  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  6759  001E00  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  6760  001E02  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  6761  001E04  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  6762  001E06  B4D8               	btfsc	status,2,c
  6763  001E08  EF08  F00F         	goto	u3781
  6764  001E0C  EF0A  F00F         	goto	u3780
  6765  001E10                     u3781:
  6766  001E10  EF5C  F00F         	goto	l3968
  6767  001E14                     u3780:
  6768  001E14  0E01               	movlw	1
  6769  001E16  6E14               	movwf	___aodiv@counter^0,c
  6770  001E18  EF18  F00F         	goto	l3954
  6771  001E1C                     l3952:
  6772  001E1C  90D8               	bcf	status,0,c
  6773  001E1E  360C               	rlcf	___aodiv@divisor^0,f,c
  6774  001E20  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  6775  001E22  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  6776  001E24  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  6777  001E26  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  6778  001E28  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  6779  001E2A  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  6780  001E2C  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  6781  001E2E  2A14               	incf	___aodiv@counter^0,f,c
  6782  001E30                     l3954:
  6783  001E30  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  6784  001E32  EF1D  F00F         	goto	u3791
  6785  001E36  EF1F  F00F         	goto	u3790
  6786  001E3A                     u3791:
  6787  001E3A  EF0E  F00F         	goto	l3952
  6788  001E3E                     u3790:
  6789  001E3E                     l3956:
  6790  001E3E  90D8               	bcf	status,0,c
  6791  001E40  3616               	rlcf	___aodiv@quotient^0,f,c
  6792  001E42  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  6793  001E44  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  6794  001E46  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  6795  001E48  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  6796  001E4A  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  6797  001E4C  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  6798  001E4E  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  6799  001E50  500C               	movf	___aodiv@divisor^0,w,c
  6800  001E52  5C04               	subwf	___aodiv@dividend^0,w,c
  6801  001E54  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6802  001E56  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  6803  001E58  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6804  001E5A  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  6805  001E5C  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6806  001E5E  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  6807  001E60  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6808  001E62  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  6809  001E64  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6810  001E66  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  6811  001E68  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6812  001E6A  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  6813  001E6C  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6814  001E6E  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  6815  001E70  A0D8               	btfss	status,0,c
  6816  001E72  EF3D  F00F         	goto	u3801
  6817  001E76  EF3F  F00F         	goto	u3800
  6818  001E7A                     u3801:
  6819  001E7A  EF50  F00F         	goto	l3964
  6820  001E7E                     u3800:
  6821  001E7E  500C               	movf	___aodiv@divisor^0,w,c
  6822  001E80  5E04               	subwf	___aodiv@dividend^0,f,c
  6823  001E82  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6824  001E84  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  6825  001E86  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6826  001E88  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  6827  001E8A  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6828  001E8C  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  6829  001E8E  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6830  001E90  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  6831  001E92  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6832  001E94  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  6833  001E96  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6834  001E98  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  6835  001E9A  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6836  001E9C  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  6837  001E9E  8016               	bsf	___aodiv@quotient^0,0,c
  6838  001EA0                     l3964:
  6839  001EA0  90D8               	bcf	status,0,c
  6840  001EA2  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  6841  001EA4  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  6842  001EA6  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  6843  001EA8  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  6844  001EAA  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  6845  001EAC  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  6846  001EAE  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  6847  001EB0  320C               	rrcf	___aodiv@divisor^0,f,c
  6848  001EB2  2E14               	decfsz	___aodiv@counter^0,f,c
  6849  001EB4  EF1F  F00F         	goto	l3956
  6850  001EB8                     l3968:
  6851  001EB8  5015               	movf	___aodiv@sign^0,w,c
  6852  001EBA  B4D8               	btfsc	status,2,c
  6853  001EBC  EF62  F00F         	goto	u3811
  6854  001EC0  EF64  F00F         	goto	u3810
  6855  001EC4                     u3811:
  6856  001EC4  EF74  F00F         	goto	l3972
  6857  001EC8                     u3810:
  6858  001EC8  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  6859  001ECA  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  6860  001ECC  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  6861  001ECE  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  6862  001ED0  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  6863  001ED2  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  6864  001ED4  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  6865  001ED6  6C16               	negf	___aodiv@quotient^0,c
  6866  001ED8  0E00               	movlw	0
  6867  001EDA  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  6868  001EDC  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  6869  001EDE  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  6870  001EE0  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  6871  001EE2  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  6872  001EE4  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  6873  001EE6  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  6874  001EE8                     l3972:
  6875  001EE8  C016  F004         	movff	___aodiv@quotient,?___aodiv
  6876  001EEC  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  6877  001EF0  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  6878  001EF4  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  6879  001EF8  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  6880  001EFC  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  6881  001F00  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  6882  001F04  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  6883  001F08  0012               	return		;funcret
  6884  001F0A                     __end_of___aodiv:
  6885                           	callstack 0
  6886                           
  6887 ;; *************** function _atoi *****************
  6888 ;; Defined at:
  6889 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6892 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  n               2   23[COMRAM] int 
  6895 ;;  neg             2   16[COMRAM] int 
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  2   10[COMRAM] int 
  6898 ;; Registers used:
  6899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6905 ;;      Params:         2       0       0       0       0       0       0       0       0
  6906 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6907 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6908 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6909 ;;Total ram usage:       15 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; Hardware stack levels required when called:    3
  6912 ;; This function calls:
  6913 ;;		___wmul
  6914 ;;		_isdigit
  6915 ;;		_isspace
  6916 ;; This function is called by:
  6917 ;;		_vfpfcnvrt
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           	psect	text39
  6922  001BF2                     __ptext39:
  6923                           	callstack 0
  6924  001BF2                     _atoi:
  6925                           	callstack 22
  6926  001BF2  0E00               	movlw	0
  6927  001BF4  6E19               	movwf	(atoi@n+1)^0,c
  6928  001BF6  0E00               	movlw	0
  6929  001BF8  6E18               	movwf	atoi@n^0,c
  6930  001BFA  0E00               	movlw	0
  6931  001BFC  6E12               	movwf	(atoi@neg+1)^0,c
  6932  001BFE  0E00               	movlw	0
  6933  001C00  6E11               	movwf	atoi@neg^0,c
  6934  001C02  EF05  F00E         	goto	l4120
  6935  001C06                     l4118:
  6936  001C06  4A0B               	infsnz	atoi@s^0,f,c
  6937  001C08  2A0C               	incf	(atoi@s+1)^0,f,c
  6938  001C0A                     l4120:
  6939  001C0A  0E01               	movlw	1
  6940  001C0C  6E17               	movwf	_atoi$1885^0,c
  6941  001C0E  C00B  FFF6         	movff	atoi@s,tblptrl
  6942  001C12  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6943  001C16                     	if	0	;tblptru may be non-zero
  6944  001C16                     	endif
  6945  001C16                     	if	0	;tblptru may be non-zero
  6946  001C16                     	endif
  6947  001C16  0008               	tblrd		*
  6948  001C18  50F5               	movf	tablat,w,c
  6949  001C1A  0A20               	xorlw	32
  6950  001C1C  B4D8               	btfsc	status,2,c
  6951  001C1E  EF13  F00E         	goto	u4121
  6952  001C22  EF15  F00E         	goto	u4120
  6953  001C26                     u4121:
  6954  001C26  EF32  F00E         	goto	l4128
  6955  001C2A                     u4120:
  6956  001C2A  0EF7               	movlw	247
  6957  001C2C  6E0D               	movwf	??_atoi^0,c
  6958  001C2E  0EFF               	movlw	255
  6959  001C30  6E0E               	movwf	(??_atoi+1)^0,c
  6960  001C32  C00B  FFF6         	movff	atoi@s,tblptrl
  6961  001C36  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6962  001C3A                     	if	0	;tblptru may be non-zero
  6963  001C3A                     	endif
  6964  001C3A                     	if	0	;tblptru may be non-zero
  6965  001C3A                     	endif
  6966  001C3A  0008               	tblrd		*
  6967  001C3C  50F5               	movf	tablat,w,c
  6968  001C3E  6E0F               	movwf	(??_atoi+2)^0,c
  6969  001C40  6A10               	clrf	(??_atoi+3)^0,c
  6970  001C42  500D               	movf	??_atoi^0,w,c
  6971  001C44  260F               	addwf	(??_atoi+2)^0,f,c
  6972  001C46  500E               	movf	(??_atoi+1)^0,w,c
  6973  001C48  2210               	addwfc	(??_atoi+3)^0,f,c
  6974  001C4A  5010               	movf	(??_atoi+3)^0,w,c
  6975  001C4C  E109               	bnz	u4130
  6976  001C4E  0E05               	movlw	5
  6977  001C50  5C0F               	subwf	(??_atoi+2)^0,w,c
  6978  001C52  A0D8               	btfss	status,0,c
  6979  001C54  EF2E  F00E         	goto	u4131
  6980  001C58  EF30  F00E         	goto	u4130
  6981  001C5C                     u4131:
  6982  001C5C  EF32  F00E         	goto	l4128
  6983  001C60                     u4130:
  6984  001C60  0E00               	movlw	0
  6985  001C62  6E17               	movwf	_atoi$1885^0,c
  6986  001C64                     l4128:
  6987  001C64  C017  F013         	movff	_atoi$1885,_atoi$1884
  6988  001C68  6A14               	clrf	(_atoi$1884+1)^0,c
  6989  001C6A  5013               	movf	_atoi$1884^0,w,c
  6990  001C6C  1014               	iorwf	(_atoi$1884+1)^0,w,c
  6991  001C6E  A4D8               	btfss	status,2,c
  6992  001C70  EF3C  F00E         	goto	u4141
  6993  001C74  EF3E  F00E         	goto	u4140
  6994  001C78                     u4141:
  6995  001C78  EF03  F00E         	goto	l4118
  6996  001C7C                     u4140:
  6997  001C7C  EF48  F00E         	goto	l4138
  6998  001C80                     l4134:
  6999  001C80  0E00               	movlw	0
  7000  001C82  6E12               	movwf	(atoi@neg+1)^0,c
  7001  001C84  0E01               	movlw	1
  7002  001C86  6E11               	movwf	atoi@neg^0,c
  7003  001C88                     l4136:
  7004  001C88  4A0B               	infsnz	atoi@s^0,f,c
  7005  001C8A  2A0C               	incf	(atoi@s+1)^0,f,c
  7006  001C8C  EF7D  F00E         	goto	l4144
  7007  001C90                     l4138:
  7008  001C90  C00B  FFF6         	movff	atoi@s,tblptrl
  7009  001C94  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7010  001C98                     	if	0	;tblptru may be non-zero
  7011  001C98                     	endif
  7012  001C98                     	if	0	;tblptru may be non-zero
  7013  001C98                     	endif
  7014  001C98  0008               	tblrd		*
  7015  001C9A  50F5               	movf	tablat,w,c
  7016  001C9C  6E0D               	movwf	??_atoi^0,c
  7017  001C9E  6A0E               	clrf	(??_atoi+1)^0,c
  7018                           
  7019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7020                           ; Switch size 1, requested type "simple"
  7021                           ; Number of cases is 1, Range of values is 0 to 0
  7022                           ; switch strategies available:
  7023                           ; Name         Instructions Cycles
  7024                           ; simple_byte            4     3 (average)
  7025                           ;	Chosen strategy is simple_byte
  7026  001CA0  500E               	movf	(??_atoi+1)^0,w,c
  7027  001CA2  0A00               	xorlw	0	; case 0
  7028  001CA4  B4D8               	btfsc	status,2,c
  7029  001CA6  EF57  F00E         	goto	l4482
  7030  001CAA  EF7D  F00E         	goto	l4144
  7031  001CAE                     l4482:
  7032                           
  7033                           ; Switch size 1, requested type "simple"
  7034                           ; Number of cases is 2, Range of values is 43 to 45
  7035                           ; switch strategies available:
  7036                           ; Name         Instructions Cycles
  7037                           ; simple_byte            7     4 (average)
  7038                           ;	Chosen strategy is simple_byte
  7039  001CAE  500D               	movf	??_atoi^0,w,c
  7040  001CB0  0A2B               	xorlw	43	; case 43
  7041  001CB2  B4D8               	btfsc	status,2,c
  7042  001CB4  EF44  F00E         	goto	l4136
  7043  001CB8  0A06               	xorlw	6	; case 45
  7044  001CBA  B4D8               	btfsc	status,2,c
  7045  001CBC  EF40  F00E         	goto	l4134
  7046  001CC0  EF7D  F00E         	goto	l4144
  7047  001CC4                     l4140:
  7048  001CC4  C018  F004         	movff	atoi@n,___wmul@multiplier
  7049  001CC8  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  7050  001CCC  0E00               	movlw	0
  7051  001CCE  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  7052  001CD0  0E0A               	movlw	10
  7053  001CD2  6E06               	movwf	___wmul@multiplicand^0,c
  7054  001CD4  EC6A  F018         	call	___wmul	;wreg free
  7055  001CD8  C00B  FFF6         	movff	atoi@s,tblptrl
  7056  001CDC  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7057  001CE0                     	if	0	;tblptru may be non-zero
  7058  001CE0                     	endif
  7059  001CE0                     	if	0	;tblptru may be non-zero
  7060  001CE0                     	endif
  7061  001CE0  0008               	tblrd		*
  7062  001CE2  50F5               	movf	tablat,w,c
  7063  001CE4  5E04               	subwf	?___wmul^0,f,c
  7064  001CE6  0E00               	movlw	0
  7065  001CE8  5A05               	subwfb	(?___wmul+1)^0,f,c
  7066  001CEA  0E30               	movlw	48
  7067  001CEC  2404               	addwf	?___wmul^0,w,c
  7068  001CEE  6E18               	movwf	atoi@n^0,c
  7069  001CF0  0E00               	movlw	0
  7070  001CF2  2005               	addwfc	(?___wmul+1)^0,w,c
  7071  001CF4  6E19               	movwf	(atoi@n+1)^0,c
  7072  001CF6  EF44  F00E         	goto	l4136
  7073  001CFA                     l4144:
  7074  001CFA  0ED0               	movlw	208
  7075  001CFC  6E0D               	movwf	??_atoi^0,c
  7076  001CFE  0EFF               	movlw	255
  7077  001D00  6E0E               	movwf	(??_atoi+1)^0,c
  7078  001D02  C00B  FFF6         	movff	atoi@s,tblptrl
  7079  001D06  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7080  001D0A                     	if	0	;tblptru may be non-zero
  7081  001D0A                     	endif
  7082  001D0A                     	if	0	;tblptru may be non-zero
  7083  001D0A                     	endif
  7084  001D0A  0008               	tblrd		*
  7085  001D0C  50F5               	movf	tablat,w,c
  7086  001D0E  6E0F               	movwf	(??_atoi+2)^0,c
  7087  001D10  6A10               	clrf	(??_atoi+3)^0,c
  7088  001D12  500D               	movf	??_atoi^0,w,c
  7089  001D14  260F               	addwf	(??_atoi+2)^0,f,c
  7090  001D16  500E               	movf	(??_atoi+1)^0,w,c
  7091  001D18  2210               	addwfc	(??_atoi+3)^0,f,c
  7092  001D1A  5010               	movf	(??_atoi+3)^0,w,c
  7093  001D1C  E10A               	bnz	u4150
  7094  001D1E  0E0A               	movlw	10
  7095  001D20  5C0F               	subwf	(??_atoi+2)^0,w,c
  7096  001D22  A0D8               	btfss	status,0,c
  7097  001D24  EF96  F00E         	goto	u4151
  7098  001D28  EF99  F00E         	goto	u4150
  7099  001D2C                     u4151:
  7100  001D2C  0E01               	movlw	1
  7101  001D2E  EF9A  F00E         	goto	u4160
  7102  001D32                     u4150:
  7103  001D32  0E00               	movlw	0
  7104  001D34                     u4160:
  7105  001D34  6E15               	movwf	_atoi$1886^0,c
  7106  001D36  6A16               	clrf	(_atoi$1886+1)^0,c
  7107  001D38  5015               	movf	_atoi$1886^0,w,c
  7108  001D3A  1016               	iorwf	(_atoi$1886+1)^0,w,c
  7109  001D3C  A4D8               	btfss	status,2,c
  7110  001D3E  EFA3  F00E         	goto	u4171
  7111  001D42  EFA5  F00E         	goto	u4170
  7112  001D46                     u4171:
  7113  001D46  EF62  F00E         	goto	l4140
  7114  001D4A                     u4170:
  7115  001D4A  5011               	movf	atoi@neg^0,w,c
  7116  001D4C  1012               	iorwf	(atoi@neg+1)^0,w,c
  7117  001D4E  A4D8               	btfss	status,2,c
  7118  001D50  EFAC  F00E         	goto	u4181
  7119  001D54  EFAE  F00E         	goto	u4180
  7120  001D58                     u4181:
  7121  001D58  EFBC  F00E         	goto	l1146
  7122  001D5C                     u4180:
  7123  001D5C  C018  F00D         	movff	atoi@n,??_atoi
  7124  001D60  C019  F00E         	movff	atoi@n+1,??_atoi+1
  7125  001D64  1E0D               	comf	??_atoi^0,f,c
  7126  001D66  1E0E               	comf	(??_atoi+1)^0,f,c
  7127  001D68  4A0D               	infsnz	??_atoi^0,f,c
  7128  001D6A  2A0E               	incf	(??_atoi+1)^0,f,c
  7129  001D6C  C00D  F00B         	movff	??_atoi,?_atoi
  7130  001D70  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  7131  001D74  EFC0  F00E         	goto	l1149
  7132  001D78                     l1146:
  7133  001D78  C018  F00B         	movff	atoi@n,?_atoi
  7134  001D7C  C019  F00C         	movff	atoi@n+1,?_atoi+1
  7135  001D80                     l1149:
  7136  001D80  0012               	return		;funcret
  7137  001D82                     __end_of_atoi:
  7138                           	callstack 0
  7139                           
  7140 ;; *************** function _isspace *****************
  7141 ;; Defined at:
  7142 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  c               2    3[COMRAM] int 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;		None
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  2    3[COMRAM] int 
  7149 ;; Registers used:
  7150 ;;		wreg, status,2, status,0
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7156 ;;      Params:         2       0       0       0       0       0       0       0       0
  7157 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7158 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7159 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7160 ;;Total ram usage:        7 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; Hardware stack levels required when called:    2
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		_atoi
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           	psect	text40
  7171  002D86                     __ptext40:
  7172                           	callstack 0
  7173  002D86                     _isspace:
  7174                           	callstack 22
  7175  002D86  0E01               	movlw	1
  7176  002D88  6E0A               	movwf	_isspace$1902^0,c
  7177  002D8A  0E20               	movlw	32
  7178  002D8C  1804               	xorwf	isspace@c^0,w,c
  7179  002D8E  1005               	iorwf	(isspace@c+1)^0,w,c
  7180  002D90  B4D8               	btfsc	status,2,c
  7181  002D92  EFCD  F016         	goto	u3951
  7182  002D96  EFCF  F016         	goto	u3950
  7183  002D9A                     u3951:
  7184  002D9A  EFE8  F016         	goto	l4050
  7185  002D9E                     u3950:
  7186  002D9E  0EF7               	movlw	247
  7187  002DA0  6E06               	movwf	??_isspace^0,c
  7188  002DA2  0EFF               	movlw	255
  7189  002DA4  6E07               	movwf	(??_isspace+1)^0,c
  7190  002DA6  C004  F008         	movff	isspace@c,??_isspace+2
  7191  002DAA  C005  F009         	movff	isspace@c+1,??_isspace+3
  7192  002DAE  5006               	movf	??_isspace^0,w,c
  7193  002DB0  2608               	addwf	(??_isspace+2)^0,f,c
  7194  002DB2  5007               	movf	(??_isspace+1)^0,w,c
  7195  002DB4  2209               	addwfc	(??_isspace+3)^0,f,c
  7196  002DB6  5009               	movf	(??_isspace+3)^0,w,c
  7197  002DB8  E109               	bnz	u3960
  7198  002DBA  0E05               	movlw	5
  7199  002DBC  5C08               	subwf	(??_isspace+2)^0,w,c
  7200  002DBE  A0D8               	btfss	status,0,c
  7201  002DC0  EFE4  F016         	goto	u3961
  7202  002DC4  EFE6  F016         	goto	u3960
  7203  002DC8                     u3961:
  7204  002DC8  EFE8  F016         	goto	l4050
  7205  002DCC                     u3960:
  7206  002DCC  0E00               	movlw	0
  7207  002DCE  6E0A               	movwf	_isspace$1902^0,c
  7208  002DD0                     l4050:
  7209  002DD0  C00A  F004         	movff	_isspace$1902,?_isspace
  7210  002DD4  6A05               	clrf	(?_isspace+1)^0,c
  7211  002DD6  0012               	return		;funcret
  7212  002DD8                     __end_of_isspace:
  7213                           	callstack 0
  7214                           
  7215 ;; *************** function _isdigit *****************
  7216 ;; Defined at:
  7217 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  c               2    3[COMRAM] int 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  2    3[COMRAM] int 
  7224 ;; Registers used:
  7225 ;;		wreg, status,2, status,0
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7231 ;;      Params:         2       0       0       0       0       0       0       0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7233 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7234 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7235 ;;Total ram usage:        6 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    2
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_vfpfcnvrt
  7242 ;;		_atoi
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text41
  7247  002FB0                     __ptext41:
  7248                           	callstack 0
  7249  002FB0                     _isdigit:
  7250                           	callstack 23
  7251  002FB0  0ED0               	movlw	208
  7252  002FB2  6E06               	movwf	??_isdigit^0,c
  7253  002FB4  0EFF               	movlw	255
  7254  002FB6  6E07               	movwf	(??_isdigit+1)^0,c
  7255  002FB8  C004  F008         	movff	isdigit@c,??_isdigit+2
  7256  002FBC  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  7257  002FC0  5006               	movf	??_isdigit^0,w,c
  7258  002FC2  2608               	addwf	(??_isdigit+2)^0,f,c
  7259  002FC4  5007               	movf	(??_isdigit+1)^0,w,c
  7260  002FC6  2209               	addwfc	(??_isdigit+3)^0,f,c
  7261  002FC8  5009               	movf	(??_isdigit+3)^0,w,c
  7262  002FCA  E10A               	bnz	u3930
  7263  002FCC  0E0A               	movlw	10
  7264  002FCE  5C08               	subwf	(??_isdigit+2)^0,w,c
  7265  002FD0  A0D8               	btfss	status,0,c
  7266  002FD2  EFED  F017         	goto	u3931
  7267  002FD6  EFF0  F017         	goto	u3930
  7268  002FDA                     u3931:
  7269  002FDA  0E01               	movlw	1
  7270  002FDC  EFF1  F017         	goto	u3940
  7271  002FE0                     u3930:
  7272  002FE0  0E00               	movlw	0
  7273  002FE2                     u3940:
  7274  002FE2  6E04               	movwf	?_isdigit^0,c
  7275  002FE4  6A05               	clrf	(?_isdigit+1)^0,c
  7276  002FE6  0012               	return		;funcret
  7277  002FE8                     __end_of_isdigit:
  7278                           	callstack 0
  7279                           
  7280 ;; *************** function ___wmul *****************
  7281 ;; Defined at:
  7282 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  multiplier      2    3[COMRAM] unsigned int 
  7285 ;;  multiplicand    2    5[COMRAM] unsigned int 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  product         2    7[COMRAM] unsigned int 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  2    3[COMRAM] unsigned int 
  7290 ;; Registers used:
  7291 ;;		wreg, status,2, status,0, prodl, prodh
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7297 ;;      Params:         4       0       0       0       0       0       0       0       0
  7298 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7300 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7301 ;;Total ram usage:        6 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    2
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_appSubGetData
  7308 ;;		_atoi
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text42
  7313  0030D4                     __ptext42:
  7314                           	callstack 0
  7315  0030D4                     ___wmul:
  7316                           	callstack 22
  7317  0030D4  5004               	movf	___wmul@multiplier^0,w,c
  7318  0030D6  0206               	mulwf	___wmul@multiplicand^0,c
  7319  0030D8  CFF3 F008          	movff	prodl,___wmul@product
  7320  0030DC  CFF4 F009          	movff	prodh,___wmul@product+1
  7321  0030E0  5004               	movf	___wmul@multiplier^0,w,c
  7322  0030E2  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  7323  0030E4  50F3               	movf	243,w,c
  7324  0030E6  2609               	addwf	(___wmul@product+1)^0,f,c
  7325  0030E8  5005               	movf	(___wmul@multiplier+1)^0,w,c
  7326  0030EA  0206               	mulwf	___wmul@multiplicand^0,c
  7327  0030EC  50F3               	movf	243,w,c
  7328  0030EE  2609               	addwf	(___wmul@product+1)^0,f,c
  7329  0030F0  C008  F004         	movff	___wmul@product,?___wmul
  7330  0030F4  C009  F005         	movff	___wmul@product+1,?___wmul+1
  7331  0030F8  0012               	return		;funcret
  7332  0030FA                     __end_of___wmul:
  7333                           	callstack 0
  7334                           
  7335 ;; *************** function _memset *****************
  7336 ;; Defined at:
  7337 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  dest            2    3[COMRAM] PTR void 
  7340 ;;		 -> datos(25), 
  7341 ;;  c               2    5[COMRAM] int 
  7342 ;;  n               2    7[COMRAM] unsigned int 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  s               2   13[COMRAM] PTR unsigned char 
  7345 ;;		 -> datos(25), 
  7346 ;;  k               2   11[COMRAM] unsigned int 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  2    3[COMRAM] PTR void 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7356 ;;      Params:         6       0       0       0       0       0       0       0       0
  7357 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7358 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7359 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7360 ;;Total ram usage:       12 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    2
  7363 ;; This function calls:
  7364 ;;		Nothing
  7365 ;; This function is called by:
  7366 ;;		_appADC
  7367 ;;		_appBat
  7368 ;;		_appSubGetData
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text43
  7373  001F0A                     __ptext43:
  7374                           	callstack 0
  7375  001F0A                     _memset:
  7376                           	callstack 26
  7377  001F0A  C004  F00E         	movff	memset@dest,memset@s
  7378  001F0E  C005  F00F         	movff	memset@dest+1,memset@s+1
  7379  001F12  5008               	movf	memset@n^0,w,c
  7380  001F14  1009               	iorwf	(memset@n+1)^0,w,c
  7381  001F16  A4D8               	btfss	status,2,c
  7382  001F18  EF90  F00F         	goto	u2601
  7383  001F1C  EF92  F00F         	goto	u2600
  7384  001F20                     u2601:
  7385  001F20  EF94  F00F         	goto	l2990
  7386  001F24                     u2600:
  7387  001F24  EF3F  F010         	goto	l1000
  7388  001F28                     l2990:
  7389  001F28  C00E  FFD9         	movff	memset@s,fsr2l
  7390  001F2C  C00F  FFDA         	movff	memset@s+1,fsr2h
  7391  001F30  C006  FFDF         	movff	memset@c,indf2
  7392  001F34  5008               	movf	memset@n^0,w,c
  7393  001F36  240E               	addwf	memset@s^0,w,c
  7394  001F38  6E0A               	movwf	??_memset^0,c
  7395  001F3A  5009               	movf	(memset@n+1)^0,w,c
  7396  001F3C  200F               	addwfc	(memset@s+1)^0,w,c
  7397  001F3E  6E0B               	movwf	(??_memset+1)^0,c
  7398  001F40  0EFF               	movlw	255
  7399  001F42  240A               	addwf	??_memset^0,w,c
  7400  001F44  6ED9               	movwf	fsr2l,c
  7401  001F46  0EFF               	movlw	255
  7402  001F48  200B               	addwfc	(??_memset+1)^0,w,c
  7403  001F4A  6EDA               	movwf	fsr2h,c
  7404  001F4C  C006  FFDF         	movff	memset@c,indf2
  7405  001F50  5009               	movf	(memset@n+1)^0,w,c
  7406  001F52  E107               	bnz	u2611
  7407  001F54  0E03               	movlw	3
  7408  001F56  5C08               	subwf	memset@n^0,w,c
  7409  001F58  B0D8               	btfsc	status,0,c
  7410  001F5A  EFB1  F00F         	goto	u2611
  7411  001F5E  EFB3  F00F         	goto	u2610
  7412  001F62                     u2611:
  7413  001F62  EFB5  F00F         	goto	l2996
  7414  001F66                     u2610:
  7415  001F66  EF3F  F010         	goto	l1000
  7416  001F6A                     l2996:
  7417  001F6A  EE20 F001          	lfsr	2,1
  7418  001F6E  500E               	movf	memset@s^0,w,c
  7419  001F70  26D9               	addwf	fsr2l,f,c
  7420  001F72  500F               	movf	(memset@s+1)^0,w,c
  7421  001F74  22DA               	addwfc	fsr2h,f,c
  7422  001F76  C006  FFDF         	movff	memset@c,indf2
  7423  001F7A  EE20 F002          	lfsr	2,2
  7424  001F7E  500E               	movf	memset@s^0,w,c
  7425  001F80  26D9               	addwf	fsr2l,f,c
  7426  001F82  500F               	movf	(memset@s+1)^0,w,c
  7427  001F84  22DA               	addwfc	fsr2h,f,c
  7428  001F86  C006  FFDF         	movff	memset@c,indf2
  7429  001F8A  5008               	movf	memset@n^0,w,c
  7430  001F8C  240E               	addwf	memset@s^0,w,c
  7431  001F8E  6E0A               	movwf	??_memset^0,c
  7432  001F90  5009               	movf	(memset@n+1)^0,w,c
  7433  001F92  200F               	addwfc	(memset@s+1)^0,w,c
  7434  001F94  6E0B               	movwf	(??_memset+1)^0,c
  7435  001F96  0EFE               	movlw	254
  7436  001F98  240A               	addwf	??_memset^0,w,c
  7437  001F9A  6ED9               	movwf	fsr2l,c
  7438  001F9C  0EFF               	movlw	255
  7439  001F9E  200B               	addwfc	(??_memset+1)^0,w,c
  7440  001FA0  6EDA               	movwf	fsr2h,c
  7441  001FA2  C006  FFDF         	movff	memset@c,indf2
  7442  001FA6  5008               	movf	memset@n^0,w,c
  7443  001FA8  240E               	addwf	memset@s^0,w,c
  7444  001FAA  6E0A               	movwf	??_memset^0,c
  7445  001FAC  5009               	movf	(memset@n+1)^0,w,c
  7446  001FAE  200F               	addwfc	(memset@s+1)^0,w,c
  7447  001FB0  6E0B               	movwf	(??_memset+1)^0,c
  7448  001FB2  0EFD               	movlw	253
  7449  001FB4  240A               	addwf	??_memset^0,w,c
  7450  001FB6  6ED9               	movwf	fsr2l,c
  7451  001FB8  0EFF               	movlw	255
  7452  001FBA  200B               	addwfc	(??_memset+1)^0,w,c
  7453  001FBC  6EDA               	movwf	fsr2h,c
  7454  001FBE  C006  FFDF         	movff	memset@c,indf2
  7455  001FC2  5009               	movf	(memset@n+1)^0,w,c
  7456  001FC4  E107               	bnz	u2621
  7457  001FC6  0E07               	movlw	7
  7458  001FC8  5C08               	subwf	memset@n^0,w,c
  7459  001FCA  B0D8               	btfsc	status,0,c
  7460  001FCC  EFEA  F00F         	goto	u2621
  7461  001FD0  EFEC  F00F         	goto	u2620
  7462  001FD4                     u2621:
  7463  001FD4  EFEE  F00F         	goto	l3002
  7464  001FD8                     u2620:
  7465  001FD8  EF3F  F010         	goto	l1000
  7466  001FDC                     l3002:
  7467  001FDC  EE20 F003          	lfsr	2,3
  7468  001FE0  500E               	movf	memset@s^0,w,c
  7469  001FE2  26D9               	addwf	fsr2l,f,c
  7470  001FE4  500F               	movf	(memset@s+1)^0,w,c
  7471  001FE6  22DA               	addwfc	fsr2h,f,c
  7472  001FE8  C006  FFDF         	movff	memset@c,indf2
  7473  001FEC  5008               	movf	memset@n^0,w,c
  7474  001FEE  240E               	addwf	memset@s^0,w,c
  7475  001FF0  6E0A               	movwf	??_memset^0,c
  7476  001FF2  5009               	movf	(memset@n+1)^0,w,c
  7477  001FF4  200F               	addwfc	(memset@s+1)^0,w,c
  7478  001FF6  6E0B               	movwf	(??_memset+1)^0,c
  7479  001FF8  0EFC               	movlw	252
  7480  001FFA  240A               	addwf	??_memset^0,w,c
  7481  001FFC  6ED9               	movwf	fsr2l,c
  7482  001FFE  0EFF               	movlw	255
  7483  002000  200B               	addwfc	(??_memset+1)^0,w,c
  7484  002002  6EDA               	movwf	fsr2h,c
  7485  002004  C006  FFDF         	movff	memset@c,indf2
  7486  002008  5009               	movf	(memset@n+1)^0,w,c
  7487  00200A  E107               	bnz	u2631
  7488  00200C  0E09               	movlw	9
  7489  00200E  5C08               	subwf	memset@n^0,w,c
  7490  002010  B0D8               	btfsc	status,0,c
  7491  002012  EF0D  F010         	goto	u2631
  7492  002016  EF0F  F010         	goto	u2630
  7493  00201A                     u2631:
  7494  00201A  EF11  F010         	goto	l3008
  7495  00201E                     u2630:
  7496  00201E  EF3F  F010         	goto	l1000
  7497  002022                     l3008:
  7498  002022  C00E  F00A         	movff	memset@s,??_memset
  7499  002026  C00F  F00B         	movff	memset@s+1,??_memset+1
  7500  00202A  1E0A               	comf	??_memset^0,f,c
  7501  00202C  1E0B               	comf	(??_memset+1)^0,f,c
  7502  00202E  4A0A               	infsnz	??_memset^0,f,c
  7503  002030  2A0B               	incf	(??_memset+1)^0,f,c
  7504  002032  0E03               	movlw	3
  7505  002034  140A               	andwf	??_memset^0,w,c
  7506  002036  6E0C               	movwf	memset@k^0,c
  7507  002038  6A0D               	clrf	(memset@k+1)^0,c
  7508  00203A  500C               	movf	memset@k^0,w,c
  7509  00203C  260E               	addwf	memset@s^0,f,c
  7510  00203E  500D               	movf	(memset@k+1)^0,w,c
  7511  002040  220F               	addwfc	(memset@s+1)^0,f,c
  7512  002042  500C               	movf	memset@k^0,w,c
  7513  002044  5E08               	subwf	memset@n^0,f,c
  7514  002046  500D               	movf	(memset@k+1)^0,w,c
  7515  002048  5A09               	subwfb	(memset@n+1)^0,f,c
  7516  00204A  0EFC               	movlw	252
  7517  00204C  1608               	andwf	memset@n^0,f,c
  7518  00204E  0EFF               	movlw	255
  7519  002050  1609               	andwf	(memset@n+1)^0,f,c
  7520  002052  EF36  F010         	goto	l3016
  7521  002056                     l3010:
  7522  002056  C00E  FFD9         	movff	memset@s,fsr2l
  7523  00205A  C00F  FFDA         	movff	memset@s+1,fsr2h
  7524  00205E  C006  FFDF         	movff	memset@c,indf2
  7525  002062  0608               	decf	memset@n^0,f,c
  7526  002064  A0D8               	btfss	status,0,c
  7527  002066  0609               	decf	(memset@n+1)^0,f,c
  7528  002068  4A0E               	infsnz	memset@s^0,f,c
  7529  00206A  2A0F               	incf	(memset@s+1)^0,f,c
  7530  00206C                     l3016:
  7531  00206C  5008               	movf	memset@n^0,w,c
  7532  00206E  1009               	iorwf	(memset@n+1)^0,w,c
  7533  002070  A4D8               	btfss	status,2,c
  7534  002072  EF3D  F010         	goto	u2641
  7535  002076  EF3F  F010         	goto	u2640
  7536  00207A                     u2641:
  7537  00207A  EF2B  F010         	goto	l3010
  7538  00207E                     u2640:
  7539  00207E                     l1000:
  7540  00207E  0012               	return		;funcret
  7541  002080                     __end_of_memset:
  7542                           	callstack 0
  7543                           
  7544 ;; *************** function _Lcd_Out *****************
  7545 ;; Defined at:
  7546 ;;		line 95 in file "flex_lcd.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;  y               1    wreg     unsigned char 
  7549 ;;  x               1    6[COMRAM] unsigned char 
  7550 ;;  buffer          2    7[COMRAM] PTR const char 
  7551 ;;		 -> STR_9(19), STR_8(12), STR_6(14), appElemts@dataout(6), 
  7552 ;;		 -> STR_4(6), STR_3(12), datos.display(16), datos(25), 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;  y               1   11[COMRAM] unsigned char 
  7555 ;;  data            1   12[COMRAM] unsigned char 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1    wreg      void 
  7558 ;; Registers used:
  7559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7565 ;;      Params:         3       0       0       0       0       0       0       0       0
  7566 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7567 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7568 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7569 ;;Total ram usage:        7 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; Hardware stack levels required when called:    3
  7572 ;; This function calls:
  7573 ;;		_Lcd_Chr_CP
  7574 ;;		_Lcd_Cmd
  7575 ;; This function is called by:
  7576 ;;		_appADC
  7577 ;;		_appBat
  7578 ;;		_appLCD_Init
  7579 ;;		_appElemts
  7580 ;;		_appSubGetData
  7581 ;;		_warning
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text44
  7586  0027A4                     __ptext44:
  7587                           	callstack 0
  7588  0027A4                     _Lcd_Out:
  7589                           	callstack 26
  7590                           
  7591                           ;incstack = 0
  7592                           ;Lcd_Out@y stored from wreg
  7593  0027A4  6E0C               	movwf	Lcd_Out@y^0,c
  7594  0027A6                     
  7595                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  7596  0027A6  EFE9  F013         	goto	l3042
  7597  0027AA                     l3032:
  7598                           
  7599                           ;flex_lcd.c: 101:             data = 128 + x;
  7600  0027AA  5007               	movf	Lcd_Out@x^0,w,c
  7601  0027AC  0F80               	addlw	128
  7602  0027AE  6E0D               	movwf	Lcd_Out@data^0,c
  7603                           
  7604                           ;flex_lcd.c: 102:             break;
  7605  0027B0  EF06  F014         	goto	l3044
  7606  0027B4                     l3034:
  7607                           
  7608                           ;flex_lcd.c: 104:             data = 192 + x;
  7609  0027B4  5007               	movf	Lcd_Out@x^0,w,c
  7610  0027B6  0FC0               	addlw	192
  7611  0027B8  6E0D               	movwf	Lcd_Out@data^0,c
  7612                           
  7613                           ;flex_lcd.c: 105:             break;
  7614  0027BA  EF06  F014         	goto	l3044
  7615  0027BE                     l3036:
  7616                           
  7617                           ;flex_lcd.c: 107:             data = 148 + x;
  7618  0027BE  5007               	movf	Lcd_Out@x^0,w,c
  7619  0027C0  0F94               	addlw	148
  7620  0027C2  6E0D               	movwf	Lcd_Out@data^0,c
  7621                           
  7622                           ;flex_lcd.c: 108:             break;
  7623  0027C4  EF06  F014         	goto	l3044
  7624  0027C8                     l3038:
  7625                           
  7626                           ;flex_lcd.c: 110:             data = 212 + x;
  7627  0027C8  5007               	movf	Lcd_Out@x^0,w,c
  7628  0027CA  0FD4               	addlw	212
  7629  0027CC  6E0D               	movwf	Lcd_Out@data^0,c
  7630                           
  7631                           ;flex_lcd.c: 111:             break;
  7632  0027CE  EF06  F014         	goto	l3044
  7633  0027D2                     l3042:
  7634  0027D2  500C               	movf	Lcd_Out@y^0,w,c
  7635  0027D4  6E0A               	movwf	??_Lcd_Out^0,c
  7636  0027D6  6A0B               	clrf	(??_Lcd_Out+1)^0,c
  7637                           
  7638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7639                           ; Switch size 1, requested type "simple"
  7640                           ; Number of cases is 1, Range of values is 0 to 0
  7641                           ; switch strategies available:
  7642                           ; Name         Instructions Cycles
  7643                           ; simple_byte            4     3 (average)
  7644                           ;	Chosen strategy is simple_byte
  7645  0027D8  500B               	movf	(??_Lcd_Out+1)^0,w,c
  7646  0027DA  0A00               	xorlw	0	; case 0
  7647  0027DC  B4D8               	btfsc	status,2,c
  7648  0027DE  EFF3  F013         	goto	l4484
  7649  0027E2  EF06  F014         	goto	l3044
  7650  0027E6                     l4484:
  7651                           
  7652                           ; Switch size 1, requested type "simple"
  7653                           ; Number of cases is 4, Range of values is 1 to 4
  7654                           ; switch strategies available:
  7655                           ; Name         Instructions Cycles
  7656                           ; simple_byte           13     7 (average)
  7657                           ;	Chosen strategy is simple_byte
  7658  0027E6  500A               	movf	??_Lcd_Out^0,w,c
  7659  0027E8  0A01               	xorlw	1	; case 1
  7660  0027EA  B4D8               	btfsc	status,2,c
  7661  0027EC  EFD5  F013         	goto	l3032
  7662  0027F0  0A03               	xorlw	3	; case 2
  7663  0027F2  B4D8               	btfsc	status,2,c
  7664  0027F4  EFDA  F013         	goto	l3034
  7665  0027F8  0A01               	xorlw	1	; case 3
  7666  0027FA  B4D8               	btfsc	status,2,c
  7667  0027FC  EFDF  F013         	goto	l3036
  7668  002800  0A07               	xorlw	7	; case 4
  7669  002802  B4D8               	btfsc	status,2,c
  7670  002804  EFE4  F013         	goto	l3038
  7671  002808  EF06  F014         	goto	l3044
  7672  00280C                     l3044:
  7673                           
  7674                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  7675  00280C  500D               	movf	Lcd_Out@data^0,w,c
  7676  00280E  EC3B  F012         	call	_Lcd_Cmd
  7677                           
  7678                           ;flex_lcd.c: 116:     while(*buffer)
  7679  002812  EF1F  F014         	goto	l3050
  7680  002816                     l3046:
  7681                           
  7682                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  7683  002816  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7684  00281A  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7685  00281E  6AF8               	clrf	tblptru,c
  7686  002820  0E07               	movlw	(high __ramtop+-1)
  7687  002822  64F7               	cpfsgt	tblptrh,c
  7688  002824  D003               	bra	u2657
  7689  002826  0008               	tblrd		*
  7690  002828  50F5               	movf	tablat,w,c
  7691  00282A  D005               	bra	u2650
  7692  00282C                     u2657:
  7693  00282C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7694  002830  CFF7 FFE2          	movff	tblptrh,fsr1h
  7695  002834  50E7               	movf	indf1,w,c
  7696  002836                     u2650:
  7697  002836  ECF2  F010         	call	_Lcd_Chr_CP
  7698  00283A                     
  7699                           ;flex_lcd.c: 119:         buffer++;
  7700  00283A  4A08               	infsnz	Lcd_Out@buffer^0,f,c
  7701  00283C  2A09               	incf	(Lcd_Out@buffer+1)^0,f,c
  7702  00283E                     l3050:
  7703                           
  7704                           ;flex_lcd.c: 116:     while(*buffer)
  7705  00283E  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7706  002842  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7707  002846  6AF8               	clrf	tblptru,c
  7708  002848  0E07               	movlw	(high __ramtop+-1)
  7709  00284A  64F7               	cpfsgt	tblptrh,c
  7710  00284C  D003               	bra	u2667
  7711  00284E  0008               	tblrd		*
  7712  002850  50F5               	movf	tablat,w,c
  7713  002852  D005               	bra	u2660
  7714  002854                     u2667:
  7715  002854  CFF6 FFE1          	movff	tblptrl,fsr1l
  7716  002858  CFF7 FFE2          	movff	tblptrh,fsr1h
  7717  00285C  50E7               	movf	indf1,w,c
  7718  00285E                     u2660:
  7719  00285E  0900               	iorlw	0
  7720  002860  A4D8               	btfss	status,2,c
  7721  002862  EF35  F014         	goto	u2671
  7722  002866  EF37  F014         	goto	u2670
  7723  00286A                     u2671:
  7724  00286A  EF0B  F014         	goto	l3046
  7725  00286E                     u2670:
  7726  00286E  0012               	return		;funcret
  7727  002870                     __end_of_Lcd_Out:
  7728                           	callstack 0
  7729                           
  7730 ;; *************** function _Lcd_Cmd *****************
  7731 ;; Defined at:
  7732 ;;		line 175 in file "flex_lcd.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  data            1    wreg     unsigned char 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  data            1    5[COMRAM] unsigned char 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1    wreg      void 
  7739 ;; Registers used:
  7740 ;;		wreg, status,2, status,0
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7746 ;;      Params:         0       0       0       0       0       0       0       0       0
  7747 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7748 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7749 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7750 ;;Total ram usage:        3 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; Hardware stack levels required when called:    2
  7753 ;; This function calls:
  7754 ;;		Nothing
  7755 ;; This function is called by:
  7756 ;;		_Lcd_Init
  7757 ;;		_Lcd_Out
  7758 ;;		_appLCD_Init
  7759 ;;		_appGetElements
  7760 ;;		_warning
  7761 ;;		_Lcd_Out2
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text45
  7766  002476                     __ptext45:
  7767                           	callstack 0
  7768  002476                     _Lcd_Cmd:
  7769                           	callstack 26
  7770                           
  7771                           ;incstack = 0
  7772                           ;Lcd_Cmd@data stored from wreg
  7773  002476  6E06               	movwf	Lcd_Cmd@data^0,c
  7774  002478                     
  7775                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  7776  002478  968C               	bcf	140,3,c	;volatile
  7777  00247A  948C               	bcf	140,2,c	;volatile
  7778  00247C                     
  7779                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  7780  00247C  6A04               	clrf	??_Lcd_Cmd^0,c
  7781  00247E  AE06               	btfss	Lcd_Cmd@data^0,7,c
  7782  002480  D001               	bra	u2495
  7783  002482  2A04               	incf	??_Lcd_Cmd^0,f,c
  7784  002484                     u2495:
  7785  002484  0E01               	movlw	1
  7786  002486  1604               	andwf	??_Lcd_Cmd^0,f,c
  7787  002488  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7788  00248A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7789  00248C  508C               	movf	140,w,c	;volatile
  7790  00248E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7791  002490  0B7F               	andlw	-129
  7792  002492  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7793  002494  6E8C               	movwf	140,c	;volatile
  7794                           
  7795                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  7796  002496  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7797  00249A  0E06               	movlw	6
  7798  00249C  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7799  00249E                     u2505:
  7800  00249E  90D8               	bcf	status,0,c
  7801  0024A0  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7802  0024A2  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7803  0024A4  EF4F  F012         	goto	u2505
  7804  0024A8  0E01               	movlw	1
  7805  0024AA  1604               	andwf	??_Lcd_Cmd^0,f,c
  7806  0024AC  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7807  0024AE  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7808  0024B0  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7809  0024B2  508C               	movf	140,w,c	;volatile
  7810  0024B4  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7811  0024B6  0BBF               	andlw	-65
  7812  0024B8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7813  0024BA  6E8C               	movwf	140,c	;volatile
  7814                           
  7815                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  7816  0024BC  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7817  0024C0  0E05               	movlw	5
  7818  0024C2  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7819  0024C4                     u2515:
  7820  0024C4  90D8               	bcf	status,0,c
  7821  0024C6  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7822  0024C8  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7823  0024CA  EF62  F012         	goto	u2515
  7824  0024CE  0E01               	movlw	1
  7825  0024D0  1604               	andwf	??_Lcd_Cmd^0,f,c
  7826  0024D2  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7827  0024D4  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7828  0024D6  508C               	movf	140,w,c	;volatile
  7829  0024D8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7830  0024DA  0BDF               	andlw	-33
  7831  0024DC  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7832  0024DE  6E8C               	movwf	140,c	;volatile
  7833                           
  7834                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  7835  0024E0  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7836  0024E4  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7837  0024E6  0E0F               	movlw	15
  7838  0024E8  1604               	andwf	??_Lcd_Cmd^0,f,c
  7839  0024EA  0E01               	movlw	1
  7840  0024EC  1604               	andwf	??_Lcd_Cmd^0,f,c
  7841  0024EE  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7842  0024F0  508C               	movf	140,w,c	;volatile
  7843  0024F2  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7844  0024F4  0BEF               	andlw	-17
  7845  0024F6  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7846  0024F8  6E8C               	movwf	140,c	;volatile
  7847  0024FA                     
  7848                           ;flex_lcd.c: 182:     _delay(10);
  7849  0024FA  0E03               	movlw	3
  7850  0024FC                     u4567:
  7851  0024FC  2EE8               	decfsz	wreg,f,c
  7852  0024FE  D7FE               	bra	u4567
  7853  002500  F000               	nop	
  7854  002502                     
  7855                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  7856  002502  868C               	bsf	140,3,c	;volatile
  7857  002504                     
  7858                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7859  002504  0E05               	movlw	5
  7860  002506                     u4577:
  7861  002506  2EE8               	decfsz	wreg,f,c
  7862  002508  D7FE               	bra	u4577
  7863  00250A                     
  7864                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  7865  00250A  968C               	bcf	140,3,c	;volatile
  7866                           
  7867                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  7868  00250C  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7869  002510  90D8               	bcf	status,0,c
  7870  002512  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7871  002514  90D8               	bcf	status,0,c
  7872  002516  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7873  002518  90D8               	bcf	status,0,c
  7874  00251A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7875  00251C  0E01               	movlw	1
  7876  00251E  1604               	andwf	??_Lcd_Cmd^0,f,c
  7877  002520  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7878  002522  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7879  002524  508C               	movf	140,w,c	;volatile
  7880  002526  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7881  002528  0B7F               	andlw	-129
  7882  00252A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7883  00252C  6E8C               	movwf	140,c	;volatile
  7884                           
  7885                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  7886  00252E  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7887  002532  90D8               	bcf	status,0,c
  7888  002534  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7889  002536  90D8               	bcf	status,0,c
  7890  002538  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7891  00253A  0E01               	movlw	1
  7892  00253C  1604               	andwf	??_Lcd_Cmd^0,f,c
  7893  00253E  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7894  002540  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7895  002542  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7896  002544  508C               	movf	140,w,c	;volatile
  7897  002546  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7898  002548  0BBF               	andlw	-65
  7899  00254A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7900  00254C  6E8C               	movwf	140,c	;volatile
  7901                           
  7902                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  7903  00254E  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7904  002552  90D8               	bcf	status,0,c
  7905  002554  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7906  002556  0E01               	movlw	1
  7907  002558  1604               	andwf	??_Lcd_Cmd^0,f,c
  7908  00255A  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7909  00255C  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7910  00255E  508C               	movf	140,w,c	;volatile
  7911  002560  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7912  002562  0BDF               	andlw	-33
  7913  002564  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7914  002566  6E8C               	movwf	140,c	;volatile
  7915                           
  7916                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  7917  002568  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7918  00256C  0E01               	movlw	1
  7919  00256E  1604               	andwf	??_Lcd_Cmd^0,f,c
  7920  002570  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7921  002572  508C               	movf	140,w,c	;volatile
  7922  002574  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7923  002576  0BEF               	andlw	-17
  7924  002578  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7925  00257A  6E8C               	movwf	140,c	;volatile
  7926  00257C                     
  7927                           ;flex_lcd.c: 190:     _delay(10);
  7928  00257C  0E03               	movlw	3
  7929  00257E                     u4587:
  7930  00257E  2EE8               	decfsz	wreg,f,c
  7931  002580  D7FE               	bra	u4587
  7932  002582  F000               	nop	
  7933  002584                     
  7934                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  7935  002584  868C               	bsf	140,3,c	;volatile
  7936  002586                     
  7937                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7938  002586  0E05               	movlw	5
  7939  002588                     u4597:
  7940  002588  2EE8               	decfsz	wreg,f,c
  7941  00258A  D7FE               	bra	u4597
  7942  00258C                     
  7943                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  7944  00258C  968C               	bcf	140,3,c	;volatile
  7945  00258E                     
  7946                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7947  00258E  0E16               	movlw	22
  7948  002590  6E04               	movwf	??_Lcd_Cmd^0,c
  7949  002592  0E6C               	movlw	108
  7950  002594                     u4607:
  7951  002594  2EE8               	decfsz	wreg,f,c
  7952  002596  D7FE               	bra	u4607
  7953  002598  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  7954  00259A  D7FC               	bra	u4607
  7955  00259C  D000               	nop2	
  7956  00259E  0012               	return		;funcret
  7957  0025A0                     __end_of_Lcd_Cmd:
  7958                           	callstack 0
  7959                           
  7960 ;; *************** function _Lcd_Chr_CP *****************
  7961 ;; Defined at:
  7962 ;;		line 151 in file "flex_lcd.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  data            1    wreg     char 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  data            1    5[COMRAM] char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		wreg, status,2, status,0
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7976 ;;      Params:         0       0       0       0       0       0       0       0       0
  7977 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7978 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7979 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7980 ;;Total ram usage:        3 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    2
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_Lcd_Out
  7987 ;;		_Lcd_Out2
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           	psect	text46
  7992  0021E4                     __ptext46:
  7993                           	callstack 0
  7994  0021E4                     _Lcd_Chr_CP:
  7995                           	callstack 26
  7996                           
  7997                           ;incstack = 0
  7998                           ;Lcd_Chr_CP@data stored from wreg
  7999  0021E4  6E06               	movwf	Lcd_Chr_CP@data^0,c
  8000  0021E6                     
  8001                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  8002  0021E6  968C               	bcf	140,3,c	;volatile
  8003                           
  8004                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  8005  0021E8  848C               	bsf	140,2,c	;volatile
  8006  0021EA                     
  8007                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  8008  0021EA  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8009  0021EE  0E07               	movlw	7
  8010  0021F0  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8011  0021F2                     u2525:
  8012  0021F2  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8013  0021F4  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8014  0021F6  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8015  0021F8  EFF9  F010         	goto	u2525
  8016  0021FC  0E01               	movlw	1
  8017  0021FE  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8018  002200  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8019  002202  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8020  002204  508C               	movf	140,w,c	;volatile
  8021  002206  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8022  002208  0B7F               	andlw	-129
  8023  00220A  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8024  00220C  6E8C               	movwf	140,c	;volatile
  8025                           
  8026                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  8027  00220E  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8028  002212  0E06               	movlw	6
  8029  002214  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8030  002216                     u2535:
  8031  002216  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8032  002218  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8033  00221A  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8034  00221C  EF0B  F011         	goto	u2535
  8035  002220  0E01               	movlw	1
  8036  002222  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8037  002224  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8038  002226  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8039  002228  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8040  00222A  508C               	movf	140,w,c	;volatile
  8041  00222C  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8042  00222E  0BBF               	andlw	-65
  8043  002230  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8044  002232  6E8C               	movwf	140,c	;volatile
  8045                           
  8046                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  8047  002234  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8048  002238  0E05               	movlw	5
  8049  00223A  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8050  00223C                     u2545:
  8051  00223C  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8052  00223E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8053  002240  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8054  002242  EF1E  F011         	goto	u2545
  8055  002246  0E01               	movlw	1
  8056  002248  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8057  00224A  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8058  00224C  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8059  00224E  508C               	movf	140,w,c	;volatile
  8060  002250  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8061  002252  0BDF               	andlw	-33
  8062  002254  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8063  002256  6E8C               	movwf	140,c	;volatile
  8064                           
  8065                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  8066  002258  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8067  00225C  0E04               	movlw	4
  8068  00225E  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8069  002260                     u2555:
  8070  002260  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8071  002262  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8072  002264  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8073  002266  EF30  F011         	goto	u2555
  8074  00226A  0E01               	movlw	1
  8075  00226C  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8076  00226E  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8077  002270  508C               	movf	140,w,c	;volatile
  8078  002272  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8079  002274  0BEF               	andlw	-17
  8080  002276  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8081  002278  6E8C               	movwf	140,c	;volatile
  8082  00227A                     
  8083                           ;flex_lcd.c: 159:     _delay(10);
  8084  00227A  0E03               	movlw	3
  8085  00227C                     u4617:
  8086  00227C  2EE8               	decfsz	wreg,f,c
  8087  00227E  D7FE               	bra	u4617
  8088  002280  F000               	nop	
  8089  002282                     
  8090                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  8091  002282  868C               	bsf	140,3,c	;volatile
  8092  002284                     
  8093                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8094  002284  0E05               	movlw	5
  8095  002286                     u4627:
  8096  002286  2EE8               	decfsz	wreg,f,c
  8097  002288  D7FE               	bra	u4627
  8098  00228A                     
  8099                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  8100  00228A  968C               	bcf	140,3,c	;volatile
  8101                           
  8102                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  8103  00228C  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8104  002290  0E03               	movlw	3
  8105  002292  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8106  002294                     u2565:
  8107  002294  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8108  002296  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8109  002298  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8110  00229A  EF4A  F011         	goto	u2565
  8111  00229E  0E01               	movlw	1
  8112  0022A0  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8113  0022A2  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8114  0022A4  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8115  0022A6  508C               	movf	140,w,c	;volatile
  8116  0022A8  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8117  0022AA  0B7F               	andlw	-129
  8118  0022AC  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8119  0022AE  6E8C               	movwf	140,c	;volatile
  8120                           
  8121                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  8122  0022B0  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8123  0022B4  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8124  0022B6  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8125  0022B8  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8126  0022BA  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8127  0022BC  0E01               	movlw	1
  8128  0022BE  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8129  0022C0  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8130  0022C2  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8131  0022C4  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8132  0022C6  508C               	movf	140,w,c	;volatile
  8133  0022C8  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8134  0022CA  0BBF               	andlw	-65
  8135  0022CC  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8136  0022CE  6E8C               	movwf	140,c	;volatile
  8137                           
  8138                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  8139  0022D0  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8140  0022D4  0E01               	movlw	1
  8141  0022D6  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8142  0022D8                     u2575:
  8143  0022D8  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8144  0022DA  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8145  0022DC  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8146  0022DE  EF6C  F011         	goto	u2575
  8147  0022E2  0E01               	movlw	1
  8148  0022E4  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8149  0022E6  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8150  0022E8  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8151  0022EA  508C               	movf	140,w,c	;volatile
  8152  0022EC  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8153  0022EE  0BDF               	andlw	-33
  8154  0022F0  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8155  0022F2  6E8C               	movwf	140,c	;volatile
  8156                           
  8157                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  8158  0022F4  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8159  0022F8  0E01               	movlw	1
  8160  0022FA  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8161  0022FC  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8162  0022FE  508C               	movf	140,w,c	;volatile
  8163  002300  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8164  002302  0BEF               	andlw	-17
  8165  002304  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8166  002306  6E8C               	movwf	140,c	;volatile
  8167  002308                     
  8168                           ;flex_lcd.c: 167:     _delay(10);
  8169  002308  0E03               	movlw	3
  8170  00230A                     u4637:
  8171  00230A  2EE8               	decfsz	wreg,f,c
  8172  00230C  D7FE               	bra	u4637
  8173  00230E  F000               	nop	
  8174  002310                     
  8175                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  8176  002310  868C               	bsf	140,3,c	;volatile
  8177  002312                     
  8178                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8179  002312  0E05               	movlw	5
  8180  002314                     u4647:
  8181  002314  2EE8               	decfsz	wreg,f,c
  8182  002316  D7FE               	bra	u4647
  8183  002318                     
  8184                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  8185  002318  968C               	bcf	140,3,c	;volatile
  8186  00231A                     
  8187                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8188  00231A  0E05               	movlw	5
  8189  00231C                     u4657:
  8190  00231C  2EE8               	decfsz	wreg,f,c
  8191  00231E  D7FE               	bra	u4657
  8192  002320                     
  8193                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8194  002320  0E16               	movlw	22
  8195  002322  6E04               	movwf	??_Lcd_Chr_CP^0,c
  8196  002324  0E6C               	movlw	108
  8197  002326                     u4667:
  8198  002326  2EE8               	decfsz	wreg,f,c
  8199  002328  D7FE               	bra	u4667
  8200  00232A  2E04               	decfsz	??_Lcd_Chr_CP^0,f,c
  8201  00232C  D7FC               	bra	u4667
  8202  00232E  D000               	nop2	
  8203  002330  0012               	return		;funcret
  8204  002332                     __end_of_Lcd_Chr_CP:
  8205                           	callstack 0
  8206                           
  8207 ;; *************** function _isrL *****************
  8208 ;; Defined at:
  8209 ;;		line 98 in file "app.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0
  8224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8225 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8226 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8227 ;;Total ram usage:        3 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; Hardware stack levels required when called:    1
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		Interrupt level 1
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	intcodelo
  8238  000018                     __pintcodelo:
  8239                           	callstack 0
  8240  000018                     _isrL:
  8241                           	callstack 19
  8242                           
  8243                           ;incstack = 0
  8244  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8245  00001A  CFD8 F001          	movff	status,??_isrL
  8246  00001E  CFE8 F002          	movff	wreg,??_isrL+1
  8247  000022  CFE0 F003          	movff	bsr,??_isrL+2
  8248  000026                     
  8249                           ;app.c: 100:     if(TMR3IE && TMR3IF)
  8250  000026  A2A0               	btfss	4000,1,c	;volatile
  8251  000028  EF18  F000         	goto	i1u438_21
  8252  00002C  EF1A  F000         	goto	i1u438_20
  8253  000030                     i1u438_21:
  8254  000030  EF4D  F000         	goto	i1l316
  8255  000034                     i1u438_20:
  8256  000034  A2A1               	btfss	4001,1,c	;volatile
  8257  000036  EF1F  F000         	goto	i1u439_21
  8258  00003A  EF21  F000         	goto	i1u439_20
  8259  00003E                     i1u439_21:
  8260  00003E  EF4D  F000         	goto	i1l316
  8261  000042                     i1u439_20:
  8262  000042                     
  8263                           ;app.c: 101:     {;app.c: 102:         TMR3IF = 0;
  8264  000042  92A1               	bcf	4001,1,c	;volatile
  8265  000044                     
  8266                           ;app.c: 103:         datos.counter++;
  8267  000044  0100               	movlb	0	; () banked
  8268  000046  2BB8               	incf	_datos& (0+255),f,b
  8269  000048                     
  8270                           ; BSR set to: 0
  8271                           ;app.c: 104:         if((datos.counter == 10) && (datos.state == 0))
  8272  000048  0E0A               	movlw	10
  8273  00004A  19B8               	xorwf	_datos& (0+255),w,b
  8274  00004C  A4D8               	btfss	status,2,c
  8275  00004E  EF2B  F000         	goto	i1u440_21
  8276  000052  EF2D  F000         	goto	i1u440_20
  8277  000056                     i1u440_21:
  8278  000056  EF3D  F000         	goto	i1l4384
  8279  00005A                     i1u440_20:
  8280  00005A                     
  8281                           ; BSR set to: 0
  8282  00005A  51BB               	movf	(_datos+3)& (0+255),w,b
  8283  00005C  A4D8               	btfss	status,2,c
  8284  00005E  EF33  F000         	goto	i1u441_21
  8285  000062  EF35  F000         	goto	i1u441_20
  8286  000066                     i1u441_21:
  8287  000066  EF3D  F000         	goto	i1l4384
  8288  00006A                     i1u441_20:
  8289  00006A                     
  8290                           ; BSR set to: 0
  8291                           ;app.c: 105:         {;app.c: 106:             datos.counter = 0;
  8292  00006A  0E00               	movlw	0
  8293  00006C  6FB8               	movwf	_datos& (0+255),b
  8294  00006E                     
  8295                           ; BSR set to: 0
  8296                           ;app.c: 107:             datos.nextFunc = appStateRecolectData;
  8297  00006E  0EE8               	movlw	low _appStateRecolectData
  8298  000070  6FCF               	movwf	(_datos+23)& (0+255),b
  8299  000072  0E2F               	movlw	high _appStateRecolectData
  8300  000074  6FD0               	movwf	(_datos+24)& (0+255),b
  8301                           
  8302                           ;app.c: 108:         }
  8303  000076  EF49  F000         	goto	i1l4388
  8304  00007A                     i1l4384:
  8305                           
  8306                           ; BSR set to: 0
  8307  00007A  05BB               	decf	(_datos+3)& (0+255),w,b
  8308  00007C  A4D8               	btfss	status,2,c
  8309  00007E  EF43  F000         	goto	i1u442_21
  8310  000082  EF45  F000         	goto	i1u442_20
  8311  000086                     i1u442_21:
  8312  000086  EF49  F000         	goto	i1l4388
  8313  00008A                     i1u442_20:
  8314  00008A                     
  8315                           ; BSR set to: 0
  8316                           ;app.c: 110:         {;app.c: 111:             datos.nextFunc = appGetElements;
  8317  00008A  0E62               	movlw	low _appGetElements
  8318  00008C  6FCF               	movwf	(_datos+23)& (0+255),b
  8319  00008E  0E2C               	movlw	high _appGetElements
  8320  000090  6FD0               	movwf	(_datos+24)& (0+255),b
  8321  000092                     i1l4388:
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;app.c: 113:         TMR3 = 20536;
  8325  000092  0E50               	movlw	80
  8326  000094  6EB3               	movwf	179,c	;volatile
  8327  000096  0E38               	movlw	56
  8328  000098  6EB2               	movwf	178,c	;volatile
  8329  00009A                     i1l316:
  8330  00009A  C003  FFE0         	movff	??_isrL+2,bsr
  8331  00009E  C002  FFE8         	movff	??_isrL+1,wreg
  8332  0000A2  C001  FFD8         	movff	??_isrL,status
  8333  0000A6  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8334  0000A8  0010               	retfie	
  8335  0000AA                     __end_of_isrL:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function _isrH *****************
  8339 ;; Defined at:
  8340 ;;		line 116 in file "app.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;		None
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;		None
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      void 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8354 ;;      Params:         0       0       0       0       0       0       0       0       0
  8355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8358 ;;Total ram usage:        0 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		Interrupt level 2
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           	psect	intcode
  8368  000008                     __pintcode:
  8369                           	callstack 0
  8370  000008                     _isrH:
  8371                           	callstack 19
  8372                           
  8373                           ;incstack = 0
  8374  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8375  00000A  ED2A  F018         	call	int_func,f	;refresh shadow registers
  8376  00000E                     
  8377                           	psect	intcode_body
  8378  003054                     __pintcode_body:
  8379                           	callstack 19
  8380  003054                     int_func:
  8381                           	callstack 19
  8382  003054  0006               	pop		; remove dummy address from shadow register refresh
  8383  003056                     
  8384                           ;app.c: 118:     if(TMR0IE && TMR0IF)
  8385  003056  AAF2               	btfss	4082,5,c	;volatile
  8386  003058  EF30  F018         	goto	i2u367_41
  8387  00305C  EF32  F018         	goto	i2u367_40
  8388  003060                     i2u367_41:
  8389  003060  EF41  F018         	goto	i2l322
  8390  003064                     i2u367_40:
  8391  003064  A4F2               	btfss	4082,2,c	;volatile
  8392  003066  EF37  F018         	goto	i2u368_41
  8393  00306A  EF39  F018         	goto	i2u368_40
  8394  00306E                     i2u368_41:
  8395  00306E  EF41  F018         	goto	i2l322
  8396  003072                     i2u368_40:
  8397  003072                     
  8398                           ;app.c: 119:     {;app.c: 120:         TMR0IF = 0;
  8399  003072  94F2               	bcf	4082,2,c	;volatile
  8400  003074                     
  8401                           ;app.c: 121:         datos.state = 10;
  8402  003074  0E0A               	movlw	10
  8403  003076  0100               	movlb	0	; () banked
  8404  003078  6FBB               	movwf	(_datos+3)& (0+255),b
  8405  00307A                     
  8406                           ; BSR set to: 0
  8407                           ;app.c: 122:         datos.nextFunc = warning;
  8408  00307A  0ED8               	movlw	low _warning
  8409  00307C  6FCF               	movwf	(_datos+23)& (0+255),b
  8410  00307E  0E2D               	movlw	high _warning
  8411  003080  6FD0               	movwf	(_datos+24)& (0+255),b
  8412  003082                     i2l322:
  8413  003082  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8414  003084  0011               	retfie		f
  8415  003086                     __end_of_isrH:
  8416                           	callstack 0
  8417                           
  8418                           	psect	rparam
  8419  0000                     
  8420                           	psect	temp
  8421  00005C                     btemp:
  8422                           	callstack 0
  8423  00005C                     	ds	1
  8424  0000                     int$flags	set	btemp
  8425  0000                     wtemp8	set	btemp+1
  8426  0000                     ttemp5	set	btemp+1
  8427  0000                     ttemp6	set	btemp+4
  8428  0000                     ttemp7	set	btemp+8
  8429                           
  8430                           	psect	idloc
  8431                           
  8432                           ;Config register IDLOC0 @ 0x200000
  8433                           ;	unspecified, using default values
  8434  200000                     	org	2097152
  8435  200000  FF                 	db	255
  8436                           
  8437                           ;Config register IDLOC1 @ 0x200001
  8438                           ;	unspecified, using default values
  8439  200001                     	org	2097153
  8440  200001  FF                 	db	255
  8441                           
  8442                           ;Config register IDLOC2 @ 0x200002
  8443                           ;	unspecified, using default values
  8444  200002                     	org	2097154
  8445  200002  FF                 	db	255
  8446                           
  8447                           ;Config register IDLOC3 @ 0x200003
  8448                           ;	unspecified, using default values
  8449  200003                     	org	2097155
  8450  200003  FF                 	db	255
  8451                           
  8452                           ;Config register IDLOC4 @ 0x200004
  8453                           ;	unspecified, using default values
  8454  200004                     	org	2097156
  8455  200004  FF                 	db	255
  8456                           
  8457                           ;Config register IDLOC5 @ 0x200005
  8458                           ;	unspecified, using default values
  8459  200005                     	org	2097157
  8460  200005  FF                 	db	255
  8461                           
  8462                           ;Config register IDLOC6 @ 0x200006
  8463                           ;	unspecified, using default values
  8464  200006                     	org	2097158
  8465  200006  FF                 	db	255
  8466                           
  8467                           ;Config register IDLOC7 @ 0x200007
  8468                           ;	unspecified, using default values
  8469  200007                     	org	2097159
  8470  200007  FF                 	db	255
  8471                           
  8472                           	psect	config
  8473                           
  8474                           ;Config register CONFIG1L @ 0x300000
  8475                           ;	PLL Prescaler Selection bits
  8476                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8477                           ;	System Clock Postscaler Selection bits
  8478                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8479                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8480                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8481  300000                     	org	3145728
  8482  300000  00                 	db	0
  8483                           
  8484                           ;Config register CONFIG1H @ 0x300001
  8485                           ;	Oscillator Selection bits
  8486                           ;	FOSC = HS, HS oscillator (HS)
  8487                           ;	Fail-Safe Clock Monitor Enable bit
  8488                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8489                           ;	Internal/External Oscillator Switchover bit
  8490                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8491  300001                     	org	3145729
  8492  300001  0C                 	db	12
  8493                           
  8494                           ;Config register CONFIG2L @ 0x300002
  8495                           ;	Power-up Timer Enable bit
  8496                           ;	PWRT = OFF, PWRT disabled
  8497                           ;	Brown-out Reset Enable bits
  8498                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8499                           ;	Brown-out Reset Voltage bits
  8500                           ;	BORV = 3, Minimum setting 2.05V
  8501                           ;	USB Voltage Regulator Enable bit
  8502                           ;	VREGEN = OFF, USB voltage regulator disabled
  8503  300002                     	org	3145730
  8504  300002  19                 	db	25
  8505                           
  8506                           ;Config register CONFIG2H @ 0x300003
  8507                           ;	Watchdog Timer Enable bit
  8508                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8509                           ;	Watchdog Timer Postscale Select bits
  8510                           ;	WDTPS = 32768, 1:32768
  8511  300003                     	org	3145731
  8512  300003  1E                 	db	30
  8513                           
  8514                           ; Padding undefined space
  8515  300004                     	org	3145732
  8516  300004  FF                 	db	255
  8517                           
  8518                           ;Config register CONFIG3H @ 0x300005
  8519                           ;	CCP2 MUX bit
  8520                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8521                           ;	PORTB A/D Enable bit
  8522                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8523                           ;	Low-Power Timer 1 Oscillator Enable bit
  8524                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8525                           ;	MCLR Pin Enable bit
  8526                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8527  300005                     	org	3145733
  8528  300005  81                 	db	129
  8529                           
  8530                           ;Config register CONFIG4L @ 0x300006
  8531                           ;	Stack Full/Underflow Reset Enable bit
  8532                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8533                           ;	Single-Supply ICSP Enable bit
  8534                           ;	LVP = OFF, Single-Supply ICSP disabled
  8535                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8536                           ;	ICPRT = OFF, ICPORT disabled
  8537                           ;	Extended Instruction Set Enable bit
  8538                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8539                           ;	Background Debugger Enable bit
  8540                           ;	DEBUG = 0x1, unprogrammed default
  8541  300006                     	org	3145734
  8542  300006  81                 	db	129
  8543                           
  8544                           ; Padding undefined space
  8545  300007                     	org	3145735
  8546  300007  FF                 	db	255
  8547                           
  8548                           ;Config register CONFIG5L @ 0x300008
  8549                           ;	Code Protection bit
  8550                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8551                           ;	Code Protection bit
  8552                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8553                           ;	Code Protection bit
  8554                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8555                           ;	Code Protection bit
  8556                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8557  300008                     	org	3145736
  8558  300008  0F                 	db	15
  8559                           
  8560                           ;Config register CONFIG5H @ 0x300009
  8561                           ;	Boot Block Code Protection bit
  8562                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8563                           ;	Data EEPROM Code Protection bit
  8564                           ;	CPD = OFF, Data EEPROM is not code-protected
  8565  300009                     	org	3145737
  8566  300009  C0                 	db	192
  8567                           
  8568                           ;Config register CONFIG6L @ 0x30000A
  8569                           ;	Write Protection bit
  8570                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8571                           ;	Write Protection bit
  8572                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8573                           ;	Write Protection bit
  8574                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8575                           ;	Write Protection bit
  8576                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8577  30000A                     	org	3145738
  8578  30000A  0F                 	db	15
  8579                           
  8580                           ;Config register CONFIG6H @ 0x30000B
  8581                           ;	Configuration Register Write Protection bit
  8582                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8583                           ;	Boot Block Write Protection bit
  8584                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8585                           ;	Data EEPROM Write Protection bit
  8586                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8587  30000B                     	org	3145739
  8588  30000B  E0                 	db	224
  8589                           
  8590                           ;Config register CONFIG7L @ 0x30000C
  8591                           ;	Table Read Protection bit
  8592                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8593                           ;	Table Read Protection bit
  8594                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8595                           ;	Table Read Protection bit
  8596                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8597                           ;	Table Read Protection bit
  8598                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8599  30000C                     	org	3145740
  8600  30000C  0F                 	db	15
  8601                           
  8602                           ;Config register CONFIG7H @ 0x30000D
  8603                           ;	Boot Block Table Read Protection bit
  8604                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8605  30000D                     	org	3145741
  8606  30000D  40                 	db	64
  8607                           tosu	equ	0xFFF
  8608                           tosh	equ	0xFFE
  8609                           tosl	equ	0xFFD
  8610                           stkptr	equ	0xFFC
  8611                           pclatu	equ	0xFFB
  8612                           pclath	equ	0xFFA
  8613                           pcl	equ	0xFF9
  8614                           tblptru	equ	0xFF8
  8615                           tblptrh	equ	0xFF7
  8616                           tblptrl	equ	0xFF6
  8617                           tablat	equ	0xFF5
  8618                           prodh	equ	0xFF4
  8619                           prodl	equ	0xFF3
  8620                           indf0	equ	0xFEF
  8621                           postinc0	equ	0xFEE
  8622                           postdec0	equ	0xFED
  8623                           preinc0	equ	0xFEC
  8624                           plusw0	equ	0xFEB
  8625                           fsr0h	equ	0xFEA
  8626                           fsr0l	equ	0xFE9
  8627                           wreg	equ	0xFE8
  8628                           indf1	equ	0xFE7
  8629                           postinc1	equ	0xFE6
  8630                           postdec1	equ	0xFE5
  8631                           preinc1	equ	0xFE4
  8632                           plusw1	equ	0xFE3
  8633                           fsr1h	equ	0xFE2
  8634                           fsr1l	equ	0xFE1
  8635                           bsr	equ	0xFE0
  8636                           indf2	equ	0xFDF
  8637                           postinc2	equ	0xFDE
  8638                           postdec2	equ	0xFDD
  8639                           preinc2	equ	0xFDC
  8640                           plusw2	equ	0xFDB
  8641                           fsr2h	equ	0xFDA
  8642                           fsr2l	equ	0xFD9
  8643                           status	equ	0xFD8

Data Sizes:
    Strings     91
    Constant    0
    Data        25
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      91
    BANK0           160     46     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    appSubGiveElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1766_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@elements	PTR const short  size(2) Largest target is 25
		 -> datos.elements(BANK0[2]), datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_9(CODE[19]), STR_8(CODE[12]), STR_6(CODE[14]), appElemts@dataout(BANK0[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[12]), datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    S164_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _warning->_Lcd_Out
    _appADC->___awmod
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_teclado
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _sprintf->___awmod
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appBat
    _appStateRecolectData->_appElemts
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   76186
                                             44 BANK0      2     2      0
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
                            _warning *
 ---------------------------------------------------------------------------------
 (1) _warning                                              2     2      0    2077
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   54129
                             _appADC
                             _appBat
                          _appElemts
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            8     6      2   13678
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   20062
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20389
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                              7 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     479
                                             71 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             46 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             81 COMRAM     6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0     526
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    2534
                            _adcInit
                     _appCounterInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2392
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              6 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appCounterInit                                       2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   16920
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                   _appSubGiveElemts
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGiveElemts                                     2     0      2      76
                                              3 COMRAM     2     0      2
                    _appCounterStart
 ---------------------------------------------------------------------------------
 (3) _appCounterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   16668
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   11573
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   10541
                                             76 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   10011
                                             66 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1795
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     692
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1403
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    1901
                                              6 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appSubGiveElemts
       _appCounterStart
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appCounterInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
   _appStateInitial *
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
   _warning *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      20        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon May 31 00:15:42 2021

                 ___fldiv@aexp 0047                   ___fldiv@bexp 0046                   ___fldiv@sign 003F  
                           l23 2E66                             l32 2474                             l26 2F98  
                           l35 1A3C                             l28 2FA6                             l29 2FAE  
                           l86 1854                             l99 2A1C                             bsr 000FE0  
          ___wmul@multiplicand 0006                            l100 2A68                            l101 2ABA  
                          l130 2330                            l114 286E                            l202 3150  
                          l211 3166                            l133 259E                            l205 3162  
                          l208 3144                            l136 2BEE                            l307 315E  
                          l219 2EAC                            l325 30F8                            l281 301C  
                          l291 3158                            l452 21E2                            l285 30AC  
                          l278 311C                            l622 26A4                            l439 1F08  
                          l199 30D2                            l288 2CD0                            l298 27A2  
                          l920 0F3E                            l912 0E44                            l569 2B6A  
                          l921 0F2C                            l907 1020                            l909 0E80  
                          l918 0EC6                            l943 0C86                            l946 0B18  
                          l939 0922                            l956 0C48                            l948 0B90  
                          l980 1A94                            l949 0B7E                            l983 1BF0  
                          l994 1B88                            l987 1B2C                adcInit@ADC_PINs 0005  
                          _PR2 000FCB                            _abs 2F34                            _pad 293A  
                 ___awmod@sign 0057                            tosl 000FFD                            wreg 000FE8  
                 ___flmul@aexp 0027                   ___flmul@bexp 0028                   ___flmul@sign 0022  
                 ___flmul@temp 002D                   ___flmul@prod 0029                   ___fltol@exp1 0051  
                         l1000 207E                           l1013 2D84                           l1110 2D2A  
                         l1111 2D32                           l1104 138C                           l1115 2F6A  
                         ?_abs 0016                           l1044 297E                           l1118 2F72  
                         l1047 29C0                           l1055 142C                           l1152 2FE6  
                         l1160 2DD6                           l1049 29FA                           l1057 1434  
                         l3010 2056                           l3002 1FDC                           l1146 1D78  
                         l1075 166A                           l3012 2062                           l3004 2008  
                         l3100 176A                           l1149 1D80                           l3030 27A6  
                         l3014 2068                           l3110 17AC                           l3102 1778  
                         l1175 2938                           l1183 2EF0                           l3032 27AA  
                         l3016 206C                           l3008 2022                           l4000 217A  
                         l1192 3052                           l3120 17E4                           l3112 17B8  
                         l3104 1784                           l3200 0C94                           l1089 1114  
                         l3050 283E                           l3034 27B4                           l3042 27D2  
                         l4002 218C                           l1186 3168                           l3130 1824  
                         l3122 17F0                           l3114 17C6                           l3106 1792  
                         l3210 0CD4                           l3202 0CA2                           l3036 27BE  
                         l3044 280C                           l4004 2192                           l4020 2976  
                         l4012 293A                           l4100 15F8                           l3132 1832  
                         l3124 17FE                           l3116 17D2                           l3108 179E  
                         l3060 167C                           l3140 2A08                           l3300 0F24  
                         l3220 0CFA                           l3212 0CD6                           l3204 0CA4  
                         l3046 2816                           l3038 27C8                           l4006 21A2  
                         l4030 29E2                           l4022 298A                           l4014 2948  
                         l4110 1632                           l4102 1606                           l3126 180A  
                         l3118 17D6                           l3070 16BA                           l3062 168E  
                         l3134 183E                           l3150 2A3A                           l3142 2A18  
                         l3310 0F92                           l3230 0D3A                           l3222 0D08  
                         l3206 0CB4                           l3214 0CDE                           l3048 283A  
                         l4120 1C0A                           l4008 21C2                           l4024 299E  
                         l4016 295C                           l4104 160C                           l4112 1642  
                         l4200 1148                           l3136 1842                           l3128 1818  
                         l3080 16FA                           l3072 16C6                           l3064 1692  
                         l3056 166C                           l3160 2A44                           l3152 2A3C  
                         l3320 0FFC                           l3304 0F4E                           l3312 0F96  
                         l3240 0D7A                           l3232 0D3C                           l3224 0D0A  
                         l3216 0CEE                           l3208 0CC4                           l3400 0A04  
                         l4050 2DD0                           l4042 2D86                           l4122 1C0E  
                         l4034 2F34                           l4026 29A2                           l4018 296A  
                         l4106 161E                           l4210 11C8                           l4202 117E  
                         l3090 1732                           l3082 16FE                           l3074 16D4  
                         l3066 16A0                           l3058 1678                           l3170 2A8A  
                         l3162 2A56                           l3154 2A3E                           l3138 29FC  
                         l3322 1000                           l3314 0FB0                           l3306 0F5A  
                         l3250 0DAA                           l3242 0D82                           l3226 0D1A  
                         l3234 0D44                           l3218 0CF4                           l3410 0A72  
                         l3402 0A1E                           l4044 2D8A                           l4140 1CC4  
                         l4132 1C6A                           l4124 1C2A                           l4116 1BF2  
                         l4036 2F4E                           l4028 29CE                           l4108 162A  
                         l4060 13F6                           l4220 126A                           l4204 118C  
                         l3092 1740                           l3084 170C                           l3076 16E0  
                         l3068 16AC                           l3180 2AA2                           l3172 2A8C  
                         l3164 2A80                           l3156 2A40                           l3148 2A34  
                         l3324 100E                           l3316 0FC6                           l3308 0F68  
                         l3260 0DE8                           l3252 0DAA                           l3244 0D86  
                         l3236 0D54                           l3228 0D2A                           l3420 0B08  
                         l3412 0A9C                           l3404 0A2E                           l3340 0878  
                         l4300 1A24                           l4038 2FB0                           l4046 2D9E  
                         l4150 1D4A                           l4134 1C80                           l4126 1C60  
                         l4118 1C06                           l4070 144E                           l4062 1404  
                         l4054 138E                           l4230 131C                           l4222 12B2  
                         l4214 1210                           l4206 119A                           l3094 174C  
                         l3086 1718                           l3078 16EE                           l4310 26B4  
                         l3190 2AAE                           l3182 2AA2                           l3174 2A8E  
                         l3166 2A86                           l3158 2A42                           l3326 1014  
                         l3318 0FE0                           l3270 0E34                           l3262 0DF8  
                         l3238 0D6A                           l3430 0B48                           l3422 0B16  
                         l3414 0AD2                           l3406 0A4A                           l3350 08B0  
                         l3342 087A                           l3510 25F4                           l3502 25A0  
                         l4302 2E68                           l4048 2DCC                           l4152 1D5C  
                         l4144 1CFA                           l4136 1C88                           l4128 1C64  
                         l4080 147A                           l4072 145C                           l4064 1406  
                         l4056 13AE                           l4232 1330                           l4208 11BA  
                         l4216 1222                           l4160 1046                           l3096 175A  
                         l3088 1726                           l4320 2718                           l4312 26D4  
                         l3600 2E52                           l3192 2AB4                           l3184 2AA8  
                         l3176 2A90                           l3168 2A88                           l3328 1016  
                         l3280 0E7E                           l3272 0E42                           l3264 0E08  
                         l3256 0DBE                           l3248 0D9A                           l3440 0BBA  
                         l3432 0B76                           l3424 0B28                           l3416 0AE0  
                         l3408 0A56                           l3360 08DC                           l3352 08C0  
                         l3344 088A                           l3336 085E                           l3512 25F6  
                         l3504 25B6                           l4304 2E74                           l4138 1C90  
                         l4090 1586                           l4082 14FC                           l4074 1462  
                         l4066 1420                           l4058 13D6                           l4226 12EA  
                         l4218 1246                           l4170 1078                           l4162 1054  
                         l4242 1356                           l3098 1766                           l4322 2742  
                         l4314 26EA                           l3602 2E5A                           l3194 2AB4  
                         l3186 2AA8                           l3178 2AA2                           l3290 0EC4  
                         l3282 0E90                           l3274 0E4E                           l3266 0E10  
                         l3258 0DD8                           l3450 0C30                           l3442 0BE4  
                         l3426 0B36                           l3418 0AFE                           l3370 0932  
                         l3362 08EC                           l3354 08C6                           l3346 089A  
                         l3338 086A                           l3514 2606                           l4306 2E9A  
                         l4330 2FE8                           l4148 1D38                           l4092 15A4  
                         l4084 1502                           l4076 146A                           l4068 143C  
                         l4244 137A                           l4228 130E                           l4236 133C  
                         l4180 1096                           l4172 108A                           l4164 1066  
                         l4260 2CD2                           l4324 2762                           l4316 26F6  
                         l4308 26A6                           l3196 3164                           l3604 2E62  
                         l3188 2AAE                           l3284 0EA6                           l3292 0ED6  
                         l3276 0E6C                           l3268 0E20                           l3452 0C4C  
                         l3460 0C72                           l3436 0BA0                           l3444 0BE8  
                         l3428 0B3A                           l3380 096C                           l3372 0942  
                         l3364 08FC                           l3356 08CC                           l3348 08AA  
                         l3540 2684                           l3524 2630                           l3516 260A  
                         l3508 25CA                           l4332 3012                           l4340 2C72  
                         l4094 15BE                           l4086 1508                           l4078 1474  
                         l4238 134A                           l4166 106A                           l4158 1022  
                         l4262 2CDA                           l4270 2D46                           l4318 2708  
                         l4326 277A                           l3710 315A                           l3606 2E64  
                         l3630 2B6C                           l3470 2ACE                           l3294 0EE4  
                         l3286 0EAC                           l3278 0E6E                           l3198 0C88  
                         l3462 0C76                           l3454 0C5C                           l3446 0C02  
                         l3438 0BAC                           l3390 09BE                           l3382 0982  
                         l3366 090C                           l3358 08DA                           l3542 2694  
                         l3534 2658                           l3526 263A                           l3518 2618  
                         l3550 1A5E                           l4350 2CC2                           l4342 2C8A  
                         l4334 2C62                           l4096 15D8                           l4088 156C  
                         l4192 10AE                           l4184 109C                           l4176 1090  
                         l4168 1076                           l4264 2CE8                           l4272 2D4E  
                         l4328 278E                           l3640 2BD6                           l3632 2B7C  
                         l3720 310C                           l3712 30FA                           l3480 2B02  
                         l3472 2AD6                           l3296 0EE8                           l3288 0EB6  
                         l3456 0C6A                           l3448 0C16                           l3392 09CC  
                         l3384 098E                           l3376 0956                           l3368 0912  
                         l3536 2664                           l3528 2644                           l3560 1AD6  
                         l3552 1AA4                           l4280 2332                           l4352 2CCC  
                         l4344 2C98                           l4336 2C68                           l4360 2BF8  
                         l2930 24FA                           l4098 15E6                           l4194 1102  
                         l4266 2D0E                           l4274 2D56                           l3634 2B94  
                         l3650 30BC                           l3642 30AE                           l3722 3118  
                         l3714 30FE                           l3490 2B3E                           l3482 2B0A  
                         l3474 2ADA                           l3466 2ABC                           l3298 0EF6  
                         l3458 0C6C                           l3394 09D8                           l3386 09A6  
                         l3378 0962                           l3538 2674                           l3570 1B5E  
                         l3562 1AE2                           l3554 1ABA                           l3546 1A40  
                         l4282 2354                           l4290 1856                           l3730 3092  
                         l4346 2C9E                           l4338 2C6C                           l4362 2BFC  
                         l4354 2BF0                           l2940 2584                           l2932 2502  
                         l3900 289E                           l4196 1122                           l4188 10A2  
                         l4276 2D72                           l4268 2D34                           l3636 2BA6  
                         l3660 30C6                           l3652 30BE                           l3644 30B4  
                         l3716 3102                           l3492 2B44                           l3484 2B12  
                         l3476 2AE8                           l3468 2AC0                           l3396 09E8  
                         l3388 09B2                           l3580 1B9C                           l3572 1B6A  
                         l3564 1B14                           l3548 1A50                           l4284 237C  
                         l4292 1894                           l3732 30A4                           l4348 2CB6  
                         l4364 2C24                           l4356 2BF4                           l2950 21EA  
                         l2942 2586                           l2934 2504                           l2926 2478  
                         l3902 28BC                           l3910 2EBA                           l4198 1124  
                         l3638 2BB8                           l3670 30D0                           l3662 30C8  
                         l3654 30C0                           l3646 30B8                           l3718 3108  
                         l3486 2B20                           l3494 2B4A                           l3478 2AF0  
                         l3398 09F4                           l3582 1BC0                           l3574 1B78  
                         l3566 1B16                           l3558 1ACE                           l4286 23D4  
                         l4294 1912                           l4366 2C3C                           l4358 2BF6  
                         ?_pad 0014                           l2960 2308                           l2952 227A  
                         l2944 258C                           l2936 250A                           l2928 247C  
                         l3904 28F2                           l3912 2ECC                           l3920 302E  
                         l4480 10D4                           l3672 3146                           l3592 2E22  
                         l3664 30CA                           l3656 30C2                           l3648 30BA  
                         l3496 2B5A                           l3488 2B36                           l3584 1BD0  
                         l3576 1B96                           l3568 1B22                           l4288 245C  
                         l4296 1960                           l3760 2E08                           l3728 3086  
                         l2970 2320                           l2962 2310                           l2954 2282  
                         l2946 258E                           l2938 257C                           l4482 1CAE  
                         l3914 2ED0                           l3922 3046                           l3674 314E  
                         l3594 2E32                           l3666 30CC                           l3658 30C4  
                         l3498 2B62                           l3586 1BDE                           l3578 1B98  
                         l4298 19F8                           l3754 2DD8                           l2964 2312  
                         l2956 2284                           l2948 21E6                           l4484 27E6  
                         l3940 1DB8                           l3932 1D82                           l3908 2EAE  
                         l3916 301E                           l3676 3160                           l3596 2E3E  
                         l3668 30CE                           l3588 1BE0                           l2980 2F76  
                         l3756 2DDE                           l2966 2318                           l2958 228A  
                         l2990 1F28                           l3926 30D4                           l3950 1E14  
                         l3942 1DC6                           l3934 1D86                           l3918 302A  
                         l3598 2E4E                           l3678 3138                           l3686 3152  
                         l2982 2F88                           l3758 2DF6                           l2968 231A  
                         l2992 1F34                           l3928 30F0                           l3960 1E7E  
                         l3952 1E1C                           l3944 1DE6                           l3936 1D94  
                         l2984 2F96                           l2986 1F0A                           l3970 1EC8  
                         l3962 1E9E                           l3954 1E30                           l3946 1DEA  
                         l3938 1DB4                           l2996 1F6A                           l3972 1EE8  
                         l3964 1EA0                           l3956 1E3E                           l3948 1DF6  
                         l3980 2092                           l2998 1FC2                           l3966 1EB2  
                         l3958 1E50                           l3990 2102                           l3982 20B2  
                         l3894 2870                           l3968 1EB8                           l3992 210A  
                         l3984 20B6                           l3976 2080                           l3896 2882  
                         l3994 211E                           l3986 20C4                           l3978 2084  
                         l3898 2894                           l3996 212C                           l3988 20E4  
                         l3998 215A                           STR_1 0822                           STR_2 0848  
                         STR_3 083C                           STR_4 0851                           STR_5 0857  
                         STR_6 0814                           STR_7 0859                           STR_8 0830  
                         STR_9 0801                           u3000 0EC4                           u3001 0EC0  
                         u3010 0EE4                           u3011 0EE0                           u3020 0EF6  
                         u3100 0878                           u3021 0EF2                           u3101 0874  
                         u3030 0F24                           u3110 088A                           u3031 0F20  
                         u3111 0886                           u4000 1404                           u3040 0F3A  
                         u3200 0B36                           u3120 089A                           u4001 1400  
                         u3041 0F36                           u3201 0B32                           u3121 0896  
                         u4010 1420                           u3050 0F4E                           u3210 0B48  
                         u3130 08DA                           u4011 141C                           u3051 0F4A  
                         u3211 0B44                           u3131 08D6                           u4100 1606  
                         u4020 144E                           u3300 2AE8                           u3060 0F68  
                         u3220 0B76                           u3140 08EC                           u4101 1602  
                         u4021 144A                           u3301 2AE4                           u3061 0F64  
                         u3221 0B72                           u3141 08E8                           u4110 161E  
                         u4030 145C                           u3310 2B02                           u3070 0FB0  
                         u3230 0B8C                           u3150 08FC                           u4111 161A  
                         u4031 1458                           u3311 2AFE                           u3071 0FAC  
                         u3231 0B88                           u3151 08F8                           u2600 1F24  
                         u4120 1C2A                           u4040 1586                           u4200 1114  
                         u3320 2B20                           u3080 0FE0                           u3240 0BA0  
                         u3160 0932                           u3400 2674                           u2505 249E  
                         u2601 1F20                           u4121 1C26                           u4041 1582  
                         u4201 1110                           u3321 2B1C                           u3081 0FDC  
                         u3241 0B9C                           u3161 092E                           u3401 2670  
                         u2610 1F66                           u4130 1C60                           u4050 15A4  
                         u4210 1122                           u3330 2B36                           u3090 100E  
                         u3250 0BBA                           u3170 0942                           u3410 2684  
                         u2515 24C4                           u2611 1F62                           u4131 1C5C  
                         u4051 15A0                           u4211 111E                           u3331 2B32  
                         u3091 100A                           u3251 0BB6                           u3171 093E  
                         u3411 2680                           u2620 1FD8                           u4140 1C7C  
                         u4060 15BE                           u4220 1148                           u4300 2D2A  
                         u2700 16BA                           u3340 2B5A                           u3260 0C02  
                         u3180 0ABC                           u3500 1BD0                           u3420 1A50  
                         u2525 21F2                           u2621 1FD4                           u4141 1C78  
                         u4061 15BA                           u4221 1144                           u4301 2D26  
                         u2701 16B6                           u3341 2B56                           u3261 0BFE  
                         u3501 1BCC                           u3421 1A4C                           u2630 201E  
                         u4150 1D32                           u4070 15D8                           u4230 118C  
                         u2710 16D4                           u3270 0C30                           u3190 0B16  
                         u3350 25B6                           u3510 1BDE                           u3430 1A5E  
                         u2535 2216                           u2631 201A                           u4151 1D2C  
                         u4071 15D4                           u4231 1188                           u2711 16D0  
                         u3271 0C2C                           u3191 0B12                           u3351 25B2  
                         u3511 1BDA                           u3431 1A5A                           u4311 2E6E  
                         u2640 207E                           u4160 1D34                           u4080 15E6  
                         u4240 1208                           u2800 17C6                           u2720 16EE  
                         u4320 2708                           u3520 2E32                           u3280 0C6A  
                         u3360 25EA                           u3440 1ABA                           u2545 223C  
                         u2641 207A                           u4081 15E2                           u4241 1202  
                         u2801 17C2                           u2721 16EA                           u4321 2704  
                         u3521 2E2E                           u3281 0C66                           u3185 0AB2  
                         u3441 1AB6                           u2650 2836                           u4170 1D4A  
                         u4090 15F8                           u4250 120A                           u2810 17E4  
                         u2730 170C                           u4330 2718                           u3290 2ACE  
                         u3370 2618                           u3450 1B10                           u2555 2260  
                         u4171 1D46                           u4091 15F4                           u2811 17E0  
                         u2731 1708                           u4331 2714                           u3291 2ACA  
                         u3371 2614                           u3451 1B0C                           u2660 285E  
                         u4180 1D5C                           u3700 2894                           u4260 1222  
                         u2820 17FE                           u2740 1726                           u4340 278E  
                         u2900 0D08                           u3380 262C                           u3460 1B5A  
                         u2565 2294                           u4181 1D58                           u3701 2890  
                         u4261 121E                           u2821 17FA                           u2741 1722  
                         u4341 278A                           u2901 0D04                           u3381 2628  
                         u3365 25E0                           u3461 1B56                           u2670 286E  
                         u3710 28BC                           u4270 1246                           u4190 1046  
                         u2830 1818                           u2750 1740                           u2910 0D1A  
                         u3390 2654                           u3470 1B78                           u2590 2FA6  
                         u4350 2C10                           u2575 22D8                           u2495 2484  
                         u2671 286A                           u3711 28B8                           u4271 1242  
                         u4191 1042                           u2831 1814                           u2751 173C  
                         u2911 0D16                           u3391 2650                           u3471 1B74  
                         u2591 2FA2                           u4351 2C06                           u3800 1E7E  
                         u3720 28F2                           u4280 126A                           u2840 1832  
                         u2760 175A                           u2680 168E                           u2920 0D2A  
                         u3480 1B88                           u2657 282C                           u3801 1E7A  
                         u3721 28EE                           u4281 1266                           u2841 182E  
                         u2761 1756                           u2681 168A                           u2921 0D26  
                         u3481 1B84                           u3810 1EC8                           u3730 2EF0  
                         u4290 130E                           u2850 1854                           u2770 1778  
                         u2690 16A0                           u2930 0D6A                           u3490 1B96  
                         u3570 30A4                           u2667 2854                           u3811 1EC4  
                         u3731 2EEC                           u4291 130A                           u2851 1850  
                         u2771 1774                           u2691 169C                           u4507 2BE0  
                         u2931 0D66                           u3491 1B92                           u3571 30A0  
                         u3820 2092                           u3740 3046                           u3900 29C0  
                         u2780 1792                           u2860 2A68                           u2940 0DAA  
                         u3821 208E                           u3741 3042                           u3901 29BC  
                         u2781 178E                           u2861 2A64                           u4517 2A0E  
                         u2941 0DA6                           u4437 2C30                           u3750 1D94  
                         u3830 20C4                           u3910 29CE                           u2790 17AC  
                         u2950 0E20                           u2870 0CA2                           u4607 2594  
                         u3751 1D90                           u3831 20C0                           u3911 29CA  
                         u2791 17A8                           u4527 2A36                           u2951 0E1C  
                         u2871 0C9E                           u4447 2C7E                           u3760 1DC6  
                         u3840 2102                           u3920 2F4E                           u2960 0E42  
                         u2880 0CB4                           u4368 2C14                           u4617 227C  
                         u3761 1DC2                           u3841 20FE                           u3921 2F4A  
                         u4537 2A4C                           u2961 0E3E                           u2881 0CB0  
                         u4457 2CAA                           u3930 2FE0                           u3850 212C  
                         u3690 2882                           u2970 0E6C                           u2890 0CC4  
                         u4378 2C46                           u4627 2286                           u3931 2FDA  
                         u3771 1DF0                           u3851 2128                           u3691 287E  
                         u4547 2A82                           u2971 0E68                           u2891 0CC0  
                         u4467 2DE8                           u4379 2C5A                           u3940 2FE2  
                         u3780 1E14                           u3860 215A                           u2980 0E90  
                         u4637 230A                           u3781 1E10                           u3861 2156  
                         u4557 2A98                           u2981 0E8C                           u4477 2F8E  
                         u3950 2D9E                           u3790 1E3E                           u3870 21A2  
                         u2990 0EA6                           u4647 2314                           u4567 24FC  
                         u3951 2D9A                           u3791 1E3A                           u3871 219E  
                         u4487 2B86                           u2991 0EA2                           u3960 2DCC  
                         u3880 2948                           u4657 231C                           u4577 2506  
                         u3961 2DC8                           u3881 2944                           u4497 2BC2  
                         u3890 296A                           u3970 13BE                           u4667 2326  
                         u4587 257E                           u3891 2966                           u3971 13B8  
                         u3980 13C0                           u4597 2588                           u3990 13D6  
                         u3991 13D2                           _TMR0 000FD6                           _TMR2 000FCC  
                         _TMR3 000FB2                           abs@a 0016                           _dbuf 0098  
                         _atoi 1BF2                           _main 2BF0                           _dtoa 138E  
                         _isrH 0008                           _isrL 0018                           _prec 0058  
                         _nout 0094                           pad@i 001B                           pad@p 0018  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001D  
                         fsr2l 000FD9                           btemp 005C                           prodh 000FF4  
                         prodl 000FF3                           start 00AA                ___fldiv@new_exp 0040  
 __end_of_appStateRecolectData 301E                __end_of_Lcd_Cmd 25A0                __end_of_Lcd_Out 2870  
                 ___param_bank 000000                     _Lcd_Chr_CP 21E4           __size_of_appLCD_Init 0084  
      __size_of_appCounterInit 000E                          ??_abs 0018                          ??_pad 001A  
                ___fltol@sign1 0050                __end_of___aodiv 1F0A                          ?_atoi 000B  
                        ?_main 0001                          ?_dtoa 001F                __end_of___aomod 21E4  
                        ?_isrH 0001                          ?_isrL 0001                __end_of_adcInit 2E68  
              __end_of___fldiv 1022                          _ADRES 000FC3                __end_of___awmod 2B6C  
              __end_of___flmul 0C88                __end_of___fltol 26A6                          i1l316 009A  
      __end_of_appStateInitial 30AE                          i2l322 3082                   vfpfcnvrt@fmt 0045  
                        _PORTB 000F81                          _TRISB 000F93                __end_of_appInit 311E  
        appSubGetData@cantidad 0086                          _datos 00B8                          _flags 005A  
                        _fputc 2870                          _fputs 2EAE                __end_of_isdigit 2FE8  
                        atoi@n 0018                          pad@fp 0014                          atoi@s 000B  
                        _width 0096                          _putch 3168                          dtoa@d 0021  
                        dtoa@i 0041                          dtoa@n 0039                          dtoa@p 0033  
                        dtoa@s 0037                          dtoa@w 0035                __end_of_teclado 1856  
              __end_of_isspace 2DD8                          pclath 000FFA                          tablat 000FF5  
              __end_of_warning 2E20                          ttemp5 005D                          ttemp6 0060  
                        ttemp7 0064                          status 000FD8                          wtemp8 005D  
              __end_of_sprintf 2D86           __end_of_appTimerInit 30D4           __end_of_appTimerStop 3164  
             __end_of_Lcd_Init 2ABC                __initialization 2EF2                   __end_of_atoi 1D82  
                 __end_of_main 2C62                   __end_of_dtoa 166C                   __end_of_isrH 3086  
                 __end_of_isrL 00AA                         ??_atoi 000D                         ??_main 008C  
                       ??_dtoa 0029                         ??_isrH 0001                         ??_isrL 0001  
     __size_of_appCounterStart 0004                  __activetblptr 000002                 _appGetElements 2C62  
                       ?_fputc 0004                         ?_fputs 000D          __size_of_appISRConfig 0008  
                       ?_putch 0001                         i1l4370 0034                         i1l4380 006A  
                       i1l4372 0042                         i1l4382 006E                         i1l4374 0044  
                       i1l4384 007A                         i1l4376 0048                         i1l4368 0026  
                       i1l4386 008A                         i1l4378 005A                         i1l4388 0092  
                       i2l3830 3074                         i2l3832 307A                         i2l3824 3056  
                       i2l3826 3064                         i2l3828 3072                      ??_Lcd_Cmd 0004  
                vfpfcnvrt@done 0068                         _TMR0IE 007F95                         _TMR0IF 007F92  
                       _TMR3IE 007D01                         _TMR3IF 007D09                      ??_Lcd_Out 000A  
             __end_of___xxtofl 1BF2                   vfprintf@cfmt 004D              ?_appSubGiveElemts 0004  
                  ?_Lcd_Chr_CP 0001                         _appADC 2332                      ??___aodiv 0014  
                    ??___aomod 0014                         ___wmul 30D4                      ??_adcInit 0004  
                    ??___fldiv 0037                      ??___awmod 0056                      ??___flmul 001E  
                       _appBat 1856                      ??___fltol 004C             ??_appSubGiveElemts 0006  
                       _memset 1F0A                         clear_0 2F18                ___awmod@divisor 0054  
                    ??_appInit 0010         __end_of_appGetElements 2CD2                ___awmod@counter 0056  
                       pad@buf 0016                         dtoa@fp 001F                         _strlen 301E  
                 _appISRConfig 3152                         fputc@c 0004               ?_appStateInitial 0001  
                       fputs@c 0011                         fputs@i 0012                         fputs@s 000D  
                    ??_isdigit 0006                      ??_teclado 0006                   __mediumconst 0000  
                    ??_isspace 0006                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8           _appStateRecolectData 2FE8              adcGetValue@PinADC 0007  
                       putch@c 0001          __end_of_appSubGetData 27A4                      ??_warning 000E  
             __end_of_vfprintf 2D34                      ??_sprintf 0058                   ___xxtofl@arg 0012  
                 ___xxtofl@exp 0011                   ___xxtofl@val 0008                     __accesstop 0060  
      __end_of__initialization 2F26          __end_of_appTimerStart 3152                  ___rparam_used 000001  
                   ___fltol@f1 0048                 __pcstackCOMRAM 0001                   __pidataBANK0 311E  
               _appCounterInit 3138                  __end_of_fputc 293A                  __end_of_fputs 2EF2  
                __end_of_putch 316A             __size_of_appElemts 0046                ?_appGetElements 0001  
                ??_adcGetValue 0006          ?_appStateRecolectData 0001                      ?_Lcd_Init 0001  
            ??_appCounterStart 0004                        ??_fputc 0008                        ??_fputs 0011  
          __size_of_Lcd_Chr_CP 014E                        ??_putch 0004          __size_of_appTimerInit 0026  
                   __pbssBANK0 008E          __size_of_appTimerStop 0004         __end_of_appCounterInit 3146  
                      ?_appADC 0084                        ?___wmul 0004                        ?_appBat 0084  
                      ?_memset 0004                     appADC@data 0084                        ?_strlen 0004  
                 _appTimerInit 30AE                      ?___xxtofl 0008                   _appTimerStop 3160  
           __size_of_vfpfcnvrt 036C                     ??_Lcd_Init 0007            __end_of_adcGetValue 2FB0  
            __end_of_appElemts 2EAE                        _Lcd_Cmd 2476                        _Lcd_Out 27A4  
      appSubGetData@data_Inout 0084                  ??_appLCD_Init 000E                        __Hparam 0000  
                      __Lparam 0000                ?_appCounterInit 0004                        ___aodiv 1D82  
                      ___aomod 2080                        _adcInit 2E20                        ___fldiv 0C88  
                      ___awmod 2ABC                        ___flmul 085E                        ___fltol 25A0  
              __size_of_appADC 0144                __size_of___wmul 0026                __size_of_appBat 01E8  
                    ?_vfprintf 006C                     appBat@data 0084                   __psmallconst 0800  
                      __pcinit 2EF2                __size_of_memset 0176                        _appInit 30FA  
                      __ramtop 0800                        __ptext0 2BF0                        __ptext1 2C62  
                      __ptext2 2FE8                        __ptext3 3086                        __ptext4 2DD8  
                      __ptext5 2E68                        __ptext6 1856                        __ptext7 2332  
                      __ptext8 2F74                        __ptext9 1A3E                      _T0CONbits 000FD5  
              __size_of_strlen 0036                      _T2CONbits 000FCA                   __size_of_abs 0040  
                 __size_of_pad 00C2         ??_appStateRecolectData 0058                        _isdigit 2FB0  
                   ??___xxtofl 000C                      _T3CONbits 000FB1               ___awmod@dividend 0052  
                      _teclado 166C                        _isspace 2D86                        _warning 2DD8  
                      atoi@neg 0011                        _sprintf 2D34                 __pintcode_body 3054  
         end_of_initialization 2F26                        fputc@fp 0006                        memset@c 0006  
                      memset@k 000C                        memset@n 0008                        memset@s 000E  
                __Lmediumconst 0000                        int_func 3054                        fputs@fp 000F  
         appCounterInit@reload 0004              __end_of_vfpfcnvrt 138E                      Lcd_Init@i 0008  
                 ??_Lcd_Chr_CP 0004                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 004D            __end_of_appLCD_Init 2BF0                        strlen@a 0006  
                      strlen@s 0004                      _PORTBbits 000F81                    _adcGetValue 2F74  
                ___xxtofl@sign 0010                      _TRISAbits 000F92                      _TRISBbits 000F93  
                    _TRISDbits 000F95      __size_of_appSubGiveElemts 0006                    ___fldiv@grs 0042  
                  ___fldiv@rem 003B             __end_of_Lcd_Chr_CP 2332                     fp__warning 000E  
                  ___flmul@grs 0023               ??_appGetElements 0089                 __end_of_appADC 2476  
                  vfpfcnvrt@ap 0047                    vfpfcnvrt@fp 0043                    vfpfcnvrt@ll 0060  
               __end_of___wmul 30FA                 __end_of_appBat 1A3E                _appCounterStart 3164  
               __end_of_memset 2080                 __end_of_strlen 3054            start_initialization 2EF2  
                  __end_of_abs 2F74                    __end_of_pad 29FC                  Lcd_Out@buffer 0008  
     __size_of_appStateInitial 0028              __size_of_Lcd_Init 00C0             fp__appStateInitial 000E  
                  _appLCD_Init 2B6C                    vfprintf@fmt 006E                       ??_appADC 0058  
                     ??___wmul 0008                       ??_appBat 0086                    _appBat$2173 0088  
       __size_of_appSubGetData 00FE                    __pdataBANK0 00B8                       ??_memset 000A  
                   memset@dest 0004                       ??_strlen 0006                      ___fldiv@a 0033  
                    ___fldiv@b 002F         __size_of_appTimerStart 000C                      ___flmul@a 001A  
                    ___flmul@b 0016                    __pbssCOMRAM 0058                  __pcstackBANK0 0060  
             ___aodiv@dividend 0004              __size_of___xxtofl 01B4        fp__appStateRecolectData 000E  
                     ?_Lcd_Cmd 0001               ??_appCounterInit 0006                       ?_Lcd_Out 0007  
                    _atoi$1884 0013                      _atoi$1885 0017                      _atoi$1886 0015  
                    _appElemts 2E68                      _dtoa$1849 0031        __end_of_appCounterStart 3168  
            appElemts@elements 0084                      __pintcode 0008                       ?___aodiv 0004  
                     ?___aomod 0004                       ?_adcInit 0001                       ?___fldiv 002F  
             ___aodiv@quotient 0016                       ?___awmod 0052                       ?___flmul 0016  
                     ?___fltol 0048                    __pintcodelo 0018                       ?_appInit 0001  
            __size_of_vfprintf 0062                    __smallconst 0800                       ?_isdigit 0004  
                 teclado@valor 0004                       ?_teclado 0004                       ?_isspace 0004  
             _appSubGiveElemts 315A                       ?_warning 0001                       ?_sprintf 0072  
                _appSubGetData 26A6                 __size_of_fputc 00CA                 __size_of_fputs 0044  
               __size_of_putch 0002                 ___wmul@product 0008                       _LATAbits 000F89  
                     _LATBbits 000F8A                       _LATDbits 000F8C                  _appTimerStart 3146  
                     _IPR2bits 000FA2                       _PIE2bits 000FA0              ??_appStateInitial 0006  
                   ?_appElemts 0084                       i1u440_20 005A                       i1u440_21 0056  
                     i1u441_20 006A                       i1u441_21 0066                       i1u442_20 008A  
                     i1u442_21 0086                       i1u438_20 0034                       i1u438_21 0030  
                     i1u439_20 0042                       i1u439_21 003E                       _PIR1bits 000F9E  
                     _PIR2bits 000FA1                       i2u367_40 3064                       i2u367_41 3060  
                     i2u368_40 3072                       i2u368_41 306E                       _GO_nDONE 007E11  
                     _RCONbits 000FD0                       Lcd_Out@x 0007                       Lcd_Out@y 000C  
                    _vfpfcnvrt 1022                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0004                  ?_appISRConfig 0001  
                 ?_adcGetValue 0004  __size_of_appStateRecolectData 0036                   _isspace$1902 000A  
                     _Lcd_Init 29FC                 ?_appSubGetData 0084                    _INTCON2bits 000FF1  
                    copy_data0 2F06                 ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A  
             __size_of_Lcd_Out 00CC                       __Hrparam 0000                     vfprintf@ap 0070  
                     __Lrparam 0000                     vfprintf@fp 006C               ?_appCounterStart 0001  
             __size_of___aodiv 0188               __size_of___aomod 0164               __size_of_adcInit 0048  
             __size_of___fldiv 039A               __size_of___awmod 00B0               __size_of___flmul 042A  
             __size_of___fltol 0106                  appADC@lm35val 0086                     ?_vfpfcnvrt 0043  
              ___aodiv@divisor 000C                 ??_appISRConfig 0004                ___aodiv@counter 0014  
             __size_of_appInit 0024                     sprintf@fmt 0074                       ___xxtofl 1A3E  
             appElemts@dataout 0086               __size_of_isdigit 0038                 Lcd_Chr_CP@data 0006  
             __size_of_teclado 01EA               __size_of_isspace 0052                       __ptext10 25A0  
                     __ptext11 085E                       __ptext20 2E20                       __ptext12 0C88  
                     __ptext21 3160                       __ptext13 2ABC                       __ptext30 138E  
                     __ptext22 3146                       __ptext14 30FA                       __ptext31 293A  
                     __ptext23 315A                       __ptext15 30AE                       __ptext40 2D86  
                     __ptext32 301E                       __ptext24 3164                       __ptext16 2B6C  
                     __ptext41 2FB0                       __ptext33 2EAE                       __ptext25 26A6  
                     __ptext17 29FC                       __ptext42 30D4                       __ptext34 2870  
                     __ptext26 166C                       __ptext18 3152                       __ptext43 1F0A  
                     __ptext35 3168                       __ptext27 2D34                       __ptext19 3138  
                     __ptext44 27A4                       __ptext36 2F34                       __ptext28 2CD2  
                     __ptext45 2476                       __ptext37 2080                       __ptext29 1022  
                     __ptext46 21E4                       __ptext38 1D82                       __ptext39 1BF2  
             __size_of_warning 0048               __size_of_sprintf 0052                    Lcd_Cmd@data 0006  
                __size_of_atoi 0190                  __size_of_main 0072                  __size_of_dtoa 02DE  
                __size_of_isrH 307E                  __size_of_isrL 0092                    ??_appElemts 0058  
                 ?_appLCD_Init 0001                       int$flags 005C                       _vfprintf 2CD2  
             ___aomod@dividend 0004             appSubGetData@inout 0088                  ?_appTimerInit 0001  
                  Lcd_Out@data 000D                 _vfpfcnvrt$1864 006A                  ?_appTimerStop 0001  
                   _INTCONbits 000FF2                ??_appSubGetData 0058                       isdigit@c 0004  
                     intlevel1 0000                       intlevel2 0000                      sprintf@ap 007C  
              ??_appTimerStart 0004                       isspace@c 0004           appSubGiveElemts@data 0004  
     __end_of_appSubGiveElemts 3160                 appElemts@F3567 008E                ___aomod@divisor 000C  
                  ??_vfpfcnvrt 0049                ___aomod@counter 0014                 ??_appTimerInit 0004  
                     sprintf@f 007E                       sprintf@s 0072                 ??_appTimerStop 0004  
      __size_of_appGetElements 0070              fp__appGetElements 000E           __size_of_adcGetValue 003C  
              _appStateInitial 3086                   ___aodiv@sign 0015           __end_of_appISRConfig 315A  
                 ___aomod@sign 0015  
