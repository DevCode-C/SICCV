

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 02 03:56:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74  0000                     
    75                           ; Version 2.20
    76                           ; Generated 12/02/2020 GMT
    77                           ; 
    78                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4550 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataBANK0
   111  003492                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _datos
   115  003492  00                 	db	0
   116  003493  0000               	dw	0
   117  003495  00                 	db	0
   118  003496  0000               	dw	0
   119  003498  00                 	db	0
   120  003499  00                 	db	0
   121  00349A  00                 	db	0
   122  00349B  00                 	db	0
   123  00349C  00                 	db	0
   124  00349D  00                 	db	0
   125  00349E  00                 	db	0
   126  00349F  00                 	db	0
   127  0034A0  00                 	db	0
   128  0034A1  00                 	db	0
   129  0034A2  00                 	db	0
   130  0034A3  00                 	db	0
   131  0034A4  00                 	db	0
   132  0034A5  00                 	db	0
   133  0034A6  00                 	db	0
   134  0034A7  00                 	db	0
   135  0034A8  00                 	db	0
   136  0034A9  92                 	db	low _appStateInitial
   137  0034AA  31                 	db	high _appStateInitial
   138  0000                     _TMR0	set	4054
   139  0000                     _TMR3	set	4018
   140  0000                     _ADRES	set	4035
   141  0000                     _IPR1bits	set	3999
   142  0000                     _PIE1bits	set	3997
   143  0000                     _RCSTAbits	set	4011
   144  0000                     _TXSTAbits	set	4012
   145  0000                     _SPBRG	set	4015
   146  0000                     _BAUDCONbits	set	4024
   147  0000                     _PORTAbits	set	3968
   148  0000                     _RCONbits	set	4048
   149  0000                     _PIE2bits	set	4000
   150  0000                     _IPR2bits	set	4002
   151  0000                     _PIR2bits	set	4001
   152  0000                     _INTCONbits	set	4082
   153  0000                     _T0CONbits	set	4053
   154  0000                     _T3CONbits	set	4017
   155  0000                     _LATEbits	set	3981
   156  0000                     _PIR1bits	set	3998
   157  0000                     _PR2	set	4043
   158  0000                     _TMR2	set	4044
   159  0000                     _TRISEbits	set	3990
   160  0000                     _T2CONbits	set	4042
   161  0000                     _LATDbits	set	3980
   162  0000                     _TRISDbits	set	3989
   163  0000                     _PORTBbits	set	3969
   164  0000                     _PORTB	set	3969
   165  0000                     _RCREG	set	4014
   166  0000                     _LATAbits	set	3977
   167  0000                     _TRISAbits	set	3986
   168  0000                     _INTCON2bits	set	4081
   169  0000                     _TRISB	set	3987
   170  0000                     _LATCbits	set	3979
   171  0000                     _TRISCbits	set	3988
   172  0000                     _ADCON0bits	set	4034
   173  0000                     _ADCON2bits	set	4032
   174  0000                     _ADCON1bits	set	4033
   175  0000                     _RCIE	set	31981
   176  0000                     _RCIF	set	31989
   177  0000                     _TMR0IF	set	32658
   178  0000                     _TMR0IE	set	32661
   179  0000                     _TMR3IF	set	32009
   180  0000                     _TMR3IE	set	32001
   181  0000                     _GO_nDONE	set	32273
   182                           
   183                           	psect	smallconst
   184  000800                     __psmallconst:
   185                           	callstack 0
   186  000800  00                 	db	0
   187  000801                     STR_9:
   188  000801  52                 	db	82	;'R'
   189  000802  65                 	db	101	;'e'
   190  000803  63                 	db	99	;'c'
   191  000804  61                 	db	97	;'a'
   192  000805  72                 	db	114	;'r'
   193  000806  67                 	db	103	;'g'
   194  000807  61                 	db	97	;'a'
   195  000808  20                 	db	32
   196  000809  50                 	db	80	;'P'
   197  00080A  6F                 	db	111	;'o'
   198  00080B  72                 	db	114	;'r'
   199  00080C  66                 	db	102	;'f'
   200  00080D  61                 	db	97	;'a'
   201  00080E  76                 	db	118	;'v'
   202  00080F  6F                 	db	111	;'o'
   203  000810  72                 	db	114	;'r'
   204  000811  00                 	db	0
   205  000812                     STR_6:
   206  000812  43                 	db	67	;'C'
   207  000813  20                 	db	32
   208  000814  64                 	db	100	;'d'
   209  000815  65                 	db	101	;'e'
   210  000816  20                 	db	32
   211  000817  76                 	db	118	;'v'
   212  000818  61                 	db	97	;'a'
   213  000819  63                 	db	99	;'c'
   214  00081A  75                 	db	117	;'u'
   215  00081B  6E                 	db	110	;'n'
   216  00081C  61                 	db	97	;'a'
   217  00081D  73                 	db	115	;'s'
   218  00081E  3A                 	db	58	;':'
   219  00081F  00                 	db	0
   220  000820                     STR_1:
   221  000820  54                 	db	84	;'T'
   222  000821  3A                 	db	58	;':'
   223  000822  25                 	db	37
   224  000823  30                 	db	48	;'0'
   225  000824  32                 	db	50	;'2'
   226  000825  64                 	db	100	;'d'
   227  000826  2E                 	db	46
   228  000827  25                 	db	37
   229  000828  30                 	db	48	;'0'
   230  000829  32                 	db	50	;'2'
   231  00082A  64                 	db	100	;'d'
   232  00082B  20                 	db	32
   233  00082C  43                 	db	67	;'C'
   234  00082D  00                 	db	0
   235  00082E                     STR_8:
   236  00082E  53                 	db	83	;'S'
   237  00082F  69                 	db	105	;'i'
   238  000830  6E                 	db	110	;'n'
   239  000831  20                 	db	32
   240  000832  76                 	db	118	;'v'
   241  000833  61                 	db	97	;'a'
   242  000834  63                 	db	99	;'c'
   243  000835  75                 	db	117	;'u'
   244  000836  6E                 	db	110	;'n'
   245  000837  61                 	db	97	;'a'
   246  000838  73                 	db	115	;'s'
   247  000839  00                 	db	0
   248  00083A                     STR_3:
   249  00083A  42                 	db	66	;'B'
   250  00083B  69                 	db	105	;'i'
   251  00083C  65                 	db	101	;'e'
   252  00083D  6E                 	db	110	;'n'
   253  00083E  76                 	db	118	;'v'
   254  00083F  65                 	db	101	;'e'
   255  000840  6E                 	db	110	;'n'
   256  000841  69                 	db	105	;'i'
   257  000842  64                 	db	100	;'d'
   258  000843  6F                 	db	111	;'o'
   259  000844  73                 	db	115	;'s'
   260  000845  00                 	db	0
   261  000846                     STR_2:
   262  000846  42                 	db	66	;'B'
   263  000847  61                 	db	97	;'a'
   264  000848  74                 	db	116	;'t'
   265  000849  3A                 	db	58	;':'
   266  00084A  25                 	db	37
   267  00084B  30                 	db	48	;'0'
   268  00084C  32                 	db	50	;'2'
   269  00084D  64                 	db	100	;'d'
   270  00084E  00                 	db	0
   271  00084F                     STR_4:
   272  00084F  53                 	db	83	;'S'
   273  000850  49                 	db	73	;'I'
   274  000851  43                 	db	67	;'C'
   275  000852  43                 	db	67	;'C'
   276  000853  56                 	db	86	;'V'
   277  000854  00                 	db	0
   278  000855                     STR_5:
   279  000855  23                 	db	35
   280  000856  3A                 	db	58	;':'
   281  000857  25                 	db	37
   282  000858  64                 	db	100	;'d'
   283  000859  00                 	db	0
   284  00085A  00                 	db	0	; dummy byte at the end
   285  0000                     
   286                           ; #config settings
   287                           
   288                           	psect	cinit
   289  0032AC                     __pcinit:
   290                           	callstack 0
   291  0032AC                     start_initialization:
   292                           	callstack 0
   293  0032AC                     __initialization:
   294                           	callstack 0
   295                           
   296                           ; Initialize objects allocated to BANK0 (25 bytes)
   297                           ; load TBLPTR registers with __pidataBANK0
   298  0032AC  0E92               	movlw	low __pidataBANK0
   299  0032AE  6EF6               	movwf	tblptrl,c
   300  0032B0  0E34               	movlw	high __pidataBANK0
   301  0032B2  6EF7               	movwf	tblptrh,c
   302  0032B4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   303  0032B6  6EF8               	movwf	tblptru,c
   304  0032B8  EE00  F0B8         	lfsr	0,__pdataBANK0
   305  0032BC  EE10 F019          	lfsr	1,25
   306  0032C0                     copy_data0:
   307  0032C0  0009               	tblrd		*+
   308  0032C2  CFF5 FFEE          	movff	tablat,postinc0
   309  0032C6  50E5               	movf	postdec1,w,c
   310  0032C8  50E1               	movf	fsr1l,w,c
   311  0032CA  E1FA               	bnz	copy_data0
   312                           
   313                           ; Clear objects allocated to BANK0 (42 bytes)
   314  0032CC  EE00  F08E         	lfsr	0,__pbssBANK0
   315  0032D0  0E2A               	movlw	42
   316  0032D2                     clear_0:
   317  0032D2  6AEE               	clrf	postinc0,c
   318  0032D4  06E8               	decf	wreg,f,c
   319  0032D6  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to COMRAM (4 bytes)
   322  0032D8  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   323  0032DA  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   324  0032DC  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   325  0032DE  6A57               	clrf	__pbssCOMRAM& (0+255),c
   326  0032E0                     end_of_initialization:
   327                           	callstack 0
   328  0032E0                     __end_of__initialization:
   329                           	callstack 0
   330  0032E0  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331  0032E2  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332  0032E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   333  0032E6  6EF8               	movwf	tblptru,c
   334  0032E8  0100               	movlb	0
   335  0032EA  EF55  F017         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMRAM
   338  000057                     __pbssCOMRAM:
   339                           	callstack 0
   340  000057                     _prec:
   341                           	callstack 0
   342  000057                     	ds	2
   343  000059                     _flags:
   344                           	callstack 0
   345  000059                     	ds	2
   346                           
   347                           	psect	bssBANK0
   348  00008E                     __pbssBANK0:
   349                           	callstack 0
   350  00008E                     	ds	6
   351  000094                     _nout:
   352                           	callstack 0
   353  000094                     	ds	2
   354  000096                     _width:
   355                           	callstack 0
   356  000096                     	ds	2
   357  000098                     _dbuf:
   358                           	callstack 0
   359  000098                     	ds	32
   360                           
   361                           	psect	dataBANK0
   362  0000B8                     __pdataBANK0:
   363                           	callstack 0
   364  0000B8                     _datos:
   365                           	callstack 0
   366  0000B8                     	ds	25
   367                           
   368                           	psect	cstackBANK0
   369  000060                     __pcstackBANK0:
   370                           	callstack 0
   371  000060                     ___awmod@counter:
   372                           	callstack 0
   373  000060                     vfpfcnvrt@ll:
   374                           	callstack 0
   375                           
   376                           ; 8 bytes @ 0x0
   377  000060                     	ds	1
   378  000061                     ___awmod@sign:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x1
   382  000061                     	ds	7
   383  000068                     vfpfcnvrt@done:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x8
   387  000068                     	ds	2
   388  00006A                     _vfpfcnvrt$2297:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xA
   392  00006A                     	ds	2
   393  00006C                     ?_vfprintf:
   394                           	callstack 0
   395  00006C                     vfprintf@fp:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0xC
   399  00006C                     	ds	2
   400  00006E                     vfprintf@fmt:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0xE
   404  00006E                     	ds	2
   405  000070                     vfprintf@ap:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x10
   409  000070                     	ds	2
   410  000072                     ?_sprintf:
   411                           	callstack 0
   412  000072                     sprintf@s:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x12
   416  000072                     	ds	2
   417  000074                     sprintf@fmt:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x14
   421  000074                     	ds	8
   422  00007C                     sprintf@ap:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x1C
   426  00007C                     	ds	2
   427  00007E                     sprintf@f:
   428                           	callstack 0
   429                           
   430                           ; 6 bytes @ 0x1E
   431  00007E                     	ds	6
   432  000084                     appADC@data:
   433                           	callstack 0
   434  000084                     appBat@data:
   435                           	callstack 0
   436  000084                     appElemts@elements:
   437                           	callstack 0
   438  000084                     appSubGetData@data_Inout:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x24
   442  000084                     	ds	2
   443  000086                     ??_appBat:
   444  000086                     appSubGetData@cantidad:
   445                           	callstack 0
   446  000086                     appADC@lm35val:
   447                           	callstack 0
   448  000086                     appElemts@dataout:
   449                           	callstack 0
   450                           
   451                           ; 6 bytes @ 0x26
   452  000086                     	ds	2
   453  000088                     appSubGetData@inout:
   454                           	callstack 0
   455  000088                     _appBat$2594:
   456                           	callstack 0
   457                           
   458                           ; 4 bytes @ 0x28
   459  000088                     	ds	1
   460  000089                     ??_appGetElements:
   461                           
   462                           ; 1 bytes @ 0x29
   463  000089                     	ds	3
   464  00008C                     ??_main:
   465                           
   466                           ; 1 bytes @ 0x2C
   467  00008C                     	ds	2
   468                           
   469                           	psect	cstackCOMRAM
   470  000001                     __pcstackCOMRAM:
   471                           	callstack 0
   472  000001                     
   473                           ; 1 bytes @ 0x0
   474  000001                     	ds	1
   475  000002                     ??_isrL:
   476                           
   477                           ; 1 bytes @ 0x1
   478  000002                     	ds	3
   479  000005                     ??_Lcd_Cmd:
   480  000005                     ??_Lcd_Chr_CP:
   481  000005                     ??_adcInit:
   482  000005                     ?_strlen:
   483                           	callstack 0
   484  000005                     ?_isdigit:
   485                           	callstack 0
   486  000005                     ?_isspace:
   487                           	callstack 0
   488  000005                     ?_adcGetValue:
   489                           	callstack 0
   490  000005                     ?___wmul:
   491                           	callstack 0
   492  000005                     ?___lldiv:
   493                           	callstack 0
   494  000005                     ?___aodiv:
   495                           	callstack 0
   496  000005                     ?___aomod:
   497                           	callstack 0
   498  000005                     setServoAngle@pin:
   499                           	callstack 0
   500  000005                     teclado@valor:
   501                           	callstack 0
   502  000005                     appCounterInit@reload:
   503                           	callstack 0
   504  000005                     ___wmul@multiplier:
   505                           	callstack 0
   506  000005                     memset@dest:
   507                           	callstack 0
   508  000005                     isdigit@c:
   509                           	callstack 0
   510  000005                     isspace@c:
   511                           	callstack 0
   512  000005                     fputc@c:
   513                           	callstack 0
   514  000005                     strlen@s:
   515                           	callstack 0
   516  000005                     ___lldiv@dividend:
   517                           	callstack 0
   518  000005                     ___aodiv@dividend:
   519                           	callstack 0
   520  000005                     ___aomod@dividend:
   521                           	callstack 0
   522                           
   523                           ; 8 bytes @ 0x4
   524  000005                     	ds	1
   525  000006                     ??_setServoAngle:
   526  000006                     adcInit@ADC_PINs:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x5
   530  000006                     	ds	1
   531  000007                     ??_isdigit:
   532  000007                     ??_isspace:
   533  000007                     ??_adcGetValue:
   534  000007                     Lcd_Chr_CP@data:
   535                           	callstack 0
   536  000007                     Lcd_Cmd@data:
   537                           	callstack 0
   538  000007                     ___wmul@multiplicand:
   539                           	callstack 0
   540  000007                     memset@c:
   541                           	callstack 0
   542  000007                     fputc@fp:
   543                           	callstack 0
   544  000007                     strlen@a:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x6
   548  000007                     	ds	1
   549  000008                     ??_Lcd_Init:
   550  000008                     adcGetValue@PinADC:
   551                           	callstack 0
   552  000008                     Lcd_Out@x:
   553                           	callstack 0
   554  000008                     setServoAngle@angle:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x7
   558  000008                     	ds	1
   559  000009                     ??_fputc:
   560  000009                     ?___xxtofl:
   561                           	callstack 0
   562  000009                     Lcd_Init@i:
   563                           	callstack 0
   564  000009                     setServo@pulsos:
   565                           	callstack 0
   566  000009                     Lcd_Out@buffer:
   567                           	callstack 0
   568  000009                     ___wmul@product:
   569                           	callstack 0
   570  000009                     memset@n:
   571                           	callstack 0
   572  000009                     ___lldiv@divisor:
   573                           	callstack 0
   574  000009                     ___xxtofl@val:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x8
   578  000009                     	ds	1
   579  00000A                     setServo@pin:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x9
   583  00000A                     	ds	1
   584  00000B                     ??_memset:
   585  00000B                     ??_Lcd_Out:
   586  00000B                     setServo@angle:
   587                           	callstack 0
   588  00000B                     _isspace$2335:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0xA
   592  00000B                     	ds	1
   593  00000C                     ?_atoi:
   594                           	callstack 0
   595  00000C                     setServo@i:
   596                           	callstack 0
   597  00000C                     atoi@s:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0xB
   601  00000C                     	ds	1
   602  00000D                     ??___xxtofl:
   603  00000D                     Lcd_Out@y:
   604                           	callstack 0
   605  00000D                     appSubGiveElemts@data:
   606                           	callstack 0
   607  00000D                     memset@k:
   608                           	callstack 0
   609  00000D                     ___lldiv@quotient:
   610                           	callstack 0
   611  00000D                     ___aodiv@divisor:
   612                           	callstack 0
   613  00000D                     ___aomod@divisor:
   614                           	callstack 0
   615                           
   616                           ; 8 bytes @ 0xC
   617  00000D                     	ds	1
   618  00000E                     ??_atoi:
   619  00000E                     Lcd_Out@data:
   620                           	callstack 0
   621  00000E                     fputs@s:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0xD
   625  00000E                     	ds	1
   626  00000F                     ??_warning:
   627  00000F                     ??_appLCD_Init:
   628  00000F                     memset@s:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0xE
   632  00000F                     	ds	1
   633  000010                     fputs@fp:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0xF
   637  000010                     	ds	1
   638  000011                     ___lldiv@counter:
   639                           	callstack 0
   640  000011                     ___xxtofl@sign:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x10
   644  000011                     	ds	1
   645  000012                     ___xxtofl@exp:
   646                           	callstack 0
   647  000012                     fputs@c:
   648                           	callstack 0
   649  000012                     atoi@neg:
   650                           	callstack 0
   651  000012                     uart_Init@baud:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x11
   655  000012                     	ds	1
   656  000013                     fputs@i:
   657                           	callstack 0
   658  000013                     ___xxtofl@arg:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x12
   662  000013                     	ds	1
   663  000014                     _atoi$2317:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x13
   667  000014                     	ds	1
   668  000015                     ?_pad:
   669                           	callstack 0
   670  000015                     ___aodiv@counter:
   671                           	callstack 0
   672  000015                     ___aomod@counter:
   673                           	callstack 0
   674  000015                     pad@fp:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x14
   678  000015                     	ds	1
   679  000016                     ___aodiv@sign:
   680                           	callstack 0
   681  000016                     ___aomod@sign:
   682                           	callstack 0
   683  000016                     _atoi$2319:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x15
   687  000016                     	ds	1
   688  000017                     ?_abs:
   689                           	callstack 0
   690  000017                     ?___flmul:
   691                           	callstack 0
   692  000017                     pad@buf:
   693                           	callstack 0
   694  000017                     abs@a:
   695                           	callstack 0
   696  000017                     ___flmul@b:
   697                           	callstack 0
   698  000017                     ___aodiv@quotient:
   699                           	callstack 0
   700                           
   701                           ; 8 bytes @ 0x16
   702  000017                     	ds	1
   703  000018                     _atoi$2318:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x17
   707  000018                     	ds	1
   708  000019                     ??_abs:
   709  000019                     pad@p:
   710                           	callstack 0
   711  000019                     atoi@n:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x18
   715  000019                     	ds	2
   716  00001B                     ??_pad:
   717  00001B                     ___flmul@a:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x1A
   721  00001B                     	ds	1
   722  00001C                     pad@i:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x1B
   726  00001C                     	ds	2
   727  00001E                     pad@w:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x1D
   731  00001E                     	ds	1
   732  00001F                     ??___flmul:
   733                           
   734                           ; 1 bytes @ 0x1E
   735  00001F                     	ds	1
   736  000020                     ?_dtoa:
   737                           	callstack 0
   738  000020                     dtoa@fp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x1F
   742  000020                     	ds	2
   743  000022                     dtoa@d:
   744                           	callstack 0
   745                           
   746                           ; 8 bytes @ 0x21
   747  000022                     	ds	1
   748  000023                     ___flmul@sign:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x22
   752  000023                     	ds	1
   753  000024                     ___flmul@grs:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x23
   757  000024                     	ds	4
   758  000028                     ___flmul@aexp:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x27
   762  000028                     	ds	1
   763  000029                     ___flmul@bexp:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x28
   767  000029                     	ds	1
   768  00002A                     ??_dtoa:
   769  00002A                     ___flmul@prod:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x29
   773  00002A                     	ds	4
   774  00002E                     ___flmul@temp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x2D
   778  00002E                     	ds	2
   779  000030                     ?___fldiv:
   780                           	callstack 0
   781  000030                     ___fldiv@b:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x2F
   785  000030                     	ds	2
   786  000032                     _dtoa$2282:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x31
   790  000032                     	ds	2
   791  000034                     dtoa@p:
   792                           	callstack 0
   793  000034                     ___fldiv@a:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x33
   797  000034                     	ds	2
   798  000036                     dtoa@w:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x35
   802  000036                     	ds	2
   803  000038                     ??___fldiv:
   804  000038                     dtoa@s:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x37
   808  000038                     	ds	2
   809  00003A                     dtoa@n:
   810                           	callstack 0
   811                           
   812                           ; 8 bytes @ 0x39
   813  00003A                     	ds	2
   814  00003C                     ___fldiv@rem:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x3B
   818  00003C                     	ds	4
   819  000040                     ___fldiv@sign:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x3F
   823  000040                     	ds	1
   824  000041                     ___fldiv@new_exp:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x40
   828  000041                     	ds	1
   829  000042                     dtoa@i:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x41
   833  000042                     	ds	1
   834  000043                     ___fldiv@grs:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x42
   838  000043                     	ds	1
   839  000044                     ?_vfpfcnvrt:
   840                           	callstack 0
   841  000044                     vfpfcnvrt@fp:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x43
   845  000044                     	ds	2
   846  000046                     vfpfcnvrt@fmt:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x45
   850  000046                     	ds	1
   851  000047                     ___fldiv@bexp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x46
   855  000047                     	ds	1
   856  000048                     ___fldiv@aexp:
   857                           	callstack 0
   858  000048                     vfpfcnvrt@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x47
   862  000048                     	ds	1
   863  000049                     ?___fltol:
   864                           	callstack 0
   865  000049                     ___fltol@f1:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x48
   869  000049                     	ds	1
   870  00004A                     ??_vfpfcnvrt:
   871                           
   872                           ; 1 bytes @ 0x49
   873  00004A                     	ds	3
   874  00004D                     ??___fltol:
   875                           
   876                           ; 1 bytes @ 0x4C
   877  00004D                     	ds	1
   878  00004E                     vfprintf@cfmt:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x4D
   882  00004E                     	ds	3
   883  000051                     ___fltol@sign1:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x50
   887  000051                     	ds	1
   888  000052                     ___fltol@exp1:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x51
   892  000052                     	ds	1
   893  000053                     ?___awmod:
   894                           	callstack 0
   895  000053                     ___awmod@dividend:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x52
   899  000053                     	ds	2
   900  000055                     ___awmod@divisor:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x54
   904  000055                     	ds	2
   905  000057                     
   906                           ; 1 bytes @ 0x56
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 12 in file "main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   926 ;;      Params:         0       0       0       0       0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0       0       0
   928 ;;      Temps:          0       2       0       0       0       0       0       0       0
   929 ;;      Totals:         0       2       0       0       0       0       0       0       0
   930 ;;Total ram usage:        2 bytes
   931 ;; Hardware stack levels required when called:   12
   932 ;; This function calls:
   933 ;;		_appGetElements
   934 ;;		_appInit
   935 ;;		_appStateInitial
   936 ;;		_appStateRecolectData
   937 ;;		_warning
   938 ;; This function is called by:
   939 ;;		Startup code after reset
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text0
   944  002EAA                     __ptext0:
   945                           	callstack 0
   946  002EAA                     _main:
   947                           	callstack 19
   948  002EAA                     
   949                           ;main.c: 14:     TRISB = 0xF0;
   950  002EAA  0EF0               	movlw	240
   951  002EAC  6E93               	movwf	147,c	;volatile
   952  002EAE                     
   953                           ;main.c: 15:     INTCON2bits.RBPU = 0;
   954  002EAE  9EF1               	bcf	241,7,c	;volatile
   955  002EB0                     
   956                           ;main.c: 16:     TRISAbits.TRISA2 = 0;
   957  002EB0  9492               	bcf	146,2,c	;volatile
   958  002EB2                     
   959                           ;main.c: 17:     TRISAbits.TRISA5 = 0;
   960  002EB2  9A92               	bcf	146,5,c	;volatile
   961  002EB4                     
   962                           ;main.c: 18:     appInit();
   963  002EB4  ECB5  F019         	call	_appInit	;wreg free
   964  002EB8                     l4831:
   965                           
   966                           ;main.c: 20:     {;main.c: 21:         LATAbits.LA2= !LATAbits.LA2;
   967  002EB8  A489               	btfss	137,2,c	;volatile
   968  002EBA  EF61  F017         	goto	u4731
   969  002EBE  EF66  F017         	goto	u4730
   970  002EC2                     u4731:
   971  002EC2  0100               	movlb	0	; () banked
   972  002EC4  6B8C               	clrf	??_main& (0+255),b
   973  002EC6  2B8C               	incf	??_main& (0+255),f,b
   974  002EC8  EF68  F017         	goto	u4748
   975  002ECC                     u4730:
   976  002ECC  0100               	movlb	0	; () banked
   977  002ECE  6B8C               	clrf	??_main& (0+255),b
   978  002ED0                     u4748:
   979  002ED0  478C               	rlncf	??_main& (0+255),f,b
   980  002ED2  478C               	rlncf	??_main& (0+255),f,b
   981  002ED4  5089               	movf	137,w,c	;volatile
   982  002ED6  198C               	xorwf	??_main& (0+255),w,b
   983  002ED8  0BFB               	andlw	-5
   984  002EDA  198C               	xorwf	??_main& (0+255),w,b
   985  002EDC  6E89               	movwf	137,c	;volatile
   986  002EDE                     
   987                           ; BSR set to: 0
   988                           ;main.c: 22:         _delay((unsigned long)((100)*(12000000/4000.0)));
   989  002EDE  0E02               	movlw	2
   990  002EE0  0100               	movlb	0	; () banked
   991  002EE2  6F8D               	movwf	(??_main+1)& (0+255),b
   992  002EE4  0E86               	movlw	134
   993  002EE6  6F8C               	movwf	??_main& (0+255),b
   994  002EE8  0E99               	movlw	153
   995  002EEA                     u4827:
   996  002EEA  2EE8               	decfsz	wreg,f,c
   997  002EEC  D7FE               	bra	u4827
   998  002EEE  2F8C               	decfsz	??_main& (0+255),f,b
   999  002EF0  D7FC               	bra	u4827
  1000  002EF2  2F8D               	decfsz	(??_main+1)& (0+255),f,b
  1001  002EF4  D7FA               	bra	u4827
  1002  002EF6                     
  1003                           ;main.c: 23:         datos.nextFunc();
  1004  002EF6  EE20  F0CF         	lfsr	2,_datos+23
  1005  002EFA  D802               	call	u4758
  1006  002EFC  EF8A  F017         	goto	u4759
  1007  002F00                     u4758:
  1008  002F00  0005               	push	
  1009  002F02  6EFA               	movwf	pclath,c
  1010  002F04  50DE               	movf	postinc2,w,c
  1011  002F06  6EFD               	movwf	tosl,c
  1012  002F08  50DE               	movf	postinc2,w,c
  1013  002F0A  6EFE               	movwf	tosh,c
  1014  002F0C  50F8               	movf	tblptru,w,c
  1015  002F0E  6EFF               	movwf	tosu,c
  1016  002F10  50FA               	movf	pclath,w,c
  1017  002F12  0012               	return		;indir
  1018  002F14                     u4759:
  1019  002F14  EF5C  F017         	goto	l4831
  1020  002F18  EF5E  F000         	goto	start
  1021  002F1C                     __end_of_main:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _appGetElements *****************
  1025 ;; Defined at:
  1026 ;;		line 69 in file "app.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1040 ;;      Params:         0       0       0       0       0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1042 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1043 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1044 ;;Total ram usage:        2 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:   11
  1047 ;; This function calls:
  1048 ;;		_Lcd_Cmd
  1049 ;;		_appSubGetData
  1050 ;;		_appSubGiveElemts
  1051 ;;		_appTimerStart
  1052 ;;		_appTimerStop
  1053 ;; This function is called by:
  1054 ;;		_isrL
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text1
  1060  002F1C                     __ptext1:
  1061                           	callstack 0
  1062  002F1C                     _appGetElements:
  1063                           	callstack 19
  1064  002F1C                     
  1065                           ;app.c: 71:     datos.state = 2;
  1066  002F1C  0E02               	movlw	2
  1067  002F1E  0100               	movlb	0	; () banked
  1068  002F20  6FBB               	movwf	(_datos+3)& (0+255),b
  1069  002F22                     
  1070                           ; BSR set to: 0
  1071                           ;app.c: 72:     appTimerStop();
  1072  002F22  EC7E  F01A         	call	_appTimerStop	;wreg free
  1073  002F26                     
  1074                           ;app.c: 73:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1075  002F26  0E01               	movlw	1
  1076  002F28  EC6E  F012         	call	_Lcd_Cmd
  1077  002F2C  0E02               	movlw	2
  1078  002F2E  0100               	movlb	0	; () banked
  1079  002F30  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
  1080  002F32  0E86               	movlw	134
  1081  002F34  6F89               	movwf	??_appGetElements& (0+255),b
  1082  002F36  0E99               	movlw	153
  1083  002F38                     u4837:
  1084  002F38  2EE8               	decfsz	wreg,f,c
  1085  002F3A  D7FE               	bra	u4837
  1086  002F3C  2F89               	decfsz	??_appGetElements& (0+255),f,b
  1087  002F3E  D7FC               	bra	u4837
  1088  002F40  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1089  002F42  D7FA               	bra	u4837
  1090  002F44                     
  1091                           ;app.c: 74:     appSubGetData(&datos);
  1092  002F44  0EB8               	movlw	low _datos
  1093  002F46  0100               	movlb	0	; () banked
  1094  002F48  6F84               	movwf	appSubGetData@data_Inout& (0+255),b
  1095  002F4A  0E00               	movlw	high _datos
  1096  002F4C  6F85               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1097  002F4E  EC14  F014         	call	_appSubGetData	;wreg free
  1098  002F52                     
  1099                           ;app.c: 75:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1100  002F52  0E01               	movlw	1
  1101  002F54  EC6E  F012         	call	_Lcd_Cmd
  1102  002F58  0E02               	movlw	2
  1103  002F5A  0100               	movlb	0	; () banked
  1104  002F5C  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
  1105  002F5E  0E86               	movlw	134
  1106  002F60  6F89               	movwf	??_appGetElements& (0+255),b
  1107  002F62  0E99               	movlw	153
  1108  002F64                     u4847:
  1109  002F64  2EE8               	decfsz	wreg,f,c
  1110  002F66  D7FE               	bra	u4847
  1111  002F68  2F89               	decfsz	??_appGetElements& (0+255),f,b
  1112  002F6A  D7FC               	bra	u4847
  1113  002F6C  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1114  002F6E  D7FA               	bra	u4847
  1115  002F70                     
  1116                           ;app.c: 76:     appSubGiveElemts(&datos);
  1117  002F70  0EB8               	movlw	low _datos
  1118  002F72  6E0D               	movwf	appSubGiveElemts@data^0,c
  1119  002F74  0E00               	movlw	high _datos
  1120  002F76  6E0E               	movwf	(appSubGiveElemts@data+1)^0,c
  1121  002F78  EC62  F01A         	call	_appSubGiveElemts	;wreg free
  1122  002F7C                     
  1123                           ;app.c: 77:     datos.nextFunc = appStateInitial;
  1124  002F7C  0E92               	movlw	low _appStateInitial
  1125  002F7E  0100               	movlb	0	; () banked
  1126  002F80  6FCF               	movwf	(_datos+23)& (0+255),b
  1127  002F82  0E31               	movlw	high _appStateInitial
  1128  002F84  6FD0               	movwf	(_datos+24)& (0+255),b
  1129  002F86                     
  1130                           ; BSR set to: 0
  1131                           ;app.c: 78:     appTimerStart();
  1132  002F86  EC6D  F01A         	call	_appTimerStart	;wreg free
  1133  002F8A  0012               	return		;funcret
  1134  002F8C                     __end_of_appGetElements:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _appStateRecolectData *****************
  1138 ;; Defined at:
  1139 ;;		line 35 in file "app.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:   11
  1160 ;; This function calls:
  1161 ;;		_appADC
  1162 ;;		_appBat
  1163 ;;		_appCounterStop
  1164 ;;		_appElemts
  1165 ;;		_setServo
  1166 ;; This function is called by:
  1167 ;;		_isrL
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text2
  1173  002D94                     __ptext2:
  1174                           	callstack 0
  1175  002D94                     _appStateRecolectData:
  1176                           	callstack 19
  1177  002D94                     
  1178                           ;app.c: 37:     appADC(&datos);
  1179  002D94  0EB8               	movlw	low _datos
  1180  002D96  0100               	movlb	0	; () banked
  1181  002D98  6F84               	movwf	appADC@data& (0+255),b
  1182  002D9A  0E00               	movlw	high _datos
  1183  002D9C  6F85               	movwf	(appADC@data+1)& (0+255),b
  1184  002D9E  ECF8  F00D         	call	_appADC	;wreg free
  1185                           
  1186                           ;app.c: 38:     appBat(&datos);
  1187  002DA2  0EB8               	movlw	low _datos
  1188  002DA4  0100               	movlb	0	; () banked
  1189  002DA6  6F84               	movwf	appBat@data& (0+255),b
  1190  002DA8  0E00               	movlw	high _datos
  1191  002DAA  6F85               	movwf	(appBat@data+1)& (0+255),b
  1192  002DAC  EC2A  F00C         	call	_appBat	;wreg free
  1193                           
  1194                           ;app.c: 39:     appElemts(&datos.elements);
  1195  002DB0  0EB9               	movlw	low (_datos+1)
  1196  002DB2  0100               	movlb	0	; () banked
  1197  002DB4  6F84               	movwf	appElemts@elements& (0+255),b
  1198  002DB6  0E00               	movlw	high (_datos+1)
  1199  002DB8  6F85               	movwf	(appElemts@elements+1)& (0+255),b
  1200  002DBA  EC11  F019         	call	_appElemts	;wreg free
  1201  002DBE                     
  1202                           ;app.c: 40:     if(datos.state == 2)
  1203  002DBE  0E02               	movlw	2
  1204  002DC0  0100               	movlb	0	; () banked
  1205  002DC2  19BB               	xorwf	(_datos+3)& (0+255),w,b
  1206  002DC4  A4D8               	btfss	status,2,c
  1207  002DC6  EFE7  F016         	goto	u4711
  1208  002DCA  EFE9  F016         	goto	u4710
  1209  002DCE                     u4711:
  1210  002DCE  EF0D  F017         	goto	l4799
  1211  002DD2                     u4710:
  1212  002DD2                     
  1213                           ; BSR set to: 0
  1214                           ;app.c: 41:     {;app.c: 42:         if(datos.elements == TMR0)
  1215  002DD2  50D6               	movf	214,w,c	;volatile
  1216  002DD4  19B9               	xorwf	(_datos+1)& (0+255),w,b
  1217  002DD6  E107               	bnz	u4721
  1218  002DD8  50D7               	movf	215,w,c	;volatile
  1219  002DDA  19BA               	xorwf	(_datos+2)& (0+255),w,b
  1220  002DDC  A4D8               	btfss	status,2,c
  1221  002DDE  EFF3  F016         	goto	u4721
  1222  002DE2  EFF5  F016         	goto	u4720
  1223  002DE6                     u4721:
  1224  002DE6  EF0D  F017         	goto	l4799
  1225  002DEA                     u4720:
  1226  002DEA                     
  1227                           ; BSR set to: 0
  1228                           ;app.c: 43:         {;app.c: 44:             datos.elements = (int16_t)TMR0;
  1229  002DEA  CFD6 F0B9          	movff	4054,_datos+1	;volatile
  1230  002DEE  CFD7 F0BA          	movff	4055,_datos+2	;volatile
  1231  002DF2                     
  1232                           ; BSR set to: 0
  1233                           ;app.c: 45:             appCounterStop();
  1234  002DF2  EC7C  F01A         	call	_appCounterStop	;wreg free
  1235  002DF6                     
  1236                           ;app.c: 46:             datos.state = 0;
  1237  002DF6  0E00               	movlw	0
  1238  002DF8  0100               	movlb	0	; () banked
  1239  002DFA  6FBB               	movwf	(_datos+3)& (0+255),b
  1240  002DFC                     
  1241                           ; BSR set to: 0
  1242                           ;app.c: 47:             setServo(33,10,2);
  1243  002DFC  0E0A               	movlw	10
  1244  002DFE  6E09               	movwf	setServo@pulsos^0,c
  1245  002E00  0E02               	movlw	2
  1246  002E02  6E0A               	movwf	setServo@pin^0,c
  1247  002E04  0E21               	movlw	33
  1248  002E06  EC21  F01A         	call	_setServo
  1249  002E0A                     
  1250                           ;app.c: 48:             LATAbits.LA5 = 0;
  1251  002E0A  9A89               	bcf	137,5,c	;volatile
  1252  002E0C                     
  1253                           ;app.c: 49:             setServo(45,10,0);
  1254  002E0C  0E0A               	movlw	10
  1255  002E0E  6E09               	movwf	setServo@pulsos^0,c
  1256  002E10  0E00               	movlw	0
  1257  002E12  6E0A               	movwf	setServo@pin^0,c
  1258  002E14  0E2D               	movlw	45
  1259  002E16  EC21  F01A         	call	_setServo
  1260  002E1A                     l4799:
  1261                           
  1262                           ;app.c: 52:     datos.nextFunc = appStateInitial;
  1263  002E1A  0E92               	movlw	low _appStateInitial
  1264  002E1C  0100               	movlb	0	; () banked
  1265  002E1E  6FCF               	movwf	(_datos+23)& (0+255),b
  1266  002E20  0E31               	movlw	high _appStateInitial
  1267  002E22  6FD0               	movwf	(_datos+24)& (0+255),b
  1268  002E24                     
  1269                           ; BSR set to: 0
  1270  002E24  0012               	return		;funcret
  1271  002E26                     __end_of_appStateRecolectData:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _appStateInitial *****************
  1275 ;; Defined at:
  1276 ;;		line 54 in file "app.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    4
  1297 ;; This function calls:
  1298 ;;		_setServo
  1299 ;;		_teclado
  1300 ;; This function is called by:
  1301 ;;		_appStateRecolectData
  1302 ;;		_appGetElements
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text3
  1308  003192                     __ptext3:
  1309                           	callstack 0
  1310  003192                     _appStateInitial:
  1311                           	callstack 26
  1312  003192                     
  1313                           ;app.c: 57:     teclado(&datos.character);
  1314  003192  0EBE               	movlw	low (_datos+6)
  1315  003194  6E05               	movwf	teclado@valor^0,c
  1316  003196  0E00               	movlw	high (_datos+6)
  1317  003198  6E06               	movwf	(teclado@valor+1)^0,c
  1318  00319A  EC35  F00B         	call	_teclado	;wreg free
  1319  00319E                     
  1320                           ;app.c: 58:     if(datos.character != 0)
  1321  00319E  0100               	movlb	0	; () banked
  1322  0031A0  51BE               	movf	(_datos+6)& (0+255),w,b
  1323  0031A2  B4D8               	btfsc	status,2,c
  1324  0031A4  EFD6  F018         	goto	u3811
  1325  0031A8  EFD8  F018         	goto	u3810
  1326  0031AC                     u3811:
  1327  0031AC  EFDE  F018         	goto	l348
  1328  0031B0                     u3810:
  1329  0031B0                     
  1330                           ; BSR set to: 0
  1331                           ;app.c: 59:     {;app.c: 60:         datos.state = 1;
  1332  0031B0  0E01               	movlw	1
  1333  0031B2  6FBB               	movwf	(_datos+3)& (0+255),b
  1334                           
  1335                           ;app.c: 61:         datos.character = 0;
  1336  0031B4  0E00               	movlw	0
  1337  0031B6  6FBE               	movwf	(_datos+6)& (0+255),b
  1338                           
  1339                           ;app.c: 62:     }
  1340  0031B8  EFEC  F018         	goto	l351
  1341  0031BC                     l348:
  1342                           
  1343                           ; BSR set to: 0
  1344  0031BC  A680               	btfss	128,3,c	;volatile
  1345  0031BE  EFE3  F018         	goto	u3821
  1346  0031C2  EFE5  F018         	goto	u3820
  1347  0031C6                     u3821:
  1348  0031C6  EFEC  F018         	goto	l351
  1349  0031CA                     u3820:
  1350  0031CA                     
  1351                           ; BSR set to: 0
  1352                           ;app.c: 64:     {;app.c: 65:         setServo(33,10,0);
  1353  0031CA  0E0A               	movlw	10
  1354  0031CC  6E09               	movwf	setServo@pulsos^0,c
  1355  0031CE  0E00               	movlw	0
  1356  0031D0  6E0A               	movwf	setServo@pin^0,c
  1357  0031D2  0E21               	movlw	33
  1358  0031D4  EC21  F01A         	call	_setServo
  1359  0031D8                     l351:
  1360  0031D8  0012               	return		;funcret
  1361  0031DA                     __end_of_appStateInitial:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _warning *****************
  1365 ;; Defined at:
  1366 ;;		line 110 in file "app.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1382 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    4
  1387 ;; This function calls:
  1388 ;;		_Lcd_Cmd
  1389 ;;		_Lcd_Out
  1390 ;; This function is called by:
  1391 ;;		_isrH
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text4
  1397  0031DA                     __ptext4:
  1398                           	callstack 0
  1399  0031DA                     _warning:
  1400                           	callstack 26
  1401  0031DA                     
  1402                           ;app.c: 112:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1403  0031DA  0E01               	movlw	1
  1404  0031DC  EC6E  F012         	call	_Lcd_Cmd
  1405  0031E0  0E02               	movlw	2
  1406  0031E2  6E10               	movwf	(??_warning+1)^0,c
  1407  0031E4  0E86               	movlw	134
  1408  0031E6  6E0F               	movwf	??_warning^0,c
  1409  0031E8  0E99               	movlw	153
  1410  0031EA                     u4857:
  1411  0031EA  2EE8               	decfsz	wreg,f,c
  1412  0031EC  D7FE               	bra	u4857
  1413  0031EE  2E0F               	decfsz	??_warning^0,f,c
  1414  0031F0  D7FC               	bra	u4857
  1415  0031F2  2E10               	decfsz	(??_warning+1)^0,f,c
  1416  0031F4  D7FA               	bra	u4857
  1417  0031F6  F000               	nop	
  1418  0031F8                     l4113:
  1419                           
  1420                           ;app.c: 115:     {;app.c: 116:         Lcd_Out(1,0, (const int8_t*)"Sin vacunas");
  1421  0031F8  0E00               	movlw	0
  1422  0031FA  6E08               	movwf	Lcd_Out@x^0,c
  1423  0031FC  0E2E               	movlw	low STR_8
  1424  0031FE  6E09               	movwf	Lcd_Out@buffer^0,c
  1425  003200  0E08               	movlw	high STR_8
  1426  003202  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  1427  003204  0E01               	movlw	1
  1428  003206  EC93  F014         	call	_Lcd_Out
  1429  00320A                     
  1430                           ;app.c: 117:         Lcd_Out(2,0, (const int8_t*)"Recarga Porfavor");
  1431  00320A  0E00               	movlw	0
  1432  00320C  6E08               	movwf	Lcd_Out@x^0,c
  1433  00320E  0E01               	movlw	low STR_9
  1434  003210  6E09               	movwf	Lcd_Out@buffer^0,c
  1435  003212  0E08               	movlw	high STR_9
  1436  003214  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  1437  003216  0E02               	movlw	2
  1438  003218  EC93  F014         	call	_Lcd_Out
  1439  00321C  EFFC  F018         	goto	l4113
  1440  003220  0012               	return		;funcret
  1441  003222                     __end_of_warning:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function _appElemts *****************
  1445 ;; Defined at:
  1446 ;;		line 151 in file "servo.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  elements        2   36[BANK0 ] PTR const short 
  1449 ;;		 -> datos.elements(2), datos(25), 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  dataout         6   38[BANK0 ] unsigned char [6]
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1461 ;;      Params:         0       2       0       0       0       0       0       0       0
  1462 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1464 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1465 ;;Total ram usage:        8 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:   10
  1468 ;; This function calls:
  1469 ;;		_Lcd_Out
  1470 ;;		_sprintf
  1471 ;; This function is called by:
  1472 ;;		_appStateRecolectData
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text5
  1477  003222                     __ptext5:
  1478                           	callstack 0
  1479  003222                     _appElemts:
  1480                           	callstack 19
  1481  003222                     
  1482                           ;servo.c: 151: void appElemts(const int16_t * elements);servo.c: 152: {;servo.c: 153:   
      +                            uint8_t dataout[6] = {0};
  1483  003222  EE20  F086         	lfsr	2,appElemts@dataout
  1484  003226  0E05               	movlw	5
  1485  003228                     u4671:
  1486  003228  6ADE               	clrf	postinc2,c
  1487  00322A  06E8               	decf	wreg,f,c
  1488  00322C  E2FD               	bc	u4671
  1489  00322E                     
  1490                           ;servo.c: 154:     sprintf((char *)dataout,"#:%d",(256 - (TMR0)));
  1491  00322E  0E86               	movlw	low appElemts@dataout
  1492  003230  0100               	movlb	0	; () banked
  1493  003232  6F72               	movwf	sprintf@s& (0+255),b
  1494  003234  0E00               	movlw	high appElemts@dataout
  1495  003236  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1496  003238  0E55               	movlw	low STR_5
  1497  00323A  6F74               	movwf	sprintf@fmt& (0+255),b
  1498  00323C  0E08               	movlw	high STR_5
  1499  00323E  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1500  003240  50D6               	movf	214,w,c	;volatile
  1501  003242  0800               	sublw	0
  1502  003244  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1503  003246  50D7               	movf	215,w,c	;volatile
  1504  003248  A0D8               	btfss	status,0,c
  1505  00324A  2AE8               	incf	wreg,f,c
  1506  00324C  0801               	sublw	1
  1507  00324E  6F77               	movwf	(?_sprintf+5)& (0+255),b
  1508  003250  EC52  F018         	call	_sprintf	;wreg free
  1509  003254                     
  1510                           ;servo.c: 155:     Lcd_Out(2,10, (int8_t*)dataout);
  1511  003254  0E0A               	movlw	10
  1512  003256  6E08               	movwf	Lcd_Out@x^0,c
  1513  003258  0E86               	movlw	low appElemts@dataout
  1514  00325A  6E09               	movwf	Lcd_Out@buffer^0,c
  1515  00325C  0E00               	movlw	high appElemts@dataout
  1516  00325E  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  1517  003260  0E02               	movlw	2
  1518  003262  EC93  F014         	call	_Lcd_Out
  1519  003266  0012               	return		;funcret
  1520  003268                     __end_of_appElemts:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _appCounterStop *****************
  1524 ;; Defined at:
  1525 ;;		line 146 in file "servo.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		None
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    2
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_appStateRecolectData
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text6
  1554  0034F8                     __ptext6:
  1555                           	callstack 0
  1556  0034F8                     _appCounterStop:
  1557                           	callstack 27
  1558  0034F8                     
  1559                           ;servo.c: 148:     T0CONbits.TMR0ON = 0;
  1560  0034F8  9ED5               	bcf	213,7,c	;volatile
  1561  0034FA  0012               	return		;funcret
  1562  0034FC                     __end_of_appCounterStop:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _appBat *****************
  1566 ;; Defined at:
  1567 ;;		line 73 in file "adc.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  data            2   36[BANK0 ] PTR struct _state
  1570 ;;		 -> datos(25), 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:         0       2       0       0       0       0       0       0       0
  1583 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1584 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1585 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1586 ;;Total ram usage:        8 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:   10
  1589 ;; This function calls:
  1590 ;;		_Lcd_Out
  1591 ;;		___fldiv
  1592 ;;		___flmul
  1593 ;;		___fltol
  1594 ;;		___xxtofl
  1595 ;;		_adcGetValue
  1596 ;;		_memset
  1597 ;;		_sprintf
  1598 ;; This function is called by:
  1599 ;;		_appStateRecolectData
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text7
  1604  001854                     __ptext7:
  1605                           	callstack 0
  1606  001854                     _appBat:
  1607                           	callstack 19
  1608  001854                     
  1609                           ;adc.c: 73: void appBat(StateMachine *data);adc.c: 74: {;adc.c: 75:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1610  001854  0E07               	movlw	7
  1611  001856  0100               	movlb	0	; () banked
  1612  001858  2584               	addwf	appBat@data& (0+255),w,b
  1613  00185A  6E05               	movwf	memset@dest^0,c
  1614  00185C  0E00               	movlw	0
  1615  00185E  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1616  001860  6E06               	movwf	(memset@dest+1)^0,c
  1617  001862  0E00               	movlw	0
  1618  001864  6E08               	movwf	(memset@c+1)^0,c
  1619  001866  0E00               	movlw	0
  1620  001868  6E07               	movwf	memset@c^0,c
  1621  00186A  0E00               	movlw	0
  1622  00186C  6E0A               	movwf	(memset@n+1)^0,c
  1623  00186E  0E10               	movlw	16
  1624  001870  6E09               	movwf	memset@n^0,c
  1625  001872  EC5A  F010         	call	_memset	;wreg free
  1626                           
  1627                           ;adc.c: 80:     data->bat = adcGetValue(1);
  1628  001876  0E01               	movlw	1
  1629  001878  EC97  F019         	call	_adcGetValue
  1630  00187C  0100               	movlb	0	; () banked
  1631  00187E  EE20 F004          	lfsr	2,4
  1632  001882  5184               	movf	appBat@data& (0+255),w,b
  1633  001884  26D9               	addwf	fsr2l,f,c
  1634  001886  5185               	movf	(appBat@data+1)& (0+255),w,b
  1635  001888  22DA               	addwfc	fsr2h,f,c
  1636  00188A  C005  FFDE         	movff	?_adcGetValue,postinc2
  1637  00188E  C006  FFDD         	movff	?_adcGetValue+1,postdec2
  1638  001892                     
  1639                           ; BSR set to: 0
  1640                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1641  001892  0E00               	movlw	0
  1642  001894  6E34               	movwf	___fldiv@a^0,c
  1643  001896  0E00               	movlw	0
  1644  001898  6E35               	movwf	(___fldiv@a+1)^0,c
  1645  00189A  0E80               	movlw	128
  1646  00189C  6E36               	movwf	(___fldiv@a+2)^0,c
  1647  00189E  0E44               	movlw	68
  1648  0018A0  6E37               	movwf	(___fldiv@a+3)^0,c
  1649  0018A2  0E00               	movlw	0
  1650  0018A4  6E1B               	movwf	___flmul@a^0,c
  1651  0018A6  0E00               	movlw	0
  1652  0018A8  6E1C               	movwf	(___flmul@a+1)^0,c
  1653  0018AA  0EA0               	movlw	160
  1654  0018AC  6E1D               	movwf	(___flmul@a+2)^0,c
  1655  0018AE  0E40               	movlw	64
  1656  0018B0  6E1E               	movwf	(___flmul@a+3)^0,c
  1657  0018B2  EE20 F004          	lfsr	2,4
  1658  0018B6  5184               	movf	appBat@data& (0+255),w,b
  1659  0018B8  26D9               	addwf	fsr2l,f,c
  1660  0018BA  5185               	movf	(appBat@data+1)& (0+255),w,b
  1661  0018BC  22DA               	addwfc	fsr2h,f,c
  1662  0018BE  CFDE F086          	movff	postinc2,??_appBat
  1663  0018C2  CFDD F087          	movff	postdec2,??_appBat+1
  1664  0018C6  C086  F009         	movff	??_appBat,___xxtofl@val
  1665  0018CA  C087  F00A         	movff	??_appBat+1,___xxtofl@val+1
  1666  0018CE  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1667  0018D0  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1668  0018D2  0E00               	movlw	0
  1669  0018D4  EC1E  F00D         	call	___xxtofl
  1670  0018D8  C009  F017         	movff	?___xxtofl,___flmul@b
  1671  0018DC  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  1672  0018E0  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  1673  0018E4  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  1674  0018E8  EC2E  F004         	call	___flmul	;wreg free
  1675  0018EC  C017  F030         	movff	?___flmul,___fldiv@b
  1676  0018F0  C018  F031         	movff	?___flmul+1,___fldiv@b+1
  1677  0018F4  C019  F032         	movff	?___flmul+2,___fldiv@b+2
  1678  0018F8  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
  1679  0018FC  EC43  F006         	call	___fldiv	;wreg free
  1680  001900  C030  F088         	movff	?___fldiv,_appBat$2594
  1681  001904  C031  F089         	movff	?___fldiv+1,_appBat$2594+1
  1682  001908  C032  F08A         	movff	?___fldiv+2,_appBat$2594+2
  1683  00190C  C033  F08B         	movff	?___fldiv+3,_appBat$2594+3
  1684  001910                     
  1685                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1686  001910  0E00               	movlw	0
  1687  001912  6E1B               	movwf	___flmul@a^0,c
  1688  001914  0E00               	movlw	0
  1689  001916  6E1C               	movwf	(___flmul@a+1)^0,c
  1690  001918  0EC8               	movlw	200
  1691  00191A  6E1D               	movwf	(___flmul@a+2)^0,c
  1692  00191C  0E42               	movlw	66
  1693  00191E  6E1E               	movwf	(___flmul@a+3)^0,c
  1694  001920  C088  F017         	movff	_appBat$2594,___flmul@b
  1695  001924  C089  F018         	movff	_appBat$2594+1,___flmul@b+1
  1696  001928  C08A  F019         	movff	_appBat$2594+2,___flmul@b+2
  1697  00192C  C08B  F01A         	movff	_appBat$2594+3,___flmul@b+3
  1698  001930  EC2E  F004         	call	___flmul	;wreg free
  1699  001934  C017  F049         	movff	?___flmul,___fltol@f1
  1700  001938  C018  F04A         	movff	?___flmul+1,___fltol@f1+1
  1701  00193C  C019  F04B         	movff	?___flmul+2,___fltol@f1+2
  1702  001940  C01A  F04C         	movff	?___flmul+3,___fltol@f1+3
  1703  001944  EC91  F013         	call	___fltol	;wreg free
  1704  001948  0100               	movlb	0	; () banked
  1705  00194A  EE20 F004          	lfsr	2,4
  1706  00194E  5184               	movf	appBat@data& (0+255),w,b
  1707  001950  26D9               	addwf	fsr2l,f,c
  1708  001952  5185               	movf	(appBat@data+1)& (0+255),w,b
  1709  001954  22DA               	addwfc	fsr2h,f,c
  1710  001956  C049  FFDE         	movff	?___fltol,postinc2
  1711  00195A  C04A  FFDD         	movff	?___fltol+1,postdec2
  1712  00195E                     
  1713                           ; BSR set to: 0
  1714                           ;adc.c: 82:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  1715  00195E  0E00               	movlw	0
  1716  001960  6E34               	movwf	___fldiv@a^0,c
  1717  001962  0E00               	movlw	0
  1718  001964  6E35               	movwf	(___fldiv@a+1)^0,c
  1719  001966  0EFA               	movlw	250
  1720  001968  6E36               	movwf	(___fldiv@a+2)^0,c
  1721  00196A  0E43               	movlw	67
  1722  00196C  6E37               	movwf	(___fldiv@a+3)^0,c
  1723  00196E  0E00               	movlw	0
  1724  001970  6E1B               	movwf	___flmul@a^0,c
  1725  001972  0E00               	movlw	0
  1726  001974  6E1C               	movwf	(___flmul@a+1)^0,c
  1727  001976  0EC8               	movlw	200
  1728  001978  6E1D               	movwf	(___flmul@a+2)^0,c
  1729  00197A  0E42               	movlw	66
  1730  00197C  6E1E               	movwf	(___flmul@a+3)^0,c
  1731  00197E  EE20 F004          	lfsr	2,4
  1732  001982  5184               	movf	appBat@data& (0+255),w,b
  1733  001984  26D9               	addwf	fsr2l,f,c
  1734  001986  5185               	movf	(appBat@data+1)& (0+255),w,b
  1735  001988  22DA               	addwfc	fsr2h,f,c
  1736  00198A  CFDE F086          	movff	postinc2,??_appBat
  1737  00198E  CFDD F087          	movff	postdec2,??_appBat+1
  1738  001992  C086  F009         	movff	??_appBat,___xxtofl@val
  1739  001996  C087  F00A         	movff	??_appBat+1,___xxtofl@val+1
  1740  00199A  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1741  00199C  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1742  00199E  0E00               	movlw	0
  1743  0019A0  EC1E  F00D         	call	___xxtofl
  1744  0019A4  C009  F017         	movff	?___xxtofl,___flmul@b
  1745  0019A8  C00A  F018         	movff	?___xxtofl+1,___flmul@b+1
  1746  0019AC  C00B  F019         	movff	?___xxtofl+2,___flmul@b+2
  1747  0019B0  C00C  F01A         	movff	?___xxtofl+3,___flmul@b+3
  1748  0019B4  EC2E  F004         	call	___flmul	;wreg free
  1749  0019B8  C017  F030         	movff	?___flmul,___fldiv@b
  1750  0019BC  C018  F031         	movff	?___flmul+1,___fldiv@b+1
  1751  0019C0  C019  F032         	movff	?___flmul+2,___fldiv@b+2
  1752  0019C4  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
  1753  0019C8  EC43  F006         	call	___fldiv	;wreg free
  1754  0019CC  C030  F049         	movff	?___fldiv,___fltol@f1
  1755  0019D0  C031  F04A         	movff	?___fldiv+1,___fltol@f1+1
  1756  0019D4  C032  F04B         	movff	?___fldiv+2,___fltol@f1+2
  1757  0019D8  C033  F04C         	movff	?___fldiv+3,___fltol@f1+3
  1758  0019DC  EC91  F013         	call	___fltol	;wreg free
  1759  0019E0  0100               	movlb	0	; () banked
  1760  0019E2  EE20 F004          	lfsr	2,4
  1761  0019E6  5184               	movf	appBat@data& (0+255),w,b
  1762  0019E8  26D9               	addwf	fsr2l,f,c
  1763  0019EA  5185               	movf	(appBat@data+1)& (0+255),w,b
  1764  0019EC  22DA               	addwfc	fsr2h,f,c
  1765  0019EE  C049  FFDE         	movff	?___fltol,postinc2
  1766  0019F2  C04A  FFDD         	movff	?___fltol+1,postdec2
  1767  0019F6                     
  1768                           ; BSR set to: 0
  1769                           ;adc.c: 83:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  1770  0019F6  0E07               	movlw	7
  1771  0019F8  2584               	addwf	appBat@data& (0+255),w,b
  1772  0019FA  6F72               	movwf	sprintf@s& (0+255),b
  1773  0019FC  0E00               	movlw	0
  1774  0019FE  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1775  001A00  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1776  001A02  0E46               	movlw	low STR_2
  1777  001A04  6F74               	movwf	sprintf@fmt& (0+255),b
  1778  001A06  0E08               	movlw	high STR_2
  1779  001A08  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1780  001A0A  EE20 F004          	lfsr	2,4
  1781  001A0E  5184               	movf	appBat@data& (0+255),w,b
  1782  001A10  26D9               	addwf	fsr2l,f,c
  1783  001A12  5185               	movf	(appBat@data+1)& (0+255),w,b
  1784  001A14  22DA               	addwfc	fsr2h,f,c
  1785  001A16  CFDE F076          	movff	postinc2,?_sprintf+4
  1786  001A1A  CFDD F077          	movff	postdec2,?_sprintf+5
  1787  001A1E  EC52  F018         	call	_sprintf	;wreg free
  1788  001A22                     
  1789                           ;adc.c: 84:     Lcd_Out(2,0, (int8_t*)data->display);
  1790  001A22  0E00               	movlw	0
  1791  001A24  6E08               	movwf	Lcd_Out@x^0,c
  1792  001A26  0E07               	movlw	7
  1793  001A28  0100               	movlb	0	; () banked
  1794  001A2A  2584               	addwf	appBat@data& (0+255),w,b
  1795  001A2C  6E09               	movwf	Lcd_Out@buffer^0,c
  1796  001A2E  0E00               	movlw	0
  1797  001A30  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1798  001A32  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  1799  001A34  0E02               	movlw	2
  1800  001A36  EC93  F014         	call	_Lcd_Out
  1801  001A3A  0012               	return		;funcret
  1802  001A3C                     __end_of_appBat:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _appADC *****************
  1806 ;; Defined at:
  1807 ;;		line 55 in file "adc.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  data            2   36[BANK0 ] PTR struct _state
  1810 ;;		 -> datos(25), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  lm35val         4   38[BANK0 ] float 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1822 ;;      Params:         0       2       0       0       0       0       0       0       0
  1823 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1825 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1826 ;;Total ram usage:        6 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:   10
  1829 ;; This function calls:
  1830 ;;		_Lcd_Out
  1831 ;;		___awmod
  1832 ;;		___fldiv
  1833 ;;		___flmul
  1834 ;;		___fltol
  1835 ;;		___xxtofl
  1836 ;;		_adcGetValue
  1837 ;;		_memset
  1838 ;;		_sprintf
  1839 ;; This function is called by:
  1840 ;;		_appStateRecolectData
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text8
  1845  001BF0                     __ptext8:
  1846                           	callstack 0
  1847  001BF0                     _appADC:
  1848                           	callstack 19
  1849  001BF0                     
  1850                           ;adc.c: 55: void appADC(StateMachine *data);adc.c: 56: {;adc.c: 57:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1851  001BF0  0E07               	movlw	7
  1852  001BF2  0100               	movlb	0	; () banked
  1853  001BF4  2584               	addwf	appADC@data& (0+255),w,b
  1854  001BF6  6E05               	movwf	memset@dest^0,c
  1855  001BF8  0E00               	movlw	0
  1856  001BFA  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1857  001BFC  6E06               	movwf	(memset@dest+1)^0,c
  1858  001BFE  0E00               	movlw	0
  1859  001C00  6E08               	movwf	(memset@c+1)^0,c
  1860  001C02  0E00               	movlw	0
  1861  001C04  6E07               	movwf	memset@c^0,c
  1862  001C06  0E00               	movlw	0
  1863  001C08  6E0A               	movwf	(memset@n+1)^0,c
  1864  001C0A  0E10               	movlw	16
  1865  001C0C  6E09               	movwf	memset@n^0,c
  1866  001C0E  EC5A  F010         	call	_memset	;wreg free
  1867  001C12                     
  1868                           ;adc.c: 58:     float lm35val = adcGetValue(0);
  1869  001C12  0E00               	movlw	0
  1870  001C14  EC97  F019         	call	_adcGetValue
  1871  001C18  C005  F009         	movff	?_adcGetValue,___xxtofl@val
  1872  001C1C  C006  F00A         	movff	?_adcGetValue+1,___xxtofl@val+1
  1873  001C20  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1874  001C22  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1875  001C24  0E00               	movlw	0
  1876  001C26  EC1E  F00D         	call	___xxtofl
  1877  001C2A  C009  F086         	movff	?___xxtofl,appADC@lm35val
  1878  001C2E  C00A  F087         	movff	?___xxtofl+1,appADC@lm35val+1
  1879  001C32  C00B  F088         	movff	?___xxtofl+2,appADC@lm35val+2
  1880  001C36  C00C  F089         	movff	?___xxtofl+3,appADC@lm35val+3
  1881  001C3A                     
  1882                           ;adc.c: 59:     lm35val = (float)((lm35val*4.88)/10.0);
  1883  001C3A  0EF6               	movlw	246
  1884  001C3C  6E1B               	movwf	___flmul@a^0,c
  1885  001C3E  0E28               	movlw	40
  1886  001C40  6E1C               	movwf	(___flmul@a+1)^0,c
  1887  001C42  0E9C               	movlw	156
  1888  001C44  6E1D               	movwf	(___flmul@a+2)^0,c
  1889  001C46  0E40               	movlw	64
  1890  001C48  6E1E               	movwf	(___flmul@a+3)^0,c
  1891  001C4A  C086  F017         	movff	appADC@lm35val,___flmul@b
  1892  001C4E  C087  F018         	movff	appADC@lm35val+1,___flmul@b+1
  1893  001C52  C088  F019         	movff	appADC@lm35val+2,___flmul@b+2
  1894  001C56  C089  F01A         	movff	appADC@lm35val+3,___flmul@b+3
  1895  001C5A  EC2E  F004         	call	___flmul	;wreg free
  1896  001C5E  C017  F030         	movff	?___flmul,___fldiv@b
  1897  001C62  C018  F031         	movff	?___flmul+1,___fldiv@b+1
  1898  001C66  C019  F032         	movff	?___flmul+2,___fldiv@b+2
  1899  001C6A  C01A  F033         	movff	?___flmul+3,___fldiv@b+3
  1900  001C6E  0E00               	movlw	0
  1901  001C70  6E34               	movwf	___fldiv@a^0,c
  1902  001C72  0E00               	movlw	0
  1903  001C74  6E35               	movwf	(___fldiv@a+1)^0,c
  1904  001C76  0E20               	movlw	32
  1905  001C78  6E36               	movwf	(___fldiv@a+2)^0,c
  1906  001C7A  0E41               	movlw	65
  1907  001C7C  6E37               	movwf	(___fldiv@a+3)^0,c
  1908  001C7E  EC43  F006         	call	___fldiv	;wreg free
  1909  001C82  C030  F086         	movff	?___fldiv,appADC@lm35val
  1910  001C86  C031  F087         	movff	?___fldiv+1,appADC@lm35val+1
  1911  001C8A  C032  F088         	movff	?___fldiv+2,appADC@lm35val+2
  1912  001C8E  C033  F089         	movff	?___fldiv+3,appADC@lm35val+3
  1913  001C92                     
  1914                           ;adc.c: 61:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  1915  001C92  0E07               	movlw	7
  1916  001C94  0100               	movlb	0	; () banked
  1917  001C96  2584               	addwf	appADC@data& (0+255),w,b
  1918  001C98  6F72               	movwf	sprintf@s& (0+255),b
  1919  001C9A  0E00               	movlw	0
  1920  001C9C  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1921  001C9E  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1922  001CA0  0E20               	movlw	low STR_1
  1923  001CA2  6F74               	movwf	sprintf@fmt& (0+255),b
  1924  001CA4  0E08               	movlw	high STR_1
  1925  001CA6  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1926  001CA8  C086  F049         	movff	appADC@lm35val,___fltol@f1
  1927  001CAC  C087  F04A         	movff	appADC@lm35val+1,___fltol@f1+1
  1928  001CB0  C088  F04B         	movff	appADC@lm35val+2,___fltol@f1+2
  1929  001CB4  C089  F04C         	movff	appADC@lm35val+3,___fltol@f1+3
  1930  001CB8  EC91  F013         	call	___fltol	;wreg free
  1931  001CBC  5049               	movf	?___fltol^0,w,c
  1932  001CBE  0100               	movlb	0	; () banked
  1933  001CC0  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1934  001CC2  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1935  001CC4  0E00               	movlw	0
  1936  001CC6  6E1B               	movwf	___flmul@a^0,c
  1937  001CC8  0E00               	movlw	0
  1938  001CCA  6E1C               	movwf	(___flmul@a+1)^0,c
  1939  001CCC  0EC8               	movlw	200
  1940  001CCE  6E1D               	movwf	(___flmul@a+2)^0,c
  1941  001CD0  0E42               	movlw	66
  1942  001CD2  6E1E               	movwf	(___flmul@a+3)^0,c
  1943  001CD4  C086  F017         	movff	appADC@lm35val,___flmul@b
  1944  001CD8  C087  F018         	movff	appADC@lm35val+1,___flmul@b+1
  1945  001CDC  C088  F019         	movff	appADC@lm35val+2,___flmul@b+2
  1946  001CE0  C089  F01A         	movff	appADC@lm35val+3,___flmul@b+3
  1947  001CE4  EC2E  F004         	call	___flmul	;wreg free
  1948  001CE8  C017  F049         	movff	?___flmul,___fltol@f1
  1949  001CEC  C018  F04A         	movff	?___flmul+1,___fltol@f1+1
  1950  001CF0  C019  F04B         	movff	?___flmul+2,___fltol@f1+2
  1951  001CF4  C01A  F04C         	movff	?___flmul+3,___fltol@f1+3
  1952  001CF8  EC91  F013         	call	___fltol	;wreg free
  1953  001CFC  5049               	movf	?___fltol^0,w,c
  1954  001CFE  6E53               	movwf	___awmod@dividend^0,c
  1955  001D00  6A54               	clrf	(___awmod@dividend+1)^0,c
  1956  001D02  0E00               	movlw	0
  1957  001D04  6E56               	movwf	(___awmod@divisor+1)^0,c
  1958  001D06  0E64               	movlw	100
  1959  001D08  6E55               	movwf	___awmod@divisor^0,c
  1960  001D0A  EC1F  F016         	call	___awmod	;wreg free
  1961  001D0E  5053               	movf	?___awmod^0,w,c
  1962  001D10  0100               	movlb	0	; () banked
  1963  001D12  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1964  001D14  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1965  001D16  EC52  F018         	call	_sprintf	;wreg free
  1966  001D1A                     
  1967                           ;adc.c: 62:     Lcd_Out(1,0, (int8_t*)data->display);
  1968  001D1A  0E00               	movlw	0
  1969  001D1C  6E08               	movwf	Lcd_Out@x^0,c
  1970  001D1E  0E07               	movlw	7
  1971  001D20  0100               	movlb	0	; () banked
  1972  001D22  2584               	addwf	appADC@data& (0+255),w,b
  1973  001D24  6E09               	movwf	Lcd_Out@buffer^0,c
  1974  001D26  0E00               	movlw	0
  1975  001D28  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1976  001D2A  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  1977  001D2C  0E01               	movlw	1
  1978  001D2E  EC93  F014         	call	_Lcd_Out
  1979                           
  1980                           ;adc.c: 63:     if(((int)lm35val < 2))
  1981  001D32  C086  F049         	movff	appADC@lm35val,___fltol@f1
  1982  001D36  C087  F04A         	movff	appADC@lm35val+1,___fltol@f1+1
  1983  001D3A  C088  F04B         	movff	appADC@lm35val+2,___fltol@f1+2
  1984  001D3E  C089  F04C         	movff	appADC@lm35val+3,___fltol@f1+3
  1985  001D42  EC91  F013         	call	___fltol	;wreg free
  1986  001D46  BE4A               	btfsc	(?___fltol+1)^0,7,c
  1987  001D48  EFB1  F00E         	goto	u4650
  1988  001D4C  504A               	movf	(?___fltol+1)^0,w,c
  1989  001D4E  E107               	bnz	u4651
  1990  001D50  0E02               	movlw	2
  1991  001D52  5C49               	subwf	?___fltol^0,w,c
  1992  001D54  B0D8               	btfsc	status,0,c
  1993  001D56  EFAF  F00E         	goto	u4651
  1994  001D5A  EFB1  F00E         	goto	u4650
  1995  001D5E                     u4651:
  1996  001D5E  EFB4  F00E         	goto	l4737
  1997  001D62                     u4650:
  1998  001D62                     
  1999                           ;adc.c: 64:     {;adc.c: 65:         LATCbits.LATC1 = 0;
  2000  001D62  928B               	bcf	139,1,c	;volatile
  2001                           
  2002                           ;adc.c: 66:     }
  2003  001D64  EFCD  F00E         	goto	l39
  2004  001D68                     l4737:
  2005  001D68  C086  F049         	movff	appADC@lm35val,___fltol@f1
  2006  001D6C  C087  F04A         	movff	appADC@lm35val+1,___fltol@f1+1
  2007  001D70  C088  F04B         	movff	appADC@lm35val+2,___fltol@f1+2
  2008  001D74  C089  F04C         	movff	appADC@lm35val+3,___fltol@f1+3
  2009  001D78  EC91  F013         	call	___fltol	;wreg free
  2010  001D7C  BE4A               	btfsc	(?___fltol+1)^0,7,c
  2011  001D7E  EFCA  F00E         	goto	u4661
  2012  001D82  504A               	movf	(?___fltol+1)^0,w,c
  2013  001D84  E109               	bnz	u4660
  2014  001D86  0E07               	movlw	7
  2015  001D88  5C49               	subwf	?___fltol^0,w,c
  2016  001D8A  A0D8               	btfss	status,0,c
  2017  001D8C  EFCA  F00E         	goto	u4661
  2018  001D90  EFCC  F00E         	goto	u4660
  2019  001D94                     u4661:
  2020  001D94  EFCD  F00E         	goto	l39
  2021  001D98                     u4660:
  2022  001D98                     
  2023                           ;adc.c: 68:     {;adc.c: 69:         LATCbits.LATC1 = 1;
  2024  001D98  828B               	bsf	139,1,c	;volatile
  2025  001D9A                     l39:
  2026  001D9A  0012               	return		;funcret
  2027  001D9C                     __end_of_appADC:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _adcGetValue *****************
  2031 ;; Defined at:
  2032 ;;		line 44 in file "adc.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  PinADC          1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  PinADC          1    7[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  2    4[COMRAM] unsigned short 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2046 ;;      Params:         2       0       0       0       0       0       0       0       0
  2047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2048 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2049 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2050 ;;Total ram usage:        4 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    2
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_appADC
  2057 ;;		_appBat
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text9
  2062  00332E                     __ptext9:
  2063                           	callstack 0
  2064  00332E                     _adcGetValue:
  2065                           	callstack 26
  2066                           
  2067                           ;incstack = 0
  2068                           ;adcGetValue@PinADC stored from wreg
  2069  00332E  6E08               	movwf	adcGetValue@PinADC^0,c
  2070  003330                     
  2071                           ;adc.c: 44: uint16_t adcGetValue(uint8_t PinADC);adc.c: 45: {;adc.c: 46:     ADCON0bits.
      +                          CHS = PinADC;
  2072  003330  C008  F007         	movff	adcGetValue@PinADC,??_adcGetValue
  2073  003334  4607               	rlncf	??_adcGetValue^0,f,c
  2074  003336  4607               	rlncf	??_adcGetValue^0,f,c
  2075  003338  50C2               	movf	194,w,c	;volatile
  2076  00333A  1807               	xorwf	??_adcGetValue^0,w,c
  2077  00333C  0BC3               	andlw	-61
  2078  00333E  1807               	xorwf	??_adcGetValue^0,w,c
  2079  003340  6EC2               	movwf	194,c	;volatile
  2080  003342                     
  2081                           ;adc.c: 47:     _delay((unsigned long)((2)*(12000000/4000.0)));
  2082  003342  0E08               	movlw	8
  2083  003344  6E07               	movwf	??_adcGetValue^0,c
  2084  003346  0ECA               	movlw	202
  2085  003348                     u4867:
  2086  003348  2EE8               	decfsz	wreg,f,c
  2087  00334A  D7FE               	bra	u4867
  2088  00334C  2E07               	decfsz	??_adcGetValue^0,f,c
  2089  00334E  D7FC               	bra	u4867
  2090  003350                     
  2091                           ;adc.c: 48:     GO_nDONE = 1;
  2092  003350  82C2               	bsf	4034,1,c	;volatile
  2093  003352                     l30:
  2094                           
  2095                           ;adc.c: 49:     while(ADCON0bits.GO_DONE)
  2096  003352  B2C2               	btfsc	194,1,c	;volatile
  2097  003354  EFAE  F019         	goto	u2741
  2098  003358  EFB0  F019         	goto	u2740
  2099  00335C                     u2741:
  2100  00335C  EFA9  F019         	goto	l30
  2101  003360                     u2740:
  2102  003360                     
  2103                           ;adc.c: 52:     return ADRES;
  2104  003360  CFC3 F005          	movff	4035,?_adcGetValue	;volatile
  2105  003364  CFC4 F006          	movff	4036,?_adcGetValue+1	;volatile
  2106  003368  0012               	return		;funcret
  2107  00336A                     __end_of_adcGetValue:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function ___xxtofl *****************
  2111 ;; Defined at:
  2112 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  sign            1    wreg     unsigned char 
  2115 ;;  val             4    8[COMRAM] long 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  sign            1   16[COMRAM] unsigned char 
  2118 ;;  arg             4   18[COMRAM] unsigned long 
  2119 ;;  exp             1   17[COMRAM] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  4    8[COMRAM] unsigned char 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2129 ;;      Params:         4       0       0       0       0       0       0       0       0
  2130 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2131 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2132 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2133 ;;Total ram usage:       14 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    2
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_appADC
  2140 ;;		_appBat
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text10
  2145  001A3C                     __ptext10:
  2146                           	callstack 0
  2147  001A3C                     ___xxtofl:
  2148                           	callstack 26
  2149                           
  2150                           ;incstack = 0
  2151                           ;___xxtofl@sign stored from wreg
  2152  001A3C  6E11               	movwf	___xxtofl@sign^0,c
  2153  001A3E  5011               	movf	___xxtofl@sign^0,w,c
  2154  001A40  B4D8               	btfsc	status,2,c
  2155  001A42  EF25  F00D         	goto	u3611
  2156  001A46  EF27  F00D         	goto	u3610
  2157  001A4A                     u3611:
  2158  001A4A  EF49  F00D         	goto	l1045
  2159  001A4E                     u3610:
  2160  001A4E  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2161  001A50  EF2E  F00D         	goto	u3620
  2162  001A54  EF2C  F00D         	goto	u3621
  2163  001A58                     u3621:
  2164  001A58  EF49  F00D         	goto	l1045
  2165  001A5C                     u3620:
  2166  001A5C  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2167  001A60  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2168  001A64  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2169  001A68  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2170  001A6C  1E0D               	comf	??___xxtofl^0,f,c
  2171  001A6E  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2172  001A70  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2173  001A72  1E10               	comf	(??___xxtofl+3)^0,f,c
  2174  001A74  2A0D               	incf	??___xxtofl^0,f,c
  2175  001A76  0E00               	movlw	0
  2176  001A78  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2177  001A7A  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2178  001A7C  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2179  001A7E  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2180  001A82  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2181  001A86  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2182  001A8A  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2183  001A8E  EF51  F00D         	goto	l3833
  2184  001A92                     l1045:
  2185  001A92  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2186  001A96  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2187  001A9A  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2188  001A9E  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2189  001AA2                     l3833:
  2190  001AA2  5009               	movf	___xxtofl@val^0,w,c
  2191  001AA4  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2192  001AA6  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2193  001AA8  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2194  001AAA  A4D8               	btfss	status,2,c
  2195  001AAC  EF5A  F00D         	goto	u3631
  2196  001AB0  EF5C  F00D         	goto	u3630
  2197  001AB4                     u3631:
  2198  001AB4  EF66  F00D         	goto	l3839
  2199  001AB8                     u3630:
  2200  001AB8  0E00               	movlw	0
  2201  001ABA  6E09               	movwf	?___xxtofl^0,c
  2202  001ABC  0E00               	movlw	0
  2203  001ABE  6E0A               	movwf	(?___xxtofl+1)^0,c
  2204  001AC0  0E00               	movlw	0
  2205  001AC2  6E0B               	movwf	(?___xxtofl+2)^0,c
  2206  001AC4  0E00               	movlw	0
  2207  001AC6  6E0C               	movwf	(?___xxtofl+3)^0,c
  2208  001AC8  EFF7  F00D         	goto	l1048
  2209  001ACC                     l3839:
  2210  001ACC  0E96               	movlw	150
  2211  001ACE  6E12               	movwf	___xxtofl@exp^0,c
  2212  001AD0  EF70  F00D         	goto	l3843
  2213  001AD4                     l3841:
  2214  001AD4  2A12               	incf	___xxtofl@exp^0,f,c
  2215  001AD6  90D8               	bcf	status,0,c
  2216  001AD8  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2217  001ADA  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2218  001ADC  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2219  001ADE  3213               	rrcf	___xxtofl@arg^0,f,c
  2220  001AE0                     l3843:
  2221  001AE0  0E00               	movlw	0
  2222  001AE2  1413               	andwf	___xxtofl@arg^0,w,c
  2223  001AE4  6E0D               	movwf	??___xxtofl^0,c
  2224  001AE6  0E00               	movlw	0
  2225  001AE8  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2226  001AEA  6E0E               	movwf	(??___xxtofl+1)^0,c
  2227  001AEC  0E00               	movlw	0
  2228  001AEE  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2229  001AF0  6E0F               	movwf	(??___xxtofl+2)^0,c
  2230  001AF2  0EFE               	movlw	254
  2231  001AF4  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2232  001AF6  6E10               	movwf	(??___xxtofl+3)^0,c
  2233  001AF8  500D               	movf	??___xxtofl^0,w,c
  2234  001AFA  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2235  001AFC  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2236  001AFE  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2237  001B00  A4D8               	btfss	status,2,c
  2238  001B02  EF85  F00D         	goto	u3641
  2239  001B06  EF87  F00D         	goto	u3640
  2240  001B0A                     u3641:
  2241  001B0A  EF6A  F00D         	goto	l3841
  2242  001B0E                     u3640:
  2243  001B0E  EF95  F00D         	goto	l1052
  2244  001B12                     l3845:
  2245  001B12  2A12               	incf	___xxtofl@exp^0,f,c
  2246  001B14  0E01               	movlw	1
  2247  001B16  2613               	addwf	___xxtofl@arg^0,f,c
  2248  001B18  0E00               	movlw	0
  2249  001B1A  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2250  001B1C  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2251  001B1E  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2252  001B20  90D8               	bcf	status,0,c
  2253  001B22  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2254  001B24  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2255  001B26  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2256  001B28  3213               	rrcf	___xxtofl@arg^0,f,c
  2257  001B2A                     l1052:
  2258  001B2A  0E00               	movlw	0
  2259  001B2C  1413               	andwf	___xxtofl@arg^0,w,c
  2260  001B2E  6E0D               	movwf	??___xxtofl^0,c
  2261  001B30  0E00               	movlw	0
  2262  001B32  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2263  001B34  6E0E               	movwf	(??___xxtofl+1)^0,c
  2264  001B36  0E00               	movlw	0
  2265  001B38  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2266  001B3A  6E0F               	movwf	(??___xxtofl+2)^0,c
  2267  001B3C  0EFF               	movlw	255
  2268  001B3E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2269  001B40  6E10               	movwf	(??___xxtofl+3)^0,c
  2270  001B42  500D               	movf	??___xxtofl^0,w,c
  2271  001B44  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2272  001B46  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2273  001B48  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2274  001B4A  A4D8               	btfss	status,2,c
  2275  001B4C  EFAA  F00D         	goto	u3651
  2276  001B50  EFAC  F00D         	goto	u3650
  2277  001B54                     u3651:
  2278  001B54  EF89  F00D         	goto	l3845
  2279  001B58                     u3650:
  2280  001B58  EFB4  F00D         	goto	l3853
  2281  001B5C                     l3851:
  2282  001B5C  0612               	decf	___xxtofl@exp^0,f,c
  2283  001B5E  90D8               	bcf	status,0,c
  2284  001B60  3613               	rlcf	___xxtofl@arg^0,f,c
  2285  001B62  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2286  001B64  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2287  001B66  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2288  001B68                     l3853:
  2289  001B68  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2290  001B6A  EFB9  F00D         	goto	u3661
  2291  001B6E  EFBB  F00D         	goto	u3660
  2292  001B72                     u3661:
  2293  001B72  EFC3  F00D         	goto	l1059
  2294  001B76                     u3660:
  2295  001B76  0E02               	movlw	2
  2296  001B78  6012               	cpfslt	___xxtofl@exp^0,c
  2297  001B7A  EFC1  F00D         	goto	u3671
  2298  001B7E  EFC3  F00D         	goto	u3670
  2299  001B82                     u3671:
  2300  001B82  EFAE  F00D         	goto	l3851
  2301  001B86                     u3670:
  2302  001B86                     l1059:
  2303  001B86  B012               	btfsc	___xxtofl@exp^0,0,c
  2304  001B88  EFC8  F00D         	goto	u3681
  2305  001B8C  EFCA  F00D         	goto	u3680
  2306  001B90                     u3681:
  2307  001B90  EFCB  F00D         	goto	l3859
  2308  001B94                     u3680:
  2309  001B94  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2310  001B96                     l3859:
  2311  001B96  90D8               	bcf	status,0,c
  2312  001B98  3212               	rrcf	___xxtofl@exp^0,f,c
  2313  001B9A  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2314  001B9E  6A0E               	clrf	(??___xxtofl+1)^0,c
  2315  001BA0  6A0F               	clrf	(??___xxtofl+2)^0,c
  2316  001BA2  6A10               	clrf	(??___xxtofl+3)^0,c
  2317  001BA4  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2318  001BA8  6A0F               	clrf	(??___xxtofl+2)^0,c
  2319  001BAA  6A0E               	clrf	(??___xxtofl+1)^0,c
  2320  001BAC  6A0D               	clrf	??___xxtofl^0,c
  2321  001BAE  500D               	movf	??___xxtofl^0,w,c
  2322  001BB0  1213               	iorwf	___xxtofl@arg^0,f,c
  2323  001BB2  500E               	movf	(??___xxtofl+1)^0,w,c
  2324  001BB4  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2325  001BB6  500F               	movf	(??___xxtofl+2)^0,w,c
  2326  001BB8  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2327  001BBA  5010               	movf	(??___xxtofl+3)^0,w,c
  2328  001BBC  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2329  001BBE  5011               	movf	___xxtofl@sign^0,w,c
  2330  001BC0  B4D8               	btfsc	status,2,c
  2331  001BC2  EFE5  F00D         	goto	u3691
  2332  001BC6  EFE7  F00D         	goto	u3690
  2333  001BCA                     u3691:
  2334  001BCA  EFEF  F00D         	goto	l3869
  2335  001BCE                     u3690:
  2336  001BCE  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2337  001BD0  EFEE  F00D         	goto	u3700
  2338  001BD4  EFEC  F00D         	goto	u3701
  2339  001BD8                     u3701:
  2340  001BD8  EFEF  F00D         	goto	l3869
  2341  001BDC                     u3700:
  2342  001BDC  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2343  001BDE                     l3869:
  2344  001BDE  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2345  001BE2  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2346  001BE6  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2347  001BEA  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2348  001BEE                     l1048:
  2349  001BEE  0012               	return		;funcret
  2350  001BF0                     __end_of___xxtofl:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function ___fltol *****************
  2354 ;; Defined at:
  2355 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  f1              4   72[COMRAM] unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  exp1            1   81[COMRAM] unsigned char 
  2360 ;;  sign1           1   80[COMRAM] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  4   72[COMRAM] long 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2370 ;;      Params:         4       0       0       0       0       0       0       0       0
  2371 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2372 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2373 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2374 ;;Total ram usage:       10 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    2
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_appADC
  2381 ;;		_appBat
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text11
  2386  002722                     __ptext11:
  2387                           	callstack 0
  2388  002722                     ___fltol:
  2389                           	callstack 26
  2390  002722  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2391  002724  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2392  002726  6E52               	movwf	___fltol@exp1^0,c
  2393  002728  5052               	movf	___fltol@exp1^0,w,c
  2394  00272A  A4D8               	btfss	status,2,c
  2395  00272C  EF9A  F013         	goto	u3541
  2396  002730  EF9C  F013         	goto	u3540
  2397  002734                     u3541:
  2398  002734  EFA6  F013         	goto	l3789
  2399  002738                     u3540:
  2400  002738                     l3785:
  2401  002738  0E00               	movlw	0
  2402  00273A  6E49               	movwf	?___fltol^0,c
  2403  00273C  0E00               	movlw	0
  2404  00273E  6E4A               	movwf	(?___fltol+1)^0,c
  2405  002740  0E00               	movlw	0
  2406  002742  6E4B               	movwf	(?___fltol+2)^0,c
  2407  002744  0E00               	movlw	0
  2408  002746  6E4C               	movwf	(?___fltol+3)^0,c
  2409  002748  EF13  F014         	goto	l687
  2410  00274C                     l3789:
  2411  00274C  C049  F04D         	movff	___fltol@f1,??___fltol
  2412  002750  C04A  F04E         	movff	___fltol@f1+1,??___fltol+1
  2413  002754  C04B  F04F         	movff	___fltol@f1+2,??___fltol+2
  2414  002758  C04C  F050         	movff	___fltol@f1+3,??___fltol+3
  2415  00275C  0E20               	movlw	32
  2416  00275E  EFB6  F013         	goto	u3550
  2417  002762                     u3555:
  2418  002762  90D8               	bcf	status,0,c
  2419  002764  3250               	rrcf	(??___fltol+3)^0,f,c
  2420  002766  324F               	rrcf	(??___fltol+2)^0,f,c
  2421  002768  324E               	rrcf	(??___fltol+1)^0,f,c
  2422  00276A  324D               	rrcf	??___fltol^0,f,c
  2423  00276C                     u3550:
  2424  00276C  2EE8               	decfsz	wreg,f,c
  2425  00276E  EFB1  F013         	goto	u3555
  2426  002772  504D               	movf	??___fltol^0,w,c
  2427  002774  6E51               	movwf	___fltol@sign1^0,c
  2428  002776  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2429  002778  0EFF               	movlw	255
  2430  00277A  1649               	andwf	___fltol@f1^0,f,c
  2431  00277C  0EFF               	movlw	255
  2432  00277E  164A               	andwf	(___fltol@f1+1)^0,f,c
  2433  002780  0EFF               	movlw	255
  2434  002782  164B               	andwf	(___fltol@f1+2)^0,f,c
  2435  002784  0E00               	movlw	0
  2436  002786  164C               	andwf	(___fltol@f1+3)^0,f,c
  2437  002788  0E96               	movlw	150
  2438  00278A  5E52               	subwf	___fltol@exp1^0,f,c
  2439  00278C  BE52               	btfsc	___fltol@exp1^0,7,c
  2440  00278E  EFCD  F013         	goto	u3560
  2441  002792  EFCB  F013         	goto	u3561
  2442  002796                     u3561:
  2443  002796  EFE3  F013         	goto	l3809
  2444  00279A                     u3560:
  2445  00279A  5052               	movf	___fltol@exp1^0,w,c
  2446  00279C  0A80               	xorlw	128
  2447  00279E  0F97               	addlw	151
  2448  0027A0  B0D8               	btfsc	status,0,c
  2449  0027A2  EFD5  F013         	goto	u3571
  2450  0027A6  EFD7  F013         	goto	u3570
  2451  0027AA                     u3571:
  2452  0027AA  EFD9  F013         	goto	l3805
  2453  0027AE                     u3570:
  2454  0027AE  EF9C  F013         	goto	l3785
  2455  0027B2                     l3805:
  2456  0027B2  90D8               	bcf	status,0,c
  2457  0027B4  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2458  0027B6  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2459  0027B8  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2460  0027BA  3249               	rrcf	___fltol@f1^0,f,c
  2461  0027BC  3E52               	incfsz	___fltol@exp1^0,f,c
  2462  0027BE  EFD9  F013         	goto	l3805
  2463  0027C2  EFFB  F013         	goto	l3819
  2464  0027C6                     l3809:
  2465  0027C6  0E1F               	movlw	31
  2466  0027C8  6452               	cpfsgt	___fltol@exp1^0,c
  2467  0027CA  EFE9  F013         	goto	u3581
  2468  0027CE  EFEB  F013         	goto	u3580
  2469  0027D2                     u3581:
  2470  0027D2  EFF3  F013         	goto	l3817
  2471  0027D6                     u3580:
  2472  0027D6  EF9C  F013         	goto	l3785
  2473  0027DA                     l3815:
  2474  0027DA  90D8               	bcf	status,0,c
  2475  0027DC  3649               	rlcf	___fltol@f1^0,f,c
  2476  0027DE  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2477  0027E0  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2478  0027E2  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2479  0027E4  0652               	decf	___fltol@exp1^0,f,c
  2480  0027E6                     l3817:
  2481  0027E6  5052               	movf	___fltol@exp1^0,w,c
  2482  0027E8  A4D8               	btfss	status,2,c
  2483  0027EA  EFF9  F013         	goto	u3591
  2484  0027EE  EFFB  F013         	goto	u3590
  2485  0027F2                     u3591:
  2486  0027F2  EFED  F013         	goto	l3815
  2487  0027F6                     u3590:
  2488  0027F6                     l3819:
  2489  0027F6  5051               	movf	___fltol@sign1^0,w,c
  2490  0027F8  B4D8               	btfsc	status,2,c
  2491  0027FA  EF01  F014         	goto	u3601
  2492  0027FE  EF03  F014         	goto	u3600
  2493  002802                     u3601:
  2494  002802  EF0B  F014         	goto	l3823
  2495  002806                     u3600:
  2496  002806  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2497  002808  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2498  00280A  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2499  00280C  6C49               	negf	___fltol@f1^0,c
  2500  00280E  0E00               	movlw	0
  2501  002810  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2502  002812  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2503  002814  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2504  002816                     l3823:
  2505  002816  C049  F049         	movff	___fltol@f1,?___fltol
  2506  00281A  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2507  00281E  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2508  002822  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2509  002826                     l687:
  2510  002826  0012               	return		;funcret
  2511  002828                     __end_of___fltol:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function ___flmul *****************
  2515 ;; Defined at:
  2516 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  b               4   22[COMRAM] long 
  2519 ;;  a               4   26[COMRAM] long 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  prod            4   41[COMRAM] struct .
  2522 ;;  grs             4   35[COMRAM] unsigned long 
  2523 ;;  temp            2   45[COMRAM] struct .
  2524 ;;  bexp            1   40[COMRAM] unsigned char 
  2525 ;;  aexp            1   39[COMRAM] unsigned char 
  2526 ;;  sign            1   34[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  4   22[COMRAM] unsigned char 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0, prodl, prodh
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         8       0       0       0       0       0       0       0       0
  2537 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2538 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2539 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2540 ;;Total ram usage:       25 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    2
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_appADC
  2547 ;;		_appBat
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text12
  2552  00085C                     __ptext12:
  2553                           	callstack 0
  2554  00085C                     ___flmul:
  2555                           	callstack 26
  2556  00085C  501A               	movf	(___flmul@b+3)^0,w,c
  2557  00085E  0B80               	andlw	128
  2558  000860  6E23               	movwf	___flmul@sign^0,c
  2559  000862  501A               	movf	(___flmul@b+3)^0,w,c
  2560  000864  241A               	addwf	(___flmul@b+3)^0,w,c
  2561  000866  6E29               	movwf	___flmul@bexp^0,c
  2562  000868  AE19               	btfss	(___flmul@b+2)^0,7,c
  2563  00086A  EF39  F004         	goto	u3291
  2564  00086E  EF3B  F004         	goto	u3290
  2565  000872                     u3291:
  2566  000872  EF3C  F004         	goto	l3623
  2567  000876                     u3290:
  2568  000876  8029               	bsf	___flmul@bexp^0,0,c
  2569  000878                     l3623:
  2570  000878  5029               	movf	___flmul@bexp^0,w,c
  2571  00087A  B4D8               	btfsc	status,2,c
  2572  00087C  EF42  F004         	goto	u3301
  2573  000880  EF44  F004         	goto	u3300
  2574  000884                     u3301:
  2575  000884  EF57  F004         	goto	l3631
  2576  000888                     u3300:
  2577  000888  2829               	incf	___flmul@bexp^0,w,c
  2578  00088A  A4D8               	btfss	status,2,c
  2579  00088C  EF4A  F004         	goto	u3311
  2580  000890  EF4C  F004         	goto	u3310
  2581  000894                     u3311:
  2582  000894  EF54  F004         	goto	l3629
  2583  000898                     u3310:
  2584  000898  0E00               	movlw	0
  2585  00089A  6E17               	movwf	___flmul@b^0,c
  2586  00089C  0E00               	movlw	0
  2587  00089E  6E18               	movwf	(___flmul@b+1)^0,c
  2588  0008A0  0E00               	movlw	0
  2589  0008A2  6E19               	movwf	(___flmul@b+2)^0,c
  2590  0008A4  0E00               	movlw	0
  2591  0008A6  6E1A               	movwf	(___flmul@b+3)^0,c
  2592  0008A8                     l3629:
  2593  0008A8  8E19               	bsf	(___flmul@b+2)^0,7,c
  2594  0008AA  EF5F  F004         	goto	l3633
  2595  0008AE                     l3631:
  2596  0008AE  0E00               	movlw	0
  2597  0008B0  6E17               	movwf	___flmul@b^0,c
  2598  0008B2  0E00               	movlw	0
  2599  0008B4  6E18               	movwf	(___flmul@b+1)^0,c
  2600  0008B6  0E00               	movlw	0
  2601  0008B8  6E19               	movwf	(___flmul@b+2)^0,c
  2602  0008BA  0E00               	movlw	0
  2603  0008BC  6E1A               	movwf	(___flmul@b+3)^0,c
  2604  0008BE                     l3633:
  2605  0008BE  501E               	movf	(___flmul@a+3)^0,w,c
  2606  0008C0  0B80               	andlw	128
  2607  0008C2  1A23               	xorwf	___flmul@sign^0,f,c
  2608  0008C4  501E               	movf	(___flmul@a+3)^0,w,c
  2609  0008C6  241E               	addwf	(___flmul@a+3)^0,w,c
  2610  0008C8  6E28               	movwf	___flmul@aexp^0,c
  2611  0008CA  AE1D               	btfss	(___flmul@a+2)^0,7,c
  2612  0008CC  EF6A  F004         	goto	u3321
  2613  0008D0  EF6C  F004         	goto	u3320
  2614  0008D4                     u3321:
  2615  0008D4  EF6D  F004         	goto	l3641
  2616  0008D8                     u3320:
  2617  0008D8  8028               	bsf	___flmul@aexp^0,0,c
  2618  0008DA                     l3641:
  2619  0008DA  5028               	movf	___flmul@aexp^0,w,c
  2620  0008DC  B4D8               	btfsc	status,2,c
  2621  0008DE  EF73  F004         	goto	u3331
  2622  0008E2  EF75  F004         	goto	u3330
  2623  0008E6                     u3331:
  2624  0008E6  EF88  F004         	goto	l3649
  2625  0008EA                     u3330:
  2626  0008EA  2828               	incf	___flmul@aexp^0,w,c
  2627  0008EC  A4D8               	btfss	status,2,c
  2628  0008EE  EF7B  F004         	goto	u3341
  2629  0008F2  EF7D  F004         	goto	u3340
  2630  0008F6                     u3341:
  2631  0008F6  EF85  F004         	goto	l3647
  2632  0008FA                     u3340:
  2633  0008FA  0E00               	movlw	0
  2634  0008FC  6E1B               	movwf	___flmul@a^0,c
  2635  0008FE  0E00               	movlw	0
  2636  000900  6E1C               	movwf	(___flmul@a+1)^0,c
  2637  000902  0E00               	movlw	0
  2638  000904  6E1D               	movwf	(___flmul@a+2)^0,c
  2639  000906  0E00               	movlw	0
  2640  000908  6E1E               	movwf	(___flmul@a+3)^0,c
  2641  00090A                     l3647:
  2642  00090A  8E1D               	bsf	(___flmul@a+2)^0,7,c
  2643  00090C  EF90  F004         	goto	l1004
  2644  000910                     l3649:
  2645  000910  0E00               	movlw	0
  2646  000912  6E1B               	movwf	___flmul@a^0,c
  2647  000914  0E00               	movlw	0
  2648  000916  6E1C               	movwf	(___flmul@a+1)^0,c
  2649  000918  0E00               	movlw	0
  2650  00091A  6E1D               	movwf	(___flmul@a+2)^0,c
  2651  00091C  0E00               	movlw	0
  2652  00091E  6E1E               	movwf	(___flmul@a+3)^0,c
  2653  000920                     l1004:
  2654  000920  5028               	movf	___flmul@aexp^0,w,c
  2655  000922  B4D8               	btfsc	status,2,c
  2656  000924  EF96  F004         	goto	u3351
  2657  000928  EF98  F004         	goto	u3350
  2658  00092C                     u3351:
  2659  00092C  EFA0  F004         	goto	l3653
  2660  000930                     u3350:
  2661  000930  5029               	movf	___flmul@bexp^0,w,c
  2662  000932  A4D8               	btfss	status,2,c
  2663  000934  EF9E  F004         	goto	u3361
  2664  000938  EFA0  F004         	goto	u3360
  2665  00093C                     u3361:
  2666  00093C  EFAA  F004         	goto	l3657
  2667  000940                     u3360:
  2668  000940                     l3653:
  2669  000940  0E00               	movlw	0
  2670  000942  6E17               	movwf	?___flmul^0,c
  2671  000944  0E00               	movlw	0
  2672  000946  6E18               	movwf	(?___flmul+1)^0,c
  2673  000948  0E00               	movlw	0
  2674  00094A  6E19               	movwf	(?___flmul+2)^0,c
  2675  00094C  0E00               	movlw	0
  2676  00094E  6E1A               	movwf	(?___flmul+3)^0,c
  2677  000950  EF42  F006         	goto	l1008
  2678  000954                     l3657:
  2679  000954  501D               	movf	(___flmul@a+2)^0,w,c
  2680  000956  0217               	mulwf	___flmul@b^0,c
  2681  000958  CFF3 F02E          	movff	prodl,___flmul@temp
  2682  00095C  CFF4 F02F          	movff	prodh,___flmul@temp+1
  2683  000960  502E               	movf	___flmul@temp^0,w,c
  2684  000962  6E24               	movwf	___flmul@grs^0,c
  2685  000964  6A25               	clrf	(___flmul@grs+1)^0,c
  2686  000966  6A26               	clrf	(___flmul@grs+2)^0,c
  2687  000968  6A27               	clrf	(___flmul@grs+3)^0,c
  2688  00096A  502F               	movf	(___flmul@temp+1)^0,w,c
  2689  00096C  6E2A               	movwf	___flmul@prod^0,c
  2690  00096E  6A2B               	clrf	(___flmul@prod+1)^0,c
  2691  000970  6A2C               	clrf	(___flmul@prod+2)^0,c
  2692  000972  6A2D               	clrf	(___flmul@prod+3)^0,c
  2693  000974  501C               	movf	(___flmul@a+1)^0,w,c
  2694  000976  0218               	mulwf	(___flmul@b+1)^0,c
  2695  000978  CFF3 F02E          	movff	prodl,___flmul@temp
  2696  00097C  CFF4 F02F          	movff	prodh,___flmul@temp+1
  2697  000980  502E               	movf	___flmul@temp^0,w,c
  2698  000982  2624               	addwf	___flmul@grs^0,f,c
  2699  000984  0E00               	movlw	0
  2700  000986  2225               	addwfc	(___flmul@grs+1)^0,f,c
  2701  000988  2226               	addwfc	(___flmul@grs+2)^0,f,c
  2702  00098A  2227               	addwfc	(___flmul@grs+3)^0,f,c
  2703  00098C  502F               	movf	(___flmul@temp+1)^0,w,c
  2704  00098E  262A               	addwf	___flmul@prod^0,f,c
  2705  000990  0E00               	movlw	0
  2706  000992  222B               	addwfc	(___flmul@prod+1)^0,f,c
  2707  000994  222C               	addwfc	(___flmul@prod+2)^0,f,c
  2708  000996  222D               	addwfc	(___flmul@prod+3)^0,f,c
  2709  000998  501B               	movf	___flmul@a^0,w,c
  2710  00099A  0219               	mulwf	(___flmul@b+2)^0,c
  2711  00099C  CFF3 F02E          	movff	prodl,___flmul@temp
  2712  0009A0  CFF4 F02F          	movff	prodh,___flmul@temp+1
  2713  0009A4  502E               	movf	___flmul@temp^0,w,c
  2714  0009A6  2624               	addwf	___flmul@grs^0,f,c
  2715  0009A8  0E00               	movlw	0
  2716  0009AA  2225               	addwfc	(___flmul@grs+1)^0,f,c
  2717  0009AC  2226               	addwfc	(___flmul@grs+2)^0,f,c
  2718  0009AE  2227               	addwfc	(___flmul@grs+3)^0,f,c
  2719  0009B0  502F               	movf	(___flmul@temp+1)^0,w,c
  2720  0009B2  262A               	addwf	___flmul@prod^0,f,c
  2721  0009B4  0E00               	movlw	0
  2722  0009B6  222B               	addwfc	(___flmul@prod+1)^0,f,c
  2723  0009B8  222C               	addwfc	(___flmul@prod+2)^0,f,c
  2724  0009BA  222D               	addwfc	(___flmul@prod+3)^0,f,c
  2725  0009BC  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  2726  0009C0  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  2727  0009C4  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  2728  0009C8  6A24               	clrf	___flmul@grs^0,c
  2729  0009CA  501B               	movf	___flmul@a^0,w,c
  2730  0009CC  0218               	mulwf	(___flmul@b+1)^0,c
  2731  0009CE  CFF3 F02E          	movff	prodl,___flmul@temp
  2732  0009D2  CFF4 F02F          	movff	prodh,___flmul@temp+1
  2733  0009D6  502E               	movf	___flmul@temp^0,w,c
  2734  0009D8  2624               	addwf	___flmul@grs^0,f,c
  2735  0009DA  502F               	movf	(___flmul@temp+1)^0,w,c
  2736  0009DC  2225               	addwfc	(___flmul@grs+1)^0,f,c
  2737  0009DE  0E00               	movlw	0
  2738  0009E0  2226               	addwfc	(___flmul@grs+2)^0,f,c
  2739  0009E2  0E00               	movlw	0
  2740  0009E4  2227               	addwfc	(___flmul@grs+3)^0,f,c
  2741  0009E6  501C               	movf	(___flmul@a+1)^0,w,c
  2742  0009E8  0217               	mulwf	___flmul@b^0,c
  2743  0009EA  CFF3 F02E          	movff	prodl,___flmul@temp
  2744  0009EE  CFF4 F02F          	movff	prodh,___flmul@temp+1
  2745  0009F2  502E               	movf	___flmul@temp^0,w,c
  2746  0009F4  2624               	addwf	___flmul@grs^0,f,c
  2747  0009F6  502F               	movf	(___flmul@temp+1)^0,w,c
  2748  0009F8  2225               	addwfc	(___flmul@grs+1)^0,f,c
  2749  0009FA  0E00               	movlw	0
  2750  0009FC  2226               	addwfc	(___flmul@grs+2)^0,f,c
  2751  0009FE  0E00               	movlw	0
  2752  000A00  2227               	addwfc	(___flmul@grs+3)^0,f,c
  2753  000A02  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  2754  000A06  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  2755  000A0A  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  2756  000A0E  6A24               	clrf	___flmul@grs^0,c
  2757  000A10  501B               	movf	___flmul@a^0,w,c
  2758  000A12  0217               	mulwf	___flmul@b^0,c
  2759  000A14  CFF3 F02E          	movff	prodl,___flmul@temp
  2760  000A18  CFF4 F02F          	movff	prodh,___flmul@temp+1
  2761  000A1C  502E               	movf	___flmul@temp^0,w,c
  2762  000A1E  2624               	addwf	___flmul@grs^0,f,c
  2763  000A20  502F               	movf	(___flmul@temp+1)^0,w,c
  2764  000A22  2225               	addwfc	(___flmul@grs+1)^0,f,c
  2765  000A24  0E00               	movlw	0
  2766  000A26  2226               	addwfc	(___flmul@grs+2)^0,f,c
  2767  000A28  0E00               	movlw	0
  2768  000A2A  2227               	addwfc	(___flmul@grs+3)^0,f,c
  2769  000A2C  501D               	movf	(___flmul@a+2)^0,w,c
  2770  000A2E  0218               	mulwf	(___flmul@b+1)^0,c
  2771  000A30  CFF3 F02E          	movff	prodl,___flmul@temp
  2772  000A34  CFF4 F02F          	movff	prodh,___flmul@temp+1
  2773  000A38  502E               	movf	___flmul@temp^0,w,c
  2774  000A3A  262A               	addwf	___flmul@prod^0,f,c
  2775  000A3C  502F               	movf	(___flmul@temp+1)^0,w,c
  2776  000A3E  222B               	addwfc	(___flmul@prod+1)^0,f,c
  2777  000A40  0E00               	movlw	0
  2778  000A42  222C               	addwfc	(___flmul@prod+2)^0,f,c
  2779  000A44  0E00               	movlw	0
  2780  000A46  222D               	addwfc	(___flmul@prod+3)^0,f,c
  2781  000A48  501C               	movf	(___flmul@a+1)^0,w,c
  2782  000A4A  0219               	mulwf	(___flmul@b+2)^0,c
  2783  000A4C  CFF3 F02E          	movff	prodl,___flmul@temp
  2784  000A50  CFF4 F02F          	movff	prodh,___flmul@temp+1
  2785  000A54  502E               	movf	___flmul@temp^0,w,c
  2786  000A56  262A               	addwf	___flmul@prod^0,f,c
  2787  000A58  502F               	movf	(___flmul@temp+1)^0,w,c
  2788  000A5A  222B               	addwfc	(___flmul@prod+1)^0,f,c
  2789  000A5C  0E00               	movlw	0
  2790  000A5E  222C               	addwfc	(___flmul@prod+2)^0,f,c
  2791  000A60  0E00               	movlw	0
  2792  000A62  222D               	addwfc	(___flmul@prod+3)^0,f,c
  2793  000A64  501D               	movf	(___flmul@a+2)^0,w,c
  2794  000A66  0219               	mulwf	(___flmul@b+2)^0,c
  2795  000A68  CFF3 F02E          	movff	prodl,___flmul@temp
  2796  000A6C  CFF4 F02F          	movff	prodh,___flmul@temp+1
  2797  000A70  502E               	movf	___flmul@temp^0,w,c
  2798  000A72  6E1F               	movwf	??___flmul^0,c
  2799  000A74  502F               	movf	(___flmul@temp+1)^0,w,c
  2800  000A76  6E20               	movwf	(??___flmul+1)^0,c
  2801  000A78  6A21               	clrf	(??___flmul+2)^0,c
  2802  000A7A  6A22               	clrf	(??___flmul+3)^0,c
  2803  000A7C  C021  F022         	movff	??___flmul+2,??___flmul+3
  2804  000A80  C020  F021         	movff	??___flmul+1,??___flmul+2
  2805  000A84  C01F  F020         	movff	??___flmul,??___flmul+1
  2806  000A88  6A1F               	clrf	??___flmul^0,c
  2807  000A8A  501F               	movf	??___flmul^0,w,c
  2808  000A8C  262A               	addwf	___flmul@prod^0,f,c
  2809  000A8E  5020               	movf	(??___flmul+1)^0,w,c
  2810  000A90  222B               	addwfc	(___flmul@prod+1)^0,f,c
  2811  000A92  5021               	movf	(??___flmul+2)^0,w,c
  2812  000A94  222C               	addwfc	(___flmul@prod+2)^0,f,c
  2813  000A96  5022               	movf	(??___flmul+3)^0,w,c
  2814  000A98  222D               	addwfc	(___flmul@prod+3)^0,f,c
  2815  000A9A  C024  F01F         	movff	___flmul@grs,??___flmul
  2816  000A9E  C025  F020         	movff	___flmul@grs+1,??___flmul+1
  2817  000AA2  C026  F021         	movff	___flmul@grs+2,??___flmul+2
  2818  000AA6  C027  F022         	movff	___flmul@grs+3,??___flmul+3
  2819  000AAA  0E19               	movlw	25
  2820  000AAC  EF5D  F005         	goto	u3370
  2821  000AB0                     u3375:
  2822  000AB0  90D8               	bcf	status,0,c
  2823  000AB2  3222               	rrcf	(??___flmul+3)^0,f,c
  2824  000AB4  3221               	rrcf	(??___flmul+2)^0,f,c
  2825  000AB6  3220               	rrcf	(??___flmul+1)^0,f,c
  2826  000AB8  321F               	rrcf	??___flmul^0,f,c
  2827  000ABA                     u3370:
  2828  000ABA  2EE8               	decfsz	wreg,f,c
  2829  000ABC  EF58  F005         	goto	u3375
  2830  000AC0  501F               	movf	??___flmul^0,w,c
  2831  000AC2  262A               	addwf	___flmul@prod^0,f,c
  2832  000AC4  5020               	movf	(??___flmul+1)^0,w,c
  2833  000AC6  222B               	addwfc	(___flmul@prod+1)^0,f,c
  2834  000AC8  5021               	movf	(??___flmul+2)^0,w,c
  2835  000ACA  222C               	addwfc	(___flmul@prod+2)^0,f,c
  2836  000ACC  5022               	movf	(??___flmul+3)^0,w,c
  2837  000ACE  222D               	addwfc	(___flmul@prod+3)^0,f,c
  2838  000AD0  C026  F027         	movff	___flmul@grs+2,___flmul@grs+3
  2839  000AD4  C025  F026         	movff	___flmul@grs+1,___flmul@grs+2
  2840  000AD8  C024  F025         	movff	___flmul@grs,___flmul@grs+1
  2841  000ADC  6A24               	clrf	___flmul@grs^0,c
  2842  000ADE  5028               	movf	___flmul@aexp^0,w,c
  2843  000AE0  C029  F01F         	movff	___flmul@bexp,??___flmul
  2844  000AE4  6A20               	clrf	(??___flmul+1)^0,c
  2845  000AE6  261F               	addwf	??___flmul^0,f,c
  2846  000AE8  0E00               	movlw	0
  2847  000AEA  2220               	addwfc	(??___flmul+1)^0,f,c
  2848  000AEC  0E82               	movlw	130
  2849  000AEE  241F               	addwf	??___flmul^0,w,c
  2850  000AF0  6E2E               	movwf	___flmul@temp^0,c
  2851  000AF2  0EFF               	movlw	255
  2852  000AF4  2020               	addwfc	(??___flmul+1)^0,w,c
  2853  000AF6  6E2F               	movwf	(___flmul@temp+1)^0,c
  2854  000AF8  EF93  F005         	goto	l3705
  2855  000AFC                     l3699:
  2856  000AFC  90D8               	bcf	status,0,c
  2857  000AFE  362A               	rlcf	___flmul@prod^0,f,c
  2858  000B00  362B               	rlcf	(___flmul@prod+1)^0,f,c
  2859  000B02  362C               	rlcf	(___flmul@prod+2)^0,f,c
  2860  000B04  362D               	rlcf	(___flmul@prod+3)^0,f,c
  2861  000B06  AE27               	btfss	(___flmul@grs+3)^0,7,c
  2862  000B08  EF88  F005         	goto	u3381
  2863  000B0C  EF8A  F005         	goto	u3380
  2864  000B10                     u3381:
  2865  000B10  EF8B  F005         	goto	l1011
  2866  000B14                     u3380:
  2867  000B14  802A               	bsf	___flmul@prod^0,0,c
  2868  000B16                     l1011:
  2869  000B16  90D8               	bcf	status,0,c
  2870  000B18  3624               	rlcf	___flmul@grs^0,f,c
  2871  000B1A  3625               	rlcf	(___flmul@grs+1)^0,f,c
  2872  000B1C  3626               	rlcf	(___flmul@grs+2)^0,f,c
  2873  000B1E  3627               	rlcf	(___flmul@grs+3)^0,f,c
  2874  000B20  062E               	decf	___flmul@temp^0,f,c
  2875  000B22  A0D8               	btfss	status,0,c
  2876  000B24  062F               	decf	(___flmul@temp+1)^0,f,c
  2877  000B26                     l3705:
  2878  000B26  AE2C               	btfss	(___flmul@prod+2)^0,7,c
  2879  000B28  EF98  F005         	goto	u3391
  2880  000B2C  EF9A  F005         	goto	u3390
  2881  000B30                     u3391:
  2882  000B30  EF7E  F005         	goto	l3699
  2883  000B34                     u3390:
  2884  000B34  0E00               	movlw	0
  2885  000B36  6E28               	movwf	___flmul@aexp^0,c
  2886  000B38  AE27               	btfss	(___flmul@grs+3)^0,7,c
  2887  000B3A  EFA1  F005         	goto	u3401
  2888  000B3E  EFA3  F005         	goto	u3400
  2889  000B42                     u3401:
  2890  000B42  EFC7  F005         	goto	l1013
  2891  000B46                     u3400:
  2892  000B46  0EFF               	movlw	255
  2893  000B48  1424               	andwf	___flmul@grs^0,w,c
  2894  000B4A  6E1F               	movwf	??___flmul^0,c
  2895  000B4C  0EFF               	movlw	255
  2896  000B4E  1425               	andwf	(___flmul@grs+1)^0,w,c
  2897  000B50  6E20               	movwf	(??___flmul+1)^0,c
  2898  000B52  0EFF               	movlw	255
  2899  000B54  1426               	andwf	(___flmul@grs+2)^0,w,c
  2900  000B56  6E21               	movwf	(??___flmul+2)^0,c
  2901  000B58  0E7F               	movlw	127
  2902  000B5A  1427               	andwf	(___flmul@grs+3)^0,w,c
  2903  000B5C  6E22               	movwf	(??___flmul+3)^0,c
  2904  000B5E  501F               	movf	??___flmul^0,w,c
  2905  000B60  1020               	iorwf	(??___flmul+1)^0,w,c
  2906  000B62  1021               	iorwf	(??___flmul+2)^0,w,c
  2907  000B64  1022               	iorwf	(??___flmul+3)^0,w,c
  2908  000B66  B4D8               	btfsc	status,2,c
  2909  000B68  EFB8  F005         	goto	u3411
  2910  000B6C  EFBA  F005         	goto	u3410
  2911  000B70                     u3411:
  2912  000B70  EFBE  F005         	goto	l1014
  2913  000B74                     u3410:
  2914  000B74                     l3713:
  2915  000B74  0E01               	movlw	1
  2916  000B76  6E28               	movwf	___flmul@aexp^0,c
  2917  000B78  EFC7  F005         	goto	l1013
  2918  000B7C                     l1014:
  2919  000B7C  A02A               	btfss	___flmul@prod^0,0,c
  2920  000B7E  EFC3  F005         	goto	u3421
  2921  000B82  EFC5  F005         	goto	u3420
  2922  000B86                     u3421:
  2923  000B86  EFC7  F005         	goto	l1013
  2924  000B8A                     u3420:
  2925  000B8A  EFBA  F005         	goto	l3713
  2926  000B8E                     l1013:
  2927  000B8E  5028               	movf	___flmul@aexp^0,w,c
  2928  000B90  B4D8               	btfsc	status,2,c
  2929  000B92  EFCD  F005         	goto	u3431
  2930  000B96  EFCF  F005         	goto	u3430
  2931  000B9A                     u3431:
  2932  000B9A  EFF3  F005         	goto	l3725
  2933  000B9E                     u3430:
  2934  000B9E  0E01               	movlw	1
  2935  000BA0  262A               	addwf	___flmul@prod^0,f,c
  2936  000BA2  0E00               	movlw	0
  2937  000BA4  222B               	addwfc	(___flmul@prod+1)^0,f,c
  2938  000BA6  222C               	addwfc	(___flmul@prod+2)^0,f,c
  2939  000BA8  222D               	addwfc	(___flmul@prod+3)^0,f,c
  2940  000BAA  A02D               	btfss	(___flmul@prod+3)^0,0,c
  2941  000BAC  EFDA  F005         	goto	u3441
  2942  000BB0  EFDC  F005         	goto	u3440
  2943  000BB4                     u3441:
  2944  000BB4  EFF3  F005         	goto	l3725
  2945  000BB8                     u3440:
  2946  000BB8  C02A  F01F         	movff	___flmul@prod,??___flmul
  2947  000BBC  C02B  F020         	movff	___flmul@prod+1,??___flmul+1
  2948  000BC0  C02C  F021         	movff	___flmul@prod+2,??___flmul+2
  2949  000BC4  C02D  F022         	movff	___flmul@prod+3,??___flmul+3
  2950  000BC8  3422               	rlcf	(??___flmul+3)^0,w,c
  2951  000BCA  3222               	rrcf	(??___flmul+3)^0,f,c
  2952  000BCC  3221               	rrcf	(??___flmul+2)^0,f,c
  2953  000BCE  3220               	rrcf	(??___flmul+1)^0,f,c
  2954  000BD0  321F               	rrcf	??___flmul^0,f,c
  2955  000BD2  C01F  F02A         	movff	??___flmul,___flmul@prod
  2956  000BD6  C020  F02B         	movff	??___flmul+1,___flmul@prod+1
  2957  000BDA  C021  F02C         	movff	??___flmul+2,___flmul@prod+2
  2958  000BDE  C022  F02D         	movff	??___flmul+3,___flmul@prod+3
  2959  000BE2  4A2E               	infsnz	___flmul@temp^0,f,c
  2960  000BE4  2A2F               	incf	(___flmul@temp+1)^0,f,c
  2961  000BE6                     l3725:
  2962  000BE6  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  2963  000BE8  EFFE  F005         	goto	u3451
  2964  000BEC  502F               	movf	(___flmul@temp+1)^0,w,c
  2965  000BEE  E108               	bnz	u3450
  2966  000BF0  282E               	incf	___flmul@temp^0,w,c
  2967  000BF2  A0D8               	btfss	status,0,c
  2968  000BF4  EFFE  F005         	goto	u3451
  2969  000BF8  EF00  F006         	goto	u3450
  2970  000BFC                     u3451:
  2971  000BFC  EF0A  F006         	goto	l3729
  2972  000C00                     u3450:
  2973  000C00  0E00               	movlw	0
  2974  000C02  6E2A               	movwf	___flmul@prod^0,c
  2975  000C04  0E00               	movlw	0
  2976  000C06  6E2B               	movwf	(___flmul@prod+1)^0,c
  2977  000C08  0E80               	movlw	128
  2978  000C0A  6E2C               	movwf	(___flmul@prod+2)^0,c
  2979  000C0C  0E7F               	movlw	127
  2980  000C0E  6E2D               	movwf	(___flmul@prod+3)^0,c
  2981  000C10  EF38  F006         	goto	l3741
  2982  000C14                     l3729:
  2983  000C14  BE2F               	btfsc	(___flmul@temp+1)^0,7,c
  2984  000C16  EF17  F006         	goto	u3460
  2985  000C1A  502F               	movf	(___flmul@temp+1)^0,w,c
  2986  000C1C  E106               	bnz	u3461
  2987  000C1E  042E               	decf	___flmul@temp^0,w,c
  2988  000C20  B0D8               	btfsc	status,0,c
  2989  000C22  EF15  F006         	goto	u3461
  2990  000C26  EF17  F006         	goto	u3460
  2991  000C2A                     u3461:
  2992  000C2A  EF23  F006         	goto	l1021
  2993  000C2E                     u3460:
  2994  000C2E  0E00               	movlw	0
  2995  000C30  6E2A               	movwf	___flmul@prod^0,c
  2996  000C32  0E00               	movlw	0
  2997  000C34  6E2B               	movwf	(___flmul@prod+1)^0,c
  2998  000C36  0E00               	movlw	0
  2999  000C38  6E2C               	movwf	(___flmul@prod+2)^0,c
  3000  000C3A  0E00               	movlw	0
  3001  000C3C  6E2D               	movwf	(___flmul@prod+3)^0,c
  3002  000C3E  0E00               	movlw	0
  3003  000C40  6E23               	movwf	___flmul@sign^0,c
  3004  000C42  EF38  F006         	goto	l3741
  3005  000C46                     l1021:
  3006  000C46  C02E  F029         	movff	___flmul@temp,___flmul@bexp
  3007  000C4A  0EFF               	movlw	255
  3008  000C4C  162A               	andwf	___flmul@prod^0,f,c
  3009  000C4E  0EFF               	movlw	255
  3010  000C50  162B               	andwf	(___flmul@prod+1)^0,f,c
  3011  000C52  0E7F               	movlw	127
  3012  000C54  162C               	andwf	(___flmul@prod+2)^0,f,c
  3013  000C56  0E00               	movlw	0
  3014  000C58  162D               	andwf	(___flmul@prod+3)^0,f,c
  3015  000C5A  A029               	btfss	___flmul@bexp^0,0,c
  3016  000C5C  EF32  F006         	goto	u3471
  3017  000C60  EF34  F006         	goto	u3470
  3018  000C64                     u3471:
  3019  000C64  EF35  F006         	goto	l3739
  3020  000C68                     u3470:
  3021  000C68  8E2C               	bsf	(___flmul@prod+2)^0,7,c
  3022  000C6A                     l3739:
  3023  000C6A  90D8               	bcf	status,0,c
  3024  000C6C  3029               	rrcf	___flmul@bexp^0,w,c
  3025  000C6E  6E2D               	movwf	(___flmul@prod+3)^0,c
  3026  000C70                     l3741:
  3027  000C70  5023               	movf	___flmul@sign^0,w,c
  3028  000C72  122D               	iorwf	(___flmul@prod+3)^0,f,c
  3029  000C74  C02A  F017         	movff	___flmul@prod,?___flmul
  3030  000C78  C02B  F018         	movff	___flmul@prod+1,?___flmul+1
  3031  000C7C  C02C  F019         	movff	___flmul@prod+2,?___flmul+2
  3032  000C80  C02D  F01A         	movff	___flmul@prod+3,?___flmul+3
  3033  000C84                     l1008:
  3034  000C84  0012               	return		;funcret
  3035  000C86                     __end_of___flmul:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function ___fldiv *****************
  3039 ;; Defined at:
  3040 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  b               4   47[COMRAM] unsigned char 
  3043 ;;  a               4   51[COMRAM] unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  grs             4   66[COMRAM] unsigned long 
  3046 ;;  rem             4   59[COMRAM] unsigned long 
  3047 ;;  new_exp         2   64[COMRAM] short 
  3048 ;;  aexp            1   71[COMRAM] unsigned char 
  3049 ;;  bexp            1   70[COMRAM] unsigned char 
  3050 ;;  sign            1   63[COMRAM] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  4   47[COMRAM] unsigned char 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3060 ;;      Params:         8       0       0       0       0       0       0       0       0
  3061 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3062 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3063 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3064 ;;Total ram usage:       25 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    2
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_appADC
  3071 ;;		_appBat
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text13
  3076  000C86                     __ptext13:
  3077                           	callstack 0
  3078  000C86                     ___fldiv:
  3079                           	callstack 26
  3080  000C86  5033               	movf	(___fldiv@b+3)^0,w,c
  3081  000C88  0B80               	andlw	128
  3082  000C8A  6E40               	movwf	___fldiv@sign^0,c
  3083  000C8C  5033               	movf	(___fldiv@b+3)^0,w,c
  3084  000C8E  2433               	addwf	(___fldiv@b+3)^0,w,c
  3085  000C90  6E47               	movwf	___fldiv@bexp^0,c
  3086  000C92  AE32               	btfss	(___fldiv@b+2)^0,7,c
  3087  000C94  EF4E  F006         	goto	u3061
  3088  000C98  EF50  F006         	goto	u3060
  3089  000C9C                     u3061:
  3090  000C9C  EF51  F006         	goto	l3485
  3091  000CA0                     u3060:
  3092  000CA0  8047               	bsf	___fldiv@bexp^0,0,c
  3093  000CA2                     l3485:
  3094  000CA2  5047               	movf	___fldiv@bexp^0,w,c
  3095  000CA4  B4D8               	btfsc	status,2,c
  3096  000CA6  EF57  F006         	goto	u3071
  3097  000CAA  EF59  F006         	goto	u3070
  3098  000CAE                     u3071:
  3099  000CAE  EF6E  F006         	goto	l3495
  3100  000CB2                     u3070:
  3101  000CB2  2847               	incf	___fldiv@bexp^0,w,c
  3102  000CB4  A4D8               	btfss	status,2,c
  3103  000CB6  EF5F  F006         	goto	u3081
  3104  000CBA  EF61  F006         	goto	u3080
  3105  000CBE                     u3081:
  3106  000CBE  EF69  F006         	goto	l3491
  3107  000CC2                     u3080:
  3108  000CC2  0E00               	movlw	0
  3109  000CC4  6E30               	movwf	___fldiv@b^0,c
  3110  000CC6  0E00               	movlw	0
  3111  000CC8  6E31               	movwf	(___fldiv@b+1)^0,c
  3112  000CCA  0E00               	movlw	0
  3113  000CCC  6E32               	movwf	(___fldiv@b+2)^0,c
  3114  000CCE  0E00               	movlw	0
  3115  000CD0  6E33               	movwf	(___fldiv@b+3)^0,c
  3116  000CD2                     l3491:
  3117  000CD2  8E32               	bsf	(___fldiv@b+2)^0,7,c
  3118  000CD4  0E00               	movlw	0
  3119  000CD6  6E33               	movwf	(___fldiv@b+3)^0,c
  3120  000CD8  EF76  F006         	goto	l3497
  3121  000CDC                     l3495:
  3122  000CDC  0E00               	movlw	0
  3123  000CDE  6E30               	movwf	___fldiv@b^0,c
  3124  000CE0  0E00               	movlw	0
  3125  000CE2  6E31               	movwf	(___fldiv@b+1)^0,c
  3126  000CE4  0E00               	movlw	0
  3127  000CE6  6E32               	movwf	(___fldiv@b+2)^0,c
  3128  000CE8  0E00               	movlw	0
  3129  000CEA  6E33               	movwf	(___fldiv@b+3)^0,c
  3130  000CEC                     l3497:
  3131  000CEC  5037               	movf	(___fldiv@a+3)^0,w,c
  3132  000CEE  0B80               	andlw	128
  3133  000CF0  1A40               	xorwf	___fldiv@sign^0,f,c
  3134  000CF2  5037               	movf	(___fldiv@a+3)^0,w,c
  3135  000CF4  2437               	addwf	(___fldiv@a+3)^0,w,c
  3136  000CF6  6E48               	movwf	___fldiv@aexp^0,c
  3137  000CF8  AE36               	btfss	(___fldiv@a+2)^0,7,c
  3138  000CFA  EF81  F006         	goto	u3091
  3139  000CFE  EF83  F006         	goto	u3090
  3140  000D02                     u3091:
  3141  000D02  EF84  F006         	goto	l3505
  3142  000D06                     u3090:
  3143  000D06  8048               	bsf	___fldiv@aexp^0,0,c
  3144  000D08                     l3505:
  3145  000D08  5048               	movf	___fldiv@aexp^0,w,c
  3146  000D0A  B4D8               	btfsc	status,2,c
  3147  000D0C  EF8A  F006         	goto	u3101
  3148  000D10  EF8C  F006         	goto	u3100
  3149  000D14                     u3101:
  3150  000D14  EFA1  F006         	goto	l3515
  3151  000D18                     u3100:
  3152  000D18  2848               	incf	___fldiv@aexp^0,w,c
  3153  000D1A  A4D8               	btfss	status,2,c
  3154  000D1C  EF92  F006         	goto	u3111
  3155  000D20  EF94  F006         	goto	u3110
  3156  000D24                     u3111:
  3157  000D24  EF9C  F006         	goto	l3511
  3158  000D28                     u3110:
  3159  000D28  0E00               	movlw	0
  3160  000D2A  6E34               	movwf	___fldiv@a^0,c
  3161  000D2C  0E00               	movlw	0
  3162  000D2E  6E35               	movwf	(___fldiv@a+1)^0,c
  3163  000D30  0E00               	movlw	0
  3164  000D32  6E36               	movwf	(___fldiv@a+2)^0,c
  3165  000D34  0E00               	movlw	0
  3166  000D36  6E37               	movwf	(___fldiv@a+3)^0,c
  3167  000D38                     l3511:
  3168  000D38  8E36               	bsf	(___fldiv@a+2)^0,7,c
  3169  000D3A  0E00               	movlw	0
  3170  000D3C  6E37               	movwf	(___fldiv@a+3)^0,c
  3171  000D3E  EFA9  F006         	goto	l3517
  3172  000D42                     l3515:
  3173  000D42  0E00               	movlw	0
  3174  000D44  6E34               	movwf	___fldiv@a^0,c
  3175  000D46  0E00               	movlw	0
  3176  000D48  6E35               	movwf	(___fldiv@a+1)^0,c
  3177  000D4A  0E00               	movlw	0
  3178  000D4C  6E36               	movwf	(___fldiv@a+2)^0,c
  3179  000D4E  0E00               	movlw	0
  3180  000D50  6E37               	movwf	(___fldiv@a+3)^0,c
  3181  000D52                     l3517:
  3182  000D52  5034               	movf	___fldiv@a^0,w,c
  3183  000D54  1035               	iorwf	(___fldiv@a+1)^0,w,c
  3184  000D56  1036               	iorwf	(___fldiv@a+2)^0,w,c
  3185  000D58  1037               	iorwf	(___fldiv@a+3)^0,w,c
  3186  000D5A  A4D8               	btfss	status,2,c
  3187  000D5C  EFB2  F006         	goto	u3121
  3188  000D60  EFB4  F006         	goto	u3120
  3189  000D64                     u3121:
  3190  000D64  EFCC  F006         	goto	l3529
  3191  000D68                     u3120:
  3192  000D68  0E00               	movlw	0
  3193  000D6A  6E30               	movwf	___fldiv@b^0,c
  3194  000D6C  0E00               	movlw	0
  3195  000D6E  6E31               	movwf	(___fldiv@b+1)^0,c
  3196  000D70  0E00               	movlw	0
  3197  000D72  6E32               	movwf	(___fldiv@b+2)^0,c
  3198  000D74  0E00               	movlw	0
  3199  000D76  6E33               	movwf	(___fldiv@b+3)^0,c
  3200  000D78  0E80               	movlw	128
  3201  000D7A  1232               	iorwf	(___fldiv@b+2)^0,f,c
  3202  000D7C  0E7F               	movlw	127
  3203  000D7E  1233               	iorwf	(___fldiv@b+3)^0,f,c
  3204  000D80                     l3523:
  3205  000D80  5040               	movf	___fldiv@sign^0,w,c
  3206  000D82  1233               	iorwf	(___fldiv@b+3)^0,f,c
  3207  000D84  C030  F030         	movff	___fldiv@b,?___fldiv
  3208  000D88  C031  F031         	movff	___fldiv@b+1,?___fldiv+1
  3209  000D8C  C032  F032         	movff	___fldiv@b+2,?___fldiv+2
  3210  000D90  C033  F033         	movff	___fldiv@b+3,?___fldiv+3
  3211  000D94  EF0F  F008         	goto	l972
  3212  000D98                     l3529:
  3213  000D98  5047               	movf	___fldiv@bexp^0,w,c
  3214  000D9A  A4D8               	btfss	status,2,c
  3215  000D9C  EFD2  F006         	goto	u3131
  3216  000DA0  EFD4  F006         	goto	u3130
  3217  000DA4                     u3131:
  3218  000DA4  EFDE  F006         	goto	l3537
  3219  000DA8                     u3130:
  3220  000DA8  0E00               	movlw	0
  3221  000DAA  6E30               	movwf	?___fldiv^0,c
  3222  000DAC  0E00               	movlw	0
  3223  000DAE  6E31               	movwf	(?___fldiv+1)^0,c
  3224  000DB0  0E00               	movlw	0
  3225  000DB2  6E32               	movwf	(?___fldiv+2)^0,c
  3226  000DB4  0E00               	movlw	0
  3227  000DB6  6E33               	movwf	(?___fldiv+3)^0,c
  3228  000DB8  EF0F  F008         	goto	l972
  3229  000DBC                     l3537:
  3230  000DBC  5048               	movf	___fldiv@aexp^0,w,c
  3231  000DBE  C047  F038         	movff	___fldiv@bexp,??___fldiv
  3232  000DC2  6A39               	clrf	(??___fldiv+1)^0,c
  3233  000DC4  5E38               	subwf	??___fldiv^0,f,c
  3234  000DC6  0E00               	movlw	0
  3235  000DC8  5A39               	subwfb	(??___fldiv+1)^0,f,c
  3236  000DCA  0E7F               	movlw	127
  3237  000DCC  2438               	addwf	??___fldiv^0,w,c
  3238  000DCE  6E41               	movwf	___fldiv@new_exp^0,c
  3239  000DD0  0E00               	movlw	0
  3240  000DD2  2039               	addwfc	(??___fldiv+1)^0,w,c
  3241  000DD4  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  3242  000DD6  C030  F03C         	movff	___fldiv@b,___fldiv@rem
  3243  000DDA  C031  F03D         	movff	___fldiv@b+1,___fldiv@rem+1
  3244  000DDE  C032  F03E         	movff	___fldiv@b+2,___fldiv@rem+2
  3245  000DE2  C033  F03F         	movff	___fldiv@b+3,___fldiv@rem+3
  3246  000DE6  0E00               	movlw	0
  3247  000DE8  6E30               	movwf	___fldiv@b^0,c
  3248  000DEA  0E00               	movlw	0
  3249  000DEC  6E31               	movwf	(___fldiv@b+1)^0,c
  3250  000DEE  0E00               	movlw	0
  3251  000DF0  6E32               	movwf	(___fldiv@b+2)^0,c
  3252  000DF2  0E00               	movlw	0
  3253  000DF4  6E33               	movwf	(___fldiv@b+3)^0,c
  3254  000DF6  0E00               	movlw	0
  3255  000DF8  6E43               	movwf	___fldiv@grs^0,c
  3256  000DFA  0E00               	movlw	0
  3257  000DFC  6E44               	movwf	(___fldiv@grs+1)^0,c
  3258  000DFE  0E00               	movlw	0
  3259  000E00  6E45               	movwf	(___fldiv@grs+2)^0,c
  3260  000E02  0E00               	movlw	0
  3261  000E04  6E46               	movwf	(___fldiv@grs+3)^0,c
  3262  000E06  0E00               	movlw	0
  3263  000E08  6E48               	movwf	___fldiv@aexp^0,c
  3264  000E0A  EF3F  F007         	goto	l974
  3265  000E0E                     l3547:
  3266  000E0E  5048               	movf	___fldiv@aexp^0,w,c
  3267  000E10  B4D8               	btfsc	status,2,c
  3268  000E12  EF0D  F007         	goto	u3141
  3269  000E16  EF0F  F007         	goto	u3140
  3270  000E1A                     u3141:
  3271  000E1A  EF26  F007         	goto	l3555
  3272  000E1E                     u3140:
  3273  000E1E  90D8               	bcf	status,0,c
  3274  000E20  363C               	rlcf	___fldiv@rem^0,f,c
  3275  000E22  363D               	rlcf	(___fldiv@rem+1)^0,f,c
  3276  000E24  363E               	rlcf	(___fldiv@rem+2)^0,f,c
  3277  000E26  363F               	rlcf	(___fldiv@rem+3)^0,f,c
  3278  000E28  90D8               	bcf	status,0,c
  3279  000E2A  3630               	rlcf	___fldiv@b^0,f,c
  3280  000E2C  3631               	rlcf	(___fldiv@b+1)^0,f,c
  3281  000E2E  3632               	rlcf	(___fldiv@b+2)^0,f,c
  3282  000E30  3633               	rlcf	(___fldiv@b+3)^0,f,c
  3283  000E32  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  3284  000E34  EF1E  F007         	goto	u3151
  3285  000E38  EF20  F007         	goto	u3150
  3286  000E3C                     u3151:
  3287  000E3C  EF21  F007         	goto	l977
  3288  000E40                     u3150:
  3289  000E40  8030               	bsf	___fldiv@b^0,0,c
  3290  000E42                     l977:
  3291  000E42  90D8               	bcf	status,0,c
  3292  000E44  3643               	rlcf	___fldiv@grs^0,f,c
  3293  000E46  3644               	rlcf	(___fldiv@grs+1)^0,f,c
  3294  000E48  3645               	rlcf	(___fldiv@grs+2)^0,f,c
  3295  000E4A  3646               	rlcf	(___fldiv@grs+3)^0,f,c
  3296  000E4C                     l3555:
  3297  000E4C  5034               	movf	___fldiv@a^0,w,c
  3298  000E4E  5C3C               	subwf	___fldiv@rem^0,w,c
  3299  000E50  5035               	movf	(___fldiv@a+1)^0,w,c
  3300  000E52  583D               	subwfb	(___fldiv@rem+1)^0,w,c
  3301  000E54  5036               	movf	(___fldiv@a+2)^0,w,c
  3302  000E56  583E               	subwfb	(___fldiv@rem+2)^0,w,c
  3303  000E58  5037               	movf	(___fldiv@a+3)^0,w,c
  3304  000E5A  583F               	subwfb	(___fldiv@rem+3)^0,w,c
  3305  000E5C  A0D8               	btfss	status,0,c
  3306  000E5E  EF33  F007         	goto	u3161
  3307  000E62  EF35  F007         	goto	u3160
  3308  000E66                     u3161:
  3309  000E66  EF3E  F007         	goto	l3561
  3310  000E6A                     u3160:
  3311  000E6A  8C46               	bsf	(___fldiv@grs+3)^0,6,c
  3312  000E6C  5034               	movf	___fldiv@a^0,w,c
  3313  000E6E  5E3C               	subwf	___fldiv@rem^0,f,c
  3314  000E70  5035               	movf	(___fldiv@a+1)^0,w,c
  3315  000E72  5A3D               	subwfb	(___fldiv@rem+1)^0,f,c
  3316  000E74  5036               	movf	(___fldiv@a+2)^0,w,c
  3317  000E76  5A3E               	subwfb	(___fldiv@rem+2)^0,f,c
  3318  000E78  5037               	movf	(___fldiv@a+3)^0,w,c
  3319  000E7A  5A3F               	subwfb	(___fldiv@rem+3)^0,f,c
  3320  000E7C                     l3561:
  3321  000E7C  2A48               	incf	___fldiv@aexp^0,f,c
  3322  000E7E                     l974:
  3323  000E7E  0E19               	movlw	25
  3324  000E80  6448               	cpfsgt	___fldiv@aexp^0,c
  3325  000E82  EF45  F007         	goto	u3171
  3326  000E86  EF47  F007         	goto	u3170
  3327  000E8A                     u3171:
  3328  000E8A  EF07  F007         	goto	l3547
  3329  000E8E                     u3170:
  3330  000E8E  503C               	movf	___fldiv@rem^0,w,c
  3331  000E90  103D               	iorwf	(___fldiv@rem+1)^0,w,c
  3332  000E92  103E               	iorwf	(___fldiv@rem+2)^0,w,c
  3333  000E94  103F               	iorwf	(___fldiv@rem+3)^0,w,c
  3334  000E96  B4D8               	btfsc	status,2,c
  3335  000E98  EF50  F007         	goto	u3181
  3336  000E9C  EF52  F007         	goto	u3180
  3337  000EA0                     u3181:
  3338  000EA0  EF6A  F007         	goto	l3573
  3339  000EA4                     u3180:
  3340  000EA4  8043               	bsf	___fldiv@grs^0,0,c
  3341  000EA6  EF6A  F007         	goto	l3573
  3342  000EAA                     l3567:
  3343  000EAA  90D8               	bcf	status,0,c
  3344  000EAC  3630               	rlcf	___fldiv@b^0,f,c
  3345  000EAE  3631               	rlcf	(___fldiv@b+1)^0,f,c
  3346  000EB0  3632               	rlcf	(___fldiv@b+2)^0,f,c
  3347  000EB2  3633               	rlcf	(___fldiv@b+3)^0,f,c
  3348  000EB4  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  3349  000EB6  EF5F  F007         	goto	u3191
  3350  000EBA  EF61  F007         	goto	u3190
  3351  000EBE                     u3191:
  3352  000EBE  EF62  F007         	goto	l983
  3353  000EC2                     u3190:
  3354  000EC2  8030               	bsf	___fldiv@b^0,0,c
  3355  000EC4                     l983:
  3356  000EC4  90D8               	bcf	status,0,c
  3357  000EC6  3643               	rlcf	___fldiv@grs^0,f,c
  3358  000EC8  3644               	rlcf	(___fldiv@grs+1)^0,f,c
  3359  000ECA  3645               	rlcf	(___fldiv@grs+2)^0,f,c
  3360  000ECC  3646               	rlcf	(___fldiv@grs+3)^0,f,c
  3361  000ECE  0641               	decf	___fldiv@new_exp^0,f,c
  3362  000ED0  A0D8               	btfss	status,0,c
  3363  000ED2  0642               	decf	(___fldiv@new_exp+1)^0,f,c
  3364  000ED4                     l3573:
  3365  000ED4  AE32               	btfss	(___fldiv@b+2)^0,7,c
  3366  000ED6  EF6F  F007         	goto	u3201
  3367  000EDA  EF71  F007         	goto	u3200
  3368  000EDE                     u3201:
  3369  000EDE  EF55  F007         	goto	l3567
  3370  000EE2                     u3200:
  3371  000EE2  0E00               	movlw	0
  3372  000EE4  6E48               	movwf	___fldiv@aexp^0,c
  3373  000EE6  AE46               	btfss	(___fldiv@grs+3)^0,7,c
  3374  000EE8  EF78  F007         	goto	u3211
  3375  000EEC  EF7A  F007         	goto	u3210
  3376  000EF0                     u3211:
  3377  000EF0  EF9E  F007         	goto	l985
  3378  000EF4                     u3210:
  3379  000EF4  0EFF               	movlw	255
  3380  000EF6  1443               	andwf	___fldiv@grs^0,w,c
  3381  000EF8  6E38               	movwf	??___fldiv^0,c
  3382  000EFA  0EFF               	movlw	255
  3383  000EFC  1444               	andwf	(___fldiv@grs+1)^0,w,c
  3384  000EFE  6E39               	movwf	(??___fldiv+1)^0,c
  3385  000F00  0EFF               	movlw	255
  3386  000F02  1445               	andwf	(___fldiv@grs+2)^0,w,c
  3387  000F04  6E3A               	movwf	(??___fldiv+2)^0,c
  3388  000F06  0E7F               	movlw	127
  3389  000F08  1446               	andwf	(___fldiv@grs+3)^0,w,c
  3390  000F0A  6E3B               	movwf	(??___fldiv+3)^0,c
  3391  000F0C  5038               	movf	??___fldiv^0,w,c
  3392  000F0E  1039               	iorwf	(??___fldiv+1)^0,w,c
  3393  000F10  103A               	iorwf	(??___fldiv+2)^0,w,c
  3394  000F12  103B               	iorwf	(??___fldiv+3)^0,w,c
  3395  000F14  B4D8               	btfsc	status,2,c
  3396  000F16  EF8F  F007         	goto	u3221
  3397  000F1A  EF91  F007         	goto	u3220
  3398  000F1E                     u3221:
  3399  000F1E  EF95  F007         	goto	l986
  3400  000F22                     u3220:
  3401  000F22                     l3581:
  3402  000F22  0E01               	movlw	1
  3403  000F24  6E48               	movwf	___fldiv@aexp^0,c
  3404  000F26  EF9E  F007         	goto	l985
  3405  000F2A                     l986:
  3406  000F2A  A030               	btfss	___fldiv@b^0,0,c
  3407  000F2C  EF9A  F007         	goto	u3231
  3408  000F30  EF9C  F007         	goto	u3230
  3409  000F34                     u3231:
  3410  000F34  EF9E  F007         	goto	l985
  3411  000F38                     u3230:
  3412  000F38  EF91  F007         	goto	l3581
  3413  000F3C                     l985:
  3414  000F3C  5048               	movf	___fldiv@aexp^0,w,c
  3415  000F3E  B4D8               	btfsc	status,2,c
  3416  000F40  EFA4  F007         	goto	u3241
  3417  000F44  EFA6  F007         	goto	u3240
  3418  000F48                     u3241:
  3419  000F48  EFCA  F007         	goto	l3593
  3420  000F4C                     u3240:
  3421  000F4C  0E01               	movlw	1
  3422  000F4E  2630               	addwf	___fldiv@b^0,f,c
  3423  000F50  0E00               	movlw	0
  3424  000F52  2231               	addwfc	(___fldiv@b+1)^0,f,c
  3425  000F54  2232               	addwfc	(___fldiv@b+2)^0,f,c
  3426  000F56  2233               	addwfc	(___fldiv@b+3)^0,f,c
  3427  000F58  A033               	btfss	(___fldiv@b+3)^0,0,c
  3428  000F5A  EFB1  F007         	goto	u3251
  3429  000F5E  EFB3  F007         	goto	u3250
  3430  000F62                     u3251:
  3431  000F62  EFCA  F007         	goto	l3593
  3432  000F66                     u3250:
  3433  000F66  C030  F038         	movff	___fldiv@b,??___fldiv
  3434  000F6A  C031  F039         	movff	___fldiv@b+1,??___fldiv+1
  3435  000F6E  C032  F03A         	movff	___fldiv@b+2,??___fldiv+2
  3436  000F72  C033  F03B         	movff	___fldiv@b+3,??___fldiv+3
  3437  000F76  343B               	rlcf	(??___fldiv+3)^0,w,c
  3438  000F78  323B               	rrcf	(??___fldiv+3)^0,f,c
  3439  000F7A  323A               	rrcf	(??___fldiv+2)^0,f,c
  3440  000F7C  3239               	rrcf	(??___fldiv+1)^0,f,c
  3441  000F7E  3238               	rrcf	??___fldiv^0,f,c
  3442  000F80  C038  F030         	movff	??___fldiv,___fldiv@b
  3443  000F84  C039  F031         	movff	??___fldiv+1,___fldiv@b+1
  3444  000F88  C03A  F032         	movff	??___fldiv+2,___fldiv@b+2
  3445  000F8C  C03B  F033         	movff	??___fldiv+3,___fldiv@b+3
  3446  000F90  4A41               	infsnz	___fldiv@new_exp^0,f,c
  3447  000F92  2A42               	incf	(___fldiv@new_exp+1)^0,f,c
  3448  000F94                     l3593:
  3449  000F94  BE42               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3450  000F96  EFD5  F007         	goto	u3261
  3451  000F9A  5042               	movf	(___fldiv@new_exp+1)^0,w,c
  3452  000F9C  E108               	bnz	u3260
  3453  000F9E  2841               	incf	___fldiv@new_exp^0,w,c
  3454  000FA0  A0D8               	btfss	status,0,c
  3455  000FA2  EFD5  F007         	goto	u3261
  3456  000FA6  EFD7  F007         	goto	u3260
  3457  000FAA                     u3261:
  3458  000FAA  EFE2  F007         	goto	l3597
  3459  000FAE                     u3260:
  3460  000FAE  0E00               	movlw	0
  3461  000FB0  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  3462  000FB2  6841               	setf	___fldiv@new_exp^0,c
  3463  000FB4  0E00               	movlw	0
  3464  000FB6  6E30               	movwf	___fldiv@b^0,c
  3465  000FB8  0E00               	movlw	0
  3466  000FBA  6E31               	movwf	(___fldiv@b+1)^0,c
  3467  000FBC  0E00               	movlw	0
  3468  000FBE  6E32               	movwf	(___fldiv@b+2)^0,c
  3469  000FC0  0E00               	movlw	0
  3470  000FC2  6E33               	movwf	(___fldiv@b+3)^0,c
  3471  000FC4                     l3597:
  3472  000FC4  BE42               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3473  000FC6  EFEF  F007         	goto	u3270
  3474  000FCA  5042               	movf	(___fldiv@new_exp+1)^0,w,c
  3475  000FCC  E106               	bnz	u3271
  3476  000FCE  0441               	decf	___fldiv@new_exp^0,w,c
  3477  000FD0  B0D8               	btfsc	status,0,c
  3478  000FD2  EFED  F007         	goto	u3271
  3479  000FD6  EFEF  F007         	goto	u3270
  3480  000FDA                     u3271:
  3481  000FDA  EFFD  F007         	goto	l3601
  3482  000FDE                     u3270:
  3483  000FDE  0E00               	movlw	0
  3484  000FE0  6E42               	movwf	(___fldiv@new_exp+1)^0,c
  3485  000FE2  0E00               	movlw	0
  3486  000FE4  6E41               	movwf	___fldiv@new_exp^0,c
  3487  000FE6  0E00               	movlw	0
  3488  000FE8  6E30               	movwf	___fldiv@b^0,c
  3489  000FEA  0E00               	movlw	0
  3490  000FEC  6E31               	movwf	(___fldiv@b+1)^0,c
  3491  000FEE  0E00               	movlw	0
  3492  000FF0  6E32               	movwf	(___fldiv@b+2)^0,c
  3493  000FF2  0E00               	movlw	0
  3494  000FF4  6E33               	movwf	(___fldiv@b+3)^0,c
  3495  000FF6  0E00               	movlw	0
  3496  000FF8  6E40               	movwf	___fldiv@sign^0,c
  3497  000FFA                     l3601:
  3498  000FFA  C041  F047         	movff	___fldiv@new_exp,___fldiv@bexp
  3499  000FFE  A047               	btfss	___fldiv@bexp^0,0,c
  3500  001000  EF04  F008         	goto	u3281
  3501  001004  EF06  F008         	goto	u3280
  3502  001008                     u3281:
  3503  001008  EF09  F008         	goto	l3607
  3504  00100C                     u3280:
  3505  00100C  8E32               	bsf	(___fldiv@b+2)^0,7,c
  3506  00100E  EF0A  F008         	goto	l3609
  3507  001012                     l3607:
  3508  001012  9E32               	bcf	(___fldiv@b+2)^0,7,c
  3509  001014                     l3609:
  3510  001014  90D8               	bcf	status,0,c
  3511  001016  3047               	rrcf	___fldiv@bexp^0,w,c
  3512  001018  6E33               	movwf	(___fldiv@b+3)^0,c
  3513  00101A  EFC0  F006         	goto	l3523
  3514  00101E                     l972:
  3515  00101E  0012               	return		;funcret
  3516  001020                     __end_of___fldiv:
  3517                           	callstack 0
  3518                           
  3519 ;; *************** function ___awmod *****************
  3520 ;; Defined at:
  3521 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  dividend        2   82[COMRAM] int 
  3524 ;;  divisor         2   84[COMRAM] int 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  sign            1    1[BANK0 ] unsigned char 
  3527 ;;  counter         1    0[BANK0 ] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  2   82[COMRAM] int 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3537 ;;      Params:         4       0       0       0       0       0       0       0       0
  3538 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3540 ;;      Totals:         4       2       0       0       0       0       0       0       0
  3541 ;;Total ram usage:        6 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    2
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_appADC
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text14
  3552  002C3E                     __ptext14:
  3553                           	callstack 0
  3554  002C3E                     ___awmod:
  3555                           	callstack 26
  3556  002C3E  0E00               	movlw	0
  3557  002C40  0100               	movlb	0	; () banked
  3558  002C42  6F61               	movwf	___awmod@sign& (0+255),b
  3559  002C44                     
  3560                           ; BSR set to: 0
  3561  002C44  BE54               	btfsc	(___awmod@dividend+1)^0,7,c
  3562  002C46  EF29  F016         	goto	u4590
  3563  002C4A  EF27  F016         	goto	u4591
  3564  002C4E                     u4591:
  3565  002C4E  EF2F  F016         	goto	l4697
  3566  002C52                     u4590:
  3567  002C52                     
  3568                           ; BSR set to: 0
  3569  002C52  6C53               	negf	___awmod@dividend^0,c
  3570  002C54  1E54               	comf	(___awmod@dividend+1)^0,f,c
  3571  002C56  B0D8               	btfsc	status,0,c
  3572  002C58  2A54               	incf	(___awmod@dividend+1)^0,f,c
  3573  002C5A                     
  3574                           ; BSR set to: 0
  3575  002C5A  0E01               	movlw	1
  3576  002C5C  6F61               	movwf	___awmod@sign& (0+255),b
  3577  002C5E                     l4697:
  3578                           
  3579                           ; BSR set to: 0
  3580  002C5E  BE56               	btfsc	(___awmod@divisor+1)^0,7,c
  3581  002C60  EF36  F016         	goto	u4600
  3582  002C64  EF34  F016         	goto	u4601
  3583  002C68                     u4601:
  3584  002C68  EF3A  F016         	goto	l4701
  3585  002C6C                     u4600:
  3586  002C6C                     
  3587                           ; BSR set to: 0
  3588  002C6C  6C55               	negf	___awmod@divisor^0,c
  3589  002C6E  1E56               	comf	(___awmod@divisor+1)^0,f,c
  3590  002C70  B0D8               	btfsc	status,0,c
  3591  002C72  2A56               	incf	(___awmod@divisor+1)^0,f,c
  3592  002C74                     l4701:
  3593                           
  3594                           ; BSR set to: 0
  3595  002C74  5055               	movf	___awmod@divisor^0,w,c
  3596  002C76  1056               	iorwf	(___awmod@divisor+1)^0,w,c
  3597  002C78  B4D8               	btfsc	status,2,c
  3598  002C7A  EF41  F016         	goto	u4611
  3599  002C7E  EF43  F016         	goto	u4610
  3600  002C82                     u4611:
  3601  002C82  EF67  F016         	goto	l4717
  3602  002C86                     u4610:
  3603  002C86                     
  3604                           ; BSR set to: 0
  3605  002C86  0E01               	movlw	1
  3606  002C88  6F60               	movwf	___awmod@counter& (0+255),b
  3607  002C8A  EF4B  F016         	goto	l4707
  3608  002C8E                     l4705:
  3609                           
  3610                           ; BSR set to: 0
  3611  002C8E  90D8               	bcf	status,0,c
  3612  002C90  3655               	rlcf	___awmod@divisor^0,f,c
  3613  002C92  3656               	rlcf	(___awmod@divisor+1)^0,f,c
  3614  002C94  2B60               	incf	___awmod@counter& (0+255),f,b
  3615  002C96                     l4707:
  3616                           
  3617                           ; BSR set to: 0
  3618  002C96  AE56               	btfss	(___awmod@divisor+1)^0,7,c
  3619  002C98  EF50  F016         	goto	u4621
  3620  002C9C  EF52  F016         	goto	u4620
  3621  002CA0                     u4621:
  3622  002CA0  EF47  F016         	goto	l4705
  3623  002CA4                     u4620:
  3624  002CA4                     l4709:
  3625                           
  3626                           ; BSR set to: 0
  3627  002CA4  5055               	movf	___awmod@divisor^0,w,c
  3628  002CA6  5C53               	subwf	___awmod@dividend^0,w,c
  3629  002CA8  5056               	movf	(___awmod@divisor+1)^0,w,c
  3630  002CAA  5854               	subwfb	(___awmod@dividend+1)^0,w,c
  3631  002CAC  A0D8               	btfss	status,0,c
  3632  002CAE  EF5B  F016         	goto	u4631
  3633  002CB2  EF5D  F016         	goto	u4630
  3634  002CB6                     u4631:
  3635  002CB6  EF61  F016         	goto	l4713
  3636  002CBA                     u4630:
  3637  002CBA                     
  3638                           ; BSR set to: 0
  3639  002CBA  5055               	movf	___awmod@divisor^0,w,c
  3640  002CBC  5E53               	subwf	___awmod@dividend^0,f,c
  3641  002CBE  5056               	movf	(___awmod@divisor+1)^0,w,c
  3642  002CC0  5A54               	subwfb	(___awmod@dividend+1)^0,f,c
  3643  002CC2                     l4713:
  3644                           
  3645                           ; BSR set to: 0
  3646  002CC2  90D8               	bcf	status,0,c
  3647  002CC4  3256               	rrcf	(___awmod@divisor+1)^0,f,c
  3648  002CC6  3255               	rrcf	___awmod@divisor^0,f,c
  3649  002CC8                     
  3650                           ; BSR set to: 0
  3651  002CC8  2F60               	decfsz	___awmod@counter& (0+255),f,b
  3652  002CCA  EF52  F016         	goto	l4709
  3653  002CCE                     l4717:
  3654                           
  3655                           ; BSR set to: 0
  3656  002CCE  5161               	movf	___awmod@sign& (0+255),w,b
  3657  002CD0  B4D8               	btfsc	status,2,c
  3658  002CD2  EF6D  F016         	goto	u4641
  3659  002CD6  EF6F  F016         	goto	u4640
  3660  002CDA                     u4641:
  3661  002CDA  EF73  F016         	goto	l4721
  3662  002CDE                     u4640:
  3663  002CDE                     
  3664                           ; BSR set to: 0
  3665  002CDE  6C53               	negf	___awmod@dividend^0,c
  3666  002CE0  1E54               	comf	(___awmod@dividend+1)^0,f,c
  3667  002CE2  B0D8               	btfsc	status,0,c
  3668  002CE4  2A54               	incf	(___awmod@dividend+1)^0,f,c
  3669  002CE6                     l4721:
  3670                           
  3671                           ; BSR set to: 0
  3672  002CE6  C053  F053         	movff	___awmod@dividend,?___awmod
  3673  002CEA  C054  F054         	movff	___awmod@dividend+1,?___awmod+1
  3674  002CEE                     
  3675                           ; BSR set to: 0
  3676  002CEE  0012               	return		;funcret
  3677  002CF0                     __end_of___awmod:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _appInit *****************
  3681 ;; Defined at:
  3682 ;;		line 12 in file "app.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;		None
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;		None
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0
  3697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3699 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3700 ;;Total ram usage:        0 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    5
  3703 ;; This function calls:
  3704 ;;		_adcInit
  3705 ;;		_appCounterInit
  3706 ;;		_appISRConfig
  3707 ;;		_appLCD_Init
  3708 ;;		_appTimerInit
  3709 ;;		_appTimerStart
  3710 ;;		_servoInit
  3711 ;;		_uart_Init
  3712 ;; This function is called by:
  3713 ;;		_main
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text15
  3718  00336A                     __ptext15:
  3719                           	callstack 0
  3720  00336A                     _appInit:
  3721                           	callstack 25
  3722  00336A                     
  3723                           ;app.c: 14:     appISRConfig();
  3724  00336A  EC78  F01A         	call	_appISRConfig	;wreg free
  3725  00336E                     
  3726                           ;app.c: 15:     appLCD_Init();
  3727  00336E  EC13  F017         	call	_appLCD_Init	;wreg free
  3728  003372                     
  3729                           ;app.c: 16:     adcInit(2);
  3730  003372  0E02               	movlw	2
  3731  003374  ECA4  F018         	call	_adcInit
  3732  003378                     
  3733                           ;app.c: 17:     appTimerInit();
  3734  003378  EC0A  F01A         	call	_appTimerInit	;wreg free
  3735  00337C                     
  3736                           ;app.c: 18:     appCounterInit(0);
  3737  00337C  0E00               	movlw	0
  3738  00337E  6E06               	movwf	(appCounterInit@reload+1)^0,c
  3739  003380  0E00               	movlw	0
  3740  003382  6E05               	movwf	appCounterInit@reload^0,c
  3741  003384  EC73  F01A         	call	_appCounterInit	;wreg free
  3742  003388                     
  3743                           ;app.c: 19:     servoInit();
  3744  003388  EC56  F01A         	call	_servoInit	;wreg free
  3745  00338C                     
  3746                           ;app.c: 20:     uart_Init(9600);
  3747  00338C  0E80               	movlw	128
  3748  00338E  6E12               	movwf	uart_Init@baud^0,c
  3749  003390  0E25               	movlw	37
  3750  003392  6E13               	movwf	(uart_Init@baud+1)^0,c
  3751  003394  0E00               	movlw	0
  3752  003396  6E14               	movwf	(uart_Init@baud+2)^0,c
  3753  003398  0E00               	movlw	0
  3754  00339A  6E15               	movwf	(uart_Init@baud+3)^0,c
  3755  00339C  EC26  F018         	call	_uart_Init	;wreg free
  3756  0033A0                     
  3757                           ;app.c: 21:     appTimerStart();
  3758  0033A0  EC6D  F01A         	call	_appTimerStart	;wreg free
  3759  0033A4  0012               	return		;funcret
  3760  0033A6                     __end_of_appInit:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _uart_Init *****************
  3764 ;; Defined at:
  3765 ;;		line 11 in file "UART.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  baud            4   17[COMRAM] unsigned long 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3779 ;;      Params:         4       0       0       0       0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3782 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3783 ;;Total ram usage:        4 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    3
  3786 ;; This function calls:
  3787 ;;		___lldiv
  3788 ;; This function is called by:
  3789 ;;		_appInit
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text16
  3794  00304C                     __ptext16:
  3795                           	callstack 0
  3796  00304C                     _uart_Init:
  3797                           	callstack 26
  3798  00304C                     
  3799                           ;UART.c: 11: void uart_Init(uint32_t baud);UART.c: 12: {;UART.c: 13:     TRISCbits.RC6 =
      +                           0;
  3800  00304C  9C94               	bcf	148,6,c	;volatile
  3801                           
  3802                           ;UART.c: 14:     TRISCbits.RC7 = 1;
  3803  00304E  8E94               	bsf	148,7,c	;volatile
  3804                           
  3805                           ;UART.c: 16:     BAUDCONbits.BRG16 = 0;
  3806  003050  96B8               	bcf	184,3,c	;volatile
  3807  003052                     
  3808                           ;UART.c: 17:     SPBRG = (uint8_t)(((12000000/baud)/64)-1);
  3809  003052  0E00               	movlw	0
  3810  003054  6E05               	movwf	___lldiv@dividend^0,c
  3811  003056  0E1B               	movlw	27
  3812  003058  6E06               	movwf	(___lldiv@dividend+1)^0,c
  3813  00305A  0EB7               	movlw	183
  3814  00305C  6E07               	movwf	(___lldiv@dividend+2)^0,c
  3815  00305E  0E00               	movlw	0
  3816  003060  6E08               	movwf	(___lldiv@dividend+3)^0,c
  3817  003062  C012  F009         	movff	uart_Init@baud,___lldiv@divisor
  3818  003066  C013  F00A         	movff	uart_Init@baud+1,___lldiv@divisor+1
  3819  00306A  C014  F00B         	movff	uart_Init@baud+2,___lldiv@divisor+2
  3820  00306E  C015  F00C         	movff	uart_Init@baud+3,___lldiv@divisor+3
  3821  003072  EC78  F016         	call	___lldiv	;wreg free
  3822  003076  0E07               	movlw	7
  3823  003078  EF43  F018         	goto	u3750
  3824  00307C                     u3755:
  3825  00307C  90D8               	bcf	status,0,c
  3826  00307E  3208               	rrcf	(?___lldiv+3)^0,f,c
  3827  003080  3207               	rrcf	(?___lldiv+2)^0,f,c
  3828  003082  3206               	rrcf	(?___lldiv+1)^0,f,c
  3829  003084  3205               	rrcf	?___lldiv^0,f,c
  3830  003086                     u3750:
  3831  003086  2EE8               	decfsz	wreg,f,c
  3832  003088  EF3E  F018         	goto	u3755
  3833  00308C  0405               	decf	?___lldiv^0,w,c
  3834  00308E  6EAF               	movwf	175,c	;volatile
  3835  003090                     
  3836                           ;UART.c: 19:     TXSTAbits.BRGH = 0;
  3837  003090  94AC               	bcf	172,2,c	;volatile
  3838  003092                     
  3839                           ;UART.c: 20:     TXSTAbits.SYNC = 0;
  3840  003092  98AC               	bcf	172,4,c	;volatile
  3841  003094                     
  3842                           ;UART.c: 21:     TXSTAbits.TX9 = 0;
  3843  003094  9CAC               	bcf	172,6,c	;volatile
  3844  003096                     
  3845                           ;UART.c: 22:     TXSTAbits.TXEN = 1;
  3846  003096  8AAC               	bsf	172,5,c	;volatile
  3847  003098                     
  3848                           ;UART.c: 24:     RCSTAbits.SPEN = 1;
  3849  003098  8EAB               	bsf	171,7,c	;volatile
  3850  00309A                     
  3851                           ;UART.c: 25:     RCSTAbits.RC9 = 0;
  3852  00309A  9CAB               	bcf	171,6,c	;volatile
  3853  00309C                     
  3854                           ;UART.c: 26:     RCSTAbits.CREN = 1;
  3855  00309C  88AB               	bsf	171,4,c	;volatile
  3856  00309E                     
  3857                           ;UART.c: 28:     PIE1bits.RCIE = 1;
  3858  00309E  8A9D               	bsf	157,5,c	;volatile
  3859  0030A0                     
  3860                           ;UART.c: 29:     IPR1bits.RCIP =1;
  3861  0030A0  8A9F               	bsf	159,5,c	;volatile
  3862  0030A2  0012               	return		;funcret
  3863  0030A4                     __end_of_uart_Init:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function ___lldiv *****************
  3867 ;; Defined at:
  3868 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  dividend        4    4[COMRAM] unsigned long 
  3871 ;;  divisor         4    8[COMRAM] unsigned long 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  quotient        4   12[COMRAM] unsigned long 
  3874 ;;  counter         1   16[COMRAM] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  4    4[COMRAM] unsigned long 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3884 ;;      Params:         8       0       0       0       0       0       0       0       0
  3885 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3887 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3888 ;;Total ram usage:       13 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    2
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_uart_Init
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text17
  3899  002CF0                     __ptext17:
  3900                           	callstack 0
  3901  002CF0                     ___lldiv:
  3902                           	callstack 26
  3903  002CF0  0E00               	movlw	0
  3904  002CF2  6E0D               	movwf	___lldiv@quotient^0,c
  3905  002CF4  0E00               	movlw	0
  3906  002CF6  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  3907  002CF8  0E00               	movlw	0
  3908  002CFA  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  3909  002CFC  0E00               	movlw	0
  3910  002CFE  6E10               	movwf	(___lldiv@quotient+3)^0,c
  3911  002D00  5009               	movf	___lldiv@divisor^0,w,c
  3912  002D02  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  3913  002D04  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  3914  002D06  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  3915  002D08  B4D8               	btfsc	status,2,c
  3916  002D0A  EF89  F016         	goto	u3031
  3917  002D0E  EF8B  F016         	goto	u3030
  3918  002D12                     u3031:
  3919  002D12  EFC1  F016         	goto	l417
  3920  002D16                     u3030:
  3921  002D16  0E01               	movlw	1
  3922  002D18  6E11               	movwf	___lldiv@counter^0,c
  3923  002D1A  EF95  F016         	goto	l3465
  3924  002D1E                     l3463:
  3925  002D1E  90D8               	bcf	status,0,c
  3926  002D20  3609               	rlcf	___lldiv@divisor^0,f,c
  3927  002D22  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  3928  002D24  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  3929  002D26  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  3930  002D28  2A11               	incf	___lldiv@counter^0,f,c
  3931  002D2A                     l3465:
  3932  002D2A  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  3933  002D2C  EF9A  F016         	goto	u3041
  3934  002D30  EF9C  F016         	goto	u3040
  3935  002D34                     u3041:
  3936  002D34  EF8F  F016         	goto	l3463
  3937  002D38                     u3040:
  3938  002D38                     l3467:
  3939  002D38  90D8               	bcf	status,0,c
  3940  002D3A  360D               	rlcf	___lldiv@quotient^0,f,c
  3941  002D3C  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  3942  002D3E  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  3943  002D40  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  3944  002D42  5009               	movf	___lldiv@divisor^0,w,c
  3945  002D44  5C05               	subwf	___lldiv@dividend^0,w,c
  3946  002D46  500A               	movf	(___lldiv@divisor+1)^0,w,c
  3947  002D48  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  3948  002D4A  500B               	movf	(___lldiv@divisor+2)^0,w,c
  3949  002D4C  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  3950  002D4E  500C               	movf	(___lldiv@divisor+3)^0,w,c
  3951  002D50  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  3952  002D52  A0D8               	btfss	status,0,c
  3953  002D54  EFAE  F016         	goto	u3051
  3954  002D58  EFB0  F016         	goto	u3050
  3955  002D5C                     u3051:
  3956  002D5C  EFB9  F016         	goto	l3475
  3957  002D60                     u3050:
  3958  002D60  5009               	movf	___lldiv@divisor^0,w,c
  3959  002D62  5E05               	subwf	___lldiv@dividend^0,f,c
  3960  002D64  500A               	movf	(___lldiv@divisor+1)^0,w,c
  3961  002D66  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  3962  002D68  500B               	movf	(___lldiv@divisor+2)^0,w,c
  3963  002D6A  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  3964  002D6C  500C               	movf	(___lldiv@divisor+3)^0,w,c
  3965  002D6E  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  3966  002D70  800D               	bsf	___lldiv@quotient^0,0,c
  3967  002D72                     l3475:
  3968  002D72  90D8               	bcf	status,0,c
  3969  002D74  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  3970  002D76  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  3971  002D78  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  3972  002D7A  3209               	rrcf	___lldiv@divisor^0,f,c
  3973  002D7C  2E11               	decfsz	___lldiv@counter^0,f,c
  3974  002D7E  EF9C  F016         	goto	l3467
  3975  002D82                     l417:
  3976  002D82  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  3977  002D86  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  3978  002D8A  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  3979  002D8E  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  3980  002D92  0012               	return		;funcret
  3981  002D94                     __end_of___lldiv:
  3982                           	callstack 0
  3983                           
  3984 ;; *************** function _servoInit *****************
  3985 ;; Defined at:
  3986 ;;		line 3 in file "servo.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    2
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_appInit
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text18
  4015  0034AC                     __ptext18:
  4016                           	callstack 0
  4017  0034AC                     _servoInit:
  4018                           	callstack 27
  4019  0034AC                     
  4020                           ;servo.c: 9:     T2CONbits.T2CKPS = 0b10;
  4021  0034AC  50CA               	movf	202,w,c	;volatile
  4022  0034AE  0BFC               	andlw	-4
  4023  0034B0  0902               	iorlw	2
  4024  0034B2  6ECA               	movwf	202,c	;volatile
  4025  0034B4                     
  4026                           ;servo.c: 10:     T2CONbits.T2OUTPS0 = 1;
  4027  0034B4  86CA               	bsf	202,3,c	;volatile
  4028  0034B6                     
  4029                           ;servo.c: 11:     T2CONbits.T2OUTPS1 = 1;
  4030  0034B6  88CA               	bsf	202,4,c	;volatile
  4031  0034B8                     
  4032                           ;servo.c: 12:     T2CONbits.T2OUTPS2 = 1;
  4033  0034B8  8ACA               	bsf	202,5,c	;volatile
  4034  0034BA                     
  4035                           ;servo.c: 13:     T2CONbits.T2OUTPS3 = 1;
  4036  0034BA  8CCA               	bsf	202,6,c	;volatile
  4037  0034BC                     
  4038                           ;servo.c: 14:     TRISEbits.TRISE0 = 0;
  4039  0034BC  9096               	bcf	150,0,c	;volatile
  4040  0034BE                     
  4041                           ;servo.c: 15:     TRISEbits.TRISE1 = 0;
  4042  0034BE  9296               	bcf	150,1,c	;volatile
  4043  0034C0                     
  4044                           ;servo.c: 16:     TRISEbits.TRISE2 = 0;
  4045  0034C0  9496               	bcf	150,2,c	;volatile
  4046  0034C2  0012               	return		;funcret
  4047  0034C4                     __end_of_servoInit:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _appTimerInit *****************
  4051 ;; Defined at:
  4052 ;;		line 84 in file "servo.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    2
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_appInit
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text19
  4081  003414                     __ptext19:
  4082                           	callstack 0
  4083  003414                     _appTimerInit:
  4084                           	callstack 27
  4085  003414                     
  4086                           ;servo.c: 89:     T3CONbits.TMR3ON = 0;
  4087  003414  90B1               	bcf	177,0,c	;volatile
  4088                           
  4089                           ;servo.c: 90:     T3CONbits.RD16 = 1;
  4090  003416  8EB1               	bsf	177,7,c	;volatile
  4091                           
  4092                           ;servo.c: 91:     T3CONbits.TMR3CS = 0;
  4093  003418  92B1               	bcf	177,1,c	;volatile
  4094  00341A                     
  4095                           ;servo.c: 92:     T3CONbits.T3CKPS = 0b11;
  4096  00341A  0E30               	movlw	48
  4097  00341C  12B1               	iorwf	177,f,c	;volatile
  4098  00341E                     
  4099                           ;servo.c: 93:     T3CONbits.T3NSYNC = 1;
  4100  00341E  84B1               	bsf	177,2,c	;volatile
  4101                           
  4102                           ;servo.c: 94:     TMR3 = 20536;
  4103  003420  0E50               	movlw	80
  4104  003422  6EB3               	movwf	179,c	;volatile
  4105  003424  0E38               	movlw	56
  4106  003426  6EB2               	movwf	178,c	;volatile
  4107  003428                     
  4108                           ;servo.c: 99:     T0CONbits.TMR0ON = 0;
  4109  003428  9ED5               	bcf	213,7,c	;volatile
  4110  00342A                     
  4111                           ;servo.c: 100:     T0CONbits.T08BIT = 1;
  4112  00342A  8CD5               	bsf	213,6,c	;volatile
  4113  00342C                     
  4114                           ;servo.c: 101:     T0CONbits.T0CS = 1;
  4115  00342C  8AD5               	bsf	213,5,c	;volatile
  4116  00342E                     
  4117                           ;servo.c: 102:     T0CONbits.T0SE = 0;
  4118  00342E  98D5               	bcf	213,4,c	;volatile
  4119  003430                     
  4120                           ;servo.c: 103:     T0CONbits.PSA = 1;
  4121  003430  86D5               	bsf	213,3,c	;volatile
  4122  003432                     
  4123                           ;servo.c: 105:     TRISAbits.TRISA4 = 1;
  4124  003432  8892               	bsf	146,4,c	;volatile
  4125  003434                     
  4126                           ;servo.c: 111:     INTCONbits.TMR0IE = 1;
  4127  003434  8AF2               	bsf	242,5,c	;volatile
  4128  003436                     
  4129                           ;servo.c: 112:     INTCONbits.TMR0IF = 0;
  4130  003436  94F2               	bcf	242,2,c	;volatile
  4131  003438                     
  4132                           ;servo.c: 113:     INTCON2bits.TMR0IP = 1;
  4133  003438  84F1               	bsf	241,2,c	;volatile
  4134  00343A                     
  4135                           ;servo.c: 119:     PIR2bits.TMR3IF = 0;
  4136  00343A  92A1               	bcf	161,1,c	;volatile
  4137  00343C                     
  4138                           ;servo.c: 120:     IPR2bits.TMR3IP = 0;
  4139  00343C  92A2               	bcf	162,1,c	;volatile
  4140  00343E                     
  4141                           ;servo.c: 121:     PIE2bits.TMR3IE = 1;
  4142  00343E  82A0               	bsf	160,1,c	;volatile
  4143  003440  0012               	return		;funcret
  4144  003442                     __end_of_appTimerInit:
  4145                           	callstack 0
  4146                           
  4147 ;; *************** function _appLCD_Init *****************
  4148 ;; Defined at:
  4149 ;;		line 197 in file "flex_lcd.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4163 ;;      Params:         0       0       0       0       0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4165 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4166 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4167 ;;Total ram usage:        2 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    4
  4170 ;; This function calls:
  4171 ;;		_Lcd_Cmd
  4172 ;;		_Lcd_Init
  4173 ;;		_Lcd_Out
  4174 ;; This function is called by:
  4175 ;;		_appInit
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text20
  4180  002E26                     __ptext20:
  4181                           	callstack 0
  4182  002E26                     _appLCD_Init:
  4183                           	callstack 25
  4184  002E26                     
  4185                           ;flex_lcd.c: 199:     Lcd_Init();
  4186  002E26  ECBF  F015         	call	_Lcd_Init	;wreg free
  4187                           
  4188                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  4189  002E2A  0E01               	movlw	1
  4190  002E2C  EC6E  F012         	call	_Lcd_Cmd
  4191                           
  4192                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  4193  002E30  0E0C               	movlw	12
  4194  002E32  EC6E  F012         	call	_Lcd_Cmd
  4195  002E36                     
  4196                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  4197  002E36  0E02               	movlw	2
  4198  002E38  6E10               	movwf	(??_appLCD_Init+1)^0,c
  4199  002E3A  0E86               	movlw	134
  4200  002E3C  6E0F               	movwf	??_appLCD_Init^0,c
  4201  002E3E  0E99               	movlw	153
  4202  002E40                     u4877:
  4203  002E40  2EE8               	decfsz	wreg,f,c
  4204  002E42  D7FE               	bra	u4877
  4205  002E44  2E0F               	decfsz	??_appLCD_Init^0,f,c
  4206  002E46  D7FC               	bra	u4877
  4207  002E48  2E10               	decfsz	(??_appLCD_Init+1)^0,f,c
  4208  002E4A  D7FA               	bra	u4877
  4209  002E4C  F000               	nop	
  4210  002E4E                     
  4211                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  4212  002E4E  0E03               	movlw	3
  4213  002E50  6E08               	movwf	Lcd_Out@x^0,c
  4214  002E52  0E3A               	movlw	low STR_3
  4215  002E54  6E09               	movwf	Lcd_Out@buffer^0,c
  4216  002E56  0E08               	movlw	high STR_3
  4217  002E58  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  4218  002E5A  0E01               	movlw	1
  4219  002E5C  EC93  F014         	call	_Lcd_Out
  4220  002E60                     
  4221                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  4222  002E60  0E06               	movlw	6
  4223  002E62  6E08               	movwf	Lcd_Out@x^0,c
  4224  002E64  0E4F               	movlw	low STR_4
  4225  002E66  6E09               	movwf	Lcd_Out@buffer^0,c
  4226  002E68  0E08               	movlw	high STR_4
  4227  002E6A  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  4228  002E6C  0E02               	movlw	2
  4229  002E6E  EC93  F014         	call	_Lcd_Out
  4230  002E72                     
  4231                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  4232  002E72  0E1F               	movlw	31
  4233  002E74  6E10               	movwf	(??_appLCD_Init+1)^0,c
  4234  002E76  0E71               	movlw	113
  4235  002E78  6E0F               	movwf	??_appLCD_Init^0,c
  4236  002E7A  0E1E               	movlw	30
  4237  002E7C                     u4887:
  4238  002E7C  2EE8               	decfsz	wreg,f,c
  4239  002E7E  D7FE               	bra	u4887
  4240  002E80  2E0F               	decfsz	??_appLCD_Init^0,f,c
  4241  002E82  D7FC               	bra	u4887
  4242  002E84  2E10               	decfsz	(??_appLCD_Init+1)^0,f,c
  4243  002E86  D7FA               	bra	u4887
  4244  002E88  D000               	nop2	
  4245                           
  4246                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  4247  002E8A  0E01               	movlw	1
  4248  002E8C  EC6E  F012         	call	_Lcd_Cmd
  4249  002E90  0E02               	movlw	2
  4250  002E92  6E10               	movwf	(??_appLCD_Init+1)^0,c
  4251  002E94  0E86               	movlw	134
  4252  002E96  6E0F               	movwf	??_appLCD_Init^0,c
  4253  002E98  0E99               	movlw	153
  4254  002E9A                     u4897:
  4255  002E9A  2EE8               	decfsz	wreg,f,c
  4256  002E9C  D7FE               	bra	u4897
  4257  002E9E  2E0F               	decfsz	??_appLCD_Init^0,f,c
  4258  002EA0  D7FC               	bra	u4897
  4259  002EA2  2E10               	decfsz	(??_appLCD_Init+1)^0,f,c
  4260  002EA4  D7FA               	bra	u4897
  4261  002EA6  F000               	nop	
  4262  002EA8  0012               	return		;funcret
  4263  002EAA                     __end_of_appLCD_Init:
  4264                           	callstack 0
  4265                           
  4266 ;; *************** function _Lcd_Init *****************
  4267 ;; Defined at:
  4268 ;;		line 31 in file "flex_lcd.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  i               1    8[COMRAM] unsigned char 
  4273 ;;  data            1    0        unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0
  4284 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4285 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4286 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4287 ;;Total ram usage:        3 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    3
  4290 ;; This function calls:
  4291 ;;		_Lcd_Cmd
  4292 ;; This function is called by:
  4293 ;;		_appLCD_Init
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text21
  4298  002B7E                     __ptext21:
  4299                           	callstack 0
  4300  002B7E                     _Lcd_Init:
  4301                           	callstack 25
  4302  002B7E                     
  4303                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  4304  002B7E  9E95               	bcf	149,7,c	;volatile
  4305                           
  4306                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  4307  002B80  9C95               	bcf	149,6,c	;volatile
  4308                           
  4309                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  4310  002B82  9A95               	bcf	149,5,c	;volatile
  4311                           
  4312                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  4313  002B84  9895               	bcf	149,4,c	;volatile
  4314                           
  4315                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  4316  002B86  9695               	bcf	149,3,c	;volatile
  4317                           
  4318                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  4319  002B88  9495               	bcf	149,2,c	;volatile
  4320  002B8A                     
  4321                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  4322  002B8A  0E85               	movlw	133
  4323  002B8C  6E08               	movwf	??_Lcd_Init^0,c
  4324  002B8E  0E76               	movlw	118
  4325  002B90                     u4907:
  4326  002B90  2EE8               	decfsz	wreg,f,c
  4327  002B92  D7FE               	bra	u4907
  4328  002B94  2E08               	decfsz	??_Lcd_Init^0,f,c
  4329  002B96  D7FC               	bra	u4907
  4330  002B98  D000               	nop2	
  4331  002B9A                     
  4332                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  4333  002B9A  0E00               	movlw	0
  4334  002B9C  6E09               	movwf	Lcd_Init@i^0,c
  4335  002B9E                     l146:
  4336                           
  4337                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  4338  002B9E  9E8C               	bcf	140,7,c	;volatile
  4339                           
  4340                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  4341  002BA0  9C8C               	bcf	140,6,c	;volatile
  4342                           
  4343                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  4344  002BA2  8A8C               	bsf	140,5,c	;volatile
  4345                           
  4346                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  4347  002BA4  888C               	bsf	140,4,c	;volatile
  4348                           
  4349                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  4350  002BA6  968C               	bcf	140,3,c	;volatile
  4351                           
  4352                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  4353  002BA8  948C               	bcf	140,2,c	;volatile
  4354                           
  4355                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  4356  002BAA  9E8C               	bcf	140,7,c	;volatile
  4357                           
  4358                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  4359  002BAC  9C8C               	bcf	140,6,c	;volatile
  4360                           
  4361                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  4362  002BAE  8A8C               	bsf	140,5,c	;volatile
  4363                           
  4364                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  4365  002BB0  888C               	bsf	140,4,c	;volatile
  4366                           
  4367                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  4368  002BB2  868C               	bsf	140,3,c	;volatile
  4369                           
  4370                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  4371  002BB4  948C               	bcf	140,2,c	;volatile
  4372  002BB6                     
  4373                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  4374  002BB6  0E05               	movlw	5
  4375  002BB8                     u4917:
  4376  002BB8  2EE8               	decfsz	wreg,f,c
  4377  002BBA  D7FE               	bra	u4917
  4378  002BBC                     
  4379                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  4380  002BBC  9E8C               	bcf	140,7,c	;volatile
  4381  002BBE                     
  4382                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  4383  002BBE  9C8C               	bcf	140,6,c	;volatile
  4384  002BC0                     
  4385                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  4386  002BC0  8A8C               	bsf	140,5,c	;volatile
  4387  002BC2                     
  4388                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  4389  002BC2  888C               	bsf	140,4,c	;volatile
  4390  002BC4                     
  4391                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  4392  002BC4  968C               	bcf	140,3,c	;volatile
  4393  002BC6                     
  4394                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  4395  002BC6  948C               	bcf	140,2,c	;volatile
  4396                           
  4397                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  4398  002BC8  0E16               	movlw	22
  4399  002BCA  6E08               	movwf	??_Lcd_Init^0,c
  4400  002BCC  0E6C               	movlw	108
  4401  002BCE                     u4927:
  4402  002BCE  2EE8               	decfsz	wreg,f,c
  4403  002BD0  D7FE               	bra	u4927
  4404  002BD2  2E08               	decfsz	??_Lcd_Init^0,f,c
  4405  002BD4  D7FC               	bra	u4927
  4406  002BD6  D000               	nop2	
  4407  002BD8                     
  4408                           ;flex_lcd.c: 61:     }
  4409  002BD8  2A09               	incf	Lcd_Init@i^0,f,c
  4410  002BDA  0E03               	movlw	3
  4411  002BDC  6409               	cpfsgt	Lcd_Init@i^0,c
  4412  002BDE  EFF3  F015         	goto	u3011
  4413  002BE2  EFF5  F015         	goto	u3010
  4414  002BE6                     u3011:
  4415  002BE6  EFCF  F015         	goto	l146
  4416  002BEA                     u3010:
  4417  002BEA                     
  4418                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  4419  002BEA  9E8C               	bcf	140,7,c	;volatile
  4420                           
  4421                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  4422  002BEC  9C8C               	bcf	140,6,c	;volatile
  4423                           
  4424                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  4425  002BEE  8A8C               	bsf	140,5,c	;volatile
  4426                           
  4427                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  4428  002BF0  988C               	bcf	140,4,c	;volatile
  4429                           
  4430                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  4431  002BF2  968C               	bcf	140,3,c	;volatile
  4432                           
  4433                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  4434  002BF4  948C               	bcf	140,2,c	;volatile
  4435                           
  4436                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  4437  002BF6  9E8C               	bcf	140,7,c	;volatile
  4438                           
  4439                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  4440  002BF8  9C8C               	bcf	140,6,c	;volatile
  4441                           
  4442                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  4443  002BFA  8A8C               	bsf	140,5,c	;volatile
  4444                           
  4445                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  4446  002BFC  988C               	bcf	140,4,c	;volatile
  4447                           
  4448                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  4449  002BFE  868C               	bsf	140,3,c	;volatile
  4450                           
  4451                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  4452  002C00  948C               	bcf	140,2,c	;volatile
  4453  002C02                     
  4454                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  4455  002C02  0E05               	movlw	5
  4456  002C04                     u4937:
  4457  002C04  2EE8               	decfsz	wreg,f,c
  4458  002C06  D7FE               	bra	u4937
  4459  002C08                     
  4460                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  4461  002C08  9E8C               	bcf	140,7,c	;volatile
  4462  002C0A                     
  4463                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  4464  002C0A  9C8C               	bcf	140,6,c	;volatile
  4465  002C0C                     
  4466                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  4467  002C0C  8A8C               	bsf	140,5,c	;volatile
  4468  002C0E                     
  4469                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  4470  002C0E  988C               	bcf	140,4,c	;volatile
  4471  002C10                     
  4472                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  4473  002C10  968C               	bcf	140,3,c	;volatile
  4474  002C12                     
  4475                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  4476  002C12  948C               	bcf	140,2,c	;volatile
  4477                           
  4478                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  4479  002C14  0E16               	movlw	22
  4480  002C16  6E08               	movwf	??_Lcd_Init^0,c
  4481  002C18  0E6C               	movlw	108
  4482  002C1A                     u4947:
  4483  002C1A  2EE8               	decfsz	wreg,f,c
  4484  002C1C  D7FE               	bra	u4947
  4485  002C1E  2E08               	decfsz	??_Lcd_Init^0,f,c
  4486  002C20  D7FC               	bra	u4947
  4487  002C22  D000               	nop2	
  4488  002C24                     
  4489                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  4490  002C24  0E28               	movlw	40
  4491  002C26  EC6E  F012         	call	_Lcd_Cmd
  4492  002C2A                     
  4493                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  4494  002C2A  0E10               	movlw	16
  4495  002C2C  EC6E  F012         	call	_Lcd_Cmd
  4496  002C30                     
  4497                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  4498  002C30  0E01               	movlw	1
  4499  002C32  EC6E  F012         	call	_Lcd_Cmd
  4500  002C36                     
  4501                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  4502  002C36  0E0F               	movlw	15
  4503  002C38  EC6E  F012         	call	_Lcd_Cmd
  4504  002C3C  0012               	return		;funcret
  4505  002C3E                     __end_of_Lcd_Init:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _appISRConfig *****************
  4509 ;; Defined at:
  4510 ;;		line 25 in file "app.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		None
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    2
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_appInit
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text22
  4539  0034F0                     __ptext22:
  4540                           	callstack 0
  4541  0034F0                     _appISRConfig:
  4542                           	callstack 27
  4543  0034F0                     
  4544                           ;app.c: 30:     RCONbits.IPEN = 1;
  4545  0034F0  8ED0               	bsf	208,7,c	;volatile
  4546                           
  4547                           ;app.c: 31:     INTCONbits.GIE_GIEH = 1;
  4548  0034F2  8EF2               	bsf	242,7,c	;volatile
  4549                           
  4550                           ;app.c: 32:     INTCONbits.PEIE_GIEL = 1;
  4551  0034F4  8CF2               	bsf	242,6,c	;volatile
  4552  0034F6  0012               	return		;funcret
  4553  0034F8                     __end_of_appISRConfig:
  4554                           	callstack 0
  4555                           
  4556 ;; *************** function _appCounterInit *****************
  4557 ;; Defined at:
  4558 ;;		line 134 in file "servo.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  reload          2    4[COMRAM] unsigned short 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		None
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4572 ;;      Params:         2       0       0       0       0       0       0       0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4575 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4576 ;;Total ram usage:        2 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    2
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_appInit
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text23
  4587  0034E6                     __ptext23:
  4588                           	callstack 0
  4589  0034E6                     _appCounterInit:
  4590                           	callstack 27
  4591  0034E6                     
  4592                           ;servo.c: 134: void appCounterInit(uint16_t reload);servo.c: 135: {;servo.c: 137:     TM
      +                          R0 = reload;
  4593  0034E6  C005  FFD6         	movff	appCounterInit@reload,4054	;volatile
  4594  0034EA  C006  FFD7         	movff	appCounterInit@reload+1,4055	;volatile
  4595  0034EE  0012               	return		;funcret
  4596  0034F0                     __end_of_appCounterInit:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function _adcInit *****************
  4600 ;; Defined at:
  4601 ;;		line 10 in file "adc.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  ADC_PINs        1    wreg     unsigned char 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  ADC_PINs        1    5[COMRAM] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0
  4616 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4617 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4618 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4619 ;;Total ram usage:        2 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    2
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_appInit
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text24
  4630  003148                     __ptext24:
  4631                           	callstack 0
  4632  003148                     _adcInit:
  4633                           	callstack 27
  4634                           
  4635                           ;incstack = 0
  4636                           ;adcInit@ADC_PINs stored from wreg
  4637  003148  6E06               	movwf	adcInit@ADC_PINs^0,c
  4638  00314A                     
  4639                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  4640  00314A  5006               	movf	adcInit@ADC_PINs^0,w,c
  4641  00314C  A4D8               	btfss	status,2,c
  4642  00314E  EFAB  F018         	goto	u3711
  4643  003152  EFAD  F018         	goto	u3710
  4644  003156                     u3711:
  4645  003156  EFB3  F018         	goto	l3877
  4646  00315A                     u3710:
  4647  00315A                     
  4648                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  4649  00315A  50C1               	movf	193,w,c	;volatile
  4650  00315C  0BF0               	andlw	-16
  4651  00315E  090E               	iorlw	14
  4652  003160  6EC1               	movwf	193,c	;volatile
  4653                           
  4654                           ;adc.c: 16:     }
  4655  003162  EFBB  F018         	goto	l3879
  4656  003166                     l3877:
  4657                           
  4658                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  4659  003166  5006               	movf	adcInit@ADC_PINs^0,w,c
  4660  003168  080F               	sublw	15
  4661  00316A  6E05               	movwf	??_adcInit^0,c
  4662  00316C  50C1               	movf	193,w,c	;volatile
  4663  00316E  1805               	xorwf	??_adcInit^0,w,c
  4664  003170  0BF0               	andlw	-16
  4665  003172  1805               	xorwf	??_adcInit^0,w,c
  4666  003174  6EC1               	movwf	193,c	;volatile
  4667  003176                     l3879:
  4668                           
  4669                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  4670  003176  0ECF               	movlw	-49
  4671  003178  16C1               	andwf	193,f,c	;volatile
  4672  00317A                     
  4673                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  4674  00317A  50C0               	movf	192,w,c	;volatile
  4675  00317C  0BC7               	andlw	-57
  4676  00317E  0910               	iorlw	16
  4677  003180  6EC0               	movwf	192,c	;volatile
  4678  003182                     
  4679                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  4680  003182  50C0               	movf	192,w,c	;volatile
  4681  003184  0BF8               	andlw	-8
  4682  003186  0903               	iorlw	3
  4683  003188  6EC0               	movwf	192,c	;volatile
  4684  00318A                     
  4685                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  4686  00318A  8EC0               	bsf	192,7,c	;volatile
  4687  00318C                     
  4688                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  4689  00318C  80C2               	bsf	194,0,c	;volatile
  4690  00318E                     
  4691                           ;adc.c: 41:     TRISCbits.TRISC1 = 0;
  4692  00318E  9294               	bcf	148,1,c	;volatile
  4693  003190  0012               	return		;funcret
  4694  003192                     __end_of_adcInit:
  4695                           	callstack 0
  4696                           
  4697 ;; *************** function _appTimerStop *****************
  4698 ;; Defined at:
  4699 ;;		line 129 in file "servo.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;		None
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;		None
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		None
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4713 ;;      Params:         0       0       0       0       0       0       0       0       0
  4714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4716 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4717 ;;Total ram usage:        0 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    2
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_appGetElements
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text25
  4728  0034FC                     __ptext25:
  4729                           	callstack 0
  4730  0034FC                     _appTimerStop:
  4731                           	callstack 27
  4732  0034FC                     
  4733                           ;servo.c: 131:     T3CONbits.TMR3ON = 0;
  4734  0034FC  90B1               	bcf	177,0,c	;volatile
  4735  0034FE  0012               	return		;funcret
  4736  003500                     __end_of_appTimerStop:
  4737                           	callstack 0
  4738                           
  4739 ;; *************** function _appTimerStart *****************
  4740 ;; Defined at:
  4741 ;;		line 123 in file "servo.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    2
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_appInit
  4766 ;;		_appGetElements
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text26
  4771  0034DA                     __ptext26:
  4772                           	callstack 0
  4773  0034DA                     _appTimerStart:
  4774                           	callstack 27
  4775  0034DA                     
  4776                           ;servo.c: 125:     TMR3 = 20536;
  4777  0034DA  0E50               	movlw	80
  4778  0034DC  6EB3               	movwf	179,c	;volatile
  4779  0034DE  0E38               	movlw	56
  4780  0034E0  6EB2               	movwf	178,c	;volatile
  4781  0034E2                     
  4782                           ;servo.c: 126:     T3CONbits.TMR3ON = 1;
  4783  0034E2  80B1               	bsf	177,0,c	;volatile
  4784  0034E4  0012               	return		;funcret
  4785  0034E6                     __end_of_appTimerStart:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function _appSubGiveElemts *****************
  4789 ;; Defined at:
  4790 ;;		line 103 in file "app.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  data            2   12[COMRAM] PTR struct _state
  4793 ;;		 -> datos(25), 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      void 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0, cstack
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4805 ;;      Params:         2       0       0       0       0       0       0       0       0
  4806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4808 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4809 ;;Total ram usage:        2 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    4
  4812 ;; This function calls:
  4813 ;;		_appCounterStart
  4814 ;;		_setServo
  4815 ;; This function is called by:
  4816 ;;		_appGetElements
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text27
  4821  0034C4                     __ptext27:
  4822                           	callstack 0
  4823  0034C4                     _appSubGiveElemts:
  4824                           	callstack 25
  4825  0034C4                     
  4826                           ;app.c: 103: void appSubGiveElemts(StateMachine *data);app.c: 104: {;app.c: 105:     app
      +                          CounterStart();
  4827  0034C4  EC80  F01A         	call	_appCounterStart	;wreg free
  4828  0034C8                     
  4829                           ;app.c: 106:     setServo(39,10,2);
  4830  0034C8  0E0A               	movlw	10
  4831  0034CA  6E09               	movwf	setServo@pulsos^0,c
  4832  0034CC  0E02               	movlw	2
  4833  0034CE  6E0A               	movwf	setServo@pin^0,c
  4834  0034D0  0E27               	movlw	39
  4835  0034D2  EC21  F01A         	call	_setServo
  4836  0034D6                     
  4837                           ;app.c: 107:     LATAbits.LA5 = 1;
  4838  0034D6  8A89               	bsf	137,5,c	;volatile
  4839  0034D8  0012               	return		;funcret
  4840  0034DA                     __end_of_appSubGiveElemts:
  4841                           	callstack 0
  4842                           
  4843 ;; *************** function _setServo *****************
  4844 ;; Defined at:
  4845 ;;		line 76 in file "servo.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  angle           1    wreg     unsigned char 
  4848 ;;  pulsos          1    8[COMRAM] unsigned char 
  4849 ;;  pin             1    9[COMRAM] unsigned char 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  angle           1   10[COMRAM] unsigned char 
  4852 ;;  i               1   11[COMRAM] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4862 ;;      Params:         2       0       0       0       0       0       0       0       0
  4863 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4865 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4866 ;;Total ram usage:        4 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    3
  4869 ;; This function calls:
  4870 ;;		_setServoAngle
  4871 ;; This function is called by:
  4872 ;;		_appStateRecolectData
  4873 ;;		_appStateInitial
  4874 ;;		_appSubGiveElemts
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text28
  4879  003442                     __ptext28:
  4880                           	callstack 0
  4881  003442                     _setServo:
  4882                           	callstack 26
  4883                           
  4884                           ;incstack = 0
  4885                           ;setServo@angle stored from wreg
  4886  003442  6E0B               	movwf	setServo@angle^0,c
  4887  003444                     
  4888                           ;servo.c: 76: void setServo(uint8_t angle, uint8_t pulsos, uint8_t pin);servo.c: 77: {;s
      +                          ervo.c: 78:     for(uint8_t i = 0; i < pulsos; i++)
  4889  003444  0E00               	movlw	0
  4890  003446  6E0C               	movwf	setServo@i^0,c
  4891  003448  EF2C  F01A         	goto	l3453
  4892  00344C                     l3449:
  4893                           
  4894                           ;servo.c: 79:     {;servo.c: 80:         setServoAngle(angle, pin);
  4895  00344C  C00A  F005         	movff	setServo@pin,setServoAngle@pin
  4896  003450  500B               	movf	setServo@angle^0,w,c
  4897  003452  EC03  F013         	call	_setServoAngle
  4898  003456                     
  4899                           ;servo.c: 81:     }
  4900  003456  2A0C               	incf	setServo@i^0,f,c
  4901  003458                     l3453:
  4902  003458  5009               	movf	setServo@pulsos^0,w,c
  4903  00345A  5C0C               	subwf	setServo@i^0,w,c
  4904  00345C  A0D8               	btfss	status,0,c
  4905  00345E  EF33  F01A         	goto	u3021
  4906  003462  EF35  F01A         	goto	u3020
  4907  003466                     u3021:
  4908  003466  EF26  F01A         	goto	l3449
  4909  00346A                     u3020:
  4910  00346A  0012               	return		;funcret
  4911  00346C                     __end_of_setServo:
  4912                           	callstack 0
  4913                           
  4914 ;; *************** function _setServoAngle *****************
  4915 ;; Defined at:
  4916 ;;		line 19 in file "servo.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  angle           1    wreg     unsigned char 
  4919 ;;  pin             1    4[COMRAM] unsigned char 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  angle           1    7[COMRAM] unsigned char 
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4931 ;;      Params:         1       0       0       0       0       0       0       0       0
  4932 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4933 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4934 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4935 ;;Total ram usage:        4 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    2
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_setServo
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text29
  4946  002606                     __ptext29:
  4947                           	callstack 0
  4948  002606                     _setServoAngle:
  4949                           	callstack 26
  4950                           
  4951                           ;incstack = 0
  4952                           ;setServoAngle@angle stored from wreg
  4953  002606  6E08               	movwf	setServoAngle@angle^0,c
  4954  002608                     
  4955                           ;servo.c: 19: void setServoAngle(uint8_t angle, uint8_t pin);servo.c: 20: {;servo.c: 22:
      +                               TMR2 = angle;
  4956  002608  C008  FFCC         	movff	setServoAngle@angle,4044	;volatile
  4957  00260C                     
  4958                           ;servo.c: 23:     PR2 = 255;
  4959  00260C  68CB               	setf	203,c	;volatile
  4960  00260E                     
  4961                           ;servo.c: 25:     PIR1bits.TMR2IF = 0;
  4962  00260E  929E               	bcf	158,1,c	;volatile
  4963                           
  4964                           ;servo.c: 27:     switch(pin)
  4965  002610  EF13  F013         	goto	l3195
  4966  002614                     l228:
  4967                           
  4968                           ;servo.c: 30:             LATEbits.LATE0 = 1;
  4969  002614  808D               	bsf	141,0,c	;volatile
  4970                           
  4971                           ;servo.c: 31:             break;
  4972  002616  EF2C  F013         	goto	l3197
  4973  00261A                     l230:
  4974                           
  4975                           ;servo.c: 33:             LATEbits.LATE1 = 1;
  4976  00261A  828D               	bsf	141,1,c	;volatile
  4977                           
  4978                           ;servo.c: 34:             break;
  4979  00261C  EF2C  F013         	goto	l3197
  4980  002620                     l231:
  4981                           
  4982                           ;servo.c: 36:             LATEbits.LATE2 = 1;
  4983  002620  848D               	bsf	141,2,c	;volatile
  4984                           
  4985                           ;servo.c: 37:             break;
  4986  002622  EF2C  F013         	goto	l3197
  4987  002626                     l3195:
  4988  002626  5005               	movf	setServoAngle@pin^0,w,c
  4989  002628  6E06               	movwf	??_setServoAngle^0,c
  4990  00262A  6A07               	clrf	(??_setServoAngle+1)^0,c
  4991                           
  4992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4993                           ; Switch size 1, requested type "simple"
  4994                           ; Number of cases is 1, Range of values is 0 to 0
  4995                           ; switch strategies available:
  4996                           ; Name         Instructions Cycles
  4997                           ; simple_byte            4     3 (average)
  4998                           ;	Chosen strategy is simple_byte
  4999  00262C  5007               	movf	(??_setServoAngle+1)^0,w,c
  5000  00262E  0A00               	xorlw	0	; case 0
  5001  002630  B4D8               	btfsc	status,2,c
  5002  002632  EF1D  F013         	goto	l4991
  5003  002636  EF2C  F013         	goto	l3197
  5004  00263A                     l4991:
  5005                           
  5006                           ; Switch size 1, requested type "simple"
  5007                           ; Number of cases is 3, Range of values is 0 to 2
  5008                           ; switch strategies available:
  5009                           ; Name         Instructions Cycles
  5010                           ; simple_byte           10     6 (average)
  5011                           ;	Chosen strategy is simple_byte
  5012  00263A  5006               	movf	??_setServoAngle^0,w,c
  5013  00263C  0A00               	xorlw	0	; case 0
  5014  00263E  B4D8               	btfsc	status,2,c
  5015  002640  EF0A  F013         	goto	l228
  5016  002644  0A01               	xorlw	1	; case 1
  5017  002646  B4D8               	btfsc	status,2,c
  5018  002648  EF0D  F013         	goto	l230
  5019  00264C  0A03               	xorlw	3	; case 2
  5020  00264E  B4D8               	btfsc	status,2,c
  5021  002650  EF10  F013         	goto	l231
  5022  002654  EF2C  F013         	goto	l3197
  5023  002658                     l3197:
  5024                           
  5025                           ;servo.c: 40:     if(angle == 45)
  5026  002658  0E2D               	movlw	45
  5027  00265A  1808               	xorwf	setServoAngle@angle^0,w,c
  5028  00265C  A4D8               	btfss	status,2,c
  5029  00265E  EF33  F013         	goto	u2691
  5030  002662  EF35  F013         	goto	u2690
  5031  002666                     u2691:
  5032  002666  EF3E  F013         	goto	l3201
  5033  00266A                     u2690:
  5034  00266A                     
  5035                           ;servo.c: 41:     {;servo.c: 42:         _delay((unsigned long)((2000)*(12000000/4000000
      +                          .0)));
  5036  00266A  0E08               	movlw	8
  5037  00266C  6E06               	movwf	??_setServoAngle^0,c
  5038  00266E  0ECA               	movlw	202
  5039  002670                     u4957:
  5040  002670  2EE8               	decfsz	wreg,f,c
  5041  002672  D7FE               	bra	u4957
  5042  002674  2E06               	decfsz	??_setServoAngle^0,f,c
  5043  002676  D7FC               	bra	u4957
  5044                           
  5045                           ;servo.c: 43:     }
  5046  002678  EF62  F013         	goto	l3209
  5047  00267C                     l3201:
  5048  00267C  0E21               	movlw	33
  5049  00267E  1808               	xorwf	setServoAngle@angle^0,w,c
  5050  002680  A4D8               	btfss	status,2,c
  5051  002682  EF45  F013         	goto	u2701
  5052  002686  EF47  F013         	goto	u2700
  5053  00268A                     u2701:
  5054  00268A  EF51  F013         	goto	l3205
  5055  00268E                     u2700:
  5056  00268E                     
  5057                           ;servo.c: 45:     {;servo.c: 46:         _delay((unsigned long)((1000)*(12000000/4000000
      +                          .0)));
  5058  00268E  0E04               	movlw	4
  5059  002690  6E06               	movwf	??_setServoAngle^0,c
  5060  002692  0EE4               	movlw	228
  5061  002694                     u4967:
  5062  002694  2EE8               	decfsz	wreg,f,c
  5063  002696  D7FE               	bra	u4967
  5064  002698  2E06               	decfsz	??_setServoAngle^0,f,c
  5065  00269A  D7FC               	bra	u4967
  5066  00269C  D000               	nop2	
  5067                           
  5068                           ;servo.c: 47:     }
  5069  00269E  EF62  F013         	goto	l3209
  5070  0026A2                     l3205:
  5071  0026A2  0E27               	movlw	39
  5072  0026A4  1808               	xorwf	setServoAngle@angle^0,w,c
  5073  0026A6  A4D8               	btfss	status,2,c
  5074  0026A8  EF58  F013         	goto	u2711
  5075  0026AC  EF5A  F013         	goto	u2710
  5076  0026B0                     u2711:
  5077  0026B0  EF62  F013         	goto	l3209
  5078  0026B4                     u2710:
  5079  0026B4                     
  5080                           ;servo.c: 49:     {;servo.c: 50:         _delay((unsigned long)((1500)*(12000000/4000000
      +                          .0)));
  5081  0026B4  0E06               	movlw	6
  5082  0026B6  6E06               	movwf	??_setServoAngle^0,c
  5083  0026B8  0ED7               	movlw	215
  5084  0026BA                     u4977:
  5085  0026BA  2EE8               	decfsz	wreg,f,c
  5086  0026BC  D7FE               	bra	u4977
  5087  0026BE  2E06               	decfsz	??_setServoAngle^0,f,c
  5088  0026C0  D7FC               	bra	u4977
  5089  0026C2  F000               	nop	
  5090  0026C4                     l3209:
  5091                           
  5092                           ;servo.c: 53:     T2CONbits.TMR2ON = 1;
  5093  0026C4  84CA               	bsf	202,2,c	;volatile
  5094                           
  5095                           ;servo.c: 54:     while(!PIR1bits.TMR2IF)
  5096  0026C6  EF87  F013         	goto	l237
  5097  0026CA                     l240:
  5098                           
  5099                           ;servo.c: 59:                 LATEbits.LATE0 = 0;
  5100  0026CA  908D               	bcf	141,0,c	;volatile
  5101                           
  5102                           ;servo.c: 60:                 break;
  5103  0026CC  EF87  F013         	goto	l237
  5104  0026D0                     l242:
  5105                           
  5106                           ;servo.c: 62:                 LATEbits.LATE1 = 0;
  5107  0026D0  928D               	bcf	141,1,c	;volatile
  5108                           
  5109                           ;servo.c: 63:                 break;
  5110  0026D2  EF87  F013         	goto	l237
  5111  0026D6                     l243:
  5112                           
  5113                           ;servo.c: 65:                 LATEbits.LATE2 = 0;
  5114  0026D6  948D               	bcf	141,2,c	;volatile
  5115                           
  5116                           ;servo.c: 66:                 break;
  5117  0026D8  EF87  F013         	goto	l237
  5118  0026DC                     l3213:
  5119  0026DC  5005               	movf	setServoAngle@pin^0,w,c
  5120  0026DE  6E06               	movwf	??_setServoAngle^0,c
  5121  0026E0  6A07               	clrf	(??_setServoAngle+1)^0,c
  5122                           
  5123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5124                           ; Switch size 1, requested type "simple"
  5125                           ; Number of cases is 1, Range of values is 0 to 0
  5126                           ; switch strategies available:
  5127                           ; Name         Instructions Cycles
  5128                           ; simple_byte            4     3 (average)
  5129                           ;	Chosen strategy is simple_byte
  5130  0026E2  5007               	movf	(??_setServoAngle+1)^0,w,c
  5131  0026E4  0A00               	xorlw	0	; case 0
  5132  0026E6  B4D8               	btfsc	status,2,c
  5133  0026E8  EF78  F013         	goto	l4993
  5134  0026EC  EF87  F013         	goto	l237
  5135  0026F0                     l4993:
  5136                           
  5137                           ; Switch size 1, requested type "simple"
  5138                           ; Number of cases is 3, Range of values is 0 to 2
  5139                           ; switch strategies available:
  5140                           ; Name         Instructions Cycles
  5141                           ; simple_byte           10     6 (average)
  5142                           ;	Chosen strategy is simple_byte
  5143  0026F0  5006               	movf	??_setServoAngle^0,w,c
  5144  0026F2  0A00               	xorlw	0	; case 0
  5145  0026F4  B4D8               	btfsc	status,2,c
  5146  0026F6  EF65  F013         	goto	l240
  5147  0026FA  0A01               	xorlw	1	; case 1
  5148  0026FC  B4D8               	btfsc	status,2,c
  5149  0026FE  EF68  F013         	goto	l242
  5150  002702  0A03               	xorlw	3	; case 2
  5151  002704  B4D8               	btfsc	status,2,c
  5152  002706  EF6B  F013         	goto	l243
  5153  00270A  EF87  F013         	goto	l237
  5154  00270E                     l237:
  5155                           
  5156                           ;servo.c: 54:     while(!PIR1bits.TMR2IF)
  5157  00270E  A29E               	btfss	158,1,c	;volatile
  5158  002710  EF8C  F013         	goto	u2721
  5159  002714  EF8E  F013         	goto	u2720
  5160  002718                     u2721:
  5161  002718  EF6E  F013         	goto	l3213
  5162  00271C                     u2720:
  5163  00271C                     
  5164                           ;servo.c: 70:     T2CONbits.TMR2ON = 0;
  5165  00271C  94CA               	bcf	202,2,c	;volatile
  5166                           
  5167                           ;servo.c: 71:     PIR1bits.TMR2IF = 0;
  5168  00271E  929E               	bcf	158,1,c	;volatile
  5169  002720  0012               	return		;funcret
  5170  002722                     __end_of_setServoAngle:
  5171                           	callstack 0
  5172                           
  5173 ;; *************** function _appCounterStart *****************
  5174 ;; Defined at:
  5175 ;;		line 140 in file "servo.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		None
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5189 ;;      Params:         0       0       0       0       0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5192 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    2
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_appSubGiveElemts
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text30
  5204  003500                     __ptext30:
  5205                           	callstack 0
  5206  003500                     _appCounterStart:
  5207                           	callstack 26
  5208  003500                     
  5209                           ;servo.c: 143:     T0CONbits.TMR0ON = 1;
  5210  003500  8ED5               	bsf	213,7,c	;volatile
  5211  003502  0012               	return		;funcret
  5212  003504                     __end_of_appCounterStart:
  5213                           	callstack 0
  5214                           
  5215 ;; *************** function _appSubGetData *****************
  5216 ;; Defined at:
  5217 ;;		line 83 in file "app.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  5220 ;;		 -> datos(25), 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  cantidad        2   38[BANK0 ] unsigned short 
  5223 ;;  inout           1   40[BANK0 ] unsigned char 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  1    wreg      void 
  5226 ;; Registers used:
  5227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5233 ;;      Params:         0       2       0       0       0       0       0       0       0
  5234 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5236 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5237 ;;Total ram usage:        5 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:   10
  5240 ;; This function calls:
  5241 ;;		_Lcd_Out
  5242 ;;		___wmul
  5243 ;;		_memset
  5244 ;;		_sprintf
  5245 ;;		_teclado
  5246 ;; This function is called by:
  5247 ;;		_appGetElements
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text31
  5252  002828                     __ptext31:
  5253                           	callstack 0
  5254  002828                     _appSubGetData:
  5255                           	callstack 19
  5256  002828                     
  5257                           ;app.c: 83: void appSubGetData(StateMachine *data_Inout);app.c: 84: {;app.c: 85:     uin
      +                          t16_t cantidad = 0;
  5258  002828  0E00               	movlw	0
  5259  00282A  0100               	movlb	0	; () banked
  5260  00282C  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  5261  00282E  0E00               	movlw	0
  5262  002830  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  5263                           
  5264                           ;app.c: 86:     uint8_t inout = 0;
  5265  002832  0E00               	movlw	0
  5266  002834  6F88               	movwf	appSubGetData@inout& (0+255),b
  5267  002836                     
  5268                           ; BSR set to: 0
  5269                           ;app.c: 87:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  5270  002836  0E07               	movlw	7
  5271  002838  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  5272  00283A  6E05               	movwf	memset@dest^0,c
  5273  00283C  0E00               	movlw	0
  5274  00283E  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  5275  002840  6E06               	movwf	(memset@dest+1)^0,c
  5276  002842  0E00               	movlw	0
  5277  002844  6E08               	movwf	(memset@c+1)^0,c
  5278  002846  0E00               	movlw	0
  5279  002848  6E07               	movwf	memset@c^0,c
  5280  00284A  0E00               	movlw	0
  5281  00284C  6E0A               	movwf	(memset@n+1)^0,c
  5282  00284E  0E10               	movlw	16
  5283  002850  6E09               	movwf	memset@n^0,c
  5284  002852  EC5A  F010         	call	_memset	;wreg free
  5285  002856                     
  5286                           ;app.c: 88:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  5287  002856  0E00               	movlw	0
  5288  002858  6E08               	movwf	Lcd_Out@x^0,c
  5289  00285A  0E12               	movlw	low STR_6
  5290  00285C  6E09               	movwf	Lcd_Out@buffer^0,c
  5291  00285E  0E08               	movlw	high STR_6
  5292  002860  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  5293  002862  0E01               	movlw	1
  5294  002864  EC93  F014         	call	_Lcd_Out
  5295                           
  5296                           ;app.c: 89:     while(inout != '*')
  5297  002868  EF7E  F014         	goto	l4777
  5298  00286C                     l4765:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;app.c: 90:     {;app.c: 91:         teclado(&inout);
  5302  00286C  0E88               	movlw	low appSubGetData@inout
  5303  00286E  6E05               	movwf	teclado@valor^0,c
  5304  002870  0E00               	movlw	high appSubGetData@inout
  5305  002872  6E06               	movwf	(teclado@valor+1)^0,c
  5306  002874  EC35  F00B         	call	_teclado	;wreg free
  5307  002878                     
  5308                           ;app.c: 93:         if((inout >= '0') && (inout <= '9'))
  5309  002878  0E2F               	movlw	47
  5310  00287A  0100               	movlb	0	; () banked
  5311  00287C  6588               	cpfsgt	appSubGetData@inout& (0+255),b
  5312  00287E  EF43  F014         	goto	u4681
  5313  002882  EF45  F014         	goto	u4680
  5314  002886                     u4681:
  5315  002886  EF62  F014         	goto	l4773
  5316  00288A                     u4680:
  5317  00288A                     
  5318                           ; BSR set to: 0
  5319  00288A  0E3A               	movlw	58
  5320  00288C  6188               	cpfslt	appSubGetData@inout& (0+255),b
  5321  00288E  EF4B  F014         	goto	u4691
  5322  002892  EF4D  F014         	goto	u4690
  5323  002896                     u4691:
  5324  002896  EF62  F014         	goto	l4773
  5325  00289A                     u4690:
  5326  00289A                     
  5327                           ; BSR set to: 0
  5328                           ;app.c: 94:         {;app.c: 95:             cantidad = (cantidad*10)+(inout - 48);
  5329  00289A  C086  F005         	movff	appSubGetData@cantidad,___wmul@multiplier
  5330  00289E  C087  F006         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  5331  0028A2  0E00               	movlw	0
  5332  0028A4  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5333  0028A6  0E0A               	movlw	10
  5334  0028A8  6E07               	movwf	___wmul@multiplicand^0,c
  5335  0028AA  EC36  F01A         	call	___wmul	;wreg free
  5336  0028AE  0100               	movlb	0	; () banked
  5337  0028B0  5188               	movf	appSubGetData@inout& (0+255),w,b
  5338  0028B2  2605               	addwf	?___wmul^0,f,c
  5339  0028B4  0E00               	movlw	0
  5340  0028B6  2206               	addwfc	(?___wmul+1)^0,f,c
  5341  0028B8  0ED0               	movlw	208
  5342  0028BA  2405               	addwf	?___wmul^0,w,c
  5343  0028BC  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  5344  0028BE  0EFF               	movlw	255
  5345  0028C0  2006               	addwfc	(?___wmul+1)^0,w,c
  5346  0028C2  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  5347  0028C4                     l4773:
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;app.c: 97:         sprintf((char *)data_Inout->display,"%d",cantidad);
  5351  0028C4  0E07               	movlw	7
  5352  0028C6  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  5353  0028C8  6F72               	movwf	sprintf@s& (0+255),b
  5354  0028CA  0E00               	movlw	0
  5355  0028CC  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  5356  0028CE  6F73               	movwf	(sprintf@s+1)& (0+255),b
  5357  0028D0  0E57               	movlw	low (STR_5+2)
  5358  0028D2  6F74               	movwf	sprintf@fmt& (0+255),b
  5359  0028D4  0E08               	movlw	high (STR_5+2)
  5360  0028D6  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  5361  0028D8  C086  F076         	movff	appSubGetData@cantidad,?_sprintf+4
  5362  0028DC  C087  F077         	movff	appSubGetData@cantidad+1,?_sprintf+5
  5363  0028E0  EC52  F018         	call	_sprintf	;wreg free
  5364  0028E4                     
  5365                           ;app.c: 98:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  5366  0028E4  0E00               	movlw	0
  5367  0028E6  6E08               	movwf	Lcd_Out@x^0,c
  5368  0028E8  0E07               	movlw	7
  5369  0028EA  0100               	movlb	0	; () banked
  5370  0028EC  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  5371  0028EE  6E09               	movwf	Lcd_Out@buffer^0,c
  5372  0028F0  0E00               	movlw	0
  5373  0028F2  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  5374  0028F4  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  5375  0028F6  0E02               	movlw	2
  5376  0028F8  EC93  F014         	call	_Lcd_Out
  5377  0028FC                     l4777:
  5378                           
  5379                           ;app.c: 89:     while(inout != '*')
  5380  0028FC  0E2A               	movlw	42
  5381  0028FE  0100               	movlb	0	; () banked
  5382  002900  1988               	xorwf	appSubGetData@inout& (0+255),w,b
  5383  002902  A4D8               	btfss	status,2,c
  5384  002904  EF86  F014         	goto	u4701
  5385  002908  EF88  F014         	goto	u4700
  5386  00290C                     u4701:
  5387  00290C  EF36  F014         	goto	l4765
  5388  002910                     u4700:
  5389  002910                     
  5390                           ; BSR set to: 0
  5391                           ;app.c: 100:     data_Inout->elements += (int16_t)cantidad;
  5392  002910  EE20 F001          	lfsr	2,1
  5393  002914  5184               	movf	appSubGetData@data_Inout& (0+255),w,b
  5394  002916  26D9               	addwf	fsr2l,f,c
  5395  002918  5185               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  5396  00291A  22DA               	addwfc	fsr2h,f,c
  5397  00291C  5186               	movf	appSubGetData@cantidad& (0+255),w,b
  5398  00291E  26DE               	addwf	postinc2,f,c
  5399  002920  5187               	movf	(appSubGetData@cantidad+1)& (0+255),w,b
  5400  002922  22DD               	addwfc	postdec2,f,c
  5401  002924                     
  5402                           ; BSR set to: 0
  5403  002924  0012               	return		;funcret
  5404  002926                     __end_of_appSubGetData:
  5405                           	callstack 0
  5406                           
  5407 ;; *************** function _teclado *****************
  5408 ;; Defined at:
  5409 ;;		line 10 in file "teclado.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;  valor           2    4[COMRAM] PTR unsigned char 
  5412 ;;		 -> appSubGetData@inout(1), datos(25), 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;		None
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5424 ;;      Params:         2       0       0       0       0       0       0       0       0
  5425 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5427 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5428 ;;Total ram usage:        2 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    2
  5431 ;; This function calls:
  5432 ;;		Nothing
  5433 ;; This function is called by:
  5434 ;;		_appStateInitial
  5435 ;;		_appSubGetData
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text32
  5440  00166A                     __ptext32:
  5441                           	callstack 0
  5442  00166A                     _teclado:
  5443                           	callstack 27
  5444  00166A                     
  5445                           ;teclado.c: 11:     *valor = 0;
  5446  00166A  C005  FFD9         	movff	teclado@valor,fsr2l
  5447  00166E  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5448  001672  0E00               	movlw	0
  5449  001674  6EDF               	movwf	indf2,c
  5450  001676                     
  5451                           ;teclado.c: 12:     PORTB=0xF0;
  5452  001676  0EF0               	movlw	240
  5453  001678  6E81               	movwf	129,c	;volatile
  5454  00167A                     
  5455                           ;teclado.c: 13:     if(PORTB != 0xF0){
  5456  00167A  0EF0               	movlw	240
  5457  00167C  1881               	xorwf	129,w,c	;volatile
  5458  00167E  B4D8               	btfsc	status,2,c
  5459  001680  EF44  F00B         	goto	u2831
  5460  001684  EF46  F00B         	goto	u2830
  5461  001688                     u2831:
  5462  001688  EF1E  F00C         	goto	l3385
  5463  00168C                     u2830:
  5464  00168C                     
  5465                           ;teclado.c: 14:         PORTB=0xFE;
  5466  00168C  0EFE               	movlw	254
  5467  00168E  6E81               	movwf	129,c	;volatile
  5468  001690                     
  5469                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  5470  001690  B881               	btfsc	129,4,c	;volatile
  5471  001692  EF4D  F00B         	goto	u2841
  5472  001696  EF4F  F00B         	goto	u2840
  5473  00169A                     u2841:
  5474  00169A  EF55  F00B         	goto	l3319
  5475  00169E                     u2840:
  5476  00169E  C005  FFD9         	movff	teclado@valor,fsr2l
  5477  0016A2  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5478  0016A6  0E2A               	movlw	42
  5479  0016A8  6EDF               	movwf	indf2,c
  5480  0016AA                     l3319:
  5481                           
  5482                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  5483  0016AA  BA81               	btfsc	129,5,c	;volatile
  5484  0016AC  EF5A  F00B         	goto	u2851
  5485  0016B0  EF5C  F00B         	goto	u2850
  5486  0016B4                     u2851:
  5487  0016B4  EF62  F00B         	goto	l3323
  5488  0016B8                     u2850:
  5489  0016B8  C005  FFD9         	movff	teclado@valor,fsr2l
  5490  0016BC  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5491  0016C0  0E30               	movlw	48
  5492  0016C2  6EDF               	movwf	indf2,c
  5493  0016C4                     l3323:
  5494                           
  5495                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  5496  0016C4  BC81               	btfsc	129,6,c	;volatile
  5497  0016C6  EF67  F00B         	goto	u2861
  5498  0016CA  EF69  F00B         	goto	u2860
  5499  0016CE                     u2861:
  5500  0016CE  EF6F  F00B         	goto	l3327
  5501  0016D2                     u2860:
  5502  0016D2  C005  FFD9         	movff	teclado@valor,fsr2l
  5503  0016D6  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5504  0016DA  0E23               	movlw	35
  5505  0016DC  6EDF               	movwf	indf2,c
  5506  0016DE                     l3327:
  5507                           
  5508                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  5509  0016DE  BE81               	btfsc	129,7,c	;volatile
  5510  0016E0  EF74  F00B         	goto	u2871
  5511  0016E4  EF76  F00B         	goto	u2870
  5512  0016E8                     u2871:
  5513  0016E8  EF7C  F00B         	goto	l3331
  5514  0016EC                     u2870:
  5515  0016EC  C005  FFD9         	movff	teclado@valor,fsr2l
  5516  0016F0  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5517  0016F4  0E44               	movlw	68
  5518  0016F6  6EDF               	movwf	indf2,c
  5519  0016F8                     l3331:
  5520                           
  5521                           ;teclado.c: 19:         PORTB=0xFD;
  5522  0016F8  0EFD               	movlw	253
  5523  0016FA  6E81               	movwf	129,c	;volatile
  5524  0016FC                     
  5525                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  5526  0016FC  B881               	btfsc	129,4,c	;volatile
  5527  0016FE  EF83  F00B         	goto	u2881
  5528  001702  EF85  F00B         	goto	u2880
  5529  001706                     u2881:
  5530  001706  EF8B  F00B         	goto	l3337
  5531  00170A                     u2880:
  5532  00170A  C005  FFD9         	movff	teclado@valor,fsr2l
  5533  00170E  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5534  001712  0E37               	movlw	55
  5535  001714  6EDF               	movwf	indf2,c
  5536  001716                     l3337:
  5537                           
  5538                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  5539  001716  BA81               	btfsc	129,5,c	;volatile
  5540  001718  EF90  F00B         	goto	u2891
  5541  00171C  EF92  F00B         	goto	u2890
  5542  001720                     u2891:
  5543  001720  EF98  F00B         	goto	l3341
  5544  001724                     u2890:
  5545  001724  C005  FFD9         	movff	teclado@valor,fsr2l
  5546  001728  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5547  00172C  0E38               	movlw	56
  5548  00172E  6EDF               	movwf	indf2,c
  5549  001730                     l3341:
  5550                           
  5551                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  5552  001730  BC81               	btfsc	129,6,c	;volatile
  5553  001732  EF9D  F00B         	goto	u2901
  5554  001736  EF9F  F00B         	goto	u2900
  5555  00173A                     u2901:
  5556  00173A  EFA5  F00B         	goto	l3345
  5557  00173E                     u2900:
  5558  00173E  C005  FFD9         	movff	teclado@valor,fsr2l
  5559  001742  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5560  001746  0E39               	movlw	57
  5561  001748  6EDF               	movwf	indf2,c
  5562  00174A                     l3345:
  5563                           
  5564                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  5565  00174A  BE81               	btfsc	129,7,c	;volatile
  5566  00174C  EFAA  F00B         	goto	u2911
  5567  001750  EFAC  F00B         	goto	u2910
  5568  001754                     u2911:
  5569  001754  EFB2  F00B         	goto	l3349
  5570  001758                     u2910:
  5571  001758  C005  FFD9         	movff	teclado@valor,fsr2l
  5572  00175C  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5573  001760  0E43               	movlw	67
  5574  001762  6EDF               	movwf	indf2,c
  5575  001764                     l3349:
  5576                           
  5577                           ;teclado.c: 24:         PORTB=0xFB;
  5578  001764  0EFB               	movlw	251
  5579  001766  6E81               	movwf	129,c	;volatile
  5580  001768                     
  5581                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  5582  001768  B881               	btfsc	129,4,c	;volatile
  5583  00176A  EFB9  F00B         	goto	u2921
  5584  00176E  EFBB  F00B         	goto	u2920
  5585  001772                     u2921:
  5586  001772  EFC1  F00B         	goto	l3355
  5587  001776                     u2920:
  5588  001776  C005  FFD9         	movff	teclado@valor,fsr2l
  5589  00177A  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5590  00177E  0E34               	movlw	52
  5591  001780  6EDF               	movwf	indf2,c
  5592  001782                     l3355:
  5593                           
  5594                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  5595  001782  BA81               	btfsc	129,5,c	;volatile
  5596  001784  EFC6  F00B         	goto	u2931
  5597  001788  EFC8  F00B         	goto	u2930
  5598  00178C                     u2931:
  5599  00178C  EFCE  F00B         	goto	l3359
  5600  001790                     u2930:
  5601  001790  C005  FFD9         	movff	teclado@valor,fsr2l
  5602  001794  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5603  001798  0E35               	movlw	53
  5604  00179A  6EDF               	movwf	indf2,c
  5605  00179C                     l3359:
  5606                           
  5607                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  5608  00179C  BC81               	btfsc	129,6,c	;volatile
  5609  00179E  EFD3  F00B         	goto	u2941
  5610  0017A2  EFD5  F00B         	goto	u2940
  5611  0017A6                     u2941:
  5612  0017A6  EFDB  F00B         	goto	l3363
  5613  0017AA                     u2940:
  5614  0017AA  C005  FFD9         	movff	teclado@valor,fsr2l
  5615  0017AE  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5616  0017B2  0E36               	movlw	54
  5617  0017B4  6EDF               	movwf	indf2,c
  5618  0017B6                     l3363:
  5619                           
  5620                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  5621  0017B6  BE81               	btfsc	129,7,c	;volatile
  5622  0017B8  EFE0  F00B         	goto	u2951
  5623  0017BC  EFE2  F00B         	goto	u2950
  5624  0017C0                     u2951:
  5625  0017C0  EFE8  F00B         	goto	l3367
  5626  0017C4                     u2950:
  5627  0017C4  C005  FFD9         	movff	teclado@valor,fsr2l
  5628  0017C8  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5629  0017CC  0E42               	movlw	66
  5630  0017CE  6EDF               	movwf	indf2,c
  5631  0017D0                     l3367:
  5632                           
  5633                           ;teclado.c: 29:         PORTB=0xF7;
  5634  0017D0  0EF7               	movlw	247
  5635  0017D2  6E81               	movwf	129,c	;volatile
  5636  0017D4                     
  5637                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  5638  0017D4  B881               	btfsc	129,4,c	;volatile
  5639  0017D6  EFEF  F00B         	goto	u2961
  5640  0017DA  EFF1  F00B         	goto	u2960
  5641  0017DE                     u2961:
  5642  0017DE  EFF7  F00B         	goto	l3373
  5643  0017E2                     u2960:
  5644  0017E2  C005  FFD9         	movff	teclado@valor,fsr2l
  5645  0017E6  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5646  0017EA  0E31               	movlw	49
  5647  0017EC  6EDF               	movwf	indf2,c
  5648  0017EE                     l3373:
  5649                           
  5650                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  5651  0017EE  BA81               	btfsc	129,5,c	;volatile
  5652  0017F0  EFFC  F00B         	goto	u2971
  5653  0017F4  EFFE  F00B         	goto	u2970
  5654  0017F8                     u2971:
  5655  0017F8  EF04  F00C         	goto	l3377
  5656  0017FC                     u2970:
  5657  0017FC  C005  FFD9         	movff	teclado@valor,fsr2l
  5658  001800  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5659  001804  0E32               	movlw	50
  5660  001806  6EDF               	movwf	indf2,c
  5661  001808                     l3377:
  5662                           
  5663                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  5664  001808  BC81               	btfsc	129,6,c	;volatile
  5665  00180A  EF09  F00C         	goto	u2981
  5666  00180E  EF0B  F00C         	goto	u2980
  5667  001812                     u2981:
  5668  001812  EF11  F00C         	goto	l3381
  5669  001816                     u2980:
  5670  001816  C005  FFD9         	movff	teclado@valor,fsr2l
  5671  00181A  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5672  00181E  0E33               	movlw	51
  5673  001820  6EDF               	movwf	indf2,c
  5674  001822                     l3381:
  5675                           
  5676                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  5677  001822  BE81               	btfsc	129,7,c	;volatile
  5678  001824  EF16  F00C         	goto	u2991
  5679  001828  EF18  F00C         	goto	u2990
  5680  00182C                     u2991:
  5681  00182C  EF1E  F00C         	goto	l3385
  5682  001830                     u2990:
  5683  001830  C005  FFD9         	movff	teclado@valor,fsr2l
  5684  001834  C006  FFDA         	movff	teclado@valor+1,fsr2h
  5685  001838  0E41               	movlw	65
  5686  00183A  6EDF               	movwf	indf2,c
  5687  00183C                     l3385:
  5688                           
  5689                           ;teclado.c: 35:     PORTB = 0xF0;
  5690  00183C  0EF0               	movlw	240
  5691  00183E  6E81               	movwf	129,c	;volatile
  5692  001840                     l3387:
  5693  001840  0EF0               	movlw	240
  5694  001842  1881               	xorwf	129,w,c	;volatile
  5695  001844  A4D8               	btfss	status,2,c
  5696  001846  EF27  F00C         	goto	u3001
  5697  00184A  EF29  F00C         	goto	u3000
  5698  00184E                     u3001:
  5699  00184E  EF20  F00C         	goto	l3387
  5700  001852                     u3000:
  5701  001852  0012               	return		;funcret
  5702  001854                     __end_of_teclado:
  5703                           	callstack 0
  5704                           
  5705 ;; *************** function _sprintf *****************
  5706 ;; Defined at:
  5707 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  s               2   18[BANK0 ] PTR unsigned char 
  5710 ;;		 -> appElemts@dataout(6), datos(25), 
  5711 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  5712 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  f               6   30[BANK0 ] struct _IO_FILE
  5715 ;;  ap              2   28[BANK0 ] PTR void [1]
  5716 ;;		 -> ?_sprintf(2), 
  5717 ;;  ret             2    0        int 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  2   18[BANK0 ] int 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5727 ;;      Params:         0       8       0       0       0       0       0       0       0
  5728 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5730 ;;      Totals:         0      18       0       0       0       0       0       0       0
  5731 ;;Total ram usage:       18 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    9
  5734 ;; This function calls:
  5735 ;;		_vfprintf
  5736 ;; This function is called by:
  5737 ;;		_appADC
  5738 ;;		_appBat
  5739 ;;		_appElemts
  5740 ;;		_appSubGetData
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text33
  5745  0030A4                     __ptext33:
  5746                           	callstack 0
  5747  0030A4                     _sprintf:
  5748                           	callstack 19
  5749  0030A4  0E76               	movlw	low (?_sprintf+4)
  5750  0030A6  0100               	movlb	0	; () banked
  5751  0030A8  6F7C               	movwf	sprintf@ap& (0+255),b
  5752  0030AA  0E00               	movlw	high (?_sprintf+4)
  5753  0030AC  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  5754  0030AE  C072  F07E         	movff	sprintf@s,sprintf@f
  5755  0030B2  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  5756  0030B6                     
  5757                           ; BSR set to: 0
  5758  0030B6  0E00               	movlw	0
  5759  0030B8  6F81               	movwf	(sprintf@f+3)& (0+255),b
  5760  0030BA  0E00               	movlw	0
  5761  0030BC  6F80               	movwf	(sprintf@f+2)& (0+255),b
  5762  0030BE                     
  5763                           ; BSR set to: 0
  5764  0030BE  0E00               	movlw	0
  5765  0030C0  6F83               	movwf	(sprintf@f+5)& (0+255),b
  5766  0030C2  0E00               	movlw	0
  5767  0030C4  6F82               	movwf	(sprintf@f+4)& (0+255),b
  5768  0030C6                     
  5769                           ; BSR set to: 0
  5770  0030C6  0E7E               	movlw	low sprintf@f
  5771  0030C8  6F6C               	movwf	vfprintf@fp& (0+255),b
  5772  0030CA  0E00               	movlw	high sprintf@f
  5773  0030CC  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  5774  0030CE  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  5775  0030D2  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5776  0030D6  0E7C               	movlw	low sprintf@ap
  5777  0030D8  6F70               	movwf	vfprintf@ap& (0+255),b
  5778  0030DA  0E00               	movlw	high sprintf@ap
  5779  0030DC  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  5780  0030DE  ECC6  F017         	call	_vfprintf	;wreg free
  5781  0030E2  0100               	movlb	0	; () banked
  5782  0030E4  5180               	movf	(sprintf@f+2)& (0+255),w,b
  5783  0030E6  2572               	addwf	sprintf@s& (0+255),w,b
  5784  0030E8  6ED9               	movwf	fsr2l,c
  5785  0030EA  5181               	movf	(sprintf@f+3)& (0+255),w,b
  5786  0030EC  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  5787  0030EE  6EDA               	movwf	fsr2h,c
  5788  0030F0  0E00               	movlw	0
  5789  0030F2  6EDF               	movwf	indf2,c
  5790  0030F4                     
  5791                           ; BSR set to: 0
  5792  0030F4  0012               	return		;funcret
  5793  0030F6                     __end_of_sprintf:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function _vfprintf *****************
  5797 ;; Defined at:
  5798 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  5801 ;;		 -> sprintf@f(6), 
  5802 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  5803 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  5804 ;;  ap              2   16[BANK0 ] PTR PTR void 
  5805 ;;		 -> sprintf@ap(2), 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  5808 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  2   12[BANK0 ] int 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5818 ;;      Params:         0       6       0       0       0       0       0       0       0
  5819 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5821 ;;      Totals:         2       6       0       0       0       0       0       0       0
  5822 ;;Total ram usage:        8 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    8
  5825 ;; This function calls:
  5826 ;;		_vfpfcnvrt
  5827 ;; This function is called by:
  5828 ;;		_sprintf
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text34
  5833  002F8C                     __ptext34:
  5834                           	callstack 0
  5835  002F8C                     _vfprintf:
  5836                           	callstack 19
  5837  002F8C                     
  5838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5839  002F8C  C06E  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  5840  002F90  C06F  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5841  002F94                     
  5842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5843  002F94  0E00               	movlw	0
  5844  002F96  0100               	movlb	0	; () banked
  5845  002F98  6F95               	movwf	(_nout+1)& (0+255),b
  5846  002F9A  0E00               	movlw	0
  5847  002F9C  6F94               	movwf	_nout& (0+255),b
  5848                           
  5849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5850  002F9E  EFE4  F017         	goto	l4675
  5851  002FA2                     l4673:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5855  002FA2  C06C  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  5856  002FA6  C06D  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5857  002FAA  0E4E               	movlw	low vfprintf@cfmt
  5858  002FAC  6E46               	movwf	vfpfcnvrt@fmt^0,c
  5859  002FAE  0E00               	movlw	high vfprintf@cfmt
  5860  002FB0  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5861  002FB2  C070  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  5862  002FB6  C071  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5863  002FBA  EC10  F008         	call	_vfpfcnvrt	;wreg free
  5864  002FBE  5044               	movf	?_vfpfcnvrt^0,w,c
  5865  002FC0  0100               	movlb	0	; () banked
  5866  002FC2  2794               	addwf	_nout& (0+255),f,b
  5867  002FC4  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  5868  002FC6  2395               	addwfc	(_nout+1)& (0+255),f,b
  5869  002FC8                     l4675:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5873  002FC8  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  5874  002FCC  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5875  002FD0                     	if	0	;tblptru may be non-zero
  5876  002FD0                     	endif
  5877  002FD0                     	if	0	;tblptru may be non-zero
  5878  002FD0                     	endif
  5879  002FD0  0008               	tblrd		*
  5880  002FD2  50F5               	movf	tablat,w,c
  5881  002FD4  0900               	iorlw	0
  5882  002FD6  A4D8               	btfss	status,2,c
  5883  002FD8  EFF0  F017         	goto	u4581
  5884  002FDC  EFF2  F017         	goto	u4580
  5885  002FE0                     u4581:
  5886  002FE0  EFD1  F017         	goto	l4673
  5887  002FE4                     u4580:
  5888  002FE4                     
  5889                           ; BSR set to: 0
  5890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5891  002FE4  C094  F06C         	movff	_nout,?_vfprintf
  5892  002FE8  C095  F06D         	movff	_nout+1,?_vfprintf+1
  5893  002FEC                     
  5894                           ; BSR set to: 0
  5895  002FEC  0012               	return		;funcret
  5896  002FEE                     __end_of_vfprintf:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function _vfpfcnvrt *****************
  5900 ;; Defined at:
  5901 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  5904 ;;		 -> sprintf@f(6), 
  5905 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  5906 ;;		 -> vfprintf@cfmt(2), 
  5907 ;;  ap              2   71[COMRAM] PTR PTR void 
  5908 ;;		 -> sprintf@ap(2), 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  ll              8    0[BANK0 ] long long 
  5911 ;;  llu             8    0        unsigned long long 
  5912 ;;  f               4    0        unsigned long long 
  5913 ;;  vp              3    0        PTR void 
  5914 ;;  ct              3    0        unsigned char [3]
  5915 ;;  cp              3    0        PTR unsigned char 
  5916 ;;  done            2    8[BANK0 ] int 
  5917 ;;  i               2    0        int 
  5918 ;;  c               1    0        unsigned char 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  2   67[COMRAM] int 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5928 ;;      Params:         6       0       0       0       0       0       0       0       0
  5929 ;;      Locals:         0      12       0       0       0       0       0       0       0
  5930 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5931 ;;      Totals:        10      12       0       0       0       0       0       0       0
  5932 ;;Total ram usage:       22 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:    7
  5935 ;; This function calls:
  5936 ;;		_atoi
  5937 ;;		_dtoa
  5938 ;;		_fputc
  5939 ;;		_isdigit
  5940 ;; This function is called by:
  5941 ;;		_vfprintf
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text35
  5946  001020                     __ptext35:
  5947                           	callstack 0
  5948  001020                     _vfpfcnvrt:
  5949                           	callstack 19
  5950  001020                     
  5951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5952  001020  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5953  001024  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5954  001028  CFDE FFF6          	movff	postinc2,tblptrl
  5955  00102C  CFDD FFF7          	movff	postdec2,tblptrh
  5956  001030                     	if	0	;tblptru may be non-zero
  5957  001030                     	endif
  5958  001030                     	if	0	;tblptru may be non-zero
  5959  001030                     	endif
  5960  001030  0008               	tblrd		*
  5961  001032  50F5               	movf	tablat,w,c
  5962  001034  0A25               	xorlw	37
  5963  001036  A4D8               	btfss	status,2,c
  5964  001038  EF20  F008         	goto	u4471
  5965  00103C  EF22  F008         	goto	u4470
  5966  001040                     u4471:
  5967  001040  EFAA  F009         	goto	l4651
  5968  001044                     u4470:
  5969  001044                     
  5970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5971  001044  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5972  001048  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5973  00104C  2ADE               	incf	postinc2,f,c
  5974  00104E  0E00               	movlw	0
  5975  001050  22DD               	addwfc	postdec2,f,c
  5976  001052                     
  5977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5978  001052  0E00               	movlw	0
  5979  001054  0100               	movlb	0	; () banked
  5980  001056  6F97               	movwf	(_width+1)& (0+255),b
  5981  001058  0E00               	movlw	0
  5982  00105A  6F96               	movwf	_width& (0+255),b
  5983  00105C  C096  F059         	movff	_width,_flags
  5984  001060  C097  F05A         	movff	_width+1,_flags+1
  5985  001064                     
  5986                           ; BSR set to: 0
  5987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5988  001064  6857               	setf	_prec^0,c
  5989  001066  6858               	setf	(_prec+1)^0,c
  5990  001068                     
  5991                           ; BSR set to: 0
  5992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  5993  001068  0E00               	movlw	0
  5994  00106A  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5995  00106C  0E00               	movlw	0
  5996  00106E  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  5997                           
  5998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5999  001070  EF80  F008         	goto	l4603
  6000  001074                     l4577:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  6004  001074  8059               	bsf	_flags^0,0,c
  6005  001076                     l4579:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  6009  001076  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6010  00107A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6011  00107E  2ADE               	incf	postinc2,f,c
  6012  001080  0E00               	movlw	0
  6013  001082  22DD               	addwfc	postdec2,f,c
  6014                           
  6015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  6016  001084  EF80  F008         	goto	l4603
  6017  001088                     l4581:
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  6021  001088  8259               	bsf	_flags^0,1,c
  6022  00108A  EF3B  F008         	goto	l4579
  6023  00108E                     l4585:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  6027  00108E  8459               	bsf	_flags^0,2,c
  6028  001090  EF3B  F008         	goto	l4579
  6029  001094                     l4589:
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  6033  001094  8659               	bsf	_flags^0,3,c
  6034  001096  EF3B  F008         	goto	l4579
  6035  00109A                     l4593:
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  6039  00109A  8859               	bsf	_flags^0,4,c
  6040  00109C  EF3B  F008         	goto	l4579
  6041  0010A0                     l4597:
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  6045  0010A0  0E00               	movlw	0
  6046  0010A2  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6047  0010A4  0E01               	movlw	1
  6048  0010A6  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  6049                           
  6050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  6051  0010A8  EF80  F008         	goto	l4603
  6052  0010AC                     l4601:
  6053                           
  6054                           ; BSR set to: 0
  6055  0010AC  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6056  0010B0  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6057  0010B4  CFDE FFF6          	movff	postinc2,tblptrl
  6058  0010B8  CFDD FFF7          	movff	postdec2,tblptrh
  6059  0010BC                     	if	0	;tblptru may be non-zero
  6060  0010BC                     	endif
  6061  0010BC                     	if	0	;tblptru may be non-zero
  6062  0010BC                     	endif
  6063  0010BC  0008               	tblrd		*
  6064  0010BE  50F5               	movf	tablat,w,c
  6065  0010C0  6E4A               	movwf	??_vfpfcnvrt^0,c
  6066  0010C2  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  6067                           
  6068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6069                           ; Switch size 1, requested type "simple"
  6070                           ; Number of cases is 1, Range of values is 0 to 0
  6071                           ; switch strategies available:
  6072                           ; Name         Instructions Cycles
  6073                           ; simple_byte            4     3 (average)
  6074                           ;	Chosen strategy is simple_byte
  6075  0010C4  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6076  0010C6  0A00               	xorlw	0	; case 0
  6077  0010C8  B4D8               	btfsc	status,2,c
  6078  0010CA  EF69  F008         	goto	l4995
  6079  0010CE  EF50  F008         	goto	l4597
  6080  0010D2                     l4995:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ; Switch size 1, requested type "simple"
  6084                           ; Number of cases is 5, Range of values is 32 to 48
  6085                           ; switch strategies available:
  6086                           ; Name         Instructions Cycles
  6087                           ; simple_byte           16     9 (average)
  6088                           ;	Chosen strategy is simple_byte
  6089  0010D2  504A               	movf	??_vfpfcnvrt^0,w,c
  6090  0010D4  0A20               	xorlw	32	; case 32
  6091  0010D6  B4D8               	btfsc	status,2,c
  6092  0010D8  EF4A  F008         	goto	l4589
  6093  0010DC  0A03               	xorlw	3	; case 35
  6094  0010DE  B4D8               	btfsc	status,2,c
  6095  0010E0  EF4D  F008         	goto	l4593
  6096  0010E4  0A08               	xorlw	8	; case 43
  6097  0010E6  B4D8               	btfsc	status,2,c
  6098  0010E8  EF47  F008         	goto	l4585
  6099  0010EC  0A06               	xorlw	6	; case 45
  6100  0010EE  B4D8               	btfsc	status,2,c
  6101  0010F0  EF3A  F008         	goto	l4577
  6102  0010F4  0A1D               	xorlw	29	; case 48
  6103  0010F6  B4D8               	btfsc	status,2,c
  6104  0010F8  EF44  F008         	goto	l4581
  6105  0010FC  EF50  F008         	goto	l4597
  6106  001100                     l4603:
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6110  001100  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  6111  001102  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6112  001104  B4D8               	btfsc	status,2,c
  6113  001106  EF87  F008         	goto	u4481
  6114  00110A  EF89  F008         	goto	u4480
  6115  00110E                     u4481:
  6116  00110E  EF56  F008         	goto	l4601
  6117  001112                     u4480:
  6118  001112                     
  6119                           ; BSR set to: 0
  6120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  6121  001112  A059               	btfss	_flags^0,0,c
  6122  001114  EF8E  F008         	goto	u4491
  6123  001118  EF90  F008         	goto	u4490
  6124  00111C                     u4491:
  6125  00111C  EF91  F008         	goto	l4607
  6126  001120                     u4490:
  6127  001120                     
  6128                           ; BSR set to: 0
  6129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  6130  001120  9259               	bcf	_flags^0,1,c
  6131  001122                     l4607:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  6135  001122  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6136  001126  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6137  00112A  CFDE FFF6          	movff	postinc2,tblptrl
  6138  00112E  CFDD FFF7          	movff	postdec2,tblptrh
  6139  001132                     	if	0	;tblptru may be non-zero
  6140  001132                     	endif
  6141  001132                     	if	0	;tblptru may be non-zero
  6142  001132                     	endif
  6143  001132  0008               	tblrd		*
  6144  001134  50F5               	movf	tablat,w,c
  6145  001136  0A2A               	xorlw	42
  6146  001138  A4D8               	btfss	status,2,c
  6147  00113A  EFA1  F008         	goto	u4501
  6148  00113E  EFA3  F008         	goto	u4500
  6149  001142                     u4501:
  6150  001142  EFCC  F008         	goto	l4615
  6151  001146                     u4500:
  6152  001146                     
  6153                           ; BSR set to: 0
  6154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6155  001146  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6156  00114A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6157  00114E  2ADE               	incf	postinc2,f,c
  6158  001150  0E00               	movlw	0
  6159  001152  22DD               	addwfc	postdec2,f,c
  6160                           
  6161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6162  001154  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6163  001158  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6164  00115C  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  6165  001160  0E02               	movlw	2
  6166  001162  26DE               	addwf	postinc2,f,c
  6167  001164  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  6168  001168  0E00               	movlw	0
  6169  00116A  22DD               	addwfc	postdec2,f,c
  6170  00116C  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6171  001170  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6172  001174  CFDE F096          	movff	postinc2,_width
  6173  001178  CFDD F097          	movff	postdec2,_width+1
  6174  00117C                     
  6175                           ; BSR set to: 0
  6176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6177  00117C  BF97               	btfsc	(_width+1)& (0+255),7,b
  6178  00117E  EFC5  F008         	goto	u4510
  6179  001182  EFC3  F008         	goto	u4511
  6180  001186                     u4511:
  6181  001186  EF10  F009         	goto	l4625
  6182  00118A                     u4510:
  6183  00118A                     
  6184                           ; BSR set to: 0
  6185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6186  00118A  8059               	bsf	_flags^0,0,c
  6187                           
  6188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6189  00118C  6D96               	negf	_width& (0+255),b
  6190  00118E  1F97               	comf	(_width+1)& (0+255),f,b
  6191  001190  B0D8               	btfsc	status,0,c
  6192  001192  2B97               	incf	(_width+1)& (0+255),f,b
  6193  001194  EF10  F009         	goto	l4625
  6194  001198                     l4615:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6198  001198  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6199  00119C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6200  0011A0  CFDE F00C          	movff	postinc2,atoi@s
  6201  0011A4  CFDD F00D          	movff	postdec2,atoi@s+1
  6202  0011A8  ECCE  F00E         	call	_atoi	;wreg free
  6203  0011AC  C00C  F096         	movff	?_atoi,_width
  6204  0011B0  C00D  F097         	movff	?_atoi+1,_width+1
  6205                           
  6206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6207  0011B4  EFE3  F008         	goto	l4619
  6208  0011B8                     l4617:
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6212  0011B8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6213  0011BC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6214  0011C0  2ADE               	incf	postinc2,f,c
  6215  0011C2  0E00               	movlw	0
  6216  0011C4  22DD               	addwfc	postdec2,f,c
  6217  0011C6                     l4619:
  6218  0011C6  0ED0               	movlw	208
  6219  0011C8  6E4A               	movwf	??_vfpfcnvrt^0,c
  6220  0011CA  0EFF               	movlw	255
  6221  0011CC  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  6222  0011CE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6223  0011D2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6224  0011D6  CFDE FFF6          	movff	postinc2,tblptrl
  6225  0011DA  CFDD FFF7          	movff	postdec2,tblptrh
  6226  0011DE                     	if	0	;tblptru may be non-zero
  6227  0011DE                     	endif
  6228  0011DE                     	if	0	;tblptru may be non-zero
  6229  0011DE                     	endif
  6230  0011DE  0008               	tblrd		*
  6231  0011E0  50F5               	movf	tablat,w,c
  6232  0011E2  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
  6233  0011E4  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
  6234  0011E6  504A               	movf	??_vfpfcnvrt^0,w,c
  6235  0011E8  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
  6236  0011EA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6237  0011EC  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  6238  0011EE  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
  6239  0011F0  E10A               	bnz	u4520
  6240  0011F2  0E0A               	movlw	10
  6241  0011F4  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
  6242  0011F6  A0D8               	btfss	status,0,c
  6243  0011F8  EF00  F009         	goto	u4521
  6244  0011FC  EF03  F009         	goto	u4520
  6245  001200                     u4521:
  6246  001200  0E01               	movlw	1
  6247  001202  EF04  F009         	goto	u4530
  6248  001206                     u4520:
  6249  001206  0E00               	movlw	0
  6250  001208                     u4530:
  6251  001208  0100               	movlb	0	; () banked
  6252  00120A  6F6A               	movwf	_vfpfcnvrt$2297& (0+255),b
  6253  00120C  6B6B               	clrf	(_vfpfcnvrt$2297+1)& (0+255),b
  6254  00120E                     
  6255                           ; BSR set to: 0
  6256  00120E  516A               	movf	_vfpfcnvrt$2297& (0+255),w,b
  6257  001210  116B               	iorwf	(_vfpfcnvrt$2297+1)& (0+255),w,b
  6258  001212  A4D8               	btfss	status,2,c
  6259  001214  EF0E  F009         	goto	u4541
  6260  001218  EF10  F009         	goto	u4540
  6261  00121C                     u4541:
  6262  00121C  EFDC  F008         	goto	l4617
  6263  001220                     u4540:
  6264  001220                     l4625:
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6268  001220  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6269  001224  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6270  001228  CFDE FFF6          	movff	postinc2,tblptrl
  6271  00122C  CFDD FFF7          	movff	postdec2,tblptrh
  6272  001230                     	if	0	;tblptru may be non-zero
  6273  001230                     	endif
  6274  001230                     	if	0	;tblptru may be non-zero
  6275  001230                     	endif
  6276  001230  0008               	tblrd		*
  6277  001232  50F5               	movf	tablat,w,c
  6278  001234  0A64               	xorlw	100
  6279  001236  B4D8               	btfsc	status,2,c
  6280  001238  EF20  F009         	goto	u4551
  6281  00123C  EF22  F009         	goto	u4550
  6282  001240                     u4551:
  6283  001240  EF34  F009         	goto	l4629
  6284  001244                     u4550:
  6285  001244                     
  6286                           ; BSR set to: 0
  6287  001244  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6288  001248  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6289  00124C  CFDE FFF6          	movff	postinc2,tblptrl
  6290  001250  CFDD FFF7          	movff	postdec2,tblptrh
  6291  001254                     	if	0	;tblptru may be non-zero
  6292  001254                     	endif
  6293  001254                     	if	0	;tblptru may be non-zero
  6294  001254                     	endif
  6295  001254  0008               	tblrd		*
  6296  001256  50F5               	movf	tablat,w,c
  6297  001258  0A69               	xorlw	105
  6298  00125A  A4D8               	btfss	status,2,c
  6299  00125C  EF32  F009         	goto	u4561
  6300  001260  EF34  F009         	goto	u4560
  6301  001264                     u4561:
  6302  001264  EF74  F009         	goto	l4635
  6303  001268                     u4560:
  6304  001268                     l4629:
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6308  001268  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6309  00126C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6310  001270  2ADE               	incf	postinc2,f,c
  6311  001272  0E00               	movlw	0
  6312  001274  22DD               	addwfc	postdec2,f,c
  6313                           
  6314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6315  001276  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6316  00127A  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6317  00127E  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  6318  001282  0E02               	movlw	2
  6319  001284  26DE               	addwf	postinc2,f,c
  6320  001286  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  6321  00128A  0E00               	movlw	0
  6322  00128C  22DD               	addwfc	postdec2,f,c
  6323  00128E  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6324  001292  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6325  001296  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  6326  00129A  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  6327  00129E  0E00               	movlw	0
  6328  0012A0  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6329  0012A2  0EFF               	movlw	-1
  6330  0012A4  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6331  0012A6  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6332  0012A8  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6333  0012AA  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6334  0012AC  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6335  0012AE  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6336  0012B0                     
  6337                           ; BSR set to: 0
  6338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6339  0012B0  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  6340  0012B4  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6341  0012B8  C060  F022         	movff	vfpfcnvrt@ll,dtoa@d
  6342  0012BC  C061  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6343  0012C0  C062  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6344  0012C4  C063  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6345  0012C8  C064  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6346  0012CC  C065  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6347  0012D0  C066  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6348  0012D4  C067  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6349  0012D8  ECC6  F009         	call	_dtoa	;wreg free
  6350  0012DC  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  6351  0012E0  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6352  0012E4  EFC5  F009         	goto	l1169
  6353  0012E8                     l4635:
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6357  0012E8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6358  0012EC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6359  0012F0  CFDE FFF6          	movff	postinc2,tblptrl
  6360  0012F4  CFDD FFF7          	movff	postdec2,tblptrh
  6361  0012F8                     	if	0	;tblptru may be non-zero
  6362  0012F8                     	endif
  6363  0012F8                     	if	0	;tblptru may be non-zero
  6364  0012F8                     	endif
  6365  0012F8  0008               	tblrd		*
  6366  0012FA  50F5               	movf	tablat,w,c
  6367  0012FC  0A25               	xorlw	37
  6368  0012FE  A4D8               	btfss	status,2,c
  6369  001300  EF84  F009         	goto	u4571
  6370  001304  EF86  F009         	goto	u4570
  6371  001308                     u4571:
  6372  001308  EF9D  F009         	goto	l4645
  6373  00130C                     u4570:
  6374  00130C                     
  6375                           ; BSR set to: 0
  6376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6377  00130C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6378  001310  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6379  001314  2ADE               	incf	postinc2,f,c
  6380  001316  0E00               	movlw	0
  6381  001318  22DD               	addwfc	postdec2,f,c
  6382  00131A                     
  6383                           ; BSR set to: 0
  6384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6385  00131A  0E00               	movlw	0
  6386  00131C  6E06               	movwf	(fputc@c+1)^0,c
  6387  00131E  0E25               	movlw	37
  6388  001320  6E05               	movwf	fputc@c^0,c
  6389  001322  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  6390  001326  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6391  00132A  ECF9  F014         	call	_fputc	;wreg free
  6392  00132E                     l4641:
  6393                           
  6394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6395  00132E  0E00               	movlw	0
  6396  001330  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  6397  001332  0E01               	movlw	1
  6398  001334  6E44               	movwf	?_vfpfcnvrt^0,c
  6399  001336  EFC5  F009         	goto	l1169
  6400  00133A                     l4645:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6404  00133A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6405  00133E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6406  001342  2ADE               	incf	postinc2,f,c
  6407  001344  0E00               	movlw	0
  6408  001346  22DD               	addwfc	postdec2,f,c
  6409  001348                     
  6410                           ; BSR set to: 0
  6411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6412  001348  0E00               	movlw	0
  6413  00134A  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  6414  00134C  0E00               	movlw	0
  6415  00134E  6E44               	movwf	?_vfpfcnvrt^0,c
  6416  001350  EFC5  F009         	goto	l1169
  6417  001354                     l4651:
  6418                           
  6419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6420  001354  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6421  001358  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6422  00135C  CFDE FFF6          	movff	postinc2,tblptrl
  6423  001360  CFDD FFF7          	movff	postdec2,tblptrh
  6424  001364                     	if	0	;tblptru may be non-zero
  6425  001364                     	endif
  6426  001364                     	if	0	;tblptru may be non-zero
  6427  001364                     	endif
  6428  001364  0008               	tblrd		*
  6429  001366  50F5               	movf	tablat,w,c
  6430  001368  6E05               	movwf	fputc@c^0,c
  6431  00136A  6A06               	clrf	(fputc@c+1)^0,c
  6432  00136C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  6433  001370  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6434  001374  ECF9  F014         	call	_fputc	;wreg free
  6435  001378                     
  6436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6437  001378  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6438  00137C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6439  001380  2ADE               	incf	postinc2,f,c
  6440  001382  0E00               	movlw	0
  6441  001384  22DD               	addwfc	postdec2,f,c
  6442  001386  EF97  F009         	goto	l4641
  6443  00138A                     l1169:
  6444  00138A  0012               	return		;funcret
  6445  00138C                     __end_of_vfpfcnvrt:
  6446                           	callstack 0
  6447                           
  6448 ;; *************** function _dtoa *****************
  6449 ;; Defined at:
  6450 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  6453 ;;		 -> sprintf@f(6), 
  6454 ;;  d               8   33[COMRAM] long long 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  n               8   57[COMRAM] long long 
  6457 ;;  i               2   65[COMRAM] int 
  6458 ;;  s               2   55[COMRAM] int 
  6459 ;;  w               2   53[COMRAM] int 
  6460 ;;  p               2   51[COMRAM] int 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  2   31[COMRAM] int 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6470 ;;      Params:        10       0       0       0       0       0       0       0       0
  6471 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6472 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6473 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6474 ;;Total ram usage:       36 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    6
  6477 ;; This function calls:
  6478 ;;		___aodiv
  6479 ;;		___aomod
  6480 ;;		_abs
  6481 ;;		_pad
  6482 ;; This function is called by:
  6483 ;;		_vfpfcnvrt
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text36
  6488  00138C                     __ptext36:
  6489                           	callstack 0
  6490  00138C                     _dtoa:
  6491                           	callstack 19
  6492  00138C                     
  6493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6494  00138C  C022  F03A         	movff	dtoa@d,dtoa@n
  6495  001390  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  6496  001394  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  6497  001398  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  6498  00139C  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  6499  0013A0  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  6500  0013A4  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  6501  0013A8  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  6502  0013AC                     
  6503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6504  0013AC  BE41               	btfsc	(dtoa@n+7)^0,7,c
  6505  0013AE  EFDB  F009         	goto	u4251
  6506  0013B2  EFDE  F009         	goto	u4250
  6507  0013B6                     u4251:
  6508  0013B6  0E01               	movlw	1
  6509  0013B8  EFDF  F009         	goto	u4260
  6510  0013BC                     u4250:
  6511  0013BC  0E00               	movlw	0
  6512  0013BE                     u4260:
  6513  0013BE  6E38               	movwf	dtoa@s^0,c
  6514  0013C0  6A39               	clrf	(dtoa@s+1)^0,c
  6515                           
  6516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6517  0013C2  5038               	movf	dtoa@s^0,w,c
  6518  0013C4  1039               	iorwf	(dtoa@s+1)^0,w,c
  6519  0013C6  B4D8               	btfsc	status,2,c
  6520  0013C8  EFE8  F009         	goto	u4271
  6521  0013CC  EFEA  F009         	goto	u4270
  6522  0013D0                     u4271:
  6523  0013D0  EFFA  F009         	goto	l4469
  6524  0013D4                     u4270:
  6525  0013D4                     
  6526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6527  0013D4  1E41               	comf	(dtoa@n+7)^0,f,c
  6528  0013D6  1E40               	comf	(dtoa@n+6)^0,f,c
  6529  0013D8  1E3F               	comf	(dtoa@n+5)^0,f,c
  6530  0013DA  1E3E               	comf	(dtoa@n+4)^0,f,c
  6531  0013DC  1E3D               	comf	(dtoa@n+3)^0,f,c
  6532  0013DE  1E3C               	comf	(dtoa@n+2)^0,f,c
  6533  0013E0  1E3B               	comf	(dtoa@n+1)^0,f,c
  6534  0013E2  6C3A               	negf	dtoa@n^0,c
  6535  0013E4  0E00               	movlw	0
  6536  0013E6  223B               	addwfc	(dtoa@n+1)^0,f,c
  6537  0013E8  223C               	addwfc	(dtoa@n+2)^0,f,c
  6538  0013EA  223D               	addwfc	(dtoa@n+3)^0,f,c
  6539  0013EC  223E               	addwfc	(dtoa@n+4)^0,f,c
  6540  0013EE  223F               	addwfc	(dtoa@n+5)^0,f,c
  6541  0013F0  2240               	addwfc	(dtoa@n+6)^0,f,c
  6542  0013F2  2241               	addwfc	(dtoa@n+7)^0,f,c
  6543  0013F4                     l4469:
  6544                           
  6545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6546  0013F4  BE58               	btfsc	(_prec+1)^0,7,c
  6547  0013F6  EFFF  F009         	goto	u4281
  6548  0013FA  EF01  F00A         	goto	u4280
  6549  0013FE                     u4281:
  6550  0013FE  EF02  F00A         	goto	l4473
  6551  001402                     u4280:
  6552  001402                     
  6553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6554  001402  9259               	bcf	_flags^0,1,c
  6555  001404                     l4473:
  6556                           
  6557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6558  001404  BE58               	btfsc	(_prec+1)^0,7,c
  6559  001406  EF0F  F00A         	goto	u4290
  6560  00140A  5058               	movf	(_prec+1)^0,w,c
  6561  00140C  E106               	bnz	u4291
  6562  00140E  0457               	decf	_prec^0,w,c
  6563  001410  B0D8               	btfsc	status,0,c
  6564  001412  EF0D  F00A         	goto	u4291
  6565  001416  EF0F  F00A         	goto	u4290
  6566  00141A                     u4291:
  6567  00141A  EF15  F00A         	goto	l1120
  6568  00141E                     u4290:
  6569  00141E  0E00               	movlw	0
  6570  001420  6E35               	movwf	(dtoa@p+1)^0,c
  6571  001422  0E01               	movlw	1
  6572  001424  6E34               	movwf	dtoa@p^0,c
  6573  001426  EF19  F00A         	goto	l1122
  6574  00142A                     l1120:
  6575  00142A  C057  F034         	movff	_prec,dtoa@p
  6576  00142E  C058  F035         	movff	_prec+1,dtoa@p+1
  6577  001432                     l1122:
  6578                           
  6579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6580  001432  C096  F036         	movff	_width,dtoa@w
  6581  001436  C097  F037         	movff	_width+1,dtoa@w+1
  6582  00143A                     
  6583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6584  00143A  5038               	movf	dtoa@s^0,w,c
  6585  00143C  1039               	iorwf	(dtoa@s+1)^0,w,c
  6586  00143E  A4D8               	btfss	status,2,c
  6587  001440  EF24  F00A         	goto	u4301
  6588  001444  EF26  F00A         	goto	u4300
  6589  001448                     u4301:
  6590  001448  EF2D  F00A         	goto	l4481
  6591  00144C                     u4300:
  6592  00144C  A459               	btfss	_flags^0,2,c
  6593  00144E  EF2B  F00A         	goto	u4311
  6594  001452  EF2D  F00A         	goto	u4310
  6595  001456                     u4311:
  6596  001456  EF30  F00A         	goto	l4483
  6597  00145A                     u4310:
  6598  00145A                     l4481:
  6599                           
  6600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  6601  00145A  0636               	decf	dtoa@w^0,f,c
  6602  00145C  A0D8               	btfss	status,0,c
  6603  00145E  0637               	decf	(dtoa@w+1)^0,f,c
  6604  001460                     l4483:
  6605                           
  6606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6607  001460  0E00               	movlw	0
  6608  001462  6E43               	movwf	(dtoa@i+1)^0,c
  6609  001464  0E1F               	movlw	31
  6610  001466  6E42               	movwf	dtoa@i^0,c
  6611  001468                     
  6612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6613  001468  0E00               	movlw	0
  6614  00146A  0100               	movlb	0	; () banked
  6615  00146C  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6616                           
  6617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6618  00146E  EFB5  F00A         	goto	l4497
  6619  001472                     l4487:
  6620                           
  6621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  6622  001472  0642               	decf	dtoa@i^0,f,c
  6623  001474  A0D8               	btfss	status,0,c
  6624  001476  0643               	decf	(dtoa@i+1)^0,f,c
  6625  001478                     
  6626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6627  001478  0E98               	movlw	low _dbuf
  6628  00147A  2442               	addwf	dtoa@i^0,w,c
  6629  00147C  6ED9               	movwf	fsr2l,c
  6630  00147E  0E00               	movlw	high _dbuf
  6631  001480  2043               	addwfc	(dtoa@i+1)^0,w,c
  6632  001482  6EDA               	movwf	fsr2h,c
  6633  001484  C03A  F005         	movff	dtoa@n,___aomod@dividend
  6634  001488  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  6635  00148C  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  6636  001490  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  6637  001494  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  6638  001498  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  6639  00149C  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  6640  0014A0  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  6641  0014A4  0E0A               	movlw	10
  6642  0014A6  6E0D               	movwf	___aomod@divisor^0,c
  6643  0014A8  0E00               	movlw	0
  6644  0014AA  6E0E               	movwf	(___aomod@divisor+1)^0,c
  6645  0014AC  0E00               	movlw	0
  6646  0014AE  6E0F               	movwf	(___aomod@divisor+2)^0,c
  6647  0014B0  0E00               	movlw	0
  6648  0014B2  6E10               	movwf	(___aomod@divisor+3)^0,c
  6649  0014B4  0E00               	movlw	0
  6650  0014B6  6E11               	movwf	(___aomod@divisor+4)^0,c
  6651  0014B8  0E00               	movlw	0
  6652  0014BA  6E12               	movwf	(___aomod@divisor+5)^0,c
  6653  0014BC  0E00               	movlw	0
  6654  0014BE  6E13               	movwf	(___aomod@divisor+6)^0,c
  6655  0014C0  0E00               	movlw	0
  6656  0014C2  6E14               	movwf	(___aomod@divisor+7)^0,c
  6657  0014C4  EC15  F011         	call	___aomod	;wreg free
  6658  0014C8  C005  F02A         	movff	?___aomod,??_dtoa
  6659  0014CC  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  6660  0014D0  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  6661  0014D4  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  6662  0014D8  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  6663  0014DC  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  6664  0014E0  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  6665  0014E4  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  6666  0014E8  C02A  F017         	movff	??_dtoa,abs@a
  6667  0014EC  C02C  F018         	movff	??_dtoa+2,abs@a+1
  6668  0014F0  EC77  F019         	call	_abs	;wreg free
  6669  0014F4  5017               	movf	?_abs^0,w,c
  6670  0014F6  0F30               	addlw	48
  6671  0014F8  6EDF               	movwf	indf2,c
  6672  0014FA                     
  6673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  6674  0014FA  0634               	decf	dtoa@p^0,f,c
  6675  0014FC  A0D8               	btfss	status,0,c
  6676  0014FE  0635               	decf	(dtoa@p+1)^0,f,c
  6677  001500                     
  6678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  6679  001500  0636               	decf	dtoa@w^0,f,c
  6680  001502  A0D8               	btfss	status,0,c
  6681  001504  0637               	decf	(dtoa@w+1)^0,f,c
  6682  001506                     
  6683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6684  001506  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  6685  00150A  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  6686  00150E  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  6687  001512  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  6688  001516  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  6689  00151A  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  6690  00151E  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  6691  001522  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  6692  001526  0E0A               	movlw	10
  6693  001528  6E0D               	movwf	___aodiv@divisor^0,c
  6694  00152A  0E00               	movlw	0
  6695  00152C  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  6696  00152E  0E00               	movlw	0
  6697  001530  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  6698  001532  0E00               	movlw	0
  6699  001534  6E10               	movwf	(___aodiv@divisor+3)^0,c
  6700  001536  0E00               	movlw	0
  6701  001538  6E11               	movwf	(___aodiv@divisor+4)^0,c
  6702  00153A  0E00               	movlw	0
  6703  00153C  6E12               	movwf	(___aodiv@divisor+5)^0,c
  6704  00153E  0E00               	movlw	0
  6705  001540  6E13               	movwf	(___aodiv@divisor+6)^0,c
  6706  001542  0E00               	movlw	0
  6707  001544  6E14               	movwf	(___aodiv@divisor+7)^0,c
  6708  001546  EC96  F00F         	call	___aodiv	;wreg free
  6709  00154A  C005  F03A         	movff	?___aodiv,dtoa@n
  6710  00154E  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  6711  001552  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  6712  001556  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  6713  00155A  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  6714  00155E  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  6715  001562  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  6716  001566  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  6717  00156A                     l4497:
  6718                           
  6719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6720  00156A  BE43               	btfsc	(dtoa@i+1)^0,7,c
  6721  00156C  EFC0  F00A         	goto	u4321
  6722  001570  5043               	movf	(dtoa@i+1)^0,w,c
  6723  001572  E108               	bnz	u4320
  6724  001574  0442               	decf	dtoa@i^0,w,c
  6725  001576  A0D8               	btfss	status,0,c
  6726  001578  EFC0  F00A         	goto	u4321
  6727  00157C  EFC2  F00A         	goto	u4320
  6728  001580                     u4321:
  6729  001580  EFF2  F00A         	goto	l4507
  6730  001584                     u4320:
  6731  001584  503A               	movf	dtoa@n^0,w,c
  6732  001586  103B               	iorwf	(dtoa@n+1)^0,w,c
  6733  001588  103C               	iorwf	(dtoa@n+2)^0,w,c
  6734  00158A  103D               	iorwf	(dtoa@n+3)^0,w,c
  6735  00158C  103E               	iorwf	(dtoa@n+4)^0,w,c
  6736  00158E  103F               	iorwf	(dtoa@n+5)^0,w,c
  6737  001590  1040               	iorwf	(dtoa@n+6)^0,w,c
  6738  001592  1041               	iorwf	(dtoa@n+7)^0,w,c
  6739  001594  A4D8               	btfss	status,2,c
  6740  001596  EFCF  F00A         	goto	u4331
  6741  00159A  EFD1  F00A         	goto	u4330
  6742  00159E                     u4331:
  6743  00159E  EF39  F00A         	goto	l4487
  6744  0015A2                     u4330:
  6745  0015A2  BE35               	btfsc	(dtoa@p+1)^0,7,c
  6746  0015A4  EFDE  F00A         	goto	u4340
  6747  0015A8  5035               	movf	(dtoa@p+1)^0,w,c
  6748  0015AA  E106               	bnz	u4341
  6749  0015AC  0434               	decf	dtoa@p^0,w,c
  6750  0015AE  B0D8               	btfsc	status,0,c
  6751  0015B0  EFDC  F00A         	goto	u4341
  6752  0015B4  EFDE  F00A         	goto	u4340
  6753  0015B8                     u4341:
  6754  0015B8  EF39  F00A         	goto	l4487
  6755  0015BC                     u4340:
  6756  0015BC  BE37               	btfsc	(dtoa@w+1)^0,7,c
  6757  0015BE  EFE9  F00A         	goto	u4351
  6758  0015C2  5037               	movf	(dtoa@w+1)^0,w,c
  6759  0015C4  E108               	bnz	u4350
  6760  0015C6  0436               	decf	dtoa@w^0,w,c
  6761  0015C8  A0D8               	btfss	status,0,c
  6762  0015CA  EFE9  F00A         	goto	u4351
  6763  0015CE  EFEB  F00A         	goto	u4350
  6764  0015D2                     u4351:
  6765  0015D2  EFF2  F00A         	goto	l4507
  6766  0015D6                     u4350:
  6767  0015D6  B259               	btfsc	_flags^0,1,c
  6768  0015D8  EFF0  F00A         	goto	u4361
  6769  0015DC  EFF2  F00A         	goto	u4360
  6770  0015E0                     u4361:
  6771  0015E0  EF39  F00A         	goto	l4487
  6772  0015E4                     u4360:
  6773  0015E4                     l4507:
  6774                           
  6775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6776  0015E4  5038               	movf	dtoa@s^0,w,c
  6777  0015E6  1039               	iorwf	(dtoa@s+1)^0,w,c
  6778  0015E8  A4D8               	btfss	status,2,c
  6779  0015EA  EFF9  F00A         	goto	u4371
  6780  0015EE  EFFB  F00A         	goto	u4370
  6781  0015F2                     u4371:
  6782  0015F2  EF02  F00B         	goto	l4511
  6783  0015F6                     u4370:
  6784  0015F6  A459               	btfss	_flags^0,2,c
  6785  0015F8  EF00  F00B         	goto	u4381
  6786  0015FC  EF02  F00B         	goto	u4380
  6787  001600                     u4381:
  6788  001600  EF20  F00B         	goto	l4521
  6789  001604                     u4380:
  6790  001604                     l4511:
  6791                           
  6792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  6793  001604  0642               	decf	dtoa@i^0,f,c
  6794  001606  A0D8               	btfss	status,0,c
  6795  001608  0643               	decf	(dtoa@i+1)^0,f,c
  6796  00160A                     
  6797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6798  00160A  5038               	movf	dtoa@s^0,w,c
  6799  00160C  1039               	iorwf	(dtoa@s+1)^0,w,c
  6800  00160E  A4D8               	btfss	status,2,c
  6801  001610  EF0C  F00B         	goto	u4391
  6802  001614  EF0E  F00B         	goto	u4390
  6803  001618                     u4391:
  6804  001618  EF14  F00B         	goto	l4517
  6805  00161C                     u4390:
  6806  00161C  0E00               	movlw	0
  6807  00161E  6E33               	movwf	(_dtoa$2282+1)^0,c
  6808  001620  0E2B               	movlw	43
  6809  001622  6E32               	movwf	_dtoa$2282^0,c
  6810  001624  EF18  F00B         	goto	l4519
  6811  001628                     l4517:
  6812  001628  0E00               	movlw	0
  6813  00162A  6E33               	movwf	(_dtoa$2282+1)^0,c
  6814  00162C  0E2D               	movlw	45
  6815  00162E  6E32               	movwf	_dtoa$2282^0,c
  6816  001630                     l4519:
  6817  001630  0E98               	movlw	low _dbuf
  6818  001632  2442               	addwf	dtoa@i^0,w,c
  6819  001634  6ED9               	movwf	fsr2l,c
  6820  001636  0E00               	movlw	high _dbuf
  6821  001638  2043               	addwfc	(dtoa@i+1)^0,w,c
  6822  00163A  6EDA               	movwf	fsr2h,c
  6823  00163C  C032  FFDF         	movff	_dtoa$2282,indf2
  6824  001640                     l4521:
  6825                           
  6826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6827  001640  C020  F015         	movff	dtoa@fp,pad@fp
  6828  001644  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  6829  001648  0E98               	movlw	low _dbuf
  6830  00164A  2442               	addwf	dtoa@i^0,w,c
  6831  00164C  6E17               	movwf	pad@buf^0,c
  6832  00164E  0E00               	movlw	high _dbuf
  6833  001650  2043               	addwfc	(dtoa@i+1)^0,w,c
  6834  001652  6E18               	movwf	(pad@buf+1)^0,c
  6835  001654  C036  F019         	movff	dtoa@w,pad@p
  6836  001658  C037  F01A         	movff	dtoa@w+1,pad@p+1
  6837  00165C  EC5E  F015         	call	_pad	;wreg free
  6838  001660  C015  F020         	movff	?_pad,?_dtoa
  6839  001664  C016  F021         	movff	?_pad+1,?_dtoa+1
  6840  001668  0012               	return		;funcret
  6841  00166A                     __end_of_dtoa:
  6842                           	callstack 0
  6843                           
  6844 ;; *************** function _pad *****************
  6845 ;; Defined at:
  6846 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  6849 ;;		 -> sprintf@f(6), 
  6850 ;;  buf             2   22[COMRAM] PTR unsigned char 
  6851 ;;		 -> dbuf(32), 
  6852 ;;  p               2   24[COMRAM] int 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  w               2   29[COMRAM] int 
  6855 ;;  i               2   27[COMRAM] int 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  2   20[COMRAM] int 
  6858 ;; Registers used:
  6859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6865 ;;      Params:         6       0       0       0       0       0       0       0       0
  6866 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6867 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6868 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6869 ;;Total ram usage:       11 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; Hardware stack levels required when called:    5
  6872 ;; This function calls:
  6873 ;;		_fputc
  6874 ;;		_fputs
  6875 ;;		_strlen
  6876 ;; This function is called by:
  6877 ;;		_dtoa
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text37
  6882  002ABC                     __ptext37:
  6883                           	callstack 0
  6884  002ABC                     _pad:
  6885                           	callstack 19
  6886  002ABC                     
  6887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6888  002ABC  A059               	btfss	_flags^0,0,c
  6889  002ABE  EF63  F015         	goto	u4161
  6890  002AC2  EF65  F015         	goto	u4160
  6891  002AC6                     u4161:
  6892  002AC6  EF6F  F015         	goto	l4425
  6893  002ACA                     u4160:
  6894  002ACA                     
  6895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6896  002ACA  C017  F00E         	movff	pad@buf,fputs@s
  6897  002ACE  C018  F00F         	movff	pad@buf+1,fputs@s+1
  6898  002AD2  C015  F010         	movff	pad@fp,fputs@fp
  6899  002AD6  C016  F011         	movff	pad@fp+1,fputs@fp+1
  6900  002ADA  EC34  F019         	call	_fputs	;wreg free
  6901  002ADE                     l4425:
  6902                           
  6903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6904  002ADE  BE1A               	btfsc	(pad@p+1)^0,7,c
  6905  002AE0  EF74  F015         	goto	u4171
  6906  002AE4  EF76  F015         	goto	u4170
  6907  002AE8                     u4171:
  6908  002AE8  EF7C  F015         	goto	l4429
  6909  002AEC                     u4170:
  6910  002AEC  C019  F01E         	movff	pad@p,pad@w
  6911  002AF0  C01A  F01F         	movff	pad@p+1,pad@w+1
  6912  002AF4  EF80  F015         	goto	l1109
  6913  002AF8                     l4429:
  6914  002AF8  0E00               	movlw	0
  6915  002AFA  6E1F               	movwf	(pad@w+1)^0,c
  6916  002AFC  0E00               	movlw	0
  6917  002AFE  6E1E               	movwf	pad@w^0,c
  6918  002B00                     l1109:
  6919                           
  6920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6921  002B00  0E00               	movlw	0
  6922  002B02  6E1D               	movwf	(pad@i+1)^0,c
  6923  002B04  0E00               	movlw	0
  6924  002B06  6E1C               	movwf	pad@i^0,c
  6925                           
  6926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6927  002B08  EF92  F015         	goto	l4435
  6928  002B0C                     l4431:
  6929                           
  6930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6931  002B0C  0E00               	movlw	0
  6932  002B0E  6E06               	movwf	(fputc@c+1)^0,c
  6933  002B10  0E20               	movlw	32
  6934  002B12  6E05               	movwf	fputc@c^0,c
  6935  002B14  C015  F007         	movff	pad@fp,fputc@fp
  6936  002B18  C016  F008         	movff	pad@fp+1,fputc@fp+1
  6937  002B1C  ECF9  F014         	call	_fputc	;wreg free
  6938  002B20                     
  6939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6940  002B20  4A1C               	infsnz	pad@i^0,f,c
  6941  002B22  2A1D               	incf	(pad@i+1)^0,f,c
  6942  002B24                     l4435:
  6943                           
  6944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6945  002B24  501E               	movf	pad@w^0,w,c
  6946  002B26  5C1C               	subwf	pad@i^0,w,c
  6947  002B28  501D               	movf	(pad@i+1)^0,w,c
  6948  002B2A  0A80               	xorlw	128
  6949  002B2C  6E1B               	movwf	??_pad^0,c
  6950  002B2E  501F               	movf	(pad@w+1)^0,w,c
  6951  002B30  0A80               	xorlw	128
  6952  002B32  581B               	subwfb	??_pad^0,w,c
  6953  002B34  A0D8               	btfss	status,0,c
  6954  002B36  EF9F  F015         	goto	u4181
  6955  002B3A  EFA1  F015         	goto	u4180
  6956  002B3E                     u4181:
  6957  002B3E  EF86  F015         	goto	l4431
  6958  002B42                     u4180:
  6959  002B42                     
  6960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6961  002B42  B059               	btfsc	_flags^0,0,c
  6962  002B44  EFA6  F015         	goto	u4191
  6963  002B48  EFA8  F015         	goto	u4190
  6964  002B4C                     u4191:
  6965  002B4C  EFB2  F015         	goto	l4439
  6966  002B50                     u4190:
  6967  002B50                     
  6968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6969  002B50  C017  F00E         	movff	pad@buf,fputs@s
  6970  002B54  C018  F00F         	movff	pad@buf+1,fputs@s+1
  6971  002B58  C015  F010         	movff	pad@fp,fputs@fp
  6972  002B5C  C016  F011         	movff	pad@fp+1,fputs@fp+1
  6973  002B60  EC34  F019         	call	_fputs	;wreg free
  6974  002B64                     l4439:
  6975                           
  6976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6977  002B64  C017  F005         	movff	pad@buf,strlen@s
  6978  002B68  C018  F006         	movff	pad@buf+1,strlen@s+1
  6979  002B6C  ECEF  F019         	call	_strlen	;wreg free
  6980  002B70  501E               	movf	pad@w^0,w,c
  6981  002B72  2405               	addwf	?_strlen^0,w,c
  6982  002B74  6E15               	movwf	?_pad^0,c
  6983  002B76  501F               	movf	(pad@w+1)^0,w,c
  6984  002B78  2006               	addwfc	(?_strlen+1)^0,w,c
  6985  002B7A  6E16               	movwf	(?_pad+1)^0,c
  6986  002B7C  0012               	return		;funcret
  6987  002B7E                     __end_of_pad:
  6988                           	callstack 0
  6989                           
  6990 ;; *************** function _strlen *****************
  6991 ;; Defined at:
  6992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  s               2    4[COMRAM] PTR const unsigned char 
  6995 ;;		 -> dbuf(32), 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  a               2    6[COMRAM] PTR const unsigned char 
  6998 ;;		 -> dbuf(32), 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  2    4[COMRAM] unsigned int 
  7001 ;; Registers used:
  7002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7008 ;;      Params:         2       0       0       0       0       0       0       0       0
  7009 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7011 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7012 ;;Total ram usage:        4 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; Hardware stack levels required when called:    2
  7015 ;; This function calls:
  7016 ;;		Nothing
  7017 ;; This function is called by:
  7018 ;;		_pad
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text38
  7023  0033DE                     __ptext38:
  7024                           	callstack 0
  7025  0033DE                     _strlen:
  7026                           	callstack 21
  7027  0033DE  C005  F007         	movff	strlen@s,strlen@a
  7028  0033E2  C006  F008         	movff	strlen@s+1,strlen@a+1
  7029  0033E6  EFF7  F019         	goto	l4329
  7030  0033EA                     l4327:
  7031  0033EA  4A05               	infsnz	strlen@s^0,f,c
  7032  0033EC  2A06               	incf	(strlen@s+1)^0,f,c
  7033  0033EE                     l4329:
  7034  0033EE  C005  FFD9         	movff	strlen@s,fsr2l
  7035  0033F2  C006  FFDA         	movff	strlen@s+1,fsr2h
  7036  0033F6  50DF               	movf	indf2,w,c
  7037  0033F8  A4D8               	btfss	status,2,c
  7038  0033FA  EF01  F01A         	goto	u4021
  7039  0033FE  EF03  F01A         	goto	u4020
  7040  003402                     u4021:
  7041  003402  EFF5  F019         	goto	l4327
  7042  003406                     u4020:
  7043  003406  5007               	movf	strlen@a^0,w,c
  7044  003408  5C05               	subwf	strlen@s^0,w,c
  7045  00340A  6E05               	movwf	?_strlen^0,c
  7046  00340C  5008               	movf	(strlen@a+1)^0,w,c
  7047  00340E  5806               	subwfb	(strlen@s+1)^0,w,c
  7048  003410  6E06               	movwf	(?_strlen+1)^0,c
  7049  003412  0012               	return		;funcret
  7050  003414                     __end_of_strlen:
  7051                           	callstack 0
  7052                           
  7053 ;; *************** function _fputs *****************
  7054 ;; Defined at:
  7055 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7058 ;;		 -> dbuf(32), 
  7059 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  7060 ;;		 -> sprintf@f(6), 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;  i               2   18[COMRAM] int 
  7063 ;;  c               1   17[COMRAM] unsigned char 
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  2   13[COMRAM] int 
  7066 ;; Registers used:
  7067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7068 ;; Tracked objects:
  7069 ;;		On entry : 0/0
  7070 ;;		On exit  : 0/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7073 ;;      Params:         4       0       0       0       0       0       0       0       0
  7074 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7076 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7077 ;;Total ram usage:        7 bytes
  7078 ;; Hardware stack levels used:    1
  7079 ;; Hardware stack levels required when called:    4
  7080 ;; This function calls:
  7081 ;;		_fputc
  7082 ;; This function is called by:
  7083 ;;		_pad
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           	psect	text39
  7088  003268                     __ptext39:
  7089                           	callstack 0
  7090  003268                     _fputs:
  7091                           	callstack 19
  7092  003268  0E00               	movlw	0
  7093  00326A  6E14               	movwf	(fputs@i+1)^0,c
  7094  00326C  0E00               	movlw	0
  7095  00326E  6E13               	movwf	fputs@i^0,c
  7096  003270  EF45  F019         	goto	l4323
  7097  003274                     l4319:
  7098  003274  C012  F005         	movff	fputs@c,fputc@c
  7099  003278  6A06               	clrf	(fputc@c+1)^0,c
  7100  00327A  C010  F007         	movff	fputs@fp,fputc@fp
  7101  00327E  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  7102  003282  ECF9  F014         	call	_fputc	;wreg free
  7103  003286  4A13               	infsnz	fputs@i^0,f,c
  7104  003288  2A14               	incf	(fputs@i+1)^0,f,c
  7105  00328A                     l4323:
  7106  00328A  5013               	movf	fputs@i^0,w,c
  7107  00328C  240E               	addwf	fputs@s^0,w,c
  7108  00328E  6ED9               	movwf	fsr2l,c
  7109  003290  5014               	movf	(fputs@i+1)^0,w,c
  7110  003292  200F               	addwfc	(fputs@s+1)^0,w,c
  7111  003294  6EDA               	movwf	fsr2h,c
  7112  003296  50DF               	movf	indf2,w,c
  7113  003298  6E12               	movwf	fputs@c^0,c
  7114  00329A  5012               	movf	fputs@c^0,w,c
  7115  00329C  A4D8               	btfss	status,2,c
  7116  00329E  EF53  F019         	goto	u4011
  7117  0032A2  EF55  F019         	goto	u4010
  7118  0032A6                     u4011:
  7119  0032A6  EF3A  F019         	goto	l4319
  7120  0032AA                     u4010:
  7121  0032AA  0012               	return		;funcret
  7122  0032AC                     __end_of_fputs:
  7123                           	callstack 0
  7124                           
  7125 ;; *************** function _fputc *****************
  7126 ;; Defined at:
  7127 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  c               2    4[COMRAM] int 
  7130 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  7131 ;;		 -> sprintf@f(6), 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;		None
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  2    4[COMRAM] int 
  7136 ;; Registers used:
  7137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7143 ;;      Params:         4       0       0       0       0       0       0       0       0
  7144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7145 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7146 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7147 ;;Total ram usage:        9 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:    3
  7150 ;; This function calls:
  7151 ;;		_putch
  7152 ;; This function is called by:
  7153 ;;		_pad
  7154 ;;		_vfpfcnvrt
  7155 ;;		_fputs
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text40
  7160  0029F2                     __ptext40:
  7161                           	callstack 0
  7162  0029F2                     _fputc:
  7163                           	callstack 22
  7164  0029F2  5007               	movf	fputc@fp^0,w,c
  7165  0029F4  1008               	iorwf	(fputc@fp+1)^0,w,c
  7166  0029F6  B4D8               	btfsc	status,2,c
  7167  0029F8  EF00  F015         	goto	u3971
  7168  0029FC  EF02  F015         	goto	u3970
  7169  002A00                     u3971:
  7170  002A00  EF0B  F015         	goto	l4307
  7171  002A04                     u3970:
  7172  002A04  5007               	movf	fputc@fp^0,w,c
  7173  002A06  1008               	iorwf	(fputc@fp+1)^0,w,c
  7174  002A08  A4D8               	btfss	status,2,c
  7175  002A0A  EF09  F015         	goto	u3981
  7176  002A0E  EF0B  F015         	goto	u3980
  7177  002A12                     u3981:
  7178  002A12  EF10  F015         	goto	l4309
  7179  002A16                     u3980:
  7180  002A16                     l4307:
  7181  002A16  5005               	movf	fputc@c^0,w,c
  7182  002A18  EC82  F01A         	call	_putch
  7183  002A1C  EF5D  F015         	goto	l1240
  7184  002A20                     l4309:
  7185  002A20  EE20 F004          	lfsr	2,4
  7186  002A24  5007               	movf	fputc@fp^0,w,c
  7187  002A26  26D9               	addwf	fsr2l,f,c
  7188  002A28  5008               	movf	(fputc@fp+1)^0,w,c
  7189  002A2A  22DA               	addwfc	fsr2h,f,c
  7190  002A2C  50DE               	movf	postinc2,w,c
  7191  002A2E  10DE               	iorwf	postinc2,w,c
  7192  002A30  B4D8               	btfsc	status,2,c
  7193  002A32  EF1D  F015         	goto	u3991
  7194  002A36  EF1F  F015         	goto	u3990
  7195  002A3A                     u3991:
  7196  002A3A  EF3A  F015         	goto	l4313
  7197  002A3E                     u3990:
  7198  002A3E  EE20 F004          	lfsr	2,4
  7199  002A42  5007               	movf	fputc@fp^0,w,c
  7200  002A44  26D9               	addwf	fsr2l,f,c
  7201  002A46  5008               	movf	(fputc@fp+1)^0,w,c
  7202  002A48  22DA               	addwfc	fsr2h,f,c
  7203  002A4A  EE10 F002          	lfsr	1,2
  7204  002A4E  5007               	movf	fputc@fp^0,w,c
  7205  002A50  26E1               	addwf	fsr1l,f,c
  7206  002A52  5008               	movf	(fputc@fp+1)^0,w,c
  7207  002A54  22E2               	addwfc	fsr1h,f,c
  7208  002A56  50DE               	movf	postinc2,w,c
  7209  002A58  5CE6               	subwf	postinc1,w,c
  7210  002A5A  50E6               	movf	postinc1,w,c
  7211  002A5C  0A80               	xorlw	128
  7212  002A5E  6E0D               	movwf	(??_fputc+4)^0,c
  7213  002A60  50DE               	movf	postinc2,w,c
  7214  002A62  0A80               	xorlw	128
  7215  002A64  580D               	subwfb	(??_fputc+4)^0,w,c
  7216  002A66  B0D8               	btfsc	status,0,c
  7217  002A68  EF38  F015         	goto	u4001
  7218  002A6C  EF3A  F015         	goto	u4000
  7219  002A70                     u4001:
  7220  002A70  EF5D  F015         	goto	l1240
  7221  002A74                     u4000:
  7222  002A74                     l4313:
  7223  002A74  EE20 F002          	lfsr	2,2
  7224  002A78  5007               	movf	fputc@fp^0,w,c
  7225  002A7A  26D9               	addwf	fsr2l,f,c
  7226  002A7C  5008               	movf	(fputc@fp+1)^0,w,c
  7227  002A7E  22DA               	addwfc	fsr2h,f,c
  7228  002A80  CFDE F009          	movff	postinc2,??_fputc
  7229  002A84  CFDD F00A          	movff	postdec2,??_fputc+1
  7230  002A88  C007  FFD9         	movff	fputc@fp,fsr2l
  7231  002A8C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  7232  002A90  CFDE F00B          	movff	postinc2,??_fputc+2
  7233  002A94  CFDD F00C          	movff	postdec2,??_fputc+3
  7234  002A98  5009               	movf	??_fputc^0,w,c
  7235  002A9A  240B               	addwf	(??_fputc+2)^0,w,c
  7236  002A9C  6ED9               	movwf	fsr2l,c
  7237  002A9E  500A               	movf	(??_fputc+1)^0,w,c
  7238  002AA0  200C               	addwfc	(??_fputc+3)^0,w,c
  7239  002AA2  6EDA               	movwf	fsr2h,c
  7240  002AA4  C005  FFDF         	movff	fputc@c,indf2
  7241  002AA8  EE20 F002          	lfsr	2,2
  7242  002AAC  5007               	movf	fputc@fp^0,w,c
  7243  002AAE  26D9               	addwf	fsr2l,f,c
  7244  002AB0  5008               	movf	(fputc@fp+1)^0,w,c
  7245  002AB2  22DA               	addwfc	fsr2h,f,c
  7246  002AB4  2ADE               	incf	postinc2,f,c
  7247  002AB6  0E00               	movlw	0
  7248  002AB8  22DD               	addwfc	postdec2,f,c
  7249  002ABA                     l1240:
  7250  002ABA  0012               	return		;funcret
  7251  002ABC                     __end_of_fputc:
  7252                           	callstack 0
  7253                           
  7254 ;; *************** function _putch *****************
  7255 ;; Defined at:
  7256 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  c               1    wreg     unsigned char 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;  c               1    0[COMRAM] unsigned char 
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7270 ;;      Params:         0       0       0       0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7273 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    2
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_fputc
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           	psect	text41
  7285  003504                     __ptext41:
  7286                           	callstack 0
  7287  003504                     _putch:
  7288                           	callstack 22
  7289  003504  0012               	return		;funcret
  7290  003506                     __end_of_putch:
  7291                           	callstack 0
  7292                           
  7293 ;; *************** function _abs *****************
  7294 ;; Defined at:
  7295 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  a               2   22[COMRAM] int 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  2   22[COMRAM] int 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7309 ;;      Params:         2       0       0       0       0       0       0       0       0
  7310 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7311 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7312 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7313 ;;Total ram usage:        4 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:    2
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_dtoa
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text42
  7324  0032EE                     __ptext42:
  7325                           	callstack 0
  7326  0032EE                     _abs:
  7327                           	callstack 22
  7328  0032EE  BE18               	btfsc	(abs@a+1)^0,7,c
  7329  0032F0  EF84  F019         	goto	u4200
  7330  0032F4  5018               	movf	(abs@a+1)^0,w,c
  7331  0032F6  E106               	bnz	u4201
  7332  0032F8  0417               	decf	abs@a^0,w,c
  7333  0032FA  B0D8               	btfsc	status,0,c
  7334  0032FC  EF82  F019         	goto	u4201
  7335  003300  EF84  F019         	goto	u4200
  7336  003304                     u4201:
  7337  003304  EF92  F019         	goto	l1180
  7338  003308                     u4200:
  7339  003308  C017  F019         	movff	abs@a,??_abs
  7340  00330C  C018  F01A         	movff	abs@a+1,??_abs+1
  7341  003310  1E19               	comf	??_abs^0,f,c
  7342  003312  1E1A               	comf	(??_abs+1)^0,f,c
  7343  003314  4A19               	infsnz	??_abs^0,f,c
  7344  003316  2A1A               	incf	(??_abs+1)^0,f,c
  7345  003318  C019  F017         	movff	??_abs,?_abs
  7346  00331C  C01A  F018         	movff	??_abs+1,?_abs+1
  7347  003320  EF96  F019         	goto	l1183
  7348  003324                     l1180:
  7349  003324  C017  F017         	movff	abs@a,?_abs
  7350  003328  C018  F018         	movff	abs@a+1,?_abs+1
  7351  00332C                     l1183:
  7352  00332C  0012               	return		;funcret
  7353  00332E                     __end_of_abs:
  7354                           	callstack 0
  7355                           
  7356 ;; *************** function ___aomod *****************
  7357 ;; Defined at:
  7358 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  dividend        8    4[COMRAM] long long 
  7361 ;;  divisor         8   12[COMRAM] long long 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  sign            1   21[COMRAM] unsigned char 
  7364 ;;  counter         1   20[COMRAM] unsigned char 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  8    4[COMRAM] long long 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7374 ;;      Params:        16       0       0       0       0       0       0       0       0
  7375 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7377 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7378 ;;Total ram usage:       18 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    2
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_dtoa
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text43
  7389  00222A                     __ptext43:
  7390                           	callstack 0
  7391  00222A                     ___aomod:
  7392                           	callstack 22
  7393  00222A  0E00               	movlw	0
  7394  00222C  6E16               	movwf	___aomod@sign^0,c
  7395  00222E  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  7396  002230  EF1E  F011         	goto	u4100
  7397  002234  EF1C  F011         	goto	u4101
  7398  002238                     u4101:
  7399  002238  EF30  F011         	goto	l4393
  7400  00223C                     u4100:
  7401  00223C  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7402  00223E  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7403  002240  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7404  002242  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7405  002244  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7406  002246  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7407  002248  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7408  00224A  6C05               	negf	___aomod@dividend^0,c
  7409  00224C  0E00               	movlw	0
  7410  00224E  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7411  002250  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7412  002252  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7413  002254  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7414  002256  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7415  002258  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7416  00225A  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7417  00225C  0E01               	movlw	1
  7418  00225E  6E16               	movwf	___aomod@sign^0,c
  7419  002260                     l4393:
  7420  002260  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  7421  002262  EF37  F011         	goto	u4110
  7422  002266  EF35  F011         	goto	u4111
  7423  00226A                     u4111:
  7424  00226A  EF47  F011         	goto	l4397
  7425  00226E                     u4110:
  7426  00226E  1E14               	comf	(___aomod@divisor+7)^0,f,c
  7427  002270  1E13               	comf	(___aomod@divisor+6)^0,f,c
  7428  002272  1E12               	comf	(___aomod@divisor+5)^0,f,c
  7429  002274  1E11               	comf	(___aomod@divisor+4)^0,f,c
  7430  002276  1E10               	comf	(___aomod@divisor+3)^0,f,c
  7431  002278  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  7432  00227A  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  7433  00227C  6C0D               	negf	___aomod@divisor^0,c
  7434  00227E  0E00               	movlw	0
  7435  002280  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  7436  002282  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  7437  002284  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  7438  002286  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  7439  002288  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  7440  00228A  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  7441  00228C  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  7442  00228E                     l4397:
  7443  00228E  500D               	movf	___aomod@divisor^0,w,c
  7444  002290  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  7445  002292  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  7446  002294  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  7447  002296  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  7448  002298  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  7449  00229A  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  7450  00229C  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  7451  00229E  B4D8               	btfsc	status,2,c
  7452  0022A0  EF54  F011         	goto	u4121
  7453  0022A4  EF56  F011         	goto	u4120
  7454  0022A8                     u4121:
  7455  0022A8  EF9E  F011         	goto	l4413
  7456  0022AC                     u4120:
  7457  0022AC  0E01               	movlw	1
  7458  0022AE  6E15               	movwf	___aomod@counter^0,c
  7459  0022B0  EF64  F011         	goto	l4403
  7460  0022B4                     l4401:
  7461  0022B4  90D8               	bcf	status,0,c
  7462  0022B6  360D               	rlcf	___aomod@divisor^0,f,c
  7463  0022B8  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  7464  0022BA  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  7465  0022BC  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  7466  0022BE  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  7467  0022C0  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  7468  0022C2  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  7469  0022C4  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  7470  0022C6  2A15               	incf	___aomod@counter^0,f,c
  7471  0022C8                     l4403:
  7472  0022C8  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  7473  0022CA  EF69  F011         	goto	u4131
  7474  0022CE  EF6B  F011         	goto	u4130
  7475  0022D2                     u4131:
  7476  0022D2  EF5A  F011         	goto	l4401
  7477  0022D6                     u4130:
  7478  0022D6                     l4405:
  7479  0022D6  500D               	movf	___aomod@divisor^0,w,c
  7480  0022D8  5C05               	subwf	___aomod@dividend^0,w,c
  7481  0022DA  500E               	movf	(___aomod@divisor+1)^0,w,c
  7482  0022DC  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  7483  0022DE  500F               	movf	(___aomod@divisor+2)^0,w,c
  7484  0022E0  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  7485  0022E2  5010               	movf	(___aomod@divisor+3)^0,w,c
  7486  0022E4  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  7487  0022E6  5011               	movf	(___aomod@divisor+4)^0,w,c
  7488  0022E8  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  7489  0022EA  5012               	movf	(___aomod@divisor+5)^0,w,c
  7490  0022EC  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  7491  0022EE  5013               	movf	(___aomod@divisor+6)^0,w,c
  7492  0022F0  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  7493  0022F2  5014               	movf	(___aomod@divisor+7)^0,w,c
  7494  0022F4  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  7495  0022F6  A0D8               	btfss	status,0,c
  7496  0022F8  EF80  F011         	goto	u4141
  7497  0022FC  EF82  F011         	goto	u4140
  7498  002300                     u4141:
  7499  002300  EF92  F011         	goto	l4409
  7500  002304                     u4140:
  7501  002304  500D               	movf	___aomod@divisor^0,w,c
  7502  002306  5E05               	subwf	___aomod@dividend^0,f,c
  7503  002308  500E               	movf	(___aomod@divisor+1)^0,w,c
  7504  00230A  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  7505  00230C  500F               	movf	(___aomod@divisor+2)^0,w,c
  7506  00230E  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  7507  002310  5010               	movf	(___aomod@divisor+3)^0,w,c
  7508  002312  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  7509  002314  5011               	movf	(___aomod@divisor+4)^0,w,c
  7510  002316  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  7511  002318  5012               	movf	(___aomod@divisor+5)^0,w,c
  7512  00231A  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  7513  00231C  5013               	movf	(___aomod@divisor+6)^0,w,c
  7514  00231E  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  7515  002320  5014               	movf	(___aomod@divisor+7)^0,w,c
  7516  002322  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  7517  002324                     l4409:
  7518  002324  90D8               	bcf	status,0,c
  7519  002326  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  7520  002328  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  7521  00232A  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  7522  00232C  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  7523  00232E  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  7524  002330  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  7525  002332  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  7526  002334  320D               	rrcf	___aomod@divisor^0,f,c
  7527  002336  2E15               	decfsz	___aomod@counter^0,f,c
  7528  002338  EF6B  F011         	goto	l4405
  7529  00233C                     l4413:
  7530  00233C  5016               	movf	___aomod@sign^0,w,c
  7531  00233E  B4D8               	btfsc	status,2,c
  7532  002340  EFA4  F011         	goto	u4151
  7533  002344  EFA6  F011         	goto	u4150
  7534  002348                     u4151:
  7535  002348  EFB6  F011         	goto	l4417
  7536  00234C                     u4150:
  7537  00234C  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7538  00234E  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7539  002350  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7540  002352  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7541  002354  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7542  002356  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7543  002358  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7544  00235A  6C05               	negf	___aomod@dividend^0,c
  7545  00235C  0E00               	movlw	0
  7546  00235E  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7547  002360  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7548  002362  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7549  002364  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7550  002366  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7551  002368  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7552  00236A  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7553  00236C                     l4417:
  7554  00236C  C005  F005         	movff	___aomod@dividend,?___aomod
  7555  002370  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  7556  002374  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  7557  002378  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  7558  00237C  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  7559  002380  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  7560  002384  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  7561  002388  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  7562  00238C  0012               	return		;funcret
  7563  00238E                     __end_of___aomod:
  7564                           	callstack 0
  7565                           
  7566 ;; *************** function ___aodiv *****************
  7567 ;; Defined at:
  7568 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  dividend        8    4[COMRAM] long long 
  7571 ;;  divisor         8   12[COMRAM] long long 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;  quotient        8   22[COMRAM] long long 
  7574 ;;  sign            1   21[COMRAM] unsigned char 
  7575 ;;  counter         1   20[COMRAM] unsigned char 
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  8    4[COMRAM] long long 
  7578 ;; Registers used:
  7579 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7585 ;;      Params:        16       0       0       0       0       0       0       0       0
  7586 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7588 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7589 ;;Total ram usage:       26 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; Hardware stack levels required when called:    2
  7592 ;; This function calls:
  7593 ;;		Nothing
  7594 ;; This function is called by:
  7595 ;;		_dtoa
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text44
  7600  001F2C                     __ptext44:
  7601                           	callstack 0
  7602  001F2C                     ___aodiv:
  7603                           	callstack 22
  7604  001F2C  0E00               	movlw	0
  7605  001F2E  6E16               	movwf	___aodiv@sign^0,c
  7606  001F30  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  7607  001F32  EF9F  F00F         	goto	u4030
  7608  001F36  EF9D  F00F         	goto	u4031
  7609  001F3A                     u4031:
  7610  001F3A  EFB1  F00F         	goto	l4349
  7611  001F3E                     u4030:
  7612  001F3E  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  7613  001F40  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  7614  001F42  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  7615  001F44  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  7616  001F46  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  7617  001F48  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  7618  001F4A  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  7619  001F4C  6C0D               	negf	___aodiv@divisor^0,c
  7620  001F4E  0E00               	movlw	0
  7621  001F50  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  7622  001F52  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  7623  001F54  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  7624  001F56  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  7625  001F58  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  7626  001F5A  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  7627  001F5C  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  7628  001F5E  0E01               	movlw	1
  7629  001F60  6E16               	movwf	___aodiv@sign^0,c
  7630  001F62                     l4349:
  7631  001F62  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  7632  001F64  EFB8  F00F         	goto	u4040
  7633  001F68  EFB6  F00F         	goto	u4041
  7634  001F6C                     u4041:
  7635  001F6C  EFCA  F00F         	goto	l4355
  7636  001F70                     u4040:
  7637  001F70  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  7638  001F72  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  7639  001F74  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  7640  001F76  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  7641  001F78  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  7642  001F7A  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  7643  001F7C  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  7644  001F7E  6C05               	negf	___aodiv@dividend^0,c
  7645  001F80  0E00               	movlw	0
  7646  001F82  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  7647  001F84  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  7648  001F86  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  7649  001F88  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  7650  001F8A  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  7651  001F8C  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  7652  001F8E  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  7653  001F90  0E01               	movlw	1
  7654  001F92  1A16               	xorwf	___aodiv@sign^0,f,c
  7655  001F94                     l4355:
  7656  001F94  EE20  F017         	lfsr	2,___aodiv@quotient
  7657  001F98  0E07               	movlw	7
  7658  001F9A                     u4051:
  7659  001F9A  6ADE               	clrf	postinc2,c
  7660  001F9C  06E8               	decf	wreg,f,c
  7661  001F9E  E2FD               	bc	u4051
  7662  001FA0  500D               	movf	___aodiv@divisor^0,w,c
  7663  001FA2  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  7664  001FA4  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  7665  001FA6  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  7666  001FA8  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  7667  001FAA  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  7668  001FAC  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  7669  001FAE  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  7670  001FB0  B4D8               	btfsc	status,2,c
  7671  001FB2  EFDD  F00F         	goto	u4061
  7672  001FB6  EFDF  F00F         	goto	u4060
  7673  001FBA                     u4061:
  7674  001FBA  EF31  F010         	goto	l4377
  7675  001FBE                     u4060:
  7676  001FBE  0E01               	movlw	1
  7677  001FC0  6E15               	movwf	___aodiv@counter^0,c
  7678  001FC2  EFED  F00F         	goto	l4363
  7679  001FC6                     l4361:
  7680  001FC6  90D8               	bcf	status,0,c
  7681  001FC8  360D               	rlcf	___aodiv@divisor^0,f,c
  7682  001FCA  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  7683  001FCC  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  7684  001FCE  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  7685  001FD0  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  7686  001FD2  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  7687  001FD4  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  7688  001FD6  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  7689  001FD8  2A15               	incf	___aodiv@counter^0,f,c
  7690  001FDA                     l4363:
  7691  001FDA  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  7692  001FDC  EFF2  F00F         	goto	u4071
  7693  001FE0  EFF4  F00F         	goto	u4070
  7694  001FE4                     u4071:
  7695  001FE4  EFE3  F00F         	goto	l4361
  7696  001FE8                     u4070:
  7697  001FE8                     l4365:
  7698  001FE8  90D8               	bcf	status,0,c
  7699  001FEA  3617               	rlcf	___aodiv@quotient^0,f,c
  7700  001FEC  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  7701  001FEE  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  7702  001FF0  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  7703  001FF2  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  7704  001FF4  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  7705  001FF6  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  7706  001FF8  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  7707  001FFA  500D               	movf	___aodiv@divisor^0,w,c
  7708  001FFC  5C05               	subwf	___aodiv@dividend^0,w,c
  7709  001FFE  500E               	movf	(___aodiv@divisor+1)^0,w,c
  7710  002000  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  7711  002002  500F               	movf	(___aodiv@divisor+2)^0,w,c
  7712  002004  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  7713  002006  5010               	movf	(___aodiv@divisor+3)^0,w,c
  7714  002008  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  7715  00200A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  7716  00200C  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  7717  00200E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  7718  002010  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  7719  002012  5013               	movf	(___aodiv@divisor+6)^0,w,c
  7720  002014  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  7721  002016  5014               	movf	(___aodiv@divisor+7)^0,w,c
  7722  002018  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  7723  00201A  A0D8               	btfss	status,0,c
  7724  00201C  EF12  F010         	goto	u4081
  7725  002020  EF14  F010         	goto	u4080
  7726  002024                     u4081:
  7727  002024  EF25  F010         	goto	l4373
  7728  002028                     u4080:
  7729  002028  500D               	movf	___aodiv@divisor^0,w,c
  7730  00202A  5E05               	subwf	___aodiv@dividend^0,f,c
  7731  00202C  500E               	movf	(___aodiv@divisor+1)^0,w,c
  7732  00202E  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  7733  002030  500F               	movf	(___aodiv@divisor+2)^0,w,c
  7734  002032  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  7735  002034  5010               	movf	(___aodiv@divisor+3)^0,w,c
  7736  002036  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  7737  002038  5011               	movf	(___aodiv@divisor+4)^0,w,c
  7738  00203A  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  7739  00203C  5012               	movf	(___aodiv@divisor+5)^0,w,c
  7740  00203E  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  7741  002040  5013               	movf	(___aodiv@divisor+6)^0,w,c
  7742  002042  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  7743  002044  5014               	movf	(___aodiv@divisor+7)^0,w,c
  7744  002046  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  7745  002048  8017               	bsf	___aodiv@quotient^0,0,c
  7746  00204A                     l4373:
  7747  00204A  90D8               	bcf	status,0,c
  7748  00204C  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  7749  00204E  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  7750  002050  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  7751  002052  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  7752  002054  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  7753  002056  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  7754  002058  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  7755  00205A  320D               	rrcf	___aodiv@divisor^0,f,c
  7756  00205C  2E15               	decfsz	___aodiv@counter^0,f,c
  7757  00205E  EFF4  F00F         	goto	l4365
  7758  002062                     l4377:
  7759  002062  5016               	movf	___aodiv@sign^0,w,c
  7760  002064  B4D8               	btfsc	status,2,c
  7761  002066  EF37  F010         	goto	u4091
  7762  00206A  EF39  F010         	goto	u4090
  7763  00206E                     u4091:
  7764  00206E  EF49  F010         	goto	l4381
  7765  002072                     u4090:
  7766  002072  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  7767  002074  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  7768  002076  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  7769  002078  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  7770  00207A  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  7771  00207C  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  7772  00207E  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  7773  002080  6C17               	negf	___aodiv@quotient^0,c
  7774  002082  0E00               	movlw	0
  7775  002084  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  7776  002086  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  7777  002088  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  7778  00208A  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  7779  00208C  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  7780  00208E  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  7781  002090  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  7782  002092                     l4381:
  7783  002092  C017  F005         	movff	___aodiv@quotient,?___aodiv
  7784  002096  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  7785  00209A  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  7786  00209E  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  7787  0020A2  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  7788  0020A6  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  7789  0020AA  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  7790  0020AE  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  7791  0020B2  0012               	return		;funcret
  7792  0020B4                     __end_of___aodiv:
  7793                           	callstack 0
  7794                           
  7795 ;; *************** function _atoi *****************
  7796 ;; Defined at:
  7797 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7800 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;  n               2   24[COMRAM] int 
  7803 ;;  neg             2   17[COMRAM] int 
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  2   11[COMRAM] int 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7813 ;;      Params:         2       0       0       0       0       0       0       0       0
  7814 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7815 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7816 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7817 ;;Total ram usage:       15 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    3
  7820 ;; This function calls:
  7821 ;;		___wmul
  7822 ;;		_isdigit
  7823 ;;		_isspace
  7824 ;; This function is called by:
  7825 ;;		_vfpfcnvrt
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text45
  7830  001D9C                     __ptext45:
  7831                           	callstack 0
  7832  001D9C                     _atoi:
  7833                           	callstack 22
  7834  001D9C  0E00               	movlw	0
  7835  001D9E  6E1A               	movwf	(atoi@n+1)^0,c
  7836  001DA0  0E00               	movlw	0
  7837  001DA2  6E19               	movwf	atoi@n^0,c
  7838  001DA4  0E00               	movlw	0
  7839  001DA6  6E13               	movwf	(atoi@neg+1)^0,c
  7840  001DA8  0E00               	movlw	0
  7841  001DAA  6E12               	movwf	atoi@neg^0,c
  7842  001DAC  EFDA  F00E         	goto	l4529
  7843  001DB0                     l4527:
  7844  001DB0  4A0C               	infsnz	atoi@s^0,f,c
  7845  001DB2  2A0D               	incf	(atoi@s+1)^0,f,c
  7846  001DB4                     l4529:
  7847  001DB4  0E01               	movlw	1
  7848  001DB6  6E18               	movwf	_atoi$2318^0,c
  7849  001DB8  C00C  FFF6         	movff	atoi@s,tblptrl
  7850  001DBC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7851  001DC0                     	if	0	;tblptru may be non-zero
  7852  001DC0                     	endif
  7853  001DC0                     	if	0	;tblptru may be non-zero
  7854  001DC0                     	endif
  7855  001DC0  0008               	tblrd		*
  7856  001DC2  50F5               	movf	tablat,w,c
  7857  001DC4  0A20               	xorlw	32
  7858  001DC6  B4D8               	btfsc	status,2,c
  7859  001DC8  EFE8  F00E         	goto	u4401
  7860  001DCC  EFEA  F00E         	goto	u4400
  7861  001DD0                     u4401:
  7862  001DD0  EF07  F00F         	goto	l4537
  7863  001DD4                     u4400:
  7864  001DD4  0EF7               	movlw	247
  7865  001DD6  6E0E               	movwf	??_atoi^0,c
  7866  001DD8  0EFF               	movlw	255
  7867  001DDA  6E0F               	movwf	(??_atoi+1)^0,c
  7868  001DDC  C00C  FFF6         	movff	atoi@s,tblptrl
  7869  001DE0  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7870  001DE4                     	if	0	;tblptru may be non-zero
  7871  001DE4                     	endif
  7872  001DE4                     	if	0	;tblptru may be non-zero
  7873  001DE4                     	endif
  7874  001DE4  0008               	tblrd		*
  7875  001DE6  50F5               	movf	tablat,w,c
  7876  001DE8  6E10               	movwf	(??_atoi+2)^0,c
  7877  001DEA  6A11               	clrf	(??_atoi+3)^0,c
  7878  001DEC  500E               	movf	??_atoi^0,w,c
  7879  001DEE  2610               	addwf	(??_atoi+2)^0,f,c
  7880  001DF0  500F               	movf	(??_atoi+1)^0,w,c
  7881  001DF2  2211               	addwfc	(??_atoi+3)^0,f,c
  7882  001DF4  5011               	movf	(??_atoi+3)^0,w,c
  7883  001DF6  E109               	bnz	u4410
  7884  001DF8  0E05               	movlw	5
  7885  001DFA  5C10               	subwf	(??_atoi+2)^0,w,c
  7886  001DFC  A0D8               	btfss	status,0,c
  7887  001DFE  EF03  F00F         	goto	u4411
  7888  001E02  EF05  F00F         	goto	u4410
  7889  001E06                     u4411:
  7890  001E06  EF07  F00F         	goto	l4537
  7891  001E0A                     u4410:
  7892  001E0A  0E00               	movlw	0
  7893  001E0C  6E18               	movwf	_atoi$2318^0,c
  7894  001E0E                     l4537:
  7895  001E0E  C018  F014         	movff	_atoi$2318,_atoi$2317
  7896  001E12  6A15               	clrf	(_atoi$2317+1)^0,c
  7897  001E14  5014               	movf	_atoi$2317^0,w,c
  7898  001E16  1015               	iorwf	(_atoi$2317+1)^0,w,c
  7899  001E18  A4D8               	btfss	status,2,c
  7900  001E1A  EF11  F00F         	goto	u4421
  7901  001E1E  EF13  F00F         	goto	u4420
  7902  001E22                     u4421:
  7903  001E22  EFD8  F00E         	goto	l4527
  7904  001E26                     u4420:
  7905  001E26  EF1D  F00F         	goto	l4547
  7906  001E2A                     l4543:
  7907  001E2A  0E00               	movlw	0
  7908  001E2C  6E13               	movwf	(atoi@neg+1)^0,c
  7909  001E2E  0E01               	movlw	1
  7910  001E30  6E12               	movwf	atoi@neg^0,c
  7911  001E32                     l4545:
  7912  001E32  4A0C               	infsnz	atoi@s^0,f,c
  7913  001E34  2A0D               	incf	(atoi@s+1)^0,f,c
  7914  001E36  EF52  F00F         	goto	l4553
  7915  001E3A                     l4547:
  7916  001E3A  C00C  FFF6         	movff	atoi@s,tblptrl
  7917  001E3E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7918  001E42                     	if	0	;tblptru may be non-zero
  7919  001E42                     	endif
  7920  001E42                     	if	0	;tblptru may be non-zero
  7921  001E42                     	endif
  7922  001E42  0008               	tblrd		*
  7923  001E44  50F5               	movf	tablat,w,c
  7924  001E46  6E0E               	movwf	??_atoi^0,c
  7925  001E48  6A0F               	clrf	(??_atoi+1)^0,c
  7926                           
  7927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7928                           ; Switch size 1, requested type "simple"
  7929                           ; Number of cases is 1, Range of values is 0 to 0
  7930                           ; switch strategies available:
  7931                           ; Name         Instructions Cycles
  7932                           ; simple_byte            4     3 (average)
  7933                           ;	Chosen strategy is simple_byte
  7934  001E4A  500F               	movf	(??_atoi+1)^0,w,c
  7935  001E4C  0A00               	xorlw	0	; case 0
  7936  001E4E  B4D8               	btfsc	status,2,c
  7937  001E50  EF2C  F00F         	goto	l4997
  7938  001E54  EF52  F00F         	goto	l4553
  7939  001E58                     l4997:
  7940                           
  7941                           ; Switch size 1, requested type "simple"
  7942                           ; Number of cases is 2, Range of values is 43 to 45
  7943                           ; switch strategies available:
  7944                           ; Name         Instructions Cycles
  7945                           ; simple_byte            7     4 (average)
  7946                           ;	Chosen strategy is simple_byte
  7947  001E58  500E               	movf	??_atoi^0,w,c
  7948  001E5A  0A2B               	xorlw	43	; case 43
  7949  001E5C  B4D8               	btfsc	status,2,c
  7950  001E5E  EF19  F00F         	goto	l4545
  7951  001E62  0A06               	xorlw	6	; case 45
  7952  001E64  B4D8               	btfsc	status,2,c
  7953  001E66  EF15  F00F         	goto	l4543
  7954  001E6A  EF52  F00F         	goto	l4553
  7955  001E6E                     l4549:
  7956  001E6E  C019  F005         	movff	atoi@n,___wmul@multiplier
  7957  001E72  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7958  001E76  0E00               	movlw	0
  7959  001E78  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7960  001E7A  0E0A               	movlw	10
  7961  001E7C  6E07               	movwf	___wmul@multiplicand^0,c
  7962  001E7E  EC36  F01A         	call	___wmul	;wreg free
  7963  001E82  C00C  FFF6         	movff	atoi@s,tblptrl
  7964  001E86  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7965  001E8A                     	if	0	;tblptru may be non-zero
  7966  001E8A                     	endif
  7967  001E8A                     	if	0	;tblptru may be non-zero
  7968  001E8A                     	endif
  7969  001E8A  0008               	tblrd		*
  7970  001E8C  50F5               	movf	tablat,w,c
  7971  001E8E  5E05               	subwf	?___wmul^0,f,c
  7972  001E90  0E00               	movlw	0
  7973  001E92  5A06               	subwfb	(?___wmul+1)^0,f,c
  7974  001E94  0E30               	movlw	48
  7975  001E96  2405               	addwf	?___wmul^0,w,c
  7976  001E98  6E19               	movwf	atoi@n^0,c
  7977  001E9A  0E00               	movlw	0
  7978  001E9C  2006               	addwfc	(?___wmul+1)^0,w,c
  7979  001E9E  6E1A               	movwf	(atoi@n+1)^0,c
  7980  001EA0  EF19  F00F         	goto	l4545
  7981  001EA4                     l4553:
  7982  001EA4  0ED0               	movlw	208
  7983  001EA6  6E0E               	movwf	??_atoi^0,c
  7984  001EA8  0EFF               	movlw	255
  7985  001EAA  6E0F               	movwf	(??_atoi+1)^0,c
  7986  001EAC  C00C  FFF6         	movff	atoi@s,tblptrl
  7987  001EB0  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7988  001EB4                     	if	0	;tblptru may be non-zero
  7989  001EB4                     	endif
  7990  001EB4                     	if	0	;tblptru may be non-zero
  7991  001EB4                     	endif
  7992  001EB4  0008               	tblrd		*
  7993  001EB6  50F5               	movf	tablat,w,c
  7994  001EB8  6E10               	movwf	(??_atoi+2)^0,c
  7995  001EBA  6A11               	clrf	(??_atoi+3)^0,c
  7996  001EBC  500E               	movf	??_atoi^0,w,c
  7997  001EBE  2610               	addwf	(??_atoi+2)^0,f,c
  7998  001EC0  500F               	movf	(??_atoi+1)^0,w,c
  7999  001EC2  2211               	addwfc	(??_atoi+3)^0,f,c
  8000  001EC4  5011               	movf	(??_atoi+3)^0,w,c
  8001  001EC6  E10A               	bnz	u4430
  8002  001EC8  0E0A               	movlw	10
  8003  001ECA  5C10               	subwf	(??_atoi+2)^0,w,c
  8004  001ECC  A0D8               	btfss	status,0,c
  8005  001ECE  EF6B  F00F         	goto	u4431
  8006  001ED2  EF6E  F00F         	goto	u4430
  8007  001ED6                     u4431:
  8008  001ED6  0E01               	movlw	1
  8009  001ED8  EF6F  F00F         	goto	u4440
  8010  001EDC                     u4430:
  8011  001EDC  0E00               	movlw	0
  8012  001EDE                     u4440:
  8013  001EDE  6E16               	movwf	_atoi$2319^0,c
  8014  001EE0  6A17               	clrf	(_atoi$2319+1)^0,c
  8015  001EE2  5016               	movf	_atoi$2319^0,w,c
  8016  001EE4  1017               	iorwf	(_atoi$2319+1)^0,w,c
  8017  001EE6  A4D8               	btfss	status,2,c
  8018  001EE8  EF78  F00F         	goto	u4451
  8019  001EEC  EF7A  F00F         	goto	u4450
  8020  001EF0                     u4451:
  8021  001EF0  EF37  F00F         	goto	l4549
  8022  001EF4                     u4450:
  8023  001EF4  5012               	movf	atoi@neg^0,w,c
  8024  001EF6  1013               	iorwf	(atoi@neg+1)^0,w,c
  8025  001EF8  A4D8               	btfss	status,2,c
  8026  001EFA  EF81  F00F         	goto	u4461
  8027  001EFE  EF83  F00F         	goto	u4460
  8028  001F02                     u4461:
  8029  001F02  EF91  F00F         	goto	l1211
  8030  001F06                     u4460:
  8031  001F06  C019  F00E         	movff	atoi@n,??_atoi
  8032  001F0A  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  8033  001F0E  1E0E               	comf	??_atoi^0,f,c
  8034  001F10  1E0F               	comf	(??_atoi+1)^0,f,c
  8035  001F12  4A0E               	infsnz	??_atoi^0,f,c
  8036  001F14  2A0F               	incf	(??_atoi+1)^0,f,c
  8037  001F16  C00E  F00C         	movff	??_atoi,?_atoi
  8038  001F1A  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  8039  001F1E  EF95  F00F         	goto	l1214
  8040  001F22                     l1211:
  8041  001F22  C019  F00C         	movff	atoi@n,?_atoi
  8042  001F26  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  8043  001F2A                     l1214:
  8044  001F2A  0012               	return		;funcret
  8045  001F2C                     __end_of_atoi:
  8046                           	callstack 0
  8047                           
  8048 ;; *************** function _isspace *****************
  8049 ;; Defined at:
  8050 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  c               2    4[COMRAM] int 
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  2    4[COMRAM] int 
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8064 ;;      Params:         2       0       0       0       0       0       0       0       0
  8065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8066 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8067 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8068 ;;Total ram usage:        7 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; Hardware stack levels required when called:    2
  8071 ;; This function calls:
  8072 ;;		Nothing
  8073 ;; This function is called by:
  8074 ;;		_atoi
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text46
  8079  0030F6                     __ptext46:
  8080                           	callstack 0
  8081  0030F6                     _isspace:
  8082                           	callstack 22
  8083  0030F6  0E01               	movlw	1
  8084  0030F8  6E0B               	movwf	_isspace$2335^0,c
  8085  0030FA  0E20               	movlw	32
  8086  0030FC  1805               	xorwf	isspace@c^0,w,c
  8087  0030FE  1006               	iorwf	(isspace@c+1)^0,w,c
  8088  003100  B4D8               	btfsc	status,2,c
  8089  003102  EF85  F018         	goto	u4231
  8090  003106  EF87  F018         	goto	u4230
  8091  00310A                     u4231:
  8092  00310A  EFA0  F018         	goto	l4459
  8093  00310E                     u4230:
  8094  00310E  0EF7               	movlw	247
  8095  003110  6E07               	movwf	??_isspace^0,c
  8096  003112  0EFF               	movlw	255
  8097  003114  6E08               	movwf	(??_isspace+1)^0,c
  8098  003116  C005  F009         	movff	isspace@c,??_isspace+2
  8099  00311A  C006  F00A         	movff	isspace@c+1,??_isspace+3
  8100  00311E  5007               	movf	??_isspace^0,w,c
  8101  003120  2609               	addwf	(??_isspace+2)^0,f,c
  8102  003122  5008               	movf	(??_isspace+1)^0,w,c
  8103  003124  220A               	addwfc	(??_isspace+3)^0,f,c
  8104  003126  500A               	movf	(??_isspace+3)^0,w,c
  8105  003128  E109               	bnz	u4240
  8106  00312A  0E05               	movlw	5
  8107  00312C  5C09               	subwf	(??_isspace+2)^0,w,c
  8108  00312E  A0D8               	btfss	status,0,c
  8109  003130  EF9C  F018         	goto	u4241
  8110  003134  EF9E  F018         	goto	u4240
  8111  003138                     u4241:
  8112  003138  EFA0  F018         	goto	l4459
  8113  00313C                     u4240:
  8114  00313C  0E00               	movlw	0
  8115  00313E  6E0B               	movwf	_isspace$2335^0,c
  8116  003140                     l4459:
  8117  003140  C00B  F005         	movff	_isspace$2335,?_isspace
  8118  003144  6A06               	clrf	(?_isspace+1)^0,c
  8119  003146  0012               	return		;funcret
  8120  003148                     __end_of_isspace:
  8121                           	callstack 0
  8122                           
  8123 ;; *************** function _isdigit *****************
  8124 ;; Defined at:
  8125 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;  c               2    4[COMRAM] int 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;		None
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  2    4[COMRAM] int 
  8132 ;; Registers used:
  8133 ;;		wreg, status,2, status,0
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8139 ;;      Params:         2       0       0       0       0       0       0       0       0
  8140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8141 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8142 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8143 ;;Total ram usage:        6 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; Hardware stack levels required when called:    2
  8146 ;; This function calls:
  8147 ;;		Nothing
  8148 ;; This function is called by:
  8149 ;;		_vfpfcnvrt
  8150 ;;		_atoi
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           	psect	text47
  8155  0033A6                     __ptext47:
  8156                           	callstack 0
  8157  0033A6                     _isdigit:
  8158                           	callstack 23
  8159  0033A6  0ED0               	movlw	208
  8160  0033A8  6E07               	movwf	??_isdigit^0,c
  8161  0033AA  0EFF               	movlw	255
  8162  0033AC  6E08               	movwf	(??_isdigit+1)^0,c
  8163  0033AE  C005  F009         	movff	isdigit@c,??_isdigit+2
  8164  0033B2  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  8165  0033B6  5007               	movf	??_isdigit^0,w,c
  8166  0033B8  2609               	addwf	(??_isdigit+2)^0,f,c
  8167  0033BA  5008               	movf	(??_isdigit+1)^0,w,c
  8168  0033BC  220A               	addwfc	(??_isdigit+3)^0,f,c
  8169  0033BE  500A               	movf	(??_isdigit+3)^0,w,c
  8170  0033C0  E10A               	bnz	u4210
  8171  0033C2  0E0A               	movlw	10
  8172  0033C4  5C09               	subwf	(??_isdigit+2)^0,w,c
  8173  0033C6  A0D8               	btfss	status,0,c
  8174  0033C8  EFE8  F019         	goto	u4211
  8175  0033CC  EFEB  F019         	goto	u4210
  8176  0033D0                     u4211:
  8177  0033D0  0E01               	movlw	1
  8178  0033D2  EFEC  F019         	goto	u4220
  8179  0033D6                     u4210:
  8180  0033D6  0E00               	movlw	0
  8181  0033D8                     u4220:
  8182  0033D8  6E05               	movwf	?_isdigit^0,c
  8183  0033DA  6A06               	clrf	(?_isdigit+1)^0,c
  8184  0033DC  0012               	return		;funcret
  8185  0033DE                     __end_of_isdigit:
  8186                           	callstack 0
  8187                           
  8188 ;; *************** function ___wmul *****************
  8189 ;; Defined at:
  8190 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  multiplier      2    4[COMRAM] unsigned int 
  8193 ;;  multiplicand    2    6[COMRAM] unsigned int 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  product         2    8[COMRAM] unsigned int 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  2    4[COMRAM] unsigned int 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0, prodl, prodh
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8205 ;;      Params:         4       0       0       0       0       0       0       0       0
  8206 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8208 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8209 ;;Total ram usage:        6 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:    2
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_appSubGetData
  8216 ;;		_atoi
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text48
  8221  00346C                     __ptext48:
  8222                           	callstack 0
  8223  00346C                     ___wmul:
  8224                           	callstack 22
  8225  00346C  5005               	movf	___wmul@multiplier^0,w,c
  8226  00346E  0207               	mulwf	___wmul@multiplicand^0,c
  8227  003470  CFF3 F009          	movff	prodl,___wmul@product
  8228  003474  CFF4 F00A          	movff	prodh,___wmul@product+1
  8229  003478  5005               	movf	___wmul@multiplier^0,w,c
  8230  00347A  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  8231  00347C  50F3               	movf	243,w,c
  8232  00347E  260A               	addwf	(___wmul@product+1)^0,f,c
  8233  003480  5006               	movf	(___wmul@multiplier+1)^0,w,c
  8234  003482  0207               	mulwf	___wmul@multiplicand^0,c
  8235  003484  50F3               	movf	243,w,c
  8236  003486  260A               	addwf	(___wmul@product+1)^0,f,c
  8237  003488  C009  F005         	movff	___wmul@product,?___wmul
  8238  00348C  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  8239  003490  0012               	return		;funcret
  8240  003492                     __end_of___wmul:
  8241                           	callstack 0
  8242                           
  8243 ;; *************** function _memset *****************
  8244 ;; Defined at:
  8245 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  dest            2    4[COMRAM] PTR void 
  8248 ;;		 -> datos(25), 
  8249 ;;  c               2    6[COMRAM] int 
  8250 ;;  n               2    8[COMRAM] unsigned int 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  s               2   14[COMRAM] PTR unsigned char 
  8253 ;;		 -> datos(25), 
  8254 ;;  k               2   12[COMRAM] unsigned int 
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  2    4[COMRAM] PTR void 
  8257 ;; Registers used:
  8258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8264 ;;      Params:         6       0       0       0       0       0       0       0       0
  8265 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8266 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8267 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8268 ;;Total ram usage:       12 bytes
  8269 ;; Hardware stack levels used:    1
  8270 ;; Hardware stack levels required when called:    2
  8271 ;; This function calls:
  8272 ;;		Nothing
  8273 ;; This function is called by:
  8274 ;;		_appADC
  8275 ;;		_appBat
  8276 ;;		_appSubGetData
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text49
  8281  0020B4                     __ptext49:
  8282                           	callstack 0
  8283  0020B4                     _memset:
  8284                           	callstack 26
  8285  0020B4  C005  F00F         	movff	memset@dest,memset@s
  8286  0020B8  C006  F010         	movff	memset@dest+1,memset@s+1
  8287  0020BC  5009               	movf	memset@n^0,w,c
  8288  0020BE  100A               	iorwf	(memset@n+1)^0,w,c
  8289  0020C0  A4D8               	btfss	status,2,c
  8290  0020C2  EF65  F010         	goto	u2751
  8291  0020C6  EF67  F010         	goto	u2750
  8292  0020CA                     u2751:
  8293  0020CA  EF69  F010         	goto	l3241
  8294  0020CE                     u2750:
  8295  0020CE  EF14  F011         	goto	l1065
  8296  0020D2                     l3241:
  8297  0020D2  C00F  FFD9         	movff	memset@s,fsr2l
  8298  0020D6  C010  FFDA         	movff	memset@s+1,fsr2h
  8299  0020DA  C007  FFDF         	movff	memset@c,indf2
  8300  0020DE  5009               	movf	memset@n^0,w,c
  8301  0020E0  240F               	addwf	memset@s^0,w,c
  8302  0020E2  6E0B               	movwf	??_memset^0,c
  8303  0020E4  500A               	movf	(memset@n+1)^0,w,c
  8304  0020E6  2010               	addwfc	(memset@s+1)^0,w,c
  8305  0020E8  6E0C               	movwf	(??_memset+1)^0,c
  8306  0020EA  0EFF               	movlw	255
  8307  0020EC  240B               	addwf	??_memset^0,w,c
  8308  0020EE  6ED9               	movwf	fsr2l,c
  8309  0020F0  0EFF               	movlw	255
  8310  0020F2  200C               	addwfc	(??_memset+1)^0,w,c
  8311  0020F4  6EDA               	movwf	fsr2h,c
  8312  0020F6  C007  FFDF         	movff	memset@c,indf2
  8313  0020FA  500A               	movf	(memset@n+1)^0,w,c
  8314  0020FC  E107               	bnz	u2761
  8315  0020FE  0E03               	movlw	3
  8316  002100  5C09               	subwf	memset@n^0,w,c
  8317  002102  B0D8               	btfsc	status,0,c
  8318  002104  EF86  F010         	goto	u2761
  8319  002108  EF88  F010         	goto	u2760
  8320  00210C                     u2761:
  8321  00210C  EF8A  F010         	goto	l3247
  8322  002110                     u2760:
  8323  002110  EF14  F011         	goto	l1065
  8324  002114                     l3247:
  8325  002114  EE20 F001          	lfsr	2,1
  8326  002118  500F               	movf	memset@s^0,w,c
  8327  00211A  26D9               	addwf	fsr2l,f,c
  8328  00211C  5010               	movf	(memset@s+1)^0,w,c
  8329  00211E  22DA               	addwfc	fsr2h,f,c
  8330  002120  C007  FFDF         	movff	memset@c,indf2
  8331  002124  EE20 F002          	lfsr	2,2
  8332  002128  500F               	movf	memset@s^0,w,c
  8333  00212A  26D9               	addwf	fsr2l,f,c
  8334  00212C  5010               	movf	(memset@s+1)^0,w,c
  8335  00212E  22DA               	addwfc	fsr2h,f,c
  8336  002130  C007  FFDF         	movff	memset@c,indf2
  8337  002134  5009               	movf	memset@n^0,w,c
  8338  002136  240F               	addwf	memset@s^0,w,c
  8339  002138  6E0B               	movwf	??_memset^0,c
  8340  00213A  500A               	movf	(memset@n+1)^0,w,c
  8341  00213C  2010               	addwfc	(memset@s+1)^0,w,c
  8342  00213E  6E0C               	movwf	(??_memset+1)^0,c
  8343  002140  0EFE               	movlw	254
  8344  002142  240B               	addwf	??_memset^0,w,c
  8345  002144  6ED9               	movwf	fsr2l,c
  8346  002146  0EFF               	movlw	255
  8347  002148  200C               	addwfc	(??_memset+1)^0,w,c
  8348  00214A  6EDA               	movwf	fsr2h,c
  8349  00214C  C007  FFDF         	movff	memset@c,indf2
  8350  002150  5009               	movf	memset@n^0,w,c
  8351  002152  240F               	addwf	memset@s^0,w,c
  8352  002154  6E0B               	movwf	??_memset^0,c
  8353  002156  500A               	movf	(memset@n+1)^0,w,c
  8354  002158  2010               	addwfc	(memset@s+1)^0,w,c
  8355  00215A  6E0C               	movwf	(??_memset+1)^0,c
  8356  00215C  0EFD               	movlw	253
  8357  00215E  240B               	addwf	??_memset^0,w,c
  8358  002160  6ED9               	movwf	fsr2l,c
  8359  002162  0EFF               	movlw	255
  8360  002164  200C               	addwfc	(??_memset+1)^0,w,c
  8361  002166  6EDA               	movwf	fsr2h,c
  8362  002168  C007  FFDF         	movff	memset@c,indf2
  8363  00216C  500A               	movf	(memset@n+1)^0,w,c
  8364  00216E  E107               	bnz	u2771
  8365  002170  0E07               	movlw	7
  8366  002172  5C09               	subwf	memset@n^0,w,c
  8367  002174  B0D8               	btfsc	status,0,c
  8368  002176  EFBF  F010         	goto	u2771
  8369  00217A  EFC1  F010         	goto	u2770
  8370  00217E                     u2771:
  8371  00217E  EFC3  F010         	goto	l3253
  8372  002182                     u2770:
  8373  002182  EF14  F011         	goto	l1065
  8374  002186                     l3253:
  8375  002186  EE20 F003          	lfsr	2,3
  8376  00218A  500F               	movf	memset@s^0,w,c
  8377  00218C  26D9               	addwf	fsr2l,f,c
  8378  00218E  5010               	movf	(memset@s+1)^0,w,c
  8379  002190  22DA               	addwfc	fsr2h,f,c
  8380  002192  C007  FFDF         	movff	memset@c,indf2
  8381  002196  5009               	movf	memset@n^0,w,c
  8382  002198  240F               	addwf	memset@s^0,w,c
  8383  00219A  6E0B               	movwf	??_memset^0,c
  8384  00219C  500A               	movf	(memset@n+1)^0,w,c
  8385  00219E  2010               	addwfc	(memset@s+1)^0,w,c
  8386  0021A0  6E0C               	movwf	(??_memset+1)^0,c
  8387  0021A2  0EFC               	movlw	252
  8388  0021A4  240B               	addwf	??_memset^0,w,c
  8389  0021A6  6ED9               	movwf	fsr2l,c
  8390  0021A8  0EFF               	movlw	255
  8391  0021AA  200C               	addwfc	(??_memset+1)^0,w,c
  8392  0021AC  6EDA               	movwf	fsr2h,c
  8393  0021AE  C007  FFDF         	movff	memset@c,indf2
  8394  0021B2  500A               	movf	(memset@n+1)^0,w,c
  8395  0021B4  E107               	bnz	u2781
  8396  0021B6  0E09               	movlw	9
  8397  0021B8  5C09               	subwf	memset@n^0,w,c
  8398  0021BA  B0D8               	btfsc	status,0,c
  8399  0021BC  EFE2  F010         	goto	u2781
  8400  0021C0  EFE4  F010         	goto	u2780
  8401  0021C4                     u2781:
  8402  0021C4  EFE6  F010         	goto	l3259
  8403  0021C8                     u2780:
  8404  0021C8  EF14  F011         	goto	l1065
  8405  0021CC                     l3259:
  8406  0021CC  C00F  F00B         	movff	memset@s,??_memset
  8407  0021D0  C010  F00C         	movff	memset@s+1,??_memset+1
  8408  0021D4  1E0B               	comf	??_memset^0,f,c
  8409  0021D6  1E0C               	comf	(??_memset+1)^0,f,c
  8410  0021D8  4A0B               	infsnz	??_memset^0,f,c
  8411  0021DA  2A0C               	incf	(??_memset+1)^0,f,c
  8412  0021DC  0E03               	movlw	3
  8413  0021DE  140B               	andwf	??_memset^0,w,c
  8414  0021E0  6E0D               	movwf	memset@k^0,c
  8415  0021E2  6A0E               	clrf	(memset@k+1)^0,c
  8416  0021E4  500D               	movf	memset@k^0,w,c
  8417  0021E6  260F               	addwf	memset@s^0,f,c
  8418  0021E8  500E               	movf	(memset@k+1)^0,w,c
  8419  0021EA  2210               	addwfc	(memset@s+1)^0,f,c
  8420  0021EC  500D               	movf	memset@k^0,w,c
  8421  0021EE  5E09               	subwf	memset@n^0,f,c
  8422  0021F0  500E               	movf	(memset@k+1)^0,w,c
  8423  0021F2  5A0A               	subwfb	(memset@n+1)^0,f,c
  8424  0021F4  0EFC               	movlw	252
  8425  0021F6  1609               	andwf	memset@n^0,f,c
  8426  0021F8  0EFF               	movlw	255
  8427  0021FA  160A               	andwf	(memset@n+1)^0,f,c
  8428  0021FC  EF0B  F011         	goto	l3267
  8429  002200                     l3261:
  8430  002200  C00F  FFD9         	movff	memset@s,fsr2l
  8431  002204  C010  FFDA         	movff	memset@s+1,fsr2h
  8432  002208  C007  FFDF         	movff	memset@c,indf2
  8433  00220C  0609               	decf	memset@n^0,f,c
  8434  00220E  A0D8               	btfss	status,0,c
  8435  002210  060A               	decf	(memset@n+1)^0,f,c
  8436  002212  4A0F               	infsnz	memset@s^0,f,c
  8437  002214  2A10               	incf	(memset@s+1)^0,f,c
  8438  002216                     l3267:
  8439  002216  5009               	movf	memset@n^0,w,c
  8440  002218  100A               	iorwf	(memset@n+1)^0,w,c
  8441  00221A  A4D8               	btfss	status,2,c
  8442  00221C  EF12  F011         	goto	u2791
  8443  002220  EF14  F011         	goto	u2790
  8444  002224                     u2791:
  8445  002224  EF00  F011         	goto	l3261
  8446  002228                     u2790:
  8447  002228                     l1065:
  8448  002228  0012               	return		;funcret
  8449  00222A                     __end_of_memset:
  8450                           	callstack 0
  8451                           
  8452 ;; *************** function _Lcd_Out *****************
  8453 ;; Defined at:
  8454 ;;		line 95 in file "flex_lcd.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;  y               1    wreg     unsigned char 
  8457 ;;  x               1    7[COMRAM] unsigned char 
  8458 ;;  buffer          2    8[COMRAM] PTR const char 
  8459 ;;		 -> STR_9(17), STR_8(12), STR_6(14), appElemts@dataout(6), 
  8460 ;;		 -> STR_4(6), STR_3(12), datos.display(16), datos(25), 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;  y               1   12[COMRAM] unsigned char 
  8463 ;;  data            1   13[COMRAM] unsigned char 
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  1    wreg      void 
  8466 ;; Registers used:
  8467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8473 ;;      Params:         3       0       0       0       0       0       0       0       0
  8474 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8475 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8476 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8477 ;;Total ram usage:        7 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; Hardware stack levels required when called:    3
  8480 ;; This function calls:
  8481 ;;		_Lcd_Chr_CP
  8482 ;;		_Lcd_Cmd
  8483 ;; This function is called by:
  8484 ;;		_appADC
  8485 ;;		_appBat
  8486 ;;		_appLCD_Init
  8487 ;;		_appElemts
  8488 ;;		_appSubGetData
  8489 ;;		_warning
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           	psect	text50
  8494  002926                     __ptext50:
  8495                           	callstack 0
  8496  002926                     _Lcd_Out:
  8497                           	callstack 26
  8498                           
  8499                           ;incstack = 0
  8500                           ;Lcd_Out@y stored from wreg
  8501  002926  6E0D               	movwf	Lcd_Out@y^0,c
  8502  002928                     
  8503                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  8504  002928  EFAA  F014         	goto	l3293
  8505  00292C                     l3283:
  8506                           
  8507                           ;flex_lcd.c: 101:             data = 128 + x;
  8508  00292C  5008               	movf	Lcd_Out@x^0,w,c
  8509  00292E  0F80               	addlw	128
  8510  002930  6E0E               	movwf	Lcd_Out@data^0,c
  8511                           
  8512                           ;flex_lcd.c: 102:             break;
  8513  002932  EFC7  F014         	goto	l3295
  8514  002936                     l3285:
  8515                           
  8516                           ;flex_lcd.c: 104:             data = 192 + x;
  8517  002936  5008               	movf	Lcd_Out@x^0,w,c
  8518  002938  0FC0               	addlw	192
  8519  00293A  6E0E               	movwf	Lcd_Out@data^0,c
  8520                           
  8521                           ;flex_lcd.c: 105:             break;
  8522  00293C  EFC7  F014         	goto	l3295
  8523  002940                     l3287:
  8524                           
  8525                           ;flex_lcd.c: 107:             data = 148 + x;
  8526  002940  5008               	movf	Lcd_Out@x^0,w,c
  8527  002942  0F94               	addlw	148
  8528  002944  6E0E               	movwf	Lcd_Out@data^0,c
  8529                           
  8530                           ;flex_lcd.c: 108:             break;
  8531  002946  EFC7  F014         	goto	l3295
  8532  00294A                     l3289:
  8533                           
  8534                           ;flex_lcd.c: 110:             data = 212 + x;
  8535  00294A  5008               	movf	Lcd_Out@x^0,w,c
  8536  00294C  0FD4               	addlw	212
  8537  00294E  6E0E               	movwf	Lcd_Out@data^0,c
  8538                           
  8539                           ;flex_lcd.c: 111:             break;
  8540  002950  EFC7  F014         	goto	l3295
  8541  002954                     l3293:
  8542  002954  500D               	movf	Lcd_Out@y^0,w,c
  8543  002956  6E0B               	movwf	??_Lcd_Out^0,c
  8544  002958  6A0C               	clrf	(??_Lcd_Out+1)^0,c
  8545                           
  8546                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8547                           ; Switch size 1, requested type "simple"
  8548                           ; Number of cases is 1, Range of values is 0 to 0
  8549                           ; switch strategies available:
  8550                           ; Name         Instructions Cycles
  8551                           ; simple_byte            4     3 (average)
  8552                           ;	Chosen strategy is simple_byte
  8553  00295A  500C               	movf	(??_Lcd_Out+1)^0,w,c
  8554  00295C  0A00               	xorlw	0	; case 0
  8555  00295E  B4D8               	btfsc	status,2,c
  8556  002960  EFB4  F014         	goto	l4999
  8557  002964  EFC7  F014         	goto	l3295
  8558  002968                     l4999:
  8559                           
  8560                           ; Switch size 1, requested type "simple"
  8561                           ; Number of cases is 4, Range of values is 1 to 4
  8562                           ; switch strategies available:
  8563                           ; Name         Instructions Cycles
  8564                           ; simple_byte           13     7 (average)
  8565                           ;	Chosen strategy is simple_byte
  8566  002968  500B               	movf	??_Lcd_Out^0,w,c
  8567  00296A  0A01               	xorlw	1	; case 1
  8568  00296C  B4D8               	btfsc	status,2,c
  8569  00296E  EF96  F014         	goto	l3283
  8570  002972  0A03               	xorlw	3	; case 2
  8571  002974  B4D8               	btfsc	status,2,c
  8572  002976  EF9B  F014         	goto	l3285
  8573  00297A  0A01               	xorlw	1	; case 3
  8574  00297C  B4D8               	btfsc	status,2,c
  8575  00297E  EFA0  F014         	goto	l3287
  8576  002982  0A07               	xorlw	7	; case 4
  8577  002984  B4D8               	btfsc	status,2,c
  8578  002986  EFA5  F014         	goto	l3289
  8579  00298A  EFC7  F014         	goto	l3295
  8580  00298E                     l3295:
  8581                           
  8582                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  8583  00298E  500E               	movf	Lcd_Out@data^0,w,c
  8584  002990  EC6E  F012         	call	_Lcd_Cmd
  8585                           
  8586                           ;flex_lcd.c: 116:     while(*buffer)
  8587  002994  EFE0  F014         	goto	l3301
  8588  002998                     l3297:
  8589                           
  8590                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  8591  002998  C009  FFF6         	movff	Lcd_Out@buffer,tblptrl
  8592  00299C  C00A  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  8593  0029A0  6AF8               	clrf	tblptru,c
  8594  0029A2  0E07               	movlw	(high __ramtop+-1)
  8595  0029A4  64F7               	cpfsgt	tblptrh,c
  8596  0029A6  D003               	bra	u2807
  8597  0029A8  0008               	tblrd		*
  8598  0029AA  50F5               	movf	tablat,w,c
  8599  0029AC  D005               	bra	u2800
  8600  0029AE                     u2807:
  8601  0029AE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8602  0029B2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8603  0029B6  50E7               	movf	indf1,w,c
  8604  0029B8                     u2800:
  8605  0029B8  ECC7  F011         	call	_Lcd_Chr_CP
  8606  0029BC                     
  8607                           ;flex_lcd.c: 119:         buffer++;
  8608  0029BC  4A09               	infsnz	Lcd_Out@buffer^0,f,c
  8609  0029BE  2A0A               	incf	(Lcd_Out@buffer+1)^0,f,c
  8610  0029C0                     l3301:
  8611                           
  8612                           ;flex_lcd.c: 116:     while(*buffer)
  8613  0029C0  C009  FFF6         	movff	Lcd_Out@buffer,tblptrl
  8614  0029C4  C00A  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  8615  0029C8  6AF8               	clrf	tblptru,c
  8616  0029CA  0E07               	movlw	(high __ramtop+-1)
  8617  0029CC  64F7               	cpfsgt	tblptrh,c
  8618  0029CE  D003               	bra	u2817
  8619  0029D0  0008               	tblrd		*
  8620  0029D2  50F5               	movf	tablat,w,c
  8621  0029D4  D005               	bra	u2810
  8622  0029D6                     u2817:
  8623  0029D6  CFF6 FFE1          	movff	tblptrl,fsr1l
  8624  0029DA  CFF7 FFE2          	movff	tblptrh,fsr1h
  8625  0029DE  50E7               	movf	indf1,w,c
  8626  0029E0                     u2810:
  8627  0029E0  0900               	iorlw	0
  8628  0029E2  A4D8               	btfss	status,2,c
  8629  0029E4  EFF6  F014         	goto	u2821
  8630  0029E8  EFF8  F014         	goto	u2820
  8631  0029EC                     u2821:
  8632  0029EC  EFCC  F014         	goto	l3297
  8633  0029F0                     u2820:
  8634  0029F0  0012               	return		;funcret
  8635  0029F2                     __end_of_Lcd_Out:
  8636                           	callstack 0
  8637                           
  8638 ;; *************** function _Lcd_Cmd *****************
  8639 ;; Defined at:
  8640 ;;		line 175 in file "flex_lcd.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  data            1    wreg     unsigned char 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  data            1    6[COMRAM] unsigned char 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, status,2, status,0
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0
  8655 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8656 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8657 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8658 ;;Total ram usage:        3 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    2
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_Lcd_Init
  8665 ;;		_Lcd_Out
  8666 ;;		_appLCD_Init
  8667 ;;		_appGetElements
  8668 ;;		_warning
  8669 ;;		_Lcd_Out2
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           	psect	text51
  8674  0024DC                     __ptext51:
  8675                           	callstack 0
  8676  0024DC                     _Lcd_Cmd:
  8677                           	callstack 26
  8678                           
  8679                           ;incstack = 0
  8680                           ;Lcd_Cmd@data stored from wreg
  8681  0024DC  6E07               	movwf	Lcd_Cmd@data^0,c
  8682  0024DE                     
  8683                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  8684  0024DE  968C               	bcf	140,3,c	;volatile
  8685  0024E0  948C               	bcf	140,2,c	;volatile
  8686  0024E2                     
  8687                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  8688  0024E2  6A05               	clrf	??_Lcd_Cmd^0,c
  8689  0024E4  AE07               	btfss	Lcd_Cmd@data^0,7,c
  8690  0024E6  D001               	bra	u2605
  8691  0024E8  2A05               	incf	??_Lcd_Cmd^0,f,c
  8692  0024EA                     u2605:
  8693  0024EA  0E01               	movlw	1
  8694  0024EC  1605               	andwf	??_Lcd_Cmd^0,f,c
  8695  0024EE  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8696  0024F0  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8697  0024F2  508C               	movf	140,w,c	;volatile
  8698  0024F4  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8699  0024F6  0B7F               	andlw	-129
  8700  0024F8  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8701  0024FA  6E8C               	movwf	140,c	;volatile
  8702                           
  8703                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  8704  0024FC  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8705  002500  0E06               	movlw	6
  8706  002502  6E06               	movwf	(??_Lcd_Cmd+1)^0,c
  8707  002504                     u2615:
  8708  002504  90D8               	bcf	status,0,c
  8709  002506  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8710  002508  2E06               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  8711  00250A  EF82  F012         	goto	u2615
  8712  00250E  0E01               	movlw	1
  8713  002510  1605               	andwf	??_Lcd_Cmd^0,f,c
  8714  002512  3A05               	swapf	??_Lcd_Cmd^0,f,c
  8715  002514  4605               	rlncf	??_Lcd_Cmd^0,f,c
  8716  002516  4605               	rlncf	??_Lcd_Cmd^0,f,c
  8717  002518  508C               	movf	140,w,c	;volatile
  8718  00251A  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8719  00251C  0BBF               	andlw	-65
  8720  00251E  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8721  002520  6E8C               	movwf	140,c	;volatile
  8722                           
  8723                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  8724  002522  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8725  002526  0E05               	movlw	5
  8726  002528  6E06               	movwf	(??_Lcd_Cmd+1)^0,c
  8727  00252A                     u2625:
  8728  00252A  90D8               	bcf	status,0,c
  8729  00252C  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8730  00252E  2E06               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  8731  002530  EF95  F012         	goto	u2625
  8732  002534  0E01               	movlw	1
  8733  002536  1605               	andwf	??_Lcd_Cmd^0,f,c
  8734  002538  3A05               	swapf	??_Lcd_Cmd^0,f,c
  8735  00253A  4605               	rlncf	??_Lcd_Cmd^0,f,c
  8736  00253C  508C               	movf	140,w,c	;volatile
  8737  00253E  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8738  002540  0BDF               	andlw	-33
  8739  002542  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8740  002544  6E8C               	movwf	140,c	;volatile
  8741                           
  8742                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  8743  002546  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8744  00254A  3A05               	swapf	??_Lcd_Cmd^0,f,c
  8745  00254C  0E0F               	movlw	15
  8746  00254E  1605               	andwf	??_Lcd_Cmd^0,f,c
  8747  002550  0E01               	movlw	1
  8748  002552  1605               	andwf	??_Lcd_Cmd^0,f,c
  8749  002554  3A05               	swapf	??_Lcd_Cmd^0,f,c
  8750  002556  508C               	movf	140,w,c	;volatile
  8751  002558  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8752  00255A  0BEF               	andlw	-17
  8753  00255C  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8754  00255E  6E8C               	movwf	140,c	;volatile
  8755  002560                     
  8756                           ;flex_lcd.c: 182:     _delay(10);
  8757  002560  0E03               	movlw	3
  8758  002562                     u4987:
  8759  002562  2EE8               	decfsz	wreg,f,c
  8760  002564  D7FE               	bra	u4987
  8761  002566  F000               	nop	
  8762  002568                     
  8763                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  8764  002568  868C               	bsf	140,3,c	;volatile
  8765  00256A                     
  8766                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8767  00256A  0E05               	movlw	5
  8768  00256C                     u4997:
  8769  00256C  2EE8               	decfsz	wreg,f,c
  8770  00256E  D7FE               	bra	u4997
  8771  002570                     
  8772                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  8773  002570  968C               	bcf	140,3,c	;volatile
  8774                           
  8775                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  8776  002572  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8777  002576  90D8               	bcf	status,0,c
  8778  002578  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8779  00257A  90D8               	bcf	status,0,c
  8780  00257C  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8781  00257E  90D8               	bcf	status,0,c
  8782  002580  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8783  002582  0E01               	movlw	1
  8784  002584  1605               	andwf	??_Lcd_Cmd^0,f,c
  8785  002586  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8786  002588  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8787  00258A  508C               	movf	140,w,c	;volatile
  8788  00258C  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8789  00258E  0B7F               	andlw	-129
  8790  002590  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8791  002592  6E8C               	movwf	140,c	;volatile
  8792                           
  8793                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  8794  002594  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8795  002598  90D8               	bcf	status,0,c
  8796  00259A  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8797  00259C  90D8               	bcf	status,0,c
  8798  00259E  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8799  0025A0  0E01               	movlw	1
  8800  0025A2  1605               	andwf	??_Lcd_Cmd^0,f,c
  8801  0025A4  3A05               	swapf	??_Lcd_Cmd^0,f,c
  8802  0025A6  4605               	rlncf	??_Lcd_Cmd^0,f,c
  8803  0025A8  4605               	rlncf	??_Lcd_Cmd^0,f,c
  8804  0025AA  508C               	movf	140,w,c	;volatile
  8805  0025AC  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8806  0025AE  0BBF               	andlw	-65
  8807  0025B0  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8808  0025B2  6E8C               	movwf	140,c	;volatile
  8809                           
  8810                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  8811  0025B4  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8812  0025B8  90D8               	bcf	status,0,c
  8813  0025BA  3205               	rrcf	??_Lcd_Cmd^0,f,c
  8814  0025BC  0E01               	movlw	1
  8815  0025BE  1605               	andwf	??_Lcd_Cmd^0,f,c
  8816  0025C0  3A05               	swapf	??_Lcd_Cmd^0,f,c
  8817  0025C2  4605               	rlncf	??_Lcd_Cmd^0,f,c
  8818  0025C4  508C               	movf	140,w,c	;volatile
  8819  0025C6  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8820  0025C8  0BDF               	andlw	-33
  8821  0025CA  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8822  0025CC  6E8C               	movwf	140,c	;volatile
  8823                           
  8824                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  8825  0025CE  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8826  0025D2  0E01               	movlw	1
  8827  0025D4  1605               	andwf	??_Lcd_Cmd^0,f,c
  8828  0025D6  3A05               	swapf	??_Lcd_Cmd^0,f,c
  8829  0025D8  508C               	movf	140,w,c	;volatile
  8830  0025DA  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8831  0025DC  0BEF               	andlw	-17
  8832  0025DE  1805               	xorwf	??_Lcd_Cmd^0,w,c
  8833  0025E0  6E8C               	movwf	140,c	;volatile
  8834  0025E2                     
  8835                           ;flex_lcd.c: 190:     _delay(10);
  8836  0025E2  0E03               	movlw	3
  8837  0025E4                     u5007:
  8838  0025E4  2EE8               	decfsz	wreg,f,c
  8839  0025E6  D7FE               	bra	u5007
  8840  0025E8  F000               	nop	
  8841  0025EA                     
  8842                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  8843  0025EA  868C               	bsf	140,3,c	;volatile
  8844  0025EC                     
  8845                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8846  0025EC  0E05               	movlw	5
  8847  0025EE                     u5017:
  8848  0025EE  2EE8               	decfsz	wreg,f,c
  8849  0025F0  D7FE               	bra	u5017
  8850  0025F2                     
  8851                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  8852  0025F2  968C               	bcf	140,3,c	;volatile
  8853  0025F4                     
  8854                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8855  0025F4  0E16               	movlw	22
  8856  0025F6  6E05               	movwf	??_Lcd_Cmd^0,c
  8857  0025F8  0E6C               	movlw	108
  8858  0025FA                     u5027:
  8859  0025FA  2EE8               	decfsz	wreg,f,c
  8860  0025FC  D7FE               	bra	u5027
  8861  0025FE  2E05               	decfsz	??_Lcd_Cmd^0,f,c
  8862  002600  D7FC               	bra	u5027
  8863  002602  D000               	nop2	
  8864  002604  0012               	return		;funcret
  8865  002606                     __end_of_Lcd_Cmd:
  8866                           	callstack 0
  8867                           
  8868 ;; *************** function _Lcd_Chr_CP *****************
  8869 ;; Defined at:
  8870 ;;		line 151 in file "flex_lcd.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  data            1    wreg     char 
  8873 ;; Auto vars:     Size  Location     Type
  8874 ;;  data            1    6[COMRAM] char 
  8875 ;; Return value:  Size  Location     Type
  8876 ;;                  1    wreg      void 
  8877 ;; Registers used:
  8878 ;;		wreg, status,2, status,0
  8879 ;; Tracked objects:
  8880 ;;		On entry : 0/0
  8881 ;;		On exit  : 0/0
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8884 ;;      Params:         0       0       0       0       0       0       0       0       0
  8885 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8886 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8887 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8888 ;;Total ram usage:        3 bytes
  8889 ;; Hardware stack levels used:    1
  8890 ;; Hardware stack levels required when called:    2
  8891 ;; This function calls:
  8892 ;;		Nothing
  8893 ;; This function is called by:
  8894 ;;		_Lcd_Out
  8895 ;;		_Lcd_Out2
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           	psect	text52
  8900  00238E                     __ptext52:
  8901                           	callstack 0
  8902  00238E                     _Lcd_Chr_CP:
  8903                           	callstack 26
  8904                           
  8905                           ;incstack = 0
  8906                           ;Lcd_Chr_CP@data stored from wreg
  8907  00238E  6E07               	movwf	Lcd_Chr_CP@data^0,c
  8908  002390                     
  8909                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  8910  002390  968C               	bcf	140,3,c	;volatile
  8911                           
  8912                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  8913  002392  848C               	bsf	140,2,c	;volatile
  8914  002394                     
  8915                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  8916  002394  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8917  002398  0E07               	movlw	7
  8918  00239A  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8919  00239C                     u2635:
  8920  00239C  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  8921  00239E  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  8922  0023A0  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8923  0023A2  EFCE  F011         	goto	u2635
  8924  0023A6  0E01               	movlw	1
  8925  0023A8  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  8926  0023AA  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  8927  0023AC  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  8928  0023AE  508C               	movf	140,w,c	;volatile
  8929  0023B0  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  8930  0023B2  0B7F               	andlw	-129
  8931  0023B4  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  8932  0023B6  6E8C               	movwf	140,c	;volatile
  8933                           
  8934                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  8935  0023B8  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8936  0023BC  0E06               	movlw	6
  8937  0023BE  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8938  0023C0                     u2645:
  8939  0023C0  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  8940  0023C2  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  8941  0023C4  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8942  0023C6  EFE0  F011         	goto	u2645
  8943  0023CA  0E01               	movlw	1
  8944  0023CC  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  8945  0023CE  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  8946  0023D0  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  8947  0023D2  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  8948  0023D4  508C               	movf	140,w,c	;volatile
  8949  0023D6  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  8950  0023D8  0BBF               	andlw	-65
  8951  0023DA  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  8952  0023DC  6E8C               	movwf	140,c	;volatile
  8953                           
  8954                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  8955  0023DE  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8956  0023E2  0E05               	movlw	5
  8957  0023E4  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8958  0023E6                     u2655:
  8959  0023E6  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  8960  0023E8  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  8961  0023EA  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8962  0023EC  EFF3  F011         	goto	u2655
  8963  0023F0  0E01               	movlw	1
  8964  0023F2  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  8965  0023F4  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  8966  0023F6  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  8967  0023F8  508C               	movf	140,w,c	;volatile
  8968  0023FA  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  8969  0023FC  0BDF               	andlw	-33
  8970  0023FE  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  8971  002400  6E8C               	movwf	140,c	;volatile
  8972                           
  8973                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  8974  002402  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8975  002406  0E04               	movlw	4
  8976  002408  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8977  00240A                     u2665:
  8978  00240A  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  8979  00240C  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  8980  00240E  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8981  002410  EF05  F012         	goto	u2665
  8982  002414  0E01               	movlw	1
  8983  002416  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  8984  002418  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  8985  00241A  508C               	movf	140,w,c	;volatile
  8986  00241C  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  8987  00241E  0BEF               	andlw	-17
  8988  002420  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  8989  002422  6E8C               	movwf	140,c	;volatile
  8990  002424                     
  8991                           ;flex_lcd.c: 159:     _delay(10);
  8992  002424  0E03               	movlw	3
  8993  002426                     u5037:
  8994  002426  2EE8               	decfsz	wreg,f,c
  8995  002428  D7FE               	bra	u5037
  8996  00242A  F000               	nop	
  8997  00242C                     
  8998                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  8999  00242C  868C               	bsf	140,3,c	;volatile
  9000  00242E                     
  9001                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9002  00242E  0E05               	movlw	5
  9003  002430                     u5047:
  9004  002430  2EE8               	decfsz	wreg,f,c
  9005  002432  D7FE               	bra	u5047
  9006  002434                     
  9007                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  9008  002434  968C               	bcf	140,3,c	;volatile
  9009                           
  9010                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9011  002436  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9012  00243A  0E03               	movlw	3
  9013  00243C  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9014  00243E                     u2675:
  9015  00243E  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  9016  002440  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  9017  002442  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9018  002444  EF1F  F012         	goto	u2675
  9019  002448  0E01               	movlw	1
  9020  00244A  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  9021  00244C  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  9022  00244E  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  9023  002450  508C               	movf	140,w,c	;volatile
  9024  002452  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  9025  002454  0B7F               	andlw	-129
  9026  002456  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  9027  002458  6E8C               	movwf	140,c	;volatile
  9028                           
  9029                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9030  00245A  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9031  00245E  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  9032  002460  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  9033  002462  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  9034  002464  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  9035  002466  0E01               	movlw	1
  9036  002468  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  9037  00246A  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  9038  00246C  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  9039  00246E  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  9040  002470  508C               	movf	140,w,c	;volatile
  9041  002472  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  9042  002474  0BBF               	andlw	-65
  9043  002476  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  9044  002478  6E8C               	movwf	140,c	;volatile
  9045                           
  9046                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9047  00247A  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9048  00247E  0E01               	movlw	1
  9049  002480  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9050  002482                     u2685:
  9051  002482  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  9052  002484  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  9053  002486  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9054  002488  EF41  F012         	goto	u2685
  9055  00248C  0E01               	movlw	1
  9056  00248E  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  9057  002490  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  9058  002492  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  9059  002494  508C               	movf	140,w,c	;volatile
  9060  002496  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  9061  002498  0BDF               	andlw	-33
  9062  00249A  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  9063  00249C  6E8C               	movwf	140,c	;volatile
  9064                           
  9065                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  9066  00249E  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9067  0024A2  0E01               	movlw	1
  9068  0024A4  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  9069  0024A6  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  9070  0024A8  508C               	movf	140,w,c	;volatile
  9071  0024AA  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  9072  0024AC  0BEF               	andlw	-17
  9073  0024AE  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  9074  0024B0  6E8C               	movwf	140,c	;volatile
  9075  0024B2                     
  9076                           ;flex_lcd.c: 167:     _delay(10);
  9077  0024B2  0E03               	movlw	3
  9078  0024B4                     u5057:
  9079  0024B4  2EE8               	decfsz	wreg,f,c
  9080  0024B6  D7FE               	bra	u5057
  9081  0024B8  F000               	nop	
  9082  0024BA                     
  9083                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  9084  0024BA  868C               	bsf	140,3,c	;volatile
  9085  0024BC                     
  9086                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9087  0024BC  0E05               	movlw	5
  9088  0024BE                     u5067:
  9089  0024BE  2EE8               	decfsz	wreg,f,c
  9090  0024C0  D7FE               	bra	u5067
  9091  0024C2                     
  9092                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  9093  0024C2  968C               	bcf	140,3,c	;volatile
  9094  0024C4                     
  9095                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9096  0024C4  0E05               	movlw	5
  9097  0024C6                     u5077:
  9098  0024C6  2EE8               	decfsz	wreg,f,c
  9099  0024C8  D7FE               	bra	u5077
  9100  0024CA                     
  9101                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9102  0024CA  0E16               	movlw	22
  9103  0024CC  6E05               	movwf	??_Lcd_Chr_CP^0,c
  9104  0024CE  0E6C               	movlw	108
  9105  0024D0                     u5087:
  9106  0024D0  2EE8               	decfsz	wreg,f,c
  9107  0024D2  D7FE               	bra	u5087
  9108  0024D4  2E05               	decfsz	??_Lcd_Chr_CP^0,f,c
  9109  0024D6  D7FC               	bra	u5087
  9110  0024D8  D000               	nop2	
  9111  0024DA  0012               	return		;funcret
  9112  0024DC                     __end_of_Lcd_Chr_CP:
  9113                           	callstack 0
  9114                           
  9115 ;; *************** function _isrL *****************
  9116 ;; Defined at:
  9117 ;;		line 29 in file "main.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;		None
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;		None
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  1    wreg      void 
  9124 ;; Registers used:
  9125 ;;		wreg, status,2, status,0
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9131 ;;      Params:         0       0       0       0       0       0       0       0       0
  9132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9133 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9134 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9135 ;;Total ram usage:        3 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; Hardware stack levels required when called:    1
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		Interrupt level 1
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	intcodelo
  9146  000018                     __pintcodelo:
  9147                           	callstack 0
  9148  000018                     _isrL:
  9149                           	callstack 19
  9150                           
  9151                           ;incstack = 0
  9152  000018  805B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9153  00001A  CFD8 F002          	movff	status,??_isrL
  9154  00001E  CFE8 F003          	movff	wreg,??_isrL+1
  9155  000022  CFE0 F004          	movff	bsr,??_isrL+2
  9156  000026                     
  9157                           ;main.c: 31:     if(TMR3IE && TMR3IF)
  9158  000026  A2A0               	btfss	4000,1,c	;volatile
  9159  000028  EF18  F000         	goto	i1u476_21
  9160  00002C  EF1A  F000         	goto	i1u476_20
  9161  000030                     i1u476_21:
  9162  000030  EF56  F000         	goto	i1l99
  9163  000034                     i1u476_20:
  9164  000034  A2A1               	btfss	4001,1,c	;volatile
  9165  000036  EF1F  F000         	goto	i1u477_21
  9166  00003A  EF21  F000         	goto	i1u477_20
  9167  00003E                     i1u477_21:
  9168  00003E  EF56  F000         	goto	i1l99
  9169  000042                     i1u477_20:
  9170  000042                     
  9171                           ;main.c: 32:     {;main.c: 33:         TMR3IF = 0;
  9172  000042  92A1               	bcf	4001,1,c	;volatile
  9173  000044                     
  9174                           ;main.c: 34:         datos.counter++;
  9175  000044  0100               	movlb	0	; () banked
  9176  000046  2BB8               	incf	_datos& (0+255),f,b
  9177  000048                     
  9178                           ; BSR set to: 0
  9179                           ;main.c: 35:         if((datos.counter == 5) && (datos.state == 0 || datos.state == 2))
  9180  000048  0E05               	movlw	5
  9181  00004A  19B8               	xorwf	_datos& (0+255),w,b
  9182  00004C  A4D8               	btfss	status,2,c
  9183  00004E  EF2B  F000         	goto	i1u478_21
  9184  000052  EF2D  F000         	goto	i1u478_20
  9185  000056                     i1u478_21:
  9186  000056  EF46  F000         	goto	i1l4855
  9187  00005A                     i1u478_20:
  9188  00005A                     
  9189                           ; BSR set to: 0
  9190  00005A  51BB               	movf	(_datos+3)& (0+255),w,b
  9191  00005C  B4D8               	btfsc	status,2,c
  9192  00005E  EF33  F000         	goto	i1u479_21
  9193  000062  EF35  F000         	goto	i1u479_20
  9194  000066                     i1u479_21:
  9195  000066  EF3E  F000         	goto	i1l4851
  9196  00006A                     i1u479_20:
  9197  00006A                     
  9198                           ; BSR set to: 0
  9199  00006A  0E02               	movlw	2
  9200  00006C  19BB               	xorwf	(_datos+3)& (0+255),w,b
  9201  00006E  A4D8               	btfss	status,2,c
  9202  000070  EF3C  F000         	goto	i1u480_21
  9203  000074  EF3E  F000         	goto	i1u480_20
  9204  000078                     i1u480_21:
  9205  000078  EF46  F000         	goto	i1l4855
  9206  00007C                     i1u480_20:
  9207  00007C                     i1l4851:
  9208                           
  9209                           ; BSR set to: 0
  9210                           ;main.c: 36:         {;main.c: 37:             datos.counter = 0;
  9211  00007C  0E00               	movlw	0
  9212  00007E  6FB8               	movwf	_datos& (0+255),b
  9213  000080                     
  9214                           ; BSR set to: 0
  9215                           ;main.c: 38:             datos.nextFunc = appStateRecolectData;
  9216  000080  0E94               	movlw	low _appStateRecolectData
  9217  000082  6FCF               	movwf	(_datos+23)& (0+255),b
  9218  000084  0E2D               	movlw	high _appStateRecolectData
  9219  000086  6FD0               	movwf	(_datos+24)& (0+255),b
  9220                           
  9221                           ;main.c: 39:         }
  9222  000088  EF52  F000         	goto	i1l4859
  9223  00008C                     i1l4855:
  9224                           
  9225                           ; BSR set to: 0
  9226  00008C  05BB               	decf	(_datos+3)& (0+255),w,b
  9227  00008E  A4D8               	btfss	status,2,c
  9228  000090  EF4C  F000         	goto	i1u481_21
  9229  000094  EF4E  F000         	goto	i1u481_20
  9230  000098                     i1u481_21:
  9231  000098  EF52  F000         	goto	i1l4859
  9232  00009C                     i1u481_20:
  9233  00009C                     
  9234                           ; BSR set to: 0
  9235                           ;main.c: 41:         {;main.c: 42:             datos.nextFunc = appGetElements;
  9236  00009C  0E1C               	movlw	low _appGetElements
  9237  00009E  6FCF               	movwf	(_datos+23)& (0+255),b
  9238  0000A0  0E2F               	movlw	high _appGetElements
  9239  0000A2  6FD0               	movwf	(_datos+24)& (0+255),b
  9240  0000A4                     i1l4859:
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;main.c: 44:         TMR3 = 20536;
  9244  0000A4  0E50               	movlw	80
  9245  0000A6  6EB3               	movwf	179,c	;volatile
  9246  0000A8  0E38               	movlw	56
  9247  0000AA  6EB2               	movwf	178,c	;volatile
  9248  0000AC                     i1l99:
  9249  0000AC  C004  FFE0         	movff	??_isrL+2,bsr
  9250  0000B0  C003  FFE8         	movff	??_isrL+1,wreg
  9251  0000B4  C002  FFD8         	movff	??_isrL,status
  9252  0000B8  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9253  0000BA  0010               	retfie	
  9254  0000BC                     __end_of_isrL:
  9255                           	callstack 0
  9256                           
  9257 ;; *************** function _isrH *****************
  9258 ;; Defined at:
  9259 ;;		line 47 in file "main.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  read            1    0        unsigned char 
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9273 ;;      Params:         0       0       0       0       0       0       0       0       0
  9274 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9276 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9277 ;;Total ram usage:        1 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; This function calls:
  9280 ;;		Nothing
  9281 ;; This function is called by:
  9282 ;;		Interrupt level 2
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           	psect	intcode
  9287  000008                     __pintcode:
  9288                           	callstack 0
  9289  000008                     _isrH:
  9290                           	callstack 19
  9291                           
  9292                           ;incstack = 0
  9293  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9294  00000A  EDF7  F017         	call	int_func,f	;refresh shadow registers
  9295  00000E                     
  9296                           	psect	intcode_body
  9297  002FEE                     __pintcode_body:
  9298                           	callstack 19
  9299  002FEE                     int_func:
  9300                           	callstack 19
  9301  002FEE  0006               	pop		; remove dummy address from shadow register refresh
  9302  002FF0                     
  9303                           ;main.c: 49:     if(TMR0IE && TMR0IF)
  9304  002FF0  AAF2               	btfss	4082,5,c	;volatile
  9305  002FF2  EFFD  F017         	goto	i2u392_41
  9306  002FF6  EFFF  F017         	goto	i2u392_40
  9307  002FFA                     i2u392_41:
  9308  002FFA  EF0E  F018         	goto	i2l4167
  9309  002FFE                     i2u392_40:
  9310  002FFE  A4F2               	btfss	4082,2,c	;volatile
  9311  003000  EF04  F018         	goto	i2u393_41
  9312  003004  EF06  F018         	goto	i2u393_40
  9313  003008                     i2u393_41:
  9314  003008  EF0E  F018         	goto	i2l4167
  9315  00300C                     i2u393_40:
  9316  00300C                     
  9317                           ;main.c: 50:     {;main.c: 51:         TMR0IF = 0;
  9318  00300C  94F2               	bcf	4082,2,c	;volatile
  9319  00300E                     
  9320                           ;main.c: 52:         datos.state = 10;
  9321  00300E  0E0A               	movlw	10
  9322  003010  0100               	movlb	0	; () banked
  9323  003012  6FBB               	movwf	(_datos+3)& (0+255),b
  9324  003014                     
  9325                           ; BSR set to: 0
  9326                           ;main.c: 53:         datos.nextFunc = warning;
  9327  003014  0EDA               	movlw	low _warning
  9328  003016  6FCF               	movwf	(_datos+23)& (0+255),b
  9329  003018  0E31               	movlw	high _warning
  9330  00301A  6FD0               	movwf	(_datos+24)& (0+255),b
  9331  00301C                     i2l4167:
  9332                           
  9333                           ;main.c: 55:     if(RCIF && RCIE)
  9334  00301C  AA9E               	btfss	3998,5,c	;volatile
  9335  00301E  EF13  F018         	goto	i2u394_41
  9336  003022  EF15  F018         	goto	i2u394_40
  9337  003026                     i2u394_41:
  9338  003026  EF24  F018         	goto	i2l106
  9339  00302A                     i2u394_40:
  9340  00302A  AA9D               	btfss	3997,5,c	;volatile
  9341  00302C  EF1A  F018         	goto	i2u395_41
  9342  003030  EF1C  F018         	goto	i2u395_40
  9343  003034                     i2u395_41:
  9344  003034  EF24  F018         	goto	i2l106
  9345  003038                     i2u395_40:
  9346  003038                     
  9347                           ;main.c: 56:     {;main.c: 57:         datos.state = 10;
  9348  003038  0E0A               	movlw	10
  9349  00303A  0100               	movlb	0	; () banked
  9350  00303C  6FBB               	movwf	(_datos+3)& (0+255),b
  9351  00303E                     
  9352                           ; BSR set to: 0
  9353                           ;main.c: 58:         datos.nextFunc = warning;
  9354  00303E  0EDA               	movlw	low _warning
  9355  003040  6FCF               	movwf	(_datos+23)& (0+255),b
  9356  003042  0E31               	movlw	high _warning
  9357  003044  6FD0               	movwf	(_datos+24)& (0+255),b
  9358  003046                     
  9359                           ; BSR set to: 0
  9360  003046  50AE               	movf	174,w,c	;volatile
  9361  003048                     i2l106:
  9362  003048  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9363  00304A  0011               	retfie		f
  9364  00304C                     __end_of_isrH:
  9365                           	callstack 0
  9366                           
  9367                           	psect	rparam
  9368  0000                     
  9369                           	psect	temp
  9370  00005B                     btemp:
  9371                           	callstack 0
  9372  00005B                     	ds	1
  9373  0000                     int$flags	set	btemp
  9374  0000                     wtemp8	set	btemp+1
  9375  0000                     ttemp5	set	btemp+1
  9376  0000                     ttemp6	set	btemp+4
  9377  0000                     ttemp7	set	btemp+8
  9378                           
  9379                           	psect	idloc
  9380                           
  9381                           ;Config register IDLOC0 @ 0x200000
  9382                           ;	unspecified, using default values
  9383  200000                     	org	2097152
  9384  200000  FF                 	db	255
  9385                           
  9386                           ;Config register IDLOC1 @ 0x200001
  9387                           ;	unspecified, using default values
  9388  200001                     	org	2097153
  9389  200001  FF                 	db	255
  9390                           
  9391                           ;Config register IDLOC2 @ 0x200002
  9392                           ;	unspecified, using default values
  9393  200002                     	org	2097154
  9394  200002  FF                 	db	255
  9395                           
  9396                           ;Config register IDLOC3 @ 0x200003
  9397                           ;	unspecified, using default values
  9398  200003                     	org	2097155
  9399  200003  FF                 	db	255
  9400                           
  9401                           ;Config register IDLOC4 @ 0x200004
  9402                           ;	unspecified, using default values
  9403  200004                     	org	2097156
  9404  200004  FF                 	db	255
  9405                           
  9406                           ;Config register IDLOC5 @ 0x200005
  9407                           ;	unspecified, using default values
  9408  200005                     	org	2097157
  9409  200005  FF                 	db	255
  9410                           
  9411                           ;Config register IDLOC6 @ 0x200006
  9412                           ;	unspecified, using default values
  9413  200006                     	org	2097158
  9414  200006  FF                 	db	255
  9415                           
  9416                           ;Config register IDLOC7 @ 0x200007
  9417                           ;	unspecified, using default values
  9418  200007                     	org	2097159
  9419  200007  FF                 	db	255
  9420                           
  9421                           	psect	config
  9422                           
  9423                           ;Config register CONFIG1L @ 0x300000
  9424                           ;	PLL Prescaler Selection bits
  9425                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9426                           ;	System Clock Postscaler Selection bits
  9427                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9428                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9429                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9430  300000                     	org	3145728
  9431  300000  00                 	db	0
  9432                           
  9433                           ;Config register CONFIG1H @ 0x300001
  9434                           ;	Oscillator Selection bits
  9435                           ;	FOSC = HS, HS oscillator (HS)
  9436                           ;	Fail-Safe Clock Monitor Enable bit
  9437                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9438                           ;	Internal/External Oscillator Switchover bit
  9439                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9440  300001                     	org	3145729
  9441  300001  0C                 	db	12
  9442                           
  9443                           ;Config register CONFIG2L @ 0x300002
  9444                           ;	Power-up Timer Enable bit
  9445                           ;	PWRT = OFF, PWRT disabled
  9446                           ;	Brown-out Reset Enable bits
  9447                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9448                           ;	Brown-out Reset Voltage bits
  9449                           ;	BORV = 3, Minimum setting 2.05V
  9450                           ;	USB Voltage Regulator Enable bit
  9451                           ;	VREGEN = OFF, USB voltage regulator disabled
  9452  300002                     	org	3145730
  9453  300002  19                 	db	25
  9454                           
  9455                           ;Config register CONFIG2H @ 0x300003
  9456                           ;	Watchdog Timer Enable bit
  9457                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9458                           ;	Watchdog Timer Postscale Select bits
  9459                           ;	WDTPS = 32768, 1:32768
  9460  300003                     	org	3145731
  9461  300003  1E                 	db	30
  9462                           
  9463                           ; Padding undefined space
  9464  300004                     	org	3145732
  9465  300004  FF                 	db	255
  9466                           
  9467                           ;Config register CONFIG3H @ 0x300005
  9468                           ;	CCP2 MUX bit
  9469                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9470                           ;	PORTB A/D Enable bit
  9471                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9472                           ;	Low-Power Timer 1 Oscillator Enable bit
  9473                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9474                           ;	MCLR Pin Enable bit
  9475                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9476  300005                     	org	3145733
  9477  300005  81                 	db	129
  9478                           
  9479                           ;Config register CONFIG4L @ 0x300006
  9480                           ;	Stack Full/Underflow Reset Enable bit
  9481                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9482                           ;	Single-Supply ICSP Enable bit
  9483                           ;	LVP = OFF, Single-Supply ICSP disabled
  9484                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9485                           ;	ICPRT = OFF, ICPORT disabled
  9486                           ;	Extended Instruction Set Enable bit
  9487                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9488                           ;	Background Debugger Enable bit
  9489                           ;	DEBUG = 0x1, unprogrammed default
  9490  300006                     	org	3145734
  9491  300006  81                 	db	129
  9492                           
  9493                           ; Padding undefined space
  9494  300007                     	org	3145735
  9495  300007  FF                 	db	255
  9496                           
  9497                           ;Config register CONFIG5L @ 0x300008
  9498                           ;	Code Protection bit
  9499                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9500                           ;	Code Protection bit
  9501                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9502                           ;	Code Protection bit
  9503                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9504                           ;	Code Protection bit
  9505                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9506  300008                     	org	3145736
  9507  300008  0F                 	db	15
  9508                           
  9509                           ;Config register CONFIG5H @ 0x300009
  9510                           ;	Boot Block Code Protection bit
  9511                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9512                           ;	Data EEPROM Code Protection bit
  9513                           ;	CPD = OFF, Data EEPROM is not code-protected
  9514  300009                     	org	3145737
  9515  300009  C0                 	db	192
  9516                           
  9517                           ;Config register CONFIG6L @ 0x30000A
  9518                           ;	Write Protection bit
  9519                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9520                           ;	Write Protection bit
  9521                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9522                           ;	Write Protection bit
  9523                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9524                           ;	Write Protection bit
  9525                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9526  30000A                     	org	3145738
  9527  30000A  0F                 	db	15
  9528                           
  9529                           ;Config register CONFIG6H @ 0x30000B
  9530                           ;	Configuration Register Write Protection bit
  9531                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9532                           ;	Boot Block Write Protection bit
  9533                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9534                           ;	Data EEPROM Write Protection bit
  9535                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9536  30000B                     	org	3145739
  9537  30000B  E0                 	db	224
  9538                           
  9539                           ;Config register CONFIG7L @ 0x30000C
  9540                           ;	Table Read Protection bit
  9541                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9542                           ;	Table Read Protection bit
  9543                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9544                           ;	Table Read Protection bit
  9545                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9546                           ;	Table Read Protection bit
  9547                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9548  30000C                     	org	3145740
  9549  30000C  0F                 	db	15
  9550                           
  9551                           ;Config register CONFIG7H @ 0x30000D
  9552                           ;	Boot Block Table Read Protection bit
  9553                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9554  30000D                     	org	3145741
  9555  30000D  40                 	db	64
  9556                           tosu	equ	0xFFF
  9557                           tosh	equ	0xFFE
  9558                           tosl	equ	0xFFD
  9559                           stkptr	equ	0xFFC
  9560                           pclatu	equ	0xFFB
  9561                           pclath	equ	0xFFA
  9562                           pcl	equ	0xFF9
  9563                           tblptru	equ	0xFF8
  9564                           tblptrh	equ	0xFF7
  9565                           tblptrl	equ	0xFF6
  9566                           tablat	equ	0xFF5
  9567                           prodh	equ	0xFF4
  9568                           prodl	equ	0xFF3
  9569                           indf0	equ	0xFEF
  9570                           postinc0	equ	0xFEE
  9571                           postdec0	equ	0xFED
  9572                           preinc0	equ	0xFEC
  9573                           plusw0	equ	0xFEB
  9574                           fsr0h	equ	0xFEA
  9575                           fsr0l	equ	0xFE9
  9576                           wreg	equ	0xFE8
  9577                           indf1	equ	0xFE7
  9578                           postinc1	equ	0xFE6
  9579                           postdec1	equ	0xFE5
  9580                           preinc1	equ	0xFE4
  9581                           plusw1	equ	0xFE3
  9582                           fsr1h	equ	0xFE2
  9583                           fsr1l	equ	0xFE1
  9584                           bsr	equ	0xFE0
  9585                           indf2	equ	0xFDF
  9586                           postinc2	equ	0xFDE
  9587                           postdec2	equ	0xFDD
  9588                           preinc2	equ	0xFDC
  9589                           plusw2	equ	0xFDB
  9590                           fsr2h	equ	0xFDA
  9591                           fsr2l	equ	0xFD9
  9592                           status	equ	0xFD8

Data Sizes:
    Strings     89
    Constant    0
    Data        25
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     46     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    appSubGiveElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@elements	PTR const short  size(2) Largest target is 25
		 -> datos.elements(BANK0[2]), datos(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2199_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_9(CODE[17]), STR_8(CODE[12]), STR_6(CODE[14]), appElemts@dataout(BANK0[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[12]), datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    S196_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _warning->_Lcd_Out
    _appADC->___awmod
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_setServo
    _appInit->_uart_Init
    _uart_Init->___lldiv
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _appSubGiveElemts->_setServo
    _setServo->_setServoAngle
    _sprintf->___awmod
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appBat
    _appStateRecolectData->_appElemts
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   79816
                                             44 BANK0      2     2      0
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
                            _warning *
 ---------------------------------------------------------------------------------
 (1) _warning                                              2     2      0    2077
                                             14 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   55535
                             _appADC
                             _appBat
                     _appCounterStop
                          _appElemts
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            8     6      2   13647
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appCounterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   20214
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20768
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                              8 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     631
                                             72 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             47 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     613
                                             82 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0    1432
                           _setServo
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    2946
                            _adcInit
                     _appCounterInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
                          _servoInit
                          _uart_Init
 ---------------------------------------------------------------------------------
 (2) _uart_Init                                            4     0      4     412
                                             17 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _servoInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2392
                                             14 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              7 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appCounterInit                                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   17826
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                   _appSubGiveElemts
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGiveElemts                                     2     0      2     982
                                             12 COMRAM     2     0      2
                    _appCounterStart
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _setServo                                             4     2      2     906
                                              8 COMRAM     4     2      2
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (3) _setServoAngle                                        4     3      1     208
                                              4 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _appCounterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   16668
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   11573
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   10541
                                             77 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   10011
                                             67 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1795
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     692
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1403
                                              4 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    1901
                                              7 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appSubGiveElemts
       _appCounterStart
       _setServo
         _setServoAngle
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appCounterInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
     _servoInit
     _uart_Init
       ___lldiv
   _appStateInitial *
     _setServo
       _setServoAngle
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appCounterStop
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _setServo
       _setServoAngle
   _warning *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CB      20        0.0%
DATA                 0      0      CB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 02 03:56:08 2021

                 ___fldiv@aexp 0048                   ___fldiv@bexp 0047                   ___fldiv@sign 0040  
                           l30 3352                             l32 3360                             l33 3368  
                           l42 1A3A                             l27 3190                             l39 1D9A  
                           bsr 000FE0            ___wmul@multiplicand 0007                            l133 1852  
                          l230 261A                            l231 2620                            l240 26CA  
                          l224 34C2                            l161 29F0                            l242 26D0  
                          l146 2B9E                            l243 26D6                            l251 346A  
                          l147 2BEA                            l180 2604                            l244 271C  
                          l228 2614                            l260 34FE                            l340 34F6  
                          l148 2C3C                            l245 2720                            l237 270E  
                          l254 3440                            l263 34EE                            l183 2EA8  
                          l351 31D8                            l504 20B2                            l424 2D92  
                          l177 24DA                            l361 2924                            l257 34E4  
                          l417 2D82                            l337 33A4                            l345 2E24  
                          l266 3502                            l274 3266                            l354 2F8A  
                          l364 34D8                            l348 31BC                            l517 238C  
                          l269 34FA                            l390 3490                            l634 2CEE  
                          l387 30A2                            l687 2826                            l972 101E  
                          l974 0E7E                            l983 0EC4                            l985 0F3C  
                          l977 0E42                            l986 0F2A                adcInit@ADC_PINs 0006  
                          _PR2 000FCB                            _abs 32EE                            _pad 2ABC  
                 ___awmod@sign 0061                            tosl 000FFD                            wreg 000FE8  
                 ___flmul@aexp 0028                   ___flmul@bexp 0029                   ___flmul@sign 0023  
                 ___flmul@temp 002E                   ___flmul@prod 002A                   ___fltol@exp1 0052  
                         l1011 0B16                           l1004 0920                           l1021 0C46  
                         l1013 0B8E                           l1014 0B7C                           l1112 2B42  
                         l1120 142A                           l1008 0C84                           l1114 2B7C  
                         l1122 1432                           l1211 1F22                           ?_abs 0017  
                         l1140 1668                           l1052 1B2A                           l1109 2B00  
                         l1045 1A92                           l1214 1F2A                           l1240 2ABA  
                         l1048 1BEE                           l1065 2228                           l1217 33DC  
                         l1225 3146                           l1154 1112                           l1251 3504  
                         l1059 1B86                           l1180 3324                           l1078 30F4  
                         l1183 332C                           l1175 2FE4                           l1248 32AA  
                         l1176 2FEC                           l1257 3412                           l1169 138A  
                         l3201 267C                           l4001 3092                           l3203 268E  
                         l4011 309C                           l4003 3094                           l3141 24DE  
                         l3301 29C0                           l3213 26DC                           l3205 26A2  
                         l4013 309E                           l4005 3096                           l3151 2570  
                         l3143 24E2                           l3311 167A                           l3207 26B4  
                         l4015 30A0                           l4007 3098                           l3231 3330  
                         l4111 31E0                           l3161 25F4                           l3153 25E2  
                         l3145 2560                           l3241 20D2                           l3321 16B8  
                         l3313 168C                           l3209 26C4                           l4041 34C8  
                         l3401 2BBC                           l4009 309A                           l3233 3342  
                         l4113 31F8                           l3171 242E                           l3163 2390  
                         l3155 25EA                           l3147 2568                           l3243 20DE  
                         l3331 16F8                           l3323 16C4                           l3315 1690  
                         l3307 166A                           l4043 34D6                           l3411 2BC6  
                         l3403 2BBE                           l4051 3378                           l3235 3350  
                         l4115 320A                           l3181 24C2                           l3173 2434  
                         l3165 2394                           l3157 25EC                           l3149 256A  
                         l3261 2200                           l3253 2186                           l3237 20B4  
                         l3341 1730                           l3333 16FC                           l3325 16D2  
                         l3317 169E                           l3309 1676                           l3421 2C0C  
                         l3413 2BD8                           l3405 2BC0                           l4053 337C  
                         l4045 336A                           l3501 0CF8                           l4109 31DA  
                         l3183 24C4                           l3175 24B2                           l3167 2424  
                         l3159 25F2                           l3263 220C                           l3255 21B2  
                         l3247 2114                           l4311 2A3E                           l4303 29F2  
                         l3351 1768                           l3343 173E                           l3335 170A  
                         l3327 16DE                           l3319 16AA                           l3191 260E  
                         l4039 34C4                           l3431 2C24                           l3423 2C0E  
                         l3415 2C02                           l3407 2BC2                           l4055 3388  
                         l4047 336E                           l3511 0D38                           l3503 0D06  
                         l3185 24CA                           l3177 24BA                           l3169 242C  
                         l3281 2928                           l3265 2212                           l3249 216C  
                         l4401 22B4                           l4313 2A74                           l4305 2A04  
                         l4321 3286                           l3361 17AA                           l3353 1776  
                         l3345 174A                           l3337 1716                           l3329 16EC  
                         l3441 2C30                           l3433 2C24                           l3425 2C10  
                         l3417 2C08                           l3409 2BC4                           l4057 338C  
                         l4049 3372                           l3601 0FFA                           l3521 0D78  
                         l3513 0D3A                           l3505 0D08                           l4081 3192  
                         l3179 24BC                           l3283 292C                           l3267 2216  
                         l3259 21CC                           l4411 2336                           l4403 22C8  
                         l4307 2A16                           l4323 328A                           l4331 3406  
                         l3371 17E2                           l3363 17B6                           l3355 1782  
                         l3347 1758                           l3339 1724                           l3195 2626  
                         l3187 2608                           l3451 3456                           l3443 2C36  
                         l3435 2C2A                           l3427 2C12                           l3419 2C0A  
                         l4059 33A0                           l3603 0FFE                           l3531 0DA8  
                         l3523 0D80                           l3507 0D18                           l3515 0D42  
                         l4083 319E                           l3285 2936                           l3293 2954  
                         l4341 1F2C                           l4405 22D6                           l4413 233C  
                         l4309 2A20                           l4317 3268                           l4325 33DE  
                         l4421 2ABC                           l4501 15A2                           l3381 1822  
                         l3373 17EE                           l3365 17C4                           l3357 1790  
                         l3349 1764                           l3197 2658                           l3189 260C  
                         l3453 3458                           l3445 2C36                           l3437 2C2A  
                         l3429 2C24                           l3461 2D16                           l3605 100C  
                         l3541 0DE6                           l3533 0DA8                           l3525 0D84  
                         l3517 0D52                           l3509 0D28                           l3701 0B06  
                         l3621 0876                           l4085 31B0                           l3287 2940  
                         l3295 298E                           l4335 346C                           l4351 1F70  
                         l4343 1F30                           l4415 234C                           l4407 2304  
                         l4319 3274                           l4327 33EA                           l4431 2B0C  
                         l4423 2ACA                           l4511 1604                           l4503 15BC  
                         l3383 1830                           l3375 17FC                           l3367 17D0  
                         l3359 179C                           l3455 3500                           l3199 266A  
                         l3447 3444                           l3439 2C30                           l3391 2B8A  
                         l3471 2D60                           l3463 2D1E                           l3607 1012  
                         l3551 0E32                           l3543 0DF6                           l3519 0D68  
                         l3711 0B46                           l3703 0B14                           l3631 08AE  
                         l3623 0878                           l4087 31CA                           l3297 2998  
                         l3289 294A                           l4337 3488                           l4361 1FC6  
                         l4353 1F90                           l4345 1F3E                           l4417 236C  
                         l4409 2324                           l4329 33EE                           l4433 2B20  
                         l4425 2ADE                           l4513 160A                           l4521 1640  
                         l4505 15D6                           l4601 10AC                           l3377 1808  
                         l3369 17D4                           l3385 183C                           l3449 344C  
                         l3393 2B9A                           l3473 2D70                           l3465 2D2A  
                         l3457 2CF0                           l3609 1014                           l3561 0E7C  
                         l3553 0E40                           l3545 0E06                           l3537 0DBC  
                         l3529 0D98                           l3481 0C92                           l3721 0BB8  
                         l3713 0B74                           l3705 0B26                           l3641 08DA  
                         l3633 08BE                           l3625 0888                           l3617 085C  
                         l3299 29BC                           l4451 30F6                           l4531 1DB8  
                         l4371 2048                           l4363 1FDA                           l4355 1F94  
                         l4347 1F5E                           l4443 32EE                           l4435 2B24  
                         l4427 2AEC                           l4515 161C                           l4507 15E4  
                         l4611 117C                           l4603 1100                           l3387 1840  
                         l3379 1816                           l3475 2D72                           l3467 2D38  
                         l3459 2D00                           l3571 0EC2                           l3563 0E8E  
                         l3555 0E4C                           l3547 0E0E                           l3539 0DD6  
                         l3491 0CD2                           l3483 0CA0                           l3731 0C2E  
                         l3723 0BE2                           l3707 0B34                           l3651 0930  
                         l3643 08EA                           l3635 08C4                           l3627 0898  
                         l3619 0868                           l4453 30FA                           l4541 1E14  
                         l4533 1DD4                           l4525 1D9C                           l4381 2092  
                         l4373 204A                           l4365 1FE8                           l4357 1FA0  
                         l4349 1F62                           l4445 3308                           l4437 2B50  
                         l4429 2AF8                           l4517 1628                           l4509 15F6  
                         l4613 118A                           l4605 1120                           l3389 2B7E  
                         l3477 2D7C                           l3469 2D42                           l4701 2C74  
                         l3581 0F22                           l3565 0EA4                           l3573 0ED4  
                         l3557 0E6A                           l3549 0E1E                           l3493 0CD4  
                         l3485 0CA2                           l3733 0C4A                           l3741 0C70  
                         l3717 0B9E                           l3725 0BE6                           l3709 0B38  
                         l3661 096A                           l3653 0940                           l3645 08FA  
                         l3637 08CA                           l3629 08A8                           l3821 2806  
                         l3805 27B2                           ?_pad 0015                           l4447 33A6  
                         l4455 310E                           l4543 1E2A                           l4535 1E0A  
                         l4527 1DB0                           l4375 205C                           l4367 1FFA  
                         l4359 1FBE                           l4391 225C                           l4439 2B64  
                         l4519 1630                           l4471 1402                           l4463 138C  
                         l4631 12B0                           l4623 120E                           l4615 1198  
                         l4607 1122                           l3399 2BB6                           l4711 2CBA  
                         l4703 2C86                           l3591 0F90                           l3575 0EE2  
                         l3567 0EAA                           l3559 0E6C                           l3487 0CB2  
                         l3495 0CDC                           l3479 0C86                           l3743 0C74  
                         l3735 0C5A                           l3727 0C00                           l3719 0BAA  
                         l3671 09BC                           l3663 0980                           l3647 090A  
                         l3639 08D8                           l3823 2816                           l3815 27DA  
                         l3807 27BC                           l3831 1A5C                           l4457 313C  
                         l4561 1F06                           l4553 1EA4                           l4545 1E32  
                         l4537 1E0E                           l4529 1DB4                           l4369 2028  
                         l4377 2062                           l4393 2260                           l4385 222A  
                         l4481 145A                           l4473 1404                           l4465 13AC  
                         l4641 132E                           l4617 11B8                           l4625 1220  
                         l4609 1146                           l3921 2E36                           l4721 2CE6  
                         l4713 2CC2                           l4705 2C8E                           l3585 0F4C  
                         l3593 0F94                           l3577 0EE6                           l3569 0EB4  
                         l3497 0CEC                           l3489 0CC2                           l3737 0C68  
                         l3729 0C14                           l3681 0A02                           l3673 09CA  
                         l3665 098C                           l3657 0954                           l3649 0910  
                         l3817 27E6                           l3809 27C6                           l3841 1AD4  
                         l3833 1AA2                           l4801 2F1C                           l4459 3140  
                         l4547 1E3A                           l4379 2072                           l4395 226E  
                         l4387 222E                           l4491 14FA                           l4483 1460  
                         l4475 141E                           l4467 13D4                           l4635 12E8  
                         l4627 1244                           l4619 11C6                           l4571 1052  
                         l4651 1354                           l3923 2E4E                           l3931 34AC  
                         l4715 2CC8                           l4707 2C96                           l3595 0FAE  
                         l3587 0F58                           l3579 0EF4                           l3499 0CF2  
                         l3739 0C6A                           l3691 0A70                           l3683 0A1C  
                         l3675 09D6                           l3667 09A4                           l3659 0960  
                         l3819 27F6                           l3851 1B5C                           l3843 1AE0  
                         l3835 1AB8                           l3827 1A3E                           l4731 1C92  
                         l4811 2F52                           l4803 2F22                           l4557 1EE2  
                         l4549 1E6E                           l4397 228E                           l4389 223C  
                         l4493 1500                           l4485 1468                           l4477 143A  
                         l4469 13F4                           l4653 1378                           l4637 130C  
                         l4645 133A                           l4629 1268                           l4581 1088  
                         l4573 1064                           l3925 2E60                           l3941 34BC  
                         l3933 34B4                           l4709 2CA4                           l4717 2CCE  
                         l3597 0FC4                           l3589 0F66                           l3693 0A9A  
                         l3685 0A2C                           l3677 09E6                           l3669 09B0  
                         l3861 1B9A                           l3853 1B68                           l3845 1B12  
                         l3829 1A4E                           l4733 1D1A                           l4725 1BF0  
                         l4741 1854                           l4813 2F58                           l4805 2F26  
                         l4821 2EAA                           l4559 1EF4                           l4399 22AC  
                         l4495 1506                           l4487 1472                           l4479 144C  
                         l4647 1348                           l4639 131A                           l4575 1068  
                         l4567 1020                           l4671 2F94                           l3927 2E72  
                         l3919 2E26                           l3951 341E                           l3943 34BE  
                         l3935 34B6                           l4719 2CDE                           l3599 0FDE  
                         l3695 0AD0                           l3687 0A48                           l3679 09F2  
                         l3791 2776                           l3783 2722                           l3863 1BBE  
                         l3855 1B76                           l3847 1B14                           l3839 1ACC  
                         l4735 1D62                           l4727 1C12                           l4751 1A22  
                         l4743 1892                           l4815 2F70                           l4807 2F2C  
                         l4831 2EB8                           l4823 2EAE                           l4489 1478  
                         l4497 156A                           l4593 109A                           l4585 108E  
                         l4577 1074                           l4569 1044                           l4673 2FA2  
                         l4681 30BE                           l4761 2836                           l3881 317A  
                         l3873 314A                           l3929 2E90                           l3961 3430  
                         l3953 3428                           l3945 34C0                           l3937 34B8  
                         l3697 0ADE                           l3689 0A54                           l3793 2778  
                         l3785 2738                           l3865 1BCE                           l3857 1B94  
                         l3849 1B20                           l4737 1D68                           l4729 1C3A  
                         l4745 1910                           l4753 3222                           l4817 2F7C  
                         l4809 2F44                           l4833 2EDE                           l4825 2EB0  
                         l4499 1584                           l4579 1076                           l4675 2FC8  
                         l4683 30C6                           l4771 289A                           l4763 2856  
                         l3883 3182                           l3875 315A                           l3971 343A  
                         l3963 3432                           l3955 342A                           l3947 3414  
                         l3939 34BA                           l4691 2C44                           l3699 0AFC  
                         l3795 2788                           l3867 1BDC                           l3859 1B96  
                         l4739 1D98                           l4747 195E                           l4755 322E  
                         l4819 2F86                           l4835 2EF6                           l4827 2EB2  
                         l4597 10A0                           l4589 1094                           l4669 2F8C  
                         l4685 30E2                           l4677 30A4                           l4773 28C4  
                         l4765 286C                           l3981 34FC                           l3885 318A  
                         l3877 3166                           l3973 343C                           l3965 3434  
                         l3957 342C                           l3949 341A                           l4693 2C52  
                         l3797 278C                           l3789 274C                           l3869 1BDE  
                         l4749 19F6                           l4757 3254                           l4781 2D94  
                         l4829 2EB4                           l4679 30B6                           l4775 28E4  
                         l4767 2878                           l4759 2828                           l3887 318C  
                         l3879 3176                           l3983 34E6                           l3975 343E  
                         l3967 3436                           l3959 342E                           l4695 2C5A  
                         l3799 279A                           l4791 2DF6                           l4783 2DBE  
                         l4769 288A                           l4777 28FC                           l3977 34DA  
                         l3889 318E                           l3993 34F0                           l3969 3438  
                         l4697 2C5E                           l4689 2C3E                           l3985 34F8  
                         l4793 2DFC                           l4785 2DD2                           l4779 2910  
                         l3979 34E2                           l3995 304C                           l4699 2C6C  
                         l4795 2E0A                           l4787 2DEA                           l3997 3052  
                         l4797 2E0C                           l4789 2DF2                           l4991 263A  
                         l3999 3090                           l4799 2E1A                           l4993 26F0  
                         l4995 10D2                           l4997 1E58                           l4999 2968  
                         STR_1 0820                           STR_2 0846                           STR_3 083A  
                         STR_4 084F                           STR_5 0855                           STR_6 0812  
                         STR_7 0857                           STR_8 082E                           STR_9 0801  
                         u3000 1852                           u3001 184E                           u3010 2BEA  
                         u3011 2BE6                           u3020 346A                           u3100 0D18  
                         u3021 3466                           u3101 0D14                           u3030 2D16  
                         u3110 0D28                           u3031 2D12                           u3111 0D24  
                         u4000 2A74                           u3040 2D38                           u3200 0EE2  
                         u3120 0D68                           u4001 2A70                           u3041 2D34  
                         u3201 0EDE                           u3121 0D64                           u4010 32AA  
                         u3050 2D60                           u3210 0EF4                           u3130 0DA8  
                         u4011 32A6                           u3051 2D5C                           u3211 0EF0  
                         u3131 0DA4                           u4100 223C                           u4020 3406  
                         u3220 0F22                           u3140 0E1E                           u3060 0CA0  
                         u3300 0888                           u4101 2238                           u4021 3402  
                         u3221 0F1E                           u3141 0E1A                           u3061 0C9C  
                         u3301 0884                           u4030 1F3E                           u4110 226E  
                         u3230 0F38                           u3150 0E40                           u3070 0CB2  
                         u3310 0898                           u4031 1F3A                           u4111 226A  
                         u3231 0F34                           u3151 0E3C                           u3071 0CAE  
                         u3311 0894                           u4040 1F70                           u4120 22AC  
                         u4200 3308                           u3240 0F4C                           u3160 0E6A  
                         u3080 0CC2                           u3400 0B46                           u3320 08D8  
                         u4041 1F6C                           u4121 22A8                           u4201 3304  
                         u3241 0F48                           u3161 0E66                           u3081 0CBE  
                         u3401 0B42                           u3321 08D4                           u4210 33D6  
                         u4130 22D6                           u3250 0F66                           u3170 0E8E  
                         u3090 0D06                           u3410 0B74                           u3330 08EA  
                         u4211 33D0                           u4051 1F9A                           u4131 22D2  
                         u3251 0F62                           u3171 0E8A                           u3091 0D02  
                         u3411 0B70                           u3331 08E6                           u4220 33D8  
                         u4060 1FBE                           u4140 2304                           u4300 144C  
                         u2700 268E                           u3260 0FAE                           u3180 0EA4  
                         u3420 0B8A                           u3340 08FA                           u2605 24EA  
                         u4061 1FBA                           u4141 2300                           u4301 1448  
                         u2701 268A                           u3261 0FAA                           u3181 0EA0  
                         u3421 0B86                           u3341 08F6                           u4230 310E  
                         u4070 1FE8                           u4150 234C                           u4310 145A  
                         u2710 26B4                           u3270 0FDE                           u3190 0EC2  
                         u3430 0B9E                           u3350 0930                           u5007 25E4  
                         u2615 2504                           u4231 310A                           u4071 1FE4  
                         u4151 2348                           u4311 1456                           u2711 26B0  
                         u3271 0FDA                           u3191 0EBE                           u3431 0B9A  
                         u3351 092C                           u2800 29B8                           u4240 313C  
                         u4400 1DD4                           u4080 2028                           u4160 2ACA  
                         u4320 1584                           u2720 271C                           u3280 100C  
                         u3440 0BB8                           u3360 0940                           u3600 2806  
                         u5017 25EE                           u2625 252A                           u4241 3138  
                         u4401 1DD0                           u4081 2024                           u4161 2AC6  
                         u4321 1580                           u2721 2718                           u3281 1008  
                         u3441 0BB4                           u3361 093C                           u3601 2802  
                         u2810 29E0                           u4410 1E0A                           u4090 2072  
                         u4170 2AEC                           u4330 15A2                           u4250 13BC  
                         u3450 0C00                           u3370 0ABA                           u3290 0876  
                         u3610 1A4E                           u2635 239C                           u5027 25FA  
                         u4411 1E06                           u4091 206E                           u4171 2AE8  
                         u4331 159E                           u4251 13B6                           u3451 0BFC  
                         u3291 0872                           u3611 1A4A                           u2820 29F0  
                         u4420 1E26                           u4180 2B42                           u4340 15BC  
                         u4260 13BE                           u4500 1146                           u2900 173E  
                         u3460 0C2E                           u3380 0B14                           u3540 2738  
                         u3700 1BDC                           u3620 1A5C                           u2740 3360  
                         u5037 2426                           u2645 23C0                           u2821 29EC  
                         u4421 1E22                           u4181 2B3E                           u4341 15B8  
                         u4501 1142                           u2901 173A                           u3461 0C2A  
                         u3381 0B10                           u3541 2734                           u3701 1BD8  
                         u3621 1A58                           u2741 335C                           u2750 20CE  
                         u4430 1EDC                           u4190 2B50                           u4350 15D6  
                         u4270 13D4                           u4510 118A                           u2910 1758  
                         u2830 168C                           u3710 315A                           u3470 0C68  
                         u3390 0B34                           u3550 276C                           u3630 1AB8  
                         u5047 2430                           u2655 23E6                           u2807 29AE  
                         u2751 20CA                           u4431 1ED6                           u4191 2B4C  
                         u4351 15D2                           u4271 13D0                           u4511 1186  
                         u2911 1754                           u2831 1688                           u3711 3156  
                         u3471 0C64                           u3391 0B30                           u3375 0AB0  
                         u3631 1AB4                           u2760 2110                           u4440 1EDE  
                         u4360 15E4                           u4280 1402                           u4520 1206  
                         u2920 1776                           u2840 169E                           u4600 2C6C  
                         u3560 279A                           u3640 1B0E                           u5057 24B4  
                         u2665 240A                           u2817 29D6                           u2761 210C  
                         u4361 15E0                           u4281 13FE                           u4521 1200  
                         u2921 1772                           u2841 169A                           u4601 2C68  
                         u3561 2796                           u3641 1B0A                           u2770 2182  
                         u4450 1EF4                           u4370 15F6                           u4290 141E  
                         u4530 1208                           u2930 1790                           u2850 16B8  
                         u2690 266A                           u4610 2C86                           u3570 27AE  
                         u3650 1B58                           u3810 31B0                           u5067 24BE  
                         u2675 243E                           u2771 217E                           u4451 1EF0  
                         u4371 15F2                           u4291 141A                           u2931 178C  
                         u2851 16B4                           u2691 2666                           u4611 2C82  
                         u3571 27AA                           u3555 2762                           u3651 1B54  
                         u3811 31AC                           u2780 21C8                           u4460 1F06  
                         u4380 1604                           u4540 1220                           u2940 17AA  
                         u2860 16D2                           u4700 2910                           u4620 2CA4  
                         u3580 27D6                           u3660 1B76                           u3820 31CA  
                         u5077 24C6                           u2685 2482                           u2781 21C4  
                         u4461 1F02                           u4381 1600                           u4541 121C  
                         u2941 17A6                           u2861 16CE                           u4701 290C  
                         u4621 2CA0                           u3581 27D2                           u3661 1B72  
                         u3821 31C6                           u2790 2228                           u4390 161C  
                         u4550 1244                           u4470 1044                           u2950 17C4  
                         u2870 16EC                           u3750 3086                           u4630 2CBA  
                         u3590 27F6                           u3670 1B86                           u4710 2DD2  
                         u5087 24D0                           u2791 2224                           u4391 1618  
                         u4551 1240                           u4471 1040                           u2951 17C0  
                         u2871 16E8                           u4631 2CB6                           u3591 27F2  
                         u3671 1B82                           u4711 2DCE                           u4560 1268  
                         u4480 1112                           u2960 17E2                           u2880 170A  
                         u4640 2CDE                           u3680 1B94                           u4720 2DEA  
                         u4561 1264                           u4481 110E                           u2961 17DE  
                         u2881 1706                           u4641 2CDA                           u3681 1B90  
                         u4721 2DE6                           u4570 130C                           u4490 1120  
                         u2970 17FC                           u2890 1724                           u3690 1BCE  
                         u4650 1D62                           u4730 2ECC                           u4571 1308  
                         u4491 111C                           u2971 17F8                           u2891 1720  
                         u3755 307C                           u3691 1BCA                           u4651 1D5E  
                         u4731 2EC2                           _RCIE 007CED                           u4580 2FE4  
                         u2980 1816                           u4660 1D98                           _RCIF 007CF5  
                         u4581 2FE0                           u2981 1812                           u4661 1D94  
                         u2990 1830                           u4590 2C52                           u2991 182C  
                         u4591 2C4E                           u4671 3228                           u4680 288A  
                         u4681 2886                           u3970 2A04                           u4690 289A  
                         u3971 2A00                           u4691 2896                           u4907 2B90  
                         u4827 2EEA                           u3980 2A16                           u4748 2ED0  
                         u3981 2A12                           u4917 2BB8                           u4837 2F38  
                         u3990 2A3E                           u4758 2F00                           u3991 2A3A  
                         u4927 2BCE                           u4847 2F64                           u4759 2F14  
                         u4937 2C04                           u4857 31EA                           i1l99 00AC  
                         u4947 2C1A                           u4867 3348                           u4957 2670  
                         u4877 2E40                           u4967 2694                           u4887 2E7C  
                         u4977 26BA                           u4897 2E9A                           u4987 2562  
                         u4997 256C                           _TMR0 000FD6                           _TMR2 000FCC  
                         _TMR3 000FB2                           abs@a 0017                           _dbuf 0098  
                         _atoi 1D9C                           _main 2EAA                           _dtoa 138C  
                         _isrH 0008                           _isrL 0018                           _prec 0057  
                         _nout 0094                           pad@i 001C                           pad@p 0019  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005B                           prodh 000FF4  
                         prodl 000FF3                           start 00BC                ___fldiv@new_exp 0041  
 __end_of_appStateRecolectData 2E26                __end_of_Lcd_Cmd 2606                __end_of_Lcd_Out 29F2  
                 ___param_bank 000000                     _Lcd_Chr_CP 238E           __size_of_appLCD_Init 0084  
      __size_of_appCounterInit 000A                          ??_abs 0019                          ??_pad 001B  
      __size_of_appCounterStop 0004                 setServo@pulsos 0009                  ___fltol@sign1 0051  
              __end_of___aodiv 20B4                          ?_atoi 000C                          ?_main 0001  
                        ?_dtoa 0020                __end_of___aomod 238E                          ?_isrH 0001  
                        ?_isrL 0001                __end_of_adcInit 3192                __end_of___fldiv 1020  
                        _ADRES 000FC3                __end_of___awmod 2CF0                __end_of___flmul 0C86  
              __end_of___fltol 2828                __end_of___lldiv 2D94                          i2l106 3048  
      __end_of_appStateInitial 31DA                          _RCREG 000FAE                   vfpfcnvrt@fmt 0046  
                        _SPBRG 000FAF                          _PORTB 000F81                          _TRISB 000F93  
              __end_of_appInit 33A6          appSubGetData@cantidad 0086                          _datos 00B8  
                        _flags 0059                          _fputc 29F2                          _fputs 3268  
              __end_of_isdigit 33DE                          atoi@n 0019                          pad@fp 0015  
                        atoi@s 000C                          _width 0096                          _putch 3504  
                        dtoa@d 0022                          dtoa@i 0042                          dtoa@n 003A  
                        dtoa@p 0034                          dtoa@s 0038                          dtoa@w 0036  
              __end_of_teclado 1854                __end_of_isspace 3148                          pclath 000FFA  
                        tablat 000FF5                __end_of_warning 3222                          ttemp5 005C  
                        ttemp6 005F                          ttemp7 0063                          status 000FD8  
                        wtemp8 005C                __end_of_sprintf 30F6           __end_of_appTimerInit 3442  
         __end_of_appTimerStop 3500               __end_of_Lcd_Init 2C3E                __initialization 32AC  
                 __end_of_atoi 1F2C                   __end_of_main 2F1C                   __end_of_dtoa 166A  
                 __end_of_isrH 304C                   __end_of_isrL 00BC                         ??_atoi 000E  
                       ??_main 008C                         ??_dtoa 002A                         ??_isrH 0001  
                       ??_isrL 0002       __size_of_appCounterStart 0004                  __activetblptr 000002  
               _appGetElements 2F1C          __end_of_setServoAngle 2722                         ?_fputc 0005  
                       ?_fputs 000E          __size_of_appISRConfig 0008                         ?_putch 0001  
                       i1l4841 0042                         i1l4851 007C                         i1l4843 0044  
                       i1l4853 0080                         i1l4845 0048                         i1l4837 0026  
                       i1l4847 005A                         i1l4855 008C                         i1l4839 0034  
                       i2l4161 300C                         i1l4857 009C                         i1l4849 006A  
                       i2l4171 3038                         i2l4163 300E                         i1l4859 00A4  
                       i2l4173 303E                         i2l4165 3014                         i2l4157 2FF0  
                       i2l4175 3046                         i2l4159 2FFE                         i2l4167 301C  
                       i2l4169 302A                      ??_Lcd_Cmd 0005                  vfpfcnvrt@done 0068  
                       _TMR0IE 007F95                         _TMR0IF 007F92                         _TMR3IE 007D01  
                       _TMR3IF 007D09                      ??_Lcd_Out 000B               __end_of___xxtofl 1BF0  
                 vfprintf@cfmt 004E              ?_appSubGiveElemts 000D                    ?_Lcd_Chr_CP 0001  
                       _appADC 1BF0                      ??___aodiv 0015                      ??___aomod 0015  
                       ___wmul 346C                      ??_adcInit 0005                      ??___fldiv 0038  
                    ??___awmod 0057                      ??___flmul 001F                         _appBat 1854  
                    ??___fltol 004D                      ??___lldiv 000D             ??_appSubGiveElemts 000F  
                       _memset 20B4                         clear_0 32D2                ___awmod@divisor 0055  
                    ??_appInit 0016         __end_of_appGetElements 2F8C                ___awmod@counter 0060  
                       pad@buf 0017                         dtoa@fp 0020                         _strlen 33DE  
             __end_of_setServo 346C                   _appISRConfig 34F0                         fputc@c 0005  
             ?_appStateInitial 0001                         fputs@c 0012                         fputs@i 0013  
                       fputs@s 000E                      ??_isdigit 0007                      ??_teclado 0007  
                 __mediumconst 0000                      ??_isspace 0007                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8           _appStateRecolectData 2D94  
            adcGetValue@PinADC 0008                         putch@c 0001          __end_of_appSubGetData 2926  
                    ??_warning 000F               __end_of_vfprintf 2FEE                      ??_sprintf 0057  
                 ___xxtofl@arg 0013                   ___xxtofl@exp 0012             setServoAngle@angle 0008  
                 ___xxtofl@val 0009                     __accesstop 0060        __end_of__initialization 32E0  
        __end_of_appTimerStart 34E6                  ___rparam_used 000001                     ___fltol@f1 0049  
               __pcstackCOMRAM 0001                   __pidataBANK0 3492                 _appCounterInit 34E6  
               _appCounterStop 34F8                  __end_of_fputc 2ABC                  __end_of_fputs 32AC  
                __end_of_putch 3506             __size_of_appElemts 0046                ?_appGetElements 0001  
                ??_adcGetValue 0007          ?_appStateRecolectData 0001                      ?_Lcd_Init 0001  
            ??_appCounterStart 0005                        ??_fputc 0009                        ??_fputs 0012  
          __size_of_Lcd_Chr_CP 014E                        ??_putch 0005          __size_of_appTimerInit 002E  
                   __pbssBANK0 008E               setServoAngle@pin 0005          __size_of_appTimerStop 0004  
       __end_of_appCounterInit 34F0         __end_of_appCounterStop 34FC                        ?_appADC 0084  
                      ?___wmul 0005                        ?_appBat 0084                        ?_memset 0005  
                   appADC@data 0084             __size_of_uart_Init 0058                        ?_strlen 0005  
           __size_of_servoInit 0018                   _appTimerInit 3414                      ?___xxtofl 0009  
                 _appTimerStop 34FC             __size_of_vfpfcnvrt 036C                     ??_Lcd_Init 0008  
          __end_of_adcGetValue 336A              __end_of_appElemts 3268                        _Lcd_Cmd 24DC  
                  setServo@pin 000A                        _Lcd_Out 2926        appSubGetData@data_Inout 0084  
                ??_appLCD_Init 000F                        __Hparam 0000                      ?_setServo 0009  
                      __Lparam 0000                ?_appCounterInit 0005                ?_appCounterStop 0001  
                      ___aodiv 1F2C                        ___aomod 222A                        _adcInit 3148  
                      ___fldiv 0C86                        ___awmod 2C3E                        ___flmul 085C  
                      ___fltol 2722                __size_of_appADC 01AC                        ___lldiv 2CF0  
              __size_of___wmul 0026                __size_of_appBat 01E8                      ?_vfprintf 006C  
                   appBat@data 0084                   __psmallconst 0800                        __pcinit 32AC  
              __size_of_memset 0176                        _appInit 336A                        __ramtop 0800  
                      __ptext0 2EAA                        __ptext1 2F1C                        __ptext2 2D94  
                      __ptext3 3192                        __ptext4 31DA                        __ptext5 3222  
                      __ptext6 34F8                        __ptext7 1854                        __ptext8 1BF0  
                      __ptext9 332E                      _T0CONbits 000FD5                __size_of_strlen 0036  
                    _T2CONbits 000FCA                   __size_of_abs 0040                   __size_of_pad 00C2  
       ??_appStateRecolectData 0057                        _isdigit 33A6                     ??___xxtofl 000D  
                    _T3CONbits 000FB1               ___awmod@dividend 0053                        _teclado 166A  
                      _isspace 30F6                        _warning 31DA                        atoi@neg 0012  
                      _sprintf 30A4                 __pintcode_body 2FEE           end_of_initialization 32E0  
                      fputc@fp 0007                        memset@c 0007                        memset@k 000D  
                      memset@n 0009                        memset@s 000F                  __Lmediumconst 0000  
                      int_func 2FEE                        fputs@fp 0010              __end_of_uart_Init 30A4  
              ___lldiv@divisor 0009              __end_of_servoInit 34C4                     ??_setServo 000B  
              ___lldiv@counter 0011           appCounterInit@reload 0005              __end_of_vfpfcnvrt 138C  
                    Lcd_Init@i 0009                      _RCSTAbits 000FAB                   ??_Lcd_Chr_CP 0005  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 004E  
          __end_of_appLCD_Init 2EAA                        strlen@a 0007                        strlen@s 0005  
                    _PORTAbits 000F80                      _PORTBbits 000F81                    _adcGetValue 332E  
                ___xxtofl@sign 0011                      _TRISAbits 000F92                      _TRISCbits 000F94  
                    _TRISDbits 000F95      __size_of_appSubGiveElemts 0016                      _TRISEbits 000F96  
                  ___fldiv@grs 0043                    ___fldiv@rem 003C             __end_of_Lcd_Chr_CP 24DC  
                   fp__warning 000E                    ___flmul@grs 0024                      _TXSTAbits 000FAC  
       __size_of_setServoAngle 011C                  setServo@angle 000B               ??_appGetElements 0089  
               __end_of_appADC 1D9C                    vfpfcnvrt@ap 0048                    vfpfcnvrt@fp 0044  
                  vfpfcnvrt@ll 0060                 __end_of___wmul 3492                 __end_of_appBat 1A3C  
                  _BAUDCONbits 000FB8                _appCounterStart 3500                 __end_of_memset 222A  
               __end_of_strlen 3414            start_initialization 32AC                    __end_of_abs 332E  
                  __end_of_pad 2B7E                  Lcd_Out@buffer 0009       __size_of_appStateInitial 0048  
            __size_of_Lcd_Init 00C0             fp__appStateInitial 000E                    _appLCD_Init 2E26  
                  vfprintf@fmt 006E                       ??_appADC 0057                       ??___wmul 0009  
                     ??_appBat 0086                    _appBat$2594 0088         __size_of_appSubGetData 00FE  
                  __pdataBANK0 00B8                       ??_memset 000B                     memset@dest 0005  
                     ??_strlen 0007                      ___fldiv@a 0034                      ___fldiv@b 0030  
       __size_of_appTimerStart 000C                      ___flmul@a 001B                      ___flmul@b 0017  
                  __pbssCOMRAM 0057                  __pcstackBANK0 0060               ___aodiv@dividend 0005  
                _setServoAngle 2606              __size_of___xxtofl 01B4        fp__appStateRecolectData 000E  
                     ?_Lcd_Cmd 0001               ??_appCounterInit 0007                       ?_Lcd_Out 0008  
             ??_appCounterStop 0005                      _atoi$2317 0014                      _atoi$2318 0018  
                    _atoi$2319 0016                      _appElemts 3222                      _dtoa$2282 0032  
      __end_of_appCounterStart 3504              appElemts@elements 0084                      __pintcode 0008  
                     ?___aodiv 0005                       ?___aomod 0005              __size_of_setServo 002A  
                     ?_adcInit 0001                       ?___fldiv 0030               ___aodiv@quotient 0017  
                     ?___awmod 0053                       ?___flmul 0017                       ?___fltol 0049  
                     ?___lldiv 0005                    __pintcodelo 0018                       ?_appInit 0001  
            __size_of_vfprintf 0062                    __smallconst 0800                       ?_isdigit 0005  
                 teclado@valor 0005                       ?_teclado 0005                 ?_setServoAngle 0005  
                     ?_isspace 0005               _appSubGiveElemts 34C4                       ?_warning 0001  
                     ?_sprintf 0072                  _appSubGetData 2828                 __size_of_fputc 00CA  
               __size_of_fputs 0044                 __size_of_putch 0002                 ___wmul@product 0009  
                     _LATAbits 000F89                       _LATCbits 000F8B                       _LATDbits 000F8C  
                     _LATEbits 000F8D                  _appTimerStart 34DA                       _IPR1bits 000F9F  
                     _IPR2bits 000FA2                       _PIE1bits 000F9D                       _PIE2bits 000FA0  
            ??_appStateInitial 000D                     ?_appElemts 0084                       i1u480_20 007C  
                     i1u480_21 0078                       i1u481_20 009C                       i1u481_21 0098  
                     i1u476_20 0034                       i1u476_21 0030                       i1u477_20 0042  
                     i1u477_21 003E                       i1u478_20 005A                       i1u478_21 0056  
                     i1u479_20 006A                       i1u479_21 0066                       _PIR1bits 000F9E  
                     _PIR2bits 000FA1                       i2u392_40 2FFE                       i2u392_41 2FFA  
                     i2u393_40 300C                       i2u393_41 3008                       i2u394_40 302A  
                     i2u394_41 3026                       i2u395_40 3038                       i2u395_41 3034  
                     _GO_nDONE 007E11                      _uart_Init 304C                       _RCONbits 000FD0  
                     Lcd_Out@x 0008                       Lcd_Out@y 000D                      _servoInit 34AC  
                    _vfpfcnvrt 1020                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0005                  ?_appISRConfig 0001  
                 ?_adcGetValue 0005  __size_of_appStateRecolectData 0092                   _isspace$2335 000B  
                     _Lcd_Init 2B7E                 ?_appSubGetData 0084                    _INTCON2bits 000FF1  
                    copy_data0 32C0                 ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A  
             __size_of_Lcd_Out 00CC                       __Hrparam 0000                  uart_Init@baud 0012  
                   vfprintf@ap 0070                       __Lrparam 0000                     vfprintf@fp 006C  
             ?_appCounterStart 0001                     ?_uart_Init 0012                     ?_servoInit 0001  
             __size_of___aodiv 0188               __size_of___aomod 0164               __size_of_adcInit 004A  
             __size_of___fldiv 039A               __size_of___awmod 00B2               __size_of___flmul 042A  
             __size_of___fltol 0106                  appADC@lm35val 0086               __size_of___lldiv 00A4  
                   ?_vfpfcnvrt 0044                ___aodiv@divisor 000D                 ??_appISRConfig 0005  
              ___aodiv@counter 0015               __size_of_appInit 003C                ??_setServoAngle 0006  
                   sprintf@fmt 0074                       ___xxtofl 1A3C               appElemts@dataout 0086  
             __size_of_isdigit 0038                 Lcd_Chr_CP@data 0007               __size_of_teclado 01EA  
             __size_of_isspace 0052                       __ptext10 1A3C                       __ptext11 2722  
                     __ptext20 2E26                       __ptext12 085C                       __ptext21 2B7E  
                     __ptext13 0C86                       __ptext30 3500                       __ptext22 34F0  
                     __ptext14 2C3E                       __ptext31 2828                       __ptext23 34E6  
                     __ptext15 336A                       __ptext40 29F2                       __ptext32 166A  
                     __ptext24 3148                       __ptext16 304C                       __ptext41 3504  
                     __ptext33 30A4                       __ptext25 34FC                       __ptext17 2CF0  
                     __ptext50 2926                       __ptext42 32EE                       __ptext34 2F8C  
                     __ptext26 34DA                       __ptext18 34AC                       __ptext51 24DC  
                     __ptext43 222A                       __ptext35 1020                       __ptext27 34C4  
                     __ptext19 3414                       __ptext52 238E                       __ptext44 1F2C  
                     __ptext36 138C                       __ptext28 3442                       __ptext45 1D9C  
                     __ptext37 2ABC                       __ptext29 2606                       __ptext46 30F6  
                     __ptext38 33DE                       __ptext47 33A6                       __ptext39 3268  
                     __ptext48 346C                       __ptext49 20B4               __size_of_warning 0048  
             __size_of_sprintf 0052                      setServo@i 000C                    Lcd_Cmd@data 0007  
                __size_of_atoi 0190                  __size_of_main 0072                  __size_of_dtoa 02DE  
                __size_of_isrH 3044                  __size_of_isrL 00A4                    ??_appElemts 0057  
                 ?_appLCD_Init 0001                       _setServo 3442                       int$flags 005B  
                     _vfprintf 2F8C               ___aomod@dividend 0005             appSubGetData@inout 0088  
                ?_appTimerInit 0001                    Lcd_Out@data 000E                 _vfpfcnvrt$2297 006A  
                ?_appTimerStop 0001                     _INTCONbits 000FF2                ??_appSubGetData 0057  
                     isdigit@c 0005                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 007C                ??_appTimerStart 0005                       isspace@c 0005  
             ___lldiv@dividend 0005           appSubGiveElemts@data 000D       __end_of_appSubGiveElemts 34DA  
                  ??_uart_Init 0016                 appElemts@F3571 008E                    ??_servoInit 0005  
              ___aomod@divisor 000D                    ??_vfpfcnvrt 004A                ___aomod@counter 0015  
               ??_appTimerInit 0005                       sprintf@f 007E                       sprintf@s 0072  
               ??_appTimerStop 0005               ___lldiv@quotient 000D        __size_of_appGetElements 0070  
            fp__appGetElements 000E           __size_of_adcGetValue 003C                _appStateInitial 3192  
                 ___aodiv@sign 0016           __end_of_appISRConfig 34F8                   ___aomod@sign 0016  
