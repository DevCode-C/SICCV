

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon May 31 00:31:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68  0000                     
    69                           ; Version 2.20
    70                           ; Generated 12/02/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4550 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  003186                     __pidataBANK0:
   106                           	callstack 0
   107                           
   108                           ;initializer for _datos
   109  003186  00                 	db	0
   110  003187  00FF               	dw	255
   111  003189  00                 	db	0
   112  00318A  0000               	dw	0
   113  00318C  00                 	db	0
   114  00318D  00                 	db	0
   115  00318E  00                 	db	0
   116  00318F  00                 	db	0
   117  003190  00                 	db	0
   118  003191  00                 	db	0
   119  003192  00                 	db	0
   120  003193  00                 	db	0
   121  003194  00                 	db	0
   122  003195  00                 	db	0
   123  003196  00                 	db	0
   124  003197  00                 	db	0
   125  003198  00                 	db	0
   126  003199  00                 	db	0
   127  00319A  00                 	db	0
   128  00319B  00                 	db	0
   129  00319C  00                 	db	0
   130  00319D  EE                 	db	low _appStateInitial
   131  00319E  30                 	db	high _appStateInitial
   132  0000                     _TMR0	set	4054
   133  0000                     _TMR3	set	4018
   134  0000                     _ADRES	set	4035
   135  0000                     _RCONbits	set	4048
   136  0000                     _PIE2bits	set	4000
   137  0000                     _IPR2bits	set	4002
   138  0000                     _PIR2bits	set	4001
   139  0000                     _INTCONbits	set	4082
   140  0000                     _T0CONbits	set	4053
   141  0000                     _T3CONbits	set	4017
   142  0000                     _LATBbits	set	3978
   143  0000                     _PIR1bits	set	3998
   144  0000                     _PR2	set	4043
   145  0000                     _TMR2	set	4044
   146  0000                     _TRISBbits	set	3987
   147  0000                     _T2CONbits	set	4042
   148  0000                     _LATDbits	set	3980
   149  0000                     _TRISDbits	set	3989
   150  0000                     _PORTBbits	set	3969
   151  0000                     _PORTB	set	3969
   152  0000                     _LATAbits	set	3977
   153  0000                     _TRISAbits	set	3986
   154  0000                     _INTCON2bits	set	4081
   155  0000                     _TRISB	set	3987
   156  0000                     _LATCbits	set	3979
   157  0000                     _TRISCbits	set	3988
   158  0000                     _ADCON0bits	set	4034
   159  0000                     _ADCON2bits	set	4032
   160  0000                     _ADCON1bits	set	4033
   161  0000                     _TMR0IF	set	32658
   162  0000                     _TMR0IE	set	32661
   163  0000                     _TMR3IF	set	32009
   164  0000                     _TMR3IE	set	32001
   165  0000                     _GO_nDONE	set	32273
   166                           
   167                           	psect	smallconst
   168  000800                     __psmallconst:
   169                           	callstack 0
   170  000800  00                 	db	0
   171  000801                     STR_9:
   172  000801  52                 	db	82	;'R'
   173  000802  65                 	db	101	;'e'
   174  000803  63                 	db	99	;'c'
   175  000804  61                 	db	97	;'a'
   176  000805  72                 	db	114	;'r'
   177  000806  67                 	db	103	;'g'
   178  000807  61                 	db	97	;'a'
   179  000808  20                 	db	32
   180  000809  50                 	db	80	;'P'
   181  00080A  6F                 	db	111	;'o'
   182  00080B  72                 	db	114	;'r'
   183  00080C  66                 	db	102	;'f'
   184  00080D  61                 	db	97	;'a'
   185  00080E  76                 	db	118	;'v'
   186  00080F  6F                 	db	111	;'o'
   187  000810  72                 	db	114	;'r'
   188  000811  00                 	db	0
   189  000812                     STR_6:
   190  000812  43                 	db	67	;'C'
   191  000813  20                 	db	32
   192  000814  64                 	db	100	;'d'
   193  000815  65                 	db	101	;'e'
   194  000816  20                 	db	32
   195  000817  76                 	db	118	;'v'
   196  000818  61                 	db	97	;'a'
   197  000819  63                 	db	99	;'c'
   198  00081A  75                 	db	117	;'u'
   199  00081B  6E                 	db	110	;'n'
   200  00081C  61                 	db	97	;'a'
   201  00081D  73                 	db	115	;'s'
   202  00081E  3A                 	db	58	;':'
   203  00081F  00                 	db	0
   204  000820                     STR_1:
   205  000820  54                 	db	84	;'T'
   206  000821  3A                 	db	58	;':'
   207  000822  25                 	db	37
   208  000823  30                 	db	48	;'0'
   209  000824  32                 	db	50	;'2'
   210  000825  64                 	db	100	;'d'
   211  000826  2E                 	db	46
   212  000827  25                 	db	37
   213  000828  30                 	db	48	;'0'
   214  000829  32                 	db	50	;'2'
   215  00082A  64                 	db	100	;'d'
   216  00082B  20                 	db	32
   217  00082C  43                 	db	67	;'C'
   218  00082D  00                 	db	0
   219  00082E                     STR_8:
   220  00082E  53                 	db	83	;'S'
   221  00082F  69                 	db	105	;'i'
   222  000830  6E                 	db	110	;'n'
   223  000831  20                 	db	32
   224  000832  76                 	db	118	;'v'
   225  000833  61                 	db	97	;'a'
   226  000834  63                 	db	99	;'c'
   227  000835  75                 	db	117	;'u'
   228  000836  6E                 	db	110	;'n'
   229  000837  61                 	db	97	;'a'
   230  000838  73                 	db	115	;'s'
   231  000839  00                 	db	0
   232  00083A                     STR_3:
   233  00083A  42                 	db	66	;'B'
   234  00083B  69                 	db	105	;'i'
   235  00083C  65                 	db	101	;'e'
   236  00083D  6E                 	db	110	;'n'
   237  00083E  76                 	db	118	;'v'
   238  00083F  65                 	db	101	;'e'
   239  000840  6E                 	db	110	;'n'
   240  000841  69                 	db	105	;'i'
   241  000842  64                 	db	100	;'d'
   242  000843  6F                 	db	111	;'o'
   243  000844  73                 	db	115	;'s'
   244  000845  00                 	db	0
   245  000846                     STR_2:
   246  000846  42                 	db	66	;'B'
   247  000847  61                 	db	97	;'a'
   248  000848  74                 	db	116	;'t'
   249  000849  3A                 	db	58	;':'
   250  00084A  25                 	db	37
   251  00084B  30                 	db	48	;'0'
   252  00084C  32                 	db	50	;'2'
   253  00084D  64                 	db	100	;'d'
   254  00084E  00                 	db	0
   255  00084F                     STR_4:
   256  00084F  53                 	db	83	;'S'
   257  000850  49                 	db	73	;'I'
   258  000851  43                 	db	67	;'C'
   259  000852  43                 	db	67	;'C'
   260  000853  56                 	db	86	;'V'
   261  000854  00                 	db	0
   262  000855                     STR_5:
   263  000855  23                 	db	35
   264  000856  3A                 	db	58	;':'
   265  000857  25                 	db	37
   266  000858  64                 	db	100	;'d'
   267  000859  00                 	db	0
   268  00085A  00                 	db	0	; dummy byte at the end
   269  0000                     
   270                           ; #config settings
   271                           
   272                           	psect	cinit
   273  002F5A                     __pcinit:
   274                           	callstack 0
   275  002F5A                     start_initialization:
   276                           	callstack 0
   277  002F5A                     __initialization:
   278                           	callstack 0
   279                           
   280                           ; Initialize objects allocated to BANK0 (25 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282  002F5A  0E86               	movlw	low __pidataBANK0
   283  002F5C  6EF6               	movwf	tblptrl,c
   284  002F5E  0E31               	movlw	high __pidataBANK0
   285  002F60  6EF7               	movwf	tblptrh,c
   286  002F62  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287  002F64  6EF8               	movwf	tblptru,c
   288  002F66  EE00  F0B8         	lfsr	0,__pdataBANK0
   289  002F6A  EE10 F019          	lfsr	1,25
   290  002F6E                     copy_data0:
   291  002F6E  0009               	tblrd		*+
   292  002F70  CFF5 FFEE          	movff	tablat,postinc0
   293  002F74  50E5               	movf	postdec1,w,c
   294  002F76  50E1               	movf	fsr1l,w,c
   295  002F78  E1FA               	bnz	copy_data0
   296                           
   297                           ; Clear objects allocated to BANK0 (42 bytes)
   298  002F7A  EE00  F08E         	lfsr	0,__pbssBANK0
   299  002F7E  0E2A               	movlw	42
   300  002F80                     clear_0:
   301  002F80  6AEE               	clrf	postinc0,c
   302  002F82  06E8               	decf	wreg,f,c
   303  002F84  E1FD               	bnz	clear_0
   304                           
   305                           ; Clear objects allocated to COMRAM (4 bytes)
   306  002F86  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   307  002F88  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   308  002F8A  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   309  002F8C  6A58               	clrf	__pbssCOMRAM& (0+255),c
   310  002F8E                     end_of_initialization:
   311                           	callstack 0
   312  002F8E                     __end_of__initialization:
   313                           	callstack 0
   314  002F8E  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   315  002F90  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   316  002F92  0E00               	movlw	low (__Lmediumconst shr (0+16))
   317  002F94  6EF8               	movwf	tblptru,c
   318  002F96  0100               	movlb	0
   319  002F98  EF2B  F016         	goto	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMRAM
   322  000058                     __pbssCOMRAM:
   323                           	callstack 0
   324  000058                     _prec:
   325                           	callstack 0
   326  000058                     	ds	2
   327  00005A                     _flags:
   328                           	callstack 0
   329  00005A                     	ds	2
   330                           
   331                           	psect	bssBANK0
   332  00008E                     __pbssBANK0:
   333                           	callstack 0
   334  00008E                     	ds	6
   335  000094                     _nout:
   336                           	callstack 0
   337  000094                     	ds	2
   338  000096                     _width:
   339                           	callstack 0
   340  000096                     	ds	2
   341  000098                     _dbuf:
   342                           	callstack 0
   343  000098                     	ds	32
   344                           
   345                           	psect	dataBANK0
   346  0000B8                     __pdataBANK0:
   347                           	callstack 0
   348  0000B8                     _datos:
   349                           	callstack 0
   350  0000B8                     	ds	25
   351                           
   352                           	psect	cstackBANK0
   353  000060                     __pcstackBANK0:
   354                           	callstack 0
   355  000060                     vfpfcnvrt@ll:
   356                           	callstack 0
   357                           
   358                           ; 8 bytes @ 0x0
   359  000060                     	ds	8
   360  000068                     vfpfcnvrt@done:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x8
   364  000068                     	ds	2
   365  00006A                     _vfpfcnvrt$1940:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0xA
   369  00006A                     	ds	2
   370  00006C                     ?_vfprintf:
   371                           	callstack 0
   372  00006C                     vfprintf@fp:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xC
   376  00006C                     	ds	2
   377  00006E                     vfprintf@fmt:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xE
   381  00006E                     	ds	2
   382  000070                     vfprintf@ap:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x10
   386  000070                     	ds	2
   387  000072                     ?_sprintf:
   388                           	callstack 0
   389  000072                     sprintf@s:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x12
   393  000072                     	ds	2
   394  000074                     sprintf@fmt:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x14
   398  000074                     	ds	8
   399  00007C                     sprintf@ap:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x1C
   403  00007C                     	ds	2
   404  00007E                     sprintf@f:
   405                           	callstack 0
   406                           
   407                           ; 6 bytes @ 0x1E
   408  00007E                     	ds	6
   409  000084                     appADC@data:
   410                           	callstack 0
   411  000084                     appBat@data:
   412                           	callstack 0
   413  000084                     appElemts@elements:
   414                           	callstack 0
   415  000084                     appSubGetData@data_Inout:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x24
   419  000084                     	ds	2
   420  000086                     ??_appBat:
   421  000086                     appSubGetData@cantidad:
   422                           	callstack 0
   423  000086                     appADC@lm35val:
   424                           	callstack 0
   425  000086                     appElemts@dataout:
   426                           	callstack 0
   427                           
   428                           ; 6 bytes @ 0x26
   429  000086                     	ds	2
   430  000088                     appSubGetData@inout:
   431                           	callstack 0
   432  000088                     _appBat$2249:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x28
   436  000088                     	ds	1
   437  000089                     ??_appGetElements:
   438                           
   439                           ; 1 bytes @ 0x29
   440  000089                     	ds	3
   441  00008C                     ??_main:
   442                           
   443                           ; 1 bytes @ 0x2C
   444  00008C                     	ds	2
   445                           
   446                           	psect	cstackCOMRAM
   447  000001                     __pcstackCOMRAM:
   448                           	callstack 0
   449  000001                     ??_isrL:
   450  000001                     
   451                           ; 1 bytes @ 0x0
   452  000001                     	ds	3
   453  000004                     ??_Lcd_Cmd:
   454  000004                     ??_Lcd_Chr_CP:
   455  000004                     ??_adcInit:
   456  000004                     ?_strlen:
   457                           	callstack 0
   458  000004                     ?_isdigit:
   459                           	callstack 0
   460  000004                     ?_isspace:
   461                           	callstack 0
   462  000004                     ?_adcGetValue:
   463                           	callstack 0
   464  000004                     ?___wmul:
   465                           	callstack 0
   466  000004                     ?___aodiv:
   467                           	callstack 0
   468  000004                     ?___aomod:
   469                           	callstack 0
   470  000004                     teclado@valor:
   471                           	callstack 0
   472  000004                     appCounterInit@reload:
   473                           	callstack 0
   474  000004                     appSubGiveElemts@data:
   475                           	callstack 0
   476  000004                     ___wmul@multiplier:
   477                           	callstack 0
   478  000004                     memset@dest:
   479                           	callstack 0
   480  000004                     isdigit@c:
   481                           	callstack 0
   482  000004                     isspace@c:
   483                           	callstack 0
   484  000004                     fputc@c:
   485                           	callstack 0
   486  000004                     strlen@s:
   487                           	callstack 0
   488  000004                     ___aodiv@dividend:
   489                           	callstack 0
   490  000004                     ___aomod@dividend:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x3
   494  000004                     	ds	1
   495  000005                     adcInit@ADC_PINs:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x4
   499  000005                     	ds	1
   500  000006                     ??_isdigit:
   501  000006                     ??_isspace:
   502  000006                     ??_adcGetValue:
   503  000006                     Lcd_Chr_CP@data:
   504                           	callstack 0
   505  000006                     Lcd_Cmd@data:
   506                           	callstack 0
   507  000006                     ___wmul@multiplicand:
   508                           	callstack 0
   509  000006                     memset@c:
   510                           	callstack 0
   511  000006                     fputc@fp:
   512                           	callstack 0
   513  000006                     strlen@a:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x5
   517  000006                     	ds	1
   518  000007                     ??_Lcd_Init:
   519  000007                     adcGetValue@PinADC:
   520                           	callstack 0
   521  000007                     Lcd_Out@x:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x6
   525  000007                     	ds	1
   526  000008                     ??_fputc:
   527  000008                     ?___xxtofl:
   528                           	callstack 0
   529  000008                     Lcd_Init@i:
   530                           	callstack 0
   531  000008                     Lcd_Out@buffer:
   532                           	callstack 0
   533  000008                     ___wmul@product:
   534                           	callstack 0
   535  000008                     memset@n:
   536                           	callstack 0
   537  000008                     ___xxtofl@val:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x7
   541  000008                     	ds	2
   542  00000A                     ??_memset:
   543  00000A                     ??_Lcd_Out:
   544  00000A                     _isspace$1978:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548  00000A                     	ds	1
   549  00000B                     ?_atoi:
   550                           	callstack 0
   551  00000B                     atoi@s:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xA
   555  00000B                     	ds	1
   556  00000C                     ??___xxtofl:
   557  00000C                     Lcd_Out@y:
   558                           	callstack 0
   559  00000C                     memset@k:
   560                           	callstack 0
   561  00000C                     ___aodiv@divisor:
   562                           	callstack 0
   563  00000C                     ___aomod@divisor:
   564                           	callstack 0
   565                           
   566                           ; 8 bytes @ 0xB
   567  00000C                     	ds	1
   568  00000D                     ??_atoi:
   569  00000D                     Lcd_Out@data:
   570                           	callstack 0
   571  00000D                     fputs@s:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0xC
   575  00000D                     	ds	1
   576  00000E                     ??_appLCD_Init:
   577  00000E                     ??_warning:
   578  00000E                     memset@s:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0xD
   582  00000E                     	ds	1
   583  00000F                     fputs@fp:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xE
   587  00000F                     	ds	1
   588  000010                     ___xxtofl@sign:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0xF
   592  000010                     	ds	1
   593  000011                     ___xxtofl@exp:
   594                           	callstack 0
   595  000011                     fputs@c:
   596                           	callstack 0
   597  000011                     atoi@neg:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x10
   601  000011                     	ds	1
   602  000012                     fputs@i:
   603                           	callstack 0
   604  000012                     ___xxtofl@arg:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x11
   608  000012                     	ds	1
   609  000013                     _atoi$1960:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x12
   613  000013                     	ds	1
   614  000014                     ?_pad:
   615                           	callstack 0
   616  000014                     ___aodiv@counter:
   617                           	callstack 0
   618  000014                     ___aomod@counter:
   619                           	callstack 0
   620  000014                     pad@fp:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x13
   624  000014                     	ds	1
   625  000015                     ___aodiv@sign:
   626                           	callstack 0
   627  000015                     ___aomod@sign:
   628                           	callstack 0
   629  000015                     _atoi$1962:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x14
   633  000015                     	ds	1
   634  000016                     ?_abs:
   635                           	callstack 0
   636  000016                     ?___flmul:
   637                           	callstack 0
   638  000016                     pad@buf:
   639                           	callstack 0
   640  000016                     abs@a:
   641                           	callstack 0
   642  000016                     ___flmul@b:
   643                           	callstack 0
   644  000016                     ___aodiv@quotient:
   645                           	callstack 0
   646                           
   647                           ; 8 bytes @ 0x15
   648  000016                     	ds	1
   649  000017                     _atoi$1961:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x16
   653  000017                     	ds	1
   654  000018                     ??_abs:
   655  000018                     pad@p:
   656                           	callstack 0
   657  000018                     atoi@n:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x17
   661  000018                     	ds	2
   662  00001A                     ??_pad:
   663  00001A                     ___flmul@a:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x19
   667  00001A                     	ds	1
   668  00001B                     pad@i:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x1A
   672  00001B                     	ds	2
   673  00001D                     pad@w:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x1C
   677  00001D                     	ds	1
   678  00001E                     ??___flmul:
   679                           
   680                           ; 1 bytes @ 0x1D
   681  00001E                     	ds	1
   682  00001F                     ?_dtoa:
   683                           	callstack 0
   684  00001F                     dtoa@fp:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x1E
   688  00001F                     	ds	2
   689  000021                     dtoa@d:
   690                           	callstack 0
   691                           
   692                           ; 8 bytes @ 0x20
   693  000021                     	ds	1
   694  000022                     ___flmul@sign:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x21
   698  000022                     	ds	1
   699  000023                     ___flmul@grs:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x22
   703  000023                     	ds	4
   704  000027                     ___flmul@aexp:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x26
   708  000027                     	ds	1
   709  000028                     ___flmul@bexp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x27
   713  000028                     	ds	1
   714  000029                     ??_dtoa:
   715  000029                     ___flmul@prod:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x28
   719  000029                     	ds	4
   720  00002D                     ___flmul@temp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x2C
   724  00002D                     	ds	2
   725  00002F                     ?___fldiv:
   726                           	callstack 0
   727  00002F                     ___fldiv@b:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x2E
   731  00002F                     	ds	2
   732  000031                     _dtoa$1925:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x30
   736  000031                     	ds	2
   737  000033                     dtoa@p:
   738                           	callstack 0
   739  000033                     ___fldiv@a:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x32
   743  000033                     	ds	2
   744  000035                     dtoa@w:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x34
   748  000035                     	ds	2
   749  000037                     ??___fldiv:
   750  000037                     dtoa@s:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x36
   754  000037                     	ds	2
   755  000039                     dtoa@n:
   756                           	callstack 0
   757                           
   758                           ; 8 bytes @ 0x38
   759  000039                     	ds	2
   760  00003B                     ___fldiv@rem:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x3A
   764  00003B                     	ds	4
   765  00003F                     ___fldiv@sign:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x3E
   769  00003F                     	ds	1
   770  000040                     ___fldiv@new_exp:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x3F
   774  000040                     	ds	1
   775  000041                     dtoa@i:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x40
   779  000041                     	ds	1
   780  000042                     ___fldiv@grs:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x41
   784  000042                     	ds	1
   785  000043                     ?_vfpfcnvrt:
   786                           	callstack 0
   787  000043                     vfpfcnvrt@fp:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x42
   791  000043                     	ds	2
   792  000045                     vfpfcnvrt@fmt:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x44
   796  000045                     	ds	1
   797  000046                     ___fldiv@bexp:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x45
   801  000046                     	ds	1
   802  000047                     ___fldiv@aexp:
   803                           	callstack 0
   804  000047                     vfpfcnvrt@ap:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x46
   808  000047                     	ds	1
   809  000048                     ?___fltol:
   810                           	callstack 0
   811  000048                     ___fltol@f1:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x47
   815  000048                     	ds	1
   816  000049                     ??_vfpfcnvrt:
   817                           
   818                           ; 1 bytes @ 0x48
   819  000049                     	ds	3
   820  00004C                     ??___fltol:
   821                           
   822                           ; 1 bytes @ 0x4B
   823  00004C                     	ds	1
   824  00004D                     vfprintf@cfmt:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x4C
   828  00004D                     	ds	3
   829  000050                     ___fltol@sign1:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0x4F
   833  000050                     	ds	1
   834  000051                     ___fltol@exp1:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x50
   838  000051                     	ds	1
   839  000052                     ?___awmod:
   840                           	callstack 0
   841  000052                     ___awmod@dividend:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x51
   845  000052                     	ds	2
   846  000054                     ___awmod@divisor:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x53
   850  000054                     	ds	2
   851  000056                     ___awmod@counter:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x55
   855  000056                     	ds	1
   856  000057                     ___awmod@sign:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x56
   860  000057                     	ds	1
   861  000058                     
   862                           ; 1 bytes @ 0x57
   863 ;;
   864 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   865 ;;
   866 ;; *************** function _main *****************
   867 ;; Defined at:
   868 ;;		line 12 in file "main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   882 ;;      Params:         0       0       0       0       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0       0       0
   884 ;;      Temps:          0       2       0       0       0       0       0       0       0
   885 ;;      Totals:         0       2       0       0       0       0       0       0       0
   886 ;;Total ram usage:        2 bytes
   887 ;; Hardware stack levels required when called:   12
   888 ;; This function calls:
   889 ;;		_appGetElements
   890 ;;		_appInit
   891 ;;		_appStateInitial
   892 ;;		_appStateRecolectData
   893 ;;		_warning
   894 ;; This function is called by:
   895 ;;		Startup code after reset
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text0
   900  002C56                     __ptext0:
   901                           	callstack 0
   902  002C56                     _main:
   903                           	callstack 19
   904  002C56                     
   905                           ;main.c: 14:     TRISB = 0xF0;
   906  002C56  0EF0               	movlw	240
   907  002C58  6E93               	movwf	147,c	;volatile
   908  002C5A                     
   909                           ;main.c: 15:     INTCON2bits.RBPU = 0;
   910  002C5A  9EF1               	bcf	241,7,c	;volatile
   911  002C5C                     
   912                           ;main.c: 16:     TRISAbits.TRISA3 = 0;
   913  002C5C  9692               	bcf	146,3,c	;volatile
   914  002C5E                     
   915                           ;main.c: 17:     appInit();
   916  002C5E  ECB1  F018         	call	_appInit	;wreg free
   917  002C62                     l4391:
   918                           
   919                           ;main.c: 19:     {;main.c: 20:         LATAbits.LA3 = !LATAbits.LA3;
   920  002C62  A689               	btfss	137,3,c	;volatile
   921  002C64  EF36  F016         	goto	u4411
   922  002C68  EF3B  F016         	goto	u4410
   923  002C6C                     u4411:
   924  002C6C  0100               	movlb	0	; () banked
   925  002C6E  6B8C               	clrf	??_main& (0+255),b
   926  002C70  2B8C               	incf	??_main& (0+255),f,b
   927  002C72  EF3D  F016         	goto	u4428
   928  002C76                     u4410:
   929  002C76  0100               	movlb	0	; () banked
   930  002C78  6B8C               	clrf	??_main& (0+255),b
   931  002C7A                     u4428:
   932  002C7A  478C               	rlncf	??_main& (0+255),f,b
   933  002C7C  478C               	rlncf	??_main& (0+255),f,b
   934  002C7E  478C               	rlncf	??_main& (0+255),f,b
   935  002C80  5089               	movf	137,w,c	;volatile
   936  002C82  198C               	xorwf	??_main& (0+255),w,b
   937  002C84  0BF7               	andlw	-9
   938  002C86  198C               	xorwf	??_main& (0+255),w,b
   939  002C88  6E89               	movwf	137,c	;volatile
   940  002C8A                     
   941                           ; BSR set to: 0
   942                           ;main.c: 21:         _delay((unsigned long)((100)*(12000000/4000.0)));
   943  002C8A  0E02               	movlw	2
   944  002C8C  0100               	movlb	0	; () banked
   945  002C8E  6F8D               	movwf	(??_main+1)& (0+255),b
   946  002C90  0E86               	movlw	134
   947  002C92  6F8C               	movwf	??_main& (0+255),b
   948  002C94  0E99               	movlw	153
   949  002C96                     u4497:
   950  002C96  2EE8               	decfsz	wreg,f,c
   951  002C98  D7FE               	bra	u4497
   952  002C9A  2F8C               	decfsz	??_main& (0+255),f,b
   953  002C9C  D7FC               	bra	u4497
   954  002C9E  2F8D               	decfsz	(??_main+1)& (0+255),f,b
   955  002CA0  D7FA               	bra	u4497
   956  002CA2                     
   957                           ;main.c: 22:         datos.nextFunc();
   958  002CA2  EE20  F0CF         	lfsr	2,_datos+23
   959  002CA6  D802               	call	u4438
   960  002CA8  EF60  F016         	goto	u4439
   961  002CAC                     u4438:
   962  002CAC  0005               	push	
   963  002CAE  6EFA               	movwf	pclath,c
   964  002CB0  50DE               	movf	postinc2,w,c
   965  002CB2  6EFD               	movwf	tosl,c
   966  002CB4  50DE               	movf	postinc2,w,c
   967  002CB6  6EFE               	movwf	tosh,c
   968  002CB8  50F8               	movf	tblptru,w,c
   969  002CBA  6EFF               	movwf	tosu,c
   970  002CBC  50FA               	movf	pclath,w,c
   971  002CBE  0012               	return		;indir
   972  002CC0                     u4439:
   973  002CC0  EF31  F016         	goto	l4391
   974  002CC4  EF55  F000         	goto	start
   975  002CC8                     __end_of_main:
   976                           	callstack 0
   977                           
   978 ;; *************** function _appGetElements *****************
   979 ;; Defined at:
   980 ;;		line 42 in file "app.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   994 ;;      Params:         0       0       0       0       0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0       0       0       0
   996 ;;      Temps:          0       2       0       0       0       0       0       0       0
   997 ;;      Totals:         0       2       0       0       0       0       0       0       0
   998 ;;Total ram usage:        2 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:   11
  1001 ;; This function calls:
  1002 ;;		_Lcd_Cmd
  1003 ;;		_appSubGetData
  1004 ;;		_appSubGiveElemts
  1005 ;;		_appTimerStart
  1006 ;;		_appTimerStop
  1007 ;; This function is called by:
  1008 ;;		_isrL
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text1
  1014  002CC8                     __ptext1:
  1015                           	callstack 0
  1016  002CC8                     _appGetElements:
  1017                           	callstack 19
  1018  002CC8                     
  1019                           ;app.c: 44:     datos.state = 0;
  1020  002CC8  0E00               	movlw	0
  1021  002CCA  0100               	movlb	0	; () banked
  1022  002CCC  6FBB               	movwf	(_datos+3)& (0+255),b
  1023  002CCE                     
  1024                           ; BSR set to: 0
  1025                           ;app.c: 45:     appTimerStop();
  1026  002CCE  ECE4  F018         	call	_appTimerStop	;wreg free
  1027  002CD2                     
  1028                           ;app.c: 46:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1029  002CD2  0E01               	movlw	1
  1030  002CD4  EC6E  F012         	call	_Lcd_Cmd
  1031  002CD8  0E02               	movlw	2
  1032  002CDA  0100               	movlb	0	; () banked
  1033  002CDC  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
  1034  002CDE  0E86               	movlw	134
  1035  002CE0  6F89               	movwf	??_appGetElements& (0+255),b
  1036  002CE2  0E99               	movlw	153
  1037  002CE4                     u4507:
  1038  002CE4  2EE8               	decfsz	wreg,f,c
  1039  002CE6  D7FE               	bra	u4507
  1040  002CE8  2F89               	decfsz	??_appGetElements& (0+255),f,b
  1041  002CEA  D7FC               	bra	u4507
  1042  002CEC  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1043  002CEE  D7FA               	bra	u4507
  1044  002CF0                     
  1045                           ;app.c: 47:     appSubGetData(&datos);
  1046  002CF0  0EB8               	movlw	low _datos
  1047  002CF2  0100               	movlb	0	; () banked
  1048  002CF4  6F84               	movwf	appSubGetData@data_Inout& (0+255),b
  1049  002CF6  0E00               	movlw	high _datos
  1050  002CF8  6F85               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1051  002CFA  EC86  F013         	call	_appSubGetData	;wreg free
  1052  002CFE                     
  1053                           ;app.c: 48:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1054  002CFE  0E01               	movlw	1
  1055  002D00  EC6E  F012         	call	_Lcd_Cmd
  1056  002D04  0E02               	movlw	2
  1057  002D06  0100               	movlb	0	; () banked
  1058  002D08  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
  1059  002D0A  0E86               	movlw	134
  1060  002D0C  6F89               	movwf	??_appGetElements& (0+255),b
  1061  002D0E  0E99               	movlw	153
  1062  002D10                     u4517:
  1063  002D10  2EE8               	decfsz	wreg,f,c
  1064  002D12  D7FE               	bra	u4517
  1065  002D14  2F89               	decfsz	??_appGetElements& (0+255),f,b
  1066  002D16  D7FC               	bra	u4517
  1067  002D18  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1068  002D1A  D7FA               	bra	u4517
  1069  002D1C                     
  1070                           ;app.c: 49:     appSubGiveElemts(&datos);
  1071  002D1C  0EB8               	movlw	low _datos
  1072  002D1E  6E04               	movwf	appSubGiveElemts@data^0,c
  1073  002D20  0E00               	movlw	high _datos
  1074  002D22  6E05               	movwf	(appSubGiveElemts@data+1)^0,c
  1075  002D24  ECE1  F018         	call	_appSubGiveElemts	;wreg free
  1076  002D28                     
  1077                           ;app.c: 50:     datos.nextFunc = appStateInitial;
  1078  002D28  0EEE               	movlw	low _appStateInitial
  1079  002D2A  0100               	movlb	0	; () banked
  1080  002D2C  6FCF               	movwf	(_datos+23)& (0+255),b
  1081  002D2E  0E30               	movlw	high _appStateInitial
  1082  002D30  6FD0               	movwf	(_datos+24)& (0+255),b
  1083  002D32                     
  1084                           ; BSR set to: 0
  1085                           ;app.c: 52:     appTimerStart();
  1086  002D32  ECD7  F018         	call	_appTimerStart	;wreg free
  1087  002D36  0012               	return		;funcret
  1088  002D38                     __end_of_appGetElements:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _appStateRecolectData *****************
  1092 ;; Defined at:
  1093 ;;		line 24 in file "app.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:   11
  1114 ;; This function calls:
  1115 ;;		_appADC
  1116 ;;		_appBat
  1117 ;;		_appElemts
  1118 ;; This function is called by:
  1119 ;;		_isrL
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text2
  1125  003050                     __ptext2:
  1126                           	callstack 0
  1127  003050                     _appStateRecolectData:
  1128                           	callstack 19
  1129  003050                     
  1130                           ;app.c: 26:     appADC(&datos);
  1131  003050  0EB8               	movlw	low _datos
  1132  003052  0100               	movlb	0	; () banked
  1133  003054  6F84               	movwf	appADC@data& (0+255),b
  1134  003056  0E00               	movlw	high _datos
  1135  003058  6F85               	movwf	(appADC@data+1)& (0+255),b
  1136  00305A  ECF8  F00D         	call	_appADC	;wreg free
  1137                           
  1138                           ;app.c: 27:     appBat(&datos);
  1139  00305E  0EB8               	movlw	low _datos
  1140  003060  0100               	movlb	0	; () banked
  1141  003062  6F84               	movwf	appBat@data& (0+255),b
  1142  003064  0E00               	movlw	high _datos
  1143  003066  6F85               	movwf	(appBat@data+1)& (0+255),b
  1144  003068  EC2A  F00C         	call	_appBat	;wreg free
  1145                           
  1146                           ;app.c: 28:     appElemts(&datos.elements);
  1147  00306C  0EB9               	movlw	low (_datos+1)
  1148  00306E  0100               	movlb	0	; () banked
  1149  003070  6F84               	movwf	appElemts@elements& (0+255),b
  1150  003072  0E00               	movlw	high (_datos+1)
  1151  003074  6F85               	movwf	(appElemts@elements+1)& (0+255),b
  1152  003076  EC68  F017         	call	_appElemts	;wreg free
  1153  00307A                     
  1154                           ;app.c: 29:     datos.nextFunc = appStateInitial;
  1155  00307A  0EEE               	movlw	low _appStateInitial
  1156  00307C  0100               	movlb	0	; () banked
  1157  00307E  6FCF               	movwf	(_datos+23)& (0+255),b
  1158  003080  0E30               	movlw	high _appStateInitial
  1159  003082  6FD0               	movwf	(_datos+24)& (0+255),b
  1160  003084                     
  1161                           ; BSR set to: 0
  1162  003084  0012               	return		;funcret
  1163  003086                     __end_of_appStateRecolectData:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _appStateInitial *****************
  1167 ;; Defined at:
  1168 ;;		line 31 in file "app.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    3
  1189 ;; This function calls:
  1190 ;;		_teclado
  1191 ;; This function is called by:
  1192 ;;		_appStateRecolectData
  1193 ;;		_appGetElements
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text3
  1199  0030EE                     __ptext3:
  1200                           	callstack 0
  1201  0030EE                     _appStateInitial:
  1202                           	callstack 27
  1203  0030EE                     
  1204                           ;app.c: 34:     teclado(&datos.character);
  1205  0030EE  0EBE               	movlw	low (_datos+6)
  1206  0030F0  6E04               	movwf	teclado@valor^0,c
  1207  0030F2  0E00               	movlw	high (_datos+6)
  1208  0030F4  6E05               	movwf	(teclado@valor+1)^0,c
  1209  0030F6  EC35  F00B         	call	_teclado	;wreg free
  1210  0030FA                     
  1211                           ;app.c: 35:     if(datos.character != 0)
  1212  0030FA  0100               	movlb	0	; () banked
  1213  0030FC  51BE               	movf	(_datos+6)& (0+255),w,b
  1214  0030FE  B4D8               	btfsc	status,2,c
  1215  003100  EF84  F018         	goto	u3611
  1216  003104  EF86  F018         	goto	u3610
  1217  003108                     u3611:
  1218  003108  EF8A  F018         	goto	l292
  1219  00310C                     u3610:
  1220  00310C                     
  1221                           ; BSR set to: 0
  1222                           ;app.c: 36:     {;app.c: 37:         datos.state = 1;
  1223  00310C  0E01               	movlw	1
  1224  00310E  6FBB               	movwf	(_datos+3)& (0+255),b
  1225                           
  1226                           ;app.c: 38:         datos.character = 0;
  1227  003110  0E00               	movlw	0
  1228  003112  6FBE               	movwf	(_datos+6)& (0+255),b
  1229  003114                     l292:
  1230                           
  1231                           ; BSR set to: 0
  1232  003114  0012               	return		;funcret
  1233  003116                     __end_of_appStateInitial:
  1234                           	callstack 0
  1235                           
  1236 ;; *************** function _warning *****************
  1237 ;; Defined at:
  1238 ;;		line 84 in file "app.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1252 ;;      Params:         0       0       0       0       0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1254 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1255 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1256 ;;Total ram usage:        2 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    4
  1259 ;; This function calls:
  1260 ;;		_Lcd_Cmd
  1261 ;;		_Lcd_Out
  1262 ;; This function is called by:
  1263 ;;		_isrH
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text4
  1269  002E88                     __ptext4:
  1270                           	callstack 0
  1271  002E88                     _warning:
  1272                           	callstack 26
  1273  002E88                     
  1274                           ;app.c: 86:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1275  002E88  0E01               	movlw	1
  1276  002E8A  EC6E  F012         	call	_Lcd_Cmd
  1277  002E8E  0E02               	movlw	2
  1278  002E90  6E0F               	movwf	(??_warning+1)^0,c
  1279  002E92  0E86               	movlw	134
  1280  002E94  6E0E               	movwf	??_warning^0,c
  1281  002E96  0E99               	movlw	153
  1282  002E98                     u4527:
  1283  002E98  2EE8               	decfsz	wreg,f,c
  1284  002E9A  D7FE               	bra	u4527
  1285  002E9C  2E0E               	decfsz	??_warning^0,f,c
  1286  002E9E  D7FC               	bra	u4527
  1287  002EA0  2E0F               	decfsz	(??_warning+1)^0,f,c
  1288  002EA2  D7FA               	bra	u4527
  1289  002EA4  F000               	nop	
  1290  002EA6                     l3781:
  1291                           
  1292                           ;app.c: 88:     {;app.c: 89:         Lcd_Out(1,0, (const int8_t*)"Sin vacunas");
  1293  002EA6  0E00               	movlw	0
  1294  002EA8  6E07               	movwf	Lcd_Out@x^0,c
  1295  002EAA  0E2E               	movlw	low STR_8
  1296  002EAC  6E08               	movwf	Lcd_Out@buffer^0,c
  1297  002EAE  0E08               	movlw	high STR_8
  1298  002EB0  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1299  002EB2  0E01               	movlw	1
  1300  002EB4  EC05  F014         	call	_Lcd_Out
  1301  002EB8                     
  1302                           ;app.c: 90:         Lcd_Out(2,0, (const int8_t*)"Recarga Porfavor");
  1303  002EB8  0E00               	movlw	0
  1304  002EBA  6E07               	movwf	Lcd_Out@x^0,c
  1305  002EBC  0E01               	movlw	low STR_9
  1306  002EBE  6E08               	movwf	Lcd_Out@buffer^0,c
  1307  002EC0  0E08               	movlw	high STR_9
  1308  002EC2  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1309  002EC4  0E02               	movlw	2
  1310  002EC6  EC05  F014         	call	_Lcd_Out
  1311  002ECA  EF53  F017         	goto	l3781
  1312  002ECE  0012               	return		;funcret
  1313  002ED0                     __end_of_warning:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _appElemts *****************
  1317 ;; Defined at:
  1318 ;;		line 118 in file "servo.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  elements        2   36[BANK0 ] PTR const short 
  1321 ;;		 -> datos.elements(2), datos(25), 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  dataout         6   38[BANK0 ] unsigned char [6]
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1333 ;;      Params:         0       2       0       0       0       0       0       0       0
  1334 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1336 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1337 ;;Total ram usage:        8 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:   10
  1340 ;; This function calls:
  1341 ;;		_Lcd_Out
  1342 ;;		_sprintf
  1343 ;; This function is called by:
  1344 ;;		_appStateRecolectData
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text5
  1349  002ED0                     __ptext5:
  1350                           	callstack 0
  1351  002ED0                     _appElemts:
  1352                           	callstack 19
  1353  002ED0                     
  1354                           ;servo.c: 118: void appElemts(const int16_t * elements);servo.c: 119: {;servo.c: 120:   
      +                            uint8_t dataout[6] = {0};
  1355  002ED0  EE20  F086         	lfsr	2,appElemts@dataout
  1356  002ED4  0E05               	movlw	5
  1357  002ED6                     u4371:
  1358  002ED6  6ADE               	clrf	postinc2,c
  1359  002ED8  06E8               	decf	wreg,f,c
  1360  002EDA  E2FD               	bc	u4371
  1361  002EDC                     
  1362                           ;servo.c: 121:     sprintf((char *)dataout,"#:%d",*elements);
  1363  002EDC  0E86               	movlw	low appElemts@dataout
  1364  002EDE  0100               	movlb	0	; () banked
  1365  002EE0  6F72               	movwf	sprintf@s& (0+255),b
  1366  002EE2  0E00               	movlw	high appElemts@dataout
  1367  002EE4  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1368  002EE6  0E55               	movlw	low STR_5
  1369  002EE8  6F74               	movwf	sprintf@fmt& (0+255),b
  1370  002EEA  0E08               	movlw	high STR_5
  1371  002EEC  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1372  002EEE  C084  FFD9         	movff	appElemts@elements,fsr2l
  1373  002EF2  C085  FFDA         	movff	appElemts@elements+1,fsr2h
  1374  002EF6  CFDE F076          	movff	postinc2,?_sprintf+4
  1375  002EFA  CFDD F077          	movff	postdec2,?_sprintf+5
  1376  002EFE  ECCD  F016         	call	_sprintf	;wreg free
  1377  002F02                     
  1378                           ;servo.c: 122:     Lcd_Out(2,10, (int8_t*)dataout);
  1379  002F02  0E0A               	movlw	10
  1380  002F04  6E07               	movwf	Lcd_Out@x^0,c
  1381  002F06  0E86               	movlw	low appElemts@dataout
  1382  002F08  6E08               	movwf	Lcd_Out@buffer^0,c
  1383  002F0A  0E00               	movlw	high appElemts@dataout
  1384  002F0C  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1385  002F0E  0E02               	movlw	2
  1386  002F10  EC05  F014         	call	_Lcd_Out
  1387  002F14  0012               	return		;funcret
  1388  002F16                     __end_of_appElemts:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _appBat *****************
  1392 ;; Defined at:
  1393 ;;		line 73 in file "adc.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  data            2   36[BANK0 ] PTR struct _state
  1396 ;;		 -> datos(25), 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1408 ;;      Params:         0       2       0       0       0       0       0       0       0
  1409 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1410 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1411 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1412 ;;Total ram usage:        8 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:   10
  1415 ;; This function calls:
  1416 ;;		_Lcd_Out
  1417 ;;		___fldiv
  1418 ;;		___flmul
  1419 ;;		___fltol
  1420 ;;		___xxtofl
  1421 ;;		_adcGetValue
  1422 ;;		_memset
  1423 ;;		_sprintf
  1424 ;; This function is called by:
  1425 ;;		_appStateRecolectData
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text6
  1430  001854                     __ptext6:
  1431                           	callstack 0
  1432  001854                     _appBat:
  1433                           	callstack 19
  1434  001854                     
  1435                           ;adc.c: 73: void appBat(StateMachine *data);adc.c: 74: {;adc.c: 75:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1436  001854  0E07               	movlw	7
  1437  001856  0100               	movlb	0	; () banked
  1438  001858  2584               	addwf	appBat@data& (0+255),w,b
  1439  00185A  6E04               	movwf	memset@dest^0,c
  1440  00185C  0E00               	movlw	0
  1441  00185E  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1442  001860  6E05               	movwf	(memset@dest+1)^0,c
  1443  001862  0E00               	movlw	0
  1444  001864  6E07               	movwf	(memset@c+1)^0,c
  1445  001866  0E00               	movlw	0
  1446  001868  6E06               	movwf	memset@c^0,c
  1447  00186A  0E00               	movlw	0
  1448  00186C  6E09               	movwf	(memset@n+1)^0,c
  1449  00186E  0E10               	movlw	16
  1450  001870  6E08               	movwf	memset@n^0,c
  1451  001872  EC5A  F010         	call	_memset	;wreg free
  1452                           
  1453                           ;adc.c: 80:     data->bat = adcGetValue(1);
  1454  001876  0E01               	movlw	1
  1455  001878  ECEE  F017         	call	_adcGetValue
  1456  00187C  0100               	movlb	0	; () banked
  1457  00187E  EE20 F004          	lfsr	2,4
  1458  001882  5184               	movf	appBat@data& (0+255),w,b
  1459  001884  26D9               	addwf	fsr2l,f,c
  1460  001886  5185               	movf	(appBat@data+1)& (0+255),w,b
  1461  001888  22DA               	addwfc	fsr2h,f,c
  1462  00188A  C004  FFDE         	movff	?_adcGetValue,postinc2
  1463  00188E  C005  FFDD         	movff	?_adcGetValue+1,postdec2
  1464  001892                     
  1465                           ; BSR set to: 0
  1466                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1467  001892  0E00               	movlw	0
  1468  001894  6E33               	movwf	___fldiv@a^0,c
  1469  001896  0E00               	movlw	0
  1470  001898  6E34               	movwf	(___fldiv@a+1)^0,c
  1471  00189A  0E80               	movlw	128
  1472  00189C  6E35               	movwf	(___fldiv@a+2)^0,c
  1473  00189E  0E44               	movlw	68
  1474  0018A0  6E36               	movwf	(___fldiv@a+3)^0,c
  1475  0018A2  0E00               	movlw	0
  1476  0018A4  6E1A               	movwf	___flmul@a^0,c
  1477  0018A6  0E00               	movlw	0
  1478  0018A8  6E1B               	movwf	(___flmul@a+1)^0,c
  1479  0018AA  0EA0               	movlw	160
  1480  0018AC  6E1C               	movwf	(___flmul@a+2)^0,c
  1481  0018AE  0E40               	movlw	64
  1482  0018B0  6E1D               	movwf	(___flmul@a+3)^0,c
  1483  0018B2  EE20 F004          	lfsr	2,4
  1484  0018B6  5184               	movf	appBat@data& (0+255),w,b
  1485  0018B8  26D9               	addwf	fsr2l,f,c
  1486  0018BA  5185               	movf	(appBat@data+1)& (0+255),w,b
  1487  0018BC  22DA               	addwfc	fsr2h,f,c
  1488  0018BE  CFDE F086          	movff	postinc2,??_appBat
  1489  0018C2  CFDD F087          	movff	postdec2,??_appBat+1
  1490  0018C6  C086  F008         	movff	??_appBat,___xxtofl@val
  1491  0018CA  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1492  0018CE  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1493  0018D0  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1494  0018D2  0E00               	movlw	0
  1495  0018D4  EC1E  F00D         	call	___xxtofl
  1496  0018D8  C008  F016         	movff	?___xxtofl,___flmul@b
  1497  0018DC  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1498  0018E0  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1499  0018E4  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1500  0018E8  EC2E  F004         	call	___flmul	;wreg free
  1501  0018EC  C016  F02F         	movff	?___flmul,___fldiv@b
  1502  0018F0  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1503  0018F4  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1504  0018F8  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1505  0018FC  EC43  F006         	call	___fldiv	;wreg free
  1506  001900  C02F  F088         	movff	?___fldiv,_appBat$2249
  1507  001904  C030  F089         	movff	?___fldiv+1,_appBat$2249+1
  1508  001908  C031  F08A         	movff	?___fldiv+2,_appBat$2249+2
  1509  00190C  C032  F08B         	movff	?___fldiv+3,_appBat$2249+3
  1510  001910                     
  1511                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1512  001910  0E00               	movlw	0
  1513  001912  6E1A               	movwf	___flmul@a^0,c
  1514  001914  0E00               	movlw	0
  1515  001916  6E1B               	movwf	(___flmul@a+1)^0,c
  1516  001918  0EC8               	movlw	200
  1517  00191A  6E1C               	movwf	(___flmul@a+2)^0,c
  1518  00191C  0E42               	movlw	66
  1519  00191E  6E1D               	movwf	(___flmul@a+3)^0,c
  1520  001920  C088  F016         	movff	_appBat$2249,___flmul@b
  1521  001924  C089  F017         	movff	_appBat$2249+1,___flmul@b+1
  1522  001928  C08A  F018         	movff	_appBat$2249+2,___flmul@b+2
  1523  00192C  C08B  F019         	movff	_appBat$2249+3,___flmul@b+3
  1524  001930  EC2E  F004         	call	___flmul	;wreg free
  1525  001934  C016  F048         	movff	?___flmul,___fltol@f1
  1526  001938  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1527  00193C  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1528  001940  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1529  001944  EC03  F013         	call	___fltol	;wreg free
  1530  001948  0100               	movlb	0	; () banked
  1531  00194A  EE20 F004          	lfsr	2,4
  1532  00194E  5184               	movf	appBat@data& (0+255),w,b
  1533  001950  26D9               	addwf	fsr2l,f,c
  1534  001952  5185               	movf	(appBat@data+1)& (0+255),w,b
  1535  001954  22DA               	addwfc	fsr2h,f,c
  1536  001956  C048  FFDE         	movff	?___fltol,postinc2
  1537  00195A  C049  FFDD         	movff	?___fltol+1,postdec2
  1538  00195E                     
  1539                           ; BSR set to: 0
  1540                           ;adc.c: 82:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  1541  00195E  0E00               	movlw	0
  1542  001960  6E33               	movwf	___fldiv@a^0,c
  1543  001962  0E00               	movlw	0
  1544  001964  6E34               	movwf	(___fldiv@a+1)^0,c
  1545  001966  0EFA               	movlw	250
  1546  001968  6E35               	movwf	(___fldiv@a+2)^0,c
  1547  00196A  0E43               	movlw	67
  1548  00196C  6E36               	movwf	(___fldiv@a+3)^0,c
  1549  00196E  0E00               	movlw	0
  1550  001970  6E1A               	movwf	___flmul@a^0,c
  1551  001972  0E00               	movlw	0
  1552  001974  6E1B               	movwf	(___flmul@a+1)^0,c
  1553  001976  0EC8               	movlw	200
  1554  001978  6E1C               	movwf	(___flmul@a+2)^0,c
  1555  00197A  0E42               	movlw	66
  1556  00197C  6E1D               	movwf	(___flmul@a+3)^0,c
  1557  00197E  EE20 F004          	lfsr	2,4
  1558  001982  5184               	movf	appBat@data& (0+255),w,b
  1559  001984  26D9               	addwf	fsr2l,f,c
  1560  001986  5185               	movf	(appBat@data+1)& (0+255),w,b
  1561  001988  22DA               	addwfc	fsr2h,f,c
  1562  00198A  CFDE F086          	movff	postinc2,??_appBat
  1563  00198E  CFDD F087          	movff	postdec2,??_appBat+1
  1564  001992  C086  F008         	movff	??_appBat,___xxtofl@val
  1565  001996  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1566  00199A  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1567  00199C  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1568  00199E  0E00               	movlw	0
  1569  0019A0  EC1E  F00D         	call	___xxtofl
  1570  0019A4  C008  F016         	movff	?___xxtofl,___flmul@b
  1571  0019A8  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1572  0019AC  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1573  0019B0  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1574  0019B4  EC2E  F004         	call	___flmul	;wreg free
  1575  0019B8  C016  F02F         	movff	?___flmul,___fldiv@b
  1576  0019BC  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1577  0019C0  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1578  0019C4  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1579  0019C8  EC43  F006         	call	___fldiv	;wreg free
  1580  0019CC  C02F  F048         	movff	?___fldiv,___fltol@f1
  1581  0019D0  C030  F049         	movff	?___fldiv+1,___fltol@f1+1
  1582  0019D4  C031  F04A         	movff	?___fldiv+2,___fltol@f1+2
  1583  0019D8  C032  F04B         	movff	?___fldiv+3,___fltol@f1+3
  1584  0019DC  EC03  F013         	call	___fltol	;wreg free
  1585  0019E0  0100               	movlb	0	; () banked
  1586  0019E2  EE20 F004          	lfsr	2,4
  1587  0019E6  5184               	movf	appBat@data& (0+255),w,b
  1588  0019E8  26D9               	addwf	fsr2l,f,c
  1589  0019EA  5185               	movf	(appBat@data+1)& (0+255),w,b
  1590  0019EC  22DA               	addwfc	fsr2h,f,c
  1591  0019EE  C048  FFDE         	movff	?___fltol,postinc2
  1592  0019F2  C049  FFDD         	movff	?___fltol+1,postdec2
  1593  0019F6                     
  1594                           ; BSR set to: 0
  1595                           ;adc.c: 83:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  1596  0019F6  0E07               	movlw	7
  1597  0019F8  2584               	addwf	appBat@data& (0+255),w,b
  1598  0019FA  6F72               	movwf	sprintf@s& (0+255),b
  1599  0019FC  0E00               	movlw	0
  1600  0019FE  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1601  001A00  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1602  001A02  0E46               	movlw	low STR_2
  1603  001A04  6F74               	movwf	sprintf@fmt& (0+255),b
  1604  001A06  0E08               	movlw	high STR_2
  1605  001A08  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1606  001A0A  EE20 F004          	lfsr	2,4
  1607  001A0E  5184               	movf	appBat@data& (0+255),w,b
  1608  001A10  26D9               	addwf	fsr2l,f,c
  1609  001A12  5185               	movf	(appBat@data+1)& (0+255),w,b
  1610  001A14  22DA               	addwfc	fsr2h,f,c
  1611  001A16  CFDE F076          	movff	postinc2,?_sprintf+4
  1612  001A1A  CFDD F077          	movff	postdec2,?_sprintf+5
  1613  001A1E  ECCD  F016         	call	_sprintf	;wreg free
  1614  001A22                     
  1615                           ;adc.c: 84:     Lcd_Out(2,0, (int8_t*)data->display);
  1616  001A22  0E00               	movlw	0
  1617  001A24  6E07               	movwf	Lcd_Out@x^0,c
  1618  001A26  0E07               	movlw	7
  1619  001A28  0100               	movlb	0	; () banked
  1620  001A2A  2584               	addwf	appBat@data& (0+255),w,b
  1621  001A2C  6E08               	movwf	Lcd_Out@buffer^0,c
  1622  001A2E  0E00               	movlw	0
  1623  001A30  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1624  001A32  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1625  001A34  0E02               	movlw	2
  1626  001A36  EC05  F014         	call	_Lcd_Out
  1627  001A3A  0012               	return		;funcret
  1628  001A3C                     __end_of_appBat:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _appADC *****************
  1632 ;; Defined at:
  1633 ;;		line 55 in file "adc.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  data            2   36[BANK0 ] PTR struct _state
  1636 ;;		 -> datos(25), 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  lm35val         4   38[BANK0 ] float 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1648 ;;      Params:         0       2       0       0       0       0       0       0       0
  1649 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1651 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1652 ;;Total ram usage:        6 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:   10
  1655 ;; This function calls:
  1656 ;;		_Lcd_Out
  1657 ;;		___awmod
  1658 ;;		___fldiv
  1659 ;;		___flmul
  1660 ;;		___fltol
  1661 ;;		___xxtofl
  1662 ;;		_adcGetValue
  1663 ;;		_memset
  1664 ;;		_sprintf
  1665 ;; This function is called by:
  1666 ;;		_appStateRecolectData
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text7
  1671  001BF0                     __ptext7:
  1672                           	callstack 0
  1673  001BF0                     _appADC:
  1674                           	callstack 19
  1675  001BF0                     
  1676                           ;adc.c: 55: void appADC(StateMachine *data);adc.c: 56: {;adc.c: 57:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1677  001BF0  0E07               	movlw	7
  1678  001BF2  0100               	movlb	0	; () banked
  1679  001BF4  2584               	addwf	appADC@data& (0+255),w,b
  1680  001BF6  6E04               	movwf	memset@dest^0,c
  1681  001BF8  0E00               	movlw	0
  1682  001BFA  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1683  001BFC  6E05               	movwf	(memset@dest+1)^0,c
  1684  001BFE  0E00               	movlw	0
  1685  001C00  6E07               	movwf	(memset@c+1)^0,c
  1686  001C02  0E00               	movlw	0
  1687  001C04  6E06               	movwf	memset@c^0,c
  1688  001C06  0E00               	movlw	0
  1689  001C08  6E09               	movwf	(memset@n+1)^0,c
  1690  001C0A  0E10               	movlw	16
  1691  001C0C  6E08               	movwf	memset@n^0,c
  1692  001C0E  EC5A  F010         	call	_memset	;wreg free
  1693  001C12                     
  1694                           ;adc.c: 58:     float lm35val = adcGetValue(0);
  1695  001C12  0E00               	movlw	0
  1696  001C14  ECEE  F017         	call	_adcGetValue
  1697  001C18  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1698  001C1C  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1699  001C20  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1700  001C22  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1701  001C24  0E00               	movlw	0
  1702  001C26  EC1E  F00D         	call	___xxtofl
  1703  001C2A  C008  F086         	movff	?___xxtofl,appADC@lm35val
  1704  001C2E  C009  F087         	movff	?___xxtofl+1,appADC@lm35val+1
  1705  001C32  C00A  F088         	movff	?___xxtofl+2,appADC@lm35val+2
  1706  001C36  C00B  F089         	movff	?___xxtofl+3,appADC@lm35val+3
  1707  001C3A                     
  1708                           ;adc.c: 59:     lm35val = (float)((lm35val*4.88)/10.0);
  1709  001C3A  0EF6               	movlw	246
  1710  001C3C  6E1A               	movwf	___flmul@a^0,c
  1711  001C3E  0E28               	movlw	40
  1712  001C40  6E1B               	movwf	(___flmul@a+1)^0,c
  1713  001C42  0E9C               	movlw	156
  1714  001C44  6E1C               	movwf	(___flmul@a+2)^0,c
  1715  001C46  0E40               	movlw	64
  1716  001C48  6E1D               	movwf	(___flmul@a+3)^0,c
  1717  001C4A  C086  F016         	movff	appADC@lm35val,___flmul@b
  1718  001C4E  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1719  001C52  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1720  001C56  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1721  001C5A  EC2E  F004         	call	___flmul	;wreg free
  1722  001C5E  C016  F02F         	movff	?___flmul,___fldiv@b
  1723  001C62  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1724  001C66  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1725  001C6A  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1726  001C6E  0E00               	movlw	0
  1727  001C70  6E33               	movwf	___fldiv@a^0,c
  1728  001C72  0E00               	movlw	0
  1729  001C74  6E34               	movwf	(___fldiv@a+1)^0,c
  1730  001C76  0E20               	movlw	32
  1731  001C78  6E35               	movwf	(___fldiv@a+2)^0,c
  1732  001C7A  0E41               	movlw	65
  1733  001C7C  6E36               	movwf	(___fldiv@a+3)^0,c
  1734  001C7E  EC43  F006         	call	___fldiv	;wreg free
  1735  001C82  C02F  F086         	movff	?___fldiv,appADC@lm35val
  1736  001C86  C030  F087         	movff	?___fldiv+1,appADC@lm35val+1
  1737  001C8A  C031  F088         	movff	?___fldiv+2,appADC@lm35val+2
  1738  001C8E  C032  F089         	movff	?___fldiv+3,appADC@lm35val+3
  1739  001C92                     
  1740                           ;adc.c: 61:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  1741  001C92  0E07               	movlw	7
  1742  001C94  0100               	movlb	0	; () banked
  1743  001C96  2584               	addwf	appADC@data& (0+255),w,b
  1744  001C98  6F72               	movwf	sprintf@s& (0+255),b
  1745  001C9A  0E00               	movlw	0
  1746  001C9C  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1747  001C9E  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1748  001CA0  0E20               	movlw	low STR_1
  1749  001CA2  6F74               	movwf	sprintf@fmt& (0+255),b
  1750  001CA4  0E08               	movlw	high STR_1
  1751  001CA6  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1752  001CA8  C086  F048         	movff	appADC@lm35val,___fltol@f1
  1753  001CAC  C087  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1754  001CB0  C088  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1755  001CB4  C089  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1756  001CB8  EC03  F013         	call	___fltol	;wreg free
  1757  001CBC  5048               	movf	?___fltol^0,w,c
  1758  001CBE  0100               	movlb	0	; () banked
  1759  001CC0  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1760  001CC2  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1761  001CC4  0E00               	movlw	0
  1762  001CC6  6E1A               	movwf	___flmul@a^0,c
  1763  001CC8  0E00               	movlw	0
  1764  001CCA  6E1B               	movwf	(___flmul@a+1)^0,c
  1765  001CCC  0EC8               	movlw	200
  1766  001CCE  6E1C               	movwf	(___flmul@a+2)^0,c
  1767  001CD0  0E42               	movlw	66
  1768  001CD2  6E1D               	movwf	(___flmul@a+3)^0,c
  1769  001CD4  C086  F016         	movff	appADC@lm35val,___flmul@b
  1770  001CD8  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1771  001CDC  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1772  001CE0  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1773  001CE4  EC2E  F004         	call	___flmul	;wreg free
  1774  001CE8  C016  F048         	movff	?___flmul,___fltol@f1
  1775  001CEC  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1776  001CF0  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1777  001CF4  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1778  001CF8  EC03  F013         	call	___fltol	;wreg free
  1779  001CFC  5048               	movf	?___fltol^0,w,c
  1780  001CFE  6E52               	movwf	___awmod@dividend^0,c
  1781  001D00  6A53               	clrf	(___awmod@dividend+1)^0,c
  1782  001D02  0E00               	movlw	0
  1783  001D04  6E55               	movwf	(___awmod@divisor+1)^0,c
  1784  001D06  0E64               	movlw	100
  1785  001D08  6E54               	movwf	___awmod@divisor^0,c
  1786  001D0A  EC91  F015         	call	___awmod	;wreg free
  1787  001D0E  5052               	movf	?___awmod^0,w,c
  1788  001D10  0100               	movlb	0	; () banked
  1789  001D12  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1790  001D14  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1791  001D16  ECCD  F016         	call	_sprintf	;wreg free
  1792  001D1A                     
  1793                           ;adc.c: 62:     Lcd_Out(1,0, (int8_t*)data->display);
  1794  001D1A  0E00               	movlw	0
  1795  001D1C  6E07               	movwf	Lcd_Out@x^0,c
  1796  001D1E  0E07               	movlw	7
  1797  001D20  0100               	movlb	0	; () banked
  1798  001D22  2584               	addwf	appADC@data& (0+255),w,b
  1799  001D24  6E08               	movwf	Lcd_Out@buffer^0,c
  1800  001D26  0E00               	movlw	0
  1801  001D28  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1802  001D2A  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1803  001D2C  0E01               	movlw	1
  1804  001D2E  EC05  F014         	call	_Lcd_Out
  1805                           
  1806                           ;adc.c: 63:     if(((int)lm35val < 2))
  1807  001D32  C086  F048         	movff	appADC@lm35val,___fltol@f1
  1808  001D36  C087  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1809  001D3A  C088  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1810  001D3E  C089  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1811  001D42  EC03  F013         	call	___fltol	;wreg free
  1812  001D46  BE49               	btfsc	(?___fltol+1)^0,7,c
  1813  001D48  EFB1  F00E         	goto	u4350
  1814  001D4C  5049               	movf	(?___fltol+1)^0,w,c
  1815  001D4E  E107               	bnz	u4351
  1816  001D50  0E02               	movlw	2
  1817  001D52  5C48               	subwf	?___fltol^0,w,c
  1818  001D54  B0D8               	btfsc	status,0,c
  1819  001D56  EFAF  F00E         	goto	u4351
  1820  001D5A  EFB1  F00E         	goto	u4350
  1821  001D5E                     u4351:
  1822  001D5E  EFB4  F00E         	goto	l4315
  1823  001D62                     u4350:
  1824  001D62                     
  1825                           ;adc.c: 64:     {;adc.c: 65:         LATCbits.LATC1 = 0;
  1826  001D62  928B               	bcf	139,1,c	;volatile
  1827                           
  1828                           ;adc.c: 66:     }
  1829  001D64  EFCD  F00E         	goto	l39
  1830  001D68                     l4315:
  1831  001D68  C086  F048         	movff	appADC@lm35val,___fltol@f1
  1832  001D6C  C087  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1833  001D70  C088  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1834  001D74  C089  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1835  001D78  EC03  F013         	call	___fltol	;wreg free
  1836  001D7C  BE49               	btfsc	(?___fltol+1)^0,7,c
  1837  001D7E  EFCA  F00E         	goto	u4361
  1838  001D82  5049               	movf	(?___fltol+1)^0,w,c
  1839  001D84  E109               	bnz	u4360
  1840  001D86  0E07               	movlw	7
  1841  001D88  5C48               	subwf	?___fltol^0,w,c
  1842  001D8A  A0D8               	btfss	status,0,c
  1843  001D8C  EFCA  F00E         	goto	u4361
  1844  001D90  EFCC  F00E         	goto	u4360
  1845  001D94                     u4361:
  1846  001D94  EFCD  F00E         	goto	l39
  1847  001D98                     u4360:
  1848  001D98                     
  1849                           ;adc.c: 68:     {;adc.c: 69:         LATCbits.LATC1 = 1;
  1850  001D98  828B               	bsf	139,1,c	;volatile
  1851  001D9A                     l39:
  1852  001D9A  0012               	return		;funcret
  1853  001D9C                     __end_of_appADC:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _adcGetValue *****************
  1857 ;; Defined at:
  1858 ;;		line 44 in file "adc.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  PinADC          1    wreg     unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  PinADC          1    6[COMRAM] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2    3[COMRAM] unsigned short 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1872 ;;      Params:         2       0       0       0       0       0       0       0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1874 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1875 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1876 ;;Total ram usage:        4 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    2
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_appADC
  1883 ;;		_appBat
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text8
  1888  002FDC                     __ptext8:
  1889                           	callstack 0
  1890  002FDC                     _adcGetValue:
  1891                           	callstack 26
  1892                           
  1893                           ;incstack = 0
  1894                           ;adcGetValue@PinADC stored from wreg
  1895  002FDC  6E07               	movwf	adcGetValue@PinADC^0,c
  1896  002FDE                     
  1897                           ;adc.c: 44: uint16_t adcGetValue(uint8_t PinADC);adc.c: 45: {;adc.c: 46:     ADCON0bits.
      +                          CHS = PinADC;
  1898  002FDE  C007  F006         	movff	adcGetValue@PinADC,??_adcGetValue
  1899  002FE2  4606               	rlncf	??_adcGetValue^0,f,c
  1900  002FE4  4606               	rlncf	??_adcGetValue^0,f,c
  1901  002FE6  50C2               	movf	194,w,c	;volatile
  1902  002FE8  1806               	xorwf	??_adcGetValue^0,w,c
  1903  002FEA  0BC3               	andlw	-61
  1904  002FEC  1806               	xorwf	??_adcGetValue^0,w,c
  1905  002FEE  6EC2               	movwf	194,c	;volatile
  1906  002FF0                     
  1907                           ;adc.c: 47:     _delay((unsigned long)((2)*(12000000/4000.0)));
  1908  002FF0  0E08               	movlw	8
  1909  002FF2  6E06               	movwf	??_adcGetValue^0,c
  1910  002FF4  0ECA               	movlw	202
  1911  002FF6                     u4537:
  1912  002FF6  2EE8               	decfsz	wreg,f,c
  1913  002FF8  D7FE               	bra	u4537
  1914  002FFA  2E06               	decfsz	??_adcGetValue^0,f,c
  1915  002FFC  D7FC               	bra	u4537
  1916  002FFE                     
  1917                           ;adc.c: 48:     GO_nDONE = 1;
  1918  002FFE  82C2               	bsf	4034,1,c	;volatile
  1919  003000                     l30:
  1920                           
  1921                           ;adc.c: 49:     while(ADCON0bits.GO_DONE)
  1922  003000  B2C2               	btfsc	194,1,c	;volatile
  1923  003002  EF05  F018         	goto	u2611
  1924  003006  EF07  F018         	goto	u2610
  1925  00300A                     u2611:
  1926  00300A  EF00  F018         	goto	l30
  1927  00300E                     u2610:
  1928  00300E                     
  1929                           ;adc.c: 52:     return ADRES;
  1930  00300E  CFC3 F004          	movff	4035,?_adcGetValue	;volatile
  1931  003012  CFC4 F005          	movff	4036,?_adcGetValue+1	;volatile
  1932  003016  0012               	return		;funcret
  1933  003018                     __end_of_adcGetValue:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function ___xxtofl *****************
  1937 ;; Defined at:
  1938 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  sign            1    wreg     unsigned char 
  1941 ;;  val             4    7[COMRAM] long 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  sign            1   15[COMRAM] unsigned char 
  1944 ;;  arg             4   17[COMRAM] unsigned long 
  1945 ;;  exp             1   16[COMRAM] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  4    7[COMRAM] unsigned char 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1955 ;;      Params:         4       0       0       0       0       0       0       0       0
  1956 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1957 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1958 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1959 ;;Total ram usage:       14 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    2
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_appADC
  1966 ;;		_appBat
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text9
  1971  001A3C                     __ptext9:
  1972                           	callstack 0
  1973  001A3C                     ___xxtofl:
  1974                           	callstack 26
  1975                           
  1976                           ;incstack = 0
  1977                           ;___xxtofl@sign stored from wreg
  1978  001A3C  6E10               	movwf	___xxtofl@sign^0,c
  1979  001A3E  5010               	movf	___xxtofl@sign^0,w,c
  1980  001A40  B4D8               	btfsc	status,2,c
  1981  001A42  EF25  F00D         	goto	u3441
  1982  001A46  EF27  F00D         	goto	u3440
  1983  001A4A                     u3441:
  1984  001A4A  EF49  F00D         	goto	l987
  1985  001A4E                     u3440:
  1986  001A4E  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  1987  001A50  EF2E  F00D         	goto	u3450
  1988  001A54  EF2C  F00D         	goto	u3451
  1989  001A58                     u3451:
  1990  001A58  EF49  F00D         	goto	l987
  1991  001A5C                     u3450:
  1992  001A5C  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  1993  001A60  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  1994  001A64  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  1995  001A68  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  1996  001A6C  1E0C               	comf	??___xxtofl^0,f,c
  1997  001A6E  1E0D               	comf	(??___xxtofl+1)^0,f,c
  1998  001A70  1E0E               	comf	(??___xxtofl+2)^0,f,c
  1999  001A72  1E0F               	comf	(??___xxtofl+3)^0,f,c
  2000  001A74  2A0C               	incf	??___xxtofl^0,f,c
  2001  001A76  0E00               	movlw	0
  2002  001A78  220D               	addwfc	(??___xxtofl+1)^0,f,c
  2003  001A7A  220E               	addwfc	(??___xxtofl+2)^0,f,c
  2004  001A7C  220F               	addwfc	(??___xxtofl+3)^0,f,c
  2005  001A7E  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  2006  001A82  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  2007  001A86  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  2008  001A8A  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  2009  001A8E  EF51  F00D         	goto	l3567
  2010  001A92                     l987:
  2011  001A92  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  2012  001A96  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2013  001A9A  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2014  001A9E  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2015  001AA2                     l3567:
  2016  001AA2  5008               	movf	___xxtofl@val^0,w,c
  2017  001AA4  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  2018  001AA6  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  2019  001AA8  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  2020  001AAA  A4D8               	btfss	status,2,c
  2021  001AAC  EF5A  F00D         	goto	u3461
  2022  001AB0  EF5C  F00D         	goto	u3460
  2023  001AB4                     u3461:
  2024  001AB4  EF66  F00D         	goto	l3573
  2025  001AB8                     u3460:
  2026  001AB8  0E00               	movlw	0
  2027  001ABA  6E08               	movwf	?___xxtofl^0,c
  2028  001ABC  0E00               	movlw	0
  2029  001ABE  6E09               	movwf	(?___xxtofl+1)^0,c
  2030  001AC0  0E00               	movlw	0
  2031  001AC2  6E0A               	movwf	(?___xxtofl+2)^0,c
  2032  001AC4  0E00               	movlw	0
  2033  001AC6  6E0B               	movwf	(?___xxtofl+3)^0,c
  2034  001AC8  EFF7  F00D         	goto	l990
  2035  001ACC                     l3573:
  2036  001ACC  0E96               	movlw	150
  2037  001ACE  6E11               	movwf	___xxtofl@exp^0,c
  2038  001AD0  EF70  F00D         	goto	l3577
  2039  001AD4                     l3575:
  2040  001AD4  2A11               	incf	___xxtofl@exp^0,f,c
  2041  001AD6  90D8               	bcf	status,0,c
  2042  001AD8  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2043  001ADA  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2044  001ADC  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2045  001ADE  3212               	rrcf	___xxtofl@arg^0,f,c
  2046  001AE0                     l3577:
  2047  001AE0  0E00               	movlw	0
  2048  001AE2  1412               	andwf	___xxtofl@arg^0,w,c
  2049  001AE4  6E0C               	movwf	??___xxtofl^0,c
  2050  001AE6  0E00               	movlw	0
  2051  001AE8  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2052  001AEA  6E0D               	movwf	(??___xxtofl+1)^0,c
  2053  001AEC  0E00               	movlw	0
  2054  001AEE  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2055  001AF0  6E0E               	movwf	(??___xxtofl+2)^0,c
  2056  001AF2  0EFE               	movlw	254
  2057  001AF4  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2058  001AF6  6E0F               	movwf	(??___xxtofl+3)^0,c
  2059  001AF8  500C               	movf	??___xxtofl^0,w,c
  2060  001AFA  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2061  001AFC  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2062  001AFE  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2063  001B00  A4D8               	btfss	status,2,c
  2064  001B02  EF85  F00D         	goto	u3471
  2065  001B06  EF87  F00D         	goto	u3470
  2066  001B0A                     u3471:
  2067  001B0A  EF6A  F00D         	goto	l3575
  2068  001B0E                     u3470:
  2069  001B0E  EF95  F00D         	goto	l994
  2070  001B12                     l3579:
  2071  001B12  2A11               	incf	___xxtofl@exp^0,f,c
  2072  001B14  0E01               	movlw	1
  2073  001B16  2612               	addwf	___xxtofl@arg^0,f,c
  2074  001B18  0E00               	movlw	0
  2075  001B1A  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  2076  001B1C  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  2077  001B1E  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  2078  001B20  90D8               	bcf	status,0,c
  2079  001B22  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2080  001B24  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2081  001B26  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2082  001B28  3212               	rrcf	___xxtofl@arg^0,f,c
  2083  001B2A                     l994:
  2084  001B2A  0E00               	movlw	0
  2085  001B2C  1412               	andwf	___xxtofl@arg^0,w,c
  2086  001B2E  6E0C               	movwf	??___xxtofl^0,c
  2087  001B30  0E00               	movlw	0
  2088  001B32  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2089  001B34  6E0D               	movwf	(??___xxtofl+1)^0,c
  2090  001B36  0E00               	movlw	0
  2091  001B38  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2092  001B3A  6E0E               	movwf	(??___xxtofl+2)^0,c
  2093  001B3C  0EFF               	movlw	255
  2094  001B3E  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2095  001B40  6E0F               	movwf	(??___xxtofl+3)^0,c
  2096  001B42  500C               	movf	??___xxtofl^0,w,c
  2097  001B44  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2098  001B46  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2099  001B48  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2100  001B4A  A4D8               	btfss	status,2,c
  2101  001B4C  EFAA  F00D         	goto	u3481
  2102  001B50  EFAC  F00D         	goto	u3480
  2103  001B54                     u3481:
  2104  001B54  EF89  F00D         	goto	l3579
  2105  001B58                     u3480:
  2106  001B58  EFB4  F00D         	goto	l3587
  2107  001B5C                     l3585:
  2108  001B5C  0611               	decf	___xxtofl@exp^0,f,c
  2109  001B5E  90D8               	bcf	status,0,c
  2110  001B60  3612               	rlcf	___xxtofl@arg^0,f,c
  2111  001B62  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  2112  001B64  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  2113  001B66  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  2114  001B68                     l3587:
  2115  001B68  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  2116  001B6A  EFB9  F00D         	goto	u3491
  2117  001B6E  EFBB  F00D         	goto	u3490
  2118  001B72                     u3491:
  2119  001B72  EFC3  F00D         	goto	l1001
  2120  001B76                     u3490:
  2121  001B76  0E02               	movlw	2
  2122  001B78  6011               	cpfslt	___xxtofl@exp^0,c
  2123  001B7A  EFC1  F00D         	goto	u3501
  2124  001B7E  EFC3  F00D         	goto	u3500
  2125  001B82                     u3501:
  2126  001B82  EFAE  F00D         	goto	l3585
  2127  001B86                     u3500:
  2128  001B86                     l1001:
  2129  001B86  B011               	btfsc	___xxtofl@exp^0,0,c
  2130  001B88  EFC8  F00D         	goto	u3511
  2131  001B8C  EFCA  F00D         	goto	u3510
  2132  001B90                     u3511:
  2133  001B90  EFCB  F00D         	goto	l3593
  2134  001B94                     u3510:
  2135  001B94  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  2136  001B96                     l3593:
  2137  001B96  90D8               	bcf	status,0,c
  2138  001B98  3211               	rrcf	___xxtofl@exp^0,f,c
  2139  001B9A  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  2140  001B9E  6A0D               	clrf	(??___xxtofl+1)^0,c
  2141  001BA0  6A0E               	clrf	(??___xxtofl+2)^0,c
  2142  001BA2  6A0F               	clrf	(??___xxtofl+3)^0,c
  2143  001BA4  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  2144  001BA8  6A0E               	clrf	(??___xxtofl+2)^0,c
  2145  001BAA  6A0D               	clrf	(??___xxtofl+1)^0,c
  2146  001BAC  6A0C               	clrf	??___xxtofl^0,c
  2147  001BAE  500C               	movf	??___xxtofl^0,w,c
  2148  001BB0  1212               	iorwf	___xxtofl@arg^0,f,c
  2149  001BB2  500D               	movf	(??___xxtofl+1)^0,w,c
  2150  001BB4  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  2151  001BB6  500E               	movf	(??___xxtofl+2)^0,w,c
  2152  001BB8  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  2153  001BBA  500F               	movf	(??___xxtofl+3)^0,w,c
  2154  001BBC  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  2155  001BBE  5010               	movf	___xxtofl@sign^0,w,c
  2156  001BC0  B4D8               	btfsc	status,2,c
  2157  001BC2  EFE5  F00D         	goto	u3521
  2158  001BC6  EFE7  F00D         	goto	u3520
  2159  001BCA                     u3521:
  2160  001BCA  EFEF  F00D         	goto	l3603
  2161  001BCE                     u3520:
  2162  001BCE  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2163  001BD0  EFEE  F00D         	goto	u3530
  2164  001BD4  EFEC  F00D         	goto	u3531
  2165  001BD8                     u3531:
  2166  001BD8  EFEF  F00D         	goto	l3603
  2167  001BDC                     u3530:
  2168  001BDC  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  2169  001BDE                     l3603:
  2170  001BDE  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  2171  001BE2  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  2172  001BE6  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  2173  001BEA  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  2174  001BEE                     l990:
  2175  001BEE  0012               	return		;funcret
  2176  001BF0                     __end_of___xxtofl:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function ___fltol *****************
  2180 ;; Defined at:
  2181 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  f1              4   71[COMRAM] unsigned char 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  exp1            1   80[COMRAM] unsigned char 
  2186 ;;  sign1           1   79[COMRAM] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  4   71[COMRAM] long 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2196 ;;      Params:         4       0       0       0       0       0       0       0       0
  2197 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2198 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2199 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2200 ;;Total ram usage:       10 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    2
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_appADC
  2207 ;;		_appBat
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text10
  2212  002606                     __ptext10:
  2213                           	callstack 0
  2214  002606                     ___fltol:
  2215                           	callstack 26
  2216  002606  344A               	rlcf	(___fltol@f1+2)^0,w,c
  2217  002608  344B               	rlcf	(___fltol@f1+3)^0,w,c
  2218  00260A  6E51               	movwf	___fltol@exp1^0,c
  2219  00260C  5051               	movf	___fltol@exp1^0,w,c
  2220  00260E  A4D8               	btfss	status,2,c
  2221  002610  EF0C  F013         	goto	u3371
  2222  002614  EF0E  F013         	goto	u3370
  2223  002618                     u3371:
  2224  002618  EF18  F013         	goto	l3523
  2225  00261C                     u3370:
  2226  00261C                     l3519:
  2227  00261C  0E00               	movlw	0
  2228  00261E  6E48               	movwf	?___fltol^0,c
  2229  002620  0E00               	movlw	0
  2230  002622  6E49               	movwf	(?___fltol+1)^0,c
  2231  002624  0E00               	movlw	0
  2232  002626  6E4A               	movwf	(?___fltol+2)^0,c
  2233  002628  0E00               	movlw	0
  2234  00262A  6E4B               	movwf	(?___fltol+3)^0,c
  2235  00262C  EF85  F013         	goto	l629
  2236  002630                     l3523:
  2237  002630  C048  F04C         	movff	___fltol@f1,??___fltol
  2238  002634  C049  F04D         	movff	___fltol@f1+1,??___fltol+1
  2239  002638  C04A  F04E         	movff	___fltol@f1+2,??___fltol+2
  2240  00263C  C04B  F04F         	movff	___fltol@f1+3,??___fltol+3
  2241  002640  0E20               	movlw	32
  2242  002642  EF28  F013         	goto	u3380
  2243  002646                     u3385:
  2244  002646  90D8               	bcf	status,0,c
  2245  002648  324F               	rrcf	(??___fltol+3)^0,f,c
  2246  00264A  324E               	rrcf	(??___fltol+2)^0,f,c
  2247  00264C  324D               	rrcf	(??___fltol+1)^0,f,c
  2248  00264E  324C               	rrcf	??___fltol^0,f,c
  2249  002650                     u3380:
  2250  002650  2EE8               	decfsz	wreg,f,c
  2251  002652  EF23  F013         	goto	u3385
  2252  002656  504C               	movf	??___fltol^0,w,c
  2253  002658  6E50               	movwf	___fltol@sign1^0,c
  2254  00265A  8E4A               	bsf	(___fltol@f1+2)^0,7,c
  2255  00265C  0EFF               	movlw	255
  2256  00265E  1648               	andwf	___fltol@f1^0,f,c
  2257  002660  0EFF               	movlw	255
  2258  002662  1649               	andwf	(___fltol@f1+1)^0,f,c
  2259  002664  0EFF               	movlw	255
  2260  002666  164A               	andwf	(___fltol@f1+2)^0,f,c
  2261  002668  0E00               	movlw	0
  2262  00266A  164B               	andwf	(___fltol@f1+3)^0,f,c
  2263  00266C  0E96               	movlw	150
  2264  00266E  5E51               	subwf	___fltol@exp1^0,f,c
  2265  002670  BE51               	btfsc	___fltol@exp1^0,7,c
  2266  002672  EF3F  F013         	goto	u3390
  2267  002676  EF3D  F013         	goto	u3391
  2268  00267A                     u3391:
  2269  00267A  EF55  F013         	goto	l3543
  2270  00267E                     u3390:
  2271  00267E  5051               	movf	___fltol@exp1^0,w,c
  2272  002680  0A80               	xorlw	128
  2273  002682  0F97               	addlw	151
  2274  002684  B0D8               	btfsc	status,0,c
  2275  002686  EF47  F013         	goto	u3401
  2276  00268A  EF49  F013         	goto	u3400
  2277  00268E                     u3401:
  2278  00268E  EF4B  F013         	goto	l3539
  2279  002692                     u3400:
  2280  002692  EF0E  F013         	goto	l3519
  2281  002696                     l3539:
  2282  002696  90D8               	bcf	status,0,c
  2283  002698  324B               	rrcf	(___fltol@f1+3)^0,f,c
  2284  00269A  324A               	rrcf	(___fltol@f1+2)^0,f,c
  2285  00269C  3249               	rrcf	(___fltol@f1+1)^0,f,c
  2286  00269E  3248               	rrcf	___fltol@f1^0,f,c
  2287  0026A0  3E51               	incfsz	___fltol@exp1^0,f,c
  2288  0026A2  EF4B  F013         	goto	l3539
  2289  0026A6  EF6D  F013         	goto	l3553
  2290  0026AA                     l3543:
  2291  0026AA  0E1F               	movlw	31
  2292  0026AC  6451               	cpfsgt	___fltol@exp1^0,c
  2293  0026AE  EF5B  F013         	goto	u3411
  2294  0026B2  EF5D  F013         	goto	u3410
  2295  0026B6                     u3411:
  2296  0026B6  EF65  F013         	goto	l3551
  2297  0026BA                     u3410:
  2298  0026BA  EF0E  F013         	goto	l3519
  2299  0026BE                     l3549:
  2300  0026BE  90D8               	bcf	status,0,c
  2301  0026C0  3648               	rlcf	___fltol@f1^0,f,c
  2302  0026C2  3649               	rlcf	(___fltol@f1+1)^0,f,c
  2303  0026C4  364A               	rlcf	(___fltol@f1+2)^0,f,c
  2304  0026C6  364B               	rlcf	(___fltol@f1+3)^0,f,c
  2305  0026C8  0651               	decf	___fltol@exp1^0,f,c
  2306  0026CA                     l3551:
  2307  0026CA  5051               	movf	___fltol@exp1^0,w,c
  2308  0026CC  A4D8               	btfss	status,2,c
  2309  0026CE  EF6B  F013         	goto	u3421
  2310  0026D2  EF6D  F013         	goto	u3420
  2311  0026D6                     u3421:
  2312  0026D6  EF5F  F013         	goto	l3549
  2313  0026DA                     u3420:
  2314  0026DA                     l3553:
  2315  0026DA  5050               	movf	___fltol@sign1^0,w,c
  2316  0026DC  B4D8               	btfsc	status,2,c
  2317  0026DE  EF73  F013         	goto	u3431
  2318  0026E2  EF75  F013         	goto	u3430
  2319  0026E6                     u3431:
  2320  0026E6  EF7D  F013         	goto	l3557
  2321  0026EA                     u3430:
  2322  0026EA  1E4B               	comf	(___fltol@f1+3)^0,f,c
  2323  0026EC  1E4A               	comf	(___fltol@f1+2)^0,f,c
  2324  0026EE  1E49               	comf	(___fltol@f1+1)^0,f,c
  2325  0026F0  6C48               	negf	___fltol@f1^0,c
  2326  0026F2  0E00               	movlw	0
  2327  0026F4  2249               	addwfc	(___fltol@f1+1)^0,f,c
  2328  0026F6  224A               	addwfc	(___fltol@f1+2)^0,f,c
  2329  0026F8  224B               	addwfc	(___fltol@f1+3)^0,f,c
  2330  0026FA                     l3557:
  2331  0026FA  C048  F048         	movff	___fltol@f1,?___fltol
  2332  0026FE  C049  F049         	movff	___fltol@f1+1,?___fltol+1
  2333  002702  C04A  F04A         	movff	___fltol@f1+2,?___fltol+2
  2334  002706  C04B  F04B         	movff	___fltol@f1+3,?___fltol+3
  2335  00270A                     l629:
  2336  00270A  0012               	return		;funcret
  2337  00270C                     __end_of___fltol:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function ___flmul *****************
  2341 ;; Defined at:
  2342 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  b               4   21[COMRAM] long 
  2345 ;;  a               4   25[COMRAM] long 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  prod            4   40[COMRAM] struct .
  2348 ;;  grs             4   34[COMRAM] unsigned long 
  2349 ;;  temp            2   44[COMRAM] struct .
  2350 ;;  bexp            1   39[COMRAM] unsigned char 
  2351 ;;  aexp            1   38[COMRAM] unsigned char 
  2352 ;;  sign            1   33[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  4   21[COMRAM] unsigned char 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, prodl, prodh
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2362 ;;      Params:         8       0       0       0       0       0       0       0       0
  2363 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2364 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2365 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2366 ;;Total ram usage:       25 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_appADC
  2373 ;;		_appBat
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text11
  2378  00085C                     __ptext11:
  2379                           	callstack 0
  2380  00085C                     ___flmul:
  2381                           	callstack 26
  2382  00085C  5019               	movf	(___flmul@b+3)^0,w,c
  2383  00085E  0B80               	andlw	128
  2384  000860  6E22               	movwf	___flmul@sign^0,c
  2385  000862  5019               	movf	(___flmul@b+3)^0,w,c
  2386  000864  2419               	addwf	(___flmul@b+3)^0,w,c
  2387  000866  6E28               	movwf	___flmul@bexp^0,c
  2388  000868  AE18               	btfss	(___flmul@b+2)^0,7,c
  2389  00086A  EF39  F004         	goto	u3121
  2390  00086E  EF3B  F004         	goto	u3120
  2391  000872                     u3121:
  2392  000872  EF3C  F004         	goto	l3357
  2393  000876                     u3120:
  2394  000876  8028               	bsf	___flmul@bexp^0,0,c
  2395  000878                     l3357:
  2396  000878  5028               	movf	___flmul@bexp^0,w,c
  2397  00087A  B4D8               	btfsc	status,2,c
  2398  00087C  EF42  F004         	goto	u3131
  2399  000880  EF44  F004         	goto	u3130
  2400  000884                     u3131:
  2401  000884  EF57  F004         	goto	l3365
  2402  000888                     u3130:
  2403  000888  2828               	incf	___flmul@bexp^0,w,c
  2404  00088A  A4D8               	btfss	status,2,c
  2405  00088C  EF4A  F004         	goto	u3141
  2406  000890  EF4C  F004         	goto	u3140
  2407  000894                     u3141:
  2408  000894  EF54  F004         	goto	l3363
  2409  000898                     u3140:
  2410  000898  0E00               	movlw	0
  2411  00089A  6E16               	movwf	___flmul@b^0,c
  2412  00089C  0E00               	movlw	0
  2413  00089E  6E17               	movwf	(___flmul@b+1)^0,c
  2414  0008A0  0E00               	movlw	0
  2415  0008A2  6E18               	movwf	(___flmul@b+2)^0,c
  2416  0008A4  0E00               	movlw	0
  2417  0008A6  6E19               	movwf	(___flmul@b+3)^0,c
  2418  0008A8                     l3363:
  2419  0008A8  8E18               	bsf	(___flmul@b+2)^0,7,c
  2420  0008AA  EF5F  F004         	goto	l3367
  2421  0008AE                     l3365:
  2422  0008AE  0E00               	movlw	0
  2423  0008B0  6E16               	movwf	___flmul@b^0,c
  2424  0008B2  0E00               	movlw	0
  2425  0008B4  6E17               	movwf	(___flmul@b+1)^0,c
  2426  0008B6  0E00               	movlw	0
  2427  0008B8  6E18               	movwf	(___flmul@b+2)^0,c
  2428  0008BA  0E00               	movlw	0
  2429  0008BC  6E19               	movwf	(___flmul@b+3)^0,c
  2430  0008BE                     l3367:
  2431  0008BE  501D               	movf	(___flmul@a+3)^0,w,c
  2432  0008C0  0B80               	andlw	128
  2433  0008C2  1A22               	xorwf	___flmul@sign^0,f,c
  2434  0008C4  501D               	movf	(___flmul@a+3)^0,w,c
  2435  0008C6  241D               	addwf	(___flmul@a+3)^0,w,c
  2436  0008C8  6E27               	movwf	___flmul@aexp^0,c
  2437  0008CA  AE1C               	btfss	(___flmul@a+2)^0,7,c
  2438  0008CC  EF6A  F004         	goto	u3151
  2439  0008D0  EF6C  F004         	goto	u3150
  2440  0008D4                     u3151:
  2441  0008D4  EF6D  F004         	goto	l3375
  2442  0008D8                     u3150:
  2443  0008D8  8027               	bsf	___flmul@aexp^0,0,c
  2444  0008DA                     l3375:
  2445  0008DA  5027               	movf	___flmul@aexp^0,w,c
  2446  0008DC  B4D8               	btfsc	status,2,c
  2447  0008DE  EF73  F004         	goto	u3161
  2448  0008E2  EF75  F004         	goto	u3160
  2449  0008E6                     u3161:
  2450  0008E6  EF88  F004         	goto	l3383
  2451  0008EA                     u3160:
  2452  0008EA  2827               	incf	___flmul@aexp^0,w,c
  2453  0008EC  A4D8               	btfss	status,2,c
  2454  0008EE  EF7B  F004         	goto	u3171
  2455  0008F2  EF7D  F004         	goto	u3170
  2456  0008F6                     u3171:
  2457  0008F6  EF85  F004         	goto	l3381
  2458  0008FA                     u3170:
  2459  0008FA  0E00               	movlw	0
  2460  0008FC  6E1A               	movwf	___flmul@a^0,c
  2461  0008FE  0E00               	movlw	0
  2462  000900  6E1B               	movwf	(___flmul@a+1)^0,c
  2463  000902  0E00               	movlw	0
  2464  000904  6E1C               	movwf	(___flmul@a+2)^0,c
  2465  000906  0E00               	movlw	0
  2466  000908  6E1D               	movwf	(___flmul@a+3)^0,c
  2467  00090A                     l3381:
  2468  00090A  8E1C               	bsf	(___flmul@a+2)^0,7,c
  2469  00090C  EF90  F004         	goto	l946
  2470  000910                     l3383:
  2471  000910  0E00               	movlw	0
  2472  000912  6E1A               	movwf	___flmul@a^0,c
  2473  000914  0E00               	movlw	0
  2474  000916  6E1B               	movwf	(___flmul@a+1)^0,c
  2475  000918  0E00               	movlw	0
  2476  00091A  6E1C               	movwf	(___flmul@a+2)^0,c
  2477  00091C  0E00               	movlw	0
  2478  00091E  6E1D               	movwf	(___flmul@a+3)^0,c
  2479  000920                     l946:
  2480  000920  5027               	movf	___flmul@aexp^0,w,c
  2481  000922  B4D8               	btfsc	status,2,c
  2482  000924  EF96  F004         	goto	u3181
  2483  000928  EF98  F004         	goto	u3180
  2484  00092C                     u3181:
  2485  00092C  EFA0  F004         	goto	l3387
  2486  000930                     u3180:
  2487  000930  5028               	movf	___flmul@bexp^0,w,c
  2488  000932  A4D8               	btfss	status,2,c
  2489  000934  EF9E  F004         	goto	u3191
  2490  000938  EFA0  F004         	goto	u3190
  2491  00093C                     u3191:
  2492  00093C  EFAA  F004         	goto	l3391
  2493  000940                     u3190:
  2494  000940                     l3387:
  2495  000940  0E00               	movlw	0
  2496  000942  6E16               	movwf	?___flmul^0,c
  2497  000944  0E00               	movlw	0
  2498  000946  6E17               	movwf	(?___flmul+1)^0,c
  2499  000948  0E00               	movlw	0
  2500  00094A  6E18               	movwf	(?___flmul+2)^0,c
  2501  00094C  0E00               	movlw	0
  2502  00094E  6E19               	movwf	(?___flmul+3)^0,c
  2503  000950  EF42  F006         	goto	l950
  2504  000954                     l3391:
  2505  000954  501C               	movf	(___flmul@a+2)^0,w,c
  2506  000956  0216               	mulwf	___flmul@b^0,c
  2507  000958  CFF3 F02D          	movff	prodl,___flmul@temp
  2508  00095C  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2509  000960  502D               	movf	___flmul@temp^0,w,c
  2510  000962  6E23               	movwf	___flmul@grs^0,c
  2511  000964  6A24               	clrf	(___flmul@grs+1)^0,c
  2512  000966  6A25               	clrf	(___flmul@grs+2)^0,c
  2513  000968  6A26               	clrf	(___flmul@grs+3)^0,c
  2514  00096A  502E               	movf	(___flmul@temp+1)^0,w,c
  2515  00096C  6E29               	movwf	___flmul@prod^0,c
  2516  00096E  6A2A               	clrf	(___flmul@prod+1)^0,c
  2517  000970  6A2B               	clrf	(___flmul@prod+2)^0,c
  2518  000972  6A2C               	clrf	(___flmul@prod+3)^0,c
  2519  000974  501B               	movf	(___flmul@a+1)^0,w,c
  2520  000976  0217               	mulwf	(___flmul@b+1)^0,c
  2521  000978  CFF3 F02D          	movff	prodl,___flmul@temp
  2522  00097C  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2523  000980  502D               	movf	___flmul@temp^0,w,c
  2524  000982  2623               	addwf	___flmul@grs^0,f,c
  2525  000984  0E00               	movlw	0
  2526  000986  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2527  000988  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2528  00098A  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2529  00098C  502E               	movf	(___flmul@temp+1)^0,w,c
  2530  00098E  2629               	addwf	___flmul@prod^0,f,c
  2531  000990  0E00               	movlw	0
  2532  000992  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2533  000994  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2534  000996  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2535  000998  501A               	movf	___flmul@a^0,w,c
  2536  00099A  0218               	mulwf	(___flmul@b+2)^0,c
  2537  00099C  CFF3 F02D          	movff	prodl,___flmul@temp
  2538  0009A0  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2539  0009A4  502D               	movf	___flmul@temp^0,w,c
  2540  0009A6  2623               	addwf	___flmul@grs^0,f,c
  2541  0009A8  0E00               	movlw	0
  2542  0009AA  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2543  0009AC  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2544  0009AE  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2545  0009B0  502E               	movf	(___flmul@temp+1)^0,w,c
  2546  0009B2  2629               	addwf	___flmul@prod^0,f,c
  2547  0009B4  0E00               	movlw	0
  2548  0009B6  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2549  0009B8  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2550  0009BA  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2551  0009BC  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2552  0009C0  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2553  0009C4  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2554  0009C8  6A23               	clrf	___flmul@grs^0,c
  2555  0009CA  501A               	movf	___flmul@a^0,w,c
  2556  0009CC  0217               	mulwf	(___flmul@b+1)^0,c
  2557  0009CE  CFF3 F02D          	movff	prodl,___flmul@temp
  2558  0009D2  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2559  0009D6  502D               	movf	___flmul@temp^0,w,c
  2560  0009D8  2623               	addwf	___flmul@grs^0,f,c
  2561  0009DA  502E               	movf	(___flmul@temp+1)^0,w,c
  2562  0009DC  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2563  0009DE  0E00               	movlw	0
  2564  0009E0  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2565  0009E2  0E00               	movlw	0
  2566  0009E4  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2567  0009E6  501B               	movf	(___flmul@a+1)^0,w,c
  2568  0009E8  0216               	mulwf	___flmul@b^0,c
  2569  0009EA  CFF3 F02D          	movff	prodl,___flmul@temp
  2570  0009EE  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2571  0009F2  502D               	movf	___flmul@temp^0,w,c
  2572  0009F4  2623               	addwf	___flmul@grs^0,f,c
  2573  0009F6  502E               	movf	(___flmul@temp+1)^0,w,c
  2574  0009F8  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2575  0009FA  0E00               	movlw	0
  2576  0009FC  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2577  0009FE  0E00               	movlw	0
  2578  000A00  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2579  000A02  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2580  000A06  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2581  000A0A  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2582  000A0E  6A23               	clrf	___flmul@grs^0,c
  2583  000A10  501A               	movf	___flmul@a^0,w,c
  2584  000A12  0216               	mulwf	___flmul@b^0,c
  2585  000A14  CFF3 F02D          	movff	prodl,___flmul@temp
  2586  000A18  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2587  000A1C  502D               	movf	___flmul@temp^0,w,c
  2588  000A1E  2623               	addwf	___flmul@grs^0,f,c
  2589  000A20  502E               	movf	(___flmul@temp+1)^0,w,c
  2590  000A22  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2591  000A24  0E00               	movlw	0
  2592  000A26  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2593  000A28  0E00               	movlw	0
  2594  000A2A  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2595  000A2C  501C               	movf	(___flmul@a+2)^0,w,c
  2596  000A2E  0217               	mulwf	(___flmul@b+1)^0,c
  2597  000A30  CFF3 F02D          	movff	prodl,___flmul@temp
  2598  000A34  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2599  000A38  502D               	movf	___flmul@temp^0,w,c
  2600  000A3A  2629               	addwf	___flmul@prod^0,f,c
  2601  000A3C  502E               	movf	(___flmul@temp+1)^0,w,c
  2602  000A3E  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2603  000A40  0E00               	movlw	0
  2604  000A42  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2605  000A44  0E00               	movlw	0
  2606  000A46  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2607  000A48  501B               	movf	(___flmul@a+1)^0,w,c
  2608  000A4A  0218               	mulwf	(___flmul@b+2)^0,c
  2609  000A4C  CFF3 F02D          	movff	prodl,___flmul@temp
  2610  000A50  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2611  000A54  502D               	movf	___flmul@temp^0,w,c
  2612  000A56  2629               	addwf	___flmul@prod^0,f,c
  2613  000A58  502E               	movf	(___flmul@temp+1)^0,w,c
  2614  000A5A  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2615  000A5C  0E00               	movlw	0
  2616  000A5E  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2617  000A60  0E00               	movlw	0
  2618  000A62  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2619  000A64  501C               	movf	(___flmul@a+2)^0,w,c
  2620  000A66  0218               	mulwf	(___flmul@b+2)^0,c
  2621  000A68  CFF3 F02D          	movff	prodl,___flmul@temp
  2622  000A6C  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2623  000A70  502D               	movf	___flmul@temp^0,w,c
  2624  000A72  6E1E               	movwf	??___flmul^0,c
  2625  000A74  502E               	movf	(___flmul@temp+1)^0,w,c
  2626  000A76  6E1F               	movwf	(??___flmul+1)^0,c
  2627  000A78  6A20               	clrf	(??___flmul+2)^0,c
  2628  000A7A  6A21               	clrf	(??___flmul+3)^0,c
  2629  000A7C  C020  F021         	movff	??___flmul+2,??___flmul+3
  2630  000A80  C01F  F020         	movff	??___flmul+1,??___flmul+2
  2631  000A84  C01E  F01F         	movff	??___flmul,??___flmul+1
  2632  000A88  6A1E               	clrf	??___flmul^0,c
  2633  000A8A  501E               	movf	??___flmul^0,w,c
  2634  000A8C  2629               	addwf	___flmul@prod^0,f,c
  2635  000A8E  501F               	movf	(??___flmul+1)^0,w,c
  2636  000A90  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2637  000A92  5020               	movf	(??___flmul+2)^0,w,c
  2638  000A94  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2639  000A96  5021               	movf	(??___flmul+3)^0,w,c
  2640  000A98  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2641  000A9A  C023  F01E         	movff	___flmul@grs,??___flmul
  2642  000A9E  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  2643  000AA2  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  2644  000AA6  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  2645  000AAA  0E19               	movlw	25
  2646  000AAC  EF5D  F005         	goto	u3200
  2647  000AB0                     u3205:
  2648  000AB0  90D8               	bcf	status,0,c
  2649  000AB2  3221               	rrcf	(??___flmul+3)^0,f,c
  2650  000AB4  3220               	rrcf	(??___flmul+2)^0,f,c
  2651  000AB6  321F               	rrcf	(??___flmul+1)^0,f,c
  2652  000AB8  321E               	rrcf	??___flmul^0,f,c
  2653  000ABA                     u3200:
  2654  000ABA  2EE8               	decfsz	wreg,f,c
  2655  000ABC  EF58  F005         	goto	u3205
  2656  000AC0  501E               	movf	??___flmul^0,w,c
  2657  000AC2  2629               	addwf	___flmul@prod^0,f,c
  2658  000AC4  501F               	movf	(??___flmul+1)^0,w,c
  2659  000AC6  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2660  000AC8  5020               	movf	(??___flmul+2)^0,w,c
  2661  000ACA  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2662  000ACC  5021               	movf	(??___flmul+3)^0,w,c
  2663  000ACE  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2664  000AD0  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2665  000AD4  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2666  000AD8  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2667  000ADC  6A23               	clrf	___flmul@grs^0,c
  2668  000ADE  5027               	movf	___flmul@aexp^0,w,c
  2669  000AE0  C028  F01E         	movff	___flmul@bexp,??___flmul
  2670  000AE4  6A1F               	clrf	(??___flmul+1)^0,c
  2671  000AE6  261E               	addwf	??___flmul^0,f,c
  2672  000AE8  0E00               	movlw	0
  2673  000AEA  221F               	addwfc	(??___flmul+1)^0,f,c
  2674  000AEC  0E82               	movlw	130
  2675  000AEE  241E               	addwf	??___flmul^0,w,c
  2676  000AF0  6E2D               	movwf	___flmul@temp^0,c
  2677  000AF2  0EFF               	movlw	255
  2678  000AF4  201F               	addwfc	(??___flmul+1)^0,w,c
  2679  000AF6  6E2E               	movwf	(___flmul@temp+1)^0,c
  2680  000AF8  EF93  F005         	goto	l3439
  2681  000AFC                     l3433:
  2682  000AFC  90D8               	bcf	status,0,c
  2683  000AFE  3629               	rlcf	___flmul@prod^0,f,c
  2684  000B00  362A               	rlcf	(___flmul@prod+1)^0,f,c
  2685  000B02  362B               	rlcf	(___flmul@prod+2)^0,f,c
  2686  000B04  362C               	rlcf	(___flmul@prod+3)^0,f,c
  2687  000B06  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2688  000B08  EF88  F005         	goto	u3211
  2689  000B0C  EF8A  F005         	goto	u3210
  2690  000B10                     u3211:
  2691  000B10  EF8B  F005         	goto	l953
  2692  000B14                     u3210:
  2693  000B14  8029               	bsf	___flmul@prod^0,0,c
  2694  000B16                     l953:
  2695  000B16  90D8               	bcf	status,0,c
  2696  000B18  3623               	rlcf	___flmul@grs^0,f,c
  2697  000B1A  3624               	rlcf	(___flmul@grs+1)^0,f,c
  2698  000B1C  3625               	rlcf	(___flmul@grs+2)^0,f,c
  2699  000B1E  3626               	rlcf	(___flmul@grs+3)^0,f,c
  2700  000B20  062D               	decf	___flmul@temp^0,f,c
  2701  000B22  A0D8               	btfss	status,0,c
  2702  000B24  062E               	decf	(___flmul@temp+1)^0,f,c
  2703  000B26                     l3439:
  2704  000B26  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  2705  000B28  EF98  F005         	goto	u3221
  2706  000B2C  EF9A  F005         	goto	u3220
  2707  000B30                     u3221:
  2708  000B30  EF7E  F005         	goto	l3433
  2709  000B34                     u3220:
  2710  000B34  0E00               	movlw	0
  2711  000B36  6E27               	movwf	___flmul@aexp^0,c
  2712  000B38  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2713  000B3A  EFA1  F005         	goto	u3231
  2714  000B3E  EFA3  F005         	goto	u3230
  2715  000B42                     u3231:
  2716  000B42  EFC7  F005         	goto	l955
  2717  000B46                     u3230:
  2718  000B46  0EFF               	movlw	255
  2719  000B48  1423               	andwf	___flmul@grs^0,w,c
  2720  000B4A  6E1E               	movwf	??___flmul^0,c
  2721  000B4C  0EFF               	movlw	255
  2722  000B4E  1424               	andwf	(___flmul@grs+1)^0,w,c
  2723  000B50  6E1F               	movwf	(??___flmul+1)^0,c
  2724  000B52  0EFF               	movlw	255
  2725  000B54  1425               	andwf	(___flmul@grs+2)^0,w,c
  2726  000B56  6E20               	movwf	(??___flmul+2)^0,c
  2727  000B58  0E7F               	movlw	127
  2728  000B5A  1426               	andwf	(___flmul@grs+3)^0,w,c
  2729  000B5C  6E21               	movwf	(??___flmul+3)^0,c
  2730  000B5E  501E               	movf	??___flmul^0,w,c
  2731  000B60  101F               	iorwf	(??___flmul+1)^0,w,c
  2732  000B62  1020               	iorwf	(??___flmul+2)^0,w,c
  2733  000B64  1021               	iorwf	(??___flmul+3)^0,w,c
  2734  000B66  B4D8               	btfsc	status,2,c
  2735  000B68  EFB8  F005         	goto	u3241
  2736  000B6C  EFBA  F005         	goto	u3240
  2737  000B70                     u3241:
  2738  000B70  EFBE  F005         	goto	l956
  2739  000B74                     u3240:
  2740  000B74                     l3447:
  2741  000B74  0E01               	movlw	1
  2742  000B76  6E27               	movwf	___flmul@aexp^0,c
  2743  000B78  EFC7  F005         	goto	l955
  2744  000B7C                     l956:
  2745  000B7C  A029               	btfss	___flmul@prod^0,0,c
  2746  000B7E  EFC3  F005         	goto	u3251
  2747  000B82  EFC5  F005         	goto	u3250
  2748  000B86                     u3251:
  2749  000B86  EFC7  F005         	goto	l955
  2750  000B8A                     u3250:
  2751  000B8A  EFBA  F005         	goto	l3447
  2752  000B8E                     l955:
  2753  000B8E  5027               	movf	___flmul@aexp^0,w,c
  2754  000B90  B4D8               	btfsc	status,2,c
  2755  000B92  EFCD  F005         	goto	u3261
  2756  000B96  EFCF  F005         	goto	u3260
  2757  000B9A                     u3261:
  2758  000B9A  EFF3  F005         	goto	l3459
  2759  000B9E                     u3260:
  2760  000B9E  0E01               	movlw	1
  2761  000BA0  2629               	addwf	___flmul@prod^0,f,c
  2762  000BA2  0E00               	movlw	0
  2763  000BA4  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2764  000BA6  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2765  000BA8  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2766  000BAA  A02C               	btfss	(___flmul@prod+3)^0,0,c
  2767  000BAC  EFDA  F005         	goto	u3271
  2768  000BB0  EFDC  F005         	goto	u3270
  2769  000BB4                     u3271:
  2770  000BB4  EFF3  F005         	goto	l3459
  2771  000BB8                     u3270:
  2772  000BB8  C029  F01E         	movff	___flmul@prod,??___flmul
  2773  000BBC  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  2774  000BC0  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  2775  000BC4  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  2776  000BC8  3421               	rlcf	(??___flmul+3)^0,w,c
  2777  000BCA  3221               	rrcf	(??___flmul+3)^0,f,c
  2778  000BCC  3220               	rrcf	(??___flmul+2)^0,f,c
  2779  000BCE  321F               	rrcf	(??___flmul+1)^0,f,c
  2780  000BD0  321E               	rrcf	??___flmul^0,f,c
  2781  000BD2  C01E  F029         	movff	??___flmul,___flmul@prod
  2782  000BD6  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  2783  000BDA  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  2784  000BDE  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  2785  000BE2  4A2D               	infsnz	___flmul@temp^0,f,c
  2786  000BE4  2A2E               	incf	(___flmul@temp+1)^0,f,c
  2787  000BE6                     l3459:
  2788  000BE6  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2789  000BE8  EFFE  F005         	goto	u3281
  2790  000BEC  502E               	movf	(___flmul@temp+1)^0,w,c
  2791  000BEE  E108               	bnz	u3280
  2792  000BF0  282D               	incf	___flmul@temp^0,w,c
  2793  000BF2  A0D8               	btfss	status,0,c
  2794  000BF4  EFFE  F005         	goto	u3281
  2795  000BF8  EF00  F006         	goto	u3280
  2796  000BFC                     u3281:
  2797  000BFC  EF0A  F006         	goto	l3463
  2798  000C00                     u3280:
  2799  000C00  0E00               	movlw	0
  2800  000C02  6E29               	movwf	___flmul@prod^0,c
  2801  000C04  0E00               	movlw	0
  2802  000C06  6E2A               	movwf	(___flmul@prod+1)^0,c
  2803  000C08  0E80               	movlw	128
  2804  000C0A  6E2B               	movwf	(___flmul@prod+2)^0,c
  2805  000C0C  0E7F               	movlw	127
  2806  000C0E  6E2C               	movwf	(___flmul@prod+3)^0,c
  2807  000C10  EF38  F006         	goto	l3475
  2808  000C14                     l3463:
  2809  000C14  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2810  000C16  EF17  F006         	goto	u3290
  2811  000C1A  502E               	movf	(___flmul@temp+1)^0,w,c
  2812  000C1C  E106               	bnz	u3291
  2813  000C1E  042D               	decf	___flmul@temp^0,w,c
  2814  000C20  B0D8               	btfsc	status,0,c
  2815  000C22  EF15  F006         	goto	u3291
  2816  000C26  EF17  F006         	goto	u3290
  2817  000C2A                     u3291:
  2818  000C2A  EF23  F006         	goto	l963
  2819  000C2E                     u3290:
  2820  000C2E  0E00               	movlw	0
  2821  000C30  6E29               	movwf	___flmul@prod^0,c
  2822  000C32  0E00               	movlw	0
  2823  000C34  6E2A               	movwf	(___flmul@prod+1)^0,c
  2824  000C36  0E00               	movlw	0
  2825  000C38  6E2B               	movwf	(___flmul@prod+2)^0,c
  2826  000C3A  0E00               	movlw	0
  2827  000C3C  6E2C               	movwf	(___flmul@prod+3)^0,c
  2828  000C3E  0E00               	movlw	0
  2829  000C40  6E22               	movwf	___flmul@sign^0,c
  2830  000C42  EF38  F006         	goto	l3475
  2831  000C46                     l963:
  2832  000C46  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  2833  000C4A  0EFF               	movlw	255
  2834  000C4C  1629               	andwf	___flmul@prod^0,f,c
  2835  000C4E  0EFF               	movlw	255
  2836  000C50  162A               	andwf	(___flmul@prod+1)^0,f,c
  2837  000C52  0E7F               	movlw	127
  2838  000C54  162B               	andwf	(___flmul@prod+2)^0,f,c
  2839  000C56  0E00               	movlw	0
  2840  000C58  162C               	andwf	(___flmul@prod+3)^0,f,c
  2841  000C5A  A028               	btfss	___flmul@bexp^0,0,c
  2842  000C5C  EF32  F006         	goto	u3301
  2843  000C60  EF34  F006         	goto	u3300
  2844  000C64                     u3301:
  2845  000C64  EF35  F006         	goto	l3473
  2846  000C68                     u3300:
  2847  000C68  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  2848  000C6A                     l3473:
  2849  000C6A  90D8               	bcf	status,0,c
  2850  000C6C  3028               	rrcf	___flmul@bexp^0,w,c
  2851  000C6E  6E2C               	movwf	(___flmul@prod+3)^0,c
  2852  000C70                     l3475:
  2853  000C70  5022               	movf	___flmul@sign^0,w,c
  2854  000C72  122C               	iorwf	(___flmul@prod+3)^0,f,c
  2855  000C74  C029  F016         	movff	___flmul@prod,?___flmul
  2856  000C78  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  2857  000C7C  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  2858  000C80  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  2859  000C84                     l950:
  2860  000C84  0012               	return		;funcret
  2861  000C86                     __end_of___flmul:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function ___fldiv *****************
  2865 ;; Defined at:
  2866 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  b               4   46[COMRAM] unsigned char 
  2869 ;;  a               4   50[COMRAM] unsigned char 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  grs             4   65[COMRAM] unsigned long 
  2872 ;;  rem             4   58[COMRAM] unsigned long 
  2873 ;;  new_exp         2   63[COMRAM] short 
  2874 ;;  aexp            1   70[COMRAM] unsigned char 
  2875 ;;  bexp            1   69[COMRAM] unsigned char 
  2876 ;;  sign            1   62[COMRAM] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  4   46[COMRAM] unsigned char 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2886 ;;      Params:         8       0       0       0       0       0       0       0       0
  2887 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2888 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2889 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2890 ;;Total ram usage:       25 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    2
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_appADC
  2897 ;;		_appBat
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text12
  2902  000C86                     __ptext12:
  2903                           	callstack 0
  2904  000C86                     ___fldiv:
  2905                           	callstack 26
  2906  000C86  5032               	movf	(___fldiv@b+3)^0,w,c
  2907  000C88  0B80               	andlw	128
  2908  000C8A  6E3F               	movwf	___fldiv@sign^0,c
  2909  000C8C  5032               	movf	(___fldiv@b+3)^0,w,c
  2910  000C8E  2432               	addwf	(___fldiv@b+3)^0,w,c
  2911  000C90  6E46               	movwf	___fldiv@bexp^0,c
  2912  000C92  AE31               	btfss	(___fldiv@b+2)^0,7,c
  2913  000C94  EF4E  F006         	goto	u2891
  2914  000C98  EF50  F006         	goto	u2890
  2915  000C9C                     u2891:
  2916  000C9C  EF51  F006         	goto	l3219
  2917  000CA0                     u2890:
  2918  000CA0  8046               	bsf	___fldiv@bexp^0,0,c
  2919  000CA2                     l3219:
  2920  000CA2  5046               	movf	___fldiv@bexp^0,w,c
  2921  000CA4  B4D8               	btfsc	status,2,c
  2922  000CA6  EF57  F006         	goto	u2901
  2923  000CAA  EF59  F006         	goto	u2900
  2924  000CAE                     u2901:
  2925  000CAE  EF6E  F006         	goto	l3229
  2926  000CB2                     u2900:
  2927  000CB2  2846               	incf	___fldiv@bexp^0,w,c
  2928  000CB4  A4D8               	btfss	status,2,c
  2929  000CB6  EF5F  F006         	goto	u2911
  2930  000CBA  EF61  F006         	goto	u2910
  2931  000CBE                     u2911:
  2932  000CBE  EF69  F006         	goto	l3225
  2933  000CC2                     u2910:
  2934  000CC2  0E00               	movlw	0
  2935  000CC4  6E2F               	movwf	___fldiv@b^0,c
  2936  000CC6  0E00               	movlw	0
  2937  000CC8  6E30               	movwf	(___fldiv@b+1)^0,c
  2938  000CCA  0E00               	movlw	0
  2939  000CCC  6E31               	movwf	(___fldiv@b+2)^0,c
  2940  000CCE  0E00               	movlw	0
  2941  000CD0  6E32               	movwf	(___fldiv@b+3)^0,c
  2942  000CD2                     l3225:
  2943  000CD2  8E31               	bsf	(___fldiv@b+2)^0,7,c
  2944  000CD4  0E00               	movlw	0
  2945  000CD6  6E32               	movwf	(___fldiv@b+3)^0,c
  2946  000CD8  EF76  F006         	goto	l3231
  2947  000CDC                     l3229:
  2948  000CDC  0E00               	movlw	0
  2949  000CDE  6E2F               	movwf	___fldiv@b^0,c
  2950  000CE0  0E00               	movlw	0
  2951  000CE2  6E30               	movwf	(___fldiv@b+1)^0,c
  2952  000CE4  0E00               	movlw	0
  2953  000CE6  6E31               	movwf	(___fldiv@b+2)^0,c
  2954  000CE8  0E00               	movlw	0
  2955  000CEA  6E32               	movwf	(___fldiv@b+3)^0,c
  2956  000CEC                     l3231:
  2957  000CEC  5036               	movf	(___fldiv@a+3)^0,w,c
  2958  000CEE  0B80               	andlw	128
  2959  000CF0  1A3F               	xorwf	___fldiv@sign^0,f,c
  2960  000CF2  5036               	movf	(___fldiv@a+3)^0,w,c
  2961  000CF4  2436               	addwf	(___fldiv@a+3)^0,w,c
  2962  000CF6  6E47               	movwf	___fldiv@aexp^0,c
  2963  000CF8  AE35               	btfss	(___fldiv@a+2)^0,7,c
  2964  000CFA  EF81  F006         	goto	u2921
  2965  000CFE  EF83  F006         	goto	u2920
  2966  000D02                     u2921:
  2967  000D02  EF84  F006         	goto	l3239
  2968  000D06                     u2920:
  2969  000D06  8047               	bsf	___fldiv@aexp^0,0,c
  2970  000D08                     l3239:
  2971  000D08  5047               	movf	___fldiv@aexp^0,w,c
  2972  000D0A  B4D8               	btfsc	status,2,c
  2973  000D0C  EF8A  F006         	goto	u2931
  2974  000D10  EF8C  F006         	goto	u2930
  2975  000D14                     u2931:
  2976  000D14  EFA1  F006         	goto	l3249
  2977  000D18                     u2930:
  2978  000D18  2847               	incf	___fldiv@aexp^0,w,c
  2979  000D1A  A4D8               	btfss	status,2,c
  2980  000D1C  EF92  F006         	goto	u2941
  2981  000D20  EF94  F006         	goto	u2940
  2982  000D24                     u2941:
  2983  000D24  EF9C  F006         	goto	l3245
  2984  000D28                     u2940:
  2985  000D28  0E00               	movlw	0
  2986  000D2A  6E33               	movwf	___fldiv@a^0,c
  2987  000D2C  0E00               	movlw	0
  2988  000D2E  6E34               	movwf	(___fldiv@a+1)^0,c
  2989  000D30  0E00               	movlw	0
  2990  000D32  6E35               	movwf	(___fldiv@a+2)^0,c
  2991  000D34  0E00               	movlw	0
  2992  000D36  6E36               	movwf	(___fldiv@a+3)^0,c
  2993  000D38                     l3245:
  2994  000D38  8E35               	bsf	(___fldiv@a+2)^0,7,c
  2995  000D3A  0E00               	movlw	0
  2996  000D3C  6E36               	movwf	(___fldiv@a+3)^0,c
  2997  000D3E  EFA9  F006         	goto	l3251
  2998  000D42                     l3249:
  2999  000D42  0E00               	movlw	0
  3000  000D44  6E33               	movwf	___fldiv@a^0,c
  3001  000D46  0E00               	movlw	0
  3002  000D48  6E34               	movwf	(___fldiv@a+1)^0,c
  3003  000D4A  0E00               	movlw	0
  3004  000D4C  6E35               	movwf	(___fldiv@a+2)^0,c
  3005  000D4E  0E00               	movlw	0
  3006  000D50  6E36               	movwf	(___fldiv@a+3)^0,c
  3007  000D52                     l3251:
  3008  000D52  5033               	movf	___fldiv@a^0,w,c
  3009  000D54  1034               	iorwf	(___fldiv@a+1)^0,w,c
  3010  000D56  1035               	iorwf	(___fldiv@a+2)^0,w,c
  3011  000D58  1036               	iorwf	(___fldiv@a+3)^0,w,c
  3012  000D5A  A4D8               	btfss	status,2,c
  3013  000D5C  EFB2  F006         	goto	u2951
  3014  000D60  EFB4  F006         	goto	u2950
  3015  000D64                     u2951:
  3016  000D64  EFCC  F006         	goto	l3263
  3017  000D68                     u2950:
  3018  000D68  0E00               	movlw	0
  3019  000D6A  6E2F               	movwf	___fldiv@b^0,c
  3020  000D6C  0E00               	movlw	0
  3021  000D6E  6E30               	movwf	(___fldiv@b+1)^0,c
  3022  000D70  0E00               	movlw	0
  3023  000D72  6E31               	movwf	(___fldiv@b+2)^0,c
  3024  000D74  0E00               	movlw	0
  3025  000D76  6E32               	movwf	(___fldiv@b+3)^0,c
  3026  000D78  0E80               	movlw	128
  3027  000D7A  1231               	iorwf	(___fldiv@b+2)^0,f,c
  3028  000D7C  0E7F               	movlw	127
  3029  000D7E  1232               	iorwf	(___fldiv@b+3)^0,f,c
  3030  000D80                     l3257:
  3031  000D80  503F               	movf	___fldiv@sign^0,w,c
  3032  000D82  1232               	iorwf	(___fldiv@b+3)^0,f,c
  3033  000D84  C02F  F02F         	movff	___fldiv@b,?___fldiv
  3034  000D88  C030  F030         	movff	___fldiv@b+1,?___fldiv+1
  3035  000D8C  C031  F031         	movff	___fldiv@b+2,?___fldiv+2
  3036  000D90  C032  F032         	movff	___fldiv@b+3,?___fldiv+3
  3037  000D94  EF0F  F008         	goto	l914
  3038  000D98                     l3263:
  3039  000D98  5046               	movf	___fldiv@bexp^0,w,c
  3040  000D9A  A4D8               	btfss	status,2,c
  3041  000D9C  EFD2  F006         	goto	u2961
  3042  000DA0  EFD4  F006         	goto	u2960
  3043  000DA4                     u2961:
  3044  000DA4  EFDE  F006         	goto	l3271
  3045  000DA8                     u2960:
  3046  000DA8  0E00               	movlw	0
  3047  000DAA  6E2F               	movwf	?___fldiv^0,c
  3048  000DAC  0E00               	movlw	0
  3049  000DAE  6E30               	movwf	(?___fldiv+1)^0,c
  3050  000DB0  0E00               	movlw	0
  3051  000DB2  6E31               	movwf	(?___fldiv+2)^0,c
  3052  000DB4  0E00               	movlw	0
  3053  000DB6  6E32               	movwf	(?___fldiv+3)^0,c
  3054  000DB8  EF0F  F008         	goto	l914
  3055  000DBC                     l3271:
  3056  000DBC  5047               	movf	___fldiv@aexp^0,w,c
  3057  000DBE  C046  F037         	movff	___fldiv@bexp,??___fldiv
  3058  000DC2  6A38               	clrf	(??___fldiv+1)^0,c
  3059  000DC4  5E37               	subwf	??___fldiv^0,f,c
  3060  000DC6  0E00               	movlw	0
  3061  000DC8  5A38               	subwfb	(??___fldiv+1)^0,f,c
  3062  000DCA  0E7F               	movlw	127
  3063  000DCC  2437               	addwf	??___fldiv^0,w,c
  3064  000DCE  6E40               	movwf	___fldiv@new_exp^0,c
  3065  000DD0  0E00               	movlw	0
  3066  000DD2  2038               	addwfc	(??___fldiv+1)^0,w,c
  3067  000DD4  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3068  000DD6  C02F  F03B         	movff	___fldiv@b,___fldiv@rem
  3069  000DDA  C030  F03C         	movff	___fldiv@b+1,___fldiv@rem+1
  3070  000DDE  C031  F03D         	movff	___fldiv@b+2,___fldiv@rem+2
  3071  000DE2  C032  F03E         	movff	___fldiv@b+3,___fldiv@rem+3
  3072  000DE6  0E00               	movlw	0
  3073  000DE8  6E2F               	movwf	___fldiv@b^0,c
  3074  000DEA  0E00               	movlw	0
  3075  000DEC  6E30               	movwf	(___fldiv@b+1)^0,c
  3076  000DEE  0E00               	movlw	0
  3077  000DF0  6E31               	movwf	(___fldiv@b+2)^0,c
  3078  000DF2  0E00               	movlw	0
  3079  000DF4  6E32               	movwf	(___fldiv@b+3)^0,c
  3080  000DF6  0E00               	movlw	0
  3081  000DF8  6E42               	movwf	___fldiv@grs^0,c
  3082  000DFA  0E00               	movlw	0
  3083  000DFC  6E43               	movwf	(___fldiv@grs+1)^0,c
  3084  000DFE  0E00               	movlw	0
  3085  000E00  6E44               	movwf	(___fldiv@grs+2)^0,c
  3086  000E02  0E00               	movlw	0
  3087  000E04  6E45               	movwf	(___fldiv@grs+3)^0,c
  3088  000E06  0E00               	movlw	0
  3089  000E08  6E47               	movwf	___fldiv@aexp^0,c
  3090  000E0A  EF3F  F007         	goto	l916
  3091  000E0E                     l3281:
  3092  000E0E  5047               	movf	___fldiv@aexp^0,w,c
  3093  000E10  B4D8               	btfsc	status,2,c
  3094  000E12  EF0D  F007         	goto	u2971
  3095  000E16  EF0F  F007         	goto	u2970
  3096  000E1A                     u2971:
  3097  000E1A  EF26  F007         	goto	l3289
  3098  000E1E                     u2970:
  3099  000E1E  90D8               	bcf	status,0,c
  3100  000E20  363B               	rlcf	___fldiv@rem^0,f,c
  3101  000E22  363C               	rlcf	(___fldiv@rem+1)^0,f,c
  3102  000E24  363D               	rlcf	(___fldiv@rem+2)^0,f,c
  3103  000E26  363E               	rlcf	(___fldiv@rem+3)^0,f,c
  3104  000E28  90D8               	bcf	status,0,c
  3105  000E2A  362F               	rlcf	___fldiv@b^0,f,c
  3106  000E2C  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3107  000E2E  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3108  000E30  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3109  000E32  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3110  000E34  EF1E  F007         	goto	u2981
  3111  000E38  EF20  F007         	goto	u2980
  3112  000E3C                     u2981:
  3113  000E3C  EF21  F007         	goto	l919
  3114  000E40                     u2980:
  3115  000E40  802F               	bsf	___fldiv@b^0,0,c
  3116  000E42                     l919:
  3117  000E42  90D8               	bcf	status,0,c
  3118  000E44  3642               	rlcf	___fldiv@grs^0,f,c
  3119  000E46  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3120  000E48  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3121  000E4A  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3122  000E4C                     l3289:
  3123  000E4C  5033               	movf	___fldiv@a^0,w,c
  3124  000E4E  5C3B               	subwf	___fldiv@rem^0,w,c
  3125  000E50  5034               	movf	(___fldiv@a+1)^0,w,c
  3126  000E52  583C               	subwfb	(___fldiv@rem+1)^0,w,c
  3127  000E54  5035               	movf	(___fldiv@a+2)^0,w,c
  3128  000E56  583D               	subwfb	(___fldiv@rem+2)^0,w,c
  3129  000E58  5036               	movf	(___fldiv@a+3)^0,w,c
  3130  000E5A  583E               	subwfb	(___fldiv@rem+3)^0,w,c
  3131  000E5C  A0D8               	btfss	status,0,c
  3132  000E5E  EF33  F007         	goto	u2991
  3133  000E62  EF35  F007         	goto	u2990
  3134  000E66                     u2991:
  3135  000E66  EF3E  F007         	goto	l3295
  3136  000E6A                     u2990:
  3137  000E6A  8C45               	bsf	(___fldiv@grs+3)^0,6,c
  3138  000E6C  5033               	movf	___fldiv@a^0,w,c
  3139  000E6E  5E3B               	subwf	___fldiv@rem^0,f,c
  3140  000E70  5034               	movf	(___fldiv@a+1)^0,w,c
  3141  000E72  5A3C               	subwfb	(___fldiv@rem+1)^0,f,c
  3142  000E74  5035               	movf	(___fldiv@a+2)^0,w,c
  3143  000E76  5A3D               	subwfb	(___fldiv@rem+2)^0,f,c
  3144  000E78  5036               	movf	(___fldiv@a+3)^0,w,c
  3145  000E7A  5A3E               	subwfb	(___fldiv@rem+3)^0,f,c
  3146  000E7C                     l3295:
  3147  000E7C  2A47               	incf	___fldiv@aexp^0,f,c
  3148  000E7E                     l916:
  3149  000E7E  0E19               	movlw	25
  3150  000E80  6447               	cpfsgt	___fldiv@aexp^0,c
  3151  000E82  EF45  F007         	goto	u3001
  3152  000E86  EF47  F007         	goto	u3000
  3153  000E8A                     u3001:
  3154  000E8A  EF07  F007         	goto	l3281
  3155  000E8E                     u3000:
  3156  000E8E  503B               	movf	___fldiv@rem^0,w,c
  3157  000E90  103C               	iorwf	(___fldiv@rem+1)^0,w,c
  3158  000E92  103D               	iorwf	(___fldiv@rem+2)^0,w,c
  3159  000E94  103E               	iorwf	(___fldiv@rem+3)^0,w,c
  3160  000E96  B4D8               	btfsc	status,2,c
  3161  000E98  EF50  F007         	goto	u3011
  3162  000E9C  EF52  F007         	goto	u3010
  3163  000EA0                     u3011:
  3164  000EA0  EF6A  F007         	goto	l3307
  3165  000EA4                     u3010:
  3166  000EA4  8042               	bsf	___fldiv@grs^0,0,c
  3167  000EA6  EF6A  F007         	goto	l3307
  3168  000EAA                     l3301:
  3169  000EAA  90D8               	bcf	status,0,c
  3170  000EAC  362F               	rlcf	___fldiv@b^0,f,c
  3171  000EAE  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3172  000EB0  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3173  000EB2  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3174  000EB4  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3175  000EB6  EF5F  F007         	goto	u3021
  3176  000EBA  EF61  F007         	goto	u3020
  3177  000EBE                     u3021:
  3178  000EBE  EF62  F007         	goto	l925
  3179  000EC2                     u3020:
  3180  000EC2  802F               	bsf	___fldiv@b^0,0,c
  3181  000EC4                     l925:
  3182  000EC4  90D8               	bcf	status,0,c
  3183  000EC6  3642               	rlcf	___fldiv@grs^0,f,c
  3184  000EC8  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3185  000ECA  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3186  000ECC  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3187  000ECE  0640               	decf	___fldiv@new_exp^0,f,c
  3188  000ED0  A0D8               	btfss	status,0,c
  3189  000ED2  0641               	decf	(___fldiv@new_exp+1)^0,f,c
  3190  000ED4                     l3307:
  3191  000ED4  AE31               	btfss	(___fldiv@b+2)^0,7,c
  3192  000ED6  EF6F  F007         	goto	u3031
  3193  000EDA  EF71  F007         	goto	u3030
  3194  000EDE                     u3031:
  3195  000EDE  EF55  F007         	goto	l3301
  3196  000EE2                     u3030:
  3197  000EE2  0E00               	movlw	0
  3198  000EE4  6E47               	movwf	___fldiv@aexp^0,c
  3199  000EE6  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3200  000EE8  EF78  F007         	goto	u3041
  3201  000EEC  EF7A  F007         	goto	u3040
  3202  000EF0                     u3041:
  3203  000EF0  EF9E  F007         	goto	l927
  3204  000EF4                     u3040:
  3205  000EF4  0EFF               	movlw	255
  3206  000EF6  1442               	andwf	___fldiv@grs^0,w,c
  3207  000EF8  6E37               	movwf	??___fldiv^0,c
  3208  000EFA  0EFF               	movlw	255
  3209  000EFC  1443               	andwf	(___fldiv@grs+1)^0,w,c
  3210  000EFE  6E38               	movwf	(??___fldiv+1)^0,c
  3211  000F00  0EFF               	movlw	255
  3212  000F02  1444               	andwf	(___fldiv@grs+2)^0,w,c
  3213  000F04  6E39               	movwf	(??___fldiv+2)^0,c
  3214  000F06  0E7F               	movlw	127
  3215  000F08  1445               	andwf	(___fldiv@grs+3)^0,w,c
  3216  000F0A  6E3A               	movwf	(??___fldiv+3)^0,c
  3217  000F0C  5037               	movf	??___fldiv^0,w,c
  3218  000F0E  1038               	iorwf	(??___fldiv+1)^0,w,c
  3219  000F10  1039               	iorwf	(??___fldiv+2)^0,w,c
  3220  000F12  103A               	iorwf	(??___fldiv+3)^0,w,c
  3221  000F14  B4D8               	btfsc	status,2,c
  3222  000F16  EF8F  F007         	goto	u3051
  3223  000F1A  EF91  F007         	goto	u3050
  3224  000F1E                     u3051:
  3225  000F1E  EF95  F007         	goto	l928
  3226  000F22                     u3050:
  3227  000F22                     l3315:
  3228  000F22  0E01               	movlw	1
  3229  000F24  6E47               	movwf	___fldiv@aexp^0,c
  3230  000F26  EF9E  F007         	goto	l927
  3231  000F2A                     l928:
  3232  000F2A  A02F               	btfss	___fldiv@b^0,0,c
  3233  000F2C  EF9A  F007         	goto	u3061
  3234  000F30  EF9C  F007         	goto	u3060
  3235  000F34                     u3061:
  3236  000F34  EF9E  F007         	goto	l927
  3237  000F38                     u3060:
  3238  000F38  EF91  F007         	goto	l3315
  3239  000F3C                     l927:
  3240  000F3C  5047               	movf	___fldiv@aexp^0,w,c
  3241  000F3E  B4D8               	btfsc	status,2,c
  3242  000F40  EFA4  F007         	goto	u3071
  3243  000F44  EFA6  F007         	goto	u3070
  3244  000F48                     u3071:
  3245  000F48  EFCA  F007         	goto	l3327
  3246  000F4C                     u3070:
  3247  000F4C  0E01               	movlw	1
  3248  000F4E  262F               	addwf	___fldiv@b^0,f,c
  3249  000F50  0E00               	movlw	0
  3250  000F52  2230               	addwfc	(___fldiv@b+1)^0,f,c
  3251  000F54  2231               	addwfc	(___fldiv@b+2)^0,f,c
  3252  000F56  2232               	addwfc	(___fldiv@b+3)^0,f,c
  3253  000F58  A032               	btfss	(___fldiv@b+3)^0,0,c
  3254  000F5A  EFB1  F007         	goto	u3081
  3255  000F5E  EFB3  F007         	goto	u3080
  3256  000F62                     u3081:
  3257  000F62  EFCA  F007         	goto	l3327
  3258  000F66                     u3080:
  3259  000F66  C02F  F037         	movff	___fldiv@b,??___fldiv
  3260  000F6A  C030  F038         	movff	___fldiv@b+1,??___fldiv+1
  3261  000F6E  C031  F039         	movff	___fldiv@b+2,??___fldiv+2
  3262  000F72  C032  F03A         	movff	___fldiv@b+3,??___fldiv+3
  3263  000F76  343A               	rlcf	(??___fldiv+3)^0,w,c
  3264  000F78  323A               	rrcf	(??___fldiv+3)^0,f,c
  3265  000F7A  3239               	rrcf	(??___fldiv+2)^0,f,c
  3266  000F7C  3238               	rrcf	(??___fldiv+1)^0,f,c
  3267  000F7E  3237               	rrcf	??___fldiv^0,f,c
  3268  000F80  C037  F02F         	movff	??___fldiv,___fldiv@b
  3269  000F84  C038  F030         	movff	??___fldiv+1,___fldiv@b+1
  3270  000F88  C039  F031         	movff	??___fldiv+2,___fldiv@b+2
  3271  000F8C  C03A  F032         	movff	??___fldiv+3,___fldiv@b+3
  3272  000F90  4A40               	infsnz	___fldiv@new_exp^0,f,c
  3273  000F92  2A41               	incf	(___fldiv@new_exp+1)^0,f,c
  3274  000F94                     l3327:
  3275  000F94  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3276  000F96  EFD5  F007         	goto	u3091
  3277  000F9A  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3278  000F9C  E108               	bnz	u3090
  3279  000F9E  2840               	incf	___fldiv@new_exp^0,w,c
  3280  000FA0  A0D8               	btfss	status,0,c
  3281  000FA2  EFD5  F007         	goto	u3091
  3282  000FA6  EFD7  F007         	goto	u3090
  3283  000FAA                     u3091:
  3284  000FAA  EFE2  F007         	goto	l3331
  3285  000FAE                     u3090:
  3286  000FAE  0E00               	movlw	0
  3287  000FB0  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3288  000FB2  6840               	setf	___fldiv@new_exp^0,c
  3289  000FB4  0E00               	movlw	0
  3290  000FB6  6E2F               	movwf	___fldiv@b^0,c
  3291  000FB8  0E00               	movlw	0
  3292  000FBA  6E30               	movwf	(___fldiv@b+1)^0,c
  3293  000FBC  0E00               	movlw	0
  3294  000FBE  6E31               	movwf	(___fldiv@b+2)^0,c
  3295  000FC0  0E00               	movlw	0
  3296  000FC2  6E32               	movwf	(___fldiv@b+3)^0,c
  3297  000FC4                     l3331:
  3298  000FC4  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3299  000FC6  EFEF  F007         	goto	u3100
  3300  000FCA  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3301  000FCC  E106               	bnz	u3101
  3302  000FCE  0440               	decf	___fldiv@new_exp^0,w,c
  3303  000FD0  B0D8               	btfsc	status,0,c
  3304  000FD2  EFED  F007         	goto	u3101
  3305  000FD6  EFEF  F007         	goto	u3100
  3306  000FDA                     u3101:
  3307  000FDA  EFFD  F007         	goto	l3335
  3308  000FDE                     u3100:
  3309  000FDE  0E00               	movlw	0
  3310  000FE0  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3311  000FE2  0E00               	movlw	0
  3312  000FE4  6E40               	movwf	___fldiv@new_exp^0,c
  3313  000FE6  0E00               	movlw	0
  3314  000FE8  6E2F               	movwf	___fldiv@b^0,c
  3315  000FEA  0E00               	movlw	0
  3316  000FEC  6E30               	movwf	(___fldiv@b+1)^0,c
  3317  000FEE  0E00               	movlw	0
  3318  000FF0  6E31               	movwf	(___fldiv@b+2)^0,c
  3319  000FF2  0E00               	movlw	0
  3320  000FF4  6E32               	movwf	(___fldiv@b+3)^0,c
  3321  000FF6  0E00               	movlw	0
  3322  000FF8  6E3F               	movwf	___fldiv@sign^0,c
  3323  000FFA                     l3335:
  3324  000FFA  C040  F046         	movff	___fldiv@new_exp,___fldiv@bexp
  3325  000FFE  A046               	btfss	___fldiv@bexp^0,0,c
  3326  001000  EF04  F008         	goto	u3111
  3327  001004  EF06  F008         	goto	u3110
  3328  001008                     u3111:
  3329  001008  EF09  F008         	goto	l3341
  3330  00100C                     u3110:
  3331  00100C  8E31               	bsf	(___fldiv@b+2)^0,7,c
  3332  00100E  EF0A  F008         	goto	l3343
  3333  001012                     l3341:
  3334  001012  9E31               	bcf	(___fldiv@b+2)^0,7,c
  3335  001014                     l3343:
  3336  001014  90D8               	bcf	status,0,c
  3337  001016  3046               	rrcf	___fldiv@bexp^0,w,c
  3338  001018  6E32               	movwf	(___fldiv@b+3)^0,c
  3339  00101A  EFC0  F006         	goto	l3257
  3340  00101E                     l914:
  3341  00101E  0012               	return		;funcret
  3342  001020                     __end_of___fldiv:
  3343                           	callstack 0
  3344                           
  3345 ;; *************** function ___awmod *****************
  3346 ;; Defined at:
  3347 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  dividend        2   81[COMRAM] int 
  3350 ;;  divisor         2   83[COMRAM] int 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  sign            1   86[COMRAM] unsigned char 
  3353 ;;  counter         1   85[COMRAM] unsigned char 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  2   81[COMRAM] int 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3363 ;;      Params:         4       0       0       0       0       0       0       0       0
  3364 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3366 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3367 ;;Total ram usage:        6 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    2
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_appADC
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text13
  3378  002B22                     __ptext13:
  3379                           	callstack 0
  3380  002B22                     ___awmod:
  3381                           	callstack 26
  3382  002B22  0E00               	movlw	0
  3383  002B24  6E57               	movwf	___awmod@sign^0,c
  3384  002B26  BE53               	btfsc	(___awmod@dividend+1)^0,7,c
  3385  002B28  EF9A  F015         	goto	u3310
  3386  002B2C  EF98  F015         	goto	u3311
  3387  002B30                     u3311:
  3388  002B30  EFA0  F015         	goto	l3489
  3389  002B34                     u3310:
  3390  002B34  6C52               	negf	___awmod@dividend^0,c
  3391  002B36  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3392  002B38  B0D8               	btfsc	status,0,c
  3393  002B3A  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3394  002B3C  0E01               	movlw	1
  3395  002B3E  6E57               	movwf	___awmod@sign^0,c
  3396  002B40                     l3489:
  3397  002B40  BE55               	btfsc	(___awmod@divisor+1)^0,7,c
  3398  002B42  EFA7  F015         	goto	u3320
  3399  002B46  EFA5  F015         	goto	u3321
  3400  002B4A                     u3321:
  3401  002B4A  EFAB  F015         	goto	l3493
  3402  002B4E                     u3320:
  3403  002B4E  6C54               	negf	___awmod@divisor^0,c
  3404  002B50  1E55               	comf	(___awmod@divisor+1)^0,f,c
  3405  002B52  B0D8               	btfsc	status,0,c
  3406  002B54  2A55               	incf	(___awmod@divisor+1)^0,f,c
  3407  002B56                     l3493:
  3408  002B56  5054               	movf	___awmod@divisor^0,w,c
  3409  002B58  1055               	iorwf	(___awmod@divisor+1)^0,w,c
  3410  002B5A  B4D8               	btfsc	status,2,c
  3411  002B5C  EFB2  F015         	goto	u3331
  3412  002B60  EFB4  F015         	goto	u3330
  3413  002B64                     u3331:
  3414  002B64  EFD8  F015         	goto	l3509
  3415  002B68                     u3330:
  3416  002B68  0E01               	movlw	1
  3417  002B6A  6E56               	movwf	___awmod@counter^0,c
  3418  002B6C  EFBC  F015         	goto	l3499
  3419  002B70                     l3497:
  3420  002B70  90D8               	bcf	status,0,c
  3421  002B72  3654               	rlcf	___awmod@divisor^0,f,c
  3422  002B74  3655               	rlcf	(___awmod@divisor+1)^0,f,c
  3423  002B76  2A56               	incf	___awmod@counter^0,f,c
  3424  002B78                     l3499:
  3425  002B78  AE55               	btfss	(___awmod@divisor+1)^0,7,c
  3426  002B7A  EFC1  F015         	goto	u3341
  3427  002B7E  EFC3  F015         	goto	u3340
  3428  002B82                     u3341:
  3429  002B82  EFB8  F015         	goto	l3497
  3430  002B86                     u3340:
  3431  002B86                     l3501:
  3432  002B86  5054               	movf	___awmod@divisor^0,w,c
  3433  002B88  5C52               	subwf	___awmod@dividend^0,w,c
  3434  002B8A  5055               	movf	(___awmod@divisor+1)^0,w,c
  3435  002B8C  5853               	subwfb	(___awmod@dividend+1)^0,w,c
  3436  002B8E  A0D8               	btfss	status,0,c
  3437  002B90  EFCC  F015         	goto	u3351
  3438  002B94  EFCE  F015         	goto	u3350
  3439  002B98                     u3351:
  3440  002B98  EFD2  F015         	goto	l3505
  3441  002B9C                     u3350:
  3442  002B9C  5054               	movf	___awmod@divisor^0,w,c
  3443  002B9E  5E52               	subwf	___awmod@dividend^0,f,c
  3444  002BA0  5055               	movf	(___awmod@divisor+1)^0,w,c
  3445  002BA2  5A53               	subwfb	(___awmod@dividend+1)^0,f,c
  3446  002BA4                     l3505:
  3447  002BA4  90D8               	bcf	status,0,c
  3448  002BA6  3255               	rrcf	(___awmod@divisor+1)^0,f,c
  3449  002BA8  3254               	rrcf	___awmod@divisor^0,f,c
  3450  002BAA  2E56               	decfsz	___awmod@counter^0,f,c
  3451  002BAC  EFC3  F015         	goto	l3501
  3452  002BB0                     l3509:
  3453  002BB0  5057               	movf	___awmod@sign^0,w,c
  3454  002BB2  B4D8               	btfsc	status,2,c
  3455  002BB4  EFDE  F015         	goto	u3361
  3456  002BB8  EFE0  F015         	goto	u3360
  3457  002BBC                     u3361:
  3458  002BBC  EFE4  F015         	goto	l3513
  3459  002BC0                     u3360:
  3460  002BC0  6C52               	negf	___awmod@dividend^0,c
  3461  002BC2  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3462  002BC4  B0D8               	btfsc	status,0,c
  3463  002BC6  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3464  002BC8                     l3513:
  3465  002BC8  C052  F052         	movff	___awmod@dividend,?___awmod
  3466  002BCC  C053  F053         	movff	___awmod@dividend+1,?___awmod+1
  3467  002BD0  0012               	return		;funcret
  3468  002BD2                     __end_of___awmod:
  3469                           	callstack 0
  3470                           
  3471 ;; *************** function _appInit *****************
  3472 ;; Defined at:
  3473 ;;		line 12 in file "app.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    5
  3494 ;; This function calls:
  3495 ;;		_adcInit
  3496 ;;		_appCounterInit
  3497 ;;		_appISRConfig
  3498 ;;		_appLCD_Init
  3499 ;;		_appTimerInit
  3500 ;;		_appTimerStart
  3501 ;; This function is called by:
  3502 ;;		_main
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text14
  3507  003162                     __ptext14:
  3508                           	callstack 0
  3509  003162                     _appInit:
  3510                           	callstack 25
  3511  003162                     
  3512                           ;app.c: 14:     appISRConfig();
  3513  003162  ECDD  F018         	call	_appISRConfig	;wreg free
  3514  003166                     
  3515                           ;app.c: 15:     appLCD_Init();
  3516  003166  ECE9  F015         	call	_appLCD_Init	;wreg free
  3517  00316A                     
  3518                           ;app.c: 16:     adcInit(2);
  3519  00316A  0E02               	movlw	2
  3520  00316C  EC1F  F017         	call	_adcInit
  3521  003170                     
  3522                           ;app.c: 17:     appTimerInit();
  3523  003170  EC8B  F018         	call	_appTimerInit	;wreg free
  3524  003174                     
  3525                           ;app.c: 18:     appCounterInit(250);
  3526  003174  0E00               	movlw	0
  3527  003176  6E05               	movwf	(appCounterInit@reload+1)^0,c
  3528  003178  0EFA               	movlw	250
  3529  00317A  6E04               	movwf	appCounterInit@reload^0,c
  3530  00317C  ECD0  F018         	call	_appCounterInit	;wreg free
  3531  003180                     
  3532                           ;app.c: 19:     appTimerStart();
  3533  003180  ECD7  F018         	call	_appTimerStart	;wreg free
  3534  003184  0012               	return		;funcret
  3535  003186                     __end_of_appInit:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _appTimerInit *****************
  3539 ;; Defined at:
  3540 ;;		line 53 in file "servo.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3554 ;;      Params:         0       0       0       0       0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    2
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_appInit
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text15
  3569  003116                     __ptext15:
  3570                           	callstack 0
  3571  003116                     _appTimerInit:
  3572                           	callstack 27
  3573  003116                     
  3574                           ;servo.c: 58:     T3CONbits.TMR3ON = 0;
  3575  003116  90B1               	bcf	177,0,c	;volatile
  3576                           
  3577                           ;servo.c: 59:     T3CONbits.RD16 = 1;
  3578  003118  8EB1               	bsf	177,7,c	;volatile
  3579                           
  3580                           ;servo.c: 60:     T3CONbits.TMR3CS = 0;
  3581  00311A  92B1               	bcf	177,1,c	;volatile
  3582  00311C                     
  3583                           ;servo.c: 61:     T3CONbits.T3CKPS = 0b11;
  3584  00311C  0E30               	movlw	48
  3585  00311E  12B1               	iorwf	177,f,c	;volatile
  3586  003120                     
  3587                           ;servo.c: 62:     T3CONbits.T3NSYNC = 1;
  3588  003120  84B1               	bsf	177,2,c	;volatile
  3589  003122                     
  3590                           ;servo.c: 67:     T0CONbits.TMR0ON = 0;
  3591  003122  9ED5               	bcf	213,7,c	;volatile
  3592  003124                     
  3593                           ;servo.c: 68:     T0CONbits.T08BIT = 1;
  3594  003124  8CD5               	bsf	213,6,c	;volatile
  3595  003126                     
  3596                           ;servo.c: 69:     T0CONbits.T0CS = 1;
  3597  003126  8AD5               	bsf	213,5,c	;volatile
  3598  003128                     
  3599                           ;servo.c: 70:     T0CONbits.T0SE = 0;
  3600  003128  98D5               	bcf	213,4,c	;volatile
  3601  00312A                     
  3602                           ;servo.c: 71:     T0CONbits.PSA = 1;
  3603  00312A  86D5               	bsf	213,3,c	;volatile
  3604  00312C                     
  3605                           ;servo.c: 73:     TRISAbits.TRISA4 = 1;
  3606  00312C  8892               	bsf	146,4,c	;volatile
  3607  00312E                     
  3608                           ;servo.c: 79:     INTCONbits.TMR0IE = 1;
  3609  00312E  8AF2               	bsf	242,5,c	;volatile
  3610  003130                     
  3611                           ;servo.c: 80:     INTCONbits.TMR0IF = 0;
  3612  003130  94F2               	bcf	242,2,c	;volatile
  3613  003132                     
  3614                           ;servo.c: 81:     INTCON2bits.TMR0IP = 1;
  3615  003132  84F1               	bsf	241,2,c	;volatile
  3616  003134                     
  3617                           ;servo.c: 87:     PIR2bits.TMR3IF = 0;
  3618  003134  92A1               	bcf	161,1,c	;volatile
  3619  003136                     
  3620                           ;servo.c: 88:     IPR2bits.TMR3IP = 0;
  3621  003136  92A2               	bcf	162,1,c	;volatile
  3622  003138                     
  3623                           ;servo.c: 89:     PIE2bits.TMR3IE = 1;
  3624  003138  82A0               	bsf	160,1,c	;volatile
  3625  00313A  0012               	return		;funcret
  3626  00313C                     __end_of_appTimerInit:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _appLCD_Init *****************
  3630 ;; Defined at:
  3631 ;;		line 197 in file "flex_lcd.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3647 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3648 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3649 ;;Total ram usage:        2 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    4
  3652 ;; This function calls:
  3653 ;;		_Lcd_Cmd
  3654 ;;		_Lcd_Init
  3655 ;;		_Lcd_Out
  3656 ;; This function is called by:
  3657 ;;		_appInit
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text16
  3662  002BD2                     __ptext16:
  3663                           	callstack 0
  3664  002BD2                     _appLCD_Init:
  3665                           	callstack 25
  3666  002BD2                     
  3667                           ;flex_lcd.c: 199:     Lcd_Init();
  3668  002BD2  EC31  F015         	call	_Lcd_Init	;wreg free
  3669                           
  3670                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  3671  002BD6  0E01               	movlw	1
  3672  002BD8  EC6E  F012         	call	_Lcd_Cmd
  3673                           
  3674                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  3675  002BDC  0E0C               	movlw	12
  3676  002BDE  EC6E  F012         	call	_Lcd_Cmd
  3677  002BE2                     
  3678                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  3679  002BE2  0E02               	movlw	2
  3680  002BE4  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3681  002BE6  0E86               	movlw	134
  3682  002BE8  6E0E               	movwf	??_appLCD_Init^0,c
  3683  002BEA  0E99               	movlw	153
  3684  002BEC                     u4547:
  3685  002BEC  2EE8               	decfsz	wreg,f,c
  3686  002BEE  D7FE               	bra	u4547
  3687  002BF0  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3688  002BF2  D7FC               	bra	u4547
  3689  002BF4  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3690  002BF6  D7FA               	bra	u4547
  3691  002BF8  F000               	nop	
  3692  002BFA                     
  3693                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  3694  002BFA  0E03               	movlw	3
  3695  002BFC  6E07               	movwf	Lcd_Out@x^0,c
  3696  002BFE  0E3A               	movlw	low STR_3
  3697  002C00  6E08               	movwf	Lcd_Out@buffer^0,c
  3698  002C02  0E08               	movlw	high STR_3
  3699  002C04  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3700  002C06  0E01               	movlw	1
  3701  002C08  EC05  F014         	call	_Lcd_Out
  3702  002C0C                     
  3703                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  3704  002C0C  0E06               	movlw	6
  3705  002C0E  6E07               	movwf	Lcd_Out@x^0,c
  3706  002C10  0E4F               	movlw	low STR_4
  3707  002C12  6E08               	movwf	Lcd_Out@buffer^0,c
  3708  002C14  0E08               	movlw	high STR_4
  3709  002C16  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3710  002C18  0E02               	movlw	2
  3711  002C1A  EC05  F014         	call	_Lcd_Out
  3712  002C1E                     
  3713                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  3714  002C1E  0E1F               	movlw	31
  3715  002C20  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3716  002C22  0E71               	movlw	113
  3717  002C24  6E0E               	movwf	??_appLCD_Init^0,c
  3718  002C26  0E1E               	movlw	30
  3719  002C28                     u4557:
  3720  002C28  2EE8               	decfsz	wreg,f,c
  3721  002C2A  D7FE               	bra	u4557
  3722  002C2C  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3723  002C2E  D7FC               	bra	u4557
  3724  002C30  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3725  002C32  D7FA               	bra	u4557
  3726  002C34  D000               	nop2	
  3727                           
  3728                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  3729  002C36  0E01               	movlw	1
  3730  002C38  EC6E  F012         	call	_Lcd_Cmd
  3731  002C3C  0E02               	movlw	2
  3732  002C3E  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3733  002C40  0E86               	movlw	134
  3734  002C42  6E0E               	movwf	??_appLCD_Init^0,c
  3735  002C44  0E99               	movlw	153
  3736  002C46                     u4567:
  3737  002C46  2EE8               	decfsz	wreg,f,c
  3738  002C48  D7FE               	bra	u4567
  3739  002C4A  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3740  002C4C  D7FC               	bra	u4567
  3741  002C4E  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3742  002C50  D7FA               	bra	u4567
  3743  002C52  F000               	nop	
  3744  002C54  0012               	return		;funcret
  3745  002C56                     __end_of_appLCD_Init:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function _Lcd_Init *****************
  3749 ;; Defined at:
  3750 ;;		line 31 in file "flex_lcd.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  i               1    7[COMRAM] unsigned char 
  3755 ;;  data            1    0        unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3765 ;;      Params:         0       0       0       0       0       0       0       0       0
  3766 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3767 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3768 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3769 ;;Total ram usage:        3 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    3
  3772 ;; This function calls:
  3773 ;;		_Lcd_Cmd
  3774 ;; This function is called by:
  3775 ;;		_appLCD_Init
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text17
  3780  002A62                     __ptext17:
  3781                           	callstack 0
  3782  002A62                     _Lcd_Init:
  3783                           	callstack 25
  3784  002A62                     
  3785                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  3786  002A62  9E95               	bcf	149,7,c	;volatile
  3787                           
  3788                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  3789  002A64  9C95               	bcf	149,6,c	;volatile
  3790                           
  3791                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  3792  002A66  9A95               	bcf	149,5,c	;volatile
  3793                           
  3794                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  3795  002A68  9895               	bcf	149,4,c	;volatile
  3796                           
  3797                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  3798  002A6A  9695               	bcf	149,3,c	;volatile
  3799                           
  3800                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  3801  002A6C  9495               	bcf	149,2,c	;volatile
  3802  002A6E                     
  3803                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  3804  002A6E  0E85               	movlw	133
  3805  002A70  6E07               	movwf	??_Lcd_Init^0,c
  3806  002A72  0E76               	movlw	118
  3807  002A74                     u4577:
  3808  002A74  2EE8               	decfsz	wreg,f,c
  3809  002A76  D7FE               	bra	u4577
  3810  002A78  2E07               	decfsz	??_Lcd_Init^0,f,c
  3811  002A7A  D7FC               	bra	u4577
  3812  002A7C  D000               	nop2	
  3813  002A7E                     
  3814                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  3815  002A7E  0E00               	movlw	0
  3816  002A80  6E08               	movwf	Lcd_Init@i^0,c
  3817  002A82                     l106:
  3818                           
  3819                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  3820  002A82  9E8C               	bcf	140,7,c	;volatile
  3821                           
  3822                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  3823  002A84  9C8C               	bcf	140,6,c	;volatile
  3824                           
  3825                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  3826  002A86  8A8C               	bsf	140,5,c	;volatile
  3827                           
  3828                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  3829  002A88  888C               	bsf	140,4,c	;volatile
  3830                           
  3831                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  3832  002A8A  968C               	bcf	140,3,c	;volatile
  3833                           
  3834                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  3835  002A8C  948C               	bcf	140,2,c	;volatile
  3836                           
  3837                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  3838  002A8E  9E8C               	bcf	140,7,c	;volatile
  3839                           
  3840                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  3841  002A90  9C8C               	bcf	140,6,c	;volatile
  3842                           
  3843                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  3844  002A92  8A8C               	bsf	140,5,c	;volatile
  3845                           
  3846                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  3847  002A94  888C               	bsf	140,4,c	;volatile
  3848                           
  3849                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  3850  002A96  868C               	bsf	140,3,c	;volatile
  3851                           
  3852                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  3853  002A98  948C               	bcf	140,2,c	;volatile
  3854  002A9A                     
  3855                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  3856  002A9A  0E05               	movlw	5
  3857  002A9C                     u4587:
  3858  002A9C  2EE8               	decfsz	wreg,f,c
  3859  002A9E  D7FE               	bra	u4587
  3860  002AA0                     
  3861                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  3862  002AA0  9E8C               	bcf	140,7,c	;volatile
  3863  002AA2                     
  3864                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  3865  002AA2  9C8C               	bcf	140,6,c	;volatile
  3866  002AA4                     
  3867                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  3868  002AA4  8A8C               	bsf	140,5,c	;volatile
  3869  002AA6                     
  3870                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  3871  002AA6  888C               	bsf	140,4,c	;volatile
  3872  002AA8                     
  3873                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  3874  002AA8  968C               	bcf	140,3,c	;volatile
  3875  002AAA                     
  3876                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  3877  002AAA  948C               	bcf	140,2,c	;volatile
  3878                           
  3879                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3880  002AAC  0E16               	movlw	22
  3881  002AAE  6E07               	movwf	??_Lcd_Init^0,c
  3882  002AB0  0E6C               	movlw	108
  3883  002AB2                     u4597:
  3884  002AB2  2EE8               	decfsz	wreg,f,c
  3885  002AB4  D7FE               	bra	u4597
  3886  002AB6  2E07               	decfsz	??_Lcd_Init^0,f,c
  3887  002AB8  D7FC               	bra	u4597
  3888  002ABA  D000               	nop2	
  3889  002ABC                     
  3890                           ;flex_lcd.c: 61:     }
  3891  002ABC  2A08               	incf	Lcd_Init@i^0,f,c
  3892  002ABE  0E03               	movlw	3
  3893  002AC0  6408               	cpfsgt	Lcd_Init@i^0,c
  3894  002AC2  EF65  F015         	goto	u2881
  3895  002AC6  EF67  F015         	goto	u2880
  3896  002ACA                     u2881:
  3897  002ACA  EF41  F015         	goto	l106
  3898  002ACE                     u2880:
  3899  002ACE                     
  3900                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  3901  002ACE  9E8C               	bcf	140,7,c	;volatile
  3902                           
  3903                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  3904  002AD0  9C8C               	bcf	140,6,c	;volatile
  3905                           
  3906                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  3907  002AD2  8A8C               	bsf	140,5,c	;volatile
  3908                           
  3909                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  3910  002AD4  988C               	bcf	140,4,c	;volatile
  3911                           
  3912                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  3913  002AD6  968C               	bcf	140,3,c	;volatile
  3914                           
  3915                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  3916  002AD8  948C               	bcf	140,2,c	;volatile
  3917                           
  3918                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  3919  002ADA  9E8C               	bcf	140,7,c	;volatile
  3920                           
  3921                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  3922  002ADC  9C8C               	bcf	140,6,c	;volatile
  3923                           
  3924                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  3925  002ADE  8A8C               	bsf	140,5,c	;volatile
  3926                           
  3927                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  3928  002AE0  988C               	bcf	140,4,c	;volatile
  3929                           
  3930                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  3931  002AE2  868C               	bsf	140,3,c	;volatile
  3932                           
  3933                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  3934  002AE4  948C               	bcf	140,2,c	;volatile
  3935  002AE6                     
  3936                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3937  002AE6  0E05               	movlw	5
  3938  002AE8                     u4607:
  3939  002AE8  2EE8               	decfsz	wreg,f,c
  3940  002AEA  D7FE               	bra	u4607
  3941  002AEC                     
  3942                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  3943  002AEC  9E8C               	bcf	140,7,c	;volatile
  3944  002AEE                     
  3945                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  3946  002AEE  9C8C               	bcf	140,6,c	;volatile
  3947  002AF0                     
  3948                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  3949  002AF0  8A8C               	bsf	140,5,c	;volatile
  3950  002AF2                     
  3951                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  3952  002AF2  988C               	bcf	140,4,c	;volatile
  3953  002AF4                     
  3954                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  3955  002AF4  968C               	bcf	140,3,c	;volatile
  3956  002AF6                     
  3957                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  3958  002AF6  948C               	bcf	140,2,c	;volatile
  3959                           
  3960                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3961  002AF8  0E16               	movlw	22
  3962  002AFA  6E07               	movwf	??_Lcd_Init^0,c
  3963  002AFC  0E6C               	movlw	108
  3964  002AFE                     u4617:
  3965  002AFE  2EE8               	decfsz	wreg,f,c
  3966  002B00  D7FE               	bra	u4617
  3967  002B02  2E07               	decfsz	??_Lcd_Init^0,f,c
  3968  002B04  D7FC               	bra	u4617
  3969  002B06  D000               	nop2	
  3970  002B08                     
  3971                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  3972  002B08  0E28               	movlw	40
  3973  002B0A  EC6E  F012         	call	_Lcd_Cmd
  3974  002B0E                     
  3975                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  3976  002B0E  0E10               	movlw	16
  3977  002B10  EC6E  F012         	call	_Lcd_Cmd
  3978  002B14                     
  3979                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  3980  002B14  0E01               	movlw	1
  3981  002B16  EC6E  F012         	call	_Lcd_Cmd
  3982  002B1A                     
  3983                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  3984  002B1A  0E0F               	movlw	15
  3985  002B1C  EC6E  F012         	call	_Lcd_Cmd
  3986  002B20  0012               	return		;funcret
  3987  002B22                     __end_of_Lcd_Init:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _appISRConfig *****************
  3991 ;; Defined at:
  3992 ;;		line 55 in file "app.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		None
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4006 ;;      Params:         0       0       0       0       0       0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4009 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4010 ;;Total ram usage:        0 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    2
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_appInit
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text18
  4021  0031BA                     __ptext18:
  4022                           	callstack 0
  4023  0031BA                     _appISRConfig:
  4024                           	callstack 27
  4025  0031BA                     
  4026                           ;app.c: 60:     RCONbits.IPEN = 1;
  4027  0031BA  8ED0               	bsf	208,7,c	;volatile
  4028                           
  4029                           ;app.c: 61:     INTCONbits.GIE_GIEH = 1;
  4030  0031BC  8EF2               	bsf	242,7,c	;volatile
  4031                           
  4032                           ;app.c: 62:     INTCONbits.PEIE_GIEL = 1;
  4033  0031BE  8CF2               	bsf	242,6,c	;volatile
  4034  0031C0  0012               	return		;funcret
  4035  0031C2                     __end_of_appISRConfig:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _appCounterInit *****************
  4039 ;; Defined at:
  4040 ;;		line 102 in file "servo.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  reload          2    3[COMRAM] unsigned short 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4054 ;;      Params:         2       0       0       0       0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4057 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4058 ;;Total ram usage:        2 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    2
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_appInit
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text19
  4069  0031A0                     __ptext19:
  4070                           	callstack 0
  4071  0031A0                     _appCounterInit:
  4072                           	callstack 27
  4073  0031A0                     
  4074                           ;servo.c: 102: void appCounterInit(uint16_t reload);servo.c: 103: {;servo.c: 104:     TM
      +                          R0 = reload + 1;
  4075  0031A0  0E01               	movlw	1
  4076  0031A2  2404               	addwf	appCounterInit@reload^0,w,c
  4077  0031A4  6ED6               	movwf	214,c	;volatile
  4078  0031A6  0E00               	movlw	0
  4079  0031A8  2005               	addwfc	(appCounterInit@reload+1)^0,w,c
  4080  0031AA  6ED7               	movwf	215,c	;volatile
  4081  0031AC  0012               	return		;funcret
  4082  0031AE                     __end_of_appCounterInit:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _adcInit *****************
  4086 ;; Defined at:
  4087 ;;		line 10 in file "adc.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  ADC_PINs        1    wreg     unsigned char 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  ADC_PINs        1    4[COMRAM] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4101 ;;      Params:         0       0       0       0       0       0       0       0       0
  4102 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4103 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4104 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4105 ;;Total ram usage:        2 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    2
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_appInit
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text20
  4116  002E3E                     __ptext20:
  4117                           	callstack 0
  4118  002E3E                     _adcInit:
  4119                           	callstack 27
  4120                           
  4121                           ;incstack = 0
  4122                           ;adcInit@ADC_PINs stored from wreg
  4123  002E3E  6E05               	movwf	adcInit@ADC_PINs^0,c
  4124  002E40                     
  4125                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  4126  002E40  5005               	movf	adcInit@ADC_PINs^0,w,c
  4127  002E42  A4D8               	btfss	status,2,c
  4128  002E44  EF26  F017         	goto	u3541
  4129  002E48  EF28  F017         	goto	u3540
  4130  002E4C                     u3541:
  4131  002E4C  EF2E  F017         	goto	l3611
  4132  002E50                     u3540:
  4133  002E50                     
  4134                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  4135  002E50  50C1               	movf	193,w,c	;volatile
  4136  002E52  0BF0               	andlw	-16
  4137  002E54  090E               	iorlw	14
  4138  002E56  6EC1               	movwf	193,c	;volatile
  4139                           
  4140                           ;adc.c: 16:     }
  4141  002E58  EF36  F017         	goto	l3613
  4142  002E5C                     l3611:
  4143                           
  4144                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  4145  002E5C  5005               	movf	adcInit@ADC_PINs^0,w,c
  4146  002E5E  080F               	sublw	15
  4147  002E60  6E04               	movwf	??_adcInit^0,c
  4148  002E62  50C1               	movf	193,w,c	;volatile
  4149  002E64  1804               	xorwf	??_adcInit^0,w,c
  4150  002E66  0BF0               	andlw	-16
  4151  002E68  1804               	xorwf	??_adcInit^0,w,c
  4152  002E6A  6EC1               	movwf	193,c	;volatile
  4153  002E6C                     l3613:
  4154                           
  4155                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  4156  002E6C  0ECF               	movlw	-49
  4157  002E6E  16C1               	andwf	193,f,c	;volatile
  4158  002E70                     
  4159                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  4160  002E70  50C0               	movf	192,w,c	;volatile
  4161  002E72  0BC7               	andlw	-57
  4162  002E74  0910               	iorlw	16
  4163  002E76  6EC0               	movwf	192,c	;volatile
  4164  002E78                     
  4165                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  4166  002E78  50C0               	movf	192,w,c	;volatile
  4167  002E7A  0BF8               	andlw	-8
  4168  002E7C  0903               	iorlw	3
  4169  002E7E  6EC0               	movwf	192,c	;volatile
  4170  002E80                     
  4171                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  4172  002E80  8EC0               	bsf	192,7,c	;volatile
  4173  002E82                     
  4174                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  4175  002E82  80C2               	bsf	194,0,c	;volatile
  4176  002E84                     
  4177                           ;adc.c: 41:     TRISCbits.TRISC1 = 0;
  4178  002E84  9294               	bcf	148,1,c	;volatile
  4179  002E86  0012               	return		;funcret
  4180  002E88                     __end_of_adcInit:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _appTimerStop *****************
  4184 ;; Defined at:
  4185 ;;		line 97 in file "servo.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;		None
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;		None
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		None
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4199 ;;      Params:         0       0       0       0       0       0       0       0       0
  4200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4202 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4203 ;;Total ram usage:        0 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:    2
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_appGetElements
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text21
  4214  0031C8                     __ptext21:
  4215                           	callstack 0
  4216  0031C8                     _appTimerStop:
  4217                           	callstack 27
  4218  0031C8                     
  4219                           ;servo.c: 99:     T3CONbits.TMR3ON = 0;
  4220  0031C8  90B1               	bcf	177,0,c	;volatile
  4221  0031CA  0012               	return		;funcret
  4222  0031CC                     __end_of_appTimerStop:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function _appTimerStart *****************
  4226 ;; Defined at:
  4227 ;;		line 91 in file "servo.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4241 ;;      Params:         0       0       0       0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    2
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_appInit
  4252 ;;		_appGetElements
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text22
  4257  0031AE                     __ptext22:
  4258                           	callstack 0
  4259  0031AE                     _appTimerStart:
  4260                           	callstack 27
  4261  0031AE                     
  4262                           ;servo.c: 93:     TMR3 = 20536;
  4263  0031AE  0E50               	movlw	80
  4264  0031B0  6EB3               	movwf	179,c	;volatile
  4265  0031B2  0E38               	movlw	56
  4266  0031B4  6EB2               	movwf	178,c	;volatile
  4267  0031B6                     
  4268                           ;servo.c: 94:     T3CONbits.TMR3ON = 1;
  4269  0031B6  80B1               	bsf	177,0,c	;volatile
  4270  0031B8  0012               	return		;funcret
  4271  0031BA                     __end_of_appTimerStart:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function _appSubGiveElemts *****************
  4275 ;; Defined at:
  4276 ;;		line 93 in file "app.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  data            2    3[COMRAM] PTR struct _state
  4279 ;;		 -> datos(25), 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4291 ;;      Params:         2       0       0       0       0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4294 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4295 ;;Total ram usage:        2 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    3
  4298 ;; This function calls:
  4299 ;;		_appCounterStart
  4300 ;; This function is called by:
  4301 ;;		_appGetElements
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text23
  4306  0031C2                     __ptext23:
  4307                           	callstack 0
  4308  0031C2                     _appSubGiveElemts:
  4309                           	callstack 26
  4310  0031C2                     
  4311                           ;app.c: 93: void appSubGiveElemts(StateMachine *data);app.c: 94: {;app.c: 95:     appCou
      +                          nterStart();
  4312  0031C2  ECE6  F018         	call	_appCounterStart	;wreg free
  4313  0031C6  0012               	return		;funcret
  4314  0031C8                     __end_of_appSubGiveElemts:
  4315                           	callstack 0
  4316                           
  4317 ;; *************** function _appCounterStart *****************
  4318 ;; Defined at:
  4319 ;;		line 107 in file "servo.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		None
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4333 ;;      Params:         0       0       0       0       0       0       0       0       0
  4334 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4336 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    2
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_appSubGiveElemts
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text24
  4348  0031CC                     __ptext24:
  4349                           	callstack 0
  4350  0031CC                     _appCounterStart:
  4351                           	callstack 26
  4352  0031CC                     
  4353                           ;servo.c: 110:     T0CONbits.TMR0ON = 1;
  4354  0031CC  8ED5               	bsf	213,7,c	;volatile
  4355  0031CE  0012               	return		;funcret
  4356  0031D0                     __end_of_appCounterStart:
  4357                           	callstack 0
  4358                           
  4359 ;; *************** function _appSubGetData *****************
  4360 ;; Defined at:
  4361 ;;		line 65 in file "app.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  4364 ;;		 -> datos(25), 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  cantidad        2   38[BANK0 ] unsigned short 
  4367 ;;  inout           1   40[BANK0 ] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4377 ;;      Params:         0       2       0       0       0       0       0       0       0
  4378 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4380 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4381 ;;Total ram usage:        5 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:   10
  4384 ;; This function calls:
  4385 ;;		_Lcd_Out
  4386 ;;		___wmul
  4387 ;;		_memset
  4388 ;;		_sprintf
  4389 ;;		_teclado
  4390 ;; This function is called by:
  4391 ;;		_appGetElements
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text25
  4396  00270C                     __ptext25:
  4397                           	callstack 0
  4398  00270C                     _appSubGetData:
  4399                           	callstack 19
  4400  00270C                     
  4401                           ;app.c: 65: void appSubGetData(StateMachine *data_Inout);app.c: 66: {;app.c: 67:     uin
      +                          t16_t cantidad = 0;
  4402  00270C  0E00               	movlw	0
  4403  00270E  0100               	movlb	0	; () banked
  4404  002710  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  4405  002712  0E00               	movlw	0
  4406  002714  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  4407                           
  4408                           ;app.c: 68:     uint8_t inout = 0;
  4409  002716  0E00               	movlw	0
  4410  002718  6F88               	movwf	appSubGetData@inout& (0+255),b
  4411  00271A                     
  4412                           ; BSR set to: 0
  4413                           ;app.c: 69:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  4414  00271A  0E07               	movlw	7
  4415  00271C  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4416  00271E  6E04               	movwf	memset@dest^0,c
  4417  002720  0E00               	movlw	0
  4418  002722  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4419  002724  6E05               	movwf	(memset@dest+1)^0,c
  4420  002726  0E00               	movlw	0
  4421  002728  6E07               	movwf	(memset@c+1)^0,c
  4422  00272A  0E00               	movlw	0
  4423  00272C  6E06               	movwf	memset@c^0,c
  4424  00272E  0E00               	movlw	0
  4425  002730  6E09               	movwf	(memset@n+1)^0,c
  4426  002732  0E10               	movlw	16
  4427  002734  6E08               	movwf	memset@n^0,c
  4428  002736  EC5A  F010         	call	_memset	;wreg free
  4429  00273A                     
  4430                           ;app.c: 70:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  4431  00273A  0E00               	movlw	0
  4432  00273C  6E07               	movwf	Lcd_Out@x^0,c
  4433  00273E  0E12               	movlw	low STR_6
  4434  002740  6E08               	movwf	Lcd_Out@buffer^0,c
  4435  002742  0E08               	movlw	high STR_6
  4436  002744  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  4437  002746  0E01               	movlw	1
  4438  002748  EC05  F014         	call	_Lcd_Out
  4439                           
  4440                           ;app.c: 71:     while(inout != '*')
  4441  00274C  EFF0  F013         	goto	l4355
  4442  002750                     l4343:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;app.c: 72:     {;app.c: 73:         teclado(&inout);
  4446  002750  0E88               	movlw	low appSubGetData@inout
  4447  002752  6E04               	movwf	teclado@valor^0,c
  4448  002754  0E00               	movlw	high appSubGetData@inout
  4449  002756  6E05               	movwf	(teclado@valor+1)^0,c
  4450  002758  EC35  F00B         	call	_teclado	;wreg free
  4451  00275C                     
  4452                           ;app.c: 75:         if((inout >= '0') && (inout <= '9'))
  4453  00275C  0E2F               	movlw	47
  4454  00275E  0100               	movlb	0	; () banked
  4455  002760  6588               	cpfsgt	appSubGetData@inout& (0+255),b
  4456  002762  EFB5  F013         	goto	u4381
  4457  002766  EFB7  F013         	goto	u4380
  4458  00276A                     u4381:
  4459  00276A  EFD4  F013         	goto	l4351
  4460  00276E                     u4380:
  4461  00276E                     
  4462                           ; BSR set to: 0
  4463  00276E  0E3A               	movlw	58
  4464  002770  6188               	cpfslt	appSubGetData@inout& (0+255),b
  4465  002772  EFBD  F013         	goto	u4391
  4466  002776  EFBF  F013         	goto	u4390
  4467  00277A                     u4391:
  4468  00277A  EFD4  F013         	goto	l4351
  4469  00277E                     u4390:
  4470  00277E                     
  4471                           ; BSR set to: 0
  4472                           ;app.c: 76:         {;app.c: 77:             cantidad = (cantidad*10)+(inout - 48);
  4473  00277E  C086  F004         	movff	appSubGetData@cantidad,___wmul@multiplier
  4474  002782  C087  F005         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  4475  002786  0E00               	movlw	0
  4476  002788  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  4477  00278A  0E0A               	movlw	10
  4478  00278C  6E06               	movwf	___wmul@multiplicand^0,c
  4479  00278E  EC9E  F018         	call	___wmul	;wreg free
  4480  002792  0100               	movlb	0	; () banked
  4481  002794  5188               	movf	appSubGetData@inout& (0+255),w,b
  4482  002796  2604               	addwf	?___wmul^0,f,c
  4483  002798  0E00               	movlw	0
  4484  00279A  2205               	addwfc	(?___wmul+1)^0,f,c
  4485  00279C  0ED0               	movlw	208
  4486  00279E  2404               	addwf	?___wmul^0,w,c
  4487  0027A0  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  4488  0027A2  0EFF               	movlw	255
  4489  0027A4  2005               	addwfc	(?___wmul+1)^0,w,c
  4490  0027A6  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  4491  0027A8                     l4351:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;app.c: 79:         sprintf((char *)data_Inout->display,"%d",cantidad);
  4495  0027A8  0E07               	movlw	7
  4496  0027AA  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4497  0027AC  6F72               	movwf	sprintf@s& (0+255),b
  4498  0027AE  0E00               	movlw	0
  4499  0027B0  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4500  0027B2  6F73               	movwf	(sprintf@s+1)& (0+255),b
  4501  0027B4  0E57               	movlw	low (STR_5+2)
  4502  0027B6  6F74               	movwf	sprintf@fmt& (0+255),b
  4503  0027B8  0E08               	movlw	high (STR_5+2)
  4504  0027BA  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  4505  0027BC  C086  F076         	movff	appSubGetData@cantidad,?_sprintf+4
  4506  0027C0  C087  F077         	movff	appSubGetData@cantidad+1,?_sprintf+5
  4507  0027C4  ECCD  F016         	call	_sprintf	;wreg free
  4508  0027C8                     
  4509                           ;app.c: 80:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  4510  0027C8  0E00               	movlw	0
  4511  0027CA  6E07               	movwf	Lcd_Out@x^0,c
  4512  0027CC  0E07               	movlw	7
  4513  0027CE  0100               	movlb	0	; () banked
  4514  0027D0  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4515  0027D2  6E08               	movwf	Lcd_Out@buffer^0,c
  4516  0027D4  0E00               	movlw	0
  4517  0027D6  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4518  0027D8  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  4519  0027DA  0E02               	movlw	2
  4520  0027DC  EC05  F014         	call	_Lcd_Out
  4521  0027E0                     l4355:
  4522                           
  4523                           ;app.c: 71:     while(inout != '*')
  4524  0027E0  0E2A               	movlw	42
  4525  0027E2  0100               	movlb	0	; () banked
  4526  0027E4  1988               	xorwf	appSubGetData@inout& (0+255),w,b
  4527  0027E6  A4D8               	btfss	status,2,c
  4528  0027E8  EFF8  F013         	goto	u4401
  4529  0027EC  EFFA  F013         	goto	u4400
  4530  0027F0                     u4401:
  4531  0027F0  EFA8  F013         	goto	l4343
  4532  0027F4                     u4400:
  4533  0027F4                     
  4534                           ; BSR set to: 0
  4535                           ;app.c: 82:     data_Inout->elements = (int16_t)cantidad;
  4536  0027F4  EE20 F001          	lfsr	2,1
  4537  0027F8  5184               	movf	appSubGetData@data_Inout& (0+255),w,b
  4538  0027FA  26D9               	addwf	fsr2l,f,c
  4539  0027FC  5185               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  4540  0027FE  22DA               	addwfc	fsr2h,f,c
  4541  002800  C086  FFDE         	movff	appSubGetData@cantidad,postinc2
  4542  002804  C087  FFDD         	movff	appSubGetData@cantidad+1,postdec2
  4543  002808                     
  4544                           ; BSR set to: 0
  4545  002808  0012               	return		;funcret
  4546  00280A                     __end_of_appSubGetData:
  4547                           	callstack 0
  4548                           
  4549 ;; *************** function _teclado *****************
  4550 ;; Defined at:
  4551 ;;		line 10 in file "teclado.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  valor           2    3[COMRAM] PTR unsigned char 
  4554 ;;		 -> appSubGetData@inout(1), datos(25), 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4566 ;;      Params:         2       0       0       0       0       0       0       0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4569 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4570 ;;Total ram usage:        2 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    2
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_appStateInitial
  4577 ;;		_appSubGetData
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text26
  4582  00166A                     __ptext26:
  4583                           	callstack 0
  4584  00166A                     _teclado:
  4585                           	callstack 27
  4586  00166A                     
  4587                           ;teclado.c: 11:     *valor = 0;
  4588  00166A  C004  FFD9         	movff	teclado@valor,fsr2l
  4589  00166E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4590  001672  0E00               	movlw	0
  4591  001674  6EDF               	movwf	indf2,c
  4592  001676                     
  4593                           ;teclado.c: 12:     PORTB=0xF0;
  4594  001676  0EF0               	movlw	240
  4595  001678  6E81               	movwf	129,c	;volatile
  4596  00167A                     
  4597                           ;teclado.c: 13:     if(PORTB != 0xF0){
  4598  00167A  0EF0               	movlw	240
  4599  00167C  1881               	xorwf	129,w,c	;volatile
  4600  00167E  B4D8               	btfsc	status,2,c
  4601  001680  EF44  F00B         	goto	u2701
  4602  001684  EF46  F00B         	goto	u2700
  4603  001688                     u2701:
  4604  001688  EF1E  F00C         	goto	l3149
  4605  00168C                     u2700:
  4606  00168C                     
  4607                           ;teclado.c: 14:         PORTB=0xFE;
  4608  00168C  0EFE               	movlw	254
  4609  00168E  6E81               	movwf	129,c	;volatile
  4610  001690                     
  4611                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  4612  001690  B881               	btfsc	129,4,c	;volatile
  4613  001692  EF4D  F00B         	goto	u2711
  4614  001696  EF4F  F00B         	goto	u2710
  4615  00169A                     u2711:
  4616  00169A  EF55  F00B         	goto	l3083
  4617  00169E                     u2710:
  4618  00169E  C004  FFD9         	movff	teclado@valor,fsr2l
  4619  0016A2  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4620  0016A6  0E2A               	movlw	42
  4621  0016A8  6EDF               	movwf	indf2,c
  4622  0016AA                     l3083:
  4623                           
  4624                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  4625  0016AA  BA81               	btfsc	129,5,c	;volatile
  4626  0016AC  EF5A  F00B         	goto	u2721
  4627  0016B0  EF5C  F00B         	goto	u2720
  4628  0016B4                     u2721:
  4629  0016B4  EF62  F00B         	goto	l3087
  4630  0016B8                     u2720:
  4631  0016B8  C004  FFD9         	movff	teclado@valor,fsr2l
  4632  0016BC  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4633  0016C0  0E30               	movlw	48
  4634  0016C2  6EDF               	movwf	indf2,c
  4635  0016C4                     l3087:
  4636                           
  4637                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  4638  0016C4  BC81               	btfsc	129,6,c	;volatile
  4639  0016C6  EF67  F00B         	goto	u2731
  4640  0016CA  EF69  F00B         	goto	u2730
  4641  0016CE                     u2731:
  4642  0016CE  EF6F  F00B         	goto	l3091
  4643  0016D2                     u2730:
  4644  0016D2  C004  FFD9         	movff	teclado@valor,fsr2l
  4645  0016D6  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4646  0016DA  0E23               	movlw	35
  4647  0016DC  6EDF               	movwf	indf2,c
  4648  0016DE                     l3091:
  4649                           
  4650                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  4651  0016DE  BE81               	btfsc	129,7,c	;volatile
  4652  0016E0  EF74  F00B         	goto	u2741
  4653  0016E4  EF76  F00B         	goto	u2740
  4654  0016E8                     u2741:
  4655  0016E8  EF7C  F00B         	goto	l3095
  4656  0016EC                     u2740:
  4657  0016EC  C004  FFD9         	movff	teclado@valor,fsr2l
  4658  0016F0  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4659  0016F4  0E44               	movlw	68
  4660  0016F6  6EDF               	movwf	indf2,c
  4661  0016F8                     l3095:
  4662                           
  4663                           ;teclado.c: 19:         PORTB=0xFD;
  4664  0016F8  0EFD               	movlw	253
  4665  0016FA  6E81               	movwf	129,c	;volatile
  4666  0016FC                     
  4667                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  4668  0016FC  B881               	btfsc	129,4,c	;volatile
  4669  0016FE  EF83  F00B         	goto	u2751
  4670  001702  EF85  F00B         	goto	u2750
  4671  001706                     u2751:
  4672  001706  EF8B  F00B         	goto	l3101
  4673  00170A                     u2750:
  4674  00170A  C004  FFD9         	movff	teclado@valor,fsr2l
  4675  00170E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4676  001712  0E37               	movlw	55
  4677  001714  6EDF               	movwf	indf2,c
  4678  001716                     l3101:
  4679                           
  4680                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  4681  001716  BA81               	btfsc	129,5,c	;volatile
  4682  001718  EF90  F00B         	goto	u2761
  4683  00171C  EF92  F00B         	goto	u2760
  4684  001720                     u2761:
  4685  001720  EF98  F00B         	goto	l3105
  4686  001724                     u2760:
  4687  001724  C004  FFD9         	movff	teclado@valor,fsr2l
  4688  001728  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4689  00172C  0E38               	movlw	56
  4690  00172E  6EDF               	movwf	indf2,c
  4691  001730                     l3105:
  4692                           
  4693                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  4694  001730  BC81               	btfsc	129,6,c	;volatile
  4695  001732  EF9D  F00B         	goto	u2771
  4696  001736  EF9F  F00B         	goto	u2770
  4697  00173A                     u2771:
  4698  00173A  EFA5  F00B         	goto	l3109
  4699  00173E                     u2770:
  4700  00173E  C004  FFD9         	movff	teclado@valor,fsr2l
  4701  001742  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4702  001746  0E39               	movlw	57
  4703  001748  6EDF               	movwf	indf2,c
  4704  00174A                     l3109:
  4705                           
  4706                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  4707  00174A  BE81               	btfsc	129,7,c	;volatile
  4708  00174C  EFAA  F00B         	goto	u2781
  4709  001750  EFAC  F00B         	goto	u2780
  4710  001754                     u2781:
  4711  001754  EFB2  F00B         	goto	l3113
  4712  001758                     u2780:
  4713  001758  C004  FFD9         	movff	teclado@valor,fsr2l
  4714  00175C  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4715  001760  0E43               	movlw	67
  4716  001762  6EDF               	movwf	indf2,c
  4717  001764                     l3113:
  4718                           
  4719                           ;teclado.c: 24:         PORTB=0xFB;
  4720  001764  0EFB               	movlw	251
  4721  001766  6E81               	movwf	129,c	;volatile
  4722  001768                     
  4723                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  4724  001768  B881               	btfsc	129,4,c	;volatile
  4725  00176A  EFB9  F00B         	goto	u2791
  4726  00176E  EFBB  F00B         	goto	u2790
  4727  001772                     u2791:
  4728  001772  EFC1  F00B         	goto	l3119
  4729  001776                     u2790:
  4730  001776  C004  FFD9         	movff	teclado@valor,fsr2l
  4731  00177A  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4732  00177E  0E34               	movlw	52
  4733  001780  6EDF               	movwf	indf2,c
  4734  001782                     l3119:
  4735                           
  4736                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  4737  001782  BA81               	btfsc	129,5,c	;volatile
  4738  001784  EFC6  F00B         	goto	u2801
  4739  001788  EFC8  F00B         	goto	u2800
  4740  00178C                     u2801:
  4741  00178C  EFCE  F00B         	goto	l3123
  4742  001790                     u2800:
  4743  001790  C004  FFD9         	movff	teclado@valor,fsr2l
  4744  001794  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4745  001798  0E35               	movlw	53
  4746  00179A  6EDF               	movwf	indf2,c
  4747  00179C                     l3123:
  4748                           
  4749                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  4750  00179C  BC81               	btfsc	129,6,c	;volatile
  4751  00179E  EFD3  F00B         	goto	u2811
  4752  0017A2  EFD5  F00B         	goto	u2810
  4753  0017A6                     u2811:
  4754  0017A6  EFDB  F00B         	goto	l3127
  4755  0017AA                     u2810:
  4756  0017AA  C004  FFD9         	movff	teclado@valor,fsr2l
  4757  0017AE  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4758  0017B2  0E36               	movlw	54
  4759  0017B4  6EDF               	movwf	indf2,c
  4760  0017B6                     l3127:
  4761                           
  4762                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  4763  0017B6  BE81               	btfsc	129,7,c	;volatile
  4764  0017B8  EFE0  F00B         	goto	u2821
  4765  0017BC  EFE2  F00B         	goto	u2820
  4766  0017C0                     u2821:
  4767  0017C0  EFE8  F00B         	goto	l3131
  4768  0017C4                     u2820:
  4769  0017C4  C004  FFD9         	movff	teclado@valor,fsr2l
  4770  0017C8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4771  0017CC  0E42               	movlw	66
  4772  0017CE  6EDF               	movwf	indf2,c
  4773  0017D0                     l3131:
  4774                           
  4775                           ;teclado.c: 29:         PORTB=0xF7;
  4776  0017D0  0EF7               	movlw	247
  4777  0017D2  6E81               	movwf	129,c	;volatile
  4778  0017D4                     
  4779                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  4780  0017D4  B881               	btfsc	129,4,c	;volatile
  4781  0017D6  EFEF  F00B         	goto	u2831
  4782  0017DA  EFF1  F00B         	goto	u2830
  4783  0017DE                     u2831:
  4784  0017DE  EFF7  F00B         	goto	l3137
  4785  0017E2                     u2830:
  4786  0017E2  C004  FFD9         	movff	teclado@valor,fsr2l
  4787  0017E6  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4788  0017EA  0E31               	movlw	49
  4789  0017EC  6EDF               	movwf	indf2,c
  4790  0017EE                     l3137:
  4791                           
  4792                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  4793  0017EE  BA81               	btfsc	129,5,c	;volatile
  4794  0017F0  EFFC  F00B         	goto	u2841
  4795  0017F4  EFFE  F00B         	goto	u2840
  4796  0017F8                     u2841:
  4797  0017F8  EF04  F00C         	goto	l3141
  4798  0017FC                     u2840:
  4799  0017FC  C004  FFD9         	movff	teclado@valor,fsr2l
  4800  001800  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4801  001804  0E32               	movlw	50
  4802  001806  6EDF               	movwf	indf2,c
  4803  001808                     l3141:
  4804                           
  4805                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  4806  001808  BC81               	btfsc	129,6,c	;volatile
  4807  00180A  EF09  F00C         	goto	u2851
  4808  00180E  EF0B  F00C         	goto	u2850
  4809  001812                     u2851:
  4810  001812  EF11  F00C         	goto	l3145
  4811  001816                     u2850:
  4812  001816  C004  FFD9         	movff	teclado@valor,fsr2l
  4813  00181A  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4814  00181E  0E33               	movlw	51
  4815  001820  6EDF               	movwf	indf2,c
  4816  001822                     l3145:
  4817                           
  4818                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  4819  001822  BE81               	btfsc	129,7,c	;volatile
  4820  001824  EF16  F00C         	goto	u2861
  4821  001828  EF18  F00C         	goto	u2860
  4822  00182C                     u2861:
  4823  00182C  EF1E  F00C         	goto	l3149
  4824  001830                     u2860:
  4825  001830  C004  FFD9         	movff	teclado@valor,fsr2l
  4826  001834  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4827  001838  0E41               	movlw	65
  4828  00183A  6EDF               	movwf	indf2,c
  4829  00183C                     l3149:
  4830                           
  4831                           ;teclado.c: 35:     PORTB = 0xF0;
  4832  00183C  0EF0               	movlw	240
  4833  00183E  6E81               	movwf	129,c	;volatile
  4834  001840                     l3151:
  4835  001840  0EF0               	movlw	240
  4836  001842  1881               	xorwf	129,w,c	;volatile
  4837  001844  A4D8               	btfss	status,2,c
  4838  001846  EF27  F00C         	goto	u2871
  4839  00184A  EF29  F00C         	goto	u2870
  4840  00184E                     u2871:
  4841  00184E  EF20  F00C         	goto	l3151
  4842  001852                     u2870:
  4843  001852  0012               	return		;funcret
  4844  001854                     __end_of_teclado:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function _sprintf *****************
  4848 ;; Defined at:
  4849 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  s               2   18[BANK0 ] PTR unsigned char 
  4852 ;;		 -> appElemts@dataout(6), datos(25), 
  4853 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  4854 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  f               6   30[BANK0 ] struct _IO_FILE
  4857 ;;  ap              2   28[BANK0 ] PTR void [1]
  4858 ;;		 -> ?_sprintf(2), 
  4859 ;;  ret             2    0        int 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  2   18[BANK0 ] int 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4869 ;;      Params:         0       8       0       0       0       0       0       0       0
  4870 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4872 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4873 ;;Total ram usage:       18 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    9
  4876 ;; This function calls:
  4877 ;;		_vfprintf
  4878 ;; This function is called by:
  4879 ;;		_appADC
  4880 ;;		_appBat
  4881 ;;		_appElemts
  4882 ;;		_appSubGetData
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text27
  4887  002D9A                     __ptext27:
  4888                           	callstack 0
  4889  002D9A                     _sprintf:
  4890                           	callstack 19
  4891  002D9A  0E76               	movlw	low (?_sprintf+4)
  4892  002D9C  0100               	movlb	0	; () banked
  4893  002D9E  6F7C               	movwf	sprintf@ap& (0+255),b
  4894  002DA0  0E00               	movlw	high (?_sprintf+4)
  4895  002DA2  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  4896  002DA4  C072  F07E         	movff	sprintf@s,sprintf@f
  4897  002DA8  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  4898  002DAC                     
  4899                           ; BSR set to: 0
  4900  002DAC  0E00               	movlw	0
  4901  002DAE  6F81               	movwf	(sprintf@f+3)& (0+255),b
  4902  002DB0  0E00               	movlw	0
  4903  002DB2  6F80               	movwf	(sprintf@f+2)& (0+255),b
  4904  002DB4                     
  4905                           ; BSR set to: 0
  4906  002DB4  0E00               	movlw	0
  4907  002DB6  6F83               	movwf	(sprintf@f+5)& (0+255),b
  4908  002DB8  0E00               	movlw	0
  4909  002DBA  6F82               	movwf	(sprintf@f+4)& (0+255),b
  4910  002DBC                     
  4911                           ; BSR set to: 0
  4912  002DBC  0E7E               	movlw	low sprintf@f
  4913  002DBE  6F6C               	movwf	vfprintf@fp& (0+255),b
  4914  002DC0  0E00               	movlw	high sprintf@f
  4915  002DC2  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  4916  002DC4  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  4917  002DC8  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4918  002DCC  0E7C               	movlw	low sprintf@ap
  4919  002DCE  6F70               	movwf	vfprintf@ap& (0+255),b
  4920  002DD0  0E00               	movlw	high sprintf@ap
  4921  002DD2  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  4922  002DD4  EC9C  F016         	call	_vfprintf	;wreg free
  4923  002DD8  0100               	movlb	0	; () banked
  4924  002DDA  5180               	movf	(sprintf@f+2)& (0+255),w,b
  4925  002DDC  2572               	addwf	sprintf@s& (0+255),w,b
  4926  002DDE  6ED9               	movwf	fsr2l,c
  4927  002DE0  5181               	movf	(sprintf@f+3)& (0+255),w,b
  4928  002DE2  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  4929  002DE4  6EDA               	movwf	fsr2h,c
  4930  002DE6  0E00               	movlw	0
  4931  002DE8  6EDF               	movwf	indf2,c
  4932  002DEA                     
  4933                           ; BSR set to: 0
  4934  002DEA  0012               	return		;funcret
  4935  002DEC                     __end_of_sprintf:
  4936                           	callstack 0
  4937                           
  4938 ;; *************** function _vfprintf *****************
  4939 ;; Defined at:
  4940 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  4943 ;;		 -> sprintf@f(6), 
  4944 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  4945 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4946 ;;  ap              2   16[BANK0 ] PTR PTR void 
  4947 ;;		 -> sprintf@ap(2), 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  4950 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  2   12[BANK0 ] int 
  4953 ;; Registers used:
  4954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4960 ;;      Params:         0       6       0       0       0       0       0       0       0
  4961 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4963 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4964 ;;Total ram usage:        8 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    8
  4967 ;; This function calls:
  4968 ;;		_vfpfcnvrt
  4969 ;; This function is called by:
  4970 ;;		_sprintf
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text28
  4975  002D38                     __ptext28:
  4976                           	callstack 0
  4977  002D38                     _vfprintf:
  4978                           	callstack 19
  4979  002D38                     
  4980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4981  002D38  C06E  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  4982  002D3C  C06F  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4983  002D40                     
  4984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4985  002D40  0E00               	movlw	0
  4986  002D42  0100               	movlb	0	; () banked
  4987  002D44  6F95               	movwf	(_nout+1)& (0+255),b
  4988  002D46  0E00               	movlw	0
  4989  002D48  6F94               	movwf	_nout& (0+255),b
  4990                           
  4991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4992  002D4A  EFBA  F016         	goto	l4289
  4993  002D4E                     l4287:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4997  002D4E  C06C  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4998  002D52  C06D  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4999  002D56  0E4D               	movlw	low vfprintf@cfmt
  5000  002D58  6E45               	movwf	vfpfcnvrt@fmt^0,c
  5001  002D5A  0E00               	movlw	high vfprintf@cfmt
  5002  002D5C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5003  002D5E  C070  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  5004  002D62  C071  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5005  002D66  EC10  F008         	call	_vfpfcnvrt	;wreg free
  5006  002D6A  5043               	movf	?_vfpfcnvrt^0,w,c
  5007  002D6C  0100               	movlb	0	; () banked
  5008  002D6E  2794               	addwf	_nout& (0+255),f,b
  5009  002D70  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  5010  002D72  2395               	addwfc	(_nout+1)& (0+255),f,b
  5011  002D74                     l4289:
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5015  002D74  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  5016  002D78  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5017  002D7C                     	if	0	;tblptru may be non-zero
  5018  002D7C                     	endif
  5019  002D7C                     	if	0	;tblptru may be non-zero
  5020  002D7C                     	endif
  5021  002D7C  0008               	tblrd		*
  5022  002D7E  50F5               	movf	tablat,w,c
  5023  002D80  0900               	iorlw	0
  5024  002D82  A4D8               	btfss	status,2,c
  5025  002D84  EFC6  F016         	goto	u4341
  5026  002D88  EFC8  F016         	goto	u4340
  5027  002D8C                     u4341:
  5028  002D8C  EFA7  F016         	goto	l4287
  5029  002D90                     u4340:
  5030  002D90                     
  5031                           ; BSR set to: 0
  5032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5033  002D90  C094  F06C         	movff	_nout,?_vfprintf
  5034  002D94  C095  F06D         	movff	_nout+1,?_vfprintf+1
  5035  002D98                     
  5036                           ; BSR set to: 0
  5037  002D98  0012               	return		;funcret
  5038  002D9A                     __end_of_vfprintf:
  5039                           	callstack 0
  5040                           
  5041 ;; *************** function _vfpfcnvrt *****************
  5042 ;; Defined at:
  5043 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  5046 ;;		 -> sprintf@f(6), 
  5047 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  5048 ;;		 -> vfprintf@cfmt(2), 
  5049 ;;  ap              2   70[COMRAM] PTR PTR void 
  5050 ;;		 -> sprintf@ap(2), 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  ll              8    0[BANK0 ] long long 
  5053 ;;  llu             8    0        unsigned long long 
  5054 ;;  f               4    0        unsigned long long 
  5055 ;;  vp              3    0        PTR void 
  5056 ;;  ct              3    0        unsigned char [3]
  5057 ;;  cp              3    0        PTR unsigned char 
  5058 ;;  done            2    8[BANK0 ] int 
  5059 ;;  i               2    0        int 
  5060 ;;  c               1    0        unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  2   66[COMRAM] int 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5070 ;;      Params:         6       0       0       0       0       0       0       0       0
  5071 ;;      Locals:         0      12       0       0       0       0       0       0       0
  5072 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5073 ;;      Totals:        10      12       0       0       0       0       0       0       0
  5074 ;;Total ram usage:       22 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    7
  5077 ;; This function calls:
  5078 ;;		_atoi
  5079 ;;		_dtoa
  5080 ;;		_fputc
  5081 ;;		_isdigit
  5082 ;; This function is called by:
  5083 ;;		_vfprintf
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text29
  5088  001020                     __ptext29:
  5089                           	callstack 0
  5090  001020                     _vfpfcnvrt:
  5091                           	callstack 19
  5092  001020                     
  5093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5094  001020  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5095  001024  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5096  001028  CFDE FFF6          	movff	postinc2,tblptrl
  5097  00102C  CFDD FFF7          	movff	postdec2,tblptrh
  5098  001030                     	if	0	;tblptru may be non-zero
  5099  001030                     	endif
  5100  001030                     	if	0	;tblptru may be non-zero
  5101  001030                     	endif
  5102  001030  0008               	tblrd		*
  5103  001032  50F5               	movf	tablat,w,c
  5104  001034  0A25               	xorlw	37
  5105  001036  A4D8               	btfss	status,2,c
  5106  001038  EF20  F008         	goto	u4231
  5107  00103C  EF22  F008         	goto	u4230
  5108  001040                     u4231:
  5109  001040  EFAA  F009         	goto	l4265
  5110  001044                     u4230:
  5111  001044                     
  5112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5113  001044  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5114  001048  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5115  00104C  2ADE               	incf	postinc2,f,c
  5116  00104E  0E00               	movlw	0
  5117  001050  22DD               	addwfc	postdec2,f,c
  5118  001052                     
  5119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5120  001052  0E00               	movlw	0
  5121  001054  0100               	movlb	0	; () banked
  5122  001056  6F97               	movwf	(_width+1)& (0+255),b
  5123  001058  0E00               	movlw	0
  5124  00105A  6F96               	movwf	_width& (0+255),b
  5125  00105C  C096  F05A         	movff	_width,_flags
  5126  001060  C097  F05B         	movff	_width+1,_flags+1
  5127  001064                     
  5128                           ; BSR set to: 0
  5129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5130  001064  6858               	setf	_prec^0,c
  5131  001066  6859               	setf	(_prec+1)^0,c
  5132  001068                     
  5133                           ; BSR set to: 0
  5134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  5135  001068  0E00               	movlw	0
  5136  00106A  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5137  00106C  0E00               	movlw	0
  5138  00106E  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  5139                           
  5140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5141  001070  EF80  F008         	goto	l4217
  5142  001074                     l4191:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  5146  001074  805A               	bsf	_flags^0,0,c
  5147  001076                     l4193:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  5151  001076  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5152  00107A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5153  00107E  2ADE               	incf	postinc2,f,c
  5154  001080  0E00               	movlw	0
  5155  001082  22DD               	addwfc	postdec2,f,c
  5156                           
  5157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  5158  001084  EF80  F008         	goto	l4217
  5159  001088                     l4195:
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  5163  001088  825A               	bsf	_flags^0,1,c
  5164  00108A  EF3B  F008         	goto	l4193
  5165  00108E                     l4199:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  5169  00108E  845A               	bsf	_flags^0,2,c
  5170  001090  EF3B  F008         	goto	l4193
  5171  001094                     l4203:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  5175  001094  865A               	bsf	_flags^0,3,c
  5176  001096  EF3B  F008         	goto	l4193
  5177  00109A                     l4207:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  5181  00109A  885A               	bsf	_flags^0,4,c
  5182  00109C  EF3B  F008         	goto	l4193
  5183  0010A0                     l4211:
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  5187  0010A0  0E00               	movlw	0
  5188  0010A2  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5189  0010A4  0E01               	movlw	1
  5190  0010A6  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  5191                           
  5192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  5193  0010A8  EF80  F008         	goto	l4217
  5194  0010AC                     l4215:
  5195                           
  5196                           ; BSR set to: 0
  5197  0010AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5198  0010B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5199  0010B4  CFDE FFF6          	movff	postinc2,tblptrl
  5200  0010B8  CFDD FFF7          	movff	postdec2,tblptrh
  5201  0010BC                     	if	0	;tblptru may be non-zero
  5202  0010BC                     	endif
  5203  0010BC                     	if	0	;tblptru may be non-zero
  5204  0010BC                     	endif
  5205  0010BC  0008               	tblrd		*
  5206  0010BE  50F5               	movf	tablat,w,c
  5207  0010C0  6E49               	movwf	??_vfpfcnvrt^0,c
  5208  0010C2  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  5209                           
  5210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5211                           ; Switch size 1, requested type "simple"
  5212                           ; Number of cases is 1, Range of values is 0 to 0
  5213                           ; switch strategies available:
  5214                           ; Name         Instructions Cycles
  5215                           ; simple_byte            4     3 (average)
  5216                           ;	Chosen strategy is simple_byte
  5217  0010C4  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  5218  0010C6  0A00               	xorlw	0	; case 0
  5219  0010C8  B4D8               	btfsc	status,2,c
  5220  0010CA  EF69  F008         	goto	l4509
  5221  0010CE  EF50  F008         	goto	l4211
  5222  0010D2                     l4509:
  5223                           
  5224                           ; BSR set to: 0
  5225                           ; Switch size 1, requested type "simple"
  5226                           ; Number of cases is 5, Range of values is 32 to 48
  5227                           ; switch strategies available:
  5228                           ; Name         Instructions Cycles
  5229                           ; simple_byte           16     9 (average)
  5230                           ;	Chosen strategy is simple_byte
  5231  0010D2  5049               	movf	??_vfpfcnvrt^0,w,c
  5232  0010D4  0A20               	xorlw	32	; case 32
  5233  0010D6  B4D8               	btfsc	status,2,c
  5234  0010D8  EF4A  F008         	goto	l4203
  5235  0010DC  0A03               	xorlw	3	; case 35
  5236  0010DE  B4D8               	btfsc	status,2,c
  5237  0010E0  EF4D  F008         	goto	l4207
  5238  0010E4  0A08               	xorlw	8	; case 43
  5239  0010E6  B4D8               	btfsc	status,2,c
  5240  0010E8  EF47  F008         	goto	l4199
  5241  0010EC  0A06               	xorlw	6	; case 45
  5242  0010EE  B4D8               	btfsc	status,2,c
  5243  0010F0  EF3A  F008         	goto	l4191
  5244  0010F4  0A1D               	xorlw	29	; case 48
  5245  0010F6  B4D8               	btfsc	status,2,c
  5246  0010F8  EF44  F008         	goto	l4195
  5247  0010FC  EF50  F008         	goto	l4211
  5248  001100                     l4217:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5252  001100  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  5253  001102  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5254  001104  B4D8               	btfsc	status,2,c
  5255  001106  EF87  F008         	goto	u4241
  5256  00110A  EF89  F008         	goto	u4240
  5257  00110E                     u4241:
  5258  00110E  EF56  F008         	goto	l4215
  5259  001112                     u4240:
  5260  001112                     
  5261                           ; BSR set to: 0
  5262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  5263  001112  A05A               	btfss	_flags^0,0,c
  5264  001114  EF8E  F008         	goto	u4251
  5265  001118  EF90  F008         	goto	u4250
  5266  00111C                     u4251:
  5267  00111C  EF91  F008         	goto	l4221
  5268  001120                     u4250:
  5269  001120                     
  5270                           ; BSR set to: 0
  5271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  5272  001120  925A               	bcf	_flags^0,1,c
  5273  001122                     l4221:
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  5277  001122  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5278  001126  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5279  00112A  CFDE FFF6          	movff	postinc2,tblptrl
  5280  00112E  CFDD FFF7          	movff	postdec2,tblptrh
  5281  001132                     	if	0	;tblptru may be non-zero
  5282  001132                     	endif
  5283  001132                     	if	0	;tblptru may be non-zero
  5284  001132                     	endif
  5285  001132  0008               	tblrd		*
  5286  001134  50F5               	movf	tablat,w,c
  5287  001136  0A2A               	xorlw	42
  5288  001138  A4D8               	btfss	status,2,c
  5289  00113A  EFA1  F008         	goto	u4261
  5290  00113E  EFA3  F008         	goto	u4260
  5291  001142                     u4261:
  5292  001142  EFCC  F008         	goto	l4229
  5293  001146                     u4260:
  5294  001146                     
  5295                           ; BSR set to: 0
  5296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  5297  001146  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5298  00114A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5299  00114E  2ADE               	incf	postinc2,f,c
  5300  001150  0E00               	movlw	0
  5301  001152  22DD               	addwfc	postdec2,f,c
  5302                           
  5303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5304  001154  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5305  001158  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5306  00115C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5307  001160  0E02               	movlw	2
  5308  001162  26DE               	addwf	postinc2,f,c
  5309  001164  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5310  001168  0E00               	movlw	0
  5311  00116A  22DD               	addwfc	postdec2,f,c
  5312  00116C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5313  001170  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5314  001174  CFDE F096          	movff	postinc2,_width
  5315  001178  CFDD F097          	movff	postdec2,_width+1
  5316  00117C                     
  5317                           ; BSR set to: 0
  5318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  5319  00117C  BF97               	btfsc	(_width+1)& (0+255),7,b
  5320  00117E  EFC5  F008         	goto	u4270
  5321  001182  EFC3  F008         	goto	u4271
  5322  001186                     u4271:
  5323  001186  EF10  F009         	goto	l4239
  5324  00118A                     u4270:
  5325  00118A                     
  5326                           ; BSR set to: 0
  5327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  5328  00118A  805A               	bsf	_flags^0,0,c
  5329                           
  5330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  5331  00118C  6D96               	negf	_width& (0+255),b
  5332  00118E  1F97               	comf	(_width+1)& (0+255),f,b
  5333  001190  B0D8               	btfsc	status,0,c
  5334  001192  2B97               	incf	(_width+1)& (0+255),f,b
  5335  001194  EF10  F009         	goto	l4239
  5336  001198                     l4229:
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  5340  001198  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5341  00119C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5342  0011A0  CFDE F00B          	movff	postinc2,atoi@s
  5343  0011A4  CFDD F00C          	movff	postdec2,atoi@s+1
  5344  0011A8  ECCE  F00E         	call	_atoi	;wreg free
  5345  0011AC  C00B  F096         	movff	?_atoi,_width
  5346  0011B0  C00C  F097         	movff	?_atoi+1,_width+1
  5347                           
  5348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5349  0011B4  EFE3  F008         	goto	l4233
  5350  0011B8                     l4231:
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  5354  0011B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5355  0011BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5356  0011C0  2ADE               	incf	postinc2,f,c
  5357  0011C2  0E00               	movlw	0
  5358  0011C4  22DD               	addwfc	postdec2,f,c
  5359  0011C6                     l4233:
  5360  0011C6  0ED0               	movlw	208
  5361  0011C8  6E49               	movwf	??_vfpfcnvrt^0,c
  5362  0011CA  0EFF               	movlw	255
  5363  0011CC  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  5364  0011CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5365  0011D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5366  0011D6  CFDE FFF6          	movff	postinc2,tblptrl
  5367  0011DA  CFDD FFF7          	movff	postdec2,tblptrh
  5368  0011DE                     	if	0	;tblptru may be non-zero
  5369  0011DE                     	endif
  5370  0011DE                     	if	0	;tblptru may be non-zero
  5371  0011DE                     	endif
  5372  0011DE  0008               	tblrd		*
  5373  0011E0  50F5               	movf	tablat,w,c
  5374  0011E2  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5375  0011E4  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  5376  0011E6  5049               	movf	??_vfpfcnvrt^0,w,c
  5377  0011E8  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5378  0011EA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  5379  0011EC  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5380  0011EE  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  5381  0011F0  E10A               	bnz	u4280
  5382  0011F2  0E0A               	movlw	10
  5383  0011F4  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5384  0011F6  A0D8               	btfss	status,0,c
  5385  0011F8  EF00  F009         	goto	u4281
  5386  0011FC  EF03  F009         	goto	u4280
  5387  001200                     u4281:
  5388  001200  0E01               	movlw	1
  5389  001202  EF04  F009         	goto	u4290
  5390  001206                     u4280:
  5391  001206  0E00               	movlw	0
  5392  001208                     u4290:
  5393  001208  0100               	movlb	0	; () banked
  5394  00120A  6F6A               	movwf	_vfpfcnvrt$1940& (0+255),b
  5395  00120C  6B6B               	clrf	(_vfpfcnvrt$1940+1)& (0+255),b
  5396  00120E                     
  5397                           ; BSR set to: 0
  5398  00120E  516A               	movf	_vfpfcnvrt$1940& (0+255),w,b
  5399  001210  116B               	iorwf	(_vfpfcnvrt$1940+1)& (0+255),w,b
  5400  001212  A4D8               	btfss	status,2,c
  5401  001214  EF0E  F009         	goto	u4301
  5402  001218  EF10  F009         	goto	u4300
  5403  00121C                     u4301:
  5404  00121C  EFDC  F008         	goto	l4231
  5405  001220                     u4300:
  5406  001220                     l4239:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5410  001220  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5411  001224  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5412  001228  CFDE FFF6          	movff	postinc2,tblptrl
  5413  00122C  CFDD FFF7          	movff	postdec2,tblptrh
  5414  001230                     	if	0	;tblptru may be non-zero
  5415  001230                     	endif
  5416  001230                     	if	0	;tblptru may be non-zero
  5417  001230                     	endif
  5418  001230  0008               	tblrd		*
  5419  001232  50F5               	movf	tablat,w,c
  5420  001234  0A64               	xorlw	100
  5421  001236  B4D8               	btfsc	status,2,c
  5422  001238  EF20  F009         	goto	u4311
  5423  00123C  EF22  F009         	goto	u4310
  5424  001240                     u4311:
  5425  001240  EF34  F009         	goto	l4243
  5426  001244                     u4310:
  5427  001244                     
  5428                           ; BSR set to: 0
  5429  001244  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5430  001248  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5431  00124C  CFDE FFF6          	movff	postinc2,tblptrl
  5432  001250  CFDD FFF7          	movff	postdec2,tblptrh
  5433  001254                     	if	0	;tblptru may be non-zero
  5434  001254                     	endif
  5435  001254                     	if	0	;tblptru may be non-zero
  5436  001254                     	endif
  5437  001254  0008               	tblrd		*
  5438  001256  50F5               	movf	tablat,w,c
  5439  001258  0A69               	xorlw	105
  5440  00125A  A4D8               	btfss	status,2,c
  5441  00125C  EF32  F009         	goto	u4321
  5442  001260  EF34  F009         	goto	u4320
  5443  001264                     u4321:
  5444  001264  EF74  F009         	goto	l4249
  5445  001268                     u4320:
  5446  001268                     l4243:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5450  001268  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5451  00126C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5452  001270  2ADE               	incf	postinc2,f,c
  5453  001272  0E00               	movlw	0
  5454  001274  22DD               	addwfc	postdec2,f,c
  5455                           
  5456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5457  001276  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5458  00127A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5459  00127E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5460  001282  0E02               	movlw	2
  5461  001284  26DE               	addwf	postinc2,f,c
  5462  001286  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5463  00128A  0E00               	movlw	0
  5464  00128C  22DD               	addwfc	postdec2,f,c
  5465  00128E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5466  001292  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5467  001296  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  5468  00129A  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  5469  00129E  0E00               	movlw	0
  5470  0012A0  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5471  0012A2  0EFF               	movlw	-1
  5472  0012A4  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5473  0012A6  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5474  0012A8  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5475  0012AA  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5476  0012AC  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5477  0012AE  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5478  0012B0                     
  5479                           ; BSR set to: 0
  5480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5481  0012B0  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  5482  0012B4  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5483  0012B8  C060  F021         	movff	vfpfcnvrt@ll,dtoa@d
  5484  0012BC  C061  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5485  0012C0  C062  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5486  0012C4  C063  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5487  0012C8  C064  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5488  0012CC  C065  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5489  0012D0  C066  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5490  0012D4  C067  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5491  0012D8  ECC6  F009         	call	_dtoa	;wreg free
  5492  0012DC  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  5493  0012E0  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5494  0012E4  EFC5  F009         	goto	l1111
  5495  0012E8                     l4249:
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5499  0012E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5500  0012EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5501  0012F0  CFDE FFF6          	movff	postinc2,tblptrl
  5502  0012F4  CFDD FFF7          	movff	postdec2,tblptrh
  5503  0012F8                     	if	0	;tblptru may be non-zero
  5504  0012F8                     	endif
  5505  0012F8                     	if	0	;tblptru may be non-zero
  5506  0012F8                     	endif
  5507  0012F8  0008               	tblrd		*
  5508  0012FA  50F5               	movf	tablat,w,c
  5509  0012FC  0A25               	xorlw	37
  5510  0012FE  A4D8               	btfss	status,2,c
  5511  001300  EF84  F009         	goto	u4331
  5512  001304  EF86  F009         	goto	u4330
  5513  001308                     u4331:
  5514  001308  EF9D  F009         	goto	l4259
  5515  00130C                     u4330:
  5516  00130C                     
  5517                           ; BSR set to: 0
  5518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5519  00130C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5520  001310  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5521  001314  2ADE               	incf	postinc2,f,c
  5522  001316  0E00               	movlw	0
  5523  001318  22DD               	addwfc	postdec2,f,c
  5524  00131A                     
  5525                           ; BSR set to: 0
  5526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5527  00131A  0E00               	movlw	0
  5528  00131C  6E05               	movwf	(fputc@c+1)^0,c
  5529  00131E  0E25               	movlw	37
  5530  001320  6E04               	movwf	fputc@c^0,c
  5531  001322  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5532  001326  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5533  00132A  EC6B  F014         	call	_fputc	;wreg free
  5534  00132E                     l4255:
  5535                           
  5536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5537  00132E  0E00               	movlw	0
  5538  001330  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5539  001332  0E01               	movlw	1
  5540  001334  6E43               	movwf	?_vfpfcnvrt^0,c
  5541  001336  EFC5  F009         	goto	l1111
  5542  00133A                     l4259:
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5546  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5547  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5548  001342  2ADE               	incf	postinc2,f,c
  5549  001344  0E00               	movlw	0
  5550  001346  22DD               	addwfc	postdec2,f,c
  5551  001348                     
  5552                           ; BSR set to: 0
  5553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5554  001348  0E00               	movlw	0
  5555  00134A  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5556  00134C  0E00               	movlw	0
  5557  00134E  6E43               	movwf	?_vfpfcnvrt^0,c
  5558  001350  EFC5  F009         	goto	l1111
  5559  001354                     l4265:
  5560                           
  5561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5562  001354  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5563  001358  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5564  00135C  CFDE FFF6          	movff	postinc2,tblptrl
  5565  001360  CFDD FFF7          	movff	postdec2,tblptrh
  5566  001364                     	if	0	;tblptru may be non-zero
  5567  001364                     	endif
  5568  001364                     	if	0	;tblptru may be non-zero
  5569  001364                     	endif
  5570  001364  0008               	tblrd		*
  5571  001366  50F5               	movf	tablat,w,c
  5572  001368  6E04               	movwf	fputc@c^0,c
  5573  00136A  6A05               	clrf	(fputc@c+1)^0,c
  5574  00136C  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5575  001370  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5576  001374  EC6B  F014         	call	_fputc	;wreg free
  5577  001378                     
  5578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5579  001378  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5580  00137C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5581  001380  2ADE               	incf	postinc2,f,c
  5582  001382  0E00               	movlw	0
  5583  001384  22DD               	addwfc	postdec2,f,c
  5584  001386  EF97  F009         	goto	l4255
  5585  00138A                     l1111:
  5586  00138A  0012               	return		;funcret
  5587  00138C                     __end_of_vfpfcnvrt:
  5588                           	callstack 0
  5589                           
  5590 ;; *************** function _dtoa *****************
  5591 ;; Defined at:
  5592 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5595 ;;		 -> sprintf@f(6), 
  5596 ;;  d               8   32[COMRAM] long long 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;  n               8   56[COMRAM] long long 
  5599 ;;  i               2   64[COMRAM] int 
  5600 ;;  s               2   54[COMRAM] int 
  5601 ;;  w               2   52[COMRAM] int 
  5602 ;;  p               2   50[COMRAM] int 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  2   30[COMRAM] int 
  5605 ;; Registers used:
  5606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5612 ;;      Params:        10       0       0       0       0       0       0       0       0
  5613 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5614 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5615 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5616 ;;Total ram usage:       36 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    6
  5619 ;; This function calls:
  5620 ;;		___aodiv
  5621 ;;		___aomod
  5622 ;;		_abs
  5623 ;;		_pad
  5624 ;; This function is called by:
  5625 ;;		_vfpfcnvrt
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text30
  5630  00138C                     __ptext30:
  5631                           	callstack 0
  5632  00138C                     _dtoa:
  5633                           	callstack 19
  5634  00138C                     
  5635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5636  00138C  C021  F039         	movff	dtoa@d,dtoa@n
  5637  001390  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  5638  001394  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  5639  001398  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  5640  00139C  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  5641  0013A0  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  5642  0013A4  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  5643  0013A8  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  5644  0013AC                     
  5645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5646  0013AC  BE40               	btfsc	(dtoa@n+7)^0,7,c
  5647  0013AE  EFDB  F009         	goto	u4011
  5648  0013B2  EFDE  F009         	goto	u4010
  5649  0013B6                     u4011:
  5650  0013B6  0E01               	movlw	1
  5651  0013B8  EFDF  F009         	goto	u4020
  5652  0013BC                     u4010:
  5653  0013BC  0E00               	movlw	0
  5654  0013BE                     u4020:
  5655  0013BE  6E37               	movwf	dtoa@s^0,c
  5656  0013C0  6A38               	clrf	(dtoa@s+1)^0,c
  5657                           
  5658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5659  0013C2  5037               	movf	dtoa@s^0,w,c
  5660  0013C4  1038               	iorwf	(dtoa@s+1)^0,w,c
  5661  0013C6  B4D8               	btfsc	status,2,c
  5662  0013C8  EFE8  F009         	goto	u4031
  5663  0013CC  EFEA  F009         	goto	u4030
  5664  0013D0                     u4031:
  5665  0013D0  EFFA  F009         	goto	l4083
  5666  0013D4                     u4030:
  5667  0013D4                     
  5668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5669  0013D4  1E40               	comf	(dtoa@n+7)^0,f,c
  5670  0013D6  1E3F               	comf	(dtoa@n+6)^0,f,c
  5671  0013D8  1E3E               	comf	(dtoa@n+5)^0,f,c
  5672  0013DA  1E3D               	comf	(dtoa@n+4)^0,f,c
  5673  0013DC  1E3C               	comf	(dtoa@n+3)^0,f,c
  5674  0013DE  1E3B               	comf	(dtoa@n+2)^0,f,c
  5675  0013E0  1E3A               	comf	(dtoa@n+1)^0,f,c
  5676  0013E2  6C39               	negf	dtoa@n^0,c
  5677  0013E4  0E00               	movlw	0
  5678  0013E6  223A               	addwfc	(dtoa@n+1)^0,f,c
  5679  0013E8  223B               	addwfc	(dtoa@n+2)^0,f,c
  5680  0013EA  223C               	addwfc	(dtoa@n+3)^0,f,c
  5681  0013EC  223D               	addwfc	(dtoa@n+4)^0,f,c
  5682  0013EE  223E               	addwfc	(dtoa@n+5)^0,f,c
  5683  0013F0  223F               	addwfc	(dtoa@n+6)^0,f,c
  5684  0013F2  2240               	addwfc	(dtoa@n+7)^0,f,c
  5685  0013F4                     l4083:
  5686                           
  5687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5688  0013F4  BE59               	btfsc	(_prec+1)^0,7,c
  5689  0013F6  EFFF  F009         	goto	u4041
  5690  0013FA  EF01  F00A         	goto	u4040
  5691  0013FE                     u4041:
  5692  0013FE  EF02  F00A         	goto	l4087
  5693  001402                     u4040:
  5694  001402                     
  5695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5696  001402  925A               	bcf	_flags^0,1,c
  5697  001404                     l4087:
  5698                           
  5699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5700  001404  BE59               	btfsc	(_prec+1)^0,7,c
  5701  001406  EF0F  F00A         	goto	u4050
  5702  00140A  5059               	movf	(_prec+1)^0,w,c
  5703  00140C  E106               	bnz	u4051
  5704  00140E  0458               	decf	_prec^0,w,c
  5705  001410  B0D8               	btfsc	status,0,c
  5706  001412  EF0D  F00A         	goto	u4051
  5707  001416  EF0F  F00A         	goto	u4050
  5708  00141A                     u4051:
  5709  00141A  EF15  F00A         	goto	l1062
  5710  00141E                     u4050:
  5711  00141E  0E00               	movlw	0
  5712  001420  6E34               	movwf	(dtoa@p+1)^0,c
  5713  001422  0E01               	movlw	1
  5714  001424  6E33               	movwf	dtoa@p^0,c
  5715  001426  EF19  F00A         	goto	l1064
  5716  00142A                     l1062:
  5717  00142A  C058  F033         	movff	_prec,dtoa@p
  5718  00142E  C059  F034         	movff	_prec+1,dtoa@p+1
  5719  001432                     l1064:
  5720                           
  5721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5722  001432  C096  F035         	movff	_width,dtoa@w
  5723  001436  C097  F036         	movff	_width+1,dtoa@w+1
  5724  00143A                     
  5725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5726  00143A  5037               	movf	dtoa@s^0,w,c
  5727  00143C  1038               	iorwf	(dtoa@s+1)^0,w,c
  5728  00143E  A4D8               	btfss	status,2,c
  5729  001440  EF24  F00A         	goto	u4061
  5730  001444  EF26  F00A         	goto	u4060
  5731  001448                     u4061:
  5732  001448  EF2D  F00A         	goto	l4095
  5733  00144C                     u4060:
  5734  00144C  A45A               	btfss	_flags^0,2,c
  5735  00144E  EF2B  F00A         	goto	u4071
  5736  001452  EF2D  F00A         	goto	u4070
  5737  001456                     u4071:
  5738  001456  EF30  F00A         	goto	l4097
  5739  00145A                     u4070:
  5740  00145A                     l4095:
  5741                           
  5742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5743  00145A  0635               	decf	dtoa@w^0,f,c
  5744  00145C  A0D8               	btfss	status,0,c
  5745  00145E  0636               	decf	(dtoa@w+1)^0,f,c
  5746  001460                     l4097:
  5747                           
  5748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5749  001460  0E00               	movlw	0
  5750  001462  6E42               	movwf	(dtoa@i+1)^0,c
  5751  001464  0E1F               	movlw	31
  5752  001466  6E41               	movwf	dtoa@i^0,c
  5753  001468                     
  5754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5755  001468  0E00               	movlw	0
  5756  00146A  0100               	movlb	0	; () banked
  5757  00146C  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5758                           
  5759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5760  00146E  EFB5  F00A         	goto	l4111
  5761  001472                     l4101:
  5762                           
  5763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5764  001472  0641               	decf	dtoa@i^0,f,c
  5765  001474  A0D8               	btfss	status,0,c
  5766  001476  0642               	decf	(dtoa@i+1)^0,f,c
  5767  001478                     
  5768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5769  001478  0E98               	movlw	low _dbuf
  5770  00147A  2441               	addwf	dtoa@i^0,w,c
  5771  00147C  6ED9               	movwf	fsr2l,c
  5772  00147E  0E00               	movlw	high _dbuf
  5773  001480  2042               	addwfc	(dtoa@i+1)^0,w,c
  5774  001482  6EDA               	movwf	fsr2h,c
  5775  001484  C039  F004         	movff	dtoa@n,___aomod@dividend
  5776  001488  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  5777  00148C  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  5778  001490  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  5779  001494  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  5780  001498  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  5781  00149C  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  5782  0014A0  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  5783  0014A4  0E0A               	movlw	10
  5784  0014A6  6E0C               	movwf	___aomod@divisor^0,c
  5785  0014A8  0E00               	movlw	0
  5786  0014AA  6E0D               	movwf	(___aomod@divisor+1)^0,c
  5787  0014AC  0E00               	movlw	0
  5788  0014AE  6E0E               	movwf	(___aomod@divisor+2)^0,c
  5789  0014B0  0E00               	movlw	0
  5790  0014B2  6E0F               	movwf	(___aomod@divisor+3)^0,c
  5791  0014B4  0E00               	movlw	0
  5792  0014B6  6E10               	movwf	(___aomod@divisor+4)^0,c
  5793  0014B8  0E00               	movlw	0
  5794  0014BA  6E11               	movwf	(___aomod@divisor+5)^0,c
  5795  0014BC  0E00               	movlw	0
  5796  0014BE  6E12               	movwf	(___aomod@divisor+6)^0,c
  5797  0014C0  0E00               	movlw	0
  5798  0014C2  6E13               	movwf	(___aomod@divisor+7)^0,c
  5799  0014C4  EC15  F011         	call	___aomod	;wreg free
  5800  0014C8  C004  F029         	movff	?___aomod,??_dtoa
  5801  0014CC  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  5802  0014D0  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  5803  0014D4  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  5804  0014D8  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  5805  0014DC  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  5806  0014E0  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  5807  0014E4  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  5808  0014E8  C029  F016         	movff	??_dtoa,abs@a
  5809  0014EC  C02B  F017         	movff	??_dtoa+2,abs@a+1
  5810  0014F0  ECCE  F017         	call	_abs	;wreg free
  5811  0014F4  5016               	movf	?_abs^0,w,c
  5812  0014F6  0F30               	addlw	48
  5813  0014F8  6EDF               	movwf	indf2,c
  5814  0014FA                     
  5815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5816  0014FA  0633               	decf	dtoa@p^0,f,c
  5817  0014FC  A0D8               	btfss	status,0,c
  5818  0014FE  0634               	decf	(dtoa@p+1)^0,f,c
  5819  001500                     
  5820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5821  001500  0635               	decf	dtoa@w^0,f,c
  5822  001502  A0D8               	btfss	status,0,c
  5823  001504  0636               	decf	(dtoa@w+1)^0,f,c
  5824  001506                     
  5825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5826  001506  C039  F004         	movff	dtoa@n,___aodiv@dividend
  5827  00150A  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  5828  00150E  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  5829  001512  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  5830  001516  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  5831  00151A  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  5832  00151E  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  5833  001522  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  5834  001526  0E0A               	movlw	10
  5835  001528  6E0C               	movwf	___aodiv@divisor^0,c
  5836  00152A  0E00               	movlw	0
  5837  00152C  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  5838  00152E  0E00               	movlw	0
  5839  001530  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  5840  001532  0E00               	movlw	0
  5841  001534  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  5842  001536  0E00               	movlw	0
  5843  001538  6E10               	movwf	(___aodiv@divisor+4)^0,c
  5844  00153A  0E00               	movlw	0
  5845  00153C  6E11               	movwf	(___aodiv@divisor+5)^0,c
  5846  00153E  0E00               	movlw	0
  5847  001540  6E12               	movwf	(___aodiv@divisor+6)^0,c
  5848  001542  0E00               	movlw	0
  5849  001544  6E13               	movwf	(___aodiv@divisor+7)^0,c
  5850  001546  EC96  F00F         	call	___aodiv	;wreg free
  5851  00154A  C004  F039         	movff	?___aodiv,dtoa@n
  5852  00154E  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  5853  001552  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  5854  001556  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  5855  00155A  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  5856  00155E  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  5857  001562  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  5858  001566  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  5859  00156A                     l4111:
  5860                           
  5861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5862  00156A  BE42               	btfsc	(dtoa@i+1)^0,7,c
  5863  00156C  EFC0  F00A         	goto	u4081
  5864  001570  5042               	movf	(dtoa@i+1)^0,w,c
  5865  001572  E108               	bnz	u4080
  5866  001574  0441               	decf	dtoa@i^0,w,c
  5867  001576  A0D8               	btfss	status,0,c
  5868  001578  EFC0  F00A         	goto	u4081
  5869  00157C  EFC2  F00A         	goto	u4080
  5870  001580                     u4081:
  5871  001580  EFF2  F00A         	goto	l4121
  5872  001584                     u4080:
  5873  001584  5039               	movf	dtoa@n^0,w,c
  5874  001586  103A               	iorwf	(dtoa@n+1)^0,w,c
  5875  001588  103B               	iorwf	(dtoa@n+2)^0,w,c
  5876  00158A  103C               	iorwf	(dtoa@n+3)^0,w,c
  5877  00158C  103D               	iorwf	(dtoa@n+4)^0,w,c
  5878  00158E  103E               	iorwf	(dtoa@n+5)^0,w,c
  5879  001590  103F               	iorwf	(dtoa@n+6)^0,w,c
  5880  001592  1040               	iorwf	(dtoa@n+7)^0,w,c
  5881  001594  A4D8               	btfss	status,2,c
  5882  001596  EFCF  F00A         	goto	u4091
  5883  00159A  EFD1  F00A         	goto	u4090
  5884  00159E                     u4091:
  5885  00159E  EF39  F00A         	goto	l4101
  5886  0015A2                     u4090:
  5887  0015A2  BE34               	btfsc	(dtoa@p+1)^0,7,c
  5888  0015A4  EFDE  F00A         	goto	u4100
  5889  0015A8  5034               	movf	(dtoa@p+1)^0,w,c
  5890  0015AA  E106               	bnz	u4101
  5891  0015AC  0433               	decf	dtoa@p^0,w,c
  5892  0015AE  B0D8               	btfsc	status,0,c
  5893  0015B0  EFDC  F00A         	goto	u4101
  5894  0015B4  EFDE  F00A         	goto	u4100
  5895  0015B8                     u4101:
  5896  0015B8  EF39  F00A         	goto	l4101
  5897  0015BC                     u4100:
  5898  0015BC  BE36               	btfsc	(dtoa@w+1)^0,7,c
  5899  0015BE  EFE9  F00A         	goto	u4111
  5900  0015C2  5036               	movf	(dtoa@w+1)^0,w,c
  5901  0015C4  E108               	bnz	u4110
  5902  0015C6  0435               	decf	dtoa@w^0,w,c
  5903  0015C8  A0D8               	btfss	status,0,c
  5904  0015CA  EFE9  F00A         	goto	u4111
  5905  0015CE  EFEB  F00A         	goto	u4110
  5906  0015D2                     u4111:
  5907  0015D2  EFF2  F00A         	goto	l4121
  5908  0015D6                     u4110:
  5909  0015D6  B25A               	btfsc	_flags^0,1,c
  5910  0015D8  EFF0  F00A         	goto	u4121
  5911  0015DC  EFF2  F00A         	goto	u4120
  5912  0015E0                     u4121:
  5913  0015E0  EF39  F00A         	goto	l4101
  5914  0015E4                     u4120:
  5915  0015E4                     l4121:
  5916                           
  5917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5918  0015E4  5037               	movf	dtoa@s^0,w,c
  5919  0015E6  1038               	iorwf	(dtoa@s+1)^0,w,c
  5920  0015E8  A4D8               	btfss	status,2,c
  5921  0015EA  EFF9  F00A         	goto	u4131
  5922  0015EE  EFFB  F00A         	goto	u4130
  5923  0015F2                     u4131:
  5924  0015F2  EF02  F00B         	goto	l4125
  5925  0015F6                     u4130:
  5926  0015F6  A45A               	btfss	_flags^0,2,c
  5927  0015F8  EF00  F00B         	goto	u4141
  5928  0015FC  EF02  F00B         	goto	u4140
  5929  001600                     u4141:
  5930  001600  EF20  F00B         	goto	l4135
  5931  001604                     u4140:
  5932  001604                     l4125:
  5933                           
  5934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5935  001604  0641               	decf	dtoa@i^0,f,c
  5936  001606  A0D8               	btfss	status,0,c
  5937  001608  0642               	decf	(dtoa@i+1)^0,f,c
  5938  00160A                     
  5939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5940  00160A  5037               	movf	dtoa@s^0,w,c
  5941  00160C  1038               	iorwf	(dtoa@s+1)^0,w,c
  5942  00160E  A4D8               	btfss	status,2,c
  5943  001610  EF0C  F00B         	goto	u4151
  5944  001614  EF0E  F00B         	goto	u4150
  5945  001618                     u4151:
  5946  001618  EF14  F00B         	goto	l4131
  5947  00161C                     u4150:
  5948  00161C  0E00               	movlw	0
  5949  00161E  6E32               	movwf	(_dtoa$1925+1)^0,c
  5950  001620  0E2B               	movlw	43
  5951  001622  6E31               	movwf	_dtoa$1925^0,c
  5952  001624  EF18  F00B         	goto	l4133
  5953  001628                     l4131:
  5954  001628  0E00               	movlw	0
  5955  00162A  6E32               	movwf	(_dtoa$1925+1)^0,c
  5956  00162C  0E2D               	movlw	45
  5957  00162E  6E31               	movwf	_dtoa$1925^0,c
  5958  001630                     l4133:
  5959  001630  0E98               	movlw	low _dbuf
  5960  001632  2441               	addwf	dtoa@i^0,w,c
  5961  001634  6ED9               	movwf	fsr2l,c
  5962  001636  0E00               	movlw	high _dbuf
  5963  001638  2042               	addwfc	(dtoa@i+1)^0,w,c
  5964  00163A  6EDA               	movwf	fsr2h,c
  5965  00163C  C031  FFDF         	movff	_dtoa$1925,indf2
  5966  001640                     l4135:
  5967                           
  5968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5969  001640  C01F  F014         	movff	dtoa@fp,pad@fp
  5970  001644  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  5971  001648  0E98               	movlw	low _dbuf
  5972  00164A  2441               	addwf	dtoa@i^0,w,c
  5973  00164C  6E16               	movwf	pad@buf^0,c
  5974  00164E  0E00               	movlw	high _dbuf
  5975  001650  2042               	addwfc	(dtoa@i+1)^0,w,c
  5976  001652  6E17               	movwf	(pad@buf+1)^0,c
  5977  001654  C035  F018         	movff	dtoa@w,pad@p
  5978  001658  C036  F019         	movff	dtoa@w+1,pad@p+1
  5979  00165C  ECD0  F014         	call	_pad	;wreg free
  5980  001660  C014  F01F         	movff	?_pad,?_dtoa
  5981  001664  C015  F020         	movff	?_pad+1,?_dtoa+1
  5982  001668  0012               	return		;funcret
  5983  00166A                     __end_of_dtoa:
  5984                           	callstack 0
  5985                           
  5986 ;; *************** function _pad *****************
  5987 ;; Defined at:
  5988 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  5991 ;;		 -> sprintf@f(6), 
  5992 ;;  buf             2   21[COMRAM] PTR unsigned char 
  5993 ;;		 -> dbuf(32), 
  5994 ;;  p               2   23[COMRAM] int 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  w               2   28[COMRAM] int 
  5997 ;;  i               2   26[COMRAM] int 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  2   19[COMRAM] int 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6007 ;;      Params:         6       0       0       0       0       0       0       0       0
  6008 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6009 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6010 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6011 ;;Total ram usage:       11 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    5
  6014 ;; This function calls:
  6015 ;;		_fputc
  6016 ;;		_fputs
  6017 ;;		_strlen
  6018 ;; This function is called by:
  6019 ;;		_dtoa
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text31
  6024  0029A0                     __ptext31:
  6025                           	callstack 0
  6026  0029A0                     _pad:
  6027                           	callstack 19
  6028  0029A0                     
  6029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6030  0029A0  A05A               	btfss	_flags^0,0,c
  6031  0029A2  EFD5  F014         	goto	u3921
  6032  0029A6  EFD7  F014         	goto	u3920
  6033  0029AA                     u3921:
  6034  0029AA  EFE1  F014         	goto	l4039
  6035  0029AE                     u3920:
  6036  0029AE                     
  6037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6038  0029AE  C016  F00D         	movff	pad@buf,fputs@s
  6039  0029B2  C017  F00E         	movff	pad@buf+1,fputs@s+1
  6040  0029B6  C014  F00F         	movff	pad@fp,fputs@fp
  6041  0029BA  C015  F010         	movff	pad@fp+1,fputs@fp+1
  6042  0029BE  EC8B  F017         	call	_fputs	;wreg free
  6043  0029C2                     l4039:
  6044                           
  6045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6046  0029C2  BE19               	btfsc	(pad@p+1)^0,7,c
  6047  0029C4  EFE6  F014         	goto	u3931
  6048  0029C8  EFE8  F014         	goto	u3930
  6049  0029CC                     u3931:
  6050  0029CC  EFEE  F014         	goto	l4043
  6051  0029D0                     u3930:
  6052  0029D0  C018  F01D         	movff	pad@p,pad@w
  6053  0029D4  C019  F01E         	movff	pad@p+1,pad@w+1
  6054  0029D8  EFF2  F014         	goto	l1051
  6055  0029DC                     l4043:
  6056  0029DC  0E00               	movlw	0
  6057  0029DE  6E1E               	movwf	(pad@w+1)^0,c
  6058  0029E0  0E00               	movlw	0
  6059  0029E2  6E1D               	movwf	pad@w^0,c
  6060  0029E4                     l1051:
  6061                           
  6062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6063  0029E4  0E00               	movlw	0
  6064  0029E6  6E1C               	movwf	(pad@i+1)^0,c
  6065  0029E8  0E00               	movlw	0
  6066  0029EA  6E1B               	movwf	pad@i^0,c
  6067                           
  6068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6069  0029EC  EF04  F015         	goto	l4049
  6070  0029F0                     l4045:
  6071                           
  6072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6073  0029F0  0E00               	movlw	0
  6074  0029F2  6E05               	movwf	(fputc@c+1)^0,c
  6075  0029F4  0E20               	movlw	32
  6076  0029F6  6E04               	movwf	fputc@c^0,c
  6077  0029F8  C014  F006         	movff	pad@fp,fputc@fp
  6078  0029FC  C015  F007         	movff	pad@fp+1,fputc@fp+1
  6079  002A00  EC6B  F014         	call	_fputc	;wreg free
  6080  002A04                     
  6081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6082  002A04  4A1B               	infsnz	pad@i^0,f,c
  6083  002A06  2A1C               	incf	(pad@i+1)^0,f,c
  6084  002A08                     l4049:
  6085                           
  6086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6087  002A08  501D               	movf	pad@w^0,w,c
  6088  002A0A  5C1B               	subwf	pad@i^0,w,c
  6089  002A0C  501C               	movf	(pad@i+1)^0,w,c
  6090  002A0E  0A80               	xorlw	128
  6091  002A10  6E1A               	movwf	??_pad^0,c
  6092  002A12  501E               	movf	(pad@w+1)^0,w,c
  6093  002A14  0A80               	xorlw	128
  6094  002A16  581A               	subwfb	??_pad^0,w,c
  6095  002A18  A0D8               	btfss	status,0,c
  6096  002A1A  EF11  F015         	goto	u3941
  6097  002A1E  EF13  F015         	goto	u3940
  6098  002A22                     u3941:
  6099  002A22  EFF8  F014         	goto	l4045
  6100  002A26                     u3940:
  6101  002A26                     
  6102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6103  002A26  B05A               	btfsc	_flags^0,0,c
  6104  002A28  EF18  F015         	goto	u3951
  6105  002A2C  EF1A  F015         	goto	u3950
  6106  002A30                     u3951:
  6107  002A30  EF24  F015         	goto	l4053
  6108  002A34                     u3950:
  6109  002A34                     
  6110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6111  002A34  C016  F00D         	movff	pad@buf,fputs@s
  6112  002A38  C017  F00E         	movff	pad@buf+1,fputs@s+1
  6113  002A3C  C014  F00F         	movff	pad@fp,fputs@fp
  6114  002A40  C015  F010         	movff	pad@fp+1,fputs@fp+1
  6115  002A44  EC8B  F017         	call	_fputs	;wreg free
  6116  002A48                     l4053:
  6117                           
  6118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6119  002A48  C016  F004         	movff	pad@buf,strlen@s
  6120  002A4C  C017  F005         	movff	pad@buf+1,strlen@s+1
  6121  002A50  EC43  F018         	call	_strlen	;wreg free
  6122  002A54  501D               	movf	pad@w^0,w,c
  6123  002A56  2404               	addwf	?_strlen^0,w,c
  6124  002A58  6E14               	movwf	?_pad^0,c
  6125  002A5A  501E               	movf	(pad@w+1)^0,w,c
  6126  002A5C  2005               	addwfc	(?_strlen+1)^0,w,c
  6127  002A5E  6E15               	movwf	(?_pad+1)^0,c
  6128  002A60  0012               	return		;funcret
  6129  002A62                     __end_of_pad:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function _strlen *****************
  6133 ;; Defined at:
  6134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  s               2    3[COMRAM] PTR const unsigned char 
  6137 ;;		 -> dbuf(32), 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  a               2    5[COMRAM] PTR const unsigned char 
  6140 ;;		 -> dbuf(32), 
  6141 ;; Return value:  Size  Location     Type
  6142 ;;                  2    3[COMRAM] unsigned int 
  6143 ;; Registers used:
  6144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6150 ;;      Params:         2       0       0       0       0       0       0       0       0
  6151 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6153 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6154 ;;Total ram usage:        4 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; Hardware stack levels required when called:    2
  6157 ;; This function calls:
  6158 ;;		Nothing
  6159 ;; This function is called by:
  6160 ;;		_pad
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text32
  6165  003086                     __ptext32:
  6166                           	callstack 0
  6167  003086                     _strlen:
  6168                           	callstack 21
  6169  003086  C004  F006         	movff	strlen@s,strlen@a
  6170  00308A  C005  F007         	movff	strlen@s+1,strlen@a+1
  6171  00308E  EF4B  F018         	goto	l3943
  6172  003092                     l3941:
  6173  003092  4A04               	infsnz	strlen@s^0,f,c
  6174  003094  2A05               	incf	(strlen@s+1)^0,f,c
  6175  003096                     l3943:
  6176  003096  C004  FFD9         	movff	strlen@s,fsr2l
  6177  00309A  C005  FFDA         	movff	strlen@s+1,fsr2h
  6178  00309E  50DF               	movf	indf2,w,c
  6179  0030A0  A4D8               	btfss	status,2,c
  6180  0030A2  EF55  F018         	goto	u3781
  6181  0030A6  EF57  F018         	goto	u3780
  6182  0030AA                     u3781:
  6183  0030AA  EF49  F018         	goto	l3941
  6184  0030AE                     u3780:
  6185  0030AE  5006               	movf	strlen@a^0,w,c
  6186  0030B0  5C04               	subwf	strlen@s^0,w,c
  6187  0030B2  6E04               	movwf	?_strlen^0,c
  6188  0030B4  5007               	movf	(strlen@a+1)^0,w,c
  6189  0030B6  5805               	subwfb	(strlen@s+1)^0,w,c
  6190  0030B8  6E05               	movwf	(?_strlen+1)^0,c
  6191  0030BA  0012               	return		;funcret
  6192  0030BC                     __end_of_strlen:
  6193                           	callstack 0
  6194                           
  6195 ;; *************** function _fputs *****************
  6196 ;; Defined at:
  6197 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6200 ;;		 -> dbuf(32), 
  6201 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  6202 ;;		 -> sprintf@f(6), 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  i               2   17[COMRAM] int 
  6205 ;;  c               1   16[COMRAM] unsigned char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  2   12[COMRAM] int 
  6208 ;; Registers used:
  6209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6215 ;;      Params:         4       0       0       0       0       0       0       0       0
  6216 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6218 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6219 ;;Total ram usage:        7 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    4
  6222 ;; This function calls:
  6223 ;;		_fputc
  6224 ;; This function is called by:
  6225 ;;		_pad
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           	psect	text33
  6230  002F16                     __ptext33:
  6231                           	callstack 0
  6232  002F16                     _fputs:
  6233                           	callstack 19
  6234  002F16  0E00               	movlw	0
  6235  002F18  6E13               	movwf	(fputs@i+1)^0,c
  6236  002F1A  0E00               	movlw	0
  6237  002F1C  6E12               	movwf	fputs@i^0,c
  6238  002F1E  EF9C  F017         	goto	l3937
  6239  002F22                     l3933:
  6240  002F22  C011  F004         	movff	fputs@c,fputc@c
  6241  002F26  6A05               	clrf	(fputc@c+1)^0,c
  6242  002F28  C00F  F006         	movff	fputs@fp,fputc@fp
  6243  002F2C  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  6244  002F30  EC6B  F014         	call	_fputc	;wreg free
  6245  002F34  4A12               	infsnz	fputs@i^0,f,c
  6246  002F36  2A13               	incf	(fputs@i+1)^0,f,c
  6247  002F38                     l3937:
  6248  002F38  5012               	movf	fputs@i^0,w,c
  6249  002F3A  240D               	addwf	fputs@s^0,w,c
  6250  002F3C  6ED9               	movwf	fsr2l,c
  6251  002F3E  5013               	movf	(fputs@i+1)^0,w,c
  6252  002F40  200E               	addwfc	(fputs@s+1)^0,w,c
  6253  002F42  6EDA               	movwf	fsr2h,c
  6254  002F44  50DF               	movf	indf2,w,c
  6255  002F46  6E11               	movwf	fputs@c^0,c
  6256  002F48  5011               	movf	fputs@c^0,w,c
  6257  002F4A  A4D8               	btfss	status,2,c
  6258  002F4C  EFAA  F017         	goto	u3771
  6259  002F50  EFAC  F017         	goto	u3770
  6260  002F54                     u3771:
  6261  002F54  EF91  F017         	goto	l3933
  6262  002F58                     u3770:
  6263  002F58  0012               	return		;funcret
  6264  002F5A                     __end_of_fputs:
  6265                           	callstack 0
  6266                           
  6267 ;; *************** function _fputc *****************
  6268 ;; Defined at:
  6269 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  c               2    3[COMRAM] int 
  6272 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  6273 ;;		 -> sprintf@f(6), 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  2    3[COMRAM] int 
  6278 ;; Registers used:
  6279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6285 ;;      Params:         4       0       0       0       0       0       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6287 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6288 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6289 ;;Total ram usage:        9 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    3
  6292 ;; This function calls:
  6293 ;;		_putch
  6294 ;; This function is called by:
  6295 ;;		_pad
  6296 ;;		_vfpfcnvrt
  6297 ;;		_fputs
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text34
  6302  0028D6                     __ptext34:
  6303                           	callstack 0
  6304  0028D6                     _fputc:
  6305                           	callstack 22
  6306  0028D6  5006               	movf	fputc@fp^0,w,c
  6307  0028D8  1007               	iorwf	(fputc@fp+1)^0,w,c
  6308  0028DA  B4D8               	btfsc	status,2,c
  6309  0028DC  EF72  F014         	goto	u3731
  6310  0028E0  EF74  F014         	goto	u3730
  6311  0028E4                     u3731:
  6312  0028E4  EF7D  F014         	goto	l3921
  6313  0028E8                     u3730:
  6314  0028E8  5006               	movf	fputc@fp^0,w,c
  6315  0028EA  1007               	iorwf	(fputc@fp+1)^0,w,c
  6316  0028EC  A4D8               	btfss	status,2,c
  6317  0028EE  EF7B  F014         	goto	u3741
  6318  0028F2  EF7D  F014         	goto	u3740
  6319  0028F6                     u3741:
  6320  0028F6  EF82  F014         	goto	l3923
  6321  0028FA                     u3740:
  6322  0028FA                     l3921:
  6323  0028FA  5004               	movf	fputc@c^0,w,c
  6324  0028FC  ECE8  F018         	call	_putch
  6325  002900  EFCF  F014         	goto	l1182
  6326  002904                     l3923:
  6327  002904  EE20 F004          	lfsr	2,4
  6328  002908  5006               	movf	fputc@fp^0,w,c
  6329  00290A  26D9               	addwf	fsr2l,f,c
  6330  00290C  5007               	movf	(fputc@fp+1)^0,w,c
  6331  00290E  22DA               	addwfc	fsr2h,f,c
  6332  002910  50DE               	movf	postinc2,w,c
  6333  002912  10DE               	iorwf	postinc2,w,c
  6334  002914  B4D8               	btfsc	status,2,c
  6335  002916  EF8F  F014         	goto	u3751
  6336  00291A  EF91  F014         	goto	u3750
  6337  00291E                     u3751:
  6338  00291E  EFAC  F014         	goto	l3927
  6339  002922                     u3750:
  6340  002922  EE20 F004          	lfsr	2,4
  6341  002926  5006               	movf	fputc@fp^0,w,c
  6342  002928  26D9               	addwf	fsr2l,f,c
  6343  00292A  5007               	movf	(fputc@fp+1)^0,w,c
  6344  00292C  22DA               	addwfc	fsr2h,f,c
  6345  00292E  EE10 F002          	lfsr	1,2
  6346  002932  5006               	movf	fputc@fp^0,w,c
  6347  002934  26E1               	addwf	fsr1l,f,c
  6348  002936  5007               	movf	(fputc@fp+1)^0,w,c
  6349  002938  22E2               	addwfc	fsr1h,f,c
  6350  00293A  50DE               	movf	postinc2,w,c
  6351  00293C  5CE6               	subwf	postinc1,w,c
  6352  00293E  50E6               	movf	postinc1,w,c
  6353  002940  0A80               	xorlw	128
  6354  002942  6E0C               	movwf	(??_fputc+4)^0,c
  6355  002944  50DE               	movf	postinc2,w,c
  6356  002946  0A80               	xorlw	128
  6357  002948  580C               	subwfb	(??_fputc+4)^0,w,c
  6358  00294A  B0D8               	btfsc	status,0,c
  6359  00294C  EFAA  F014         	goto	u3761
  6360  002950  EFAC  F014         	goto	u3760
  6361  002954                     u3761:
  6362  002954  EFCF  F014         	goto	l1182
  6363  002958                     u3760:
  6364  002958                     l3927:
  6365  002958  EE20 F002          	lfsr	2,2
  6366  00295C  5006               	movf	fputc@fp^0,w,c
  6367  00295E  26D9               	addwf	fsr2l,f,c
  6368  002960  5007               	movf	(fputc@fp+1)^0,w,c
  6369  002962  22DA               	addwfc	fsr2h,f,c
  6370  002964  CFDE F008          	movff	postinc2,??_fputc
  6371  002968  CFDD F009          	movff	postdec2,??_fputc+1
  6372  00296C  C006  FFD9         	movff	fputc@fp,fsr2l
  6373  002970  C007  FFDA         	movff	fputc@fp+1,fsr2h
  6374  002974  CFDE F00A          	movff	postinc2,??_fputc+2
  6375  002978  CFDD F00B          	movff	postdec2,??_fputc+3
  6376  00297C  5008               	movf	??_fputc^0,w,c
  6377  00297E  240A               	addwf	(??_fputc+2)^0,w,c
  6378  002980  6ED9               	movwf	fsr2l,c
  6379  002982  5009               	movf	(??_fputc+1)^0,w,c
  6380  002984  200B               	addwfc	(??_fputc+3)^0,w,c
  6381  002986  6EDA               	movwf	fsr2h,c
  6382  002988  C004  FFDF         	movff	fputc@c,indf2
  6383  00298C  EE20 F002          	lfsr	2,2
  6384  002990  5006               	movf	fputc@fp^0,w,c
  6385  002992  26D9               	addwf	fsr2l,f,c
  6386  002994  5007               	movf	(fputc@fp+1)^0,w,c
  6387  002996  22DA               	addwfc	fsr2h,f,c
  6388  002998  2ADE               	incf	postinc2,f,c
  6389  00299A  0E00               	movlw	0
  6390  00299C  22DD               	addwfc	postdec2,f,c
  6391  00299E                     l1182:
  6392  00299E  0012               	return		;funcret
  6393  0029A0                     __end_of_fputc:
  6394                           	callstack 0
  6395                           
  6396 ;; *************** function _putch *****************
  6397 ;; Defined at:
  6398 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  c               1    wreg     unsigned char 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  c               1    0[COMRAM] unsigned char 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6412 ;;      Params:         0       0       0       0       0       0       0       0       0
  6413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6415 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6416 ;;Total ram usage:        0 bytes
  6417 ;; Hardware stack levels used:    1
  6418 ;; Hardware stack levels required when called:    2
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_fputc
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text35
  6427  0031D0                     __ptext35:
  6428                           	callstack 0
  6429  0031D0                     _putch:
  6430                           	callstack 22
  6431  0031D0  0012               	return		;funcret
  6432  0031D2                     __end_of_putch:
  6433                           	callstack 0
  6434                           
  6435 ;; *************** function _abs *****************
  6436 ;; Defined at:
  6437 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  a               2   21[COMRAM] int 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  2   21[COMRAM] int 
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, status,0
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6451 ;;      Params:         2       0       0       0       0       0       0       0       0
  6452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6453 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6454 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6455 ;;Total ram usage:        4 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; Hardware stack levels required when called:    2
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_dtoa
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text36
  6466  002F9C                     __ptext36:
  6467                           	callstack 0
  6468  002F9C                     _abs:
  6469                           	callstack 22
  6470  002F9C  BE17               	btfsc	(abs@a+1)^0,7,c
  6471  002F9E  EFDB  F017         	goto	u3960
  6472  002FA2  5017               	movf	(abs@a+1)^0,w,c
  6473  002FA4  E106               	bnz	u3961
  6474  002FA6  0416               	decf	abs@a^0,w,c
  6475  002FA8  B0D8               	btfsc	status,0,c
  6476  002FAA  EFD9  F017         	goto	u3961
  6477  002FAE  EFDB  F017         	goto	u3960
  6478  002FB2                     u3961:
  6479  002FB2  EFE9  F017         	goto	l1122
  6480  002FB6                     u3960:
  6481  002FB6  C016  F018         	movff	abs@a,??_abs
  6482  002FBA  C017  F019         	movff	abs@a+1,??_abs+1
  6483  002FBE  1E18               	comf	??_abs^0,f,c
  6484  002FC0  1E19               	comf	(??_abs+1)^0,f,c
  6485  002FC2  4A18               	infsnz	??_abs^0,f,c
  6486  002FC4  2A19               	incf	(??_abs+1)^0,f,c
  6487  002FC6  C018  F016         	movff	??_abs,?_abs
  6488  002FCA  C019  F017         	movff	??_abs+1,?_abs+1
  6489  002FCE  EFED  F017         	goto	l1125
  6490  002FD2                     l1122:
  6491  002FD2  C016  F016         	movff	abs@a,?_abs
  6492  002FD6  C017  F017         	movff	abs@a+1,?_abs+1
  6493  002FDA                     l1125:
  6494  002FDA  0012               	return		;funcret
  6495  002FDC                     __end_of_abs:
  6496                           	callstack 0
  6497                           
  6498 ;; *************** function ___aomod *****************
  6499 ;; Defined at:
  6500 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  dividend        8    3[COMRAM] long long 
  6503 ;;  divisor         8   11[COMRAM] long long 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  sign            1   20[COMRAM] unsigned char 
  6506 ;;  counter         1   19[COMRAM] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  8    3[COMRAM] long long 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6516 ;;      Params:        16       0       0       0       0       0       0       0       0
  6517 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6519 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6520 ;;Total ram usage:       18 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    2
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_dtoa
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text37
  6531  00222A                     __ptext37:
  6532                           	callstack 0
  6533  00222A                     ___aomod:
  6534                           	callstack 22
  6535  00222A  0E00               	movlw	0
  6536  00222C  6E15               	movwf	___aomod@sign^0,c
  6537  00222E  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  6538  002230  EF1E  F011         	goto	u3860
  6539  002234  EF1C  F011         	goto	u3861
  6540  002238                     u3861:
  6541  002238  EF30  F011         	goto	l4007
  6542  00223C                     u3860:
  6543  00223C  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6544  00223E  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6545  002240  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6546  002242  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6547  002244  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6548  002246  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6549  002248  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6550  00224A  6C04               	negf	___aomod@dividend^0,c
  6551  00224C  0E00               	movlw	0
  6552  00224E  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6553  002250  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6554  002252  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6555  002254  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6556  002256  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6557  002258  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6558  00225A  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6559  00225C  0E01               	movlw	1
  6560  00225E  6E15               	movwf	___aomod@sign^0,c
  6561  002260                     l4007:
  6562  002260  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  6563  002262  EF37  F011         	goto	u3870
  6564  002266  EF35  F011         	goto	u3871
  6565  00226A                     u3871:
  6566  00226A  EF47  F011         	goto	l4011
  6567  00226E                     u3870:
  6568  00226E  1E13               	comf	(___aomod@divisor+7)^0,f,c
  6569  002270  1E12               	comf	(___aomod@divisor+6)^0,f,c
  6570  002272  1E11               	comf	(___aomod@divisor+5)^0,f,c
  6571  002274  1E10               	comf	(___aomod@divisor+4)^0,f,c
  6572  002276  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  6573  002278  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  6574  00227A  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  6575  00227C  6C0C               	negf	___aomod@divisor^0,c
  6576  00227E  0E00               	movlw	0
  6577  002280  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  6578  002282  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  6579  002284  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  6580  002286  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  6581  002288  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  6582  00228A  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  6583  00228C  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  6584  00228E                     l4011:
  6585  00228E  500C               	movf	___aomod@divisor^0,w,c
  6586  002290  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  6587  002292  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  6588  002294  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  6589  002296  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  6590  002298  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  6591  00229A  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  6592  00229C  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  6593  00229E  B4D8               	btfsc	status,2,c
  6594  0022A0  EF54  F011         	goto	u3881
  6595  0022A4  EF56  F011         	goto	u3880
  6596  0022A8                     u3881:
  6597  0022A8  EF9E  F011         	goto	l4027
  6598  0022AC                     u3880:
  6599  0022AC  0E01               	movlw	1
  6600  0022AE  6E14               	movwf	___aomod@counter^0,c
  6601  0022B0  EF64  F011         	goto	l4017
  6602  0022B4                     l4015:
  6603  0022B4  90D8               	bcf	status,0,c
  6604  0022B6  360C               	rlcf	___aomod@divisor^0,f,c
  6605  0022B8  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  6606  0022BA  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  6607  0022BC  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  6608  0022BE  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  6609  0022C0  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  6610  0022C2  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  6611  0022C4  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  6612  0022C6  2A14               	incf	___aomod@counter^0,f,c
  6613  0022C8                     l4017:
  6614  0022C8  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  6615  0022CA  EF69  F011         	goto	u3891
  6616  0022CE  EF6B  F011         	goto	u3890
  6617  0022D2                     u3891:
  6618  0022D2  EF5A  F011         	goto	l4015
  6619  0022D6                     u3890:
  6620  0022D6                     l4019:
  6621  0022D6  500C               	movf	___aomod@divisor^0,w,c
  6622  0022D8  5C04               	subwf	___aomod@dividend^0,w,c
  6623  0022DA  500D               	movf	(___aomod@divisor+1)^0,w,c
  6624  0022DC  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  6625  0022DE  500E               	movf	(___aomod@divisor+2)^0,w,c
  6626  0022E0  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  6627  0022E2  500F               	movf	(___aomod@divisor+3)^0,w,c
  6628  0022E4  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  6629  0022E6  5010               	movf	(___aomod@divisor+4)^0,w,c
  6630  0022E8  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  6631  0022EA  5011               	movf	(___aomod@divisor+5)^0,w,c
  6632  0022EC  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  6633  0022EE  5012               	movf	(___aomod@divisor+6)^0,w,c
  6634  0022F0  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  6635  0022F2  5013               	movf	(___aomod@divisor+7)^0,w,c
  6636  0022F4  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  6637  0022F6  A0D8               	btfss	status,0,c
  6638  0022F8  EF80  F011         	goto	u3901
  6639  0022FC  EF82  F011         	goto	u3900
  6640  002300                     u3901:
  6641  002300  EF92  F011         	goto	l4023
  6642  002304                     u3900:
  6643  002304  500C               	movf	___aomod@divisor^0,w,c
  6644  002306  5E04               	subwf	___aomod@dividend^0,f,c
  6645  002308  500D               	movf	(___aomod@divisor+1)^0,w,c
  6646  00230A  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  6647  00230C  500E               	movf	(___aomod@divisor+2)^0,w,c
  6648  00230E  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  6649  002310  500F               	movf	(___aomod@divisor+3)^0,w,c
  6650  002312  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  6651  002314  5010               	movf	(___aomod@divisor+4)^0,w,c
  6652  002316  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  6653  002318  5011               	movf	(___aomod@divisor+5)^0,w,c
  6654  00231A  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  6655  00231C  5012               	movf	(___aomod@divisor+6)^0,w,c
  6656  00231E  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  6657  002320  5013               	movf	(___aomod@divisor+7)^0,w,c
  6658  002322  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  6659  002324                     l4023:
  6660  002324  90D8               	bcf	status,0,c
  6661  002326  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  6662  002328  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  6663  00232A  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  6664  00232C  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  6665  00232E  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  6666  002330  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  6667  002332  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  6668  002334  320C               	rrcf	___aomod@divisor^0,f,c
  6669  002336  2E14               	decfsz	___aomod@counter^0,f,c
  6670  002338  EF6B  F011         	goto	l4019
  6671  00233C                     l4027:
  6672  00233C  5015               	movf	___aomod@sign^0,w,c
  6673  00233E  B4D8               	btfsc	status,2,c
  6674  002340  EFA4  F011         	goto	u3911
  6675  002344  EFA6  F011         	goto	u3910
  6676  002348                     u3911:
  6677  002348  EFB6  F011         	goto	l4031
  6678  00234C                     u3910:
  6679  00234C  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6680  00234E  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6681  002350  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6682  002352  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6683  002354  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6684  002356  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6685  002358  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6686  00235A  6C04               	negf	___aomod@dividend^0,c
  6687  00235C  0E00               	movlw	0
  6688  00235E  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6689  002360  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6690  002362  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6691  002364  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6692  002366  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6693  002368  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6694  00236A  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6695  00236C                     l4031:
  6696  00236C  C004  F004         	movff	___aomod@dividend,?___aomod
  6697  002370  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  6698  002374  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  6699  002378  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  6700  00237C  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  6701  002380  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  6702  002384  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  6703  002388  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  6704  00238C  0012               	return		;funcret
  6705  00238E                     __end_of___aomod:
  6706                           	callstack 0
  6707                           
  6708 ;; *************** function ___aodiv *****************
  6709 ;; Defined at:
  6710 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  dividend        8    3[COMRAM] long long 
  6713 ;;  divisor         8   11[COMRAM] long long 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  quotient        8   21[COMRAM] long long 
  6716 ;;  sign            1   20[COMRAM] unsigned char 
  6717 ;;  counter         1   19[COMRAM] unsigned char 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  8    3[COMRAM] long long 
  6720 ;; Registers used:
  6721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6727 ;;      Params:        16       0       0       0       0       0       0       0       0
  6728 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6730 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6731 ;;Total ram usage:       26 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    2
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_dtoa
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text38
  6742  001F2C                     __ptext38:
  6743                           	callstack 0
  6744  001F2C                     ___aodiv:
  6745                           	callstack 22
  6746  001F2C  0E00               	movlw	0
  6747  001F2E  6E15               	movwf	___aodiv@sign^0,c
  6748  001F30  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  6749  001F32  EF9F  F00F         	goto	u3790
  6750  001F36  EF9D  F00F         	goto	u3791
  6751  001F3A                     u3791:
  6752  001F3A  EFB1  F00F         	goto	l3963
  6753  001F3E                     u3790:
  6754  001F3E  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  6755  001F40  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  6756  001F42  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  6757  001F44  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  6758  001F46  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  6759  001F48  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  6760  001F4A  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  6761  001F4C  6C0C               	negf	___aodiv@divisor^0,c
  6762  001F4E  0E00               	movlw	0
  6763  001F50  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  6764  001F52  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  6765  001F54  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  6766  001F56  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  6767  001F58  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  6768  001F5A  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  6769  001F5C  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  6770  001F5E  0E01               	movlw	1
  6771  001F60  6E15               	movwf	___aodiv@sign^0,c
  6772  001F62                     l3963:
  6773  001F62  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  6774  001F64  EFB8  F00F         	goto	u3800
  6775  001F68  EFB6  F00F         	goto	u3801
  6776  001F6C                     u3801:
  6777  001F6C  EFCA  F00F         	goto	l3969
  6778  001F70                     u3800:
  6779  001F70  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  6780  001F72  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  6781  001F74  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  6782  001F76  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  6783  001F78  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  6784  001F7A  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  6785  001F7C  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  6786  001F7E  6C04               	negf	___aodiv@dividend^0,c
  6787  001F80  0E00               	movlw	0
  6788  001F82  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  6789  001F84  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  6790  001F86  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  6791  001F88  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  6792  001F8A  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  6793  001F8C  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  6794  001F8E  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  6795  001F90  0E01               	movlw	1
  6796  001F92  1A15               	xorwf	___aodiv@sign^0,f,c
  6797  001F94                     l3969:
  6798  001F94  EE20  F016         	lfsr	2,___aodiv@quotient
  6799  001F98  0E07               	movlw	7
  6800  001F9A                     u3811:
  6801  001F9A  6ADE               	clrf	postinc2,c
  6802  001F9C  06E8               	decf	wreg,f,c
  6803  001F9E  E2FD               	bc	u3811
  6804  001FA0  500C               	movf	___aodiv@divisor^0,w,c
  6805  001FA2  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  6806  001FA4  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  6807  001FA6  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  6808  001FA8  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  6809  001FAA  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  6810  001FAC  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  6811  001FAE  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  6812  001FB0  B4D8               	btfsc	status,2,c
  6813  001FB2  EFDD  F00F         	goto	u3821
  6814  001FB6  EFDF  F00F         	goto	u3820
  6815  001FBA                     u3821:
  6816  001FBA  EF31  F010         	goto	l3991
  6817  001FBE                     u3820:
  6818  001FBE  0E01               	movlw	1
  6819  001FC0  6E14               	movwf	___aodiv@counter^0,c
  6820  001FC2  EFED  F00F         	goto	l3977
  6821  001FC6                     l3975:
  6822  001FC6  90D8               	bcf	status,0,c
  6823  001FC8  360C               	rlcf	___aodiv@divisor^0,f,c
  6824  001FCA  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  6825  001FCC  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  6826  001FCE  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  6827  001FD0  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  6828  001FD2  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  6829  001FD4  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  6830  001FD6  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  6831  001FD8  2A14               	incf	___aodiv@counter^0,f,c
  6832  001FDA                     l3977:
  6833  001FDA  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  6834  001FDC  EFF2  F00F         	goto	u3831
  6835  001FE0  EFF4  F00F         	goto	u3830
  6836  001FE4                     u3831:
  6837  001FE4  EFE3  F00F         	goto	l3975
  6838  001FE8                     u3830:
  6839  001FE8                     l3979:
  6840  001FE8  90D8               	bcf	status,0,c
  6841  001FEA  3616               	rlcf	___aodiv@quotient^0,f,c
  6842  001FEC  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  6843  001FEE  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  6844  001FF0  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  6845  001FF2  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  6846  001FF4  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  6847  001FF6  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  6848  001FF8  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  6849  001FFA  500C               	movf	___aodiv@divisor^0,w,c
  6850  001FFC  5C04               	subwf	___aodiv@dividend^0,w,c
  6851  001FFE  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6852  002000  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  6853  002002  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6854  002004  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  6855  002006  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6856  002008  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  6857  00200A  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6858  00200C  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  6859  00200E  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6860  002010  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  6861  002012  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6862  002014  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  6863  002016  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6864  002018  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  6865  00201A  A0D8               	btfss	status,0,c
  6866  00201C  EF12  F010         	goto	u3841
  6867  002020  EF14  F010         	goto	u3840
  6868  002024                     u3841:
  6869  002024  EF25  F010         	goto	l3987
  6870  002028                     u3840:
  6871  002028  500C               	movf	___aodiv@divisor^0,w,c
  6872  00202A  5E04               	subwf	___aodiv@dividend^0,f,c
  6873  00202C  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6874  00202E  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  6875  002030  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6876  002032  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  6877  002034  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6878  002036  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  6879  002038  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6880  00203A  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  6881  00203C  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6882  00203E  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  6883  002040  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6884  002042  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  6885  002044  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6886  002046  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  6887  002048  8016               	bsf	___aodiv@quotient^0,0,c
  6888  00204A                     l3987:
  6889  00204A  90D8               	bcf	status,0,c
  6890  00204C  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  6891  00204E  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  6892  002050  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  6893  002052  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  6894  002054  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  6895  002056  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  6896  002058  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  6897  00205A  320C               	rrcf	___aodiv@divisor^0,f,c
  6898  00205C  2E14               	decfsz	___aodiv@counter^0,f,c
  6899  00205E  EFF4  F00F         	goto	l3979
  6900  002062                     l3991:
  6901  002062  5015               	movf	___aodiv@sign^0,w,c
  6902  002064  B4D8               	btfsc	status,2,c
  6903  002066  EF37  F010         	goto	u3851
  6904  00206A  EF39  F010         	goto	u3850
  6905  00206E                     u3851:
  6906  00206E  EF49  F010         	goto	l3995
  6907  002072                     u3850:
  6908  002072  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  6909  002074  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  6910  002076  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  6911  002078  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  6912  00207A  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  6913  00207C  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  6914  00207E  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  6915  002080  6C16               	negf	___aodiv@quotient^0,c
  6916  002082  0E00               	movlw	0
  6917  002084  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  6918  002086  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  6919  002088  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  6920  00208A  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  6921  00208C  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  6922  00208E  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  6923  002090  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  6924  002092                     l3995:
  6925  002092  C016  F004         	movff	___aodiv@quotient,?___aodiv
  6926  002096  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  6927  00209A  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  6928  00209E  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  6929  0020A2  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  6930  0020A6  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  6931  0020AA  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  6932  0020AE  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  6933  0020B2  0012               	return		;funcret
  6934  0020B4                     __end_of___aodiv:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _atoi *****************
  6938 ;; Defined at:
  6939 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6942 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;  n               2   23[COMRAM] int 
  6945 ;;  neg             2   16[COMRAM] int 
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  2   10[COMRAM] int 
  6948 ;; Registers used:
  6949 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6955 ;;      Params:         2       0       0       0       0       0       0       0       0
  6956 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6957 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6958 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6959 ;;Total ram usage:       15 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    3
  6962 ;; This function calls:
  6963 ;;		___wmul
  6964 ;;		_isdigit
  6965 ;;		_isspace
  6966 ;; This function is called by:
  6967 ;;		_vfpfcnvrt
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text39
  6972  001D9C                     __ptext39:
  6973                           	callstack 0
  6974  001D9C                     _atoi:
  6975                           	callstack 22
  6976  001D9C  0E00               	movlw	0
  6977  001D9E  6E19               	movwf	(atoi@n+1)^0,c
  6978  001DA0  0E00               	movlw	0
  6979  001DA2  6E18               	movwf	atoi@n^0,c
  6980  001DA4  0E00               	movlw	0
  6981  001DA6  6E12               	movwf	(atoi@neg+1)^0,c
  6982  001DA8  0E00               	movlw	0
  6983  001DAA  6E11               	movwf	atoi@neg^0,c
  6984  001DAC  EFDA  F00E         	goto	l4143
  6985  001DB0                     l4141:
  6986  001DB0  4A0B               	infsnz	atoi@s^0,f,c
  6987  001DB2  2A0C               	incf	(atoi@s+1)^0,f,c
  6988  001DB4                     l4143:
  6989  001DB4  0E01               	movlw	1
  6990  001DB6  6E17               	movwf	_atoi$1961^0,c
  6991  001DB8  C00B  FFF6         	movff	atoi@s,tblptrl
  6992  001DBC  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6993  001DC0                     	if	0	;tblptru may be non-zero
  6994  001DC0                     	endif
  6995  001DC0                     	if	0	;tblptru may be non-zero
  6996  001DC0                     	endif
  6997  001DC0  0008               	tblrd		*
  6998  001DC2  50F5               	movf	tablat,w,c
  6999  001DC4  0A20               	xorlw	32
  7000  001DC6  B4D8               	btfsc	status,2,c
  7001  001DC8  EFE8  F00E         	goto	u4161
  7002  001DCC  EFEA  F00E         	goto	u4160
  7003  001DD0                     u4161:
  7004  001DD0  EF07  F00F         	goto	l4151
  7005  001DD4                     u4160:
  7006  001DD4  0EF7               	movlw	247
  7007  001DD6  6E0D               	movwf	??_atoi^0,c
  7008  001DD8  0EFF               	movlw	255
  7009  001DDA  6E0E               	movwf	(??_atoi+1)^0,c
  7010  001DDC  C00B  FFF6         	movff	atoi@s,tblptrl
  7011  001DE0  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7012  001DE4                     	if	0	;tblptru may be non-zero
  7013  001DE4                     	endif
  7014  001DE4                     	if	0	;tblptru may be non-zero
  7015  001DE4                     	endif
  7016  001DE4  0008               	tblrd		*
  7017  001DE6  50F5               	movf	tablat,w,c
  7018  001DE8  6E0F               	movwf	(??_atoi+2)^0,c
  7019  001DEA  6A10               	clrf	(??_atoi+3)^0,c
  7020  001DEC  500D               	movf	??_atoi^0,w,c
  7021  001DEE  260F               	addwf	(??_atoi+2)^0,f,c
  7022  001DF0  500E               	movf	(??_atoi+1)^0,w,c
  7023  001DF2  2210               	addwfc	(??_atoi+3)^0,f,c
  7024  001DF4  5010               	movf	(??_atoi+3)^0,w,c
  7025  001DF6  E109               	bnz	u4170
  7026  001DF8  0E05               	movlw	5
  7027  001DFA  5C0F               	subwf	(??_atoi+2)^0,w,c
  7028  001DFC  A0D8               	btfss	status,0,c
  7029  001DFE  EF03  F00F         	goto	u4171
  7030  001E02  EF05  F00F         	goto	u4170
  7031  001E06                     u4171:
  7032  001E06  EF07  F00F         	goto	l4151
  7033  001E0A                     u4170:
  7034  001E0A  0E00               	movlw	0
  7035  001E0C  6E17               	movwf	_atoi$1961^0,c
  7036  001E0E                     l4151:
  7037  001E0E  C017  F013         	movff	_atoi$1961,_atoi$1960
  7038  001E12  6A14               	clrf	(_atoi$1960+1)^0,c
  7039  001E14  5013               	movf	_atoi$1960^0,w,c
  7040  001E16  1014               	iorwf	(_atoi$1960+1)^0,w,c
  7041  001E18  A4D8               	btfss	status,2,c
  7042  001E1A  EF11  F00F         	goto	u4181
  7043  001E1E  EF13  F00F         	goto	u4180
  7044  001E22                     u4181:
  7045  001E22  EFD8  F00E         	goto	l4141
  7046  001E26                     u4180:
  7047  001E26  EF1D  F00F         	goto	l4161
  7048  001E2A                     l4157:
  7049  001E2A  0E00               	movlw	0
  7050  001E2C  6E12               	movwf	(atoi@neg+1)^0,c
  7051  001E2E  0E01               	movlw	1
  7052  001E30  6E11               	movwf	atoi@neg^0,c
  7053  001E32                     l4159:
  7054  001E32  4A0B               	infsnz	atoi@s^0,f,c
  7055  001E34  2A0C               	incf	(atoi@s+1)^0,f,c
  7056  001E36  EF52  F00F         	goto	l4167
  7057  001E3A                     l4161:
  7058  001E3A  C00B  FFF6         	movff	atoi@s,tblptrl
  7059  001E3E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7060  001E42                     	if	0	;tblptru may be non-zero
  7061  001E42                     	endif
  7062  001E42                     	if	0	;tblptru may be non-zero
  7063  001E42                     	endif
  7064  001E42  0008               	tblrd		*
  7065  001E44  50F5               	movf	tablat,w,c
  7066  001E46  6E0D               	movwf	??_atoi^0,c
  7067  001E48  6A0E               	clrf	(??_atoi+1)^0,c
  7068                           
  7069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7070                           ; Switch size 1, requested type "simple"
  7071                           ; Number of cases is 1, Range of values is 0 to 0
  7072                           ; switch strategies available:
  7073                           ; Name         Instructions Cycles
  7074                           ; simple_byte            4     3 (average)
  7075                           ;	Chosen strategy is simple_byte
  7076  001E4A  500E               	movf	(??_atoi+1)^0,w,c
  7077  001E4C  0A00               	xorlw	0	; case 0
  7078  001E4E  B4D8               	btfsc	status,2,c
  7079  001E50  EF2C  F00F         	goto	l4511
  7080  001E54  EF52  F00F         	goto	l4167
  7081  001E58                     l4511:
  7082                           
  7083                           ; Switch size 1, requested type "simple"
  7084                           ; Number of cases is 2, Range of values is 43 to 45
  7085                           ; switch strategies available:
  7086                           ; Name         Instructions Cycles
  7087                           ; simple_byte            7     4 (average)
  7088                           ;	Chosen strategy is simple_byte
  7089  001E58  500D               	movf	??_atoi^0,w,c
  7090  001E5A  0A2B               	xorlw	43	; case 43
  7091  001E5C  B4D8               	btfsc	status,2,c
  7092  001E5E  EF19  F00F         	goto	l4159
  7093  001E62  0A06               	xorlw	6	; case 45
  7094  001E64  B4D8               	btfsc	status,2,c
  7095  001E66  EF15  F00F         	goto	l4157
  7096  001E6A  EF52  F00F         	goto	l4167
  7097  001E6E                     l4163:
  7098  001E6E  C018  F004         	movff	atoi@n,___wmul@multiplier
  7099  001E72  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  7100  001E76  0E00               	movlw	0
  7101  001E78  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  7102  001E7A  0E0A               	movlw	10
  7103  001E7C  6E06               	movwf	___wmul@multiplicand^0,c
  7104  001E7E  EC9E  F018         	call	___wmul	;wreg free
  7105  001E82  C00B  FFF6         	movff	atoi@s,tblptrl
  7106  001E86  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7107  001E8A                     	if	0	;tblptru may be non-zero
  7108  001E8A                     	endif
  7109  001E8A                     	if	0	;tblptru may be non-zero
  7110  001E8A                     	endif
  7111  001E8A  0008               	tblrd		*
  7112  001E8C  50F5               	movf	tablat,w,c
  7113  001E8E  5E04               	subwf	?___wmul^0,f,c
  7114  001E90  0E00               	movlw	0
  7115  001E92  5A05               	subwfb	(?___wmul+1)^0,f,c
  7116  001E94  0E30               	movlw	48
  7117  001E96  2404               	addwf	?___wmul^0,w,c
  7118  001E98  6E18               	movwf	atoi@n^0,c
  7119  001E9A  0E00               	movlw	0
  7120  001E9C  2005               	addwfc	(?___wmul+1)^0,w,c
  7121  001E9E  6E19               	movwf	(atoi@n+1)^0,c
  7122  001EA0  EF19  F00F         	goto	l4159
  7123  001EA4                     l4167:
  7124  001EA4  0ED0               	movlw	208
  7125  001EA6  6E0D               	movwf	??_atoi^0,c
  7126  001EA8  0EFF               	movlw	255
  7127  001EAA  6E0E               	movwf	(??_atoi+1)^0,c
  7128  001EAC  C00B  FFF6         	movff	atoi@s,tblptrl
  7129  001EB0  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7130  001EB4                     	if	0	;tblptru may be non-zero
  7131  001EB4                     	endif
  7132  001EB4                     	if	0	;tblptru may be non-zero
  7133  001EB4                     	endif
  7134  001EB4  0008               	tblrd		*
  7135  001EB6  50F5               	movf	tablat,w,c
  7136  001EB8  6E0F               	movwf	(??_atoi+2)^0,c
  7137  001EBA  6A10               	clrf	(??_atoi+3)^0,c
  7138  001EBC  500D               	movf	??_atoi^0,w,c
  7139  001EBE  260F               	addwf	(??_atoi+2)^0,f,c
  7140  001EC0  500E               	movf	(??_atoi+1)^0,w,c
  7141  001EC2  2210               	addwfc	(??_atoi+3)^0,f,c
  7142  001EC4  5010               	movf	(??_atoi+3)^0,w,c
  7143  001EC6  E10A               	bnz	u4190
  7144  001EC8  0E0A               	movlw	10
  7145  001ECA  5C0F               	subwf	(??_atoi+2)^0,w,c
  7146  001ECC  A0D8               	btfss	status,0,c
  7147  001ECE  EF6B  F00F         	goto	u4191
  7148  001ED2  EF6E  F00F         	goto	u4190
  7149  001ED6                     u4191:
  7150  001ED6  0E01               	movlw	1
  7151  001ED8  EF6F  F00F         	goto	u4200
  7152  001EDC                     u4190:
  7153  001EDC  0E00               	movlw	0
  7154  001EDE                     u4200:
  7155  001EDE  6E15               	movwf	_atoi$1962^0,c
  7156  001EE0  6A16               	clrf	(_atoi$1962+1)^0,c
  7157  001EE2  5015               	movf	_atoi$1962^0,w,c
  7158  001EE4  1016               	iorwf	(_atoi$1962+1)^0,w,c
  7159  001EE6  A4D8               	btfss	status,2,c
  7160  001EE8  EF78  F00F         	goto	u4211
  7161  001EEC  EF7A  F00F         	goto	u4210
  7162  001EF0                     u4211:
  7163  001EF0  EF37  F00F         	goto	l4163
  7164  001EF4                     u4210:
  7165  001EF4  5011               	movf	atoi@neg^0,w,c
  7166  001EF6  1012               	iorwf	(atoi@neg+1)^0,w,c
  7167  001EF8  A4D8               	btfss	status,2,c
  7168  001EFA  EF81  F00F         	goto	u4221
  7169  001EFE  EF83  F00F         	goto	u4220
  7170  001F02                     u4221:
  7171  001F02  EF91  F00F         	goto	l1153
  7172  001F06                     u4220:
  7173  001F06  C018  F00D         	movff	atoi@n,??_atoi
  7174  001F0A  C019  F00E         	movff	atoi@n+1,??_atoi+1
  7175  001F0E  1E0D               	comf	??_atoi^0,f,c
  7176  001F10  1E0E               	comf	(??_atoi+1)^0,f,c
  7177  001F12  4A0D               	infsnz	??_atoi^0,f,c
  7178  001F14  2A0E               	incf	(??_atoi+1)^0,f,c
  7179  001F16  C00D  F00B         	movff	??_atoi,?_atoi
  7180  001F1A  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  7181  001F1E  EF95  F00F         	goto	l1156
  7182  001F22                     l1153:
  7183  001F22  C018  F00B         	movff	atoi@n,?_atoi
  7184  001F26  C019  F00C         	movff	atoi@n+1,?_atoi+1
  7185  001F2A                     l1156:
  7186  001F2A  0012               	return		;funcret
  7187  001F2C                     __end_of_atoi:
  7188                           	callstack 0
  7189                           
  7190 ;; *************** function _isspace *****************
  7191 ;; Defined at:
  7192 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;  c               2    3[COMRAM] int 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  2    3[COMRAM] int 
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, status,0
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7206 ;;      Params:         2       0       0       0       0       0       0       0       0
  7207 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7208 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7209 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7210 ;;Total ram usage:        7 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    2
  7213 ;; This function calls:
  7214 ;;		Nothing
  7215 ;; This function is called by:
  7216 ;;		_atoi
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           	psect	text40
  7221  002DEC                     __ptext40:
  7222                           	callstack 0
  7223  002DEC                     _isspace:
  7224                           	callstack 22
  7225  002DEC  0E01               	movlw	1
  7226  002DEE  6E0A               	movwf	_isspace$1978^0,c
  7227  002DF0  0E20               	movlw	32
  7228  002DF2  1804               	xorwf	isspace@c^0,w,c
  7229  002DF4  1005               	iorwf	(isspace@c+1)^0,w,c
  7230  002DF6  B4D8               	btfsc	status,2,c
  7231  002DF8  EF00  F017         	goto	u3991
  7232  002DFC  EF02  F017         	goto	u3990
  7233  002E00                     u3991:
  7234  002E00  EF1B  F017         	goto	l4073
  7235  002E04                     u3990:
  7236  002E04  0EF7               	movlw	247
  7237  002E06  6E06               	movwf	??_isspace^0,c
  7238  002E08  0EFF               	movlw	255
  7239  002E0A  6E07               	movwf	(??_isspace+1)^0,c
  7240  002E0C  C004  F008         	movff	isspace@c,??_isspace+2
  7241  002E10  C005  F009         	movff	isspace@c+1,??_isspace+3
  7242  002E14  5006               	movf	??_isspace^0,w,c
  7243  002E16  2608               	addwf	(??_isspace+2)^0,f,c
  7244  002E18  5007               	movf	(??_isspace+1)^0,w,c
  7245  002E1A  2209               	addwfc	(??_isspace+3)^0,f,c
  7246  002E1C  5009               	movf	(??_isspace+3)^0,w,c
  7247  002E1E  E109               	bnz	u4000
  7248  002E20  0E05               	movlw	5
  7249  002E22  5C08               	subwf	(??_isspace+2)^0,w,c
  7250  002E24  A0D8               	btfss	status,0,c
  7251  002E26  EF17  F017         	goto	u4001
  7252  002E2A  EF19  F017         	goto	u4000
  7253  002E2E                     u4001:
  7254  002E2E  EF1B  F017         	goto	l4073
  7255  002E32                     u4000:
  7256  002E32  0E00               	movlw	0
  7257  002E34  6E0A               	movwf	_isspace$1978^0,c
  7258  002E36                     l4073:
  7259  002E36  C00A  F004         	movff	_isspace$1978,?_isspace
  7260  002E3A  6A05               	clrf	(?_isspace+1)^0,c
  7261  002E3C  0012               	return		;funcret
  7262  002E3E                     __end_of_isspace:
  7263                           	callstack 0
  7264                           
  7265 ;; *************** function _isdigit *****************
  7266 ;; Defined at:
  7267 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  c               2    3[COMRAM] int 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;		None
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  2    3[COMRAM] int 
  7274 ;; Registers used:
  7275 ;;		wreg, status,2, status,0
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7281 ;;      Params:         2       0       0       0       0       0       0       0       0
  7282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7283 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7284 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7285 ;;Total ram usage:        6 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; Hardware stack levels required when called:    2
  7288 ;; This function calls:
  7289 ;;		Nothing
  7290 ;; This function is called by:
  7291 ;;		_vfpfcnvrt
  7292 ;;		_atoi
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text41
  7297  003018                     __ptext41:
  7298                           	callstack 0
  7299  003018                     _isdigit:
  7300                           	callstack 23
  7301  003018  0ED0               	movlw	208
  7302  00301A  6E06               	movwf	??_isdigit^0,c
  7303  00301C  0EFF               	movlw	255
  7304  00301E  6E07               	movwf	(??_isdigit+1)^0,c
  7305  003020  C004  F008         	movff	isdigit@c,??_isdigit+2
  7306  003024  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  7307  003028  5006               	movf	??_isdigit^0,w,c
  7308  00302A  2608               	addwf	(??_isdigit+2)^0,f,c
  7309  00302C  5007               	movf	(??_isdigit+1)^0,w,c
  7310  00302E  2209               	addwfc	(??_isdigit+3)^0,f,c
  7311  003030  5009               	movf	(??_isdigit+3)^0,w,c
  7312  003032  E10A               	bnz	u3970
  7313  003034  0E0A               	movlw	10
  7314  003036  5C08               	subwf	(??_isdigit+2)^0,w,c
  7315  003038  A0D8               	btfss	status,0,c
  7316  00303A  EF21  F018         	goto	u3971
  7317  00303E  EF24  F018         	goto	u3970
  7318  003042                     u3971:
  7319  003042  0E01               	movlw	1
  7320  003044  EF25  F018         	goto	u3980
  7321  003048                     u3970:
  7322  003048  0E00               	movlw	0
  7323  00304A                     u3980:
  7324  00304A  6E04               	movwf	?_isdigit^0,c
  7325  00304C  6A05               	clrf	(?_isdigit+1)^0,c
  7326  00304E  0012               	return		;funcret
  7327  003050                     __end_of_isdigit:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function ___wmul *****************
  7331 ;; Defined at:
  7332 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  multiplier      2    3[COMRAM] unsigned int 
  7335 ;;  multiplicand    2    5[COMRAM] unsigned int 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  product         2    7[COMRAM] unsigned int 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  2    3[COMRAM] unsigned int 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0, prodl, prodh
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7347 ;;      Params:         4       0       0       0       0       0       0       0       0
  7348 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7350 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7351 ;;Total ram usage:        6 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    2
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		_appSubGetData
  7358 ;;		_atoi
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text42
  7363  00313C                     __ptext42:
  7364                           	callstack 0
  7365  00313C                     ___wmul:
  7366                           	callstack 22
  7367  00313C  5004               	movf	___wmul@multiplier^0,w,c
  7368  00313E  0206               	mulwf	___wmul@multiplicand^0,c
  7369  003140  CFF3 F008          	movff	prodl,___wmul@product
  7370  003144  CFF4 F009          	movff	prodh,___wmul@product+1
  7371  003148  5004               	movf	___wmul@multiplier^0,w,c
  7372  00314A  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  7373  00314C  50F3               	movf	243,w,c
  7374  00314E  2609               	addwf	(___wmul@product+1)^0,f,c
  7375  003150  5005               	movf	(___wmul@multiplier+1)^0,w,c
  7376  003152  0206               	mulwf	___wmul@multiplicand^0,c
  7377  003154  50F3               	movf	243,w,c
  7378  003156  2609               	addwf	(___wmul@product+1)^0,f,c
  7379  003158  C008  F004         	movff	___wmul@product,?___wmul
  7380  00315C  C009  F005         	movff	___wmul@product+1,?___wmul+1
  7381  003160  0012               	return		;funcret
  7382  003162                     __end_of___wmul:
  7383                           	callstack 0
  7384                           
  7385 ;; *************** function _memset *****************
  7386 ;; Defined at:
  7387 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  dest            2    3[COMRAM] PTR void 
  7390 ;;		 -> datos(25), 
  7391 ;;  c               2    5[COMRAM] int 
  7392 ;;  n               2    7[COMRAM] unsigned int 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  s               2   13[COMRAM] PTR unsigned char 
  7395 ;;		 -> datos(25), 
  7396 ;;  k               2   11[COMRAM] unsigned int 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  2    3[COMRAM] PTR void 
  7399 ;; Registers used:
  7400 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7406 ;;      Params:         6       0       0       0       0       0       0       0       0
  7407 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7408 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7409 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7410 ;;Total ram usage:       12 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    2
  7413 ;; This function calls:
  7414 ;;		Nothing
  7415 ;; This function is called by:
  7416 ;;		_appADC
  7417 ;;		_appBat
  7418 ;;		_appSubGetData
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text43
  7423  0020B4                     __ptext43:
  7424                           	callstack 0
  7425  0020B4                     _memset:
  7426                           	callstack 26
  7427  0020B4  C004  F00E         	movff	memset@dest,memset@s
  7428  0020B8  C005  F00F         	movff	memset@dest+1,memset@s+1
  7429  0020BC  5008               	movf	memset@n^0,w,c
  7430  0020BE  1009               	iorwf	(memset@n+1)^0,w,c
  7431  0020C0  A4D8               	btfss	status,2,c
  7432  0020C2  EF65  F010         	goto	u2621
  7433  0020C6  EF67  F010         	goto	u2620
  7434  0020CA                     u2621:
  7435  0020CA  EF69  F010         	goto	l3005
  7436  0020CE                     u2620:
  7437  0020CE  EF14  F011         	goto	l1007
  7438  0020D2                     l3005:
  7439  0020D2  C00E  FFD9         	movff	memset@s,fsr2l
  7440  0020D6  C00F  FFDA         	movff	memset@s+1,fsr2h
  7441  0020DA  C006  FFDF         	movff	memset@c,indf2
  7442  0020DE  5008               	movf	memset@n^0,w,c
  7443  0020E0  240E               	addwf	memset@s^0,w,c
  7444  0020E2  6E0A               	movwf	??_memset^0,c
  7445  0020E4  5009               	movf	(memset@n+1)^0,w,c
  7446  0020E6  200F               	addwfc	(memset@s+1)^0,w,c
  7447  0020E8  6E0B               	movwf	(??_memset+1)^0,c
  7448  0020EA  0EFF               	movlw	255
  7449  0020EC  240A               	addwf	??_memset^0,w,c
  7450  0020EE  6ED9               	movwf	fsr2l,c
  7451  0020F0  0EFF               	movlw	255
  7452  0020F2  200B               	addwfc	(??_memset+1)^0,w,c
  7453  0020F4  6EDA               	movwf	fsr2h,c
  7454  0020F6  C006  FFDF         	movff	memset@c,indf2
  7455  0020FA  5009               	movf	(memset@n+1)^0,w,c
  7456  0020FC  E107               	bnz	u2631
  7457  0020FE  0E03               	movlw	3
  7458  002100  5C08               	subwf	memset@n^0,w,c
  7459  002102  B0D8               	btfsc	status,0,c
  7460  002104  EF86  F010         	goto	u2631
  7461  002108  EF88  F010         	goto	u2630
  7462  00210C                     u2631:
  7463  00210C  EF8A  F010         	goto	l3011
  7464  002110                     u2630:
  7465  002110  EF14  F011         	goto	l1007
  7466  002114                     l3011:
  7467  002114  EE20 F001          	lfsr	2,1
  7468  002118  500E               	movf	memset@s^0,w,c
  7469  00211A  26D9               	addwf	fsr2l,f,c
  7470  00211C  500F               	movf	(memset@s+1)^0,w,c
  7471  00211E  22DA               	addwfc	fsr2h,f,c
  7472  002120  C006  FFDF         	movff	memset@c,indf2
  7473  002124  EE20 F002          	lfsr	2,2
  7474  002128  500E               	movf	memset@s^0,w,c
  7475  00212A  26D9               	addwf	fsr2l,f,c
  7476  00212C  500F               	movf	(memset@s+1)^0,w,c
  7477  00212E  22DA               	addwfc	fsr2h,f,c
  7478  002130  C006  FFDF         	movff	memset@c,indf2
  7479  002134  5008               	movf	memset@n^0,w,c
  7480  002136  240E               	addwf	memset@s^0,w,c
  7481  002138  6E0A               	movwf	??_memset^0,c
  7482  00213A  5009               	movf	(memset@n+1)^0,w,c
  7483  00213C  200F               	addwfc	(memset@s+1)^0,w,c
  7484  00213E  6E0B               	movwf	(??_memset+1)^0,c
  7485  002140  0EFE               	movlw	254
  7486  002142  240A               	addwf	??_memset^0,w,c
  7487  002144  6ED9               	movwf	fsr2l,c
  7488  002146  0EFF               	movlw	255
  7489  002148  200B               	addwfc	(??_memset+1)^0,w,c
  7490  00214A  6EDA               	movwf	fsr2h,c
  7491  00214C  C006  FFDF         	movff	memset@c,indf2
  7492  002150  5008               	movf	memset@n^0,w,c
  7493  002152  240E               	addwf	memset@s^0,w,c
  7494  002154  6E0A               	movwf	??_memset^0,c
  7495  002156  5009               	movf	(memset@n+1)^0,w,c
  7496  002158  200F               	addwfc	(memset@s+1)^0,w,c
  7497  00215A  6E0B               	movwf	(??_memset+1)^0,c
  7498  00215C  0EFD               	movlw	253
  7499  00215E  240A               	addwf	??_memset^0,w,c
  7500  002160  6ED9               	movwf	fsr2l,c
  7501  002162  0EFF               	movlw	255
  7502  002164  200B               	addwfc	(??_memset+1)^0,w,c
  7503  002166  6EDA               	movwf	fsr2h,c
  7504  002168  C006  FFDF         	movff	memset@c,indf2
  7505  00216C  5009               	movf	(memset@n+1)^0,w,c
  7506  00216E  E107               	bnz	u2641
  7507  002170  0E07               	movlw	7
  7508  002172  5C08               	subwf	memset@n^0,w,c
  7509  002174  B0D8               	btfsc	status,0,c
  7510  002176  EFBF  F010         	goto	u2641
  7511  00217A  EFC1  F010         	goto	u2640
  7512  00217E                     u2641:
  7513  00217E  EFC3  F010         	goto	l3017
  7514  002182                     u2640:
  7515  002182  EF14  F011         	goto	l1007
  7516  002186                     l3017:
  7517  002186  EE20 F003          	lfsr	2,3
  7518  00218A  500E               	movf	memset@s^0,w,c
  7519  00218C  26D9               	addwf	fsr2l,f,c
  7520  00218E  500F               	movf	(memset@s+1)^0,w,c
  7521  002190  22DA               	addwfc	fsr2h,f,c
  7522  002192  C006  FFDF         	movff	memset@c,indf2
  7523  002196  5008               	movf	memset@n^0,w,c
  7524  002198  240E               	addwf	memset@s^0,w,c
  7525  00219A  6E0A               	movwf	??_memset^0,c
  7526  00219C  5009               	movf	(memset@n+1)^0,w,c
  7527  00219E  200F               	addwfc	(memset@s+1)^0,w,c
  7528  0021A0  6E0B               	movwf	(??_memset+1)^0,c
  7529  0021A2  0EFC               	movlw	252
  7530  0021A4  240A               	addwf	??_memset^0,w,c
  7531  0021A6  6ED9               	movwf	fsr2l,c
  7532  0021A8  0EFF               	movlw	255
  7533  0021AA  200B               	addwfc	(??_memset+1)^0,w,c
  7534  0021AC  6EDA               	movwf	fsr2h,c
  7535  0021AE  C006  FFDF         	movff	memset@c,indf2
  7536  0021B2  5009               	movf	(memset@n+1)^0,w,c
  7537  0021B4  E107               	bnz	u2651
  7538  0021B6  0E09               	movlw	9
  7539  0021B8  5C08               	subwf	memset@n^0,w,c
  7540  0021BA  B0D8               	btfsc	status,0,c
  7541  0021BC  EFE2  F010         	goto	u2651
  7542  0021C0  EFE4  F010         	goto	u2650
  7543  0021C4                     u2651:
  7544  0021C4  EFE6  F010         	goto	l3023
  7545  0021C8                     u2650:
  7546  0021C8  EF14  F011         	goto	l1007
  7547  0021CC                     l3023:
  7548  0021CC  C00E  F00A         	movff	memset@s,??_memset
  7549  0021D0  C00F  F00B         	movff	memset@s+1,??_memset+1
  7550  0021D4  1E0A               	comf	??_memset^0,f,c
  7551  0021D6  1E0B               	comf	(??_memset+1)^0,f,c
  7552  0021D8  4A0A               	infsnz	??_memset^0,f,c
  7553  0021DA  2A0B               	incf	(??_memset+1)^0,f,c
  7554  0021DC  0E03               	movlw	3
  7555  0021DE  140A               	andwf	??_memset^0,w,c
  7556  0021E0  6E0C               	movwf	memset@k^0,c
  7557  0021E2  6A0D               	clrf	(memset@k+1)^0,c
  7558  0021E4  500C               	movf	memset@k^0,w,c
  7559  0021E6  260E               	addwf	memset@s^0,f,c
  7560  0021E8  500D               	movf	(memset@k+1)^0,w,c
  7561  0021EA  220F               	addwfc	(memset@s+1)^0,f,c
  7562  0021EC  500C               	movf	memset@k^0,w,c
  7563  0021EE  5E08               	subwf	memset@n^0,f,c
  7564  0021F0  500D               	movf	(memset@k+1)^0,w,c
  7565  0021F2  5A09               	subwfb	(memset@n+1)^0,f,c
  7566  0021F4  0EFC               	movlw	252
  7567  0021F6  1608               	andwf	memset@n^0,f,c
  7568  0021F8  0EFF               	movlw	255
  7569  0021FA  1609               	andwf	(memset@n+1)^0,f,c
  7570  0021FC  EF0B  F011         	goto	l3031
  7571  002200                     l3025:
  7572  002200  C00E  FFD9         	movff	memset@s,fsr2l
  7573  002204  C00F  FFDA         	movff	memset@s+1,fsr2h
  7574  002208  C006  FFDF         	movff	memset@c,indf2
  7575  00220C  0608               	decf	memset@n^0,f,c
  7576  00220E  A0D8               	btfss	status,0,c
  7577  002210  0609               	decf	(memset@n+1)^0,f,c
  7578  002212  4A0E               	infsnz	memset@s^0,f,c
  7579  002214  2A0F               	incf	(memset@s+1)^0,f,c
  7580  002216                     l3031:
  7581  002216  5008               	movf	memset@n^0,w,c
  7582  002218  1009               	iorwf	(memset@n+1)^0,w,c
  7583  00221A  A4D8               	btfss	status,2,c
  7584  00221C  EF12  F011         	goto	u2661
  7585  002220  EF14  F011         	goto	u2660
  7586  002224                     u2661:
  7587  002224  EF00  F011         	goto	l3025
  7588  002228                     u2660:
  7589  002228                     l1007:
  7590  002228  0012               	return		;funcret
  7591  00222A                     __end_of_memset:
  7592                           	callstack 0
  7593                           
  7594 ;; *************** function _Lcd_Out *****************
  7595 ;; Defined at:
  7596 ;;		line 95 in file "flex_lcd.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  y               1    wreg     unsigned char 
  7599 ;;  x               1    6[COMRAM] unsigned char 
  7600 ;;  buffer          2    7[COMRAM] PTR const char 
  7601 ;;		 -> STR_9(17), STR_8(12), STR_6(14), appElemts@dataout(6), 
  7602 ;;		 -> STR_4(6), STR_3(12), datos.display(16), datos(25), 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  y               1   11[COMRAM] unsigned char 
  7605 ;;  data            1   12[COMRAM] unsigned char 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  1    wreg      void 
  7608 ;; Registers used:
  7609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7615 ;;      Params:         3       0       0       0       0       0       0       0       0
  7616 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7617 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7618 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7619 ;;Total ram usage:        7 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    3
  7622 ;; This function calls:
  7623 ;;		_Lcd_Chr_CP
  7624 ;;		_Lcd_Cmd
  7625 ;; This function is called by:
  7626 ;;		_appADC
  7627 ;;		_appBat
  7628 ;;		_appLCD_Init
  7629 ;;		_appElemts
  7630 ;;		_appSubGetData
  7631 ;;		_warning
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text44
  7636  00280A                     __ptext44:
  7637                           	callstack 0
  7638  00280A                     _Lcd_Out:
  7639                           	callstack 26
  7640                           
  7641                           ;incstack = 0
  7642                           ;Lcd_Out@y stored from wreg
  7643  00280A  6E0C               	movwf	Lcd_Out@y^0,c
  7644  00280C                     
  7645                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  7646  00280C  EF1C  F014         	goto	l3057
  7647  002810                     l3047:
  7648                           
  7649                           ;flex_lcd.c: 101:             data = 128 + x;
  7650  002810  5007               	movf	Lcd_Out@x^0,w,c
  7651  002812  0F80               	addlw	128
  7652  002814  6E0D               	movwf	Lcd_Out@data^0,c
  7653                           
  7654                           ;flex_lcd.c: 102:             break;
  7655  002816  EF39  F014         	goto	l3059
  7656  00281A                     l3049:
  7657                           
  7658                           ;flex_lcd.c: 104:             data = 192 + x;
  7659  00281A  5007               	movf	Lcd_Out@x^0,w,c
  7660  00281C  0FC0               	addlw	192
  7661  00281E  6E0D               	movwf	Lcd_Out@data^0,c
  7662                           
  7663                           ;flex_lcd.c: 105:             break;
  7664  002820  EF39  F014         	goto	l3059
  7665  002824                     l3051:
  7666                           
  7667                           ;flex_lcd.c: 107:             data = 148 + x;
  7668  002824  5007               	movf	Lcd_Out@x^0,w,c
  7669  002826  0F94               	addlw	148
  7670  002828  6E0D               	movwf	Lcd_Out@data^0,c
  7671                           
  7672                           ;flex_lcd.c: 108:             break;
  7673  00282A  EF39  F014         	goto	l3059
  7674  00282E                     l3053:
  7675                           
  7676                           ;flex_lcd.c: 110:             data = 212 + x;
  7677  00282E  5007               	movf	Lcd_Out@x^0,w,c
  7678  002830  0FD4               	addlw	212
  7679  002832  6E0D               	movwf	Lcd_Out@data^0,c
  7680                           
  7681                           ;flex_lcd.c: 111:             break;
  7682  002834  EF39  F014         	goto	l3059
  7683  002838                     l3057:
  7684  002838  500C               	movf	Lcd_Out@y^0,w,c
  7685  00283A  6E0A               	movwf	??_Lcd_Out^0,c
  7686  00283C  6A0B               	clrf	(??_Lcd_Out+1)^0,c
  7687                           
  7688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7689                           ; Switch size 1, requested type "simple"
  7690                           ; Number of cases is 1, Range of values is 0 to 0
  7691                           ; switch strategies available:
  7692                           ; Name         Instructions Cycles
  7693                           ; simple_byte            4     3 (average)
  7694                           ;	Chosen strategy is simple_byte
  7695  00283E  500B               	movf	(??_Lcd_Out+1)^0,w,c
  7696  002840  0A00               	xorlw	0	; case 0
  7697  002842  B4D8               	btfsc	status,2,c
  7698  002844  EF26  F014         	goto	l4513
  7699  002848  EF39  F014         	goto	l3059
  7700  00284C                     l4513:
  7701                           
  7702                           ; Switch size 1, requested type "simple"
  7703                           ; Number of cases is 4, Range of values is 1 to 4
  7704                           ; switch strategies available:
  7705                           ; Name         Instructions Cycles
  7706                           ; simple_byte           13     7 (average)
  7707                           ;	Chosen strategy is simple_byte
  7708  00284C  500A               	movf	??_Lcd_Out^0,w,c
  7709  00284E  0A01               	xorlw	1	; case 1
  7710  002850  B4D8               	btfsc	status,2,c
  7711  002852  EF08  F014         	goto	l3047
  7712  002856  0A03               	xorlw	3	; case 2
  7713  002858  B4D8               	btfsc	status,2,c
  7714  00285A  EF0D  F014         	goto	l3049
  7715  00285E  0A01               	xorlw	1	; case 3
  7716  002860  B4D8               	btfsc	status,2,c
  7717  002862  EF12  F014         	goto	l3051
  7718  002866  0A07               	xorlw	7	; case 4
  7719  002868  B4D8               	btfsc	status,2,c
  7720  00286A  EF17  F014         	goto	l3053
  7721  00286E  EF39  F014         	goto	l3059
  7722  002872                     l3059:
  7723                           
  7724                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  7725  002872  500D               	movf	Lcd_Out@data^0,w,c
  7726  002874  EC6E  F012         	call	_Lcd_Cmd
  7727                           
  7728                           ;flex_lcd.c: 116:     while(*buffer)
  7729  002878  EF52  F014         	goto	l3065
  7730  00287C                     l3061:
  7731                           
  7732                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  7733  00287C  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7734  002880  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7735  002884  6AF8               	clrf	tblptru,c
  7736  002886  0E07               	movlw	(high __ramtop+-1)
  7737  002888  64F7               	cpfsgt	tblptrh,c
  7738  00288A  D003               	bra	u2677
  7739  00288C  0008               	tblrd		*
  7740  00288E  50F5               	movf	tablat,w,c
  7741  002890  D005               	bra	u2670
  7742  002892                     u2677:
  7743  002892  CFF6 FFE1          	movff	tblptrl,fsr1l
  7744  002896  CFF7 FFE2          	movff	tblptrh,fsr1h
  7745  00289A  50E7               	movf	indf1,w,c
  7746  00289C                     u2670:
  7747  00289C  ECC7  F011         	call	_Lcd_Chr_CP
  7748  0028A0                     
  7749                           ;flex_lcd.c: 119:         buffer++;
  7750  0028A0  4A08               	infsnz	Lcd_Out@buffer^0,f,c
  7751  0028A2  2A09               	incf	(Lcd_Out@buffer+1)^0,f,c
  7752  0028A4                     l3065:
  7753                           
  7754                           ;flex_lcd.c: 116:     while(*buffer)
  7755  0028A4  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7756  0028A8  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7757  0028AC  6AF8               	clrf	tblptru,c
  7758  0028AE  0E07               	movlw	(high __ramtop+-1)
  7759  0028B0  64F7               	cpfsgt	tblptrh,c
  7760  0028B2  D003               	bra	u2687
  7761  0028B4  0008               	tblrd		*
  7762  0028B6  50F5               	movf	tablat,w,c
  7763  0028B8  D005               	bra	u2680
  7764  0028BA                     u2687:
  7765  0028BA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7766  0028BE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7767  0028C2  50E7               	movf	indf1,w,c
  7768  0028C4                     u2680:
  7769  0028C4  0900               	iorlw	0
  7770  0028C6  A4D8               	btfss	status,2,c
  7771  0028C8  EF68  F014         	goto	u2691
  7772  0028CC  EF6A  F014         	goto	u2690
  7773  0028D0                     u2691:
  7774  0028D0  EF3E  F014         	goto	l3061
  7775  0028D4                     u2690:
  7776  0028D4  0012               	return		;funcret
  7777  0028D6                     __end_of_Lcd_Out:
  7778                           	callstack 0
  7779                           
  7780 ;; *************** function _Lcd_Cmd *****************
  7781 ;; Defined at:
  7782 ;;		line 175 in file "flex_lcd.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  data            1    wreg     unsigned char 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  data            1    5[COMRAM] unsigned char 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      void 
  7789 ;; Registers used:
  7790 ;;		wreg, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7796 ;;      Params:         0       0       0       0       0       0       0       0       0
  7797 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7798 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7799 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7800 ;;Total ram usage:        3 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    2
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_Lcd_Init
  7807 ;;		_Lcd_Out
  7808 ;;		_appLCD_Init
  7809 ;;		_appGetElements
  7810 ;;		_warning
  7811 ;;		_Lcd_Out2
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text45
  7816  0024DC                     __ptext45:
  7817                           	callstack 0
  7818  0024DC                     _Lcd_Cmd:
  7819                           	callstack 26
  7820                           
  7821                           ;incstack = 0
  7822                           ;Lcd_Cmd@data stored from wreg
  7823  0024DC  6E06               	movwf	Lcd_Cmd@data^0,c
  7824  0024DE                     
  7825                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  7826  0024DE  968C               	bcf	140,3,c	;volatile
  7827  0024E0  948C               	bcf	140,2,c	;volatile
  7828  0024E2                     
  7829                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  7830  0024E2  6A04               	clrf	??_Lcd_Cmd^0,c
  7831  0024E4  AE06               	btfss	Lcd_Cmd@data^0,7,c
  7832  0024E6  D001               	bra	u2515
  7833  0024E8  2A04               	incf	??_Lcd_Cmd^0,f,c
  7834  0024EA                     u2515:
  7835  0024EA  0E01               	movlw	1
  7836  0024EC  1604               	andwf	??_Lcd_Cmd^0,f,c
  7837  0024EE  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7838  0024F0  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7839  0024F2  508C               	movf	140,w,c	;volatile
  7840  0024F4  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7841  0024F6  0B7F               	andlw	-129
  7842  0024F8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7843  0024FA  6E8C               	movwf	140,c	;volatile
  7844                           
  7845                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  7846  0024FC  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7847  002500  0E06               	movlw	6
  7848  002502  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7849  002504                     u2525:
  7850  002504  90D8               	bcf	status,0,c
  7851  002506  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7852  002508  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7853  00250A  EF82  F012         	goto	u2525
  7854  00250E  0E01               	movlw	1
  7855  002510  1604               	andwf	??_Lcd_Cmd^0,f,c
  7856  002512  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7857  002514  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7858  002516  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7859  002518  508C               	movf	140,w,c	;volatile
  7860  00251A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7861  00251C  0BBF               	andlw	-65
  7862  00251E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7863  002520  6E8C               	movwf	140,c	;volatile
  7864                           
  7865                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  7866  002522  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7867  002526  0E05               	movlw	5
  7868  002528  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7869  00252A                     u2535:
  7870  00252A  90D8               	bcf	status,0,c
  7871  00252C  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7872  00252E  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7873  002530  EF95  F012         	goto	u2535
  7874  002534  0E01               	movlw	1
  7875  002536  1604               	andwf	??_Lcd_Cmd^0,f,c
  7876  002538  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7877  00253A  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7878  00253C  508C               	movf	140,w,c	;volatile
  7879  00253E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7880  002540  0BDF               	andlw	-33
  7881  002542  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7882  002544  6E8C               	movwf	140,c	;volatile
  7883                           
  7884                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  7885  002546  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7886  00254A  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7887  00254C  0E0F               	movlw	15
  7888  00254E  1604               	andwf	??_Lcd_Cmd^0,f,c
  7889  002550  0E01               	movlw	1
  7890  002552  1604               	andwf	??_Lcd_Cmd^0,f,c
  7891  002554  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7892  002556  508C               	movf	140,w,c	;volatile
  7893  002558  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7894  00255A  0BEF               	andlw	-17
  7895  00255C  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7896  00255E  6E8C               	movwf	140,c	;volatile
  7897  002560                     
  7898                           ;flex_lcd.c: 182:     _delay(10);
  7899  002560  0E03               	movlw	3
  7900  002562                     u4627:
  7901  002562  2EE8               	decfsz	wreg,f,c
  7902  002564  D7FE               	bra	u4627
  7903  002566  F000               	nop	
  7904  002568                     
  7905                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  7906  002568  868C               	bsf	140,3,c	;volatile
  7907  00256A                     
  7908                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7909  00256A  0E05               	movlw	5
  7910  00256C                     u4637:
  7911  00256C  2EE8               	decfsz	wreg,f,c
  7912  00256E  D7FE               	bra	u4637
  7913  002570                     
  7914                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  7915  002570  968C               	bcf	140,3,c	;volatile
  7916                           
  7917                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  7918  002572  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7919  002576  90D8               	bcf	status,0,c
  7920  002578  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7921  00257A  90D8               	bcf	status,0,c
  7922  00257C  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7923  00257E  90D8               	bcf	status,0,c
  7924  002580  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7925  002582  0E01               	movlw	1
  7926  002584  1604               	andwf	??_Lcd_Cmd^0,f,c
  7927  002586  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7928  002588  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7929  00258A  508C               	movf	140,w,c	;volatile
  7930  00258C  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7931  00258E  0B7F               	andlw	-129
  7932  002590  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7933  002592  6E8C               	movwf	140,c	;volatile
  7934                           
  7935                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  7936  002594  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7937  002598  90D8               	bcf	status,0,c
  7938  00259A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7939  00259C  90D8               	bcf	status,0,c
  7940  00259E  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7941  0025A0  0E01               	movlw	1
  7942  0025A2  1604               	andwf	??_Lcd_Cmd^0,f,c
  7943  0025A4  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7944  0025A6  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7945  0025A8  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7946  0025AA  508C               	movf	140,w,c	;volatile
  7947  0025AC  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7948  0025AE  0BBF               	andlw	-65
  7949  0025B0  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7950  0025B2  6E8C               	movwf	140,c	;volatile
  7951                           
  7952                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  7953  0025B4  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7954  0025B8  90D8               	bcf	status,0,c
  7955  0025BA  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7956  0025BC  0E01               	movlw	1
  7957  0025BE  1604               	andwf	??_Lcd_Cmd^0,f,c
  7958  0025C0  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7959  0025C2  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7960  0025C4  508C               	movf	140,w,c	;volatile
  7961  0025C6  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7962  0025C8  0BDF               	andlw	-33
  7963  0025CA  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7964  0025CC  6E8C               	movwf	140,c	;volatile
  7965                           
  7966                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  7967  0025CE  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7968  0025D2  0E01               	movlw	1
  7969  0025D4  1604               	andwf	??_Lcd_Cmd^0,f,c
  7970  0025D6  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7971  0025D8  508C               	movf	140,w,c	;volatile
  7972  0025DA  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7973  0025DC  0BEF               	andlw	-17
  7974  0025DE  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7975  0025E0  6E8C               	movwf	140,c	;volatile
  7976  0025E2                     
  7977                           ;flex_lcd.c: 190:     _delay(10);
  7978  0025E2  0E03               	movlw	3
  7979  0025E4                     u4647:
  7980  0025E4  2EE8               	decfsz	wreg,f,c
  7981  0025E6  D7FE               	bra	u4647
  7982  0025E8  F000               	nop	
  7983  0025EA                     
  7984                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  7985  0025EA  868C               	bsf	140,3,c	;volatile
  7986  0025EC                     
  7987                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7988  0025EC  0E05               	movlw	5
  7989  0025EE                     u4657:
  7990  0025EE  2EE8               	decfsz	wreg,f,c
  7991  0025F0  D7FE               	bra	u4657
  7992  0025F2                     
  7993                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  7994  0025F2  968C               	bcf	140,3,c	;volatile
  7995  0025F4                     
  7996                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7997  0025F4  0E16               	movlw	22
  7998  0025F6  6E04               	movwf	??_Lcd_Cmd^0,c
  7999  0025F8  0E6C               	movlw	108
  8000  0025FA                     u4667:
  8001  0025FA  2EE8               	decfsz	wreg,f,c
  8002  0025FC  D7FE               	bra	u4667
  8003  0025FE  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  8004  002600  D7FC               	bra	u4667
  8005  002602  D000               	nop2	
  8006  002604  0012               	return		;funcret
  8007  002606                     __end_of_Lcd_Cmd:
  8008                           	callstack 0
  8009                           
  8010 ;; *************** function _Lcd_Chr_CP *****************
  8011 ;; Defined at:
  8012 ;;		line 151 in file "flex_lcd.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;  data            1    wreg     char 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;  data            1    5[COMRAM] char 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, status,2, status,0
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8026 ;;      Params:         0       0       0       0       0       0       0       0       0
  8027 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8028 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8029 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8030 ;;Total ram usage:        3 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; Hardware stack levels required when called:    2
  8033 ;; This function calls:
  8034 ;;		Nothing
  8035 ;; This function is called by:
  8036 ;;		_Lcd_Out
  8037 ;;		_Lcd_Out2
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text46
  8042  00238E                     __ptext46:
  8043                           	callstack 0
  8044  00238E                     _Lcd_Chr_CP:
  8045                           	callstack 26
  8046                           
  8047                           ;incstack = 0
  8048                           ;Lcd_Chr_CP@data stored from wreg
  8049  00238E  6E06               	movwf	Lcd_Chr_CP@data^0,c
  8050  002390                     
  8051                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  8052  002390  968C               	bcf	140,3,c	;volatile
  8053                           
  8054                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  8055  002392  848C               	bsf	140,2,c	;volatile
  8056  002394                     
  8057                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  8058  002394  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8059  002398  0E07               	movlw	7
  8060  00239A  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8061  00239C                     u2545:
  8062  00239C  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8063  00239E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8064  0023A0  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8065  0023A2  EFCE  F011         	goto	u2545
  8066  0023A6  0E01               	movlw	1
  8067  0023A8  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8068  0023AA  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8069  0023AC  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8070  0023AE  508C               	movf	140,w,c	;volatile
  8071  0023B0  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8072  0023B2  0B7F               	andlw	-129
  8073  0023B4  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8074  0023B6  6E8C               	movwf	140,c	;volatile
  8075                           
  8076                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  8077  0023B8  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8078  0023BC  0E06               	movlw	6
  8079  0023BE  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8080  0023C0                     u2555:
  8081  0023C0  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8082  0023C2  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8083  0023C4  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8084  0023C6  EFE0  F011         	goto	u2555
  8085  0023CA  0E01               	movlw	1
  8086  0023CC  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8087  0023CE  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8088  0023D0  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8089  0023D2  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8090  0023D4  508C               	movf	140,w,c	;volatile
  8091  0023D6  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8092  0023D8  0BBF               	andlw	-65
  8093  0023DA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8094  0023DC  6E8C               	movwf	140,c	;volatile
  8095                           
  8096                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  8097  0023DE  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8098  0023E2  0E05               	movlw	5
  8099  0023E4  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8100  0023E6                     u2565:
  8101  0023E6  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8102  0023E8  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8103  0023EA  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8104  0023EC  EFF3  F011         	goto	u2565
  8105  0023F0  0E01               	movlw	1
  8106  0023F2  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8107  0023F4  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8108  0023F6  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8109  0023F8  508C               	movf	140,w,c	;volatile
  8110  0023FA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8111  0023FC  0BDF               	andlw	-33
  8112  0023FE  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8113  002400  6E8C               	movwf	140,c	;volatile
  8114                           
  8115                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  8116  002402  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8117  002406  0E04               	movlw	4
  8118  002408  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8119  00240A                     u2575:
  8120  00240A  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8121  00240C  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8122  00240E  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8123  002410  EF05  F012         	goto	u2575
  8124  002414  0E01               	movlw	1
  8125  002416  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8126  002418  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8127  00241A  508C               	movf	140,w,c	;volatile
  8128  00241C  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8129  00241E  0BEF               	andlw	-17
  8130  002420  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8131  002422  6E8C               	movwf	140,c	;volatile
  8132  002424                     
  8133                           ;flex_lcd.c: 159:     _delay(10);
  8134  002424  0E03               	movlw	3
  8135  002426                     u4677:
  8136  002426  2EE8               	decfsz	wreg,f,c
  8137  002428  D7FE               	bra	u4677
  8138  00242A  F000               	nop	
  8139  00242C                     
  8140                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  8141  00242C  868C               	bsf	140,3,c	;volatile
  8142  00242E                     
  8143                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8144  00242E  0E05               	movlw	5
  8145  002430                     u4687:
  8146  002430  2EE8               	decfsz	wreg,f,c
  8147  002432  D7FE               	bra	u4687
  8148  002434                     
  8149                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  8150  002434  968C               	bcf	140,3,c	;volatile
  8151                           
  8152                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  8153  002436  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8154  00243A  0E03               	movlw	3
  8155  00243C  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8156  00243E                     u2585:
  8157  00243E  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8158  002440  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8159  002442  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8160  002444  EF1F  F012         	goto	u2585
  8161  002448  0E01               	movlw	1
  8162  00244A  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8163  00244C  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8164  00244E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8165  002450  508C               	movf	140,w,c	;volatile
  8166  002452  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8167  002454  0B7F               	andlw	-129
  8168  002456  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8169  002458  6E8C               	movwf	140,c	;volatile
  8170                           
  8171                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  8172  00245A  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8173  00245E  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8174  002460  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8175  002462  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8176  002464  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8177  002466  0E01               	movlw	1
  8178  002468  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8179  00246A  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8180  00246C  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8181  00246E  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8182  002470  508C               	movf	140,w,c	;volatile
  8183  002472  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8184  002474  0BBF               	andlw	-65
  8185  002476  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8186  002478  6E8C               	movwf	140,c	;volatile
  8187                           
  8188                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  8189  00247A  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8190  00247E  0E01               	movlw	1
  8191  002480  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8192  002482                     u2595:
  8193  002482  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8194  002484  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8195  002486  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8196  002488  EF41  F012         	goto	u2595
  8197  00248C  0E01               	movlw	1
  8198  00248E  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8199  002490  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8200  002492  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8201  002494  508C               	movf	140,w,c	;volatile
  8202  002496  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8203  002498  0BDF               	andlw	-33
  8204  00249A  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8205  00249C  6E8C               	movwf	140,c	;volatile
  8206                           
  8207                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  8208  00249E  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8209  0024A2  0E01               	movlw	1
  8210  0024A4  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8211  0024A6  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8212  0024A8  508C               	movf	140,w,c	;volatile
  8213  0024AA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8214  0024AC  0BEF               	andlw	-17
  8215  0024AE  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8216  0024B0  6E8C               	movwf	140,c	;volatile
  8217  0024B2                     
  8218                           ;flex_lcd.c: 167:     _delay(10);
  8219  0024B2  0E03               	movlw	3
  8220  0024B4                     u4697:
  8221  0024B4  2EE8               	decfsz	wreg,f,c
  8222  0024B6  D7FE               	bra	u4697
  8223  0024B8  F000               	nop	
  8224  0024BA                     
  8225                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  8226  0024BA  868C               	bsf	140,3,c	;volatile
  8227  0024BC                     
  8228                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8229  0024BC  0E05               	movlw	5
  8230  0024BE                     u4707:
  8231  0024BE  2EE8               	decfsz	wreg,f,c
  8232  0024C0  D7FE               	bra	u4707
  8233  0024C2                     
  8234                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  8235  0024C2  968C               	bcf	140,3,c	;volatile
  8236  0024C4                     
  8237                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8238  0024C4  0E05               	movlw	5
  8239  0024C6                     u4717:
  8240  0024C6  2EE8               	decfsz	wreg,f,c
  8241  0024C8  D7FE               	bra	u4717
  8242  0024CA                     
  8243                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8244  0024CA  0E16               	movlw	22
  8245  0024CC  6E04               	movwf	??_Lcd_Chr_CP^0,c
  8246  0024CE  0E6C               	movlw	108
  8247  0024D0                     u4727:
  8248  0024D0  2EE8               	decfsz	wreg,f,c
  8249  0024D2  D7FE               	bra	u4727
  8250  0024D4  2E04               	decfsz	??_Lcd_Chr_CP^0,f,c
  8251  0024D6  D7FC               	bra	u4727
  8252  0024D8  D000               	nop2	
  8253  0024DA  0012               	return		;funcret
  8254  0024DC                     __end_of_Lcd_Chr_CP:
  8255                           	callstack 0
  8256                           
  8257 ;; *************** function _isrL *****************
  8258 ;; Defined at:
  8259 ;;		line 98 in file "app.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;		None
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      void 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8273 ;;      Params:         0       0       0       0       0       0       0       0       0
  8274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8275 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8276 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8277 ;;Total ram usage:        3 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    1
  8280 ;; This function calls:
  8281 ;;		Nothing
  8282 ;; This function is called by:
  8283 ;;		Interrupt level 1
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287                           	psect	intcodelo
  8288  000018                     __pintcodelo:
  8289                           	callstack 0
  8290  000018                     _isrL:
  8291                           	callstack 19
  8292                           
  8293                           ;incstack = 0
  8294  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8295  00001A  CFD8 F001          	movff	status,??_isrL
  8296  00001E  CFE8 F002          	movff	wreg,??_isrL+1
  8297  000022  CFE0 F003          	movff	bsr,??_isrL+2
  8298  000026                     
  8299                           ;app.c: 100:     if(TMR3IE && TMR3IF)
  8300  000026  A2A0               	btfss	4000,1,c	;volatile
  8301  000028  EF18  F000         	goto	i1u444_21
  8302  00002C  EF1A  F000         	goto	i1u444_20
  8303  000030                     i1u444_21:
  8304  000030  EF4D  F000         	goto	i1l323
  8305  000034                     i1u444_20:
  8306  000034  A2A1               	btfss	4001,1,c	;volatile
  8307  000036  EF1F  F000         	goto	i1u445_21
  8308  00003A  EF21  F000         	goto	i1u445_20
  8309  00003E                     i1u445_21:
  8310  00003E  EF4D  F000         	goto	i1l323
  8311  000042                     i1u445_20:
  8312  000042                     
  8313                           ;app.c: 101:     {;app.c: 102:         TMR3IF = 0;
  8314  000042  92A1               	bcf	4001,1,c	;volatile
  8315  000044                     
  8316                           ;app.c: 103:         datos.counter++;
  8317  000044  0100               	movlb	0	; () banked
  8318  000046  2BB8               	incf	_datos& (0+255),f,b
  8319  000048                     
  8320                           ; BSR set to: 0
  8321                           ;app.c: 104:         if((datos.counter == 10) && (datos.state == 0))
  8322  000048  0E0A               	movlw	10
  8323  00004A  19B8               	xorwf	_datos& (0+255),w,b
  8324  00004C  A4D8               	btfss	status,2,c
  8325  00004E  EF2B  F000         	goto	i1u446_21
  8326  000052  EF2D  F000         	goto	i1u446_20
  8327  000056                     i1u446_21:
  8328  000056  EF3D  F000         	goto	i1l4413
  8329  00005A                     i1u446_20:
  8330  00005A                     
  8331                           ; BSR set to: 0
  8332  00005A  51BB               	movf	(_datos+3)& (0+255),w,b
  8333  00005C  A4D8               	btfss	status,2,c
  8334  00005E  EF33  F000         	goto	i1u447_21
  8335  000062  EF35  F000         	goto	i1u447_20
  8336  000066                     i1u447_21:
  8337  000066  EF3D  F000         	goto	i1l4413
  8338  00006A                     i1u447_20:
  8339  00006A                     
  8340                           ; BSR set to: 0
  8341                           ;app.c: 105:         {;app.c: 106:             datos.counter = 0;
  8342  00006A  0E00               	movlw	0
  8343  00006C  6FB8               	movwf	_datos& (0+255),b
  8344  00006E                     
  8345                           ; BSR set to: 0
  8346                           ;app.c: 107:             datos.nextFunc = appStateRecolectData;
  8347  00006E  0E50               	movlw	low _appStateRecolectData
  8348  000070  6FCF               	movwf	(_datos+23)& (0+255),b
  8349  000072  0E30               	movlw	high _appStateRecolectData
  8350  000074  6FD0               	movwf	(_datos+24)& (0+255),b
  8351                           
  8352                           ;app.c: 108:         }
  8353  000076  EF49  F000         	goto	i1l4417
  8354  00007A                     i1l4413:
  8355                           
  8356                           ; BSR set to: 0
  8357  00007A  05BB               	decf	(_datos+3)& (0+255),w,b
  8358  00007C  A4D8               	btfss	status,2,c
  8359  00007E  EF43  F000         	goto	i1u448_21
  8360  000082  EF45  F000         	goto	i1u448_20
  8361  000086                     i1u448_21:
  8362  000086  EF49  F000         	goto	i1l4417
  8363  00008A                     i1u448_20:
  8364  00008A                     
  8365                           ; BSR set to: 0
  8366                           ;app.c: 110:         {;app.c: 111:             datos.nextFunc = appGetElements;
  8367  00008A  0EC8               	movlw	low _appGetElements
  8368  00008C  6FCF               	movwf	(_datos+23)& (0+255),b
  8369  00008E  0E2C               	movlw	high _appGetElements
  8370  000090  6FD0               	movwf	(_datos+24)& (0+255),b
  8371  000092                     i1l4417:
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;app.c: 113:         TMR3 = 20536;
  8375  000092  0E50               	movlw	80
  8376  000094  6EB3               	movwf	179,c	;volatile
  8377  000096  0E38               	movlw	56
  8378  000098  6EB2               	movwf	178,c	;volatile
  8379  00009A                     i1l323:
  8380  00009A  C003  FFE0         	movff	??_isrL+2,bsr
  8381  00009E  C002  FFE8         	movff	??_isrL+1,wreg
  8382  0000A2  C001  FFD8         	movff	??_isrL,status
  8383  0000A6  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8384  0000A8  0010               	retfie	
  8385  0000AA                     __end_of_isrL:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function _isrH *****************
  8389 ;; Defined at:
  8390 ;;		line 116 in file "app.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		Interrupt level 2
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	intcode
  8418  000008                     __pintcode:
  8419                           	callstack 0
  8420  000008                     _isrH:
  8421                           	callstack 19
  8422                           
  8423                           ;incstack = 0
  8424  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8425  00000A  ED5E  F018         	call	int_func,f	;refresh shadow registers
  8426  00000E                     
  8427                           	psect	intcode_body
  8428  0030BC                     __pintcode_body:
  8429                           	callstack 19
  8430  0030BC                     int_func:
  8431                           	callstack 19
  8432  0030BC  0006               	pop		; remove dummy address from shadow register refresh
  8433  0030BE                     
  8434                           ;app.c: 118:     if(TMR0IE && TMR0IF)
  8435  0030BE  AAF2               	btfss	4082,5,c	;volatile
  8436  0030C0  EF64  F018         	goto	i2u371_41
  8437  0030C4  EF66  F018         	goto	i2u371_40
  8438  0030C8                     i2u371_41:
  8439  0030C8  EF75  F018         	goto	i2l329
  8440  0030CC                     i2u371_40:
  8441  0030CC  A4F2               	btfss	4082,2,c	;volatile
  8442  0030CE  EF6B  F018         	goto	i2u372_41
  8443  0030D2  EF6D  F018         	goto	i2u372_40
  8444  0030D6                     i2u372_41:
  8445  0030D6  EF75  F018         	goto	i2l329
  8446  0030DA                     i2u372_40:
  8447  0030DA                     
  8448                           ;app.c: 119:     {;app.c: 120:         TMR0IF = 0;
  8449  0030DA  94F2               	bcf	4082,2,c	;volatile
  8450  0030DC                     
  8451                           ;app.c: 121:         datos.state = 10;
  8452  0030DC  0E0A               	movlw	10
  8453  0030DE  0100               	movlb	0	; () banked
  8454  0030E0  6FBB               	movwf	(_datos+3)& (0+255),b
  8455  0030E2                     
  8456                           ; BSR set to: 0
  8457                           ;app.c: 122:         datos.nextFunc = warning;
  8458  0030E2  0E88               	movlw	low _warning
  8459  0030E4  6FCF               	movwf	(_datos+23)& (0+255),b
  8460  0030E6  0E2E               	movlw	high _warning
  8461  0030E8  6FD0               	movwf	(_datos+24)& (0+255),b
  8462  0030EA                     i2l329:
  8463  0030EA  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8464  0030EC  0011               	retfie		f
  8465  0030EE                     __end_of_isrH:
  8466                           	callstack 0
  8467                           
  8468                           	psect	rparam
  8469  0000                     
  8470                           	psect	temp
  8471  00005C                     btemp:
  8472                           	callstack 0
  8473  00005C                     	ds	1
  8474  0000                     int$flags	set	btemp
  8475  0000                     wtemp8	set	btemp+1
  8476  0000                     ttemp5	set	btemp+1
  8477  0000                     ttemp6	set	btemp+4
  8478  0000                     ttemp7	set	btemp+8
  8479                           
  8480                           	psect	idloc
  8481                           
  8482                           ;Config register IDLOC0 @ 0x200000
  8483                           ;	unspecified, using default values
  8484  200000                     	org	2097152
  8485  200000  FF                 	db	255
  8486                           
  8487                           ;Config register IDLOC1 @ 0x200001
  8488                           ;	unspecified, using default values
  8489  200001                     	org	2097153
  8490  200001  FF                 	db	255
  8491                           
  8492                           ;Config register IDLOC2 @ 0x200002
  8493                           ;	unspecified, using default values
  8494  200002                     	org	2097154
  8495  200002  FF                 	db	255
  8496                           
  8497                           ;Config register IDLOC3 @ 0x200003
  8498                           ;	unspecified, using default values
  8499  200003                     	org	2097155
  8500  200003  FF                 	db	255
  8501                           
  8502                           ;Config register IDLOC4 @ 0x200004
  8503                           ;	unspecified, using default values
  8504  200004                     	org	2097156
  8505  200004  FF                 	db	255
  8506                           
  8507                           ;Config register IDLOC5 @ 0x200005
  8508                           ;	unspecified, using default values
  8509  200005                     	org	2097157
  8510  200005  FF                 	db	255
  8511                           
  8512                           ;Config register IDLOC6 @ 0x200006
  8513                           ;	unspecified, using default values
  8514  200006                     	org	2097158
  8515  200006  FF                 	db	255
  8516                           
  8517                           ;Config register IDLOC7 @ 0x200007
  8518                           ;	unspecified, using default values
  8519  200007                     	org	2097159
  8520  200007  FF                 	db	255
  8521                           
  8522                           	psect	config
  8523                           
  8524                           ;Config register CONFIG1L @ 0x300000
  8525                           ;	PLL Prescaler Selection bits
  8526                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8527                           ;	System Clock Postscaler Selection bits
  8528                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8529                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8530                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8531  300000                     	org	3145728
  8532  300000  00                 	db	0
  8533                           
  8534                           ;Config register CONFIG1H @ 0x300001
  8535                           ;	Oscillator Selection bits
  8536                           ;	FOSC = HS, HS oscillator (HS)
  8537                           ;	Fail-Safe Clock Monitor Enable bit
  8538                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8539                           ;	Internal/External Oscillator Switchover bit
  8540                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8541  300001                     	org	3145729
  8542  300001  0C                 	db	12
  8543                           
  8544                           ;Config register CONFIG2L @ 0x300002
  8545                           ;	Power-up Timer Enable bit
  8546                           ;	PWRT = OFF, PWRT disabled
  8547                           ;	Brown-out Reset Enable bits
  8548                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8549                           ;	Brown-out Reset Voltage bits
  8550                           ;	BORV = 3, Minimum setting 2.05V
  8551                           ;	USB Voltage Regulator Enable bit
  8552                           ;	VREGEN = OFF, USB voltage regulator disabled
  8553  300002                     	org	3145730
  8554  300002  19                 	db	25
  8555                           
  8556                           ;Config register CONFIG2H @ 0x300003
  8557                           ;	Watchdog Timer Enable bit
  8558                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8559                           ;	Watchdog Timer Postscale Select bits
  8560                           ;	WDTPS = 32768, 1:32768
  8561  300003                     	org	3145731
  8562  300003  1E                 	db	30
  8563                           
  8564                           ; Padding undefined space
  8565  300004                     	org	3145732
  8566  300004  FF                 	db	255
  8567                           
  8568                           ;Config register CONFIG3H @ 0x300005
  8569                           ;	CCP2 MUX bit
  8570                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8571                           ;	PORTB A/D Enable bit
  8572                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8573                           ;	Low-Power Timer 1 Oscillator Enable bit
  8574                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8575                           ;	MCLR Pin Enable bit
  8576                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8577  300005                     	org	3145733
  8578  300005  81                 	db	129
  8579                           
  8580                           ;Config register CONFIG4L @ 0x300006
  8581                           ;	Stack Full/Underflow Reset Enable bit
  8582                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8583                           ;	Single-Supply ICSP Enable bit
  8584                           ;	LVP = OFF, Single-Supply ICSP disabled
  8585                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8586                           ;	ICPRT = OFF, ICPORT disabled
  8587                           ;	Extended Instruction Set Enable bit
  8588                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8589                           ;	Background Debugger Enable bit
  8590                           ;	DEBUG = 0x1, unprogrammed default
  8591  300006                     	org	3145734
  8592  300006  81                 	db	129
  8593                           
  8594                           ; Padding undefined space
  8595  300007                     	org	3145735
  8596  300007  FF                 	db	255
  8597                           
  8598                           ;Config register CONFIG5L @ 0x300008
  8599                           ;	Code Protection bit
  8600                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8601                           ;	Code Protection bit
  8602                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8603                           ;	Code Protection bit
  8604                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8605                           ;	Code Protection bit
  8606                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8607  300008                     	org	3145736
  8608  300008  0F                 	db	15
  8609                           
  8610                           ;Config register CONFIG5H @ 0x300009
  8611                           ;	Boot Block Code Protection bit
  8612                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8613                           ;	Data EEPROM Code Protection bit
  8614                           ;	CPD = OFF, Data EEPROM is not code-protected
  8615  300009                     	org	3145737
  8616  300009  C0                 	db	192
  8617                           
  8618                           ;Config register CONFIG6L @ 0x30000A
  8619                           ;	Write Protection bit
  8620                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8621                           ;	Write Protection bit
  8622                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8623                           ;	Write Protection bit
  8624                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8625                           ;	Write Protection bit
  8626                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8627  30000A                     	org	3145738
  8628  30000A  0F                 	db	15
  8629                           
  8630                           ;Config register CONFIG6H @ 0x30000B
  8631                           ;	Configuration Register Write Protection bit
  8632                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8633                           ;	Boot Block Write Protection bit
  8634                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8635                           ;	Data EEPROM Write Protection bit
  8636                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8637  30000B                     	org	3145739
  8638  30000B  E0                 	db	224
  8639                           
  8640                           ;Config register CONFIG7L @ 0x30000C
  8641                           ;	Table Read Protection bit
  8642                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8643                           ;	Table Read Protection bit
  8644                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8645                           ;	Table Read Protection bit
  8646                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8647                           ;	Table Read Protection bit
  8648                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8649  30000C                     	org	3145740
  8650  30000C  0F                 	db	15
  8651                           
  8652                           ;Config register CONFIG7H @ 0x30000D
  8653                           ;	Boot Block Table Read Protection bit
  8654                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8655  30000D                     	org	3145741
  8656  30000D  40                 	db	64
  8657                           tosu	equ	0xFFF
  8658                           tosh	equ	0xFFE
  8659                           tosl	equ	0xFFD
  8660                           stkptr	equ	0xFFC
  8661                           pclatu	equ	0xFFB
  8662                           pclath	equ	0xFFA
  8663                           pcl	equ	0xFF9
  8664                           tblptru	equ	0xFF8
  8665                           tblptrh	equ	0xFF7
  8666                           tblptrl	equ	0xFF6
  8667                           tablat	equ	0xFF5
  8668                           prodh	equ	0xFF4
  8669                           prodl	equ	0xFF3
  8670                           indf0	equ	0xFEF
  8671                           postinc0	equ	0xFEE
  8672                           postdec0	equ	0xFED
  8673                           preinc0	equ	0xFEC
  8674                           plusw0	equ	0xFEB
  8675                           fsr0h	equ	0xFEA
  8676                           fsr0l	equ	0xFE9
  8677                           wreg	equ	0xFE8
  8678                           indf1	equ	0xFE7
  8679                           postinc1	equ	0xFE6
  8680                           postdec1	equ	0xFE5
  8681                           preinc1	equ	0xFE4
  8682                           plusw1	equ	0xFE3
  8683                           fsr1h	equ	0xFE2
  8684                           fsr1l	equ	0xFE1
  8685                           bsr	equ	0xFE0
  8686                           indf2	equ	0xFDF
  8687                           postinc2	equ	0xFDE
  8688                           postdec2	equ	0xFDD
  8689                           preinc2	equ	0xFDC
  8690                           plusw2	equ	0xFDB
  8691                           fsr2h	equ	0xFDA
  8692                           fsr2l	equ	0xFD9
  8693                           status	equ	0xFD8

Data Sizes:
    Strings     89
    Constant    0
    Data        25
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      91
    BANK0           160     46     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    appSubGiveElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1842_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@elements	PTR const short  size(2) Largest target is 25
		 -> datos.elements(BANK0[2]), datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_9(CODE[17]), STR_8(CODE[12]), STR_6(CODE[14]), appElemts@dataout(BANK0[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[12]), datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    S196_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _warning->_Lcd_Out
    _appADC->___awmod
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_teclado
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _sprintf->___awmod
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appBat
    _appStateRecolectData->_appElemts
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   76552
                                             44 BANK0      2     2      0
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
                            _warning *
 ---------------------------------------------------------------------------------
 (1) _warning                                              2     2      0    2077
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   54495
                             _appADC
                             _appBat
                          _appElemts
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            8     6      2   13678
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   20214
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20603
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                              7 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     631
                                             71 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             46 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             81 COMRAM     6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0     526
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    2534
                            _adcInit
                     _appCounterInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2392
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              6 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appCounterInit                                       2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   16920
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                   _appSubGiveElemts
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGiveElemts                                     2     0      2      76
                                              3 COMRAM     2     0      2
                    _appCounterStart
 ---------------------------------------------------------------------------------
 (3) _appCounterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   16668
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   11573
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   10541
                                             76 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   10011
                                             66 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1795
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     692
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1403
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    1901
                                              6 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appSubGiveElemts
       _appCounterStart
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appCounterInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
   _appStateInitial *
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
   _warning *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      20        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon May 31 00:31:53 2021

                 ___fldiv@aexp 0047                   ___fldiv@bexp 0046                   ___fldiv@sign 003F  
                           l30 3000                             l32 300E                             l33 3016  
                           l42 1A3A                             l27 2E86                             l39 1D9A  
                           l93 1852                             bsr 000FE0            ___wmul@multiplicand 0006  
                          l121 28D4                            l106 2A82                            l107 2ACE  
                          l140 2604                            l212 31CA                            l108 2B20  
                          l206 313A                            l215 31AC                            l143 2C54  
                          l137 24DA                            l305 2808                            l209 31B8  
                          l218 31CE                            l314 31C6                            l226 2F14  
                          l332 3160                            l292 3114                            l285 3184  
                          l446 20B2                            l295 2D36                            l288 3084  
                          l298 31C0                            l459 238C                            l629 270A  
                          l576 2BD0                            l914 101E                            l916 0E7E  
                          l925 0EC4                            l950 0C84                            l927 0F3C  
                          l919 0E42                            l928 0F2A                            l953 0B16  
                          l946 0920                            l963 0C46                            l955 0B8E  
                          l956 0B7C                            l990 1BEE                            l994 1B2A  
                          l987 1A92                adcInit@ADC_PINs 0005                            _PR2 000FCB  
                          _abs 2F9C                            _pad 29A0                   ___awmod@sign 0057  
                          tosl 000FFD                            wreg 000FE8                   ___flmul@aexp 0027  
                 ___flmul@bexp 0028                   ___flmul@sign 0022                   ___flmul@temp 002D  
                 ___flmul@prod 0029                   ___fltol@exp1 0051                           l1001 1B86  
                         l1020 2DEA                           l1007 2228                           l1111 138A  
                         l1122 2FD2                           l1051 29E4                           ?_abs 0016  
                         l1125 2FDA                           l1117 2D90                           l1054 2A26  
                         l1062 142A                           l1118 2D98                           l1056 2A60  
                         l1064 1432                           l3001 20B4                           l1153 1F22  
                         l1082 1668                           l3011 2114                           l1156 1F2A  
                         l3013 216C                           l3005 20D2                           l3101 1716  
                         l1182 299E                           l1190 2F58                           l3031 2216  
                         l3023 21CC                           l3007 20DE                           l1159 304E  
                         l1167 2E3C                           l3111 1758                           l3103 1724  
                         l1096 1112                           l3025 2200                           l3017 2186  
                         l4001 222E                           l1193 31D0                           l3121 1790  
                         l3113 1764                           l3105 1730                           l3201 2B0E  
                         l3051 2824                           l3027 220C                           l3019 21B2  
                         l4011 228E                           l4003 223C                           l3131 17D0  
                         l3123 179C                           l3115 1768                           l3107 173E  
                         l3211 31CC                           l3203 2B14                           l3061 287C  
                         l3053 282E                           l3045 280C                           l3029 2212  
                         l4021 2304                           l4013 22AC                           l4005 225C  
                         l4101 1472                           l3141 1808                           l3133 17D4  
                         l3125 17AA                           l3117 1776                           l3109 174A  
                         l3205 2B14                           l3301 0EAA                           l3221 0CB2  
                         l3213 0C86                           l3063 28A0                           l3047 2810  
                         l4031 236C                           l4023 2324                           l4015 22B4  
                         l4007 2260                           l1199 30BA                           l4103 1478  
                         l4111 156A                           l3151 1840                           l3143 1816  
                         l3135 17E2                           l3127 17B6                           l3119 1782  
                         l3071 166A                           l3207 2B1A                           l3311 0EE6  
                         l3303 0EB4                           l3231 0CEC                           l3223 0CC2  
                         l3215 0C92                           l3065 28A4                           l3049 281A  
                         l3057 2838                           l4025 2336                           l4017 22C8  
                         l4009 226E                           l4041 29D0                           l4113 1584  
                         l4121 15E4                           l4105 14FA                           l3145 1822  
                         l3137 17EE                           l3129 17C4                           l3081 169E  
                         l3073 1676                           l3209 2B1A                           l3153 2A62  
                         l3321 0F58                           l3313 0EF4                           l3305 0EC2  
                         l3241 0D18                           l3233 0CF2                           l3225 0CD2  
                         l3217 0CA0                           l3401 09A4                           l3059 2872  
                         l4019 22D6                           l4027 233C                           l4051 2A34  
                         l4043 29DC                           l4035 29A0                           l4131 1628  
                         l4123 15F6                           l4115 15A2                           l4107 1500  
                         l4211 10A0                           l4203 1094                           l3147 1830  
                         l3139 17FC                           l3091 16DE                           l3083 16AA  
                         l3075 167A                           l3171 2AA6                           l3163 2A9A  
                         l3155 2A6E                           l3331 0FC4                           l3323 0F66  
                         l3315 0F22                           l3307 0ED4                           l3251 0D52  
                         l3243 0D28                           l3235 0CF8                           l3227 0CD4  
                         l3219 0CA2                           l3411 09E6                           l3403 09B0  
                         l4061 3018                           l4141 1DB0                           l4029 234C  
                         l4053 2A48                           l4045 29F0                           l4037 29AE  
                         l4133 1630                           l4125 1604                           l4117 15BC  
                         l4109 1506                           l4221 1122                           l3093 16EC  
                         l3085 16B8                           l3077 168C                           l3149 183C  
                         l3181 2AEC                           l3173 2AA8                           l3165 2AA0  
                         l3157 2A7E                           l3501 2B86                           l3341 1012  
                         l3333 0FDE                           l3325 0F90                           l3309 0EE2  
                         l3253 0D68                           l3245 0D38                           l3237 0D06  
                         l3229 0CDC                           l3421 0A48                           l3413 09F2  
                         l3405 09BC                           l4071 2E32                           l4151 1E0E  
                         l4143 1DB4                           l4047 2A04                           l4039 29C2  
                         l4127 160A                           l4135 1640                           l4119 15D6  
                         l4231 11B8                           l4223 1146                           l4215 10AC  
                         l4207 109A                           l3095 16F8                           l3087 16C4  
                         l3079 1690                           l3191 2AF6                           l3183 2AEE  
                         l3175 2AAA                           l3167 2AA2                           l3511 2BC0  
                         l3503 2B9C                           l3343 1014                           l3335 0FFA  
                         l3319 0F4C                           l3327 0F94                           l3271 0DBC  
                         l3255 0D78                           l3263 0D98                           l3247 0D3A  
                         l3239 0D08                           l3431 0ADE                           l3423 0A54  
                         l3415 0A02                           l3407 09CA                           l3351 085C  
                         l4311 1D1A                           l4303 1BF0                           l4073 2E36  
                         l4065 2DEC                           l4161 1E3A                           l4145 1DB8  
                         l4057 2F9C                           l4049 2A08                           l4129 161C  
                         l4081 13D4                           l4241 1244                           l4233 11C6  
                         l4225 117C                           l4217 1100                           l3097 16FC  
                         l3089 16D2                           l3193 2B08                           l3185 2AF0  
                         l3177 2ABC                           l3169 2AA4                           l3513 2BC8  
                         l3505 2BA4                           l3337 0FFE                           l3329 0FAE  
                         l3281 0E0E                           l3273 0DD6                           l3265 0DA8  
                         l3257 0D80                           l3249 0D42                           l3441 0B34  
                         l3433 0AFC                           l3425 0A70                           l3417 0A1C  
                         l3409 09D6                           l3361 0898                           l3353 0868  
                         l3601 1BDC                           l4313 1D62                           l4305 1C12  
                         l4321 1892                           l4067 2DF0                           l4171 1EE2  
                         l4163 1E6E                           l4155 1E14                           l4147 1DD4  
                         l4139 1D9C                           l4059 2FB6                           l4091 143A  
                         l4083 13F4                           l4251 130C                           l4243 1268  
                         l4227 118A                           l4219 1120                           l3099 170A  
                         l3611 2E5C                           l3195 2B08                           l3187 2AF2  
                         l3179 2AE6                           l3507 2BAA                           l3339 100C  
                         l3291 0E6A                           l3283 0E1E                           l3275 0DE6  
                         l3267 0DA8                           l3259 0D84                           l3451 0B9E  
                         l3443 0B38                           l3435 0B06                           l3427 0A9A  
                         l3419 0A2C                           l3371 08CA                           l3363 08A8  
                         l3355 0876                           l3531 2670                           l3523 2630  
                         l3603 1BDE                           l4315 1D68                           l4307 1C3A  
                         l4323 1910                           l4331 2ED0                           l4069 2E04  
                         l4173 1EF4                           l4157 1E2A                           l4149 1E0A  
                         l4093 144C                           l4085 1402                           l4077 138C  
                         l4261 1348                           l4253 131A                           l4245 12B0  
                         l4237 120E                           l4229 1198                           l4181 1020  
                         l4341 273A                           l3621 2E82                           l3613 2E6C  
                         l3701 31A0                           l3197 2B08                           l3189 2AF4  
                         l3509 2BB0                           l3293 0E6C                           l3285 0E32  
                         l3277 0DF6                           l3461 0C00                           l3453 0BAA  
                         l3445 0B46                           l3437 0B14                           l3429 0AD0  
                         l3381 090A                           l3373 08D8                           l3365 08AE  
                         l3357 0878                           l3541 26A0                           l3533 267E  
                         l3525 265A                           l3517 2606                           l4317 1D98  
                         l4309 1C92                           l4325 195E                           l4333 2EDC  
                         l4175 1F06                           l4511 1E58                           l4167 1EA4  
                         l4159 1E32                           l4095 145A                           l4087 1404  
                         l4079 13AC                           l4255 132E                           l4239 1220  
                         l4191 1074                           l4183 1044                           l4351 27A8  
                         l4343 2750                           l3623 2E84                           l3615 2E70  
                         l3607 2E40                           l3199 2B0E                           l3295 0E7C  
                         l3287 0E40                           l3279 0E06                           l3471 0C68  
                         l3463 0C14                           l3455 0BB8                           l3447 0B74  
                         l3439 0B26                           l3391 0954                           l3383 0910  
                         l3375 08DA                           l3367 08BE                           l3359 0888  
                         l3551 26CA                           l3543 26AA                           l3527 265C  
                         l3519 261C                           l4327 19F6                           l4319 1854  
                         l4335 2F02                           l4513 284C                           l4097 1460  
                         l4089 141E                           l4249 12E8                           l4193 1076  
                         l4185 1052                           l4265 1354                           l4353 27C8  
                         l4345 275C                           l4337 270C                           l3617 2E78  
                         l3609 2E50                           l3481 2B22                           l3297 0E8E  
                         l3289 0E4C                           l3473 0C6A                           l3465 0C2E  
                         l3457 0BE2                           l3393 0960                           l3385 0930  
                         l3377 08EA                           l3369 08C4                           l3553 26DA  
                         l3529 266C                           l3561 1A3E                           l4329 1A22  
                         l4361 307A                           l4099 1468                           l4267 1378  
                         l4259 133A                           l4195 1088                           l4187 1064  
                         l4283 2D38                           l4291 2D9A                           l4347 276E  
                         l4355 27E0                           l4339 271A                           l3619 2E80  
                         l3491 2B4E                           l3483 2B26                           l3299 0EA4  
                         l3467 0C4A                           l3475 0C70                           l3459 0BE6  
                         l3395 096A                           l3387 0940                           l3379 08FA  
                         l3555 26EA                           l3539 2696                           l3563 1A4E  
                         l4371 2CF0                           l4363 2CC8                           l2941 24DE  
                         l4509 10D2                           l4189 1068                           l4285 2D40  
                         l4293 2DAC                           l4357 27F4                           l4349 277E  
                         l3733 31C2                           l3709 31BA                           l3661 2C1E  
                         l3653 2BD2                           l3741 3170                           l3493 2B56  
                         l3485 2B34                           l3477 0C74                           l3469 0C5A  
                         l3397 0980                           l3557 26FA                           l3549 26BE  
                         l3581 1B14                           l3573 1ACC                           l3565 1A5C  
                         l4381 2D32                           l4373 2CFE                           l4365 2CCE  
                         ?_pad 0014                           l2951 2570                           l2943 24E2  
                         l4199 108E                           l4287 2D4E                           l4295 2DB4  
                         l3663 2C3C                           l3655 2BE2                           l3671 3122  
                         l3743 3174                           l3735 3162                           l3495 2B68  
                         l3487 2B3C                           l3399 098C                           l3591 1B94  
                         l3583 1B20                           l3575 1AD4                           l3567 1AA2  
                         l3751 30EE                           l4359 3050                           l4375 2D04  
                         l4367 2CD2                           l4391 2C62                           l4383 2C56  
                         l2961 25F4                           l2953 25E2                           l2945 2560  
                         l3921 28FA                           l4289 2D74                           l4297 2DBC  
                         l3657 2BFA                           l3681 312C                           l3673 3124  
                         l3665 3116                           l3745 3180                           l3737 3166  
                         l3497 2B70                           l3489 2B40                           l3593 1B96  
                         l3585 1B5C                           l3577 1AE0                           l3569 1AB8  
                         l3753 30FA                           l4377 2D1C                           l4369 2CD8  
                         l4393 2C8A                           l4385 2C5A                           l2971 242E  
                         l2963 2390                           l2955 25EA                           l2947 2568  
                         l3923 2904                           l3931 2F16                           l4299 2DD8  
                         l3659 2C0C                           l3691 3136                           l3683 312E  
                         l3675 3126                           l3667 311C                           l3739 316A  
                         l3499 2B78                           l3595 1B9A                           l3587 1B68  
                         l3579 1B12                           l3755 310C                           l4379 2D28  
                         l4395 2CA2                           l4387 2C5C                           l2981 24C2  
                         l2973 2434                           l2965 2394                           l2957 25EC  
                         l2949 256A                           l3925 2922                           l3917 28D6  
                         l3933 2F22                           l3941 3092                           l3693 3138  
                         l3685 3130                           l3677 3128                           l3669 3120  
                         l3597 1BBE                           l3589 1B76                           l3781 2EA6  
                         l4389 2C5E                           l2983 24C4                           l2975 24B2  
                         l2967 2424                           l2959 25F2                           l3951 3158  
                         l3927 2958                           l3919 28E8                           l3935 2F34  
                         l3943 3096                           l3695 31AE                           l3687 3132  
                         l3679 312A                           l3599 1BCE                           l3783 2EB8  
                         l2985 24CA                           l2977 24BA                           l2969 242C  
                         l3961 1F5E                           l3937 2F38                           l3945 30AE  
                         l3697 31B6                           l3689 3134                           l3777 2E88  
                         l2979 24BC                           l3971 1FA0                           l3963 1F62  
                         l3955 1F2C                           l3939 3086                           l3699 31C8  
                         l2995 2FDE                           l3779 2E8E                           l3949 313C  
                         l3981 1FFA                           l3973 1FBE                           l3965 1F70  
                         l3957 1F30                           l2997 2FF0                           l3983 2028  
                         l3975 1FC6                           l3991 2062                           l3967 1F90  
                         l3959 1F3E                           l2999 2FFE                           l3993 2072  
                         l3985 2048                           l3977 1FDA                           l3969 1F94  
                         l3995 2092                           l3987 204A                           l3979 1FE8  
                         l3989 205C                           l3999 222A                           STR_1 0820  
                         STR_2 0846                           STR_3 083A                           STR_4 084F  
                         STR_5 0855                           STR_6 0812                           STR_7 0857  
                         STR_8 082E                           STR_9 0801                           u3000 0E8E  
                         u3001 0E8A                           u3010 0EA4                           u3011 0EA0  
                         u3100 0FDE                           u3020 0EC2                           u3101 0FDA  
                         u3021 0EBE                           u3110 100C                           u3030 0EE2  
                         u3111 1008                           u3031 0EDE                           u4000 2E32  
                         u3040 0EF4                           u3200 0ABA                           u3120 0876  
                         u4001 2E2E                           u3041 0EF0                           u3121 0872  
                         u4010 13BC                           u3050 0F22                           u3210 0B14  
                         u3130 0888                           u4011 13B6                           u3051 0F1E  
                         u3211 0B10                           u3131 0884                           u4100 15BC  
                         u4020 13BE                           u3060 0F38                           u3300 0C68  
                         u3220 0B34                           u3140 0898                           u4101 15B8  
                         u3061 0F34                           u3301 0C64                           u3221 0B30  
                         u3205 0AB0                           u3141 0894                           u4110 15D6  
                         u4030 13D4                           u3310 2B34                           u3070 0F4C  
                         u3230 0B46                           u3150 08D8                           u4111 15D2  
                         u4031 13D0                           u3311 2B30                           u3071 0F48  
                         u3231 0B42                           u3151 08D4                           u4200 1EDE  
                         u4120 15E4                           u4040 1402                           u3320 2B4E  
                         u3080 0F66                           u3240 0B74                           u3160 08EA  
                         u3400 2692                           u4121 15E0                           u4041 13FE  
                         u3321 2B4A                           u3081 0F62                           u3241 0B70  
                         u3161 08E6                           u3401 268E                           u4210 1EF4  
                         u4130 15F6                           u4050 141E                           u3330 2B68  
                         u3090 0FAE                           u3250 0B8A                           u3170 08FA  
                         u3410 26BA                           u2610 300E                           u2515 24EA  
                         u4211 1EF0                           u4131 15F2                           u4051 141A  
                         u3331 2B64                           u3091 0FAA                           u3251 0B86  
                         u3171 08F6                           u3411 26B6                           u2611 300A  
                         u2620 20CE                           u4220 1F06                           u4140 1604  
                         u4060 144C                           u4300 1220                           u2700 168C  
                         u3340 2B86                           u3260 0B9E                           u3180 0930  
                         u3420 26DA                           u3500 1B86                           u2525 2504  
                         u2621 20CA                           u4221 1F02                           u4141 1600  
                         u4061 1448                           u4301 121C                           u2701 1688  
                         u3341 2B82                           u3261 0B9A                           u3181 092C  
                         u3421 26D6                           u3501 1B82                           u2630 2110  
                         u4150 161C                           u4070 145A                           u4310 1244  
                         u4230 1044                           u2710 169E                           u3350 2B9C  
                         u3270 0BB8                           u3190 0940                           u3430 26EA  
                         u3510 1B94                           u2535 252A                           u2631 210C  
                         u4151 1618                           u4071 1456                           u4311 1240  
                         u4231 1040                           u2711 169A                           u3351 2B98  
                         u3271 0BB4                           u3191 093C                           u3431 26E6  
                         u3511 1B90                           u2640 2182                           u4160 1DD4  
                         u4080 1584                           u4320 1268                           u4240 1112  
                         u2800 1790                           u2720 16B8                           u4400 27F4  
                         u3360 2BC0                           u3280 0C00                           u3520 1BCE  
                         u3440 1A4E                           u2545 239C                           u2641 217E  
                         u4161 1DD0                           u4081 1580                           u4321 1264  
                         u4241 110E                           u2801 178C                           u2721 16B4  
                         u4401 27F0                           u3361 2BBC                           u3281 0BFC  
                         u3521 1BCA                           u3441 1A4A                           u2650 21C8  
                         u4170 1E0A                           u4090 15A2                           u4330 130C  
                         u4250 1120                           u2810 17AA                           u2730 16D2  
                         u3290 0C2E                           u3370 261C                           u3530 1BDC  
                         u3450 1A5C                           u3610 310C                           u4410 2C76  
                         u2555 23C0                           u2651 21C4                           u4171 1E06  
                         u4091 159E                           u4331 1308                           u4251 111C  
                         u2811 17A6                           u2731 16CE                           u3291 0C2A  
                         u3371 2618                           u3531 1BD8                           u3451 1A58  
                         u3611 3108                           u4411 2C6C                           u2660 2228  
                         u4180 1E26                           u4260 1146                           u4340 2D90  
                         u2820 17C4                           u2740 16EC                           u3540 2E50  
                         u2900 0CB2                           u3380 2650                           u3460 1AB8  
                         u2565 23E6                           u2661 2224                           u4181 1E22  
                         u4261 1142                           u4341 2D8C                           u2821 17C0  
                         u2741 16E8                           u3541 2E4C                           u2901 0CAE  
                         u3461 1AB4                           u2670 289C                           u4190 1EDC  
                         u4270 118A                           u2830 17E2                           u2750 170A  
                         u2910 0CC2                           u3390 267E                           u3470 1B0E  
                         u4350 1D62                           u2575 240A                           u4191 1ED6  
                         u4271 1186                           u2831 17DE                           u2751 1706  
                         u2911 0CBE                           u3391 267A                           u3471 1B0A  
                         u4351 1D5E                           u2680 28C4                           u3800 1F70  
                         u4280 1206                           u2840 17FC                           u2760 1724  
                         u2920 0D06                           u3480 1B58                           u4360 1D98  
                         u2585 243E                           u3801 1F6C                           u4281 1200  
                         u2841 17F8                           u2761 1720                           u2921 0D02  
                         u3385 2646                           u3481 1B54                           u4361 1D94  
                         u2690 28D4                           u3730 28E8                           u4290 1208  
                         u2850 1816                           u2770 173E                           u2930 0D18  
                         u3490 1B76                           u2595 2482                           u2691 28D0  
                         u3811 1F9A                           u3731 28E4                           u2851 1812  
                         u2771 173A                           u2931 0D14                           u3491 1B72  
                         u4371 2ED6                           u4507 2CE4                           u3820 1FBE  
                         u3900 2304                           u3740 28FA                           u2860 1830  
                         u2780 1758                           u4380 276E                           u2940 0D28  
                         u4428 2C7A                           u2677 2892                           u3821 1FBA  
                         u3901 2300                           u3741 28F6                           u2861 182C  
                         u2781 1754                           u4381 276A                           u2941 0D24  
                         u4517 2D10                           u3830 1FE8                           u3910 234C  
                         u3750 2922                           u2870 1852                           u2790 1776  
                         u4390 277E                           u2950 0D68                           u4438 2CAC  
                         u2687 28BA                           u3831 1FE4                           u3911 2348  
                         u3751 291E                           u2871 184E                           u2791 1772  
                         u4391 277A                           u4607 2AE8                           u2951 0D64  
                         u4527 2E98                           u4439 2CC0                           u3840 2028  
                         u3760 2958                           u3920 29AE                           u2880 2ACE  
                         u2960 0DA8                           u3841 2024                           u3761 2954  
                         u3921 29AA                           u4617 2AFE                           u2881 2ACA  
                         u2961 0DA4                           u4537 2FF6                           u3850 2072  
                         u3770 2F58                           u3930 29D0                           u2970 0E1E  
                         u2890 0CA0                           u4707 24BE                           u4627 2562  
                         u3851 206E                           u3771 2F54                           u3931 29CC  
                         u4547 2BEC                           u2971 0E1A                           u2891 0C9C  
                         u3860 223C                           u3780 30AE                           u3940 2A26  
                         u2980 0E40                           u4717 24C6                           u4637 256C  
                         u3861 2238                           u3781 30AA                           u3941 2A22  
                         u4557 2C28                           u2981 0E3C                           u3790 1F3E  
                         u3870 226E                           u3950 2A34                           u2990 0E6A  
                         u4727 24D0                           u4647 25E4                           u3791 1F3A  
                         u3871 226A                           u3951 2A30                           u4567 2C46  
                         u2991 0E66                           u3880 22AC                           u3960 2FB6  
                         u4657 25EE                           u3881 22A8                           u3961 2FB2  
                         u4577 2A74                           u4497 2C96                           u3970 3048  
                         u3890 22D6                           u4667 25FA                           u3971 3042  
                         u3891 22D2                           u4587 2A9C                           u3980 304A  
                         u4677 2426                           u4597 2AB2                           u3990 2E04  
                         u4687 2430                           u3991 2E00                           u4697 24B4  
                         _TMR0 000FD6                           _TMR2 000FCC                           _TMR3 000FB2  
                         abs@a 0016                           _dbuf 0098                           _atoi 1D9C  
                         _main 2C56                           _dtoa 138C                           _isrH 0008  
                         _isrL 0018                           _prec 0058                           _nout 0094  
                         pad@i 001B                           pad@p 0018                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001D                           fsr2l 000FD9  
                         btemp 005C                           prodh 000FF4                           prodl 000FF3  
                         start 00AA                ___fldiv@new_exp 0040   __end_of_appStateRecolectData 3086  
              __end_of_Lcd_Cmd 2606                __end_of_Lcd_Out 28D6                   ___param_bank 000000  
                   _Lcd_Chr_CP 238E           __size_of_appLCD_Init 0084        __size_of_appCounterInit 000E  
                        ??_abs 0018                          ??_pad 001A                  ___fltol@sign1 0050  
              __end_of___aodiv 20B4                          ?_atoi 000B                          ?_main 0001  
                        ?_dtoa 001F                __end_of___aomod 238E                          ?_isrH 0001  
                        ?_isrL 0001                __end_of_adcInit 2E88                __end_of___fldiv 1020  
                        _ADRES 000FC3                __end_of___awmod 2BD2                __end_of___flmul 0C86  
              __end_of___fltol 270C                          i1l323 009A        __end_of_appStateInitial 3116  
                        i2l329 30EA                   vfpfcnvrt@fmt 0045                          _PORTB 000F81  
                        _TRISB 000F93                __end_of_appInit 3186          appSubGetData@cantidad 0086  
                        _datos 00B8                          _flags 005A                          _fputc 28D6  
                        _fputs 2F16                __end_of_isdigit 3050                          atoi@n 0018  
                        pad@fp 0014                          atoi@s 000B                          _width 0096  
                        _putch 31D0                          dtoa@d 0021                          dtoa@i 0041  
                        dtoa@n 0039                          dtoa@p 0033                          dtoa@s 0037  
                        dtoa@w 0035                __end_of_teclado 1854                __end_of_isspace 2E3E  
                        pclath 000FFA                          tablat 000FF5                __end_of_warning 2ED0  
                        ttemp5 005D                          ttemp6 0060                          ttemp7 0064  
                        status 000FD8                          wtemp8 005D                __end_of_sprintf 2DEC  
         __end_of_appTimerInit 313C           __end_of_appTimerStop 31CC               __end_of_Lcd_Init 2B22  
              __initialization 2F5A                   __end_of_atoi 1F2C                   __end_of_main 2CC8  
                 __end_of_dtoa 166A                   __end_of_isrH 30EE                   __end_of_isrL 00AA  
                       ??_atoi 000D                         ??_main 008C                         ??_dtoa 0029  
                       ??_isrH 0001                         ??_isrL 0001       __size_of_appCounterStart 0004  
                __activetblptr 000002                 _appGetElements 2CC8                         ?_fputc 0004  
                       ?_fputs 000D          __size_of_appISRConfig 0008                         ?_putch 0001  
                       i1l4401 0042                         i1l4411 006E                         i1l4403 0044  
                       i1l4413 007A                         i1l4405 0048                         i1l4415 008A  
                       i1l4407 005A                         i1l4417 0092                         i1l4409 006A  
                       i1l4397 0026                         i1l4399 0034                         i2l3851 30DA  
                       i2l3853 30DC                         i2l3855 30E2                         i2l3847 30BE  
                       i2l3849 30CC                      ??_Lcd_Cmd 0004                  vfpfcnvrt@done 0068  
                       _TMR0IE 007F95                         _TMR0IF 007F92                         _TMR3IE 007D01  
                       _TMR3IF 007D09                      ??_Lcd_Out 000A               __end_of___xxtofl 1BF0  
                 vfprintf@cfmt 004D              ?_appSubGiveElemts 0004                    ?_Lcd_Chr_CP 0001  
                       _appADC 1BF0                      ??___aodiv 0014                      ??___aomod 0014  
                       ___wmul 313C                      ??_adcInit 0004                      ??___fldiv 0037  
                    ??___awmod 0056                      ??___flmul 001E                         _appBat 1854  
                    ??___fltol 004C             ??_appSubGiveElemts 0006                         _memset 20B4  
                       clear_0 2F80                ___awmod@divisor 0054                      ??_appInit 0010  
       __end_of_appGetElements 2D38                ___awmod@counter 0056                         pad@buf 0016  
                       dtoa@fp 001F                         _strlen 3086                   _appISRConfig 31BA  
                       fputc@c 0004               ?_appStateInitial 0001                         fputs@c 0011  
                       fputs@i 0012                         fputs@s 000D                      ??_isdigit 0006  
                    ??_teclado 0006                   __mediumconst 0000                      ??_isspace 0006  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         _appStateRecolectData 3050              adcGetValue@PinADC 0007                         putch@c 0001  
        __end_of_appSubGetData 280A                      ??_warning 000E               __end_of_vfprintf 2D9A  
                    ??_sprintf 0058                   ___xxtofl@arg 0012                   ___xxtofl@exp 0011  
                 ___xxtofl@val 0008                     __accesstop 0060        __end_of__initialization 2F8E  
        __end_of_appTimerStart 31BA                  ___rparam_used 000001                     ___fltol@f1 0048  
               __pcstackCOMRAM 0001                   __pidataBANK0 3186                 _appCounterInit 31A0  
                __end_of_fputc 29A0                  __end_of_fputs 2F5A                  __end_of_putch 31D2  
           __size_of_appElemts 0046                ?_appGetElements 0001                  ??_adcGetValue 0006  
        ?_appStateRecolectData 0001                      ?_Lcd_Init 0001              ??_appCounterStart 0004  
                      ??_fputc 0008                        ??_fputs 0011            __size_of_Lcd_Chr_CP 014E  
                      ??_putch 0004          __size_of_appTimerInit 0026                     __pbssBANK0 008E  
        __size_of_appTimerStop 0004         __end_of_appCounterInit 31AE                        ?_appADC 0084  
                      ?___wmul 0004                        ?_appBat 0084                        ?_memset 0004  
                   appADC@data 0084                        ?_strlen 0004                   _appTimerInit 3116  
                    ?___xxtofl 0008                   _appTimerStop 31C8             __size_of_vfpfcnvrt 036C  
                   ??_Lcd_Init 0007            __end_of_adcGetValue 3018              __end_of_appElemts 2F16  
                      _Lcd_Cmd 24DC                        _Lcd_Out 280A        appSubGetData@data_Inout 0084  
                ??_appLCD_Init 000E                        __Hparam 0000                        __Lparam 0000  
              ?_appCounterInit 0004                        ___aodiv 1F2C                        ___aomod 222A  
                      _adcInit 2E3E                        ___fldiv 0C86                        ___awmod 2B22  
                      ___flmul 085C                        ___fltol 2606                __size_of_appADC 01AC  
              __size_of___wmul 0026                __size_of_appBat 01E8                      ?_vfprintf 006C  
                   appBat@data 0084                   __psmallconst 0800                        __pcinit 2F5A  
              __size_of_memset 0176                        _appInit 3162                        __ramtop 0800  
                      __ptext0 2C56                        __ptext1 2CC8                        __ptext2 3050  
                      __ptext3 30EE                        __ptext4 2E88                        __ptext5 2ED0  
                      __ptext6 1854                        __ptext7 1BF0                        __ptext8 2FDC  
                      __ptext9 1A3C                      _T0CONbits 000FD5                __size_of_strlen 0036  
                    _T2CONbits 000FCA                   __size_of_abs 0040                   __size_of_pad 00C2  
       ??_appStateRecolectData 0058                        _isdigit 3018                     ??___xxtofl 000C  
                    _T3CONbits 000FB1               ___awmod@dividend 0052                        _teclado 166A  
                      _isspace 2DEC                        _warning 2E88                        atoi@neg 0011  
                      _sprintf 2D9A                 __pintcode_body 30BC           end_of_initialization 2F8E  
                      fputc@fp 0006                        memset@c 0006                        memset@k 000C  
                      memset@n 0008                        memset@s 000E                  __Lmediumconst 0000  
                      int_func 30BC                        fputs@fp 000F           appCounterInit@reload 0004  
            __end_of_vfpfcnvrt 138C                      Lcd_Init@i 0008                   ??_Lcd_Chr_CP 0004  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 004D  
          __end_of_appLCD_Init 2C56                        strlen@a 0006                        strlen@s 0004  
                    _PORTBbits 000F81                    _adcGetValue 2FDC                  ___xxtofl@sign 0010  
                    _TRISAbits 000F92                      _TRISBbits 000F93                      _TRISCbits 000F94  
                    _TRISDbits 000F95      __size_of_appSubGiveElemts 0006                    ___fldiv@grs 0042  
                  ___fldiv@rem 003B             __end_of_Lcd_Chr_CP 24DC                     fp__warning 000E  
                  ___flmul@grs 0023               ??_appGetElements 0089                 __end_of_appADC 1D9C  
                  vfpfcnvrt@ap 0047                    vfpfcnvrt@fp 0043                    vfpfcnvrt@ll 0060  
               __end_of___wmul 3162                 __end_of_appBat 1A3C                _appCounterStart 31CC  
               __end_of_memset 222A                 __end_of_strlen 30BC            start_initialization 2F5A  
                  __end_of_abs 2FDC                    __end_of_pad 2A62                  Lcd_Out@buffer 0008  
     __size_of_appStateInitial 0028              __size_of_Lcd_Init 00C0             fp__appStateInitial 000E  
                  _appLCD_Init 2BD2                    vfprintf@fmt 006E                       ??_appADC 0058  
                     ??___wmul 0008                       ??_appBat 0086                    _appBat$2249 0088  
       __size_of_appSubGetData 00FE                    __pdataBANK0 00B8                       ??_memset 000A  
                   memset@dest 0004                       ??_strlen 0006                      ___fldiv@a 0033  
                    ___fldiv@b 002F         __size_of_appTimerStart 000C                      ___flmul@a 001A  
                    ___flmul@b 0016                    __pbssCOMRAM 0058                  __pcstackBANK0 0060  
             ___aodiv@dividend 0004              __size_of___xxtofl 01B4        fp__appStateRecolectData 000E  
                     ?_Lcd_Cmd 0001               ??_appCounterInit 0006                       ?_Lcd_Out 0007  
                    _atoi$1960 0013                      _atoi$1961 0017                      _atoi$1962 0015  
                    _appElemts 2ED0                      _dtoa$1925 0031        __end_of_appCounterStart 31D0  
            appElemts@elements 0084                      __pintcode 0008                       ?___aodiv 0004  
                     ?___aomod 0004                       ?_adcInit 0001                       ?___fldiv 002F  
             ___aodiv@quotient 0016                       ?___awmod 0052                       ?___flmul 0016  
                     ?___fltol 0048                    __pintcodelo 0018                       ?_appInit 0001  
            __size_of_vfprintf 0062                    __smallconst 0800                       ?_isdigit 0004  
                 teclado@valor 0004                       ?_teclado 0004                       ?_isspace 0004  
             _appSubGiveElemts 31C2                       ?_warning 0001                       ?_sprintf 0072  
                _appSubGetData 270C                 __size_of_fputc 00CA                 __size_of_fputs 0044  
               __size_of_putch 0002                 ___wmul@product 0008                       _LATAbits 000F89  
                     _LATBbits 000F8A                       _LATCbits 000F8B                       _LATDbits 000F8C  
                _appTimerStart 31AE                       _IPR2bits 000FA2                       _PIE2bits 000FA0  
            ??_appStateInitial 0006                     ?_appElemts 0084                       i1u444_20 0034  
                     i1u444_21 0030                       i1u445_20 0042                       i1u445_21 003E  
                     i1u446_20 005A                       i1u446_21 0056                       i1u447_20 006A  
                     i1u447_21 0066                       i1u448_20 008A                       i1u448_21 0086  
                     _PIR1bits 000F9E                       i2u371_40 30CC                       i2u371_41 30C8  
                     _PIR2bits 000FA1                       i2u372_40 30DA                       i2u372_41 30D6  
                     _GO_nDONE 007E11                       _RCONbits 000FD0                       Lcd_Out@x 0007  
                     Lcd_Out@y 000C                      _vfpfcnvrt 1020                     _ADCON0bits 000FC2  
                   _ADCON1bits 000FC1                     _ADCON2bits 000FC0              ___wmul@multiplier 0004  
                ?_appISRConfig 0001                   ?_adcGetValue 0004  __size_of_appStateRecolectData 0036  
                 _isspace$1978 000A                       _Lcd_Init 2A62                 ?_appSubGetData 0084  
                  _INTCON2bits 000FF1                      copy_data0 2F6E                 ?_appTimerStart 0001  
             __size_of_Lcd_Cmd 012A               __size_of_Lcd_Out 00CC                       __Hrparam 0000  
                   vfprintf@ap 0070                       __Lrparam 0000                     vfprintf@fp 006C  
             ?_appCounterStart 0001               __size_of___aodiv 0188               __size_of___aomod 0164  
             __size_of_adcInit 004A               __size_of___fldiv 039A               __size_of___awmod 00B0  
             __size_of___flmul 042A               __size_of___fltol 0106                  appADC@lm35val 0086  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000C                 ??_appISRConfig 0004  
              ___aodiv@counter 0014               __size_of_appInit 0024                     sprintf@fmt 0074  
                     ___xxtofl 1A3C               appElemts@dataout 0086               __size_of_isdigit 0038  
               Lcd_Chr_CP@data 0006               __size_of_teclado 01EA               __size_of_isspace 0052  
                     __ptext10 2606                       __ptext11 085C                       __ptext20 2E3E  
                     __ptext12 0C86                       __ptext21 31C8                       __ptext13 2B22  
                     __ptext30 138C                       __ptext22 31AE                       __ptext14 3162  
                     __ptext31 29A0                       __ptext23 31C2                       __ptext15 3116  
                     __ptext40 2DEC                       __ptext32 3086                       __ptext24 31CC  
                     __ptext16 2BD2                       __ptext41 3018                       __ptext33 2F16  
                     __ptext25 270C                       __ptext17 2A62                       __ptext42 313C  
                     __ptext34 28D6                       __ptext26 166A                       __ptext18 31BA  
                     __ptext43 20B4                       __ptext35 31D0                       __ptext27 2D9A  
                     __ptext19 31A0                       __ptext44 280A                       __ptext36 2F9C  
                     __ptext28 2D38                       __ptext45 24DC                       __ptext37 222A  
                     __ptext29 1020                       __ptext46 238E                       __ptext38 1F2C  
                     __ptext39 1D9C               __size_of_warning 0048               __size_of_sprintf 0052  
                  Lcd_Cmd@data 0006                  __size_of_atoi 0190                  __size_of_main 0072  
                __size_of_dtoa 02DE                  __size_of_isrH 30E6                  __size_of_isrL 0092  
                  ??_appElemts 0058                   ?_appLCD_Init 0001                       int$flags 005C  
                     _vfprintf 2D38               ___aomod@dividend 0004             appSubGetData@inout 0088  
                ?_appTimerInit 0001                    Lcd_Out@data 000D                 _vfpfcnvrt$1940 006A  
                ?_appTimerStop 0001                     _INTCONbits 000FF2                ??_appSubGetData 0058  
                     isdigit@c 0004                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 007C                ??_appTimerStart 0004                       isspace@c 0004  
         appSubGiveElemts@data 0004       __end_of_appSubGiveElemts 31C8                 appElemts@F3567 008E  
              ___aomod@divisor 000C                    ??_vfpfcnvrt 0049                ___aomod@counter 0014  
               ??_appTimerInit 0004                       sprintf@f 007E                       sprintf@s 0072  
               ??_appTimerStop 0004        __size_of_appGetElements 0070              fp__appGetElements 000E  
         __size_of_adcGetValue 003C                _appStateInitial 30EE                   ___aodiv@sign 0015  
         __end_of_appISRConfig 31C2                   ___aomod@sign 0015  
