

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 30 21:03:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 12/02/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4550 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  003042                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _datos
   104  003042  00                 	db	0
   105  003043  00FF               	dw	255
   106  003045  00                 	db	0
   107  003046  0000               	dw	0
   108  003048  00                 	db	0
   109  003049  00                 	db	0
   110  00304A  00                 	db	0
   111  00304B  00                 	db	0
   112  00304C  00                 	db	0
   113  00304D  00                 	db	0
   114  00304E  00                 	db	0
   115  00304F  00                 	db	0
   116  003050  00                 	db	0
   117  003051  00                 	db	0
   118  003052  00                 	db	0
   119  003053  00                 	db	0
   120  003054  00                 	db	0
   121  003055  00                 	db	0
   122  003056  00                 	db	0
   123  003057  00                 	db	0
   124  003058  00                 	db	0
   125  003059  F4                 	db	low _appStateInitial
   126  00305A  2F                 	db	high _appStateInitial
   127  0000                     _TMR3	set	4018
   128  0000                     _ADRES	set	4035
   129  0000                     _INTCONbits	set	4082
   130  0000                     _RCONbits	set	4048
   131  0000                     _PIE2bits	set	4000
   132  0000                     _IPR2bits	set	4002
   133  0000                     _PIR2bits	set	4001
   134  0000                     _T3CONbits	set	4017
   135  0000                     _LATBbits	set	3978
   136  0000                     _PIR1bits	set	3998
   137  0000                     _PR2	set	4043
   138  0000                     _TMR2	set	4044
   139  0000                     _TRISBbits	set	3987
   140  0000                     _T2CONbits	set	4042
   141  0000                     _LATDbits	set	3980
   142  0000                     _TRISDbits	set	3989
   143  0000                     _PORTBbits	set	3969
   144  0000                     _PORTB	set	3969
   145  0000                     _LATAbits	set	3977
   146  0000                     _TRISAbits	set	3986
   147  0000                     _INTCON2bits	set	4081
   148  0000                     _TRISB	set	3987
   149  0000                     _ADCON0bits	set	4034
   150  0000                     _ADCON2bits	set	4032
   151  0000                     _ADCON1bits	set	4033
   152  0000                     _TMR3IF	set	32009
   153  0000                     _TMR3IE	set	32001
   154  0000                     _GO_nDONE	set	32273
   155                           
   156                           	psect	smallconst
   157  000800                     __psmallconst:
   158                           	callstack 0
   159  000800  00                 	db	0
   160  000801                     STR_6:
   161  000801  43                 	db	67	;'C'
   162  000802  20                 	db	32
   163  000803  64                 	db	100	;'d'
   164  000804  65                 	db	101	;'e'
   165  000805  20                 	db	32
   166  000806  76                 	db	118	;'v'
   167  000807  61                 	db	97	;'a'
   168  000808  63                 	db	99	;'c'
   169  000809  75                 	db	117	;'u'
   170  00080A  6E                 	db	110	;'n'
   171  00080B  61                 	db	97	;'a'
   172  00080C  73                 	db	115	;'s'
   173  00080D  3A                 	db	58	;':'
   174  00080E  00                 	db	0
   175  00080F                     STR_1:
   176  00080F  54                 	db	84	;'T'
   177  000810  3A                 	db	58	;':'
   178  000811  25                 	db	37
   179  000812  30                 	db	48	;'0'
   180  000813  32                 	db	50	;'2'
   181  000814  64                 	db	100	;'d'
   182  000815  2E                 	db	46
   183  000816  25                 	db	37
   184  000817  30                 	db	48	;'0'
   185  000818  32                 	db	50	;'2'
   186  000819  64                 	db	100	;'d'
   187  00081A  20                 	db	32
   188  00081B  43                 	db	67	;'C'
   189  00081C  00                 	db	0
   190  00081D                     STR_3:
   191  00081D  42                 	db	66	;'B'
   192  00081E  69                 	db	105	;'i'
   193  00081F  65                 	db	101	;'e'
   194  000820  6E                 	db	110	;'n'
   195  000821  76                 	db	118	;'v'
   196  000822  65                 	db	101	;'e'
   197  000823  6E                 	db	110	;'n'
   198  000824  69                 	db	105	;'i'
   199  000825  64                 	db	100	;'d'
   200  000826  6F                 	db	111	;'o'
   201  000827  73                 	db	115	;'s'
   202  000828  00                 	db	0
   203  000829                     STR_2:
   204  000829  42                 	db	66	;'B'
   205  00082A  61                 	db	97	;'a'
   206  00082B  74                 	db	116	;'t'
   207  00082C  3A                 	db	58	;':'
   208  00082D  25                 	db	37
   209  00082E  30                 	db	48	;'0'
   210  00082F  32                 	db	50	;'2'
   211  000830  64                 	db	100	;'d'
   212  000831  00                 	db	0
   213  000832                     STR_4:
   214  000832  53                 	db	83	;'S'
   215  000833  49                 	db	73	;'I'
   216  000834  43                 	db	67	;'C'
   217  000835  43                 	db	67	;'C'
   218  000836  56                 	db	86	;'V'
   219  000837  00                 	db	0
   220  000838                     STR_5:
   221  000838  23                 	db	35
   222  000839  3A                 	db	58	;':'
   223  00083A  25                 	db	37
   224  00083B  64                 	db	100	;'d'
   225  00083C  00                 	db	0
   226  00083D  00                 	db	0	; dummy byte at the end
   227  0000                     
   228                           ; #config settings
   229                           
   230                           	psect	cinit
   231  002E92                     __pcinit:
   232                           	callstack 0
   233  002E92                     start_initialization:
   234                           	callstack 0
   235  002E92                     __initialization:
   236                           	callstack 0
   237                           
   238                           ; Initialize objects allocated to BANK0 (25 bytes)
   239                           ; load TBLPTR registers with __pidataBANK0
   240  002E92  0E42               	movlw	low __pidataBANK0
   241  002E94  6EF6               	movwf	tblptrl,c
   242  002E96  0E30               	movlw	high __pidataBANK0
   243  002E98  6EF7               	movwf	tblptrh,c
   244  002E9A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   245  002E9C  6EF8               	movwf	tblptru,c
   246  002E9E  EE00  F0B8         	lfsr	0,__pdataBANK0
   247  002EA2  EE10 F019          	lfsr	1,25
   248  002EA6                     copy_data0:
   249  002EA6  0009               	tblrd		*+
   250  002EA8  CFF5 FFEE          	movff	tablat,postinc0
   251  002EAC  50E5               	movf	postdec1,w,c
   252  002EAE  50E1               	movf	fsr1l,w,c
   253  002EB0  E1FA               	bnz	copy_data0
   254                           
   255                           ; Clear objects allocated to BANK0 (42 bytes)
   256  002EB2  EE00  F08E         	lfsr	0,__pbssBANK0
   257  002EB6  0E2A               	movlw	42
   258  002EB8                     clear_0:
   259  002EB8  6AEE               	clrf	postinc0,c
   260  002EBA  06E8               	decf	wreg,f,c
   261  002EBC  E1FD               	bnz	clear_0
   262                           
   263                           ; Clear objects allocated to COMRAM (4 bytes)
   264  002EBE  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   265  002EC0  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   266  002EC2  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   267  002EC4  6A58               	clrf	__pbssCOMRAM& (0+255),c
   268  002EC6                     end_of_initialization:
   269                           	callstack 0
   270  002EC6                     __end_of__initialization:
   271                           	callstack 0
   272  002EC6  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273  002EC8  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274  002ECA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   275  002ECC  6EF8               	movwf	tblptru,c
   276  002ECE  0100               	movlb	0
   277  002ED0  EF24  F016         	goto	_main	;jump to C main() function
   278                           
   279                           	psect	bssCOMRAM
   280  000058                     __pbssCOMRAM:
   281                           	callstack 0
   282  000058                     _prec:
   283                           	callstack 0
   284  000058                     	ds	2
   285  00005A                     _flags:
   286                           	callstack 0
   287  00005A                     	ds	2
   288                           
   289                           	psect	bssBANK0
   290  00008E                     __pbssBANK0:
   291                           	callstack 0
   292  00008E                     	ds	6
   293  000094                     _nout:
   294                           	callstack 0
   295  000094                     	ds	2
   296  000096                     _width:
   297                           	callstack 0
   298  000096                     	ds	2
   299  000098                     _dbuf:
   300                           	callstack 0
   301  000098                     	ds	32
   302                           
   303                           	psect	dataBANK0
   304  0000B8                     __pdataBANK0:
   305                           	callstack 0
   306  0000B8                     _datos:
   307                           	callstack 0
   308  0000B8                     	ds	25
   309                           
   310                           	psect	cstackBANK0
   311  000060                     __pcstackBANK0:
   312                           	callstack 0
   313  000060                     vfpfcnvrt@ll:
   314                           	callstack 0
   315                           
   316                           ; 8 bytes @ 0x0
   317  000060                     	ds	8
   318  000068                     vfpfcnvrt@done:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x8
   322  000068                     	ds	2
   323  00006A                     _vfpfcnvrt$1720:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0xA
   327  00006A                     	ds	2
   328  00006C                     ?_vfprintf:
   329                           	callstack 0
   330  00006C                     vfprintf@fp:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0xC
   334  00006C                     	ds	2
   335  00006E                     vfprintf@fmt:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0xE
   339  00006E                     	ds	2
   340  000070                     vfprintf@ap:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x10
   344  000070                     	ds	2
   345  000072                     ?_sprintf:
   346                           	callstack 0
   347  000072                     sprintf@s:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x12
   351  000072                     	ds	2
   352  000074                     sprintf@fmt:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x14
   356  000074                     	ds	8
   357  00007C                     sprintf@ap:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x1C
   361  00007C                     	ds	2
   362  00007E                     sprintf@f:
   363                           	callstack 0
   364                           
   365                           ; 6 bytes @ 0x1E
   366  00007E                     	ds	6
   367  000084                     ??_appGetElements:
   368  000084                     appADC@data:
   369                           	callstack 0
   370  000084                     appBat@data:
   371                           	callstack 0
   372  000084                     appElemts@elements:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x24
   376  000084                     	ds	2
   377  000086                     ??_appBat:
   378  000086                     appGetElements@cantidad:
   379                           	callstack 0
   380  000086                     appADC@lm35val:
   381                           	callstack 0
   382  000086                     appElemts@dataout:
   383                           	callstack 0
   384                           
   385                           ; 6 bytes @ 0x26
   386  000086                     	ds	2
   387  000088                     appGetElements@inout:
   388                           	callstack 0
   389  000088                     _appBat$2019:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x28
   393  000088                     	ds	4
   394  00008C                     ??_main:
   395                           
   396                           ; 1 bytes @ 0x2C
   397  00008C                     	ds	2
   398                           
   399                           	psect	cstackCOMRAM
   400  000001                     __pcstackCOMRAM:
   401                           	callstack 0
   402  000001                     ??_isrL:
   403  000001                     
   404                           ; 1 bytes @ 0x0
   405  000001                     	ds	3
   406  000004                     ??_Lcd_Cmd:
   407  000004                     ??_Lcd_Chr_CP:
   408  000004                     ??_adcInit:
   409  000004                     ?_strlen:
   410                           	callstack 0
   411  000004                     ?_isdigit:
   412                           	callstack 0
   413  000004                     ?_isspace:
   414                           	callstack 0
   415  000004                     ?_adcGetValue:
   416                           	callstack 0
   417  000004                     ?___wmul:
   418                           	callstack 0
   419  000004                     ?___aodiv:
   420                           	callstack 0
   421  000004                     ?___aomod:
   422                           	callstack 0
   423  000004                     teclado@valor:
   424                           	callstack 0
   425  000004                     ___wmul@multiplier:
   426                           	callstack 0
   427  000004                     memset@dest:
   428                           	callstack 0
   429  000004                     isdigit@c:
   430                           	callstack 0
   431  000004                     isspace@c:
   432                           	callstack 0
   433  000004                     fputc@c:
   434                           	callstack 0
   435  000004                     strlen@s:
   436                           	callstack 0
   437  000004                     ___aodiv@dividend:
   438                           	callstack 0
   439  000004                     ___aomod@dividend:
   440                           	callstack 0
   441                           
   442                           ; 8 bytes @ 0x3
   443  000004                     	ds	1
   444  000005                     adcInit@ADC_PINs:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x4
   448  000005                     	ds	1
   449  000006                     ??_isdigit:
   450  000006                     ??_isspace:
   451  000006                     ??_adcGetValue:
   452  000006                     Lcd_Chr_CP@data:
   453                           	callstack 0
   454  000006                     Lcd_Cmd@data:
   455                           	callstack 0
   456  000006                     ___wmul@multiplicand:
   457                           	callstack 0
   458  000006                     memset@c:
   459                           	callstack 0
   460  000006                     fputc@fp:
   461                           	callstack 0
   462  000006                     strlen@a:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x5
   466  000006                     	ds	1
   467  000007                     ??_Lcd_Init:
   468  000007                     adcGetValue@PinADC:
   469                           	callstack 0
   470  000007                     Lcd_Out@x:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x6
   474  000007                     	ds	1
   475  000008                     ??_fputc:
   476  000008                     ?___xxtofl:
   477                           	callstack 0
   478  000008                     Lcd_Init@i:
   479                           	callstack 0
   480  000008                     Lcd_Out@buffer:
   481                           	callstack 0
   482  000008                     ___wmul@product:
   483                           	callstack 0
   484  000008                     memset@n:
   485                           	callstack 0
   486  000008                     ___xxtofl@val:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x7
   490  000008                     	ds	2
   491  00000A                     ??_memset:
   492  00000A                     ??_Lcd_Out:
   493  00000A                     _isspace$1758:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x9
   497  00000A                     	ds	1
   498  00000B                     ?_atoi:
   499                           	callstack 0
   500  00000B                     atoi@s:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0xA
   504  00000B                     	ds	1
   505  00000C                     ??___xxtofl:
   506  00000C                     Lcd_Out@y:
   507                           	callstack 0
   508  00000C                     memset@k:
   509                           	callstack 0
   510  00000C                     ___aodiv@divisor:
   511                           	callstack 0
   512  00000C                     ___aomod@divisor:
   513                           	callstack 0
   514                           
   515                           ; 8 bytes @ 0xB
   516  00000C                     	ds	1
   517  00000D                     ??_atoi:
   518  00000D                     Lcd_Out@data:
   519                           	callstack 0
   520  00000D                     fputs@s:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0xC
   524  00000D                     	ds	1
   525  00000E                     ??_appLCD_Init:
   526  00000E                     memset@s:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xD
   530  00000E                     	ds	1
   531  00000F                     fputs@fp:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xE
   535  00000F                     	ds	1
   536  000010                     ___xxtofl@sign:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0xF
   540  000010                     	ds	1
   541  000011                     ___xxtofl@exp:
   542                           	callstack 0
   543  000011                     fputs@c:
   544                           	callstack 0
   545  000011                     atoi@neg:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x10
   549  000011                     	ds	1
   550  000012                     fputs@i:
   551                           	callstack 0
   552  000012                     ___xxtofl@arg:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x11
   556  000012                     	ds	1
   557  000013                     _atoi$1740:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x12
   561  000013                     	ds	1
   562  000014                     ?_pad:
   563                           	callstack 0
   564  000014                     ___aodiv@counter:
   565                           	callstack 0
   566  000014                     ___aomod@counter:
   567                           	callstack 0
   568  000014                     pad@fp:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x13
   572  000014                     	ds	1
   573  000015                     ___aodiv@sign:
   574                           	callstack 0
   575  000015                     ___aomod@sign:
   576                           	callstack 0
   577  000015                     _atoi$1742:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x14
   581  000015                     	ds	1
   582  000016                     ?_abs:
   583                           	callstack 0
   584  000016                     ?___flmul:
   585                           	callstack 0
   586  000016                     pad@buf:
   587                           	callstack 0
   588  000016                     abs@a:
   589                           	callstack 0
   590  000016                     ___flmul@b:
   591                           	callstack 0
   592  000016                     ___aodiv@quotient:
   593                           	callstack 0
   594                           
   595                           ; 8 bytes @ 0x15
   596  000016                     	ds	1
   597  000017                     _atoi$1741:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x16
   601  000017                     	ds	1
   602  000018                     ??_abs:
   603  000018                     pad@p:
   604                           	callstack 0
   605  000018                     atoi@n:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x17
   609  000018                     	ds	2
   610  00001A                     ??_pad:
   611  00001A                     ___flmul@a:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x19
   615  00001A                     	ds	1
   616  00001B                     pad@i:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x1A
   620  00001B                     	ds	2
   621  00001D                     pad@w:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x1C
   625  00001D                     	ds	1
   626  00001E                     ??___flmul:
   627                           
   628                           ; 1 bytes @ 0x1D
   629  00001E                     	ds	1
   630  00001F                     ?_dtoa:
   631                           	callstack 0
   632  00001F                     dtoa@fp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x1E
   636  00001F                     	ds	2
   637  000021                     dtoa@d:
   638                           	callstack 0
   639                           
   640                           ; 8 bytes @ 0x20
   641  000021                     	ds	1
   642  000022                     ___flmul@sign:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x21
   646  000022                     	ds	1
   647  000023                     ___flmul@grs:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x22
   651  000023                     	ds	4
   652  000027                     ___flmul@aexp:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x26
   656  000027                     	ds	1
   657  000028                     ___flmul@bexp:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x27
   661  000028                     	ds	1
   662  000029                     ??_dtoa:
   663  000029                     ___flmul@prod:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x28
   667  000029                     	ds	4
   668  00002D                     ___flmul@temp:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x2C
   672  00002D                     	ds	2
   673  00002F                     ?___fldiv:
   674                           	callstack 0
   675  00002F                     ___fldiv@b:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x2E
   679  00002F                     	ds	2
   680  000031                     _dtoa$1705:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x30
   684  000031                     	ds	2
   685  000033                     dtoa@p:
   686                           	callstack 0
   687  000033                     ___fldiv@a:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x32
   691  000033                     	ds	2
   692  000035                     dtoa@w:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x34
   696  000035                     	ds	2
   697  000037                     ??___fldiv:
   698  000037                     dtoa@s:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x36
   702  000037                     	ds	2
   703  000039                     dtoa@n:
   704                           	callstack 0
   705                           
   706                           ; 8 bytes @ 0x38
   707  000039                     	ds	2
   708  00003B                     ___fldiv@rem:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x3A
   712  00003B                     	ds	4
   713  00003F                     ___fldiv@sign:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x3E
   717  00003F                     	ds	1
   718  000040                     ___fldiv@new_exp:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x3F
   722  000040                     	ds	1
   723  000041                     dtoa@i:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x40
   727  000041                     	ds	1
   728  000042                     ___fldiv@grs:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x41
   732  000042                     	ds	1
   733  000043                     ?_vfpfcnvrt:
   734                           	callstack 0
   735  000043                     vfpfcnvrt@fp:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x42
   739  000043                     	ds	2
   740  000045                     vfpfcnvrt@fmt:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x44
   744  000045                     	ds	1
   745  000046                     ___fldiv@bexp:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x45
   749  000046                     	ds	1
   750  000047                     ___fldiv@aexp:
   751                           	callstack 0
   752  000047                     vfpfcnvrt@ap:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x46
   756  000047                     	ds	1
   757  000048                     ?___fltol:
   758                           	callstack 0
   759  000048                     ___fltol@f1:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x47
   763  000048                     	ds	1
   764  000049                     ??_vfpfcnvrt:
   765                           
   766                           ; 1 bytes @ 0x48
   767  000049                     	ds	3
   768  00004C                     ??___fltol:
   769                           
   770                           ; 1 bytes @ 0x4B
   771  00004C                     	ds	1
   772  00004D                     vfprintf@cfmt:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x4C
   776  00004D                     	ds	3
   777  000050                     ___fltol@sign1:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x4F
   781  000050                     	ds	1
   782  000051                     ___fltol@exp1:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x50
   786  000051                     	ds	1
   787  000052                     ?___awmod:
   788                           	callstack 0
   789  000052                     ___awmod@dividend:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x51
   793  000052                     	ds	2
   794  000054                     ___awmod@divisor:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x53
   798  000054                     	ds	2
   799  000056                     ___awmod@counter:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x55
   803  000056                     	ds	1
   804  000057                     ___awmod@sign:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x56
   808  000057                     	ds	1
   809  000058                     
   810                           ; 1 bytes @ 0x57
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 12 in file "main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0
   832 ;;      Temps:          0       2       0       0       0       0       0       0       0
   833 ;;      Totals:         0       2       0       0       0       0       0       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels required when called:   12
   836 ;; This function calls:
   837 ;;		_appGetElements
   838 ;;		_appInit
   839 ;;		_appStateInitial
   840 ;;		_appStateRecolectData
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847  002C48                     __ptext0:
   848                           	callstack 0
   849  002C48                     _main:
   850                           	callstack 19
   851  002C48                     
   852                           ;main.c: 14:     TRISB = 0xF0;
   853  002C48  0EF0               	movlw	240
   854  002C4A  6E93               	movwf	147,c	;volatile
   855  002C4C                     
   856                           ;main.c: 15:     INTCON2bits.RBPU = 0;
   857  002C4C  9EF1               	bcf	241,7,c	;volatile
   858  002C4E                     
   859                           ;main.c: 16:     TRISAbits.TRISA3 = 0;
   860  002C4E  9692               	bcf	146,3,c	;volatile
   861  002C50                     
   862                           ;main.c: 17:     appInit();
   863  002C50  EC2E  F018         	call	_appInit	;wreg free
   864  002C54                     l4229:
   865                           
   866                           ;main.c: 19:     {;main.c: 20:         LATAbits.LA3 = !LATAbits.LA3;
   867  002C54  A689               	btfss	137,3,c	;volatile
   868  002C56  EF2F  F016         	goto	u4341
   869  002C5A  EF34  F016         	goto	u4340
   870  002C5E                     u4341:
   871  002C5E  0100               	movlb	0	; () banked
   872  002C60  6B8C               	clrf	??_main& (0+255),b
   873  002C62  2B8C               	incf	??_main& (0+255),f,b
   874  002C64  EF36  F016         	goto	u4358
   875  002C68                     u4340:
   876  002C68  0100               	movlb	0	; () banked
   877  002C6A  6B8C               	clrf	??_main& (0+255),b
   878  002C6C                     u4358:
   879  002C6C  478C               	rlncf	??_main& (0+255),f,b
   880  002C6E  478C               	rlncf	??_main& (0+255),f,b
   881  002C70  478C               	rlncf	??_main& (0+255),f,b
   882  002C72  5089               	movf	137,w,c	;volatile
   883  002C74  198C               	xorwf	??_main& (0+255),w,b
   884  002C76  0BF7               	andlw	-9
   885  002C78  198C               	xorwf	??_main& (0+255),w,b
   886  002C7A  6E89               	movwf	137,c	;volatile
   887  002C7C                     
   888                           ; BSR set to: 0
   889                           ;main.c: 21:         _delay((unsigned long)((100)*(12000000/4000.0)));
   890  002C7C  0E02               	movlw	2
   891  002C7E  0100               	movlb	0	; () banked
   892  002C80  6F8D               	movwf	(??_main+1)& (0+255),b
   893  002C82  0E86               	movlw	134
   894  002C84  6F8C               	movwf	??_main& (0+255),b
   895  002C86  0E99               	movlw	153
   896  002C88                     u4427:
   897  002C88  2EE8               	decfsz	wreg,f,c
   898  002C8A  D7FE               	bra	u4427
   899  002C8C  2F8C               	decfsz	??_main& (0+255),f,b
   900  002C8E  D7FC               	bra	u4427
   901  002C90  2F8D               	decfsz	(??_main+1)& (0+255),f,b
   902  002C92  D7FA               	bra	u4427
   903  002C94                     
   904                           ;main.c: 22:         datos.nextFunc();
   905  002C94  EE20  F0CF         	lfsr	2,_datos+23
   906  002C98  D802               	call	u4368
   907  002C9A  EF59  F016         	goto	u4369
   908  002C9E                     u4368:
   909  002C9E  0005               	push	
   910  002CA0  6EFA               	movwf	pclath,c
   911  002CA2  50DE               	movf	postinc2,w,c
   912  002CA4  6EFD               	movwf	tosl,c
   913  002CA6  50DE               	movf	postinc2,w,c
   914  002CA8  6EFE               	movwf	tosh,c
   915  002CAA  50F8               	movf	tblptru,w,c
   916  002CAC  6EFF               	movwf	tosu,c
   917  002CAE  50FA               	movf	pclath,w,c
   918  002CB0  0012               	return		;indir
   919  002CB2                     u4369:
   920  002CB2  EF2A  F016         	goto	l4229
   921  002CB6  EF55  F000         	goto	start
   922  002CBA                     __end_of_main:
   923                           	callstack 0
   924                           
   925 ;; *************** function _appGetElements *****************
   926 ;; Defined at:
   927 ;;		line 41 in file "app.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  cantidad        2   38[BANK0 ] unsigned short 
   932 ;;  inout           1   40[BANK0 ] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   942 ;;      Params:         0       0       0       0       0       0       0       0       0
   943 ;;      Locals:         0       3       0       0       0       0       0       0       0
   944 ;;      Temps:          0       2       0       0       0       0       0       0       0
   945 ;;      Totals:         0       5       0       0       0       0       0       0       0
   946 ;;Total ram usage:        5 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:   10
   949 ;; This function calls:
   950 ;;		_Lcd_Cmd
   951 ;;		_Lcd_Out
   952 ;;		___wmul
   953 ;;		_appTimerStart
   954 ;;		_appTimerStop
   955 ;;		_memset
   956 ;;		_sprintf
   957 ;;		_teclado
   958 ;; This function is called by:
   959 ;;		_isrL
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text1
   965  001EEA                     __ptext1:
   966                           	callstack 0
   967  001EEA                     _appGetElements:
   968                           	callstack 20
   969  001EEA                     
   970                           ;app.c: 43:     datos.state = 0;
   971  001EEA  0E00               	movlw	0
   972  001EEC  0100               	movlb	0	; () banked
   973  001EEE  6FBB               	movwf	(_datos+3)& (0+255),b
   974                           
   975                           ;app.c: 44:     uint16_t cantidad = 0;
   976  001EF0  0E00               	movlw	0
   977  001EF2  6F87               	movwf	(appGetElements@cantidad+1)& (0+255),b
   978  001EF4  0E00               	movlw	0
   979  001EF6  6F86               	movwf	appGetElements@cantidad& (0+255),b
   980                           
   981                           ;app.c: 45:     uint8_t inout = 0;
   982  001EF8  0E00               	movlw	0
   983  001EFA  6F88               	movwf	appGetElements@inout& (0+255),b
   984  001EFC                     
   985                           ; BSR set to: 0
   986                           ;app.c: 46:     appTimerStop();
   987  001EFC  EC51  F018         	call	_appTimerStop	;wreg free
   988  001F00                     
   989                           ;app.c: 47:     memset(datos.display,0,sizeof(datos.display));
   990  001F00  0EBF               	movlw	low (_datos+7)
   991  001F02  6E04               	movwf	memset@dest^0,c
   992  001F04  0E00               	movlw	high (_datos+7)
   993  001F06  6E05               	movwf	(memset@dest+1)^0,c
   994  001F08  0E00               	movlw	0
   995  001F0A  6E07               	movwf	(memset@c+1)^0,c
   996  001F0C  0E00               	movlw	0
   997  001F0E  6E06               	movwf	memset@c^0,c
   998  001F10  0E00               	movlw	0
   999  001F12  6E09               	movwf	(memset@n+1)^0,c
  1000  001F14  0E10               	movlw	16
  1001  001F16  6E08               	movwf	memset@n^0,c
  1002  001F18  EC30  F010         	call	_memset	;wreg free
  1003  001F1C                     
  1004                           ;app.c: 48:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1005  001F1C  0E01               	movlw	1
  1006  001F1E  ECE6  F012         	call	_Lcd_Cmd
  1007  001F22  0E02               	movlw	2
  1008  001F24  0100               	movlb	0	; () banked
  1009  001F26  6F85               	movwf	(??_appGetElements+1)& (0+255),b
  1010  001F28  0E86               	movlw	134
  1011  001F2A  6F84               	movwf	??_appGetElements& (0+255),b
  1012  001F2C  0E99               	movlw	153
  1013  001F2E                     u4437:
  1014  001F2E  2EE8               	decfsz	wreg,f,c
  1015  001F30  D7FE               	bra	u4437
  1016  001F32  2F84               	decfsz	??_appGetElements& (0+255),f,b
  1017  001F34  D7FC               	bra	u4437
  1018  001F36  2F85               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1019  001F38  D7FA               	bra	u4437
  1020  001F3A                     
  1021                           ;app.c: 49:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  1022  001F3A  0E00               	movlw	0
  1023  001F3C  6E07               	movwf	Lcd_Out@x^0,c
  1024  001F3E  0E01               	movlw	low STR_6
  1025  001F40  6E08               	movwf	Lcd_Out@buffer^0,c
  1026  001F42  0E08               	movlw	high STR_6
  1027  001F44  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1028  001F46  0E01               	movlw	1
  1029  001F48  ECFE  F013         	call	_Lcd_Out
  1030                           
  1031                           ;app.c: 50:     while(inout != '*')
  1032  001F4C  EFEB  F00F         	goto	l4203
  1033  001F50                     l4191:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;app.c: 51:     {;app.c: 52:         teclado(&inout);
  1037  001F50  0E88               	movlw	low appGetElements@inout
  1038  001F52  6E04               	movwf	teclado@valor^0,c
  1039  001F54  0E00               	movlw	high appGetElements@inout
  1040  001F56  6E05               	movwf	(teclado@valor+1)^0,c
  1041  001F58  EC26  F00B         	call	_teclado	;wreg free
  1042  001F5C                     
  1043                           ;app.c: 54:         if((inout >= '0') && (inout <= '9'))
  1044  001F5C  0E2F               	movlw	47
  1045  001F5E  0100               	movlb	0	; () banked
  1046  001F60  6588               	cpfsgt	appGetElements@inout& (0+255),b
  1047  001F62  EFB5  F00F         	goto	u4301
  1048  001F66  EFB7  F00F         	goto	u4300
  1049  001F6A                     u4301:
  1050  001F6A  EFD4  F00F         	goto	l4199
  1051  001F6E                     u4300:
  1052  001F6E                     
  1053                           ; BSR set to: 0
  1054  001F6E  0E3A               	movlw	58
  1055  001F70  6188               	cpfslt	appGetElements@inout& (0+255),b
  1056  001F72  EFBD  F00F         	goto	u4311
  1057  001F76  EFBF  F00F         	goto	u4310
  1058  001F7A                     u4311:
  1059  001F7A  EFD4  F00F         	goto	l4199
  1060  001F7E                     u4310:
  1061  001F7E                     
  1062                           ; BSR set to: 0
  1063                           ;app.c: 55:         {;app.c: 56:             cantidad = (cantidad*10)+(inout - 48);
  1064  001F7E  C086  F004         	movff	appGetElements@cantidad,___wmul@multiplier
  1065  001F82  C087  F005         	movff	appGetElements@cantidad+1,___wmul@multiplier+1
  1066  001F86  0E00               	movlw	0
  1067  001F88  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  1068  001F8A  0E0A               	movlw	10
  1069  001F8C  6E06               	movwf	___wmul@multiplicand^0,c
  1070  001F8E  EC0E  F018         	call	___wmul	;wreg free
  1071  001F92  0100               	movlb	0	; () banked
  1072  001F94  5188               	movf	appGetElements@inout& (0+255),w,b
  1073  001F96  2604               	addwf	?___wmul^0,f,c
  1074  001F98  0E00               	movlw	0
  1075  001F9A  2205               	addwfc	(?___wmul+1)^0,f,c
  1076  001F9C  0ED0               	movlw	208
  1077  001F9E  2404               	addwf	?___wmul^0,w,c
  1078  001FA0  6F86               	movwf	appGetElements@cantidad& (0+255),b
  1079  001FA2  0EFF               	movlw	255
  1080  001FA4  2005               	addwfc	(?___wmul+1)^0,w,c
  1081  001FA6  6F87               	movwf	(appGetElements@cantidad+1)& (0+255),b
  1082  001FA8                     l4199:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;app.c: 58:         sprintf((char *)datos.display,"%d",cantidad);
  1086  001FA8  0EBF               	movlw	low (_datos+7)
  1087  001FAA  6F72               	movwf	sprintf@s& (0+255),b
  1088  001FAC  0E00               	movlw	high (_datos+7)
  1089  001FAE  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1090  001FB0  0E3A               	movlw	low (STR_5+2)
  1091  001FB2  6F74               	movwf	sprintf@fmt& (0+255),b
  1092  001FB4  0E08               	movlw	high (STR_5+2)
  1093  001FB6  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1094  001FB8  C086  F076         	movff	appGetElements@cantidad,?_sprintf+4
  1095  001FBC  C087  F077         	movff	appGetElements@cantidad+1,?_sprintf+5
  1096  001FC0  EC8E  F016         	call	_sprintf	;wreg free
  1097  001FC4                     
  1098                           ;app.c: 59:         Lcd_Out(2,0, (int8_t*)datos.display);
  1099  001FC4  0E00               	movlw	0
  1100  001FC6  6E07               	movwf	Lcd_Out@x^0,c
  1101  001FC8  0EBF               	movlw	low (_datos+7)
  1102  001FCA  6E08               	movwf	Lcd_Out@buffer^0,c
  1103  001FCC  0E00               	movlw	high (_datos+7)
  1104  001FCE  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1105  001FD0  0E02               	movlw	2
  1106  001FD2  ECFE  F013         	call	_Lcd_Out
  1107  001FD6                     l4203:
  1108                           
  1109                           ;app.c: 50:     while(inout != '*')
  1110  001FD6  0E2A               	movlw	42
  1111  001FD8  0100               	movlb	0	; () banked
  1112  001FDA  1988               	xorwf	appGetElements@inout& (0+255),w,b
  1113  001FDC  A4D8               	btfss	status,2,c
  1114  001FDE  EFF3  F00F         	goto	u4321
  1115  001FE2  EFF5  F00F         	goto	u4320
  1116  001FE6                     u4321:
  1117  001FE6  EFA8  F00F         	goto	l4191
  1118  001FEA                     u4320:
  1119  001FEA                     
  1120                           ; BSR set to: 0
  1121                           ;app.c: 61:     datos.elements -= cantidad;
  1122  001FEA  5186               	movf	appGetElements@cantidad& (0+255),w,b
  1123  001FEC  5FB9               	subwf	(_datos+1)& (0+255),f,b
  1124  001FEE  5187               	movf	(appGetElements@cantidad+1)& (0+255),w,b
  1125  001FF0  5BBA               	subwfb	(_datos+2)& (0+255),f,b
  1126  001FF2                     
  1127                           ; BSR set to: 0
  1128                           ;app.c: 62:     datos.character = 0;
  1129  001FF2  0E00               	movlw	0
  1130  001FF4  6FBE               	movwf	(_datos+6)& (0+255),b
  1131  001FF6                     
  1132                           ; BSR set to: 0
  1133                           ;app.c: 63:     if(datos.elements <= 0)
  1134  001FF6  BFBA               	btfsc	(_datos+2)& (0+255),7,b
  1135  001FF8  EF08  F010         	goto	u4330
  1136  001FFC  51BA               	movf	(_datos+2)& (0+255),w,b
  1137  001FFE  E106               	bnz	u4331
  1138  002000  05B9               	decf	(_datos+1)& (0+255),w,b
  1139  002002  B0D8               	btfsc	status,0,c
  1140  002004  EF06  F010         	goto	u4331
  1141  002008  EF08  F010         	goto	u4330
  1142  00200C                     u4331:
  1143  00200C  EF0C  F010         	goto	l4213
  1144  002010                     u4330:
  1145  002010                     
  1146                           ; BSR set to: 0
  1147                           ;app.c: 64:     {;app.c: 65:         datos.elements = 0;
  1148  002010  0E00               	movlw	0
  1149  002012  6FBA               	movwf	(_datos+2)& (0+255),b
  1150  002014  0E00               	movlw	0
  1151  002016  6FB9               	movwf	(_datos+1)& (0+255),b
  1152  002018                     l4213:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;app.c: 67:     _delay((unsigned long)((500)*(12000000/4000.0)));
  1156  002018  0E08               	movlw	8
  1157  00201A  0100               	movlb	0	; () banked
  1158  00201C  6F85               	movwf	(??_appGetElements+1)& (0+255),b
  1159  00201E  0E9D               	movlw	157
  1160  002020  6F84               	movwf	??_appGetElements& (0+255),b
  1161  002022  0E05               	movlw	5
  1162  002024                     u4447:
  1163  002024  2EE8               	decfsz	wreg,f,c
  1164  002026  D7FE               	bra	u4447
  1165  002028  2F84               	decfsz	??_appGetElements& (0+255),f,b
  1166  00202A  D7FC               	bra	u4447
  1167  00202C  2F85               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1168  00202E  D7FA               	bra	u4447
  1169  002030  D000               	nop2	
  1170  002032                     
  1171                           ;app.c: 68:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1172  002032  0E01               	movlw	1
  1173  002034  ECE6  F012         	call	_Lcd_Cmd
  1174  002038  0E02               	movlw	2
  1175  00203A  0100               	movlb	0	; () banked
  1176  00203C  6F85               	movwf	(??_appGetElements+1)& (0+255),b
  1177  00203E  0E86               	movlw	134
  1178  002040  6F84               	movwf	??_appGetElements& (0+255),b
  1179  002042  0E99               	movlw	153
  1180  002044                     u4457:
  1181  002044  2EE8               	decfsz	wreg,f,c
  1182  002046  D7FE               	bra	u4457
  1183  002048  2F84               	decfsz	??_appGetElements& (0+255),f,b
  1184  00204A  D7FC               	bra	u4457
  1185  00204C  2F85               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1186  00204E  D7FA               	bra	u4457
  1187  002050                     
  1188                           ;app.c: 69:     datos.nextFunc = appStateInitial;
  1189  002050  0EF4               	movlw	low _appStateInitial
  1190  002052  0100               	movlb	0	; () banked
  1191  002054  6FCF               	movwf	(_datos+23)& (0+255),b
  1192  002056  0E2F               	movlw	high _appStateInitial
  1193  002058  6FD0               	movwf	(_datos+24)& (0+255),b
  1194                           
  1195                           ;app.c: 70:     appTimerStart();
  1196  00205A  EC44  F018         	call	_appTimerStart	;wreg free
  1197  00205E  0012               	return		;funcret
  1198  002060                     __end_of_appGetElements:
  1199                           	callstack 0
  1200                           
  1201 ;; *************** function _appStateInitial *****************
  1202 ;; Defined at:
  1203 ;;		line 30 in file "app.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    3
  1224 ;; This function calls:
  1225 ;;		_teclado
  1226 ;; This function is called by:
  1227 ;;		_appStateRecolectData
  1228 ;;		_appGetElements
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text2
  1234  002FF4                     __ptext2:
  1235                           	callstack 0
  1236  002FF4                     _appStateInitial:
  1237                           	callstack 27
  1238  002FF4                     
  1239                           ;app.c: 33:     teclado(&datos.character);
  1240  002FF4  0EBE               	movlw	low (_datos+6)
  1241  002FF6  6E04               	movwf	teclado@valor^0,c
  1242  002FF8  0E00               	movlw	high (_datos+6)
  1243  002FFA  6E05               	movwf	(teclado@valor+1)^0,c
  1244  002FFC  EC26  F00B         	call	_teclado	;wreg free
  1245  003000                     
  1246                           ;app.c: 34:     if(datos.character != 0)
  1247  003000  0100               	movlb	0	; () banked
  1248  003002  51BE               	movf	(_datos+6)& (0+255),w,b
  1249  003004  B4D8               	btfsc	status,2,c
  1250  003006  EF07  F018         	goto	u3531
  1251  00300A  EF09  F018         	goto	u3530
  1252  00300E                     u3531:
  1253  00300E  EF0D  F018         	goto	l254
  1254  003012                     u3530:
  1255  003012                     
  1256                           ; BSR set to: 0
  1257                           ;app.c: 35:     {;app.c: 36:         datos.state = 1;
  1258  003012  0E01               	movlw	1
  1259  003014  6FBB               	movwf	(_datos+3)& (0+255),b
  1260                           
  1261                           ;app.c: 37:         datos.character = 0;
  1262  003016  0E00               	movlw	0
  1263  003018  6FBE               	movwf	(_datos+6)& (0+255),b
  1264  00301A                     l254:
  1265                           
  1266                           ; BSR set to: 0
  1267  00301A  0012               	return		;funcret
  1268  00301C                     __end_of_appStateInitial:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function _appStateRecolectData *****************
  1272 ;; Defined at:
  1273 ;;		line 23 in file "app.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1287 ;;      Params:         0       0       0       0       0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1290 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:   11
  1294 ;; This function calls:
  1295 ;;		_appADC
  1296 ;;		_appBat
  1297 ;;		_appElemts
  1298 ;; This function is called by:
  1299 ;;		_isrL
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text3
  1305  002F88                     __ptext3:
  1306                           	callstack 0
  1307  002F88                     _appStateRecolectData:
  1308                           	callstack 19
  1309  002F88                     
  1310                           ;app.c: 25:     appADC(&datos);
  1311  002F88  0EB8               	movlw	low _datos
  1312  002F8A  0100               	movlb	0	; () banked
  1313  002F8C  6F84               	movwf	appADC@data& (0+255),b
  1314  002F8E  0E00               	movlw	high _datos
  1315  002F90  6F85               	movwf	(appADC@data+1)& (0+255),b
  1316  002F92  EC44  F012         	call	_appADC	;wreg free
  1317                           
  1318                           ;app.c: 26:     appBat(&datos);
  1319  002F96  0EB8               	movlw	low _datos
  1320  002F98  0100               	movlb	0	; () banked
  1321  002F9A  6F84               	movwf	appBat@data& (0+255),b
  1322  002F9C  0E00               	movlw	high _datos
  1323  002F9E  6F85               	movwf	(appBat@data+1)& (0+255),b
  1324  002FA0  EC1B  F00C         	call	_appBat	;wreg free
  1325                           
  1326                           ;app.c: 27:     appElemts(&datos.elements);
  1327  002FA4  0EB9               	movlw	low (_datos+1)
  1328  002FA6  0100               	movlb	0	; () banked
  1329  002FA8  6F84               	movwf	appElemts@elements& (0+255),b
  1330  002FAA  0E00               	movlw	high (_datos+1)
  1331  002FAC  6F85               	movwf	(appElemts@elements+1)& (0+255),b
  1332  002FAE  EC04  F017         	call	_appElemts	;wreg free
  1333  002FB2                     
  1334                           ;app.c: 28:     datos.nextFunc = appStateInitial;
  1335  002FB2  0EF4               	movlw	low _appStateInitial
  1336  002FB4  0100               	movlb	0	; () banked
  1337  002FB6  6FCF               	movwf	(_datos+23)& (0+255),b
  1338  002FB8  0E2F               	movlw	high _appStateInitial
  1339  002FBA  6FD0               	movwf	(_datos+24)& (0+255),b
  1340  002FBC                     
  1341                           ; BSR set to: 0
  1342  002FBC  0012               	return		;funcret
  1343  002FBE                     __end_of_appStateRecolectData:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _appElemts *****************
  1347 ;; Defined at:
  1348 ;;		line 83 in file "servo.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  elements        2   36[BANK0 ] PTR const short 
  1351 ;;		 -> datos.elements(2), datos(25), 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  dataout         6   38[BANK0 ] unsigned char [6]
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1363 ;;      Params:         0       2       0       0       0       0       0       0       0
  1364 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1366 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1367 ;;Total ram usage:        8 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:   10
  1370 ;; This function calls:
  1371 ;;		_Lcd_Out
  1372 ;;		_sprintf
  1373 ;; This function is called by:
  1374 ;;		_appStateRecolectData
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text4
  1379  002E08                     __ptext4:
  1380                           	callstack 0
  1381  002E08                     _appElemts:
  1382                           	callstack 19
  1383  002E08                     
  1384                           ;servo.c: 83: void appElemts(const int16_t * elements);servo.c: 84: {;servo.c: 85:     u
      +                          int8_t dataout[6] = {0};
  1385  002E08  EE20  F086         	lfsr	2,appElemts@dataout
  1386  002E0C  0E05               	movlw	5
  1387  002E0E                     u4291:
  1388  002E0E  6ADE               	clrf	postinc2,c
  1389  002E10  06E8               	decf	wreg,f,c
  1390  002E12  E2FD               	bc	u4291
  1391  002E14                     
  1392                           ;servo.c: 86:     sprintf((char *)dataout,"#:%d",*elements);
  1393  002E14  0E86               	movlw	low appElemts@dataout
  1394  002E16  0100               	movlb	0	; () banked
  1395  002E18  6F72               	movwf	sprintf@s& (0+255),b
  1396  002E1A  0E00               	movlw	high appElemts@dataout
  1397  002E1C  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1398  002E1E  0E38               	movlw	low STR_5
  1399  002E20  6F74               	movwf	sprintf@fmt& (0+255),b
  1400  002E22  0E08               	movlw	high STR_5
  1401  002E24  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1402  002E26  C084  FFD9         	movff	appElemts@elements,fsr2l
  1403  002E2A  C085  FFDA         	movff	appElemts@elements+1,fsr2h
  1404  002E2E  CFDE F076          	movff	postinc2,?_sprintf+4
  1405  002E32  CFDD F077          	movff	postdec2,?_sprintf+5
  1406  002E36  EC8E  F016         	call	_sprintf	;wreg free
  1407  002E3A                     
  1408                           ;servo.c: 87:     Lcd_Out(2,10, (int8_t*)dataout);
  1409  002E3A  0E0A               	movlw	10
  1410  002E3C  6E07               	movwf	Lcd_Out@x^0,c
  1411  002E3E  0E86               	movlw	low appElemts@dataout
  1412  002E40  6E08               	movwf	Lcd_Out@buffer^0,c
  1413  002E42  0E00               	movlw	high appElemts@dataout
  1414  002E44  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1415  002E46  0E02               	movlw	2
  1416  002E48  ECFE  F013         	call	_Lcd_Out
  1417  002E4C  0012               	return		;funcret
  1418  002E4E                     __end_of_appElemts:
  1419                           	callstack 0
  1420                           
  1421 ;; *************** function _appBat *****************
  1422 ;; Defined at:
  1423 ;;		line 63 in file "adc.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  data            2   36[BANK0 ] PTR struct _state
  1426 ;;		 -> datos(25), 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1438 ;;      Params:         0       2       0       0       0       0       0       0       0
  1439 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1440 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1441 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1442 ;;Total ram usage:        8 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:   10
  1445 ;; This function calls:
  1446 ;;		_Lcd_Out
  1447 ;;		___fldiv
  1448 ;;		___flmul
  1449 ;;		___fltol
  1450 ;;		___xxtofl
  1451 ;;		_adcGetValue
  1452 ;;		_memset
  1453 ;;		_sprintf
  1454 ;; This function is called by:
  1455 ;;		_appStateRecolectData
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text5
  1460  001836                     __ptext5:
  1461                           	callstack 0
  1462  001836                     _appBat:
  1463                           	callstack 19
  1464  001836                     
  1465                           ;adc.c: 63: void appBat(StateMachine *data);adc.c: 64: {;adc.c: 65:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1466  001836  0E07               	movlw	7
  1467  001838  0100               	movlb	0	; () banked
  1468  00183A  2584               	addwf	appBat@data& (0+255),w,b
  1469  00183C  6E04               	movwf	memset@dest^0,c
  1470  00183E  0E00               	movlw	0
  1471  001840  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1472  001842  6E05               	movwf	(memset@dest+1)^0,c
  1473  001844  0E00               	movlw	0
  1474  001846  6E07               	movwf	(memset@c+1)^0,c
  1475  001848  0E00               	movlw	0
  1476  00184A  6E06               	movwf	memset@c^0,c
  1477  00184C  0E00               	movlw	0
  1478  00184E  6E09               	movwf	(memset@n+1)^0,c
  1479  001850  0E10               	movlw	16
  1480  001852  6E08               	movwf	memset@n^0,c
  1481  001854  EC30  F010         	call	_memset	;wreg free
  1482                           
  1483                           ;adc.c: 70:     data->bat = adcGetValue(1);
  1484  001858  0E01               	movlw	1
  1485  00185A  EC8A  F017         	call	_adcGetValue
  1486  00185E  0100               	movlb	0	; () banked
  1487  001860  EE20 F004          	lfsr	2,4
  1488  001864  5184               	movf	appBat@data& (0+255),w,b
  1489  001866  26D9               	addwf	fsr2l,f,c
  1490  001868  5185               	movf	(appBat@data+1)& (0+255),w,b
  1491  00186A  22DA               	addwfc	fsr2h,f,c
  1492  00186C  C004  FFDE         	movff	?_adcGetValue,postinc2
  1493  001870  C005  FFDD         	movff	?_adcGetValue+1,postdec2
  1494  001874                     
  1495                           ; BSR set to: 0
  1496                           ;adc.c: 71:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1497  001874  0E00               	movlw	0
  1498  001876  6E33               	movwf	___fldiv@a^0,c
  1499  001878  0E00               	movlw	0
  1500  00187A  6E34               	movwf	(___fldiv@a+1)^0,c
  1501  00187C  0E80               	movlw	128
  1502  00187E  6E35               	movwf	(___fldiv@a+2)^0,c
  1503  001880  0E44               	movlw	68
  1504  001882  6E36               	movwf	(___fldiv@a+3)^0,c
  1505  001884  0E00               	movlw	0
  1506  001886  6E1A               	movwf	___flmul@a^0,c
  1507  001888  0E00               	movlw	0
  1508  00188A  6E1B               	movwf	(___flmul@a+1)^0,c
  1509  00188C  0EA0               	movlw	160
  1510  00188E  6E1C               	movwf	(___flmul@a+2)^0,c
  1511  001890  0E40               	movlw	64
  1512  001892  6E1D               	movwf	(___flmul@a+3)^0,c
  1513  001894  EE20 F004          	lfsr	2,4
  1514  001898  5184               	movf	appBat@data& (0+255),w,b
  1515  00189A  26D9               	addwf	fsr2l,f,c
  1516  00189C  5185               	movf	(appBat@data+1)& (0+255),w,b
  1517  00189E  22DA               	addwfc	fsr2h,f,c
  1518  0018A0  CFDE F086          	movff	postinc2,??_appBat
  1519  0018A4  CFDD F087          	movff	postdec2,??_appBat+1
  1520  0018A8  C086  F008         	movff	??_appBat,___xxtofl@val
  1521  0018AC  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1522  0018B0  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1523  0018B2  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1524  0018B4  0E00               	movlw	0
  1525  0018B6  EC0F  F00D         	call	___xxtofl
  1526  0018BA  C008  F016         	movff	?___xxtofl,___flmul@b
  1527  0018BE  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1528  0018C2  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1529  0018C6  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1530  0018CA  EC1F  F004         	call	___flmul	;wreg free
  1531  0018CE  C016  F02F         	movff	?___flmul,___fldiv@b
  1532  0018D2  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1533  0018D6  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1534  0018DA  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1535  0018DE  EC34  F006         	call	___fldiv	;wreg free
  1536  0018E2  C02F  F088         	movff	?___fldiv,_appBat$2019
  1537  0018E6  C030  F089         	movff	?___fldiv+1,_appBat$2019+1
  1538  0018EA  C031  F08A         	movff	?___fldiv+2,_appBat$2019+2
  1539  0018EE  C032  F08B         	movff	?___fldiv+3,_appBat$2019+3
  1540  0018F2                     
  1541                           ;adc.c: 71:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1542  0018F2  0E00               	movlw	0
  1543  0018F4  6E1A               	movwf	___flmul@a^0,c
  1544  0018F6  0E00               	movlw	0
  1545  0018F8  6E1B               	movwf	(___flmul@a+1)^0,c
  1546  0018FA  0EC8               	movlw	200
  1547  0018FC  6E1C               	movwf	(___flmul@a+2)^0,c
  1548  0018FE  0E42               	movlw	66
  1549  001900  6E1D               	movwf	(___flmul@a+3)^0,c
  1550  001902  C088  F016         	movff	_appBat$2019,___flmul@b
  1551  001906  C089  F017         	movff	_appBat$2019+1,___flmul@b+1
  1552  00190A  C08A  F018         	movff	_appBat$2019+2,___flmul@b+2
  1553  00190E  C08B  F019         	movff	_appBat$2019+3,___flmul@b+3
  1554  001912  EC1F  F004         	call	___flmul	;wreg free
  1555  001916  C016  F048         	movff	?___flmul,___fltol@f1
  1556  00191A  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1557  00191E  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1558  001922  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1559  001926  EC7B  F013         	call	___fltol	;wreg free
  1560  00192A  0100               	movlb	0	; () banked
  1561  00192C  EE20 F004          	lfsr	2,4
  1562  001930  5184               	movf	appBat@data& (0+255),w,b
  1563  001932  26D9               	addwf	fsr2l,f,c
  1564  001934  5185               	movf	(appBat@data+1)& (0+255),w,b
  1565  001936  22DA               	addwfc	fsr2h,f,c
  1566  001938  C048  FFDE         	movff	?___fltol,postinc2
  1567  00193C  C049  FFDD         	movff	?___fltol+1,postdec2
  1568  001940                     
  1569                           ; BSR set to: 0
  1570                           ;adc.c: 72:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  1571  001940  0E00               	movlw	0
  1572  001942  6E33               	movwf	___fldiv@a^0,c
  1573  001944  0E00               	movlw	0
  1574  001946  6E34               	movwf	(___fldiv@a+1)^0,c
  1575  001948  0EFA               	movlw	250
  1576  00194A  6E35               	movwf	(___fldiv@a+2)^0,c
  1577  00194C  0E43               	movlw	67
  1578  00194E  6E36               	movwf	(___fldiv@a+3)^0,c
  1579  001950  0E00               	movlw	0
  1580  001952  6E1A               	movwf	___flmul@a^0,c
  1581  001954  0E00               	movlw	0
  1582  001956  6E1B               	movwf	(___flmul@a+1)^0,c
  1583  001958  0EC8               	movlw	200
  1584  00195A  6E1C               	movwf	(___flmul@a+2)^0,c
  1585  00195C  0E42               	movlw	66
  1586  00195E  6E1D               	movwf	(___flmul@a+3)^0,c
  1587  001960  EE20 F004          	lfsr	2,4
  1588  001964  5184               	movf	appBat@data& (0+255),w,b
  1589  001966  26D9               	addwf	fsr2l,f,c
  1590  001968  5185               	movf	(appBat@data+1)& (0+255),w,b
  1591  00196A  22DA               	addwfc	fsr2h,f,c
  1592  00196C  CFDE F086          	movff	postinc2,??_appBat
  1593  001970  CFDD F087          	movff	postdec2,??_appBat+1
  1594  001974  C086  F008         	movff	??_appBat,___xxtofl@val
  1595  001978  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1596  00197C  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1597  00197E  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1598  001980  0E00               	movlw	0
  1599  001982  EC0F  F00D         	call	___xxtofl
  1600  001986  C008  F016         	movff	?___xxtofl,___flmul@b
  1601  00198A  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1602  00198E  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1603  001992  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1604  001996  EC1F  F004         	call	___flmul	;wreg free
  1605  00199A  C016  F02F         	movff	?___flmul,___fldiv@b
  1606  00199E  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1607  0019A2  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1608  0019A6  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1609  0019AA  EC34  F006         	call	___fldiv	;wreg free
  1610  0019AE  C02F  F048         	movff	?___fldiv,___fltol@f1
  1611  0019B2  C030  F049         	movff	?___fldiv+1,___fltol@f1+1
  1612  0019B6  C031  F04A         	movff	?___fldiv+2,___fltol@f1+2
  1613  0019BA  C032  F04B         	movff	?___fldiv+3,___fltol@f1+3
  1614  0019BE  EC7B  F013         	call	___fltol	;wreg free
  1615  0019C2  0100               	movlb	0	; () banked
  1616  0019C4  EE20 F004          	lfsr	2,4
  1617  0019C8  5184               	movf	appBat@data& (0+255),w,b
  1618  0019CA  26D9               	addwf	fsr2l,f,c
  1619  0019CC  5185               	movf	(appBat@data+1)& (0+255),w,b
  1620  0019CE  22DA               	addwfc	fsr2h,f,c
  1621  0019D0  C048  FFDE         	movff	?___fltol,postinc2
  1622  0019D4  C049  FFDD         	movff	?___fltol+1,postdec2
  1623  0019D8                     
  1624                           ; BSR set to: 0
  1625                           ;adc.c: 73:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  1626  0019D8  0E07               	movlw	7
  1627  0019DA  2584               	addwf	appBat@data& (0+255),w,b
  1628  0019DC  6F72               	movwf	sprintf@s& (0+255),b
  1629  0019DE  0E00               	movlw	0
  1630  0019E0  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1631  0019E2  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1632  0019E4  0E29               	movlw	low STR_2
  1633  0019E6  6F74               	movwf	sprintf@fmt& (0+255),b
  1634  0019E8  0E08               	movlw	high STR_2
  1635  0019EA  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1636  0019EC  EE20 F004          	lfsr	2,4
  1637  0019F0  5184               	movf	appBat@data& (0+255),w,b
  1638  0019F2  26D9               	addwf	fsr2l,f,c
  1639  0019F4  5185               	movf	(appBat@data+1)& (0+255),w,b
  1640  0019F6  22DA               	addwfc	fsr2h,f,c
  1641  0019F8  CFDE F076          	movff	postinc2,?_sprintf+4
  1642  0019FC  CFDD F077          	movff	postdec2,?_sprintf+5
  1643  001A00  EC8E  F016         	call	_sprintf	;wreg free
  1644  001A04                     
  1645                           ;adc.c: 74:     Lcd_Out(2,0, (int8_t*)data->display);
  1646  001A04  0E00               	movlw	0
  1647  001A06  6E07               	movwf	Lcd_Out@x^0,c
  1648  001A08  0E07               	movlw	7
  1649  001A0A  0100               	movlb	0	; () banked
  1650  001A0C  2584               	addwf	appBat@data& (0+255),w,b
  1651  001A0E  6E08               	movwf	Lcd_Out@buffer^0,c
  1652  001A10  0E00               	movlw	0
  1653  001A12  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1654  001A14  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1655  001A16  0E02               	movlw	2
  1656  001A18  ECFE  F013         	call	_Lcd_Out
  1657  001A1C  0012               	return		;funcret
  1658  001A1E                     __end_of_appBat:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _appADC *****************
  1662 ;; Defined at:
  1663 ;;		line 53 in file "adc.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  data            2   36[BANK0 ] PTR struct _state
  1666 ;;		 -> datos(25), 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  lm35val         4   38[BANK0 ] float 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1678 ;;      Params:         0       2       0       0       0       0       0       0       0
  1679 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1681 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1682 ;;Total ram usage:        6 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:   10
  1685 ;; This function calls:
  1686 ;;		_Lcd_Out
  1687 ;;		___awmod
  1688 ;;		___fldiv
  1689 ;;		___flmul
  1690 ;;		___fltol
  1691 ;;		___xxtofl
  1692 ;;		_adcGetValue
  1693 ;;		_memset
  1694 ;;		_sprintf
  1695 ;; This function is called by:
  1696 ;;		_appStateRecolectData
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text6
  1701  002488                     __ptext6:
  1702                           	callstack 0
  1703  002488                     _appADC:
  1704                           	callstack 19
  1705  002488                     
  1706                           ;adc.c: 53: void appADC(StateMachine *data);adc.c: 54: {;adc.c: 55:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1707  002488  0E07               	movlw	7
  1708  00248A  0100               	movlb	0	; () banked
  1709  00248C  2584               	addwf	appADC@data& (0+255),w,b
  1710  00248E  6E04               	movwf	memset@dest^0,c
  1711  002490  0E00               	movlw	0
  1712  002492  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1713  002494  6E05               	movwf	(memset@dest+1)^0,c
  1714  002496  0E00               	movlw	0
  1715  002498  6E07               	movwf	(memset@c+1)^0,c
  1716  00249A  0E00               	movlw	0
  1717  00249C  6E06               	movwf	memset@c^0,c
  1718  00249E  0E00               	movlw	0
  1719  0024A0  6E09               	movwf	(memset@n+1)^0,c
  1720  0024A2  0E10               	movlw	16
  1721  0024A4  6E08               	movwf	memset@n^0,c
  1722  0024A6  EC30  F010         	call	_memset	;wreg free
  1723  0024AA                     
  1724                           ;adc.c: 56:     float lm35val = adcGetValue(0);
  1725  0024AA  0E00               	movlw	0
  1726  0024AC  EC8A  F017         	call	_adcGetValue
  1727  0024B0  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1728  0024B4  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1729  0024B8  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1730  0024BA  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1731  0024BC  0E00               	movlw	0
  1732  0024BE  EC0F  F00D         	call	___xxtofl
  1733  0024C2  C008  F086         	movff	?___xxtofl,appADC@lm35val
  1734  0024C6  C009  F087         	movff	?___xxtofl+1,appADC@lm35val+1
  1735  0024CA  C00A  F088         	movff	?___xxtofl+2,appADC@lm35val+2
  1736  0024CE  C00B  F089         	movff	?___xxtofl+3,appADC@lm35val+3
  1737  0024D2                     
  1738                           ;adc.c: 57:     lm35val = (float)((lm35val*4.88)/10.0);
  1739  0024D2  0EF6               	movlw	246
  1740  0024D4  6E1A               	movwf	___flmul@a^0,c
  1741  0024D6  0E28               	movlw	40
  1742  0024D8  6E1B               	movwf	(___flmul@a+1)^0,c
  1743  0024DA  0E9C               	movlw	156
  1744  0024DC  6E1C               	movwf	(___flmul@a+2)^0,c
  1745  0024DE  0E40               	movlw	64
  1746  0024E0  6E1D               	movwf	(___flmul@a+3)^0,c
  1747  0024E2  C086  F016         	movff	appADC@lm35val,___flmul@b
  1748  0024E6  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1749  0024EA  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1750  0024EE  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1751  0024F2  EC1F  F004         	call	___flmul	;wreg free
  1752  0024F6  C016  F02F         	movff	?___flmul,___fldiv@b
  1753  0024FA  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1754  0024FE  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1755  002502  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1756  002506  0E00               	movlw	0
  1757  002508  6E33               	movwf	___fldiv@a^0,c
  1758  00250A  0E00               	movlw	0
  1759  00250C  6E34               	movwf	(___fldiv@a+1)^0,c
  1760  00250E  0E20               	movlw	32
  1761  002510  6E35               	movwf	(___fldiv@a+2)^0,c
  1762  002512  0E41               	movlw	65
  1763  002514  6E36               	movwf	(___fldiv@a+3)^0,c
  1764  002516  EC34  F006         	call	___fldiv	;wreg free
  1765  00251A  C02F  F086         	movff	?___fldiv,appADC@lm35val
  1766  00251E  C030  F087         	movff	?___fldiv+1,appADC@lm35val+1
  1767  002522  C031  F088         	movff	?___fldiv+2,appADC@lm35val+2
  1768  002526  C032  F089         	movff	?___fldiv+3,appADC@lm35val+3
  1769  00252A                     
  1770                           ;adc.c: 59:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  1771  00252A  0E07               	movlw	7
  1772  00252C  0100               	movlb	0	; () banked
  1773  00252E  2584               	addwf	appADC@data& (0+255),w,b
  1774  002530  6F72               	movwf	sprintf@s& (0+255),b
  1775  002532  0E00               	movlw	0
  1776  002534  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1777  002536  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1778  002538  0E0F               	movlw	low STR_1
  1779  00253A  6F74               	movwf	sprintf@fmt& (0+255),b
  1780  00253C  0E08               	movlw	high STR_1
  1781  00253E  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1782  002540  C086  F048         	movff	appADC@lm35val,___fltol@f1
  1783  002544  C087  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1784  002548  C088  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1785  00254C  C089  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1786  002550  EC7B  F013         	call	___fltol	;wreg free
  1787  002554  5048               	movf	?___fltol^0,w,c
  1788  002556  0100               	movlb	0	; () banked
  1789  002558  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1790  00255A  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1791  00255C  0E00               	movlw	0
  1792  00255E  6E1A               	movwf	___flmul@a^0,c
  1793  002560  0E00               	movlw	0
  1794  002562  6E1B               	movwf	(___flmul@a+1)^0,c
  1795  002564  0EC8               	movlw	200
  1796  002566  6E1C               	movwf	(___flmul@a+2)^0,c
  1797  002568  0E42               	movlw	66
  1798  00256A  6E1D               	movwf	(___flmul@a+3)^0,c
  1799  00256C  C086  F016         	movff	appADC@lm35val,___flmul@b
  1800  002570  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1801  002574  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1802  002578  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1803  00257C  EC1F  F004         	call	___flmul	;wreg free
  1804  002580  C016  F048         	movff	?___flmul,___fltol@f1
  1805  002584  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1806  002588  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1807  00258C  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1808  002590  EC7B  F013         	call	___fltol	;wreg free
  1809  002594  5048               	movf	?___fltol^0,w,c
  1810  002596  6E52               	movwf	___awmod@dividend^0,c
  1811  002598  6A53               	clrf	(___awmod@dividend+1)^0,c
  1812  00259A  0E00               	movlw	0
  1813  00259C  6E55               	movwf	(___awmod@divisor+1)^0,c
  1814  00259E  0E64               	movlw	100
  1815  0025A0  6E54               	movwf	___awmod@divisor^0,c
  1816  0025A2  EC8A  F015         	call	___awmod	;wreg free
  1817  0025A6  5052               	movf	?___awmod^0,w,c
  1818  0025A8  0100               	movlb	0	; () banked
  1819  0025AA  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1820  0025AC  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1821  0025AE  EC8E  F016         	call	_sprintf	;wreg free
  1822  0025B2                     
  1823                           ;adc.c: 60:     Lcd_Out(1,0, (int8_t*)data->display);
  1824  0025B2  0E00               	movlw	0
  1825  0025B4  6E07               	movwf	Lcd_Out@x^0,c
  1826  0025B6  0E07               	movlw	7
  1827  0025B8  0100               	movlb	0	; () banked
  1828  0025BA  2584               	addwf	appADC@data& (0+255),w,b
  1829  0025BC  6E08               	movwf	Lcd_Out@buffer^0,c
  1830  0025BE  0E00               	movlw	0
  1831  0025C0  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1832  0025C2  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1833  0025C4  0E01               	movlw	1
  1834  0025C6  ECFE  F013         	call	_Lcd_Out
  1835  0025CA  0012               	return		;funcret
  1836  0025CC                     __end_of_appADC:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _adcGetValue *****************
  1840 ;; Defined at:
  1841 ;;		line 42 in file "adc.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  PinADC          1    wreg     unsigned char 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  PinADC          1    6[COMRAM] unsigned char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2    3[COMRAM] unsigned short 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1855 ;;      Params:         2       0       0       0       0       0       0       0       0
  1856 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1857 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1858 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1859 ;;Total ram usage:        4 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    2
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_appADC
  1866 ;;		_appBat
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text7
  1871  002F14                     __ptext7:
  1872                           	callstack 0
  1873  002F14                     _adcGetValue:
  1874                           	callstack 26
  1875                           
  1876                           ;incstack = 0
  1877                           ;adcGetValue@PinADC stored from wreg
  1878  002F14  6E07               	movwf	adcGetValue@PinADC^0,c
  1879  002F16                     
  1880                           ;adc.c: 42: uint16_t adcGetValue(uint8_t PinADC);adc.c: 43: {;adc.c: 44:     ADCON0bits.
      +                          CHS = PinADC;
  1881  002F16  C007  F006         	movff	adcGetValue@PinADC,??_adcGetValue
  1882  002F1A  4606               	rlncf	??_adcGetValue^0,f,c
  1883  002F1C  4606               	rlncf	??_adcGetValue^0,f,c
  1884  002F1E  50C2               	movf	194,w,c	;volatile
  1885  002F20  1806               	xorwf	??_adcGetValue^0,w,c
  1886  002F22  0BC3               	andlw	-61
  1887  002F24  1806               	xorwf	??_adcGetValue^0,w,c
  1888  002F26  6EC2               	movwf	194,c	;volatile
  1889  002F28                     
  1890                           ;adc.c: 45:     _delay((unsigned long)((2)*(12000000/4000.0)));
  1891  002F28  0E08               	movlw	8
  1892  002F2A  6E06               	movwf	??_adcGetValue^0,c
  1893  002F2C  0ECA               	movlw	202
  1894  002F2E                     u4467:
  1895  002F2E  2EE8               	decfsz	wreg,f,c
  1896  002F30  D7FE               	bra	u4467
  1897  002F32  2E06               	decfsz	??_adcGetValue^0,f,c
  1898  002F34  D7FC               	bra	u4467
  1899  002F36                     
  1900                           ;adc.c: 46:     GO_nDONE = 1;
  1901  002F36  82C2               	bsf	4034,1,c	;volatile
  1902  002F38                     l26:
  1903                           
  1904                           ;adc.c: 47:     while(ADCON0bits.GO_DONE)
  1905  002F38  B2C2               	btfsc	194,1,c	;volatile
  1906  002F3A  EFA1  F017         	goto	u2581
  1907  002F3E  EFA3  F017         	goto	u2580
  1908  002F42                     u2581:
  1909  002F42  EF9C  F017         	goto	l26
  1910  002F46                     u2580:
  1911  002F46                     
  1912                           ;adc.c: 50:     return ADRES;
  1913  002F46  CFC3 F004          	movff	4035,?_adcGetValue	;volatile
  1914  002F4A  CFC4 F005          	movff	4036,?_adcGetValue+1	;volatile
  1915  002F4E  0012               	return		;funcret
  1916  002F50                     __end_of_adcGetValue:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function ___xxtofl *****************
  1920 ;; Defined at:
  1921 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  sign            1    wreg     unsigned char 
  1924 ;;  val             4    7[COMRAM] long 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  sign            1   15[COMRAM] unsigned char 
  1927 ;;  arg             4   17[COMRAM] unsigned long 
  1928 ;;  exp             1   16[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  4    7[COMRAM] unsigned char 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1938 ;;      Params:         4       0       0       0       0       0       0       0       0
  1939 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1940 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1941 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1942 ;;Total ram usage:       14 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    2
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_appADC
  1949 ;;		_appBat
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text8
  1954  001A1E                     __ptext8:
  1955                           	callstack 0
  1956  001A1E                     ___xxtofl:
  1957                           	callstack 26
  1958                           
  1959                           ;incstack = 0
  1960                           ;___xxtofl@sign stored from wreg
  1961  001A1E  6E10               	movwf	___xxtofl@sign^0,c
  1962  001A20  5010               	movf	___xxtofl@sign^0,w,c
  1963  001A22  B4D8               	btfsc	status,2,c
  1964  001A24  EF16  F00D         	goto	u3231
  1965  001A28  EF18  F00D         	goto	u3230
  1966  001A2C                     u3231:
  1967  001A2C  EF3A  F00D         	goto	l937
  1968  001A30                     u3230:
  1969  001A30  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  1970  001A32  EF1F  F00D         	goto	u3240
  1971  001A36  EF1D  F00D         	goto	u3241
  1972  001A3A                     u3241:
  1973  001A3A  EF3A  F00D         	goto	l937
  1974  001A3E                     u3240:
  1975  001A3E  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  1976  001A42  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  1977  001A46  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  1978  001A4A  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  1979  001A4E  1E0C               	comf	??___xxtofl^0,f,c
  1980  001A50  1E0D               	comf	(??___xxtofl+1)^0,f,c
  1981  001A52  1E0E               	comf	(??___xxtofl+2)^0,f,c
  1982  001A54  1E0F               	comf	(??___xxtofl+3)^0,f,c
  1983  001A56  2A0C               	incf	??___xxtofl^0,f,c
  1984  001A58  0E00               	movlw	0
  1985  001A5A  220D               	addwfc	(??___xxtofl+1)^0,f,c
  1986  001A5C  220E               	addwfc	(??___xxtofl+2)^0,f,c
  1987  001A5E  220F               	addwfc	(??___xxtofl+3)^0,f,c
  1988  001A60  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  1989  001A64  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  1990  001A68  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  1991  001A6C  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  1992  001A70  EF42  F00D         	goto	l3379
  1993  001A74                     l937:
  1994  001A74  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  1995  001A78  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1996  001A7C  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1997  001A80  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1998  001A84                     l3379:
  1999  001A84  5008               	movf	___xxtofl@val^0,w,c
  2000  001A86  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  2001  001A88  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  2002  001A8A  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  2003  001A8C  A4D8               	btfss	status,2,c
  2004  001A8E  EF4B  F00D         	goto	u3251
  2005  001A92  EF4D  F00D         	goto	u3250
  2006  001A96                     u3251:
  2007  001A96  EF57  F00D         	goto	l3385
  2008  001A9A                     u3250:
  2009  001A9A  0E00               	movlw	0
  2010  001A9C  6E08               	movwf	?___xxtofl^0,c
  2011  001A9E  0E00               	movlw	0
  2012  001AA0  6E09               	movwf	(?___xxtofl+1)^0,c
  2013  001AA2  0E00               	movlw	0
  2014  001AA4  6E0A               	movwf	(?___xxtofl+2)^0,c
  2015  001AA6  0E00               	movlw	0
  2016  001AA8  6E0B               	movwf	(?___xxtofl+3)^0,c
  2017  001AAA  EFE8  F00D         	goto	l940
  2018  001AAE                     l3385:
  2019  001AAE  0E96               	movlw	150
  2020  001AB0  6E11               	movwf	___xxtofl@exp^0,c
  2021  001AB2  EF61  F00D         	goto	l3389
  2022  001AB6                     l3387:
  2023  001AB6  2A11               	incf	___xxtofl@exp^0,f,c
  2024  001AB8  90D8               	bcf	status,0,c
  2025  001ABA  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2026  001ABC  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2027  001ABE  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2028  001AC0  3212               	rrcf	___xxtofl@arg^0,f,c
  2029  001AC2                     l3389:
  2030  001AC2  0E00               	movlw	0
  2031  001AC4  1412               	andwf	___xxtofl@arg^0,w,c
  2032  001AC6  6E0C               	movwf	??___xxtofl^0,c
  2033  001AC8  0E00               	movlw	0
  2034  001ACA  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2035  001ACC  6E0D               	movwf	(??___xxtofl+1)^0,c
  2036  001ACE  0E00               	movlw	0
  2037  001AD0  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2038  001AD2  6E0E               	movwf	(??___xxtofl+2)^0,c
  2039  001AD4  0EFE               	movlw	254
  2040  001AD6  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2041  001AD8  6E0F               	movwf	(??___xxtofl+3)^0,c
  2042  001ADA  500C               	movf	??___xxtofl^0,w,c
  2043  001ADC  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2044  001ADE  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2045  001AE0  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2046  001AE2  A4D8               	btfss	status,2,c
  2047  001AE4  EF76  F00D         	goto	u3261
  2048  001AE8  EF78  F00D         	goto	u3260
  2049  001AEC                     u3261:
  2050  001AEC  EF5B  F00D         	goto	l3387
  2051  001AF0                     u3260:
  2052  001AF0  EF86  F00D         	goto	l944
  2053  001AF4                     l3391:
  2054  001AF4  2A11               	incf	___xxtofl@exp^0,f,c
  2055  001AF6  0E01               	movlw	1
  2056  001AF8  2612               	addwf	___xxtofl@arg^0,f,c
  2057  001AFA  0E00               	movlw	0
  2058  001AFC  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  2059  001AFE  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  2060  001B00  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  2061  001B02  90D8               	bcf	status,0,c
  2062  001B04  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2063  001B06  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2064  001B08  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2065  001B0A  3212               	rrcf	___xxtofl@arg^0,f,c
  2066  001B0C                     l944:
  2067  001B0C  0E00               	movlw	0
  2068  001B0E  1412               	andwf	___xxtofl@arg^0,w,c
  2069  001B10  6E0C               	movwf	??___xxtofl^0,c
  2070  001B12  0E00               	movlw	0
  2071  001B14  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2072  001B16  6E0D               	movwf	(??___xxtofl+1)^0,c
  2073  001B18  0E00               	movlw	0
  2074  001B1A  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2075  001B1C  6E0E               	movwf	(??___xxtofl+2)^0,c
  2076  001B1E  0EFF               	movlw	255
  2077  001B20  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2078  001B22  6E0F               	movwf	(??___xxtofl+3)^0,c
  2079  001B24  500C               	movf	??___xxtofl^0,w,c
  2080  001B26  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2081  001B28  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2082  001B2A  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2083  001B2C  A4D8               	btfss	status,2,c
  2084  001B2E  EF9B  F00D         	goto	u3271
  2085  001B32  EF9D  F00D         	goto	u3270
  2086  001B36                     u3271:
  2087  001B36  EF7A  F00D         	goto	l3391
  2088  001B3A                     u3270:
  2089  001B3A  EFA5  F00D         	goto	l3399
  2090  001B3E                     l3397:
  2091  001B3E  0611               	decf	___xxtofl@exp^0,f,c
  2092  001B40  90D8               	bcf	status,0,c
  2093  001B42  3612               	rlcf	___xxtofl@arg^0,f,c
  2094  001B44  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  2095  001B46  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  2096  001B48  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  2097  001B4A                     l3399:
  2098  001B4A  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  2099  001B4C  EFAA  F00D         	goto	u3281
  2100  001B50  EFAC  F00D         	goto	u3280
  2101  001B54                     u3281:
  2102  001B54  EFB4  F00D         	goto	l951
  2103  001B58                     u3280:
  2104  001B58  0E02               	movlw	2
  2105  001B5A  6011               	cpfslt	___xxtofl@exp^0,c
  2106  001B5C  EFB2  F00D         	goto	u3291
  2107  001B60  EFB4  F00D         	goto	u3290
  2108  001B64                     u3291:
  2109  001B64  EF9F  F00D         	goto	l3397
  2110  001B68                     u3290:
  2111  001B68                     l951:
  2112  001B68  B011               	btfsc	___xxtofl@exp^0,0,c
  2113  001B6A  EFB9  F00D         	goto	u3301
  2114  001B6E  EFBB  F00D         	goto	u3300
  2115  001B72                     u3301:
  2116  001B72  EFBC  F00D         	goto	l3405
  2117  001B76                     u3300:
  2118  001B76  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  2119  001B78                     l3405:
  2120  001B78  90D8               	bcf	status,0,c
  2121  001B7A  3211               	rrcf	___xxtofl@exp^0,f,c
  2122  001B7C  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  2123  001B80  6A0D               	clrf	(??___xxtofl+1)^0,c
  2124  001B82  6A0E               	clrf	(??___xxtofl+2)^0,c
  2125  001B84  6A0F               	clrf	(??___xxtofl+3)^0,c
  2126  001B86  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  2127  001B8A  6A0E               	clrf	(??___xxtofl+2)^0,c
  2128  001B8C  6A0D               	clrf	(??___xxtofl+1)^0,c
  2129  001B8E  6A0C               	clrf	??___xxtofl^0,c
  2130  001B90  500C               	movf	??___xxtofl^0,w,c
  2131  001B92  1212               	iorwf	___xxtofl@arg^0,f,c
  2132  001B94  500D               	movf	(??___xxtofl+1)^0,w,c
  2133  001B96  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  2134  001B98  500E               	movf	(??___xxtofl+2)^0,w,c
  2135  001B9A  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  2136  001B9C  500F               	movf	(??___xxtofl+3)^0,w,c
  2137  001B9E  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  2138  001BA0  5010               	movf	___xxtofl@sign^0,w,c
  2139  001BA2  B4D8               	btfsc	status,2,c
  2140  001BA4  EFD6  F00D         	goto	u3311
  2141  001BA8  EFD8  F00D         	goto	u3310
  2142  001BAC                     u3311:
  2143  001BAC  EFE0  F00D         	goto	l3415
  2144  001BB0                     u3310:
  2145  001BB0  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2146  001BB2  EFDF  F00D         	goto	u3320
  2147  001BB6  EFDD  F00D         	goto	u3321
  2148  001BBA                     u3321:
  2149  001BBA  EFE0  F00D         	goto	l3415
  2150  001BBE                     u3320:
  2151  001BBE  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  2152  001BC0                     l3415:
  2153  001BC0  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  2154  001BC4  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  2155  001BC8  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  2156  001BCC  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  2157  001BD0                     l940:
  2158  001BD0  0012               	return		;funcret
  2159  001BD2                     __end_of___xxtofl:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function ___fltol *****************
  2163 ;; Defined at:
  2164 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  f1              4   71[COMRAM] unsigned char 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  exp1            1   80[COMRAM] unsigned char 
  2169 ;;  sign1           1   79[COMRAM] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  4   71[COMRAM] long 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2179 ;;      Params:         4       0       0       0       0       0       0       0       0
  2180 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2181 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2182 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2183 ;;Total ram usage:       10 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    2
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_appADC
  2190 ;;		_appBat
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text9
  2195  0026F6                     __ptext9:
  2196                           	callstack 0
  2197  0026F6                     ___fltol:
  2198                           	callstack 26
  2199  0026F6  344A               	rlcf	(___fltol@f1+2)^0,w,c
  2200  0026F8  344B               	rlcf	(___fltol@f1+3)^0,w,c
  2201  0026FA  6E51               	movwf	___fltol@exp1^0,c
  2202  0026FC  5051               	movf	___fltol@exp1^0,w,c
  2203  0026FE  A4D8               	btfss	status,2,c
  2204  002700  EF84  F013         	goto	u3161
  2205  002704  EF86  F013         	goto	u3160
  2206  002708                     u3161:
  2207  002708  EF90  F013         	goto	l3335
  2208  00270C                     u3160:
  2209  00270C                     l3331:
  2210  00270C  0E00               	movlw	0
  2211  00270E  6E48               	movwf	?___fltol^0,c
  2212  002710  0E00               	movlw	0
  2213  002712  6E49               	movwf	(?___fltol+1)^0,c
  2214  002714  0E00               	movlw	0
  2215  002716  6E4A               	movwf	(?___fltol+2)^0,c
  2216  002718  0E00               	movlw	0
  2217  00271A  6E4B               	movwf	(?___fltol+3)^0,c
  2218  00271C  EFFD  F013         	goto	l579
  2219  002720                     l3335:
  2220  002720  C048  F04C         	movff	___fltol@f1,??___fltol
  2221  002724  C049  F04D         	movff	___fltol@f1+1,??___fltol+1
  2222  002728  C04A  F04E         	movff	___fltol@f1+2,??___fltol+2
  2223  00272C  C04B  F04F         	movff	___fltol@f1+3,??___fltol+3
  2224  002730  0E20               	movlw	32
  2225  002732  EFA0  F013         	goto	u3170
  2226  002736                     u3175:
  2227  002736  90D8               	bcf	status,0,c
  2228  002738  324F               	rrcf	(??___fltol+3)^0,f,c
  2229  00273A  324E               	rrcf	(??___fltol+2)^0,f,c
  2230  00273C  324D               	rrcf	(??___fltol+1)^0,f,c
  2231  00273E  324C               	rrcf	??___fltol^0,f,c
  2232  002740                     u3170:
  2233  002740  2EE8               	decfsz	wreg,f,c
  2234  002742  EF9B  F013         	goto	u3175
  2235  002746  504C               	movf	??___fltol^0,w,c
  2236  002748  6E50               	movwf	___fltol@sign1^0,c
  2237  00274A  8E4A               	bsf	(___fltol@f1+2)^0,7,c
  2238  00274C  0EFF               	movlw	255
  2239  00274E  1648               	andwf	___fltol@f1^0,f,c
  2240  002750  0EFF               	movlw	255
  2241  002752  1649               	andwf	(___fltol@f1+1)^0,f,c
  2242  002754  0EFF               	movlw	255
  2243  002756  164A               	andwf	(___fltol@f1+2)^0,f,c
  2244  002758  0E00               	movlw	0
  2245  00275A  164B               	andwf	(___fltol@f1+3)^0,f,c
  2246  00275C  0E96               	movlw	150
  2247  00275E  5E51               	subwf	___fltol@exp1^0,f,c
  2248  002760  BE51               	btfsc	___fltol@exp1^0,7,c
  2249  002762  EFB7  F013         	goto	u3180
  2250  002766  EFB5  F013         	goto	u3181
  2251  00276A                     u3181:
  2252  00276A  EFCD  F013         	goto	l3355
  2253  00276E                     u3180:
  2254  00276E  5051               	movf	___fltol@exp1^0,w,c
  2255  002770  0A80               	xorlw	128
  2256  002772  0F97               	addlw	151
  2257  002774  B0D8               	btfsc	status,0,c
  2258  002776  EFBF  F013         	goto	u3191
  2259  00277A  EFC1  F013         	goto	u3190
  2260  00277E                     u3191:
  2261  00277E  EFC3  F013         	goto	l3351
  2262  002782                     u3190:
  2263  002782  EF86  F013         	goto	l3331
  2264  002786                     l3351:
  2265  002786  90D8               	bcf	status,0,c
  2266  002788  324B               	rrcf	(___fltol@f1+3)^0,f,c
  2267  00278A  324A               	rrcf	(___fltol@f1+2)^0,f,c
  2268  00278C  3249               	rrcf	(___fltol@f1+1)^0,f,c
  2269  00278E  3248               	rrcf	___fltol@f1^0,f,c
  2270  002790  3E51               	incfsz	___fltol@exp1^0,f,c
  2271  002792  EFC3  F013         	goto	l3351
  2272  002796  EFE5  F013         	goto	l3365
  2273  00279A                     l3355:
  2274  00279A  0E1F               	movlw	31
  2275  00279C  6451               	cpfsgt	___fltol@exp1^0,c
  2276  00279E  EFD3  F013         	goto	u3201
  2277  0027A2  EFD5  F013         	goto	u3200
  2278  0027A6                     u3201:
  2279  0027A6  EFDD  F013         	goto	l3363
  2280  0027AA                     u3200:
  2281  0027AA  EF86  F013         	goto	l3331
  2282  0027AE                     l3361:
  2283  0027AE  90D8               	bcf	status,0,c
  2284  0027B0  3648               	rlcf	___fltol@f1^0,f,c
  2285  0027B2  3649               	rlcf	(___fltol@f1+1)^0,f,c
  2286  0027B4  364A               	rlcf	(___fltol@f1+2)^0,f,c
  2287  0027B6  364B               	rlcf	(___fltol@f1+3)^0,f,c
  2288  0027B8  0651               	decf	___fltol@exp1^0,f,c
  2289  0027BA                     l3363:
  2290  0027BA  5051               	movf	___fltol@exp1^0,w,c
  2291  0027BC  A4D8               	btfss	status,2,c
  2292  0027BE  EFE3  F013         	goto	u3211
  2293  0027C2  EFE5  F013         	goto	u3210
  2294  0027C6                     u3211:
  2295  0027C6  EFD7  F013         	goto	l3361
  2296  0027CA                     u3210:
  2297  0027CA                     l3365:
  2298  0027CA  5050               	movf	___fltol@sign1^0,w,c
  2299  0027CC  B4D8               	btfsc	status,2,c
  2300  0027CE  EFEB  F013         	goto	u3221
  2301  0027D2  EFED  F013         	goto	u3220
  2302  0027D6                     u3221:
  2303  0027D6  EFF5  F013         	goto	l3369
  2304  0027DA                     u3220:
  2305  0027DA  1E4B               	comf	(___fltol@f1+3)^0,f,c
  2306  0027DC  1E4A               	comf	(___fltol@f1+2)^0,f,c
  2307  0027DE  1E49               	comf	(___fltol@f1+1)^0,f,c
  2308  0027E0  6C48               	negf	___fltol@f1^0,c
  2309  0027E2  0E00               	movlw	0
  2310  0027E4  2249               	addwfc	(___fltol@f1+1)^0,f,c
  2311  0027E6  224A               	addwfc	(___fltol@f1+2)^0,f,c
  2312  0027E8  224B               	addwfc	(___fltol@f1+3)^0,f,c
  2313  0027EA                     l3369:
  2314  0027EA  C048  F048         	movff	___fltol@f1,?___fltol
  2315  0027EE  C049  F049         	movff	___fltol@f1+1,?___fltol+1
  2316  0027F2  C04A  F04A         	movff	___fltol@f1+2,?___fltol+2
  2317  0027F6  C04B  F04B         	movff	___fltol@f1+3,?___fltol+3
  2318  0027FA                     l579:
  2319  0027FA  0012               	return		;funcret
  2320  0027FC                     __end_of___fltol:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function ___flmul *****************
  2324 ;; Defined at:
  2325 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  b               4   21[COMRAM] long 
  2328 ;;  a               4   25[COMRAM] long 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  prod            4   40[COMRAM] struct .
  2331 ;;  grs             4   34[COMRAM] unsigned long 
  2332 ;;  temp            2   44[COMRAM] struct .
  2333 ;;  bexp            1   39[COMRAM] unsigned char 
  2334 ;;  aexp            1   38[COMRAM] unsigned char 
  2335 ;;  sign            1   33[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  4   21[COMRAM] unsigned char 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, prodl, prodh
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2345 ;;      Params:         8       0       0       0       0       0       0       0       0
  2346 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2347 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2348 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2349 ;;Total ram usage:       25 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    2
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_appADC
  2356 ;;		_appBat
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text10
  2361  00083E                     __ptext10:
  2362                           	callstack 0
  2363  00083E                     ___flmul:
  2364                           	callstack 26
  2365  00083E  5019               	movf	(___flmul@b+3)^0,w,c
  2366  000840  0B80               	andlw	128
  2367  000842  6E22               	movwf	___flmul@sign^0,c
  2368  000844  5019               	movf	(___flmul@b+3)^0,w,c
  2369  000846  2419               	addwf	(___flmul@b+3)^0,w,c
  2370  000848  6E28               	movwf	___flmul@bexp^0,c
  2371  00084A  AE18               	btfss	(___flmul@b+2)^0,7,c
  2372  00084C  EF2A  F004         	goto	u2911
  2373  000850  EF2C  F004         	goto	u2910
  2374  000854                     u2911:
  2375  000854  EF2D  F004         	goto	l3169
  2376  000858                     u2910:
  2377  000858  8028               	bsf	___flmul@bexp^0,0,c
  2378  00085A                     l3169:
  2379  00085A  5028               	movf	___flmul@bexp^0,w,c
  2380  00085C  B4D8               	btfsc	status,2,c
  2381  00085E  EF33  F004         	goto	u2921
  2382  000862  EF35  F004         	goto	u2920
  2383  000866                     u2921:
  2384  000866  EF48  F004         	goto	l3177
  2385  00086A                     u2920:
  2386  00086A  2828               	incf	___flmul@bexp^0,w,c
  2387  00086C  A4D8               	btfss	status,2,c
  2388  00086E  EF3B  F004         	goto	u2931
  2389  000872  EF3D  F004         	goto	u2930
  2390  000876                     u2931:
  2391  000876  EF45  F004         	goto	l3175
  2392  00087A                     u2930:
  2393  00087A  0E00               	movlw	0
  2394  00087C  6E16               	movwf	___flmul@b^0,c
  2395  00087E  0E00               	movlw	0
  2396  000880  6E17               	movwf	(___flmul@b+1)^0,c
  2397  000882  0E00               	movlw	0
  2398  000884  6E18               	movwf	(___flmul@b+2)^0,c
  2399  000886  0E00               	movlw	0
  2400  000888  6E19               	movwf	(___flmul@b+3)^0,c
  2401  00088A                     l3175:
  2402  00088A  8E18               	bsf	(___flmul@b+2)^0,7,c
  2403  00088C  EF50  F004         	goto	l3179
  2404  000890                     l3177:
  2405  000890  0E00               	movlw	0
  2406  000892  6E16               	movwf	___flmul@b^0,c
  2407  000894  0E00               	movlw	0
  2408  000896  6E17               	movwf	(___flmul@b+1)^0,c
  2409  000898  0E00               	movlw	0
  2410  00089A  6E18               	movwf	(___flmul@b+2)^0,c
  2411  00089C  0E00               	movlw	0
  2412  00089E  6E19               	movwf	(___flmul@b+3)^0,c
  2413  0008A0                     l3179:
  2414  0008A0  501D               	movf	(___flmul@a+3)^0,w,c
  2415  0008A2  0B80               	andlw	128
  2416  0008A4  1A22               	xorwf	___flmul@sign^0,f,c
  2417  0008A6  501D               	movf	(___flmul@a+3)^0,w,c
  2418  0008A8  241D               	addwf	(___flmul@a+3)^0,w,c
  2419  0008AA  6E27               	movwf	___flmul@aexp^0,c
  2420  0008AC  AE1C               	btfss	(___flmul@a+2)^0,7,c
  2421  0008AE  EF5B  F004         	goto	u2941
  2422  0008B2  EF5D  F004         	goto	u2940
  2423  0008B6                     u2941:
  2424  0008B6  EF5E  F004         	goto	l3187
  2425  0008BA                     u2940:
  2426  0008BA  8027               	bsf	___flmul@aexp^0,0,c
  2427  0008BC                     l3187:
  2428  0008BC  5027               	movf	___flmul@aexp^0,w,c
  2429  0008BE  B4D8               	btfsc	status,2,c
  2430  0008C0  EF64  F004         	goto	u2951
  2431  0008C4  EF66  F004         	goto	u2950
  2432  0008C8                     u2951:
  2433  0008C8  EF79  F004         	goto	l3195
  2434  0008CC                     u2950:
  2435  0008CC  2827               	incf	___flmul@aexp^0,w,c
  2436  0008CE  A4D8               	btfss	status,2,c
  2437  0008D0  EF6C  F004         	goto	u2961
  2438  0008D4  EF6E  F004         	goto	u2960
  2439  0008D8                     u2961:
  2440  0008D8  EF76  F004         	goto	l3193
  2441  0008DC                     u2960:
  2442  0008DC  0E00               	movlw	0
  2443  0008DE  6E1A               	movwf	___flmul@a^0,c
  2444  0008E0  0E00               	movlw	0
  2445  0008E2  6E1B               	movwf	(___flmul@a+1)^0,c
  2446  0008E4  0E00               	movlw	0
  2447  0008E6  6E1C               	movwf	(___flmul@a+2)^0,c
  2448  0008E8  0E00               	movlw	0
  2449  0008EA  6E1D               	movwf	(___flmul@a+3)^0,c
  2450  0008EC                     l3193:
  2451  0008EC  8E1C               	bsf	(___flmul@a+2)^0,7,c
  2452  0008EE  EF81  F004         	goto	l896
  2453  0008F2                     l3195:
  2454  0008F2  0E00               	movlw	0
  2455  0008F4  6E1A               	movwf	___flmul@a^0,c
  2456  0008F6  0E00               	movlw	0
  2457  0008F8  6E1B               	movwf	(___flmul@a+1)^0,c
  2458  0008FA  0E00               	movlw	0
  2459  0008FC  6E1C               	movwf	(___flmul@a+2)^0,c
  2460  0008FE  0E00               	movlw	0
  2461  000900  6E1D               	movwf	(___flmul@a+3)^0,c
  2462  000902                     l896:
  2463  000902  5027               	movf	___flmul@aexp^0,w,c
  2464  000904  B4D8               	btfsc	status,2,c
  2465  000906  EF87  F004         	goto	u2971
  2466  00090A  EF89  F004         	goto	u2970
  2467  00090E                     u2971:
  2468  00090E  EF91  F004         	goto	l3199
  2469  000912                     u2970:
  2470  000912  5028               	movf	___flmul@bexp^0,w,c
  2471  000914  A4D8               	btfss	status,2,c
  2472  000916  EF8F  F004         	goto	u2981
  2473  00091A  EF91  F004         	goto	u2980
  2474  00091E                     u2981:
  2475  00091E  EF9B  F004         	goto	l3203
  2476  000922                     u2980:
  2477  000922                     l3199:
  2478  000922  0E00               	movlw	0
  2479  000924  6E16               	movwf	?___flmul^0,c
  2480  000926  0E00               	movlw	0
  2481  000928  6E17               	movwf	(?___flmul+1)^0,c
  2482  00092A  0E00               	movlw	0
  2483  00092C  6E18               	movwf	(?___flmul+2)^0,c
  2484  00092E  0E00               	movlw	0
  2485  000930  6E19               	movwf	(?___flmul+3)^0,c
  2486  000932  EF33  F006         	goto	l900
  2487  000936                     l3203:
  2488  000936  501C               	movf	(___flmul@a+2)^0,w,c
  2489  000938  0216               	mulwf	___flmul@b^0,c
  2490  00093A  CFF3 F02D          	movff	prodl,___flmul@temp
  2491  00093E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2492  000942  502D               	movf	___flmul@temp^0,w,c
  2493  000944  6E23               	movwf	___flmul@grs^0,c
  2494  000946  6A24               	clrf	(___flmul@grs+1)^0,c
  2495  000948  6A25               	clrf	(___flmul@grs+2)^0,c
  2496  00094A  6A26               	clrf	(___flmul@grs+3)^0,c
  2497  00094C  502E               	movf	(___flmul@temp+1)^0,w,c
  2498  00094E  6E29               	movwf	___flmul@prod^0,c
  2499  000950  6A2A               	clrf	(___flmul@prod+1)^0,c
  2500  000952  6A2B               	clrf	(___flmul@prod+2)^0,c
  2501  000954  6A2C               	clrf	(___flmul@prod+3)^0,c
  2502  000956  501B               	movf	(___flmul@a+1)^0,w,c
  2503  000958  0217               	mulwf	(___flmul@b+1)^0,c
  2504  00095A  CFF3 F02D          	movff	prodl,___flmul@temp
  2505  00095E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2506  000962  502D               	movf	___flmul@temp^0,w,c
  2507  000964  2623               	addwf	___flmul@grs^0,f,c
  2508  000966  0E00               	movlw	0
  2509  000968  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2510  00096A  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2511  00096C  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2512  00096E  502E               	movf	(___flmul@temp+1)^0,w,c
  2513  000970  2629               	addwf	___flmul@prod^0,f,c
  2514  000972  0E00               	movlw	0
  2515  000974  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2516  000976  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2517  000978  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2518  00097A  501A               	movf	___flmul@a^0,w,c
  2519  00097C  0218               	mulwf	(___flmul@b+2)^0,c
  2520  00097E  CFF3 F02D          	movff	prodl,___flmul@temp
  2521  000982  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2522  000986  502D               	movf	___flmul@temp^0,w,c
  2523  000988  2623               	addwf	___flmul@grs^0,f,c
  2524  00098A  0E00               	movlw	0
  2525  00098C  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2526  00098E  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2527  000990  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2528  000992  502E               	movf	(___flmul@temp+1)^0,w,c
  2529  000994  2629               	addwf	___flmul@prod^0,f,c
  2530  000996  0E00               	movlw	0
  2531  000998  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2532  00099A  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2533  00099C  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2534  00099E  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2535  0009A2  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2536  0009A6  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2537  0009AA  6A23               	clrf	___flmul@grs^0,c
  2538  0009AC  501A               	movf	___flmul@a^0,w,c
  2539  0009AE  0217               	mulwf	(___flmul@b+1)^0,c
  2540  0009B0  CFF3 F02D          	movff	prodl,___flmul@temp
  2541  0009B4  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2542  0009B8  502D               	movf	___flmul@temp^0,w,c
  2543  0009BA  2623               	addwf	___flmul@grs^0,f,c
  2544  0009BC  502E               	movf	(___flmul@temp+1)^0,w,c
  2545  0009BE  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2546  0009C0  0E00               	movlw	0
  2547  0009C2  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2548  0009C4  0E00               	movlw	0
  2549  0009C6  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2550  0009C8  501B               	movf	(___flmul@a+1)^0,w,c
  2551  0009CA  0216               	mulwf	___flmul@b^0,c
  2552  0009CC  CFF3 F02D          	movff	prodl,___flmul@temp
  2553  0009D0  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2554  0009D4  502D               	movf	___flmul@temp^0,w,c
  2555  0009D6  2623               	addwf	___flmul@grs^0,f,c
  2556  0009D8  502E               	movf	(___flmul@temp+1)^0,w,c
  2557  0009DA  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2558  0009DC  0E00               	movlw	0
  2559  0009DE  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2560  0009E0  0E00               	movlw	0
  2561  0009E2  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2562  0009E4  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2563  0009E8  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2564  0009EC  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2565  0009F0  6A23               	clrf	___flmul@grs^0,c
  2566  0009F2  501A               	movf	___flmul@a^0,w,c
  2567  0009F4  0216               	mulwf	___flmul@b^0,c
  2568  0009F6  CFF3 F02D          	movff	prodl,___flmul@temp
  2569  0009FA  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2570  0009FE  502D               	movf	___flmul@temp^0,w,c
  2571  000A00  2623               	addwf	___flmul@grs^0,f,c
  2572  000A02  502E               	movf	(___flmul@temp+1)^0,w,c
  2573  000A04  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2574  000A06  0E00               	movlw	0
  2575  000A08  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2576  000A0A  0E00               	movlw	0
  2577  000A0C  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2578  000A0E  501C               	movf	(___flmul@a+2)^0,w,c
  2579  000A10  0217               	mulwf	(___flmul@b+1)^0,c
  2580  000A12  CFF3 F02D          	movff	prodl,___flmul@temp
  2581  000A16  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2582  000A1A  502D               	movf	___flmul@temp^0,w,c
  2583  000A1C  2629               	addwf	___flmul@prod^0,f,c
  2584  000A1E  502E               	movf	(___flmul@temp+1)^0,w,c
  2585  000A20  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2586  000A22  0E00               	movlw	0
  2587  000A24  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2588  000A26  0E00               	movlw	0
  2589  000A28  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2590  000A2A  501B               	movf	(___flmul@a+1)^0,w,c
  2591  000A2C  0218               	mulwf	(___flmul@b+2)^0,c
  2592  000A2E  CFF3 F02D          	movff	prodl,___flmul@temp
  2593  000A32  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2594  000A36  502D               	movf	___flmul@temp^0,w,c
  2595  000A38  2629               	addwf	___flmul@prod^0,f,c
  2596  000A3A  502E               	movf	(___flmul@temp+1)^0,w,c
  2597  000A3C  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2598  000A3E  0E00               	movlw	0
  2599  000A40  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2600  000A42  0E00               	movlw	0
  2601  000A44  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2602  000A46  501C               	movf	(___flmul@a+2)^0,w,c
  2603  000A48  0218               	mulwf	(___flmul@b+2)^0,c
  2604  000A4A  CFF3 F02D          	movff	prodl,___flmul@temp
  2605  000A4E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2606  000A52  502D               	movf	___flmul@temp^0,w,c
  2607  000A54  6E1E               	movwf	??___flmul^0,c
  2608  000A56  502E               	movf	(___flmul@temp+1)^0,w,c
  2609  000A58  6E1F               	movwf	(??___flmul+1)^0,c
  2610  000A5A  6A20               	clrf	(??___flmul+2)^0,c
  2611  000A5C  6A21               	clrf	(??___flmul+3)^0,c
  2612  000A5E  C020  F021         	movff	??___flmul+2,??___flmul+3
  2613  000A62  C01F  F020         	movff	??___flmul+1,??___flmul+2
  2614  000A66  C01E  F01F         	movff	??___flmul,??___flmul+1
  2615  000A6A  6A1E               	clrf	??___flmul^0,c
  2616  000A6C  501E               	movf	??___flmul^0,w,c
  2617  000A6E  2629               	addwf	___flmul@prod^0,f,c
  2618  000A70  501F               	movf	(??___flmul+1)^0,w,c
  2619  000A72  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2620  000A74  5020               	movf	(??___flmul+2)^0,w,c
  2621  000A76  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2622  000A78  5021               	movf	(??___flmul+3)^0,w,c
  2623  000A7A  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2624  000A7C  C023  F01E         	movff	___flmul@grs,??___flmul
  2625  000A80  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  2626  000A84  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  2627  000A88  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  2628  000A8C  0E19               	movlw	25
  2629  000A8E  EF4E  F005         	goto	u2990
  2630  000A92                     u2995:
  2631  000A92  90D8               	bcf	status,0,c
  2632  000A94  3221               	rrcf	(??___flmul+3)^0,f,c
  2633  000A96  3220               	rrcf	(??___flmul+2)^0,f,c
  2634  000A98  321F               	rrcf	(??___flmul+1)^0,f,c
  2635  000A9A  321E               	rrcf	??___flmul^0,f,c
  2636  000A9C                     u2990:
  2637  000A9C  2EE8               	decfsz	wreg,f,c
  2638  000A9E  EF49  F005         	goto	u2995
  2639  000AA2  501E               	movf	??___flmul^0,w,c
  2640  000AA4  2629               	addwf	___flmul@prod^0,f,c
  2641  000AA6  501F               	movf	(??___flmul+1)^0,w,c
  2642  000AA8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2643  000AAA  5020               	movf	(??___flmul+2)^0,w,c
  2644  000AAC  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2645  000AAE  5021               	movf	(??___flmul+3)^0,w,c
  2646  000AB0  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2647  000AB2  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2648  000AB6  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2649  000ABA  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2650  000ABE  6A23               	clrf	___flmul@grs^0,c
  2651  000AC0  5027               	movf	___flmul@aexp^0,w,c
  2652  000AC2  C028  F01E         	movff	___flmul@bexp,??___flmul
  2653  000AC6  6A1F               	clrf	(??___flmul+1)^0,c
  2654  000AC8  261E               	addwf	??___flmul^0,f,c
  2655  000ACA  0E00               	movlw	0
  2656  000ACC  221F               	addwfc	(??___flmul+1)^0,f,c
  2657  000ACE  0E82               	movlw	130
  2658  000AD0  241E               	addwf	??___flmul^0,w,c
  2659  000AD2  6E2D               	movwf	___flmul@temp^0,c
  2660  000AD4  0EFF               	movlw	255
  2661  000AD6  201F               	addwfc	(??___flmul+1)^0,w,c
  2662  000AD8  6E2E               	movwf	(___flmul@temp+1)^0,c
  2663  000ADA  EF84  F005         	goto	l3251
  2664  000ADE                     l3245:
  2665  000ADE  90D8               	bcf	status,0,c
  2666  000AE0  3629               	rlcf	___flmul@prod^0,f,c
  2667  000AE2  362A               	rlcf	(___flmul@prod+1)^0,f,c
  2668  000AE4  362B               	rlcf	(___flmul@prod+2)^0,f,c
  2669  000AE6  362C               	rlcf	(___flmul@prod+3)^0,f,c
  2670  000AE8  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2671  000AEA  EF79  F005         	goto	u3001
  2672  000AEE  EF7B  F005         	goto	u3000
  2673  000AF2                     u3001:
  2674  000AF2  EF7C  F005         	goto	l903
  2675  000AF6                     u3000:
  2676  000AF6  8029               	bsf	___flmul@prod^0,0,c
  2677  000AF8                     l903:
  2678  000AF8  90D8               	bcf	status,0,c
  2679  000AFA  3623               	rlcf	___flmul@grs^0,f,c
  2680  000AFC  3624               	rlcf	(___flmul@grs+1)^0,f,c
  2681  000AFE  3625               	rlcf	(___flmul@grs+2)^0,f,c
  2682  000B00  3626               	rlcf	(___flmul@grs+3)^0,f,c
  2683  000B02  062D               	decf	___flmul@temp^0,f,c
  2684  000B04  A0D8               	btfss	status,0,c
  2685  000B06  062E               	decf	(___flmul@temp+1)^0,f,c
  2686  000B08                     l3251:
  2687  000B08  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  2688  000B0A  EF89  F005         	goto	u3011
  2689  000B0E  EF8B  F005         	goto	u3010
  2690  000B12                     u3011:
  2691  000B12  EF6F  F005         	goto	l3245
  2692  000B16                     u3010:
  2693  000B16  0E00               	movlw	0
  2694  000B18  6E27               	movwf	___flmul@aexp^0,c
  2695  000B1A  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2696  000B1C  EF92  F005         	goto	u3021
  2697  000B20  EF94  F005         	goto	u3020
  2698  000B24                     u3021:
  2699  000B24  EFB8  F005         	goto	l905
  2700  000B28                     u3020:
  2701  000B28  0EFF               	movlw	255
  2702  000B2A  1423               	andwf	___flmul@grs^0,w,c
  2703  000B2C  6E1E               	movwf	??___flmul^0,c
  2704  000B2E  0EFF               	movlw	255
  2705  000B30  1424               	andwf	(___flmul@grs+1)^0,w,c
  2706  000B32  6E1F               	movwf	(??___flmul+1)^0,c
  2707  000B34  0EFF               	movlw	255
  2708  000B36  1425               	andwf	(___flmul@grs+2)^0,w,c
  2709  000B38  6E20               	movwf	(??___flmul+2)^0,c
  2710  000B3A  0E7F               	movlw	127
  2711  000B3C  1426               	andwf	(___flmul@grs+3)^0,w,c
  2712  000B3E  6E21               	movwf	(??___flmul+3)^0,c
  2713  000B40  501E               	movf	??___flmul^0,w,c
  2714  000B42  101F               	iorwf	(??___flmul+1)^0,w,c
  2715  000B44  1020               	iorwf	(??___flmul+2)^0,w,c
  2716  000B46  1021               	iorwf	(??___flmul+3)^0,w,c
  2717  000B48  B4D8               	btfsc	status,2,c
  2718  000B4A  EFA9  F005         	goto	u3031
  2719  000B4E  EFAB  F005         	goto	u3030
  2720  000B52                     u3031:
  2721  000B52  EFAF  F005         	goto	l906
  2722  000B56                     u3030:
  2723  000B56                     l3259:
  2724  000B56  0E01               	movlw	1
  2725  000B58  6E27               	movwf	___flmul@aexp^0,c
  2726  000B5A  EFB8  F005         	goto	l905
  2727  000B5E                     l906:
  2728  000B5E  A029               	btfss	___flmul@prod^0,0,c
  2729  000B60  EFB4  F005         	goto	u3041
  2730  000B64  EFB6  F005         	goto	u3040
  2731  000B68                     u3041:
  2732  000B68  EFB8  F005         	goto	l905
  2733  000B6C                     u3040:
  2734  000B6C  EFAB  F005         	goto	l3259
  2735  000B70                     l905:
  2736  000B70  5027               	movf	___flmul@aexp^0,w,c
  2737  000B72  B4D8               	btfsc	status,2,c
  2738  000B74  EFBE  F005         	goto	u3051
  2739  000B78  EFC0  F005         	goto	u3050
  2740  000B7C                     u3051:
  2741  000B7C  EFE4  F005         	goto	l3271
  2742  000B80                     u3050:
  2743  000B80  0E01               	movlw	1
  2744  000B82  2629               	addwf	___flmul@prod^0,f,c
  2745  000B84  0E00               	movlw	0
  2746  000B86  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2747  000B88  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2748  000B8A  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2749  000B8C  A02C               	btfss	(___flmul@prod+3)^0,0,c
  2750  000B8E  EFCB  F005         	goto	u3061
  2751  000B92  EFCD  F005         	goto	u3060
  2752  000B96                     u3061:
  2753  000B96  EFE4  F005         	goto	l3271
  2754  000B9A                     u3060:
  2755  000B9A  C029  F01E         	movff	___flmul@prod,??___flmul
  2756  000B9E  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  2757  000BA2  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  2758  000BA6  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  2759  000BAA  3421               	rlcf	(??___flmul+3)^0,w,c
  2760  000BAC  3221               	rrcf	(??___flmul+3)^0,f,c
  2761  000BAE  3220               	rrcf	(??___flmul+2)^0,f,c
  2762  000BB0  321F               	rrcf	(??___flmul+1)^0,f,c
  2763  000BB2  321E               	rrcf	??___flmul^0,f,c
  2764  000BB4  C01E  F029         	movff	??___flmul,___flmul@prod
  2765  000BB8  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  2766  000BBC  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  2767  000BC0  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  2768  000BC4  4A2D               	infsnz	___flmul@temp^0,f,c
  2769  000BC6  2A2E               	incf	(___flmul@temp+1)^0,f,c
  2770  000BC8                     l3271:
  2771  000BC8  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2772  000BCA  EFEF  F005         	goto	u3071
  2773  000BCE  502E               	movf	(___flmul@temp+1)^0,w,c
  2774  000BD0  E108               	bnz	u3070
  2775  000BD2  282D               	incf	___flmul@temp^0,w,c
  2776  000BD4  A0D8               	btfss	status,0,c
  2777  000BD6  EFEF  F005         	goto	u3071
  2778  000BDA  EFF1  F005         	goto	u3070
  2779  000BDE                     u3071:
  2780  000BDE  EFFB  F005         	goto	l3275
  2781  000BE2                     u3070:
  2782  000BE2  0E00               	movlw	0
  2783  000BE4  6E29               	movwf	___flmul@prod^0,c
  2784  000BE6  0E00               	movlw	0
  2785  000BE8  6E2A               	movwf	(___flmul@prod+1)^0,c
  2786  000BEA  0E80               	movlw	128
  2787  000BEC  6E2B               	movwf	(___flmul@prod+2)^0,c
  2788  000BEE  0E7F               	movlw	127
  2789  000BF0  6E2C               	movwf	(___flmul@prod+3)^0,c
  2790  000BF2  EF29  F006         	goto	l3287
  2791  000BF6                     l3275:
  2792  000BF6  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2793  000BF8  EF08  F006         	goto	u3080
  2794  000BFC  502E               	movf	(___flmul@temp+1)^0,w,c
  2795  000BFE  E106               	bnz	u3081
  2796  000C00  042D               	decf	___flmul@temp^0,w,c
  2797  000C02  B0D8               	btfsc	status,0,c
  2798  000C04  EF06  F006         	goto	u3081
  2799  000C08  EF08  F006         	goto	u3080
  2800  000C0C                     u3081:
  2801  000C0C  EF14  F006         	goto	l913
  2802  000C10                     u3080:
  2803  000C10  0E00               	movlw	0
  2804  000C12  6E29               	movwf	___flmul@prod^0,c
  2805  000C14  0E00               	movlw	0
  2806  000C16  6E2A               	movwf	(___flmul@prod+1)^0,c
  2807  000C18  0E00               	movlw	0
  2808  000C1A  6E2B               	movwf	(___flmul@prod+2)^0,c
  2809  000C1C  0E00               	movlw	0
  2810  000C1E  6E2C               	movwf	(___flmul@prod+3)^0,c
  2811  000C20  0E00               	movlw	0
  2812  000C22  6E22               	movwf	___flmul@sign^0,c
  2813  000C24  EF29  F006         	goto	l3287
  2814  000C28                     l913:
  2815  000C28  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  2816  000C2C  0EFF               	movlw	255
  2817  000C2E  1629               	andwf	___flmul@prod^0,f,c
  2818  000C30  0EFF               	movlw	255
  2819  000C32  162A               	andwf	(___flmul@prod+1)^0,f,c
  2820  000C34  0E7F               	movlw	127
  2821  000C36  162B               	andwf	(___flmul@prod+2)^0,f,c
  2822  000C38  0E00               	movlw	0
  2823  000C3A  162C               	andwf	(___flmul@prod+3)^0,f,c
  2824  000C3C  A028               	btfss	___flmul@bexp^0,0,c
  2825  000C3E  EF23  F006         	goto	u3091
  2826  000C42  EF25  F006         	goto	u3090
  2827  000C46                     u3091:
  2828  000C46  EF26  F006         	goto	l3285
  2829  000C4A                     u3090:
  2830  000C4A  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  2831  000C4C                     l3285:
  2832  000C4C  90D8               	bcf	status,0,c
  2833  000C4E  3028               	rrcf	___flmul@bexp^0,w,c
  2834  000C50  6E2C               	movwf	(___flmul@prod+3)^0,c
  2835  000C52                     l3287:
  2836  000C52  5022               	movf	___flmul@sign^0,w,c
  2837  000C54  122C               	iorwf	(___flmul@prod+3)^0,f,c
  2838  000C56  C029  F016         	movff	___flmul@prod,?___flmul
  2839  000C5A  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  2840  000C5E  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  2841  000C62  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  2842  000C66                     l900:
  2843  000C66  0012               	return		;funcret
  2844  000C68                     __end_of___flmul:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function ___fldiv *****************
  2848 ;; Defined at:
  2849 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  b               4   46[COMRAM] unsigned char 
  2852 ;;  a               4   50[COMRAM] unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  grs             4   65[COMRAM] unsigned long 
  2855 ;;  rem             4   58[COMRAM] unsigned long 
  2856 ;;  new_exp         2   63[COMRAM] short 
  2857 ;;  aexp            1   70[COMRAM] unsigned char 
  2858 ;;  bexp            1   69[COMRAM] unsigned char 
  2859 ;;  sign            1   62[COMRAM] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  4   46[COMRAM] unsigned char 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2869 ;;      Params:         8       0       0       0       0       0       0       0       0
  2870 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2871 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2872 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2873 ;;Total ram usage:       25 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    2
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_appADC
  2880 ;;		_appBat
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text11
  2885  000C68                     __ptext11:
  2886                           	callstack 0
  2887  000C68                     ___fldiv:
  2888                           	callstack 26
  2889  000C68  5032               	movf	(___fldiv@b+3)^0,w,c
  2890  000C6A  0B80               	andlw	128
  2891  000C6C  6E3F               	movwf	___fldiv@sign^0,c
  2892  000C6E  5032               	movf	(___fldiv@b+3)^0,w,c
  2893  000C70  2432               	addwf	(___fldiv@b+3)^0,w,c
  2894  000C72  6E46               	movwf	___fldiv@bexp^0,c
  2895  000C74  AE31               	btfss	(___fldiv@b+2)^0,7,c
  2896  000C76  EF3F  F006         	goto	u2681
  2897  000C7A  EF41  F006         	goto	u2680
  2898  000C7E                     u2681:
  2899  000C7E  EF42  F006         	goto	l3031
  2900  000C82                     u2680:
  2901  000C82  8046               	bsf	___fldiv@bexp^0,0,c
  2902  000C84                     l3031:
  2903  000C84  5046               	movf	___fldiv@bexp^0,w,c
  2904  000C86  B4D8               	btfsc	status,2,c
  2905  000C88  EF48  F006         	goto	u2691
  2906  000C8C  EF4A  F006         	goto	u2690
  2907  000C90                     u2691:
  2908  000C90  EF5F  F006         	goto	l3041
  2909  000C94                     u2690:
  2910  000C94  2846               	incf	___fldiv@bexp^0,w,c
  2911  000C96  A4D8               	btfss	status,2,c
  2912  000C98  EF50  F006         	goto	u2701
  2913  000C9C  EF52  F006         	goto	u2700
  2914  000CA0                     u2701:
  2915  000CA0  EF5A  F006         	goto	l3037
  2916  000CA4                     u2700:
  2917  000CA4  0E00               	movlw	0
  2918  000CA6  6E2F               	movwf	___fldiv@b^0,c
  2919  000CA8  0E00               	movlw	0
  2920  000CAA  6E30               	movwf	(___fldiv@b+1)^0,c
  2921  000CAC  0E00               	movlw	0
  2922  000CAE  6E31               	movwf	(___fldiv@b+2)^0,c
  2923  000CB0  0E00               	movlw	0
  2924  000CB2  6E32               	movwf	(___fldiv@b+3)^0,c
  2925  000CB4                     l3037:
  2926  000CB4  8E31               	bsf	(___fldiv@b+2)^0,7,c
  2927  000CB6  0E00               	movlw	0
  2928  000CB8  6E32               	movwf	(___fldiv@b+3)^0,c
  2929  000CBA  EF67  F006         	goto	l3043
  2930  000CBE                     l3041:
  2931  000CBE  0E00               	movlw	0
  2932  000CC0  6E2F               	movwf	___fldiv@b^0,c
  2933  000CC2  0E00               	movlw	0
  2934  000CC4  6E30               	movwf	(___fldiv@b+1)^0,c
  2935  000CC6  0E00               	movlw	0
  2936  000CC8  6E31               	movwf	(___fldiv@b+2)^0,c
  2937  000CCA  0E00               	movlw	0
  2938  000CCC  6E32               	movwf	(___fldiv@b+3)^0,c
  2939  000CCE                     l3043:
  2940  000CCE  5036               	movf	(___fldiv@a+3)^0,w,c
  2941  000CD0  0B80               	andlw	128
  2942  000CD2  1A3F               	xorwf	___fldiv@sign^0,f,c
  2943  000CD4  5036               	movf	(___fldiv@a+3)^0,w,c
  2944  000CD6  2436               	addwf	(___fldiv@a+3)^0,w,c
  2945  000CD8  6E47               	movwf	___fldiv@aexp^0,c
  2946  000CDA  AE35               	btfss	(___fldiv@a+2)^0,7,c
  2947  000CDC  EF72  F006         	goto	u2711
  2948  000CE0  EF74  F006         	goto	u2710
  2949  000CE4                     u2711:
  2950  000CE4  EF75  F006         	goto	l3051
  2951  000CE8                     u2710:
  2952  000CE8  8047               	bsf	___fldiv@aexp^0,0,c
  2953  000CEA                     l3051:
  2954  000CEA  5047               	movf	___fldiv@aexp^0,w,c
  2955  000CEC  B4D8               	btfsc	status,2,c
  2956  000CEE  EF7B  F006         	goto	u2721
  2957  000CF2  EF7D  F006         	goto	u2720
  2958  000CF6                     u2721:
  2959  000CF6  EF92  F006         	goto	l3061
  2960  000CFA                     u2720:
  2961  000CFA  2847               	incf	___fldiv@aexp^0,w,c
  2962  000CFC  A4D8               	btfss	status,2,c
  2963  000CFE  EF83  F006         	goto	u2731
  2964  000D02  EF85  F006         	goto	u2730
  2965  000D06                     u2731:
  2966  000D06  EF8D  F006         	goto	l3057
  2967  000D0A                     u2730:
  2968  000D0A  0E00               	movlw	0
  2969  000D0C  6E33               	movwf	___fldiv@a^0,c
  2970  000D0E  0E00               	movlw	0
  2971  000D10  6E34               	movwf	(___fldiv@a+1)^0,c
  2972  000D12  0E00               	movlw	0
  2973  000D14  6E35               	movwf	(___fldiv@a+2)^0,c
  2974  000D16  0E00               	movlw	0
  2975  000D18  6E36               	movwf	(___fldiv@a+3)^0,c
  2976  000D1A                     l3057:
  2977  000D1A  8E35               	bsf	(___fldiv@a+2)^0,7,c
  2978  000D1C  0E00               	movlw	0
  2979  000D1E  6E36               	movwf	(___fldiv@a+3)^0,c
  2980  000D20  EF9A  F006         	goto	l3063
  2981  000D24                     l3061:
  2982  000D24  0E00               	movlw	0
  2983  000D26  6E33               	movwf	___fldiv@a^0,c
  2984  000D28  0E00               	movlw	0
  2985  000D2A  6E34               	movwf	(___fldiv@a+1)^0,c
  2986  000D2C  0E00               	movlw	0
  2987  000D2E  6E35               	movwf	(___fldiv@a+2)^0,c
  2988  000D30  0E00               	movlw	0
  2989  000D32  6E36               	movwf	(___fldiv@a+3)^0,c
  2990  000D34                     l3063:
  2991  000D34  5033               	movf	___fldiv@a^0,w,c
  2992  000D36  1034               	iorwf	(___fldiv@a+1)^0,w,c
  2993  000D38  1035               	iorwf	(___fldiv@a+2)^0,w,c
  2994  000D3A  1036               	iorwf	(___fldiv@a+3)^0,w,c
  2995  000D3C  A4D8               	btfss	status,2,c
  2996  000D3E  EFA3  F006         	goto	u2741
  2997  000D42  EFA5  F006         	goto	u2740
  2998  000D46                     u2741:
  2999  000D46  EFBD  F006         	goto	l3075
  3000  000D4A                     u2740:
  3001  000D4A  0E00               	movlw	0
  3002  000D4C  6E2F               	movwf	___fldiv@b^0,c
  3003  000D4E  0E00               	movlw	0
  3004  000D50  6E30               	movwf	(___fldiv@b+1)^0,c
  3005  000D52  0E00               	movlw	0
  3006  000D54  6E31               	movwf	(___fldiv@b+2)^0,c
  3007  000D56  0E00               	movlw	0
  3008  000D58  6E32               	movwf	(___fldiv@b+3)^0,c
  3009  000D5A  0E80               	movlw	128
  3010  000D5C  1231               	iorwf	(___fldiv@b+2)^0,f,c
  3011  000D5E  0E7F               	movlw	127
  3012  000D60  1232               	iorwf	(___fldiv@b+3)^0,f,c
  3013  000D62                     l3069:
  3014  000D62  503F               	movf	___fldiv@sign^0,w,c
  3015  000D64  1232               	iorwf	(___fldiv@b+3)^0,f,c
  3016  000D66  C02F  F02F         	movff	___fldiv@b,?___fldiv
  3017  000D6A  C030  F030         	movff	___fldiv@b+1,?___fldiv+1
  3018  000D6E  C031  F031         	movff	___fldiv@b+2,?___fldiv+2
  3019  000D72  C032  F032         	movff	___fldiv@b+3,?___fldiv+3
  3020  000D76  EF00  F008         	goto	l864
  3021  000D7A                     l3075:
  3022  000D7A  5046               	movf	___fldiv@bexp^0,w,c
  3023  000D7C  A4D8               	btfss	status,2,c
  3024  000D7E  EFC3  F006         	goto	u2751
  3025  000D82  EFC5  F006         	goto	u2750
  3026  000D86                     u2751:
  3027  000D86  EFCF  F006         	goto	l3083
  3028  000D8A                     u2750:
  3029  000D8A  0E00               	movlw	0
  3030  000D8C  6E2F               	movwf	?___fldiv^0,c
  3031  000D8E  0E00               	movlw	0
  3032  000D90  6E30               	movwf	(?___fldiv+1)^0,c
  3033  000D92  0E00               	movlw	0
  3034  000D94  6E31               	movwf	(?___fldiv+2)^0,c
  3035  000D96  0E00               	movlw	0
  3036  000D98  6E32               	movwf	(?___fldiv+3)^0,c
  3037  000D9A  EF00  F008         	goto	l864
  3038  000D9E                     l3083:
  3039  000D9E  5047               	movf	___fldiv@aexp^0,w,c
  3040  000DA0  C046  F037         	movff	___fldiv@bexp,??___fldiv
  3041  000DA4  6A38               	clrf	(??___fldiv+1)^0,c
  3042  000DA6  5E37               	subwf	??___fldiv^0,f,c
  3043  000DA8  0E00               	movlw	0
  3044  000DAA  5A38               	subwfb	(??___fldiv+1)^0,f,c
  3045  000DAC  0E7F               	movlw	127
  3046  000DAE  2437               	addwf	??___fldiv^0,w,c
  3047  000DB0  6E40               	movwf	___fldiv@new_exp^0,c
  3048  000DB2  0E00               	movlw	0
  3049  000DB4  2038               	addwfc	(??___fldiv+1)^0,w,c
  3050  000DB6  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3051  000DB8  C02F  F03B         	movff	___fldiv@b,___fldiv@rem
  3052  000DBC  C030  F03C         	movff	___fldiv@b+1,___fldiv@rem+1
  3053  000DC0  C031  F03D         	movff	___fldiv@b+2,___fldiv@rem+2
  3054  000DC4  C032  F03E         	movff	___fldiv@b+3,___fldiv@rem+3
  3055  000DC8  0E00               	movlw	0
  3056  000DCA  6E2F               	movwf	___fldiv@b^0,c
  3057  000DCC  0E00               	movlw	0
  3058  000DCE  6E30               	movwf	(___fldiv@b+1)^0,c
  3059  000DD0  0E00               	movlw	0
  3060  000DD2  6E31               	movwf	(___fldiv@b+2)^0,c
  3061  000DD4  0E00               	movlw	0
  3062  000DD6  6E32               	movwf	(___fldiv@b+3)^0,c
  3063  000DD8  0E00               	movlw	0
  3064  000DDA  6E42               	movwf	___fldiv@grs^0,c
  3065  000DDC  0E00               	movlw	0
  3066  000DDE  6E43               	movwf	(___fldiv@grs+1)^0,c
  3067  000DE0  0E00               	movlw	0
  3068  000DE2  6E44               	movwf	(___fldiv@grs+2)^0,c
  3069  000DE4  0E00               	movlw	0
  3070  000DE6  6E45               	movwf	(___fldiv@grs+3)^0,c
  3071  000DE8  0E00               	movlw	0
  3072  000DEA  6E47               	movwf	___fldiv@aexp^0,c
  3073  000DEC  EF30  F007         	goto	l866
  3074  000DF0                     l3093:
  3075  000DF0  5047               	movf	___fldiv@aexp^0,w,c
  3076  000DF2  B4D8               	btfsc	status,2,c
  3077  000DF4  EFFE  F006         	goto	u2761
  3078  000DF8  EF00  F007         	goto	u2760
  3079  000DFC                     u2761:
  3080  000DFC  EF17  F007         	goto	l3101
  3081  000E00                     u2760:
  3082  000E00  90D8               	bcf	status,0,c
  3083  000E02  363B               	rlcf	___fldiv@rem^0,f,c
  3084  000E04  363C               	rlcf	(___fldiv@rem+1)^0,f,c
  3085  000E06  363D               	rlcf	(___fldiv@rem+2)^0,f,c
  3086  000E08  363E               	rlcf	(___fldiv@rem+3)^0,f,c
  3087  000E0A  90D8               	bcf	status,0,c
  3088  000E0C  362F               	rlcf	___fldiv@b^0,f,c
  3089  000E0E  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3090  000E10  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3091  000E12  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3092  000E14  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3093  000E16  EF0F  F007         	goto	u2771
  3094  000E1A  EF11  F007         	goto	u2770
  3095  000E1E                     u2771:
  3096  000E1E  EF12  F007         	goto	l869
  3097  000E22                     u2770:
  3098  000E22  802F               	bsf	___fldiv@b^0,0,c
  3099  000E24                     l869:
  3100  000E24  90D8               	bcf	status,0,c
  3101  000E26  3642               	rlcf	___fldiv@grs^0,f,c
  3102  000E28  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3103  000E2A  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3104  000E2C  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3105  000E2E                     l3101:
  3106  000E2E  5033               	movf	___fldiv@a^0,w,c
  3107  000E30  5C3B               	subwf	___fldiv@rem^0,w,c
  3108  000E32  5034               	movf	(___fldiv@a+1)^0,w,c
  3109  000E34  583C               	subwfb	(___fldiv@rem+1)^0,w,c
  3110  000E36  5035               	movf	(___fldiv@a+2)^0,w,c
  3111  000E38  583D               	subwfb	(___fldiv@rem+2)^0,w,c
  3112  000E3A  5036               	movf	(___fldiv@a+3)^0,w,c
  3113  000E3C  583E               	subwfb	(___fldiv@rem+3)^0,w,c
  3114  000E3E  A0D8               	btfss	status,0,c
  3115  000E40  EF24  F007         	goto	u2781
  3116  000E44  EF26  F007         	goto	u2780
  3117  000E48                     u2781:
  3118  000E48  EF2F  F007         	goto	l3107
  3119  000E4C                     u2780:
  3120  000E4C  8C45               	bsf	(___fldiv@grs+3)^0,6,c
  3121  000E4E  5033               	movf	___fldiv@a^0,w,c
  3122  000E50  5E3B               	subwf	___fldiv@rem^0,f,c
  3123  000E52  5034               	movf	(___fldiv@a+1)^0,w,c
  3124  000E54  5A3C               	subwfb	(___fldiv@rem+1)^0,f,c
  3125  000E56  5035               	movf	(___fldiv@a+2)^0,w,c
  3126  000E58  5A3D               	subwfb	(___fldiv@rem+2)^0,f,c
  3127  000E5A  5036               	movf	(___fldiv@a+3)^0,w,c
  3128  000E5C  5A3E               	subwfb	(___fldiv@rem+3)^0,f,c
  3129  000E5E                     l3107:
  3130  000E5E  2A47               	incf	___fldiv@aexp^0,f,c
  3131  000E60                     l866:
  3132  000E60  0E19               	movlw	25
  3133  000E62  6447               	cpfsgt	___fldiv@aexp^0,c
  3134  000E64  EF36  F007         	goto	u2791
  3135  000E68  EF38  F007         	goto	u2790
  3136  000E6C                     u2791:
  3137  000E6C  EFF8  F006         	goto	l3093
  3138  000E70                     u2790:
  3139  000E70  503B               	movf	___fldiv@rem^0,w,c
  3140  000E72  103C               	iorwf	(___fldiv@rem+1)^0,w,c
  3141  000E74  103D               	iorwf	(___fldiv@rem+2)^0,w,c
  3142  000E76  103E               	iorwf	(___fldiv@rem+3)^0,w,c
  3143  000E78  B4D8               	btfsc	status,2,c
  3144  000E7A  EF41  F007         	goto	u2801
  3145  000E7E  EF43  F007         	goto	u2800
  3146  000E82                     u2801:
  3147  000E82  EF5B  F007         	goto	l3119
  3148  000E86                     u2800:
  3149  000E86  8042               	bsf	___fldiv@grs^0,0,c
  3150  000E88  EF5B  F007         	goto	l3119
  3151  000E8C                     l3113:
  3152  000E8C  90D8               	bcf	status,0,c
  3153  000E8E  362F               	rlcf	___fldiv@b^0,f,c
  3154  000E90  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3155  000E92  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3156  000E94  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3157  000E96  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3158  000E98  EF50  F007         	goto	u2811
  3159  000E9C  EF52  F007         	goto	u2810
  3160  000EA0                     u2811:
  3161  000EA0  EF53  F007         	goto	l875
  3162  000EA4                     u2810:
  3163  000EA4  802F               	bsf	___fldiv@b^0,0,c
  3164  000EA6                     l875:
  3165  000EA6  90D8               	bcf	status,0,c
  3166  000EA8  3642               	rlcf	___fldiv@grs^0,f,c
  3167  000EAA  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3168  000EAC  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3169  000EAE  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3170  000EB0  0640               	decf	___fldiv@new_exp^0,f,c
  3171  000EB2  A0D8               	btfss	status,0,c
  3172  000EB4  0641               	decf	(___fldiv@new_exp+1)^0,f,c
  3173  000EB6                     l3119:
  3174  000EB6  AE31               	btfss	(___fldiv@b+2)^0,7,c
  3175  000EB8  EF60  F007         	goto	u2821
  3176  000EBC  EF62  F007         	goto	u2820
  3177  000EC0                     u2821:
  3178  000EC0  EF46  F007         	goto	l3113
  3179  000EC4                     u2820:
  3180  000EC4  0E00               	movlw	0
  3181  000EC6  6E47               	movwf	___fldiv@aexp^0,c
  3182  000EC8  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3183  000ECA  EF69  F007         	goto	u2831
  3184  000ECE  EF6B  F007         	goto	u2830
  3185  000ED2                     u2831:
  3186  000ED2  EF8F  F007         	goto	l877
  3187  000ED6                     u2830:
  3188  000ED6  0EFF               	movlw	255
  3189  000ED8  1442               	andwf	___fldiv@grs^0,w,c
  3190  000EDA  6E37               	movwf	??___fldiv^0,c
  3191  000EDC  0EFF               	movlw	255
  3192  000EDE  1443               	andwf	(___fldiv@grs+1)^0,w,c
  3193  000EE0  6E38               	movwf	(??___fldiv+1)^0,c
  3194  000EE2  0EFF               	movlw	255
  3195  000EE4  1444               	andwf	(___fldiv@grs+2)^0,w,c
  3196  000EE6  6E39               	movwf	(??___fldiv+2)^0,c
  3197  000EE8  0E7F               	movlw	127
  3198  000EEA  1445               	andwf	(___fldiv@grs+3)^0,w,c
  3199  000EEC  6E3A               	movwf	(??___fldiv+3)^0,c
  3200  000EEE  5037               	movf	??___fldiv^0,w,c
  3201  000EF0  1038               	iorwf	(??___fldiv+1)^0,w,c
  3202  000EF2  1039               	iorwf	(??___fldiv+2)^0,w,c
  3203  000EF4  103A               	iorwf	(??___fldiv+3)^0,w,c
  3204  000EF6  B4D8               	btfsc	status,2,c
  3205  000EF8  EF80  F007         	goto	u2841
  3206  000EFC  EF82  F007         	goto	u2840
  3207  000F00                     u2841:
  3208  000F00  EF86  F007         	goto	l878
  3209  000F04                     u2840:
  3210  000F04                     l3127:
  3211  000F04  0E01               	movlw	1
  3212  000F06  6E47               	movwf	___fldiv@aexp^0,c
  3213  000F08  EF8F  F007         	goto	l877
  3214  000F0C                     l878:
  3215  000F0C  A02F               	btfss	___fldiv@b^0,0,c
  3216  000F0E  EF8B  F007         	goto	u2851
  3217  000F12  EF8D  F007         	goto	u2850
  3218  000F16                     u2851:
  3219  000F16  EF8F  F007         	goto	l877
  3220  000F1A                     u2850:
  3221  000F1A  EF82  F007         	goto	l3127
  3222  000F1E                     l877:
  3223  000F1E  5047               	movf	___fldiv@aexp^0,w,c
  3224  000F20  B4D8               	btfsc	status,2,c
  3225  000F22  EF95  F007         	goto	u2861
  3226  000F26  EF97  F007         	goto	u2860
  3227  000F2A                     u2861:
  3228  000F2A  EFBB  F007         	goto	l3139
  3229  000F2E                     u2860:
  3230  000F2E  0E01               	movlw	1
  3231  000F30  262F               	addwf	___fldiv@b^0,f,c
  3232  000F32  0E00               	movlw	0
  3233  000F34  2230               	addwfc	(___fldiv@b+1)^0,f,c
  3234  000F36  2231               	addwfc	(___fldiv@b+2)^0,f,c
  3235  000F38  2232               	addwfc	(___fldiv@b+3)^0,f,c
  3236  000F3A  A032               	btfss	(___fldiv@b+3)^0,0,c
  3237  000F3C  EFA2  F007         	goto	u2871
  3238  000F40  EFA4  F007         	goto	u2870
  3239  000F44                     u2871:
  3240  000F44  EFBB  F007         	goto	l3139
  3241  000F48                     u2870:
  3242  000F48  C02F  F037         	movff	___fldiv@b,??___fldiv
  3243  000F4C  C030  F038         	movff	___fldiv@b+1,??___fldiv+1
  3244  000F50  C031  F039         	movff	___fldiv@b+2,??___fldiv+2
  3245  000F54  C032  F03A         	movff	___fldiv@b+3,??___fldiv+3
  3246  000F58  343A               	rlcf	(??___fldiv+3)^0,w,c
  3247  000F5A  323A               	rrcf	(??___fldiv+3)^0,f,c
  3248  000F5C  3239               	rrcf	(??___fldiv+2)^0,f,c
  3249  000F5E  3238               	rrcf	(??___fldiv+1)^0,f,c
  3250  000F60  3237               	rrcf	??___fldiv^0,f,c
  3251  000F62  C037  F02F         	movff	??___fldiv,___fldiv@b
  3252  000F66  C038  F030         	movff	??___fldiv+1,___fldiv@b+1
  3253  000F6A  C039  F031         	movff	??___fldiv+2,___fldiv@b+2
  3254  000F6E  C03A  F032         	movff	??___fldiv+3,___fldiv@b+3
  3255  000F72  4A40               	infsnz	___fldiv@new_exp^0,f,c
  3256  000F74  2A41               	incf	(___fldiv@new_exp+1)^0,f,c
  3257  000F76                     l3139:
  3258  000F76  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3259  000F78  EFC6  F007         	goto	u2881
  3260  000F7C  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3261  000F7E  E108               	bnz	u2880
  3262  000F80  2840               	incf	___fldiv@new_exp^0,w,c
  3263  000F82  A0D8               	btfss	status,0,c
  3264  000F84  EFC6  F007         	goto	u2881
  3265  000F88  EFC8  F007         	goto	u2880
  3266  000F8C                     u2881:
  3267  000F8C  EFD3  F007         	goto	l3143
  3268  000F90                     u2880:
  3269  000F90  0E00               	movlw	0
  3270  000F92  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3271  000F94  6840               	setf	___fldiv@new_exp^0,c
  3272  000F96  0E00               	movlw	0
  3273  000F98  6E2F               	movwf	___fldiv@b^0,c
  3274  000F9A  0E00               	movlw	0
  3275  000F9C  6E30               	movwf	(___fldiv@b+1)^0,c
  3276  000F9E  0E00               	movlw	0
  3277  000FA0  6E31               	movwf	(___fldiv@b+2)^0,c
  3278  000FA2  0E00               	movlw	0
  3279  000FA4  6E32               	movwf	(___fldiv@b+3)^0,c
  3280  000FA6                     l3143:
  3281  000FA6  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3282  000FA8  EFE0  F007         	goto	u2890
  3283  000FAC  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3284  000FAE  E106               	bnz	u2891
  3285  000FB0  0440               	decf	___fldiv@new_exp^0,w,c
  3286  000FB2  B0D8               	btfsc	status,0,c
  3287  000FB4  EFDE  F007         	goto	u2891
  3288  000FB8  EFE0  F007         	goto	u2890
  3289  000FBC                     u2891:
  3290  000FBC  EFEE  F007         	goto	l3147
  3291  000FC0                     u2890:
  3292  000FC0  0E00               	movlw	0
  3293  000FC2  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3294  000FC4  0E00               	movlw	0
  3295  000FC6  6E40               	movwf	___fldiv@new_exp^0,c
  3296  000FC8  0E00               	movlw	0
  3297  000FCA  6E2F               	movwf	___fldiv@b^0,c
  3298  000FCC  0E00               	movlw	0
  3299  000FCE  6E30               	movwf	(___fldiv@b+1)^0,c
  3300  000FD0  0E00               	movlw	0
  3301  000FD2  6E31               	movwf	(___fldiv@b+2)^0,c
  3302  000FD4  0E00               	movlw	0
  3303  000FD6  6E32               	movwf	(___fldiv@b+3)^0,c
  3304  000FD8  0E00               	movlw	0
  3305  000FDA  6E3F               	movwf	___fldiv@sign^0,c
  3306  000FDC                     l3147:
  3307  000FDC  C040  F046         	movff	___fldiv@new_exp,___fldiv@bexp
  3308  000FE0  A046               	btfss	___fldiv@bexp^0,0,c
  3309  000FE2  EFF5  F007         	goto	u2901
  3310  000FE6  EFF7  F007         	goto	u2900
  3311  000FEA                     u2901:
  3312  000FEA  EFFA  F007         	goto	l3153
  3313  000FEE                     u2900:
  3314  000FEE  8E31               	bsf	(___fldiv@b+2)^0,7,c
  3315  000FF0  EFFB  F007         	goto	l3155
  3316  000FF4                     l3153:
  3317  000FF4  9E31               	bcf	(___fldiv@b+2)^0,7,c
  3318  000FF6                     l3155:
  3319  000FF6  90D8               	bcf	status,0,c
  3320  000FF8  3046               	rrcf	___fldiv@bexp^0,w,c
  3321  000FFA  6E32               	movwf	(___fldiv@b+3)^0,c
  3322  000FFC  EFB1  F006         	goto	l3069
  3323  001000                     l864:
  3324  001000  0012               	return		;funcret
  3325  001002                     __end_of___fldiv:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function ___awmod *****************
  3329 ;; Defined at:
  3330 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  dividend        2   81[COMRAM] int 
  3333 ;;  divisor         2   83[COMRAM] int 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  sign            1   86[COMRAM] unsigned char 
  3336 ;;  counter         1   85[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  2   81[COMRAM] int 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3346 ;;      Params:         4       0       0       0       0       0       0       0       0
  3347 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3349 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3350 ;;Total ram usage:        6 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    2
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_appADC
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text12
  3361  002B14                     __ptext12:
  3362                           	callstack 0
  3363  002B14                     ___awmod:
  3364                           	callstack 26
  3365  002B14  0E00               	movlw	0
  3366  002B16  6E57               	movwf	___awmod@sign^0,c
  3367  002B18  BE53               	btfsc	(___awmod@dividend+1)^0,7,c
  3368  002B1A  EF93  F015         	goto	u3100
  3369  002B1E  EF91  F015         	goto	u3101
  3370  002B22                     u3101:
  3371  002B22  EF99  F015         	goto	l3301
  3372  002B26                     u3100:
  3373  002B26  6C52               	negf	___awmod@dividend^0,c
  3374  002B28  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3375  002B2A  B0D8               	btfsc	status,0,c
  3376  002B2C  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3377  002B2E  0E01               	movlw	1
  3378  002B30  6E57               	movwf	___awmod@sign^0,c
  3379  002B32                     l3301:
  3380  002B32  BE55               	btfsc	(___awmod@divisor+1)^0,7,c
  3381  002B34  EFA0  F015         	goto	u3110
  3382  002B38  EF9E  F015         	goto	u3111
  3383  002B3C                     u3111:
  3384  002B3C  EFA4  F015         	goto	l3305
  3385  002B40                     u3110:
  3386  002B40  6C54               	negf	___awmod@divisor^0,c
  3387  002B42  1E55               	comf	(___awmod@divisor+1)^0,f,c
  3388  002B44  B0D8               	btfsc	status,0,c
  3389  002B46  2A55               	incf	(___awmod@divisor+1)^0,f,c
  3390  002B48                     l3305:
  3391  002B48  5054               	movf	___awmod@divisor^0,w,c
  3392  002B4A  1055               	iorwf	(___awmod@divisor+1)^0,w,c
  3393  002B4C  B4D8               	btfsc	status,2,c
  3394  002B4E  EFAB  F015         	goto	u3121
  3395  002B52  EFAD  F015         	goto	u3120
  3396  002B56                     u3121:
  3397  002B56  EFD1  F015         	goto	l3321
  3398  002B5A                     u3120:
  3399  002B5A  0E01               	movlw	1
  3400  002B5C  6E56               	movwf	___awmod@counter^0,c
  3401  002B5E  EFB5  F015         	goto	l3311
  3402  002B62                     l3309:
  3403  002B62  90D8               	bcf	status,0,c
  3404  002B64  3654               	rlcf	___awmod@divisor^0,f,c
  3405  002B66  3655               	rlcf	(___awmod@divisor+1)^0,f,c
  3406  002B68  2A56               	incf	___awmod@counter^0,f,c
  3407  002B6A                     l3311:
  3408  002B6A  AE55               	btfss	(___awmod@divisor+1)^0,7,c
  3409  002B6C  EFBA  F015         	goto	u3131
  3410  002B70  EFBC  F015         	goto	u3130
  3411  002B74                     u3131:
  3412  002B74  EFB1  F015         	goto	l3309
  3413  002B78                     u3130:
  3414  002B78                     l3313:
  3415  002B78  5054               	movf	___awmod@divisor^0,w,c
  3416  002B7A  5C52               	subwf	___awmod@dividend^0,w,c
  3417  002B7C  5055               	movf	(___awmod@divisor+1)^0,w,c
  3418  002B7E  5853               	subwfb	(___awmod@dividend+1)^0,w,c
  3419  002B80  A0D8               	btfss	status,0,c
  3420  002B82  EFC5  F015         	goto	u3141
  3421  002B86  EFC7  F015         	goto	u3140
  3422  002B8A                     u3141:
  3423  002B8A  EFCB  F015         	goto	l3317
  3424  002B8E                     u3140:
  3425  002B8E  5054               	movf	___awmod@divisor^0,w,c
  3426  002B90  5E52               	subwf	___awmod@dividend^0,f,c
  3427  002B92  5055               	movf	(___awmod@divisor+1)^0,w,c
  3428  002B94  5A53               	subwfb	(___awmod@dividend+1)^0,f,c
  3429  002B96                     l3317:
  3430  002B96  90D8               	bcf	status,0,c
  3431  002B98  3255               	rrcf	(___awmod@divisor+1)^0,f,c
  3432  002B9A  3254               	rrcf	___awmod@divisor^0,f,c
  3433  002B9C  2E56               	decfsz	___awmod@counter^0,f,c
  3434  002B9E  EFBC  F015         	goto	l3313
  3435  002BA2                     l3321:
  3436  002BA2  5057               	movf	___awmod@sign^0,w,c
  3437  002BA4  B4D8               	btfsc	status,2,c
  3438  002BA6  EFD7  F015         	goto	u3151
  3439  002BAA  EFD9  F015         	goto	u3150
  3440  002BAE                     u3151:
  3441  002BAE  EFDD  F015         	goto	l3325
  3442  002BB2                     u3150:
  3443  002BB2  6C52               	negf	___awmod@dividend^0,c
  3444  002BB4  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3445  002BB6  B0D8               	btfsc	status,0,c
  3446  002BB8  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3447  002BBA                     l3325:
  3448  002BBA  C052  F052         	movff	___awmod@dividend,?___awmod
  3449  002BBE  C053  F053         	movff	___awmod@dividend+1,?___awmod+1
  3450  002BC2  0012               	return		;funcret
  3451  002BC4                     __end_of___awmod:
  3452                           	callstack 0
  3453                           
  3454 ;; *************** function _appInit *****************
  3455 ;; Defined at:
  3456 ;;		line 12 in file "app.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;		None
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3470 ;;      Params:         0       0       0       0       0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3473 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3474 ;;Total ram usage:        0 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    5
  3477 ;; This function calls:
  3478 ;;		_adcInit
  3479 ;;		_appISRConfig
  3480 ;;		_appLCD_Init
  3481 ;;		_appTimerInit
  3482 ;;		_appTimerStart
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text13
  3489  00305C                     __ptext13:
  3490                           	callstack 0
  3491  00305C                     _appInit:
  3492                           	callstack 25
  3493  00305C                     
  3494                           ;app.c: 14:     appISRConfig();
  3495  00305C  EC4A  F018         	call	_appISRConfig	;wreg free
  3496  003060                     
  3497                           ;app.c: 15:     appLCD_Init();
  3498  003060  ECE2  F015         	call	_appLCD_Init	;wreg free
  3499  003064                     
  3500                           ;app.c: 16:     adcInit(2);
  3501  003064  0E02               	movlw	2
  3502  003066  ECE0  F016         	call	_adcInit
  3503  00306A                     
  3504                           ;app.c: 17:     appTimerInit();
  3505  00306A  EC3A  F018         	call	_appTimerInit	;wreg free
  3506  00306E                     
  3507                           ;app.c: 18:     appTimerStart();
  3508  00306E  EC44  F018         	call	_appTimerStart	;wreg free
  3509  003072  0012               	return		;funcret
  3510  003074                     __end_of_appInit:
  3511                           	callstack 0
  3512                           
  3513 ;; *************** function _appTimerInit *****************
  3514 ;; Defined at:
  3515 ;;		line 53 in file "servo.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3532 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    2
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_appInit
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text14
  3544  003074                     __ptext14:
  3545                           	callstack 0
  3546  003074                     _appTimerInit:
  3547                           	callstack 27
  3548  003074                     
  3549                           ;servo.c: 58:     T3CONbits.TMR3ON = 0;
  3550  003074  90B1               	bcf	177,0,c	;volatile
  3551                           
  3552                           ;servo.c: 59:     T3CONbits.RD16 = 1;
  3553  003076  8EB1               	bsf	177,7,c	;volatile
  3554                           
  3555                           ;servo.c: 60:     T3CONbits.TMR3CS = 0;
  3556  003078  92B1               	bcf	177,1,c	;volatile
  3557  00307A                     
  3558                           ;servo.c: 61:     T3CONbits.T3CKPS = 0b11;
  3559  00307A  0E30               	movlw	48
  3560  00307C  12B1               	iorwf	177,f,c	;volatile
  3561  00307E                     
  3562                           ;servo.c: 62:     T3CONbits.T3NSYNC = 1;
  3563  00307E  84B1               	bsf	177,2,c	;volatile
  3564  003080                     
  3565                           ;servo.c: 68:     PIR2bits.TMR3IF = 0;
  3566  003080  92A1               	bcf	161,1,c	;volatile
  3567  003082                     
  3568                           ;servo.c: 69:     IPR2bits.TMR3IP = 0;
  3569  003082  92A2               	bcf	162,1,c	;volatile
  3570  003084                     
  3571                           ;servo.c: 70:     PIE2bits.TMR3IE = 1;
  3572  003084  82A0               	bsf	160,1,c	;volatile
  3573  003086  0012               	return		;funcret
  3574  003088                     __end_of_appTimerInit:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function _appLCD_Init *****************
  3578 ;; Defined at:
  3579 ;;		line 197 in file "flex_lcd.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3595 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3596 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3597 ;;Total ram usage:        2 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    4
  3600 ;; This function calls:
  3601 ;;		_Lcd_Cmd
  3602 ;;		_Lcd_Init
  3603 ;;		_Lcd_Out
  3604 ;; This function is called by:
  3605 ;;		_appInit
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text15
  3610  002BC4                     __ptext15:
  3611                           	callstack 0
  3612  002BC4                     _appLCD_Init:
  3613                           	callstack 25
  3614  002BC4                     
  3615                           ;flex_lcd.c: 199:     Lcd_Init();
  3616  002BC4  EC2A  F015         	call	_Lcd_Init	;wreg free
  3617                           
  3618                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  3619  002BC8  0E01               	movlw	1
  3620  002BCA  ECE6  F012         	call	_Lcd_Cmd
  3621                           
  3622                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  3623  002BCE  0E0C               	movlw	12
  3624  002BD0  ECE6  F012         	call	_Lcd_Cmd
  3625  002BD4                     
  3626                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  3627  002BD4  0E02               	movlw	2
  3628  002BD6  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3629  002BD8  0E86               	movlw	134
  3630  002BDA  6E0E               	movwf	??_appLCD_Init^0,c
  3631  002BDC  0E99               	movlw	153
  3632  002BDE                     u4477:
  3633  002BDE  2EE8               	decfsz	wreg,f,c
  3634  002BE0  D7FE               	bra	u4477
  3635  002BE2  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3636  002BE4  D7FC               	bra	u4477
  3637  002BE6  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3638  002BE8  D7FA               	bra	u4477
  3639  002BEA  F000               	nop	
  3640  002BEC                     
  3641                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  3642  002BEC  0E03               	movlw	3
  3643  002BEE  6E07               	movwf	Lcd_Out@x^0,c
  3644  002BF0  0E1D               	movlw	low STR_3
  3645  002BF2  6E08               	movwf	Lcd_Out@buffer^0,c
  3646  002BF4  0E08               	movlw	high STR_3
  3647  002BF6  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3648  002BF8  0E01               	movlw	1
  3649  002BFA  ECFE  F013         	call	_Lcd_Out
  3650  002BFE                     
  3651                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  3652  002BFE  0E06               	movlw	6
  3653  002C00  6E07               	movwf	Lcd_Out@x^0,c
  3654  002C02  0E32               	movlw	low STR_4
  3655  002C04  6E08               	movwf	Lcd_Out@buffer^0,c
  3656  002C06  0E08               	movlw	high STR_4
  3657  002C08  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3658  002C0A  0E02               	movlw	2
  3659  002C0C  ECFE  F013         	call	_Lcd_Out
  3660  002C10                     
  3661                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  3662  002C10  0E1F               	movlw	31
  3663  002C12  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3664  002C14  0E71               	movlw	113
  3665  002C16  6E0E               	movwf	??_appLCD_Init^0,c
  3666  002C18  0E1E               	movlw	30
  3667  002C1A                     u4487:
  3668  002C1A  2EE8               	decfsz	wreg,f,c
  3669  002C1C  D7FE               	bra	u4487
  3670  002C1E  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3671  002C20  D7FC               	bra	u4487
  3672  002C22  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3673  002C24  D7FA               	bra	u4487
  3674  002C26  D000               	nop2	
  3675                           
  3676                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  3677  002C28  0E01               	movlw	1
  3678  002C2A  ECE6  F012         	call	_Lcd_Cmd
  3679  002C2E  0E02               	movlw	2
  3680  002C30  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3681  002C32  0E86               	movlw	134
  3682  002C34  6E0E               	movwf	??_appLCD_Init^0,c
  3683  002C36  0E99               	movlw	153
  3684  002C38                     u4497:
  3685  002C38  2EE8               	decfsz	wreg,f,c
  3686  002C3A  D7FE               	bra	u4497
  3687  002C3C  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3688  002C3E  D7FC               	bra	u4497
  3689  002C40  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3690  002C42  D7FA               	bra	u4497
  3691  002C44  F000               	nop	
  3692  002C46  0012               	return		;funcret
  3693  002C48                     __end_of_appLCD_Init:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _Lcd_Init *****************
  3697 ;; Defined at:
  3698 ;;		line 31 in file "flex_lcd.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  i               1    7[COMRAM] unsigned char 
  3703 ;;  data            1    0        unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0
  3714 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3715 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3716 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3717 ;;Total ram usage:        3 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    3
  3720 ;; This function calls:
  3721 ;;		_Lcd_Cmd
  3722 ;; This function is called by:
  3723 ;;		_appLCD_Init
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text16
  3728  002A54                     __ptext16:
  3729                           	callstack 0
  3730  002A54                     _Lcd_Init:
  3731                           	callstack 25
  3732  002A54                     
  3733                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  3734  002A54  9E95               	bcf	149,7,c	;volatile
  3735                           
  3736                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  3737  002A56  9C95               	bcf	149,6,c	;volatile
  3738                           
  3739                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  3740  002A58  9A95               	bcf	149,5,c	;volatile
  3741                           
  3742                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  3743  002A5A  9895               	bcf	149,4,c	;volatile
  3744                           
  3745                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  3746  002A5C  9695               	bcf	149,3,c	;volatile
  3747                           
  3748                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  3749  002A5E  9495               	bcf	149,2,c	;volatile
  3750  002A60                     
  3751                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  3752  002A60  0E85               	movlw	133
  3753  002A62  6E07               	movwf	??_Lcd_Init^0,c
  3754  002A64  0E76               	movlw	118
  3755  002A66                     u4507:
  3756  002A66  2EE8               	decfsz	wreg,f,c
  3757  002A68  D7FE               	bra	u4507
  3758  002A6A  2E07               	decfsz	??_Lcd_Init^0,f,c
  3759  002A6C  D7FC               	bra	u4507
  3760  002A6E  D000               	nop2	
  3761  002A70                     
  3762                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  3763  002A70  0E00               	movlw	0
  3764  002A72  6E08               	movwf	Lcd_Init@i^0,c
  3765  002A74                     l99:
  3766                           
  3767                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  3768  002A74  9E8C               	bcf	140,7,c	;volatile
  3769                           
  3770                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  3771  002A76  9C8C               	bcf	140,6,c	;volatile
  3772                           
  3773                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  3774  002A78  8A8C               	bsf	140,5,c	;volatile
  3775                           
  3776                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  3777  002A7A  888C               	bsf	140,4,c	;volatile
  3778                           
  3779                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  3780  002A7C  968C               	bcf	140,3,c	;volatile
  3781                           
  3782                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  3783  002A7E  948C               	bcf	140,2,c	;volatile
  3784                           
  3785                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  3786  002A80  9E8C               	bcf	140,7,c	;volatile
  3787                           
  3788                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  3789  002A82  9C8C               	bcf	140,6,c	;volatile
  3790                           
  3791                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  3792  002A84  8A8C               	bsf	140,5,c	;volatile
  3793                           
  3794                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  3795  002A86  888C               	bsf	140,4,c	;volatile
  3796                           
  3797                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  3798  002A88  868C               	bsf	140,3,c	;volatile
  3799                           
  3800                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  3801  002A8A  948C               	bcf	140,2,c	;volatile
  3802  002A8C                     
  3803                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  3804  002A8C  0E05               	movlw	5
  3805  002A8E                     u4517:
  3806  002A8E  2EE8               	decfsz	wreg,f,c
  3807  002A90  D7FE               	bra	u4517
  3808  002A92                     
  3809                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  3810  002A92  9E8C               	bcf	140,7,c	;volatile
  3811  002A94                     
  3812                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  3813  002A94  9C8C               	bcf	140,6,c	;volatile
  3814  002A96                     
  3815                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  3816  002A96  8A8C               	bsf	140,5,c	;volatile
  3817  002A98                     
  3818                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  3819  002A98  888C               	bsf	140,4,c	;volatile
  3820  002A9A                     
  3821                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  3822  002A9A  968C               	bcf	140,3,c	;volatile
  3823  002A9C                     
  3824                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  3825  002A9C  948C               	bcf	140,2,c	;volatile
  3826                           
  3827                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3828  002A9E  0E16               	movlw	22
  3829  002AA0  6E07               	movwf	??_Lcd_Init^0,c
  3830  002AA2  0E6C               	movlw	108
  3831  002AA4                     u4527:
  3832  002AA4  2EE8               	decfsz	wreg,f,c
  3833  002AA6  D7FE               	bra	u4527
  3834  002AA8  2E07               	decfsz	??_Lcd_Init^0,f,c
  3835  002AAA  D7FC               	bra	u4527
  3836  002AAC  D000               	nop2	
  3837  002AAE                     
  3838                           ;flex_lcd.c: 61:     }
  3839  002AAE  2A08               	incf	Lcd_Init@i^0,f,c
  3840  002AB0  0E03               	movlw	3
  3841  002AB2  6408               	cpfsgt	Lcd_Init@i^0,c
  3842  002AB4  EF5E  F015         	goto	u2671
  3843  002AB8  EF60  F015         	goto	u2670
  3844  002ABC                     u2671:
  3845  002ABC  EF3A  F015         	goto	l99
  3846  002AC0                     u2670:
  3847  002AC0                     
  3848                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  3849  002AC0  9E8C               	bcf	140,7,c	;volatile
  3850                           
  3851                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  3852  002AC2  9C8C               	bcf	140,6,c	;volatile
  3853                           
  3854                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  3855  002AC4  8A8C               	bsf	140,5,c	;volatile
  3856                           
  3857                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  3858  002AC6  988C               	bcf	140,4,c	;volatile
  3859                           
  3860                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  3861  002AC8  968C               	bcf	140,3,c	;volatile
  3862                           
  3863                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  3864  002ACA  948C               	bcf	140,2,c	;volatile
  3865                           
  3866                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  3867  002ACC  9E8C               	bcf	140,7,c	;volatile
  3868                           
  3869                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  3870  002ACE  9C8C               	bcf	140,6,c	;volatile
  3871                           
  3872                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  3873  002AD0  8A8C               	bsf	140,5,c	;volatile
  3874                           
  3875                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  3876  002AD2  988C               	bcf	140,4,c	;volatile
  3877                           
  3878                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  3879  002AD4  868C               	bsf	140,3,c	;volatile
  3880                           
  3881                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  3882  002AD6  948C               	bcf	140,2,c	;volatile
  3883  002AD8                     
  3884                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3885  002AD8  0E05               	movlw	5
  3886  002ADA                     u4537:
  3887  002ADA  2EE8               	decfsz	wreg,f,c
  3888  002ADC  D7FE               	bra	u4537
  3889  002ADE                     
  3890                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  3891  002ADE  9E8C               	bcf	140,7,c	;volatile
  3892  002AE0                     
  3893                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  3894  002AE0  9C8C               	bcf	140,6,c	;volatile
  3895  002AE2                     
  3896                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  3897  002AE2  8A8C               	bsf	140,5,c	;volatile
  3898  002AE4                     
  3899                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  3900  002AE4  988C               	bcf	140,4,c	;volatile
  3901  002AE6                     
  3902                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  3903  002AE6  968C               	bcf	140,3,c	;volatile
  3904  002AE8                     
  3905                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  3906  002AE8  948C               	bcf	140,2,c	;volatile
  3907                           
  3908                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3909  002AEA  0E16               	movlw	22
  3910  002AEC  6E07               	movwf	??_Lcd_Init^0,c
  3911  002AEE  0E6C               	movlw	108
  3912  002AF0                     u4547:
  3913  002AF0  2EE8               	decfsz	wreg,f,c
  3914  002AF2  D7FE               	bra	u4547
  3915  002AF4  2E07               	decfsz	??_Lcd_Init^0,f,c
  3916  002AF6  D7FC               	bra	u4547
  3917  002AF8  D000               	nop2	
  3918  002AFA                     
  3919                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  3920  002AFA  0E28               	movlw	40
  3921  002AFC  ECE6  F012         	call	_Lcd_Cmd
  3922  002B00                     
  3923                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  3924  002B00  0E10               	movlw	16
  3925  002B02  ECE6  F012         	call	_Lcd_Cmd
  3926  002B06                     
  3927                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  3928  002B06  0E01               	movlw	1
  3929  002B08  ECE6  F012         	call	_Lcd_Cmd
  3930  002B0C                     
  3931                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  3932  002B0C  0E0F               	movlw	15
  3933  002B0E  ECE6  F012         	call	_Lcd_Cmd
  3934  002B12  0012               	return		;funcret
  3935  002B14                     __end_of_Lcd_Init:
  3936                           	callstack 0
  3937                           
  3938 ;; *************** function _appISRConfig *****************
  3939 ;; Defined at:
  3940 ;;		line 73 in file "app.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		None
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3954 ;;      Params:         0       0       0       0       0       0       0       0       0
  3955 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3957 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3958 ;;Total ram usage:        0 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    2
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_appInit
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text17
  3969  003094                     __ptext17:
  3970                           	callstack 0
  3971  003094                     _appISRConfig:
  3972                           	callstack 27
  3973  003094                     
  3974                           ;app.c: 78:     RCONbits.IPEN = 1;
  3975  003094  8ED0               	bsf	208,7,c	;volatile
  3976                           
  3977                           ;app.c: 79:     INTCONbits.GIE_GIEH = 1;
  3978  003096  8EF2               	bsf	242,7,c	;volatile
  3979                           
  3980                           ;app.c: 80:     INTCONbits.PEIE_GIEL = 1;
  3981  003098  8CF2               	bsf	242,6,c	;volatile
  3982  00309A  0012               	return		;funcret
  3983  00309C                     __end_of_appISRConfig:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function _adcInit *****************
  3987 ;; Defined at:
  3988 ;;		line 10 in file "adc.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  ADC_PINs        1    wreg     unsigned char 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  ADC_PINs        1    4[COMRAM] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4002 ;;      Params:         0       0       0       0       0       0       0       0       0
  4003 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4004 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4005 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4006 ;;Total ram usage:        2 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    2
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_appInit
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text18
  4017  002DC0                     __ptext18:
  4018                           	callstack 0
  4019  002DC0                     _adcInit:
  4020                           	callstack 27
  4021                           
  4022                           ;incstack = 0
  4023                           ;adcInit@ADC_PINs stored from wreg
  4024  002DC0  6E05               	movwf	adcInit@ADC_PINs^0,c
  4025  002DC2                     
  4026                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  4027  002DC2  5005               	movf	adcInit@ADC_PINs^0,w,c
  4028  002DC4  A4D8               	btfss	status,2,c
  4029  002DC6  EFE7  F016         	goto	u3331
  4030  002DCA  EFE9  F016         	goto	u3330
  4031  002DCE                     u3331:
  4032  002DCE  EFEF  F016         	goto	l3423
  4033  002DD2                     u3330:
  4034  002DD2                     
  4035                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  4036  002DD2  50C1               	movf	193,w,c	;volatile
  4037  002DD4  0BF0               	andlw	-16
  4038  002DD6  090E               	iorlw	14
  4039  002DD8  6EC1               	movwf	193,c	;volatile
  4040                           
  4041                           ;adc.c: 16:     }
  4042  002DDA  EFF7  F016         	goto	l3425
  4043  002DDE                     l3423:
  4044                           
  4045                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  4046  002DDE  5005               	movf	adcInit@ADC_PINs^0,w,c
  4047  002DE0  080F               	sublw	15
  4048  002DE2  6E04               	movwf	??_adcInit^0,c
  4049  002DE4  50C1               	movf	193,w,c	;volatile
  4050  002DE6  1804               	xorwf	??_adcInit^0,w,c
  4051  002DE8  0BF0               	andlw	-16
  4052  002DEA  1804               	xorwf	??_adcInit^0,w,c
  4053  002DEC  6EC1               	movwf	193,c	;volatile
  4054  002DEE                     l3425:
  4055                           
  4056                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  4057  002DEE  0ECF               	movlw	-49
  4058  002DF0  16C1               	andwf	193,f,c	;volatile
  4059  002DF2                     
  4060                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  4061  002DF2  50C0               	movf	192,w,c	;volatile
  4062  002DF4  0BC7               	andlw	-57
  4063  002DF6  0910               	iorlw	16
  4064  002DF8  6EC0               	movwf	192,c	;volatile
  4065  002DFA                     
  4066                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  4067  002DFA  50C0               	movf	192,w,c	;volatile
  4068  002DFC  0BF8               	andlw	-8
  4069  002DFE  0903               	iorlw	3
  4070  002E00  6EC0               	movwf	192,c	;volatile
  4071  002E02                     
  4072                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  4073  002E02  8EC0               	bsf	192,7,c	;volatile
  4074  002E04                     
  4075                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  4076  002E04  80C2               	bsf	194,0,c	;volatile
  4077  002E06  0012               	return		;funcret
  4078  002E08                     __end_of_adcInit:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _teclado *****************
  4082 ;; Defined at:
  4083 ;;		line 10 in file "teclado.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  valor           2    3[COMRAM] PTR unsigned char 
  4086 ;;		 -> appGetElements@inout(1), datos(25), 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4098 ;;      Params:         2       0       0       0       0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4101 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    2
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_appStateInitial
  4109 ;;		_appGetElements
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text19
  4114  00164C                     __ptext19:
  4115                           	callstack 0
  4116  00164C                     _teclado:
  4117                           	callstack 27
  4118  00164C                     
  4119                           ;teclado.c: 11:     *valor = 0;
  4120  00164C  C004  FFD9         	movff	teclado@valor,fsr2l
  4121  001650  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4122  001654  0E00               	movlw	0
  4123  001656  6EDF               	movwf	indf2,c
  4124  001658                     
  4125                           ;teclado.c: 12:     PORTB=0xF0;
  4126  001658  0EF0               	movlw	240
  4127  00165A  6E81               	movwf	129,c	;volatile
  4128  00165C                     
  4129                           ;teclado.c: 13:     if(PORTB != 0xF0){
  4130  00165C  0EF0               	movlw	240
  4131  00165E  1881               	xorwf	129,w,c	;volatile
  4132  001660  B4D8               	btfsc	status,2,c
  4133  001662  EF35  F00B         	goto	u3341
  4134  001666  EF37  F00B         	goto	u3340
  4135  00166A                     u3341:
  4136  00166A  EF0F  F00C         	goto	l3535
  4137  00166E                     u3340:
  4138  00166E                     
  4139                           ;teclado.c: 14:         PORTB=0xFE;
  4140  00166E  0EFE               	movlw	254
  4141  001670  6E81               	movwf	129,c	;volatile
  4142  001672                     
  4143                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  4144  001672  B881               	btfsc	129,4,c	;volatile
  4145  001674  EF3E  F00B         	goto	u3351
  4146  001678  EF40  F00B         	goto	u3350
  4147  00167C                     u3351:
  4148  00167C  EF46  F00B         	goto	l3469
  4149  001680                     u3350:
  4150  001680  C004  FFD9         	movff	teclado@valor,fsr2l
  4151  001684  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4152  001688  0E2A               	movlw	42
  4153  00168A  6EDF               	movwf	indf2,c
  4154  00168C                     l3469:
  4155                           
  4156                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  4157  00168C  BA81               	btfsc	129,5,c	;volatile
  4158  00168E  EF4B  F00B         	goto	u3361
  4159  001692  EF4D  F00B         	goto	u3360
  4160  001696                     u3361:
  4161  001696  EF53  F00B         	goto	l3473
  4162  00169A                     u3360:
  4163  00169A  C004  FFD9         	movff	teclado@valor,fsr2l
  4164  00169E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4165  0016A2  0E30               	movlw	48
  4166  0016A4  6EDF               	movwf	indf2,c
  4167  0016A6                     l3473:
  4168                           
  4169                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  4170  0016A6  BC81               	btfsc	129,6,c	;volatile
  4171  0016A8  EF58  F00B         	goto	u3371
  4172  0016AC  EF5A  F00B         	goto	u3370
  4173  0016B0                     u3371:
  4174  0016B0  EF60  F00B         	goto	l3477
  4175  0016B4                     u3370:
  4176  0016B4  C004  FFD9         	movff	teclado@valor,fsr2l
  4177  0016B8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4178  0016BC  0E23               	movlw	35
  4179  0016BE  6EDF               	movwf	indf2,c
  4180  0016C0                     l3477:
  4181                           
  4182                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  4183  0016C0  BE81               	btfsc	129,7,c	;volatile
  4184  0016C2  EF65  F00B         	goto	u3381
  4185  0016C6  EF67  F00B         	goto	u3380
  4186  0016CA                     u3381:
  4187  0016CA  EF6D  F00B         	goto	l3481
  4188  0016CE                     u3380:
  4189  0016CE  C004  FFD9         	movff	teclado@valor,fsr2l
  4190  0016D2  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4191  0016D6  0E44               	movlw	68
  4192  0016D8  6EDF               	movwf	indf2,c
  4193  0016DA                     l3481:
  4194                           
  4195                           ;teclado.c: 19:         PORTB=0xFD;
  4196  0016DA  0EFD               	movlw	253
  4197  0016DC  6E81               	movwf	129,c	;volatile
  4198  0016DE                     
  4199                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  4200  0016DE  B881               	btfsc	129,4,c	;volatile
  4201  0016E0  EF74  F00B         	goto	u3391
  4202  0016E4  EF76  F00B         	goto	u3390
  4203  0016E8                     u3391:
  4204  0016E8  EF7C  F00B         	goto	l3487
  4205  0016EC                     u3390:
  4206  0016EC  C004  FFD9         	movff	teclado@valor,fsr2l
  4207  0016F0  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4208  0016F4  0E37               	movlw	55
  4209  0016F6  6EDF               	movwf	indf2,c
  4210  0016F8                     l3487:
  4211                           
  4212                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  4213  0016F8  BA81               	btfsc	129,5,c	;volatile
  4214  0016FA  EF81  F00B         	goto	u3401
  4215  0016FE  EF83  F00B         	goto	u3400
  4216  001702                     u3401:
  4217  001702  EF89  F00B         	goto	l3491
  4218  001706                     u3400:
  4219  001706  C004  FFD9         	movff	teclado@valor,fsr2l
  4220  00170A  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4221  00170E  0E38               	movlw	56
  4222  001710  6EDF               	movwf	indf2,c
  4223  001712                     l3491:
  4224                           
  4225                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  4226  001712  BC81               	btfsc	129,6,c	;volatile
  4227  001714  EF8E  F00B         	goto	u3411
  4228  001718  EF90  F00B         	goto	u3410
  4229  00171C                     u3411:
  4230  00171C  EF96  F00B         	goto	l3495
  4231  001720                     u3410:
  4232  001720  C004  FFD9         	movff	teclado@valor,fsr2l
  4233  001724  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4234  001728  0E39               	movlw	57
  4235  00172A  6EDF               	movwf	indf2,c
  4236  00172C                     l3495:
  4237                           
  4238                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  4239  00172C  BE81               	btfsc	129,7,c	;volatile
  4240  00172E  EF9B  F00B         	goto	u3421
  4241  001732  EF9D  F00B         	goto	u3420
  4242  001736                     u3421:
  4243  001736  EFA3  F00B         	goto	l3499
  4244  00173A                     u3420:
  4245  00173A  C004  FFD9         	movff	teclado@valor,fsr2l
  4246  00173E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4247  001742  0E43               	movlw	67
  4248  001744  6EDF               	movwf	indf2,c
  4249  001746                     l3499:
  4250                           
  4251                           ;teclado.c: 24:         PORTB=0xFB;
  4252  001746  0EFB               	movlw	251
  4253  001748  6E81               	movwf	129,c	;volatile
  4254  00174A                     
  4255                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  4256  00174A  B881               	btfsc	129,4,c	;volatile
  4257  00174C  EFAA  F00B         	goto	u3431
  4258  001750  EFAC  F00B         	goto	u3430
  4259  001754                     u3431:
  4260  001754  EFB2  F00B         	goto	l3505
  4261  001758                     u3430:
  4262  001758  C004  FFD9         	movff	teclado@valor,fsr2l
  4263  00175C  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4264  001760  0E34               	movlw	52
  4265  001762  6EDF               	movwf	indf2,c
  4266  001764                     l3505:
  4267                           
  4268                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  4269  001764  BA81               	btfsc	129,5,c	;volatile
  4270  001766  EFB7  F00B         	goto	u3441
  4271  00176A  EFB9  F00B         	goto	u3440
  4272  00176E                     u3441:
  4273  00176E  EFBF  F00B         	goto	l3509
  4274  001772                     u3440:
  4275  001772  C004  FFD9         	movff	teclado@valor,fsr2l
  4276  001776  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4277  00177A  0E35               	movlw	53
  4278  00177C  6EDF               	movwf	indf2,c
  4279  00177E                     l3509:
  4280                           
  4281                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  4282  00177E  BC81               	btfsc	129,6,c	;volatile
  4283  001780  EFC4  F00B         	goto	u3451
  4284  001784  EFC6  F00B         	goto	u3450
  4285  001788                     u3451:
  4286  001788  EFCC  F00B         	goto	l3513
  4287  00178C                     u3450:
  4288  00178C  C004  FFD9         	movff	teclado@valor,fsr2l
  4289  001790  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4290  001794  0E36               	movlw	54
  4291  001796  6EDF               	movwf	indf2,c
  4292  001798                     l3513:
  4293                           
  4294                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  4295  001798  BE81               	btfsc	129,7,c	;volatile
  4296  00179A  EFD1  F00B         	goto	u3461
  4297  00179E  EFD3  F00B         	goto	u3460
  4298  0017A2                     u3461:
  4299  0017A2  EFD9  F00B         	goto	l3517
  4300  0017A6                     u3460:
  4301  0017A6  C004  FFD9         	movff	teclado@valor,fsr2l
  4302  0017AA  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4303  0017AE  0E42               	movlw	66
  4304  0017B0  6EDF               	movwf	indf2,c
  4305  0017B2                     l3517:
  4306                           
  4307                           ;teclado.c: 29:         PORTB=0xF7;
  4308  0017B2  0EF7               	movlw	247
  4309  0017B4  6E81               	movwf	129,c	;volatile
  4310  0017B6                     
  4311                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  4312  0017B6  B881               	btfsc	129,4,c	;volatile
  4313  0017B8  EFE0  F00B         	goto	u3471
  4314  0017BC  EFE2  F00B         	goto	u3470
  4315  0017C0                     u3471:
  4316  0017C0  EFE8  F00B         	goto	l3523
  4317  0017C4                     u3470:
  4318  0017C4  C004  FFD9         	movff	teclado@valor,fsr2l
  4319  0017C8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4320  0017CC  0E31               	movlw	49
  4321  0017CE  6EDF               	movwf	indf2,c
  4322  0017D0                     l3523:
  4323                           
  4324                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  4325  0017D0  BA81               	btfsc	129,5,c	;volatile
  4326  0017D2  EFED  F00B         	goto	u3481
  4327  0017D6  EFEF  F00B         	goto	u3480
  4328  0017DA                     u3481:
  4329  0017DA  EFF5  F00B         	goto	l3527
  4330  0017DE                     u3480:
  4331  0017DE  C004  FFD9         	movff	teclado@valor,fsr2l
  4332  0017E2  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4333  0017E6  0E32               	movlw	50
  4334  0017E8  6EDF               	movwf	indf2,c
  4335  0017EA                     l3527:
  4336                           
  4337                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  4338  0017EA  BC81               	btfsc	129,6,c	;volatile
  4339  0017EC  EFFA  F00B         	goto	u3491
  4340  0017F0  EFFC  F00B         	goto	u3490
  4341  0017F4                     u3491:
  4342  0017F4  EF02  F00C         	goto	l3531
  4343  0017F8                     u3490:
  4344  0017F8  C004  FFD9         	movff	teclado@valor,fsr2l
  4345  0017FC  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4346  001800  0E33               	movlw	51
  4347  001802  6EDF               	movwf	indf2,c
  4348  001804                     l3531:
  4349                           
  4350                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  4351  001804  BE81               	btfsc	129,7,c	;volatile
  4352  001806  EF07  F00C         	goto	u3501
  4353  00180A  EF09  F00C         	goto	u3500
  4354  00180E                     u3501:
  4355  00180E  EF0F  F00C         	goto	l3535
  4356  001812                     u3500:
  4357  001812  C004  FFD9         	movff	teclado@valor,fsr2l
  4358  001816  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4359  00181A  0E41               	movlw	65
  4360  00181C  6EDF               	movwf	indf2,c
  4361  00181E                     l3535:
  4362                           
  4363                           ;teclado.c: 35:     PORTB = 0xF0;
  4364  00181E  0EF0               	movlw	240
  4365  001820  6E81               	movwf	129,c	;volatile
  4366  001822                     l3537:
  4367  001822  0EF0               	movlw	240
  4368  001824  1881               	xorwf	129,w,c	;volatile
  4369  001826  A4D8               	btfss	status,2,c
  4370  001828  EF18  F00C         	goto	u3511
  4371  00182C  EF1A  F00C         	goto	u3510
  4372  001830                     u3511:
  4373  001830  EF11  F00C         	goto	l3537
  4374  001834                     u3510:
  4375  001834  0012               	return		;funcret
  4376  001836                     __end_of_teclado:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function _sprintf *****************
  4380 ;; Defined at:
  4381 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  s               2   18[BANK0 ] PTR unsigned char 
  4384 ;;		 -> appElemts@dataout(6), datos(25), 
  4385 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  4386 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  f               6   30[BANK0 ] struct _IO_FILE
  4389 ;;  ap              2   28[BANK0 ] PTR void [1]
  4390 ;;		 -> ?_sprintf(2), 
  4391 ;;  ret             2    0        int 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  2   18[BANK0 ] int 
  4394 ;; Registers used:
  4395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4401 ;;      Params:         0       8       0       0       0       0       0       0       0
  4402 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4404 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4405 ;;Total ram usage:       18 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    9
  4408 ;; This function calls:
  4409 ;;		_vfprintf
  4410 ;; This function is called by:
  4411 ;;		_appADC
  4412 ;;		_appBat
  4413 ;;		_appElemts
  4414 ;;		_appGetElements
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text20
  4419  002D1C                     __ptext20:
  4420                           	callstack 0
  4421  002D1C                     _sprintf:
  4422                           	callstack 19
  4423  002D1C  0E76               	movlw	low (?_sprintf+4)
  4424  002D1E  0100               	movlb	0	; () banked
  4425  002D20  6F7C               	movwf	sprintf@ap& (0+255),b
  4426  002D22  0E00               	movlw	high (?_sprintf+4)
  4427  002D24  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  4428  002D26  C072  F07E         	movff	sprintf@s,sprintf@f
  4429  002D2A  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  4430  002D2E                     
  4431                           ; BSR set to: 0
  4432  002D2E  0E00               	movlw	0
  4433  002D30  6F81               	movwf	(sprintf@f+3)& (0+255),b
  4434  002D32  0E00               	movlw	0
  4435  002D34  6F80               	movwf	(sprintf@f+2)& (0+255),b
  4436  002D36                     
  4437                           ; BSR set to: 0
  4438  002D36  0E00               	movlw	0
  4439  002D38  6F83               	movwf	(sprintf@f+5)& (0+255),b
  4440  002D3A  0E00               	movlw	0
  4441  002D3C  6F82               	movwf	(sprintf@f+4)& (0+255),b
  4442  002D3E                     
  4443                           ; BSR set to: 0
  4444  002D3E  0E7E               	movlw	low sprintf@f
  4445  002D40  6F6C               	movwf	vfprintf@fp& (0+255),b
  4446  002D42  0E00               	movlw	high sprintf@f
  4447  002D44  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  4448  002D46  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  4449  002D4A  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4450  002D4E  0E7C               	movlw	low sprintf@ap
  4451  002D50  6F70               	movwf	vfprintf@ap& (0+255),b
  4452  002D52  0E00               	movlw	high sprintf@ap
  4453  002D54  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  4454  002D56  EC5D  F016         	call	_vfprintf	;wreg free
  4455  002D5A  0100               	movlb	0	; () banked
  4456  002D5C  5180               	movf	(sprintf@f+2)& (0+255),w,b
  4457  002D5E  2572               	addwf	sprintf@s& (0+255),w,b
  4458  002D60  6ED9               	movwf	fsr2l,c
  4459  002D62  5181               	movf	(sprintf@f+3)& (0+255),w,b
  4460  002D64  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  4461  002D66  6EDA               	movwf	fsr2h,c
  4462  002D68  0E00               	movlw	0
  4463  002D6A  6EDF               	movwf	indf2,c
  4464  002D6C                     
  4465                           ; BSR set to: 0
  4466  002D6C  0012               	return		;funcret
  4467  002D6E                     __end_of_sprintf:
  4468                           	callstack 0
  4469                           
  4470 ;; *************** function _vfprintf *****************
  4471 ;; Defined at:
  4472 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  4475 ;;		 -> sprintf@f(6), 
  4476 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  4477 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4478 ;;  ap              2   16[BANK0 ] PTR PTR void 
  4479 ;;		 -> sprintf@ap(2), 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  4482 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  2   12[BANK0 ] int 
  4485 ;; Registers used:
  4486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4492 ;;      Params:         0       6       0       0       0       0       0       0       0
  4493 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4495 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4496 ;;Total ram usage:        8 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    8
  4499 ;; This function calls:
  4500 ;;		_vfpfcnvrt
  4501 ;; This function is called by:
  4502 ;;		_sprintf
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text21
  4507  002CBA                     __ptext21:
  4508                           	callstack 0
  4509  002CBA                     _vfprintf:
  4510                           	callstack 19
  4511  002CBA                     
  4512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4513  002CBA  C06E  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  4514  002CBE  C06F  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4515  002CC2                     
  4516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4517  002CC2  0E00               	movlw	0
  4518  002CC4  0100               	movlb	0	; () banked
  4519  002CC6  6F95               	movwf	(_nout+1)& (0+255),b
  4520  002CC8  0E00               	movlw	0
  4521  002CCA  6F94               	movwf	_nout& (0+255),b
  4522                           
  4523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4524  002CCC  EF7B  F016         	goto	l4133
  4525  002CD0                     l4131:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4529  002CD0  C06C  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4530  002CD4  C06D  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4531  002CD8  0E4D               	movlw	low vfprintf@cfmt
  4532  002CDA  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4533  002CDC  0E00               	movlw	high vfprintf@cfmt
  4534  002CDE  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4535  002CE0  C070  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4536  002CE4  C071  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4537  002CE8  EC01  F008         	call	_vfpfcnvrt	;wreg free
  4538  002CEC  5043               	movf	?_vfpfcnvrt^0,w,c
  4539  002CEE  0100               	movlb	0	; () banked
  4540  002CF0  2794               	addwf	_nout& (0+255),f,b
  4541  002CF2  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4542  002CF4  2395               	addwfc	(_nout+1)& (0+255),f,b
  4543  002CF6                     l4133:
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4547  002CF6  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  4548  002CFA  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4549  002CFE                     	if	0	;tblptru may be non-zero
  4550  002CFE                     	endif
  4551  002CFE                     	if	0	;tblptru may be non-zero
  4552  002CFE                     	endif
  4553  002CFE  0008               	tblrd		*
  4554  002D00  50F5               	movf	tablat,w,c
  4555  002D02  0900               	iorlw	0
  4556  002D04  A4D8               	btfss	status,2,c
  4557  002D06  EF87  F016         	goto	u4281
  4558  002D0A  EF89  F016         	goto	u4280
  4559  002D0E                     u4281:
  4560  002D0E  EF68  F016         	goto	l4131
  4561  002D12                     u4280:
  4562  002D12                     
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4565  002D12  C094  F06C         	movff	_nout,?_vfprintf
  4566  002D16  C095  F06D         	movff	_nout+1,?_vfprintf+1
  4567  002D1A                     
  4568                           ; BSR set to: 0
  4569  002D1A  0012               	return		;funcret
  4570  002D1C                     __end_of_vfprintf:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function _vfpfcnvrt *****************
  4574 ;; Defined at:
  4575 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4578 ;;		 -> sprintf@f(6), 
  4579 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4580 ;;		 -> vfprintf@cfmt(2), 
  4581 ;;  ap              2   70[COMRAM] PTR PTR void 
  4582 ;;		 -> sprintf@ap(2), 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  ll              8    0[BANK0 ] long long 
  4585 ;;  llu             8    0        unsigned long long 
  4586 ;;  f               4    0        unsigned long long 
  4587 ;;  vp              3    0        PTR void 
  4588 ;;  ct              3    0        unsigned char [3]
  4589 ;;  cp              3    0        PTR unsigned char 
  4590 ;;  done            2    8[BANK0 ] int 
  4591 ;;  i               2    0        int 
  4592 ;;  c               1    0        unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  2   66[COMRAM] int 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4602 ;;      Params:         6       0       0       0       0       0       0       0       0
  4603 ;;      Locals:         0      12       0       0       0       0       0       0       0
  4604 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4605 ;;      Totals:        10      12       0       0       0       0       0       0       0
  4606 ;;Total ram usage:       22 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    7
  4609 ;; This function calls:
  4610 ;;		_atoi
  4611 ;;		_dtoa
  4612 ;;		_fputc
  4613 ;;		_isdigit
  4614 ;; This function is called by:
  4615 ;;		_vfprintf
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text22
  4620  001002                     __ptext22:
  4621                           	callstack 0
  4622  001002                     _vfpfcnvrt:
  4623                           	callstack 19
  4624  001002                     
  4625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4626  001002  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4627  001006  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4628  00100A  CFDE FFF6          	movff	postinc2,tblptrl
  4629  00100E  CFDD FFF7          	movff	postdec2,tblptrh
  4630  001012                     	if	0	;tblptru may be non-zero
  4631  001012                     	endif
  4632  001012                     	if	0	;tblptru may be non-zero
  4633  001012                     	endif
  4634  001012  0008               	tblrd		*
  4635  001014  50F5               	movf	tablat,w,c
  4636  001016  0A25               	xorlw	37
  4637  001018  A4D8               	btfss	status,2,c
  4638  00101A  EF11  F008         	goto	u4171
  4639  00101E  EF13  F008         	goto	u4170
  4640  001022                     u4171:
  4641  001022  EF9B  F009         	goto	l4109
  4642  001026                     u4170:
  4643  001026                     
  4644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4645  001026  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4646  00102A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4647  00102E  2ADE               	incf	postinc2,f,c
  4648  001030  0E00               	movlw	0
  4649  001032  22DD               	addwfc	postdec2,f,c
  4650  001034                     
  4651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4652  001034  0E00               	movlw	0
  4653  001036  0100               	movlb	0	; () banked
  4654  001038  6F97               	movwf	(_width+1)& (0+255),b
  4655  00103A  0E00               	movlw	0
  4656  00103C  6F96               	movwf	_width& (0+255),b
  4657  00103E  C096  F05A         	movff	_width,_flags
  4658  001042  C097  F05B         	movff	_width+1,_flags+1
  4659  001046                     
  4660                           ; BSR set to: 0
  4661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4662  001046  6858               	setf	_prec^0,c
  4663  001048  6859               	setf	(_prec+1)^0,c
  4664  00104A                     
  4665                           ; BSR set to: 0
  4666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4667  00104A  0E00               	movlw	0
  4668  00104C  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4669  00104E  0E00               	movlw	0
  4670  001050  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  4671                           
  4672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4673  001052  EF71  F008         	goto	l4061
  4674  001056                     l4035:
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4678  001056  805A               	bsf	_flags^0,0,c
  4679  001058                     l4037:
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4683  001058  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4684  00105C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4685  001060  2ADE               	incf	postinc2,f,c
  4686  001062  0E00               	movlw	0
  4687  001064  22DD               	addwfc	postdec2,f,c
  4688                           
  4689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4690  001066  EF71  F008         	goto	l4061
  4691  00106A                     l4039:
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4695  00106A  825A               	bsf	_flags^0,1,c
  4696  00106C  EF2C  F008         	goto	l4037
  4697  001070                     l4043:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4701  001070  845A               	bsf	_flags^0,2,c
  4702  001072  EF2C  F008         	goto	l4037
  4703  001076                     l4047:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4707  001076  865A               	bsf	_flags^0,3,c
  4708  001078  EF2C  F008         	goto	l4037
  4709  00107C                     l4051:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4713  00107C  885A               	bsf	_flags^0,4,c
  4714  00107E  EF2C  F008         	goto	l4037
  4715  001082                     l4055:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4719  001082  0E00               	movlw	0
  4720  001084  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4721  001086  0E01               	movlw	1
  4722  001088  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  4723                           
  4724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4725  00108A  EF71  F008         	goto	l4061
  4726  00108E                     l4059:
  4727                           
  4728                           ; BSR set to: 0
  4729  00108E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4730  001092  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4731  001096  CFDE FFF6          	movff	postinc2,tblptrl
  4732  00109A  CFDD FFF7          	movff	postdec2,tblptrh
  4733  00109E                     	if	0	;tblptru may be non-zero
  4734  00109E                     	endif
  4735  00109E                     	if	0	;tblptru may be non-zero
  4736  00109E                     	endif
  4737  00109E  0008               	tblrd		*
  4738  0010A0  50F5               	movf	tablat,w,c
  4739  0010A2  6E49               	movwf	??_vfpfcnvrt^0,c
  4740  0010A4  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  4741                           
  4742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4743                           ; Switch size 1, requested type "simple"
  4744                           ; Number of cases is 1, Range of values is 0 to 0
  4745                           ; switch strategies available:
  4746                           ; Name         Instructions Cycles
  4747                           ; simple_byte            4     3 (average)
  4748                           ;	Chosen strategy is simple_byte
  4749  0010A6  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4750  0010A8  0A00               	xorlw	0	; case 0
  4751  0010AA  B4D8               	btfsc	status,2,c
  4752  0010AC  EF5A  F008         	goto	l4347
  4753  0010B0  EF41  F008         	goto	l4055
  4754  0010B4                     l4347:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ; Switch size 1, requested type "simple"
  4758                           ; Number of cases is 5, Range of values is 32 to 48
  4759                           ; switch strategies available:
  4760                           ; Name         Instructions Cycles
  4761                           ; simple_byte           16     9 (average)
  4762                           ;	Chosen strategy is simple_byte
  4763  0010B4  5049               	movf	??_vfpfcnvrt^0,w,c
  4764  0010B6  0A20               	xorlw	32	; case 32
  4765  0010B8  B4D8               	btfsc	status,2,c
  4766  0010BA  EF3B  F008         	goto	l4047
  4767  0010BE  0A03               	xorlw	3	; case 35
  4768  0010C0  B4D8               	btfsc	status,2,c
  4769  0010C2  EF3E  F008         	goto	l4051
  4770  0010C6  0A08               	xorlw	8	; case 43
  4771  0010C8  B4D8               	btfsc	status,2,c
  4772  0010CA  EF38  F008         	goto	l4043
  4773  0010CE  0A06               	xorlw	6	; case 45
  4774  0010D0  B4D8               	btfsc	status,2,c
  4775  0010D2  EF2B  F008         	goto	l4035
  4776  0010D6  0A1D               	xorlw	29	; case 48
  4777  0010D8  B4D8               	btfsc	status,2,c
  4778  0010DA  EF35  F008         	goto	l4039
  4779  0010DE  EF41  F008         	goto	l4055
  4780  0010E2                     l4061:
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4784  0010E2  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  4785  0010E4  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4786  0010E6  B4D8               	btfsc	status,2,c
  4787  0010E8  EF78  F008         	goto	u4181
  4788  0010EC  EF7A  F008         	goto	u4180
  4789  0010F0                     u4181:
  4790  0010F0  EF47  F008         	goto	l4059
  4791  0010F4                     u4180:
  4792  0010F4                     
  4793                           ; BSR set to: 0
  4794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4795  0010F4  A05A               	btfss	_flags^0,0,c
  4796  0010F6  EF7F  F008         	goto	u4191
  4797  0010FA  EF81  F008         	goto	u4190
  4798  0010FE                     u4191:
  4799  0010FE  EF82  F008         	goto	l4065
  4800  001102                     u4190:
  4801  001102                     
  4802                           ; BSR set to: 0
  4803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4804  001102  925A               	bcf	_flags^0,1,c
  4805  001104                     l4065:
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4809  001104  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4810  001108  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4811  00110C  CFDE FFF6          	movff	postinc2,tblptrl
  4812  001110  CFDD FFF7          	movff	postdec2,tblptrh
  4813  001114                     	if	0	;tblptru may be non-zero
  4814  001114                     	endif
  4815  001114                     	if	0	;tblptru may be non-zero
  4816  001114                     	endif
  4817  001114  0008               	tblrd		*
  4818  001116  50F5               	movf	tablat,w,c
  4819  001118  0A2A               	xorlw	42
  4820  00111A  A4D8               	btfss	status,2,c
  4821  00111C  EF92  F008         	goto	u4201
  4822  001120  EF94  F008         	goto	u4200
  4823  001124                     u4201:
  4824  001124  EFBD  F008         	goto	l4073
  4825  001128                     u4200:
  4826  001128                     
  4827                           ; BSR set to: 0
  4828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4829  001128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4830  00112C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4831  001130  2ADE               	incf	postinc2,f,c
  4832  001132  0E00               	movlw	0
  4833  001134  22DD               	addwfc	postdec2,f,c
  4834                           
  4835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4836  001136  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4837  00113A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4838  00113E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4839  001142  0E02               	movlw	2
  4840  001144  26DE               	addwf	postinc2,f,c
  4841  001146  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4842  00114A  0E00               	movlw	0
  4843  00114C  22DD               	addwfc	postdec2,f,c
  4844  00114E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4845  001152  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4846  001156  CFDE F096          	movff	postinc2,_width
  4847  00115A  CFDD F097          	movff	postdec2,_width+1
  4848  00115E                     
  4849                           ; BSR set to: 0
  4850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4851  00115E  BF97               	btfsc	(_width+1)& (0+255),7,b
  4852  001160  EFB6  F008         	goto	u4210
  4853  001164  EFB4  F008         	goto	u4211
  4854  001168                     u4211:
  4855  001168  EF01  F009         	goto	l4083
  4856  00116C                     u4210:
  4857  00116C                     
  4858                           ; BSR set to: 0
  4859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4860  00116C  805A               	bsf	_flags^0,0,c
  4861                           
  4862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4863  00116E  6D96               	negf	_width& (0+255),b
  4864  001170  1F97               	comf	(_width+1)& (0+255),f,b
  4865  001172  B0D8               	btfsc	status,0,c
  4866  001174  2B97               	incf	(_width+1)& (0+255),f,b
  4867  001176  EF01  F009         	goto	l4083
  4868  00117A                     l4073:
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4872  00117A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4873  00117E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4874  001182  CFDE F00B          	movff	postinc2,atoi@s
  4875  001186  CFDD F00C          	movff	postdec2,atoi@s+1
  4876  00118A  ECE9  F00D         	call	_atoi	;wreg free
  4877  00118E  C00B  F096         	movff	?_atoi,_width
  4878  001192  C00C  F097         	movff	?_atoi+1,_width+1
  4879                           
  4880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4881  001196  EFD4  F008         	goto	l4077
  4882  00119A                     l4075:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  4886  00119A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4887  00119E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4888  0011A2  2ADE               	incf	postinc2,f,c
  4889  0011A4  0E00               	movlw	0
  4890  0011A6  22DD               	addwfc	postdec2,f,c
  4891  0011A8                     l4077:
  4892  0011A8  0ED0               	movlw	208
  4893  0011AA  6E49               	movwf	??_vfpfcnvrt^0,c
  4894  0011AC  0EFF               	movlw	255
  4895  0011AE  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4896  0011B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4897  0011B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4898  0011B8  CFDE FFF6          	movff	postinc2,tblptrl
  4899  0011BC  CFDD FFF7          	movff	postdec2,tblptrh
  4900  0011C0                     	if	0	;tblptru may be non-zero
  4901  0011C0                     	endif
  4902  0011C0                     	if	0	;tblptru may be non-zero
  4903  0011C0                     	endif
  4904  0011C0  0008               	tblrd		*
  4905  0011C2  50F5               	movf	tablat,w,c
  4906  0011C4  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4907  0011C6  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4908  0011C8  5049               	movf	??_vfpfcnvrt^0,w,c
  4909  0011CA  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4910  0011CC  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4911  0011CE  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4912  0011D0  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4913  0011D2  E10A               	bnz	u4220
  4914  0011D4  0E0A               	movlw	10
  4915  0011D6  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4916  0011D8  A0D8               	btfss	status,0,c
  4917  0011DA  EFF1  F008         	goto	u4221
  4918  0011DE  EFF4  F008         	goto	u4220
  4919  0011E2                     u4221:
  4920  0011E2  0E01               	movlw	1
  4921  0011E4  EFF5  F008         	goto	u4230
  4922  0011E8                     u4220:
  4923  0011E8  0E00               	movlw	0
  4924  0011EA                     u4230:
  4925  0011EA  0100               	movlb	0	; () banked
  4926  0011EC  6F6A               	movwf	_vfpfcnvrt$1720& (0+255),b
  4927  0011EE  6B6B               	clrf	(_vfpfcnvrt$1720+1)& (0+255),b
  4928  0011F0                     
  4929                           ; BSR set to: 0
  4930  0011F0  516A               	movf	_vfpfcnvrt$1720& (0+255),w,b
  4931  0011F2  116B               	iorwf	(_vfpfcnvrt$1720+1)& (0+255),w,b
  4932  0011F4  A4D8               	btfss	status,2,c
  4933  0011F6  EFFF  F008         	goto	u4241
  4934  0011FA  EF01  F009         	goto	u4240
  4935  0011FE                     u4241:
  4936  0011FE  EFCD  F008         	goto	l4075
  4937  001202                     u4240:
  4938  001202                     l4083:
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4942  001202  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4943  001206  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4944  00120A  CFDE FFF6          	movff	postinc2,tblptrl
  4945  00120E  CFDD FFF7          	movff	postdec2,tblptrh
  4946  001212                     	if	0	;tblptru may be non-zero
  4947  001212                     	endif
  4948  001212                     	if	0	;tblptru may be non-zero
  4949  001212                     	endif
  4950  001212  0008               	tblrd		*
  4951  001214  50F5               	movf	tablat,w,c
  4952  001216  0A64               	xorlw	100
  4953  001218  B4D8               	btfsc	status,2,c
  4954  00121A  EF11  F009         	goto	u4251
  4955  00121E  EF13  F009         	goto	u4250
  4956  001222                     u4251:
  4957  001222  EF25  F009         	goto	l4087
  4958  001226                     u4250:
  4959  001226                     
  4960                           ; BSR set to: 0
  4961  001226  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4962  00122A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4963  00122E  CFDE FFF6          	movff	postinc2,tblptrl
  4964  001232  CFDD FFF7          	movff	postdec2,tblptrh
  4965  001236                     	if	0	;tblptru may be non-zero
  4966  001236                     	endif
  4967  001236                     	if	0	;tblptru may be non-zero
  4968  001236                     	endif
  4969  001236  0008               	tblrd		*
  4970  001238  50F5               	movf	tablat,w,c
  4971  00123A  0A69               	xorlw	105
  4972  00123C  A4D8               	btfss	status,2,c
  4973  00123E  EF23  F009         	goto	u4261
  4974  001242  EF25  F009         	goto	u4260
  4975  001246                     u4261:
  4976  001246  EF65  F009         	goto	l4093
  4977  00124A                     u4260:
  4978  00124A                     l4087:
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4982  00124A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4983  00124E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4984  001252  2ADE               	incf	postinc2,f,c
  4985  001254  0E00               	movlw	0
  4986  001256  22DD               	addwfc	postdec2,f,c
  4987                           
  4988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4989  001258  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4990  00125C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4991  001260  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4992  001264  0E02               	movlw	2
  4993  001266  26DE               	addwf	postinc2,f,c
  4994  001268  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4995  00126C  0E00               	movlw	0
  4996  00126E  22DD               	addwfc	postdec2,f,c
  4997  001270  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4998  001274  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4999  001278  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  5000  00127C  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  5001  001280  0E00               	movlw	0
  5002  001282  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5003  001284  0EFF               	movlw	-1
  5004  001286  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5005  001288  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5006  00128A  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5007  00128C  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5008  00128E  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5009  001290  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5010  001292                     
  5011                           ; BSR set to: 0
  5012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5013  001292  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  5014  001296  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5015  00129A  C060  F021         	movff	vfpfcnvrt@ll,dtoa@d
  5016  00129E  C061  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5017  0012A2  C062  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5018  0012A6  C063  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5019  0012AA  C064  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5020  0012AE  C065  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5021  0012B2  C066  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5022  0012B6  C067  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5023  0012BA  ECB7  F009         	call	_dtoa	;wreg free
  5024  0012BE  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  5025  0012C2  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5026  0012C6  EFB6  F009         	goto	l1061
  5027  0012CA                     l4093:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5031  0012CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5032  0012CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5033  0012D2  CFDE FFF6          	movff	postinc2,tblptrl
  5034  0012D6  CFDD FFF7          	movff	postdec2,tblptrh
  5035  0012DA                     	if	0	;tblptru may be non-zero
  5036  0012DA                     	endif
  5037  0012DA                     	if	0	;tblptru may be non-zero
  5038  0012DA                     	endif
  5039  0012DA  0008               	tblrd		*
  5040  0012DC  50F5               	movf	tablat,w,c
  5041  0012DE  0A25               	xorlw	37
  5042  0012E0  A4D8               	btfss	status,2,c
  5043  0012E2  EF75  F009         	goto	u4271
  5044  0012E6  EF77  F009         	goto	u4270
  5045  0012EA                     u4271:
  5046  0012EA  EF8E  F009         	goto	l4103
  5047  0012EE                     u4270:
  5048  0012EE                     
  5049                           ; BSR set to: 0
  5050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5051  0012EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5052  0012F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5053  0012F6  2ADE               	incf	postinc2,f,c
  5054  0012F8  0E00               	movlw	0
  5055  0012FA  22DD               	addwfc	postdec2,f,c
  5056  0012FC                     
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5059  0012FC  0E00               	movlw	0
  5060  0012FE  6E05               	movwf	(fputc@c+1)^0,c
  5061  001300  0E25               	movlw	37
  5062  001302  6E04               	movwf	fputc@c^0,c
  5063  001304  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5064  001308  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5065  00130C  EC64  F014         	call	_fputc	;wreg free
  5066  001310                     l4099:
  5067                           
  5068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5069  001310  0E00               	movlw	0
  5070  001312  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5071  001314  0E01               	movlw	1
  5072  001316  6E43               	movwf	?_vfpfcnvrt^0,c
  5073  001318  EFB6  F009         	goto	l1061
  5074  00131C                     l4103:
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5078  00131C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5079  001320  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5080  001324  2ADE               	incf	postinc2,f,c
  5081  001326  0E00               	movlw	0
  5082  001328  22DD               	addwfc	postdec2,f,c
  5083  00132A                     
  5084                           ; BSR set to: 0
  5085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5086  00132A  0E00               	movlw	0
  5087  00132C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5088  00132E  0E00               	movlw	0
  5089  001330  6E43               	movwf	?_vfpfcnvrt^0,c
  5090  001332  EFB6  F009         	goto	l1061
  5091  001336                     l4109:
  5092                           
  5093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5094  001336  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5095  00133A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5096  00133E  CFDE FFF6          	movff	postinc2,tblptrl
  5097  001342  CFDD FFF7          	movff	postdec2,tblptrh
  5098  001346                     	if	0	;tblptru may be non-zero
  5099  001346                     	endif
  5100  001346                     	if	0	;tblptru may be non-zero
  5101  001346                     	endif
  5102  001346  0008               	tblrd		*
  5103  001348  50F5               	movf	tablat,w,c
  5104  00134A  6E04               	movwf	fputc@c^0,c
  5105  00134C  6A05               	clrf	(fputc@c+1)^0,c
  5106  00134E  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5107  001352  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5108  001356  EC64  F014         	call	_fputc	;wreg free
  5109  00135A                     
  5110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5111  00135A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5112  00135E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5113  001362  2ADE               	incf	postinc2,f,c
  5114  001364  0E00               	movlw	0
  5115  001366  22DD               	addwfc	postdec2,f,c
  5116  001368  EF88  F009         	goto	l4099
  5117  00136C                     l1061:
  5118  00136C  0012               	return		;funcret
  5119  00136E                     __end_of_vfpfcnvrt:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _dtoa *****************
  5123 ;; Defined at:
  5124 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5127 ;;		 -> sprintf@f(6), 
  5128 ;;  d               8   32[COMRAM] long long 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  n               8   56[COMRAM] long long 
  5131 ;;  i               2   64[COMRAM] int 
  5132 ;;  s               2   54[COMRAM] int 
  5133 ;;  w               2   52[COMRAM] int 
  5134 ;;  p               2   50[COMRAM] int 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  2   30[COMRAM] int 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5144 ;;      Params:        10       0       0       0       0       0       0       0       0
  5145 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5146 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5147 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5148 ;;Total ram usage:       36 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    6
  5151 ;; This function calls:
  5152 ;;		___aodiv
  5153 ;;		___aomod
  5154 ;;		_abs
  5155 ;;		_pad
  5156 ;; This function is called by:
  5157 ;;		_vfpfcnvrt
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text23
  5162  00136E                     __ptext23:
  5163                           	callstack 0
  5164  00136E                     _dtoa:
  5165                           	callstack 19
  5166  00136E                     
  5167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5168  00136E  C021  F039         	movff	dtoa@d,dtoa@n
  5169  001372  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  5170  001376  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  5171  00137A  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  5172  00137E  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  5173  001382  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  5174  001386  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  5175  00138A  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  5176  00138E                     
  5177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5178  00138E  BE40               	btfsc	(dtoa@n+7)^0,7,c
  5179  001390  EFCC  F009         	goto	u3951
  5180  001394  EFCF  F009         	goto	u3950
  5181  001398                     u3951:
  5182  001398  0E01               	movlw	1
  5183  00139A  EFD0  F009         	goto	u3960
  5184  00139E                     u3950:
  5185  00139E  0E00               	movlw	0
  5186  0013A0                     u3960:
  5187  0013A0  6E37               	movwf	dtoa@s^0,c
  5188  0013A2  6A38               	clrf	(dtoa@s+1)^0,c
  5189                           
  5190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5191  0013A4  5037               	movf	dtoa@s^0,w,c
  5192  0013A6  1038               	iorwf	(dtoa@s+1)^0,w,c
  5193  0013A8  B4D8               	btfsc	status,2,c
  5194  0013AA  EFD9  F009         	goto	u3971
  5195  0013AE  EFDB  F009         	goto	u3970
  5196  0013B2                     u3971:
  5197  0013B2  EFEB  F009         	goto	l3927
  5198  0013B6                     u3970:
  5199  0013B6                     
  5200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5201  0013B6  1E40               	comf	(dtoa@n+7)^0,f,c
  5202  0013B8  1E3F               	comf	(dtoa@n+6)^0,f,c
  5203  0013BA  1E3E               	comf	(dtoa@n+5)^0,f,c
  5204  0013BC  1E3D               	comf	(dtoa@n+4)^0,f,c
  5205  0013BE  1E3C               	comf	(dtoa@n+3)^0,f,c
  5206  0013C0  1E3B               	comf	(dtoa@n+2)^0,f,c
  5207  0013C2  1E3A               	comf	(dtoa@n+1)^0,f,c
  5208  0013C4  6C39               	negf	dtoa@n^0,c
  5209  0013C6  0E00               	movlw	0
  5210  0013C8  223A               	addwfc	(dtoa@n+1)^0,f,c
  5211  0013CA  223B               	addwfc	(dtoa@n+2)^0,f,c
  5212  0013CC  223C               	addwfc	(dtoa@n+3)^0,f,c
  5213  0013CE  223D               	addwfc	(dtoa@n+4)^0,f,c
  5214  0013D0  223E               	addwfc	(dtoa@n+5)^0,f,c
  5215  0013D2  223F               	addwfc	(dtoa@n+6)^0,f,c
  5216  0013D4  2240               	addwfc	(dtoa@n+7)^0,f,c
  5217  0013D6                     l3927:
  5218                           
  5219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5220  0013D6  BE59               	btfsc	(_prec+1)^0,7,c
  5221  0013D8  EFF0  F009         	goto	u3981
  5222  0013DC  EFF2  F009         	goto	u3980
  5223  0013E0                     u3981:
  5224  0013E0  EFF3  F009         	goto	l3931
  5225  0013E4                     u3980:
  5226  0013E4                     
  5227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5228  0013E4  925A               	bcf	_flags^0,1,c
  5229  0013E6                     l3931:
  5230                           
  5231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5232  0013E6  BE59               	btfsc	(_prec+1)^0,7,c
  5233  0013E8  EF00  F00A         	goto	u3990
  5234  0013EC  5059               	movf	(_prec+1)^0,w,c
  5235  0013EE  E106               	bnz	u3991
  5236  0013F0  0458               	decf	_prec^0,w,c
  5237  0013F2  B0D8               	btfsc	status,0,c
  5238  0013F4  EFFE  F009         	goto	u3991
  5239  0013F8  EF00  F00A         	goto	u3990
  5240  0013FC                     u3991:
  5241  0013FC  EF06  F00A         	goto	l1012
  5242  001400                     u3990:
  5243  001400  0E00               	movlw	0
  5244  001402  6E34               	movwf	(dtoa@p+1)^0,c
  5245  001404  0E01               	movlw	1
  5246  001406  6E33               	movwf	dtoa@p^0,c
  5247  001408  EF0A  F00A         	goto	l1014
  5248  00140C                     l1012:
  5249  00140C  C058  F033         	movff	_prec,dtoa@p
  5250  001410  C059  F034         	movff	_prec+1,dtoa@p+1
  5251  001414                     l1014:
  5252                           
  5253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5254  001414  C096  F035         	movff	_width,dtoa@w
  5255  001418  C097  F036         	movff	_width+1,dtoa@w+1
  5256  00141C                     
  5257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5258  00141C  5037               	movf	dtoa@s^0,w,c
  5259  00141E  1038               	iorwf	(dtoa@s+1)^0,w,c
  5260  001420  A4D8               	btfss	status,2,c
  5261  001422  EF15  F00A         	goto	u4001
  5262  001426  EF17  F00A         	goto	u4000
  5263  00142A                     u4001:
  5264  00142A  EF1E  F00A         	goto	l3939
  5265  00142E                     u4000:
  5266  00142E  A45A               	btfss	_flags^0,2,c
  5267  001430  EF1C  F00A         	goto	u4011
  5268  001434  EF1E  F00A         	goto	u4010
  5269  001438                     u4011:
  5270  001438  EF21  F00A         	goto	l3941
  5271  00143C                     u4010:
  5272  00143C                     l3939:
  5273                           
  5274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5275  00143C  0635               	decf	dtoa@w^0,f,c
  5276  00143E  A0D8               	btfss	status,0,c
  5277  001440  0636               	decf	(dtoa@w+1)^0,f,c
  5278  001442                     l3941:
  5279                           
  5280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5281  001442  0E00               	movlw	0
  5282  001444  6E42               	movwf	(dtoa@i+1)^0,c
  5283  001446  0E1F               	movlw	31
  5284  001448  6E41               	movwf	dtoa@i^0,c
  5285  00144A                     
  5286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5287  00144A  0E00               	movlw	0
  5288  00144C  0100               	movlb	0	; () banked
  5289  00144E  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5290                           
  5291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5292  001450  EFA6  F00A         	goto	l3955
  5293  001454                     l3945:
  5294                           
  5295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5296  001454  0641               	decf	dtoa@i^0,f,c
  5297  001456  A0D8               	btfss	status,0,c
  5298  001458  0642               	decf	(dtoa@i+1)^0,f,c
  5299  00145A                     
  5300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5301  00145A  0E98               	movlw	low _dbuf
  5302  00145C  2441               	addwf	dtoa@i^0,w,c
  5303  00145E  6ED9               	movwf	fsr2l,c
  5304  001460  0E00               	movlw	high _dbuf
  5305  001462  2042               	addwfc	(dtoa@i+1)^0,w,c
  5306  001464  6EDA               	movwf	fsr2h,c
  5307  001466  C039  F004         	movff	dtoa@n,___aomod@dividend
  5308  00146A  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  5309  00146E  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  5310  001472  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  5311  001476  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  5312  00147A  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  5313  00147E  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  5314  001482  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  5315  001486  0E0A               	movlw	10
  5316  001488  6E0C               	movwf	___aomod@divisor^0,c
  5317  00148A  0E00               	movlw	0
  5318  00148C  6E0D               	movwf	(___aomod@divisor+1)^0,c
  5319  00148E  0E00               	movlw	0
  5320  001490  6E0E               	movwf	(___aomod@divisor+2)^0,c
  5321  001492  0E00               	movlw	0
  5322  001494  6E0F               	movwf	(___aomod@divisor+3)^0,c
  5323  001496  0E00               	movlw	0
  5324  001498  6E10               	movwf	(___aomod@divisor+4)^0,c
  5325  00149A  0E00               	movlw	0
  5326  00149C  6E11               	movwf	(___aomod@divisor+5)^0,c
  5327  00149E  0E00               	movlw	0
  5328  0014A0  6E12               	movwf	(___aomod@divisor+6)^0,c
  5329  0014A2  0E00               	movlw	0
  5330  0014A4  6E13               	movwf	(___aomod@divisor+7)^0,c
  5331  0014A6  ECEB  F010         	call	___aomod	;wreg free
  5332  0014AA  C004  F029         	movff	?___aomod,??_dtoa
  5333  0014AE  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  5334  0014B2  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  5335  0014B6  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  5336  0014BA  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  5337  0014BE  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  5338  0014C2  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  5339  0014C6  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  5340  0014CA  C029  F016         	movff	??_dtoa,abs@a
  5341  0014CE  C02B  F017         	movff	??_dtoa+2,abs@a+1
  5342  0014D2  EC6A  F017         	call	_abs	;wreg free
  5343  0014D6  5016               	movf	?_abs^0,w,c
  5344  0014D8  0F30               	addlw	48
  5345  0014DA  6EDF               	movwf	indf2,c
  5346  0014DC                     
  5347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5348  0014DC  0633               	decf	dtoa@p^0,f,c
  5349  0014DE  A0D8               	btfss	status,0,c
  5350  0014E0  0634               	decf	(dtoa@p+1)^0,f,c
  5351  0014E2                     
  5352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5353  0014E2  0635               	decf	dtoa@w^0,f,c
  5354  0014E4  A0D8               	btfss	status,0,c
  5355  0014E6  0636               	decf	(dtoa@w+1)^0,f,c
  5356  0014E8                     
  5357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5358  0014E8  C039  F004         	movff	dtoa@n,___aodiv@dividend
  5359  0014EC  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  5360  0014F0  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  5361  0014F4  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  5362  0014F8  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  5363  0014FC  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  5364  001500  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  5365  001504  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  5366  001508  0E0A               	movlw	10
  5367  00150A  6E0C               	movwf	___aodiv@divisor^0,c
  5368  00150C  0E00               	movlw	0
  5369  00150E  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  5370  001510  0E00               	movlw	0
  5371  001512  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  5372  001514  0E00               	movlw	0
  5373  001516  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  5374  001518  0E00               	movlw	0
  5375  00151A  6E10               	movwf	(___aodiv@divisor+4)^0,c
  5376  00151C  0E00               	movlw	0
  5377  00151E  6E11               	movwf	(___aodiv@divisor+5)^0,c
  5378  001520  0E00               	movlw	0
  5379  001522  6E12               	movwf	(___aodiv@divisor+6)^0,c
  5380  001524  0E00               	movlw	0
  5381  001526  6E13               	movwf	(___aodiv@divisor+7)^0,c
  5382  001528  ECB1  F00E         	call	___aodiv	;wreg free
  5383  00152C  C004  F039         	movff	?___aodiv,dtoa@n
  5384  001530  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  5385  001534  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  5386  001538  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  5387  00153C  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  5388  001540  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  5389  001544  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  5390  001548  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  5391  00154C                     l3955:
  5392                           
  5393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5394  00154C  BE42               	btfsc	(dtoa@i+1)^0,7,c
  5395  00154E  EFB1  F00A         	goto	u4021
  5396  001552  5042               	movf	(dtoa@i+1)^0,w,c
  5397  001554  E108               	bnz	u4020
  5398  001556  0441               	decf	dtoa@i^0,w,c
  5399  001558  A0D8               	btfss	status,0,c
  5400  00155A  EFB1  F00A         	goto	u4021
  5401  00155E  EFB3  F00A         	goto	u4020
  5402  001562                     u4021:
  5403  001562  EFE3  F00A         	goto	l3965
  5404  001566                     u4020:
  5405  001566  5039               	movf	dtoa@n^0,w,c
  5406  001568  103A               	iorwf	(dtoa@n+1)^0,w,c
  5407  00156A  103B               	iorwf	(dtoa@n+2)^0,w,c
  5408  00156C  103C               	iorwf	(dtoa@n+3)^0,w,c
  5409  00156E  103D               	iorwf	(dtoa@n+4)^0,w,c
  5410  001570  103E               	iorwf	(dtoa@n+5)^0,w,c
  5411  001572  103F               	iorwf	(dtoa@n+6)^0,w,c
  5412  001574  1040               	iorwf	(dtoa@n+7)^0,w,c
  5413  001576  A4D8               	btfss	status,2,c
  5414  001578  EFC0  F00A         	goto	u4031
  5415  00157C  EFC2  F00A         	goto	u4030
  5416  001580                     u4031:
  5417  001580  EF2A  F00A         	goto	l3945
  5418  001584                     u4030:
  5419  001584  BE34               	btfsc	(dtoa@p+1)^0,7,c
  5420  001586  EFCF  F00A         	goto	u4040
  5421  00158A  5034               	movf	(dtoa@p+1)^0,w,c
  5422  00158C  E106               	bnz	u4041
  5423  00158E  0433               	decf	dtoa@p^0,w,c
  5424  001590  B0D8               	btfsc	status,0,c
  5425  001592  EFCD  F00A         	goto	u4041
  5426  001596  EFCF  F00A         	goto	u4040
  5427  00159A                     u4041:
  5428  00159A  EF2A  F00A         	goto	l3945
  5429  00159E                     u4040:
  5430  00159E  BE36               	btfsc	(dtoa@w+1)^0,7,c
  5431  0015A0  EFDA  F00A         	goto	u4051
  5432  0015A4  5036               	movf	(dtoa@w+1)^0,w,c
  5433  0015A6  E108               	bnz	u4050
  5434  0015A8  0435               	decf	dtoa@w^0,w,c
  5435  0015AA  A0D8               	btfss	status,0,c
  5436  0015AC  EFDA  F00A         	goto	u4051
  5437  0015B0  EFDC  F00A         	goto	u4050
  5438  0015B4                     u4051:
  5439  0015B4  EFE3  F00A         	goto	l3965
  5440  0015B8                     u4050:
  5441  0015B8  B25A               	btfsc	_flags^0,1,c
  5442  0015BA  EFE1  F00A         	goto	u4061
  5443  0015BE  EFE3  F00A         	goto	u4060
  5444  0015C2                     u4061:
  5445  0015C2  EF2A  F00A         	goto	l3945
  5446  0015C6                     u4060:
  5447  0015C6                     l3965:
  5448                           
  5449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5450  0015C6  5037               	movf	dtoa@s^0,w,c
  5451  0015C8  1038               	iorwf	(dtoa@s+1)^0,w,c
  5452  0015CA  A4D8               	btfss	status,2,c
  5453  0015CC  EFEA  F00A         	goto	u4071
  5454  0015D0  EFEC  F00A         	goto	u4070
  5455  0015D4                     u4071:
  5456  0015D4  EFF3  F00A         	goto	l3969
  5457  0015D8                     u4070:
  5458  0015D8  A45A               	btfss	_flags^0,2,c
  5459  0015DA  EFF1  F00A         	goto	u4081
  5460  0015DE  EFF3  F00A         	goto	u4080
  5461  0015E2                     u4081:
  5462  0015E2  EF11  F00B         	goto	l3979
  5463  0015E6                     u4080:
  5464  0015E6                     l3969:
  5465                           
  5466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5467  0015E6  0641               	decf	dtoa@i^0,f,c
  5468  0015E8  A0D8               	btfss	status,0,c
  5469  0015EA  0642               	decf	(dtoa@i+1)^0,f,c
  5470  0015EC                     
  5471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5472  0015EC  5037               	movf	dtoa@s^0,w,c
  5473  0015EE  1038               	iorwf	(dtoa@s+1)^0,w,c
  5474  0015F0  A4D8               	btfss	status,2,c
  5475  0015F2  EFFD  F00A         	goto	u4091
  5476  0015F6  EFFF  F00A         	goto	u4090
  5477  0015FA                     u4091:
  5478  0015FA  EF05  F00B         	goto	l3975
  5479  0015FE                     u4090:
  5480  0015FE  0E00               	movlw	0
  5481  001600  6E32               	movwf	(_dtoa$1705+1)^0,c
  5482  001602  0E2B               	movlw	43
  5483  001604  6E31               	movwf	_dtoa$1705^0,c
  5484  001606  EF09  F00B         	goto	l3977
  5485  00160A                     l3975:
  5486  00160A  0E00               	movlw	0
  5487  00160C  6E32               	movwf	(_dtoa$1705+1)^0,c
  5488  00160E  0E2D               	movlw	45
  5489  001610  6E31               	movwf	_dtoa$1705^0,c
  5490  001612                     l3977:
  5491  001612  0E98               	movlw	low _dbuf
  5492  001614  2441               	addwf	dtoa@i^0,w,c
  5493  001616  6ED9               	movwf	fsr2l,c
  5494  001618  0E00               	movlw	high _dbuf
  5495  00161A  2042               	addwfc	(dtoa@i+1)^0,w,c
  5496  00161C  6EDA               	movwf	fsr2h,c
  5497  00161E  C031  FFDF         	movff	_dtoa$1705,indf2
  5498  001622                     l3979:
  5499                           
  5500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5501  001622  C01F  F014         	movff	dtoa@fp,pad@fp
  5502  001626  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  5503  00162A  0E98               	movlw	low _dbuf
  5504  00162C  2441               	addwf	dtoa@i^0,w,c
  5505  00162E  6E16               	movwf	pad@buf^0,c
  5506  001630  0E00               	movlw	high _dbuf
  5507  001632  2042               	addwfc	(dtoa@i+1)^0,w,c
  5508  001634  6E17               	movwf	(pad@buf+1)^0,c
  5509  001636  C035  F018         	movff	dtoa@w,pad@p
  5510  00163A  C036  F019         	movff	dtoa@w+1,pad@p+1
  5511  00163E  ECC9  F014         	call	_pad	;wreg free
  5512  001642  C014  F01F         	movff	?_pad,?_dtoa
  5513  001646  C015  F020         	movff	?_pad+1,?_dtoa+1
  5514  00164A  0012               	return		;funcret
  5515  00164C                     __end_of_dtoa:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function _pad *****************
  5519 ;; Defined at:
  5520 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  5523 ;;		 -> sprintf@f(6), 
  5524 ;;  buf             2   21[COMRAM] PTR unsigned char 
  5525 ;;		 -> dbuf(32), 
  5526 ;;  p               2   23[COMRAM] int 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  w               2   28[COMRAM] int 
  5529 ;;  i               2   26[COMRAM] int 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  2   19[COMRAM] int 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5539 ;;      Params:         6       0       0       0       0       0       0       0       0
  5540 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5541 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5542 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5543 ;;Total ram usage:       11 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    5
  5546 ;; This function calls:
  5547 ;;		_fputc
  5548 ;;		_fputs
  5549 ;;		_strlen
  5550 ;; This function is called by:
  5551 ;;		_dtoa
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text24
  5556  002992                     __ptext24:
  5557                           	callstack 0
  5558  002992                     _pad:
  5559                           	callstack 19
  5560  002992                     
  5561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5562  002992  A05A               	btfss	_flags^0,0,c
  5563  002994  EFCE  F014         	goto	u3861
  5564  002998  EFD0  F014         	goto	u3860
  5565  00299C                     u3861:
  5566  00299C  EFDA  F014         	goto	l3883
  5567  0029A0                     u3860:
  5568  0029A0                     
  5569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5570  0029A0  C016  F00D         	movff	pad@buf,fputs@s
  5571  0029A4  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5572  0029A8  C014  F00F         	movff	pad@fp,fputs@fp
  5573  0029AC  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5574  0029B0  EC27  F017         	call	_fputs	;wreg free
  5575  0029B4                     l3883:
  5576                           
  5577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5578  0029B4  BE19               	btfsc	(pad@p+1)^0,7,c
  5579  0029B6  EFDF  F014         	goto	u3871
  5580  0029BA  EFE1  F014         	goto	u3870
  5581  0029BE                     u3871:
  5582  0029BE  EFE7  F014         	goto	l3887
  5583  0029C2                     u3870:
  5584  0029C2  C018  F01D         	movff	pad@p,pad@w
  5585  0029C6  C019  F01E         	movff	pad@p+1,pad@w+1
  5586  0029CA  EFEB  F014         	goto	l1001
  5587  0029CE                     l3887:
  5588  0029CE  0E00               	movlw	0
  5589  0029D0  6E1E               	movwf	(pad@w+1)^0,c
  5590  0029D2  0E00               	movlw	0
  5591  0029D4  6E1D               	movwf	pad@w^0,c
  5592  0029D6                     l1001:
  5593                           
  5594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5595  0029D6  0E00               	movlw	0
  5596  0029D8  6E1C               	movwf	(pad@i+1)^0,c
  5597  0029DA  0E00               	movlw	0
  5598  0029DC  6E1B               	movwf	pad@i^0,c
  5599                           
  5600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5601  0029DE  EFFD  F014         	goto	l3893
  5602  0029E2                     l3889:
  5603                           
  5604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5605  0029E2  0E00               	movlw	0
  5606  0029E4  6E05               	movwf	(fputc@c+1)^0,c
  5607  0029E6  0E20               	movlw	32
  5608  0029E8  6E04               	movwf	fputc@c^0,c
  5609  0029EA  C014  F006         	movff	pad@fp,fputc@fp
  5610  0029EE  C015  F007         	movff	pad@fp+1,fputc@fp+1
  5611  0029F2  EC64  F014         	call	_fputc	;wreg free
  5612  0029F6                     
  5613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5614  0029F6  4A1B               	infsnz	pad@i^0,f,c
  5615  0029F8  2A1C               	incf	(pad@i+1)^0,f,c
  5616  0029FA                     l3893:
  5617                           
  5618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5619  0029FA  501D               	movf	pad@w^0,w,c
  5620  0029FC  5C1B               	subwf	pad@i^0,w,c
  5621  0029FE  501C               	movf	(pad@i+1)^0,w,c
  5622  002A00  0A80               	xorlw	128
  5623  002A02  6E1A               	movwf	??_pad^0,c
  5624  002A04  501E               	movf	(pad@w+1)^0,w,c
  5625  002A06  0A80               	xorlw	128
  5626  002A08  581A               	subwfb	??_pad^0,w,c
  5627  002A0A  A0D8               	btfss	status,0,c
  5628  002A0C  EF0A  F015         	goto	u3881
  5629  002A10  EF0C  F015         	goto	u3880
  5630  002A14                     u3881:
  5631  002A14  EFF1  F014         	goto	l3889
  5632  002A18                     u3880:
  5633  002A18                     
  5634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5635  002A18  B05A               	btfsc	_flags^0,0,c
  5636  002A1A  EF11  F015         	goto	u3891
  5637  002A1E  EF13  F015         	goto	u3890
  5638  002A22                     u3891:
  5639  002A22  EF1D  F015         	goto	l3897
  5640  002A26                     u3890:
  5641  002A26                     
  5642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5643  002A26  C016  F00D         	movff	pad@buf,fputs@s
  5644  002A2A  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5645  002A2E  C014  F00F         	movff	pad@fp,fputs@fp
  5646  002A32  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5647  002A36  EC27  F017         	call	_fputs	;wreg free
  5648  002A3A                     l3897:
  5649                           
  5650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5651  002A3A  C016  F004         	movff	pad@buf,strlen@s
  5652  002A3E  C017  F005         	movff	pad@buf+1,strlen@s+1
  5653  002A42  ECDF  F017         	call	_strlen	;wreg free
  5654  002A46  501D               	movf	pad@w^0,w,c
  5655  002A48  2404               	addwf	?_strlen^0,w,c
  5656  002A4A  6E14               	movwf	?_pad^0,c
  5657  002A4C  501E               	movf	(pad@w+1)^0,w,c
  5658  002A4E  2005               	addwfc	(?_strlen+1)^0,w,c
  5659  002A50  6E15               	movwf	(?_pad+1)^0,c
  5660  002A52  0012               	return		;funcret
  5661  002A54                     __end_of_pad:
  5662                           	callstack 0
  5663                           
  5664 ;; *************** function _strlen *****************
  5665 ;; Defined at:
  5666 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  s               2    3[COMRAM] PTR const unsigned char 
  5669 ;;		 -> dbuf(32), 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  a               2    5[COMRAM] PTR const unsigned char 
  5672 ;;		 -> dbuf(32), 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  2    3[COMRAM] unsigned int 
  5675 ;; Registers used:
  5676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5682 ;;      Params:         2       0       0       0       0       0       0       0       0
  5683 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5685 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5686 ;;Total ram usage:        4 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    2
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_pad
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text25
  5697  002FBE                     __ptext25:
  5698                           	callstack 0
  5699  002FBE                     _strlen:
  5700                           	callstack 21
  5701  002FBE  C004  F006         	movff	strlen@s,strlen@a
  5702  002FC2  C005  F007         	movff	strlen@s+1,strlen@a+1
  5703  002FC6  EFE7  F017         	goto	l3787
  5704  002FCA                     l3785:
  5705  002FCA  4A04               	infsnz	strlen@s^0,f,c
  5706  002FCC  2A05               	incf	(strlen@s+1)^0,f,c
  5707  002FCE                     l3787:
  5708  002FCE  C004  FFD9         	movff	strlen@s,fsr2l
  5709  002FD2  C005  FFDA         	movff	strlen@s+1,fsr2h
  5710  002FD6  50DF               	movf	indf2,w,c
  5711  002FD8  A4D8               	btfss	status,2,c
  5712  002FDA  EFF1  F017         	goto	u3721
  5713  002FDE  EFF3  F017         	goto	u3720
  5714  002FE2                     u3721:
  5715  002FE2  EFE5  F017         	goto	l3785
  5716  002FE6                     u3720:
  5717  002FE6  5006               	movf	strlen@a^0,w,c
  5718  002FE8  5C04               	subwf	strlen@s^0,w,c
  5719  002FEA  6E04               	movwf	?_strlen^0,c
  5720  002FEC  5007               	movf	(strlen@a+1)^0,w,c
  5721  002FEE  5805               	subwfb	(strlen@s+1)^0,w,c
  5722  002FF0  6E05               	movwf	(?_strlen+1)^0,c
  5723  002FF2  0012               	return		;funcret
  5724  002FF4                     __end_of_strlen:
  5725                           	callstack 0
  5726                           
  5727 ;; *************** function _fputs *****************
  5728 ;; Defined at:
  5729 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  s               2   12[COMRAM] PTR const unsigned char 
  5732 ;;		 -> dbuf(32), 
  5733 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  5734 ;;		 -> sprintf@f(6), 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  i               2   17[COMRAM] int 
  5737 ;;  c               1   16[COMRAM] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  2   12[COMRAM] int 
  5740 ;; Registers used:
  5741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5747 ;;      Params:         4       0       0       0       0       0       0       0       0
  5748 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5750 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5751 ;;Total ram usage:        7 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    4
  5754 ;; This function calls:
  5755 ;;		_fputc
  5756 ;; This function is called by:
  5757 ;;		_pad
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text26
  5762  002E4E                     __ptext26:
  5763                           	callstack 0
  5764  002E4E                     _fputs:
  5765                           	callstack 19
  5766  002E4E  0E00               	movlw	0
  5767  002E50  6E13               	movwf	(fputs@i+1)^0,c
  5768  002E52  0E00               	movlw	0
  5769  002E54  6E12               	movwf	fputs@i^0,c
  5770  002E56  EF38  F017         	goto	l3781
  5771  002E5A                     l3777:
  5772  002E5A  C011  F004         	movff	fputs@c,fputc@c
  5773  002E5E  6A05               	clrf	(fputc@c+1)^0,c
  5774  002E60  C00F  F006         	movff	fputs@fp,fputc@fp
  5775  002E64  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  5776  002E68  EC64  F014         	call	_fputc	;wreg free
  5777  002E6C  4A12               	infsnz	fputs@i^0,f,c
  5778  002E6E  2A13               	incf	(fputs@i+1)^0,f,c
  5779  002E70                     l3781:
  5780  002E70  5012               	movf	fputs@i^0,w,c
  5781  002E72  240D               	addwf	fputs@s^0,w,c
  5782  002E74  6ED9               	movwf	fsr2l,c
  5783  002E76  5013               	movf	(fputs@i+1)^0,w,c
  5784  002E78  200E               	addwfc	(fputs@s+1)^0,w,c
  5785  002E7A  6EDA               	movwf	fsr2h,c
  5786  002E7C  50DF               	movf	indf2,w,c
  5787  002E7E  6E11               	movwf	fputs@c^0,c
  5788  002E80  5011               	movf	fputs@c^0,w,c
  5789  002E82  A4D8               	btfss	status,2,c
  5790  002E84  EF46  F017         	goto	u3711
  5791  002E88  EF48  F017         	goto	u3710
  5792  002E8C                     u3711:
  5793  002E8C  EF2D  F017         	goto	l3777
  5794  002E90                     u3710:
  5795  002E90  0012               	return		;funcret
  5796  002E92                     __end_of_fputs:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function _fputc *****************
  5800 ;; Defined at:
  5801 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  c               2    3[COMRAM] int 
  5804 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  5805 ;;		 -> sprintf@f(6), 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  2    3[COMRAM] int 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5817 ;;      Params:         4       0       0       0       0       0       0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5819 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5820 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5821 ;;Total ram usage:        9 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    3
  5824 ;; This function calls:
  5825 ;;		_putch
  5826 ;; This function is called by:
  5827 ;;		_pad
  5828 ;;		_vfpfcnvrt
  5829 ;;		_fputs
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text27
  5834  0028C8                     __ptext27:
  5835                           	callstack 0
  5836  0028C8                     _fputc:
  5837                           	callstack 22
  5838  0028C8  5006               	movf	fputc@fp^0,w,c
  5839  0028CA  1007               	iorwf	(fputc@fp+1)^0,w,c
  5840  0028CC  B4D8               	btfsc	status,2,c
  5841  0028CE  EF6B  F014         	goto	u3671
  5842  0028D2  EF6D  F014         	goto	u3670
  5843  0028D6                     u3671:
  5844  0028D6  EF76  F014         	goto	l3765
  5845  0028DA                     u3670:
  5846  0028DA  5006               	movf	fputc@fp^0,w,c
  5847  0028DC  1007               	iorwf	(fputc@fp+1)^0,w,c
  5848  0028DE  A4D8               	btfss	status,2,c
  5849  0028E0  EF74  F014         	goto	u3681
  5850  0028E4  EF76  F014         	goto	u3680
  5851  0028E8                     u3681:
  5852  0028E8  EF7B  F014         	goto	l3767
  5853  0028EC                     u3680:
  5854  0028EC                     l3765:
  5855  0028EC  5004               	movf	fputc@c^0,w,c
  5856  0028EE  EC53  F018         	call	_putch
  5857  0028F2  EFC8  F014         	goto	l1132
  5858  0028F6                     l3767:
  5859  0028F6  EE20 F004          	lfsr	2,4
  5860  0028FA  5006               	movf	fputc@fp^0,w,c
  5861  0028FC  26D9               	addwf	fsr2l,f,c
  5862  0028FE  5007               	movf	(fputc@fp+1)^0,w,c
  5863  002900  22DA               	addwfc	fsr2h,f,c
  5864  002902  50DE               	movf	postinc2,w,c
  5865  002904  10DE               	iorwf	postinc2,w,c
  5866  002906  B4D8               	btfsc	status,2,c
  5867  002908  EF88  F014         	goto	u3691
  5868  00290C  EF8A  F014         	goto	u3690
  5869  002910                     u3691:
  5870  002910  EFA5  F014         	goto	l3771
  5871  002914                     u3690:
  5872  002914  EE20 F004          	lfsr	2,4
  5873  002918  5006               	movf	fputc@fp^0,w,c
  5874  00291A  26D9               	addwf	fsr2l,f,c
  5875  00291C  5007               	movf	(fputc@fp+1)^0,w,c
  5876  00291E  22DA               	addwfc	fsr2h,f,c
  5877  002920  EE10 F002          	lfsr	1,2
  5878  002924  5006               	movf	fputc@fp^0,w,c
  5879  002926  26E1               	addwf	fsr1l,f,c
  5880  002928  5007               	movf	(fputc@fp+1)^0,w,c
  5881  00292A  22E2               	addwfc	fsr1h,f,c
  5882  00292C  50DE               	movf	postinc2,w,c
  5883  00292E  5CE6               	subwf	postinc1,w,c
  5884  002930  50E6               	movf	postinc1,w,c
  5885  002932  0A80               	xorlw	128
  5886  002934  6E0C               	movwf	(??_fputc+4)^0,c
  5887  002936  50DE               	movf	postinc2,w,c
  5888  002938  0A80               	xorlw	128
  5889  00293A  580C               	subwfb	(??_fputc+4)^0,w,c
  5890  00293C  B0D8               	btfsc	status,0,c
  5891  00293E  EFA3  F014         	goto	u3701
  5892  002942  EFA5  F014         	goto	u3700
  5893  002946                     u3701:
  5894  002946  EFC8  F014         	goto	l1132
  5895  00294A                     u3700:
  5896  00294A                     l3771:
  5897  00294A  EE20 F002          	lfsr	2,2
  5898  00294E  5006               	movf	fputc@fp^0,w,c
  5899  002950  26D9               	addwf	fsr2l,f,c
  5900  002952  5007               	movf	(fputc@fp+1)^0,w,c
  5901  002954  22DA               	addwfc	fsr2h,f,c
  5902  002956  CFDE F008          	movff	postinc2,??_fputc
  5903  00295A  CFDD F009          	movff	postdec2,??_fputc+1
  5904  00295E  C006  FFD9         	movff	fputc@fp,fsr2l
  5905  002962  C007  FFDA         	movff	fputc@fp+1,fsr2h
  5906  002966  CFDE F00A          	movff	postinc2,??_fputc+2
  5907  00296A  CFDD F00B          	movff	postdec2,??_fputc+3
  5908  00296E  5008               	movf	??_fputc^0,w,c
  5909  002970  240A               	addwf	(??_fputc+2)^0,w,c
  5910  002972  6ED9               	movwf	fsr2l,c
  5911  002974  5009               	movf	(??_fputc+1)^0,w,c
  5912  002976  200B               	addwfc	(??_fputc+3)^0,w,c
  5913  002978  6EDA               	movwf	fsr2h,c
  5914  00297A  C004  FFDF         	movff	fputc@c,indf2
  5915  00297E  EE20 F002          	lfsr	2,2
  5916  002982  5006               	movf	fputc@fp^0,w,c
  5917  002984  26D9               	addwf	fsr2l,f,c
  5918  002986  5007               	movf	(fputc@fp+1)^0,w,c
  5919  002988  22DA               	addwfc	fsr2h,f,c
  5920  00298A  2ADE               	incf	postinc2,f,c
  5921  00298C  0E00               	movlw	0
  5922  00298E  22DD               	addwfc	postdec2,f,c
  5923  002990                     l1132:
  5924  002990  0012               	return		;funcret
  5925  002992                     __end_of_fputc:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _putch *****************
  5929 ;; Defined at:
  5930 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  c               1    wreg     unsigned char 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  c               1    0[COMRAM] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5944 ;;      Params:         0       0       0       0       0       0       0       0       0
  5945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5947 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5948 ;;Total ram usage:        0 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    2
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_fputc
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text28
  5959  0030A6                     __ptext28:
  5960                           	callstack 0
  5961  0030A6                     _putch:
  5962                           	callstack 22
  5963  0030A6  0012               	return		;funcret
  5964  0030A8                     __end_of_putch:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _abs *****************
  5968 ;; Defined at:
  5969 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  a               2   21[COMRAM] int 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  2   21[COMRAM] int 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5983 ;;      Params:         2       0       0       0       0       0       0       0       0
  5984 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5985 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5986 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5987 ;;Total ram usage:        4 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    2
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_dtoa
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text29
  5998  002ED4                     __ptext29:
  5999                           	callstack 0
  6000  002ED4                     _abs:
  6001                           	callstack 22
  6002  002ED4  BE17               	btfsc	(abs@a+1)^0,7,c
  6003  002ED6  EF77  F017         	goto	u3900
  6004  002EDA  5017               	movf	(abs@a+1)^0,w,c
  6005  002EDC  E106               	bnz	u3901
  6006  002EDE  0416               	decf	abs@a^0,w,c
  6007  002EE0  B0D8               	btfsc	status,0,c
  6008  002EE2  EF75  F017         	goto	u3901
  6009  002EE6  EF77  F017         	goto	u3900
  6010  002EEA                     u3901:
  6011  002EEA  EF85  F017         	goto	l1072
  6012  002EEE                     u3900:
  6013  002EEE  C016  F018         	movff	abs@a,??_abs
  6014  002EF2  C017  F019         	movff	abs@a+1,??_abs+1
  6015  002EF6  1E18               	comf	??_abs^0,f,c
  6016  002EF8  1E19               	comf	(??_abs+1)^0,f,c
  6017  002EFA  4A18               	infsnz	??_abs^0,f,c
  6018  002EFC  2A19               	incf	(??_abs+1)^0,f,c
  6019  002EFE  C018  F016         	movff	??_abs,?_abs
  6020  002F02  C019  F017         	movff	??_abs+1,?_abs+1
  6021  002F06  EF89  F017         	goto	l1075
  6022  002F0A                     l1072:
  6023  002F0A  C016  F016         	movff	abs@a,?_abs
  6024  002F0E  C017  F017         	movff	abs@a+1,?_abs+1
  6025  002F12                     l1075:
  6026  002F12  0012               	return		;funcret
  6027  002F14                     __end_of_abs:
  6028                           	callstack 0
  6029                           
  6030 ;; *************** function ___aomod *****************
  6031 ;; Defined at:
  6032 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  dividend        8    3[COMRAM] long long 
  6035 ;;  divisor         8   11[COMRAM] long long 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  sign            1   20[COMRAM] unsigned char 
  6038 ;;  counter         1   19[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  8    3[COMRAM] long long 
  6041 ;; Registers used:
  6042 ;;		wreg, status,2, status,0
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6048 ;;      Params:        16       0       0       0       0       0       0       0       0
  6049 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6051 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6052 ;;Total ram usage:       18 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    2
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_dtoa
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text30
  6063  0021D6                     __ptext30:
  6064                           	callstack 0
  6065  0021D6                     ___aomod:
  6066                           	callstack 22
  6067  0021D6  0E00               	movlw	0
  6068  0021D8  6E15               	movwf	___aomod@sign^0,c
  6069  0021DA  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  6070  0021DC  EFF4  F010         	goto	u3800
  6071  0021E0  EFF2  F010         	goto	u3801
  6072  0021E4                     u3801:
  6073  0021E4  EF06  F011         	goto	l3851
  6074  0021E8                     u3800:
  6075  0021E8  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6076  0021EA  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6077  0021EC  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6078  0021EE  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6079  0021F0  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6080  0021F2  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6081  0021F4  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6082  0021F6  6C04               	negf	___aomod@dividend^0,c
  6083  0021F8  0E00               	movlw	0
  6084  0021FA  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6085  0021FC  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6086  0021FE  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6087  002200  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6088  002202  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6089  002204  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6090  002206  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6091  002208  0E01               	movlw	1
  6092  00220A  6E15               	movwf	___aomod@sign^0,c
  6093  00220C                     l3851:
  6094  00220C  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  6095  00220E  EF0D  F011         	goto	u3810
  6096  002212  EF0B  F011         	goto	u3811
  6097  002216                     u3811:
  6098  002216  EF1D  F011         	goto	l3855
  6099  00221A                     u3810:
  6100  00221A  1E13               	comf	(___aomod@divisor+7)^0,f,c
  6101  00221C  1E12               	comf	(___aomod@divisor+6)^0,f,c
  6102  00221E  1E11               	comf	(___aomod@divisor+5)^0,f,c
  6103  002220  1E10               	comf	(___aomod@divisor+4)^0,f,c
  6104  002222  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  6105  002224  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  6106  002226  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  6107  002228  6C0C               	negf	___aomod@divisor^0,c
  6108  00222A  0E00               	movlw	0
  6109  00222C  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  6110  00222E  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  6111  002230  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  6112  002232  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  6113  002234  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  6114  002236  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  6115  002238  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  6116  00223A                     l3855:
  6117  00223A  500C               	movf	___aomod@divisor^0,w,c
  6118  00223C  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  6119  00223E  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  6120  002240  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  6121  002242  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  6122  002244  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  6123  002246  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  6124  002248  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  6125  00224A  B4D8               	btfsc	status,2,c
  6126  00224C  EF2A  F011         	goto	u3821
  6127  002250  EF2C  F011         	goto	u3820
  6128  002254                     u3821:
  6129  002254  EF74  F011         	goto	l3871
  6130  002258                     u3820:
  6131  002258  0E01               	movlw	1
  6132  00225A  6E14               	movwf	___aomod@counter^0,c
  6133  00225C  EF3A  F011         	goto	l3861
  6134  002260                     l3859:
  6135  002260  90D8               	bcf	status,0,c
  6136  002262  360C               	rlcf	___aomod@divisor^0,f,c
  6137  002264  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  6138  002266  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  6139  002268  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  6140  00226A  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  6141  00226C  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  6142  00226E  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  6143  002270  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  6144  002272  2A14               	incf	___aomod@counter^0,f,c
  6145  002274                     l3861:
  6146  002274  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  6147  002276  EF3F  F011         	goto	u3831
  6148  00227A  EF41  F011         	goto	u3830
  6149  00227E                     u3831:
  6150  00227E  EF30  F011         	goto	l3859
  6151  002282                     u3830:
  6152  002282                     l3863:
  6153  002282  500C               	movf	___aomod@divisor^0,w,c
  6154  002284  5C04               	subwf	___aomod@dividend^0,w,c
  6155  002286  500D               	movf	(___aomod@divisor+1)^0,w,c
  6156  002288  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  6157  00228A  500E               	movf	(___aomod@divisor+2)^0,w,c
  6158  00228C  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  6159  00228E  500F               	movf	(___aomod@divisor+3)^0,w,c
  6160  002290  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  6161  002292  5010               	movf	(___aomod@divisor+4)^0,w,c
  6162  002294  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  6163  002296  5011               	movf	(___aomod@divisor+5)^0,w,c
  6164  002298  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  6165  00229A  5012               	movf	(___aomod@divisor+6)^0,w,c
  6166  00229C  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  6167  00229E  5013               	movf	(___aomod@divisor+7)^0,w,c
  6168  0022A0  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  6169  0022A2  A0D8               	btfss	status,0,c
  6170  0022A4  EF56  F011         	goto	u3841
  6171  0022A8  EF58  F011         	goto	u3840
  6172  0022AC                     u3841:
  6173  0022AC  EF68  F011         	goto	l3867
  6174  0022B0                     u3840:
  6175  0022B0  500C               	movf	___aomod@divisor^0,w,c
  6176  0022B2  5E04               	subwf	___aomod@dividend^0,f,c
  6177  0022B4  500D               	movf	(___aomod@divisor+1)^0,w,c
  6178  0022B6  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  6179  0022B8  500E               	movf	(___aomod@divisor+2)^0,w,c
  6180  0022BA  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  6181  0022BC  500F               	movf	(___aomod@divisor+3)^0,w,c
  6182  0022BE  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  6183  0022C0  5010               	movf	(___aomod@divisor+4)^0,w,c
  6184  0022C2  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  6185  0022C4  5011               	movf	(___aomod@divisor+5)^0,w,c
  6186  0022C6  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  6187  0022C8  5012               	movf	(___aomod@divisor+6)^0,w,c
  6188  0022CA  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  6189  0022CC  5013               	movf	(___aomod@divisor+7)^0,w,c
  6190  0022CE  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  6191  0022D0                     l3867:
  6192  0022D0  90D8               	bcf	status,0,c
  6193  0022D2  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  6194  0022D4  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  6195  0022D6  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  6196  0022D8  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  6197  0022DA  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  6198  0022DC  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  6199  0022DE  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  6200  0022E0  320C               	rrcf	___aomod@divisor^0,f,c
  6201  0022E2  2E14               	decfsz	___aomod@counter^0,f,c
  6202  0022E4  EF41  F011         	goto	l3863
  6203  0022E8                     l3871:
  6204  0022E8  5015               	movf	___aomod@sign^0,w,c
  6205  0022EA  B4D8               	btfsc	status,2,c
  6206  0022EC  EF7A  F011         	goto	u3851
  6207  0022F0  EF7C  F011         	goto	u3850
  6208  0022F4                     u3851:
  6209  0022F4  EF8C  F011         	goto	l3875
  6210  0022F8                     u3850:
  6211  0022F8  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6212  0022FA  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6213  0022FC  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6214  0022FE  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6215  002300  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6216  002302  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6217  002304  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6218  002306  6C04               	negf	___aomod@dividend^0,c
  6219  002308  0E00               	movlw	0
  6220  00230A  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6221  00230C  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6222  00230E  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6223  002310  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6224  002312  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6225  002314  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6226  002316  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6227  002318                     l3875:
  6228  002318  C004  F004         	movff	___aomod@dividend,?___aomod
  6229  00231C  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  6230  002320  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  6231  002324  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  6232  002328  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  6233  00232C  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  6234  002330  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  6235  002334  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  6236  002338  0012               	return		;funcret
  6237  00233A                     __end_of___aomod:
  6238                           	callstack 0
  6239                           
  6240 ;; *************** function ___aodiv *****************
  6241 ;; Defined at:
  6242 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  dividend        8    3[COMRAM] long long 
  6245 ;;  divisor         8   11[COMRAM] long long 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  quotient        8   21[COMRAM] long long 
  6248 ;;  sign            1   20[COMRAM] unsigned char 
  6249 ;;  counter         1   19[COMRAM] unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  8    3[COMRAM] long long 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6259 ;;      Params:        16       0       0       0       0       0       0       0       0
  6260 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6262 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6263 ;;Total ram usage:       26 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    2
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		_dtoa
  6270 ;; This function uses a non-reentrant model
  6271 ;;
  6272                           
  6273                           	psect	text31
  6274  001D62                     __ptext31:
  6275                           	callstack 0
  6276  001D62                     ___aodiv:
  6277                           	callstack 22
  6278  001D62  0E00               	movlw	0
  6279  001D64  6E15               	movwf	___aodiv@sign^0,c
  6280  001D66  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  6281  001D68  EFBA  F00E         	goto	u3730
  6282  001D6C  EFB8  F00E         	goto	u3731
  6283  001D70                     u3731:
  6284  001D70  EFCC  F00E         	goto	l3807
  6285  001D74                     u3730:
  6286  001D74  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  6287  001D76  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  6288  001D78  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  6289  001D7A  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  6290  001D7C  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  6291  001D7E  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  6292  001D80  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  6293  001D82  6C0C               	negf	___aodiv@divisor^0,c
  6294  001D84  0E00               	movlw	0
  6295  001D86  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  6296  001D88  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  6297  001D8A  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  6298  001D8C  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  6299  001D8E  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  6300  001D90  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  6301  001D92  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  6302  001D94  0E01               	movlw	1
  6303  001D96  6E15               	movwf	___aodiv@sign^0,c
  6304  001D98                     l3807:
  6305  001D98  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  6306  001D9A  EFD3  F00E         	goto	u3740
  6307  001D9E  EFD1  F00E         	goto	u3741
  6308  001DA2                     u3741:
  6309  001DA2  EFE5  F00E         	goto	l3813
  6310  001DA6                     u3740:
  6311  001DA6  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  6312  001DA8  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  6313  001DAA  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  6314  001DAC  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  6315  001DAE  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  6316  001DB0  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  6317  001DB2  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  6318  001DB4  6C04               	negf	___aodiv@dividend^0,c
  6319  001DB6  0E00               	movlw	0
  6320  001DB8  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  6321  001DBA  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  6322  001DBC  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  6323  001DBE  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  6324  001DC0  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  6325  001DC2  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  6326  001DC4  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  6327  001DC6  0E01               	movlw	1
  6328  001DC8  1A15               	xorwf	___aodiv@sign^0,f,c
  6329  001DCA                     l3813:
  6330  001DCA  EE20  F016         	lfsr	2,___aodiv@quotient
  6331  001DCE  0E07               	movlw	7
  6332  001DD0                     u3751:
  6333  001DD0  6ADE               	clrf	postinc2,c
  6334  001DD2  06E8               	decf	wreg,f,c
  6335  001DD4  E2FD               	bc	u3751
  6336  001DD6  500C               	movf	___aodiv@divisor^0,w,c
  6337  001DD8  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  6338  001DDA  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  6339  001DDC  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  6340  001DDE  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  6341  001DE0  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  6342  001DE2  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  6343  001DE4  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  6344  001DE6  B4D8               	btfsc	status,2,c
  6345  001DE8  EFF8  F00E         	goto	u3761
  6346  001DEC  EFFA  F00E         	goto	u3760
  6347  001DF0                     u3761:
  6348  001DF0  EF4C  F00F         	goto	l3835
  6349  001DF4                     u3760:
  6350  001DF4  0E01               	movlw	1
  6351  001DF6  6E14               	movwf	___aodiv@counter^0,c
  6352  001DF8  EF08  F00F         	goto	l3821
  6353  001DFC                     l3819:
  6354  001DFC  90D8               	bcf	status,0,c
  6355  001DFE  360C               	rlcf	___aodiv@divisor^0,f,c
  6356  001E00  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  6357  001E02  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  6358  001E04  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  6359  001E06  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  6360  001E08  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  6361  001E0A  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  6362  001E0C  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  6363  001E0E  2A14               	incf	___aodiv@counter^0,f,c
  6364  001E10                     l3821:
  6365  001E10  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  6366  001E12  EF0D  F00F         	goto	u3771
  6367  001E16  EF0F  F00F         	goto	u3770
  6368  001E1A                     u3771:
  6369  001E1A  EFFE  F00E         	goto	l3819
  6370  001E1E                     u3770:
  6371  001E1E                     l3823:
  6372  001E1E  90D8               	bcf	status,0,c
  6373  001E20  3616               	rlcf	___aodiv@quotient^0,f,c
  6374  001E22  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  6375  001E24  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  6376  001E26  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  6377  001E28  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  6378  001E2A  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  6379  001E2C  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  6380  001E2E  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  6381  001E30  500C               	movf	___aodiv@divisor^0,w,c
  6382  001E32  5C04               	subwf	___aodiv@dividend^0,w,c
  6383  001E34  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6384  001E36  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  6385  001E38  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6386  001E3A  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  6387  001E3C  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6388  001E3E  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  6389  001E40  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6390  001E42  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  6391  001E44  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6392  001E46  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  6393  001E48  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6394  001E4A  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  6395  001E4C  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6396  001E4E  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  6397  001E50  A0D8               	btfss	status,0,c
  6398  001E52  EF2D  F00F         	goto	u3781
  6399  001E56  EF2F  F00F         	goto	u3780
  6400  001E5A                     u3781:
  6401  001E5A  EF40  F00F         	goto	l3831
  6402  001E5E                     u3780:
  6403  001E5E  500C               	movf	___aodiv@divisor^0,w,c
  6404  001E60  5E04               	subwf	___aodiv@dividend^0,f,c
  6405  001E62  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6406  001E64  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  6407  001E66  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6408  001E68  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  6409  001E6A  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6410  001E6C  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  6411  001E6E  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6412  001E70  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  6413  001E72  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6414  001E74  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  6415  001E76  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6416  001E78  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  6417  001E7A  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6418  001E7C  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  6419  001E7E  8016               	bsf	___aodiv@quotient^0,0,c
  6420  001E80                     l3831:
  6421  001E80  90D8               	bcf	status,0,c
  6422  001E82  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  6423  001E84  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  6424  001E86  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  6425  001E88  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  6426  001E8A  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  6427  001E8C  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  6428  001E8E  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  6429  001E90  320C               	rrcf	___aodiv@divisor^0,f,c
  6430  001E92  2E14               	decfsz	___aodiv@counter^0,f,c
  6431  001E94  EF0F  F00F         	goto	l3823
  6432  001E98                     l3835:
  6433  001E98  5015               	movf	___aodiv@sign^0,w,c
  6434  001E9A  B4D8               	btfsc	status,2,c
  6435  001E9C  EF52  F00F         	goto	u3791
  6436  001EA0  EF54  F00F         	goto	u3790
  6437  001EA4                     u3791:
  6438  001EA4  EF64  F00F         	goto	l3839
  6439  001EA8                     u3790:
  6440  001EA8  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  6441  001EAA  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  6442  001EAC  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  6443  001EAE  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  6444  001EB0  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  6445  001EB2  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  6446  001EB4  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  6447  001EB6  6C16               	negf	___aodiv@quotient^0,c
  6448  001EB8  0E00               	movlw	0
  6449  001EBA  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  6450  001EBC  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  6451  001EBE  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  6452  001EC0  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  6453  001EC2  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  6454  001EC4  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  6455  001EC6  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  6456  001EC8                     l3839:
  6457  001EC8  C016  F004         	movff	___aodiv@quotient,?___aodiv
  6458  001ECC  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  6459  001ED0  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  6460  001ED4  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  6461  001ED8  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  6462  001EDC  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  6463  001EE0  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  6464  001EE4  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  6465  001EE8  0012               	return		;funcret
  6466  001EEA                     __end_of___aodiv:
  6467                           	callstack 0
  6468                           
  6469 ;; *************** function _atoi *****************
  6470 ;; Defined at:
  6471 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6474 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  n               2   23[COMRAM] int 
  6477 ;;  neg             2   16[COMRAM] int 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  2   10[COMRAM] int 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6487 ;;      Params:         2       0       0       0       0       0       0       0       0
  6488 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6489 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6490 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6491 ;;Total ram usage:       15 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    3
  6494 ;; This function calls:
  6495 ;;		___wmul
  6496 ;;		_isdigit
  6497 ;;		_isspace
  6498 ;; This function is called by:
  6499 ;;		_vfpfcnvrt
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text32
  6504  001BD2                     __ptext32:
  6505                           	callstack 0
  6506  001BD2                     _atoi:
  6507                           	callstack 22
  6508  001BD2  0E00               	movlw	0
  6509  001BD4  6E19               	movwf	(atoi@n+1)^0,c
  6510  001BD6  0E00               	movlw	0
  6511  001BD8  6E18               	movwf	atoi@n^0,c
  6512  001BDA  0E00               	movlw	0
  6513  001BDC  6E12               	movwf	(atoi@neg+1)^0,c
  6514  001BDE  0E00               	movlw	0
  6515  001BE0  6E11               	movwf	atoi@neg^0,c
  6516  001BE2  EFF5  F00D         	goto	l3987
  6517  001BE6                     l3985:
  6518  001BE6  4A0B               	infsnz	atoi@s^0,f,c
  6519  001BE8  2A0C               	incf	(atoi@s+1)^0,f,c
  6520  001BEA                     l3987:
  6521  001BEA  0E01               	movlw	1
  6522  001BEC  6E17               	movwf	_atoi$1741^0,c
  6523  001BEE  C00B  FFF6         	movff	atoi@s,tblptrl
  6524  001BF2  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6525  001BF6                     	if	0	;tblptru may be non-zero
  6526  001BF6                     	endif
  6527  001BF6                     	if	0	;tblptru may be non-zero
  6528  001BF6                     	endif
  6529  001BF6  0008               	tblrd		*
  6530  001BF8  50F5               	movf	tablat,w,c
  6531  001BFA  0A20               	xorlw	32
  6532  001BFC  B4D8               	btfsc	status,2,c
  6533  001BFE  EF03  F00E         	goto	u4101
  6534  001C02  EF05  F00E         	goto	u4100
  6535  001C06                     u4101:
  6536  001C06  EF22  F00E         	goto	l3995
  6537  001C0A                     u4100:
  6538  001C0A  0EF7               	movlw	247
  6539  001C0C  6E0D               	movwf	??_atoi^0,c
  6540  001C0E  0EFF               	movlw	255
  6541  001C10  6E0E               	movwf	(??_atoi+1)^0,c
  6542  001C12  C00B  FFF6         	movff	atoi@s,tblptrl
  6543  001C16  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6544  001C1A                     	if	0	;tblptru may be non-zero
  6545  001C1A                     	endif
  6546  001C1A                     	if	0	;tblptru may be non-zero
  6547  001C1A                     	endif
  6548  001C1A  0008               	tblrd		*
  6549  001C1C  50F5               	movf	tablat,w,c
  6550  001C1E  6E0F               	movwf	(??_atoi+2)^0,c
  6551  001C20  6A10               	clrf	(??_atoi+3)^0,c
  6552  001C22  500D               	movf	??_atoi^0,w,c
  6553  001C24  260F               	addwf	(??_atoi+2)^0,f,c
  6554  001C26  500E               	movf	(??_atoi+1)^0,w,c
  6555  001C28  2210               	addwfc	(??_atoi+3)^0,f,c
  6556  001C2A  5010               	movf	(??_atoi+3)^0,w,c
  6557  001C2C  E109               	bnz	u4110
  6558  001C2E  0E05               	movlw	5
  6559  001C30  5C0F               	subwf	(??_atoi+2)^0,w,c
  6560  001C32  A0D8               	btfss	status,0,c
  6561  001C34  EF1E  F00E         	goto	u4111
  6562  001C38  EF20  F00E         	goto	u4110
  6563  001C3C                     u4111:
  6564  001C3C  EF22  F00E         	goto	l3995
  6565  001C40                     u4110:
  6566  001C40  0E00               	movlw	0
  6567  001C42  6E17               	movwf	_atoi$1741^0,c
  6568  001C44                     l3995:
  6569  001C44  C017  F013         	movff	_atoi$1741,_atoi$1740
  6570  001C48  6A14               	clrf	(_atoi$1740+1)^0,c
  6571  001C4A  5013               	movf	_atoi$1740^0,w,c
  6572  001C4C  1014               	iorwf	(_atoi$1740+1)^0,w,c
  6573  001C4E  A4D8               	btfss	status,2,c
  6574  001C50  EF2C  F00E         	goto	u4121
  6575  001C54  EF2E  F00E         	goto	u4120
  6576  001C58                     u4121:
  6577  001C58  EFF3  F00D         	goto	l3985
  6578  001C5C                     u4120:
  6579  001C5C  EF38  F00E         	goto	l4005
  6580  001C60                     l4001:
  6581  001C60  0E00               	movlw	0
  6582  001C62  6E12               	movwf	(atoi@neg+1)^0,c
  6583  001C64  0E01               	movlw	1
  6584  001C66  6E11               	movwf	atoi@neg^0,c
  6585  001C68                     l4003:
  6586  001C68  4A0B               	infsnz	atoi@s^0,f,c
  6587  001C6A  2A0C               	incf	(atoi@s+1)^0,f,c
  6588  001C6C  EF6D  F00E         	goto	l4011
  6589  001C70                     l4005:
  6590  001C70  C00B  FFF6         	movff	atoi@s,tblptrl
  6591  001C74  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6592  001C78                     	if	0	;tblptru may be non-zero
  6593  001C78                     	endif
  6594  001C78                     	if	0	;tblptru may be non-zero
  6595  001C78                     	endif
  6596  001C78  0008               	tblrd		*
  6597  001C7A  50F5               	movf	tablat,w,c
  6598  001C7C  6E0D               	movwf	??_atoi^0,c
  6599  001C7E  6A0E               	clrf	(??_atoi+1)^0,c
  6600                           
  6601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6602                           ; Switch size 1, requested type "simple"
  6603                           ; Number of cases is 1, Range of values is 0 to 0
  6604                           ; switch strategies available:
  6605                           ; Name         Instructions Cycles
  6606                           ; simple_byte            4     3 (average)
  6607                           ;	Chosen strategy is simple_byte
  6608  001C80  500E               	movf	(??_atoi+1)^0,w,c
  6609  001C82  0A00               	xorlw	0	; case 0
  6610  001C84  B4D8               	btfsc	status,2,c
  6611  001C86  EF47  F00E         	goto	l4349
  6612  001C8A  EF6D  F00E         	goto	l4011
  6613  001C8E                     l4349:
  6614                           
  6615                           ; Switch size 1, requested type "simple"
  6616                           ; Number of cases is 2, Range of values is 43 to 45
  6617                           ; switch strategies available:
  6618                           ; Name         Instructions Cycles
  6619                           ; simple_byte            7     4 (average)
  6620                           ;	Chosen strategy is simple_byte
  6621  001C8E  500D               	movf	??_atoi^0,w,c
  6622  001C90  0A2B               	xorlw	43	; case 43
  6623  001C92  B4D8               	btfsc	status,2,c
  6624  001C94  EF34  F00E         	goto	l4003
  6625  001C98  0A06               	xorlw	6	; case 45
  6626  001C9A  B4D8               	btfsc	status,2,c
  6627  001C9C  EF30  F00E         	goto	l4001
  6628  001CA0  EF6D  F00E         	goto	l4011
  6629  001CA4                     l4007:
  6630  001CA4  C018  F004         	movff	atoi@n,___wmul@multiplier
  6631  001CA8  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  6632  001CAC  0E00               	movlw	0
  6633  001CAE  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  6634  001CB0  0E0A               	movlw	10
  6635  001CB2  6E06               	movwf	___wmul@multiplicand^0,c
  6636  001CB4  EC0E  F018         	call	___wmul	;wreg free
  6637  001CB8  C00B  FFF6         	movff	atoi@s,tblptrl
  6638  001CBC  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6639  001CC0                     	if	0	;tblptru may be non-zero
  6640  001CC0                     	endif
  6641  001CC0                     	if	0	;tblptru may be non-zero
  6642  001CC0                     	endif
  6643  001CC0  0008               	tblrd		*
  6644  001CC2  50F5               	movf	tablat,w,c
  6645  001CC4  5E04               	subwf	?___wmul^0,f,c
  6646  001CC6  0E00               	movlw	0
  6647  001CC8  5A05               	subwfb	(?___wmul+1)^0,f,c
  6648  001CCA  0E30               	movlw	48
  6649  001CCC  2404               	addwf	?___wmul^0,w,c
  6650  001CCE  6E18               	movwf	atoi@n^0,c
  6651  001CD0  0E00               	movlw	0
  6652  001CD2  2005               	addwfc	(?___wmul+1)^0,w,c
  6653  001CD4  6E19               	movwf	(atoi@n+1)^0,c
  6654  001CD6  EF34  F00E         	goto	l4003
  6655  001CDA                     l4011:
  6656  001CDA  0ED0               	movlw	208
  6657  001CDC  6E0D               	movwf	??_atoi^0,c
  6658  001CDE  0EFF               	movlw	255
  6659  001CE0  6E0E               	movwf	(??_atoi+1)^0,c
  6660  001CE2  C00B  FFF6         	movff	atoi@s,tblptrl
  6661  001CE6  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6662  001CEA                     	if	0	;tblptru may be non-zero
  6663  001CEA                     	endif
  6664  001CEA                     	if	0	;tblptru may be non-zero
  6665  001CEA                     	endif
  6666  001CEA  0008               	tblrd		*
  6667  001CEC  50F5               	movf	tablat,w,c
  6668  001CEE  6E0F               	movwf	(??_atoi+2)^0,c
  6669  001CF0  6A10               	clrf	(??_atoi+3)^0,c
  6670  001CF2  500D               	movf	??_atoi^0,w,c
  6671  001CF4  260F               	addwf	(??_atoi+2)^0,f,c
  6672  001CF6  500E               	movf	(??_atoi+1)^0,w,c
  6673  001CF8  2210               	addwfc	(??_atoi+3)^0,f,c
  6674  001CFA  5010               	movf	(??_atoi+3)^0,w,c
  6675  001CFC  E10A               	bnz	u4130
  6676  001CFE  0E0A               	movlw	10
  6677  001D00  5C0F               	subwf	(??_atoi+2)^0,w,c
  6678  001D02  A0D8               	btfss	status,0,c
  6679  001D04  EF86  F00E         	goto	u4131
  6680  001D08  EF89  F00E         	goto	u4130
  6681  001D0C                     u4131:
  6682  001D0C  0E01               	movlw	1
  6683  001D0E  EF8A  F00E         	goto	u4140
  6684  001D12                     u4130:
  6685  001D12  0E00               	movlw	0
  6686  001D14                     u4140:
  6687  001D14  6E15               	movwf	_atoi$1742^0,c
  6688  001D16  6A16               	clrf	(_atoi$1742+1)^0,c
  6689  001D18  5015               	movf	_atoi$1742^0,w,c
  6690  001D1A  1016               	iorwf	(_atoi$1742+1)^0,w,c
  6691  001D1C  A4D8               	btfss	status,2,c
  6692  001D1E  EF93  F00E         	goto	u4151
  6693  001D22  EF95  F00E         	goto	u4150
  6694  001D26                     u4151:
  6695  001D26  EF52  F00E         	goto	l4007
  6696  001D2A                     u4150:
  6697  001D2A  5011               	movf	atoi@neg^0,w,c
  6698  001D2C  1012               	iorwf	(atoi@neg+1)^0,w,c
  6699  001D2E  A4D8               	btfss	status,2,c
  6700  001D30  EF9C  F00E         	goto	u4161
  6701  001D34  EF9E  F00E         	goto	u4160
  6702  001D38                     u4161:
  6703  001D38  EFAC  F00E         	goto	l1103
  6704  001D3C                     u4160:
  6705  001D3C  C018  F00D         	movff	atoi@n,??_atoi
  6706  001D40  C019  F00E         	movff	atoi@n+1,??_atoi+1
  6707  001D44  1E0D               	comf	??_atoi^0,f,c
  6708  001D46  1E0E               	comf	(??_atoi+1)^0,f,c
  6709  001D48  4A0D               	infsnz	??_atoi^0,f,c
  6710  001D4A  2A0E               	incf	(??_atoi+1)^0,f,c
  6711  001D4C  C00D  F00B         	movff	??_atoi,?_atoi
  6712  001D50  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  6713  001D54  EFB0  F00E         	goto	l1106
  6714  001D58                     l1103:
  6715  001D58  C018  F00B         	movff	atoi@n,?_atoi
  6716  001D5C  C019  F00C         	movff	atoi@n+1,?_atoi+1
  6717  001D60                     l1106:
  6718  001D60  0012               	return		;funcret
  6719  001D62                     __end_of_atoi:
  6720                           	callstack 0
  6721                           
  6722 ;; *************** function _isspace *****************
  6723 ;; Defined at:
  6724 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  c               2    3[COMRAM] int 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  2    3[COMRAM] int 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6738 ;;      Params:         2       0       0       0       0       0       0       0       0
  6739 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6740 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6741 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6742 ;;Total ram usage:        7 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    2
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_atoi
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text33
  6753  002D6E                     __ptext33:
  6754                           	callstack 0
  6755  002D6E                     _isspace:
  6756                           	callstack 22
  6757  002D6E  0E01               	movlw	1
  6758  002D70  6E0A               	movwf	_isspace$1758^0,c
  6759  002D72  0E20               	movlw	32
  6760  002D74  1804               	xorwf	isspace@c^0,w,c
  6761  002D76  1005               	iorwf	(isspace@c+1)^0,w,c
  6762  002D78  B4D8               	btfsc	status,2,c
  6763  002D7A  EFC1  F016         	goto	u3931
  6764  002D7E  EFC3  F016         	goto	u3930
  6765  002D82                     u3931:
  6766  002D82  EFDC  F016         	goto	l3917
  6767  002D86                     u3930:
  6768  002D86  0EF7               	movlw	247
  6769  002D88  6E06               	movwf	??_isspace^0,c
  6770  002D8A  0EFF               	movlw	255
  6771  002D8C  6E07               	movwf	(??_isspace+1)^0,c
  6772  002D8E  C004  F008         	movff	isspace@c,??_isspace+2
  6773  002D92  C005  F009         	movff	isspace@c+1,??_isspace+3
  6774  002D96  5006               	movf	??_isspace^0,w,c
  6775  002D98  2608               	addwf	(??_isspace+2)^0,f,c
  6776  002D9A  5007               	movf	(??_isspace+1)^0,w,c
  6777  002D9C  2209               	addwfc	(??_isspace+3)^0,f,c
  6778  002D9E  5009               	movf	(??_isspace+3)^0,w,c
  6779  002DA0  E109               	bnz	u3940
  6780  002DA2  0E05               	movlw	5
  6781  002DA4  5C08               	subwf	(??_isspace+2)^0,w,c
  6782  002DA6  A0D8               	btfss	status,0,c
  6783  002DA8  EFD8  F016         	goto	u3941
  6784  002DAC  EFDA  F016         	goto	u3940
  6785  002DB0                     u3941:
  6786  002DB0  EFDC  F016         	goto	l3917
  6787  002DB4                     u3940:
  6788  002DB4  0E00               	movlw	0
  6789  002DB6  6E0A               	movwf	_isspace$1758^0,c
  6790  002DB8                     l3917:
  6791  002DB8  C00A  F004         	movff	_isspace$1758,?_isspace
  6792  002DBC  6A05               	clrf	(?_isspace+1)^0,c
  6793  002DBE  0012               	return		;funcret
  6794  002DC0                     __end_of_isspace:
  6795                           	callstack 0
  6796                           
  6797 ;; *************** function _isdigit *****************
  6798 ;; Defined at:
  6799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;  c               2    3[COMRAM] int 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  2    3[COMRAM] int 
  6806 ;; Registers used:
  6807 ;;		wreg, status,2, status,0
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6813 ;;      Params:         2       0       0       0       0       0       0       0       0
  6814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6815 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6816 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6817 ;;Total ram usage:        6 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; Hardware stack levels required when called:    2
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_vfpfcnvrt
  6824 ;;		_atoi
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           	psect	text34
  6829  002F50                     __ptext34:
  6830                           	callstack 0
  6831  002F50                     _isdigit:
  6832                           	callstack 23
  6833  002F50  0ED0               	movlw	208
  6834  002F52  6E06               	movwf	??_isdigit^0,c
  6835  002F54  0EFF               	movlw	255
  6836  002F56  6E07               	movwf	(??_isdigit+1)^0,c
  6837  002F58  C004  F008         	movff	isdigit@c,??_isdigit+2
  6838  002F5C  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  6839  002F60  5006               	movf	??_isdigit^0,w,c
  6840  002F62  2608               	addwf	(??_isdigit+2)^0,f,c
  6841  002F64  5007               	movf	(??_isdigit+1)^0,w,c
  6842  002F66  2209               	addwfc	(??_isdigit+3)^0,f,c
  6843  002F68  5009               	movf	(??_isdigit+3)^0,w,c
  6844  002F6A  E10A               	bnz	u3910
  6845  002F6C  0E0A               	movlw	10
  6846  002F6E  5C08               	subwf	(??_isdigit+2)^0,w,c
  6847  002F70  A0D8               	btfss	status,0,c
  6848  002F72  EFBD  F017         	goto	u3911
  6849  002F76  EFC0  F017         	goto	u3910
  6850  002F7A                     u3911:
  6851  002F7A  0E01               	movlw	1
  6852  002F7C  EFC1  F017         	goto	u3920
  6853  002F80                     u3910:
  6854  002F80  0E00               	movlw	0
  6855  002F82                     u3920:
  6856  002F82  6E04               	movwf	?_isdigit^0,c
  6857  002F84  6A05               	clrf	(?_isdigit+1)^0,c
  6858  002F86  0012               	return		;funcret
  6859  002F88                     __end_of_isdigit:
  6860                           	callstack 0
  6861                           
  6862 ;; *************** function ___wmul *****************
  6863 ;; Defined at:
  6864 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  multiplier      2    3[COMRAM] unsigned int 
  6867 ;;  multiplicand    2    5[COMRAM] unsigned int 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  product         2    7[COMRAM] unsigned int 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  2    3[COMRAM] unsigned int 
  6872 ;; Registers used:
  6873 ;;		wreg, status,2, status,0, prodl, prodh
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6879 ;;      Params:         4       0       0       0       0       0       0       0       0
  6880 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6882 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6883 ;;Total ram usage:        6 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    2
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		_appGetElements
  6890 ;;		_atoi
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text35
  6895  00301C                     __ptext35:
  6896                           	callstack 0
  6897  00301C                     ___wmul:
  6898                           	callstack 22
  6899  00301C  5004               	movf	___wmul@multiplier^0,w,c
  6900  00301E  0206               	mulwf	___wmul@multiplicand^0,c
  6901  003020  CFF3 F008          	movff	prodl,___wmul@product
  6902  003024  CFF4 F009          	movff	prodh,___wmul@product+1
  6903  003028  5004               	movf	___wmul@multiplier^0,w,c
  6904  00302A  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  6905  00302C  50F3               	movf	243,w,c
  6906  00302E  2609               	addwf	(___wmul@product+1)^0,f,c
  6907  003030  5005               	movf	(___wmul@multiplier+1)^0,w,c
  6908  003032  0206               	mulwf	___wmul@multiplicand^0,c
  6909  003034  50F3               	movf	243,w,c
  6910  003036  2609               	addwf	(___wmul@product+1)^0,f,c
  6911  003038  C008  F004         	movff	___wmul@product,?___wmul
  6912  00303C  C009  F005         	movff	___wmul@product+1,?___wmul+1
  6913  003040  0012               	return		;funcret
  6914  003042                     __end_of___wmul:
  6915                           	callstack 0
  6916                           
  6917 ;; *************** function _memset *****************
  6918 ;; Defined at:
  6919 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  dest            2    3[COMRAM] PTR void 
  6922 ;;		 -> datos(25), 
  6923 ;;  c               2    5[COMRAM] int 
  6924 ;;  n               2    7[COMRAM] unsigned int 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;  s               2   13[COMRAM] PTR unsigned char 
  6927 ;;		 -> datos(25), 
  6928 ;;  k               2   11[COMRAM] unsigned int 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  2    3[COMRAM] PTR void 
  6931 ;; Registers used:
  6932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6938 ;;      Params:         6       0       0       0       0       0       0       0       0
  6939 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6940 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6941 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6942 ;;Total ram usage:       12 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    2
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_appADC
  6949 ;;		_appBat
  6950 ;;		_appGetElements
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text36
  6955  002060                     __ptext36:
  6956                           	callstack 0
  6957  002060                     _memset:
  6958                           	callstack 26
  6959  002060  C004  F00E         	movff	memset@dest,memset@s
  6960  002064  C005  F00F         	movff	memset@dest+1,memset@s+1
  6961  002068  5008               	movf	memset@n^0,w,c
  6962  00206A  1009               	iorwf	(memset@n+1)^0,w,c
  6963  00206C  A4D8               	btfss	status,2,c
  6964  00206E  EF3B  F010         	goto	u2591
  6965  002072  EF3D  F010         	goto	u2590
  6966  002076                     u2591:
  6967  002076  EF3F  F010         	goto	l2901
  6968  00207A                     u2590:
  6969  00207A  EFEA  F010         	goto	l957
  6970  00207E                     l2901:
  6971  00207E  C00E  FFD9         	movff	memset@s,fsr2l
  6972  002082  C00F  FFDA         	movff	memset@s+1,fsr2h
  6973  002086  C006  FFDF         	movff	memset@c,indf2
  6974  00208A  5008               	movf	memset@n^0,w,c
  6975  00208C  240E               	addwf	memset@s^0,w,c
  6976  00208E  6E0A               	movwf	??_memset^0,c
  6977  002090  5009               	movf	(memset@n+1)^0,w,c
  6978  002092  200F               	addwfc	(memset@s+1)^0,w,c
  6979  002094  6E0B               	movwf	(??_memset+1)^0,c
  6980  002096  0EFF               	movlw	255
  6981  002098  240A               	addwf	??_memset^0,w,c
  6982  00209A  6ED9               	movwf	fsr2l,c
  6983  00209C  0EFF               	movlw	255
  6984  00209E  200B               	addwfc	(??_memset+1)^0,w,c
  6985  0020A0  6EDA               	movwf	fsr2h,c
  6986  0020A2  C006  FFDF         	movff	memset@c,indf2
  6987  0020A6  5009               	movf	(memset@n+1)^0,w,c
  6988  0020A8  E107               	bnz	u2601
  6989  0020AA  0E03               	movlw	3
  6990  0020AC  5C08               	subwf	memset@n^0,w,c
  6991  0020AE  B0D8               	btfsc	status,0,c
  6992  0020B0  EF5C  F010         	goto	u2601
  6993  0020B4  EF5E  F010         	goto	u2600
  6994  0020B8                     u2601:
  6995  0020B8  EF60  F010         	goto	l2907
  6996  0020BC                     u2600:
  6997  0020BC  EFEA  F010         	goto	l957
  6998  0020C0                     l2907:
  6999  0020C0  EE20 F001          	lfsr	2,1
  7000  0020C4  500E               	movf	memset@s^0,w,c
  7001  0020C6  26D9               	addwf	fsr2l,f,c
  7002  0020C8  500F               	movf	(memset@s+1)^0,w,c
  7003  0020CA  22DA               	addwfc	fsr2h,f,c
  7004  0020CC  C006  FFDF         	movff	memset@c,indf2
  7005  0020D0  EE20 F002          	lfsr	2,2
  7006  0020D4  500E               	movf	memset@s^0,w,c
  7007  0020D6  26D9               	addwf	fsr2l,f,c
  7008  0020D8  500F               	movf	(memset@s+1)^0,w,c
  7009  0020DA  22DA               	addwfc	fsr2h,f,c
  7010  0020DC  C006  FFDF         	movff	memset@c,indf2
  7011  0020E0  5008               	movf	memset@n^0,w,c
  7012  0020E2  240E               	addwf	memset@s^0,w,c
  7013  0020E4  6E0A               	movwf	??_memset^0,c
  7014  0020E6  5009               	movf	(memset@n+1)^0,w,c
  7015  0020E8  200F               	addwfc	(memset@s+1)^0,w,c
  7016  0020EA  6E0B               	movwf	(??_memset+1)^0,c
  7017  0020EC  0EFE               	movlw	254
  7018  0020EE  240A               	addwf	??_memset^0,w,c
  7019  0020F0  6ED9               	movwf	fsr2l,c
  7020  0020F2  0EFF               	movlw	255
  7021  0020F4  200B               	addwfc	(??_memset+1)^0,w,c
  7022  0020F6  6EDA               	movwf	fsr2h,c
  7023  0020F8  C006  FFDF         	movff	memset@c,indf2
  7024  0020FC  5008               	movf	memset@n^0,w,c
  7025  0020FE  240E               	addwf	memset@s^0,w,c
  7026  002100  6E0A               	movwf	??_memset^0,c
  7027  002102  5009               	movf	(memset@n+1)^0,w,c
  7028  002104  200F               	addwfc	(memset@s+1)^0,w,c
  7029  002106  6E0B               	movwf	(??_memset+1)^0,c
  7030  002108  0EFD               	movlw	253
  7031  00210A  240A               	addwf	??_memset^0,w,c
  7032  00210C  6ED9               	movwf	fsr2l,c
  7033  00210E  0EFF               	movlw	255
  7034  002110  200B               	addwfc	(??_memset+1)^0,w,c
  7035  002112  6EDA               	movwf	fsr2h,c
  7036  002114  C006  FFDF         	movff	memset@c,indf2
  7037  002118  5009               	movf	(memset@n+1)^0,w,c
  7038  00211A  E107               	bnz	u2611
  7039  00211C  0E07               	movlw	7
  7040  00211E  5C08               	subwf	memset@n^0,w,c
  7041  002120  B0D8               	btfsc	status,0,c
  7042  002122  EF95  F010         	goto	u2611
  7043  002126  EF97  F010         	goto	u2610
  7044  00212A                     u2611:
  7045  00212A  EF99  F010         	goto	l2913
  7046  00212E                     u2610:
  7047  00212E  EFEA  F010         	goto	l957
  7048  002132                     l2913:
  7049  002132  EE20 F003          	lfsr	2,3
  7050  002136  500E               	movf	memset@s^0,w,c
  7051  002138  26D9               	addwf	fsr2l,f,c
  7052  00213A  500F               	movf	(memset@s+1)^0,w,c
  7053  00213C  22DA               	addwfc	fsr2h,f,c
  7054  00213E  C006  FFDF         	movff	memset@c,indf2
  7055  002142  5008               	movf	memset@n^0,w,c
  7056  002144  240E               	addwf	memset@s^0,w,c
  7057  002146  6E0A               	movwf	??_memset^0,c
  7058  002148  5009               	movf	(memset@n+1)^0,w,c
  7059  00214A  200F               	addwfc	(memset@s+1)^0,w,c
  7060  00214C  6E0B               	movwf	(??_memset+1)^0,c
  7061  00214E  0EFC               	movlw	252
  7062  002150  240A               	addwf	??_memset^0,w,c
  7063  002152  6ED9               	movwf	fsr2l,c
  7064  002154  0EFF               	movlw	255
  7065  002156  200B               	addwfc	(??_memset+1)^0,w,c
  7066  002158  6EDA               	movwf	fsr2h,c
  7067  00215A  C006  FFDF         	movff	memset@c,indf2
  7068  00215E  5009               	movf	(memset@n+1)^0,w,c
  7069  002160  E107               	bnz	u2621
  7070  002162  0E09               	movlw	9
  7071  002164  5C08               	subwf	memset@n^0,w,c
  7072  002166  B0D8               	btfsc	status,0,c
  7073  002168  EFB8  F010         	goto	u2621
  7074  00216C  EFBA  F010         	goto	u2620
  7075  002170                     u2621:
  7076  002170  EFBC  F010         	goto	l2919
  7077  002174                     u2620:
  7078  002174  EFEA  F010         	goto	l957
  7079  002178                     l2919:
  7080  002178  C00E  F00A         	movff	memset@s,??_memset
  7081  00217C  C00F  F00B         	movff	memset@s+1,??_memset+1
  7082  002180  1E0A               	comf	??_memset^0,f,c
  7083  002182  1E0B               	comf	(??_memset+1)^0,f,c
  7084  002184  4A0A               	infsnz	??_memset^0,f,c
  7085  002186  2A0B               	incf	(??_memset+1)^0,f,c
  7086  002188  0E03               	movlw	3
  7087  00218A  140A               	andwf	??_memset^0,w,c
  7088  00218C  6E0C               	movwf	memset@k^0,c
  7089  00218E  6A0D               	clrf	(memset@k+1)^0,c
  7090  002190  500C               	movf	memset@k^0,w,c
  7091  002192  260E               	addwf	memset@s^0,f,c
  7092  002194  500D               	movf	(memset@k+1)^0,w,c
  7093  002196  220F               	addwfc	(memset@s+1)^0,f,c
  7094  002198  500C               	movf	memset@k^0,w,c
  7095  00219A  5E08               	subwf	memset@n^0,f,c
  7096  00219C  500D               	movf	(memset@k+1)^0,w,c
  7097  00219E  5A09               	subwfb	(memset@n+1)^0,f,c
  7098  0021A0  0EFC               	movlw	252
  7099  0021A2  1608               	andwf	memset@n^0,f,c
  7100  0021A4  0EFF               	movlw	255
  7101  0021A6  1609               	andwf	(memset@n+1)^0,f,c
  7102  0021A8  EFE1  F010         	goto	l2927
  7103  0021AC                     l2921:
  7104  0021AC  C00E  FFD9         	movff	memset@s,fsr2l
  7105  0021B0  C00F  FFDA         	movff	memset@s+1,fsr2h
  7106  0021B4  C006  FFDF         	movff	memset@c,indf2
  7107  0021B8  0608               	decf	memset@n^0,f,c
  7108  0021BA  A0D8               	btfss	status,0,c
  7109  0021BC  0609               	decf	(memset@n+1)^0,f,c
  7110  0021BE  4A0E               	infsnz	memset@s^0,f,c
  7111  0021C0  2A0F               	incf	(memset@s+1)^0,f,c
  7112  0021C2                     l2927:
  7113  0021C2  5008               	movf	memset@n^0,w,c
  7114  0021C4  1009               	iorwf	(memset@n+1)^0,w,c
  7115  0021C6  A4D8               	btfss	status,2,c
  7116  0021C8  EFE8  F010         	goto	u2631
  7117  0021CC  EFEA  F010         	goto	u2630
  7118  0021D0                     u2631:
  7119  0021D0  EFD6  F010         	goto	l2921
  7120  0021D4                     u2630:
  7121  0021D4                     l957:
  7122  0021D4  0012               	return		;funcret
  7123  0021D6                     __end_of_memset:
  7124                           	callstack 0
  7125                           
  7126 ;; *************** function _appTimerStop *****************
  7127 ;; Defined at:
  7128 ;;		line 78 in file "servo.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;		None
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		None
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7145 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7146 ;;Total ram usage:        0 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    2
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_appGetElements
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text37
  7157  0030A2                     __ptext37:
  7158                           	callstack 0
  7159  0030A2                     _appTimerStop:
  7160                           	callstack 27
  7161  0030A2                     
  7162                           ;servo.c: 80:     T3CONbits.TMR3ON = 0;
  7163  0030A2  90B1               	bcf	177,0,c	;volatile
  7164  0030A4  0012               	return		;funcret
  7165  0030A6                     __end_of_appTimerStop:
  7166                           	callstack 0
  7167                           
  7168 ;; *************** function _appTimerStart *****************
  7169 ;; Defined at:
  7170 ;;		line 72 in file "servo.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7188 ;;Total ram usage:        0 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    2
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_appInit
  7195 ;;		_appGetElements
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text38
  7200  003088                     __ptext38:
  7201                           	callstack 0
  7202  003088                     _appTimerStart:
  7203                           	callstack 27
  7204  003088                     
  7205                           ;servo.c: 74:     TMR3 = 20536;
  7206  003088  0E50               	movlw	80
  7207  00308A  6EB3               	movwf	179,c	;volatile
  7208  00308C  0E38               	movlw	56
  7209  00308E  6EB2               	movwf	178,c	;volatile
  7210  003090                     
  7211                           ;servo.c: 75:     T3CONbits.TMR3ON = 1;
  7212  003090  80B1               	bsf	177,0,c	;volatile
  7213  003092  0012               	return		;funcret
  7214  003094                     __end_of_appTimerStart:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _Lcd_Out *****************
  7218 ;; Defined at:
  7219 ;;		line 95 in file "flex_lcd.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  y               1    wreg     unsigned char 
  7222 ;;  x               1    6[COMRAM] unsigned char 
  7223 ;;  buffer          2    7[COMRAM] PTR const char 
  7224 ;;		 -> STR_6(14), appElemts@dataout(6), STR_4(6), STR_3(12), 
  7225 ;;		 -> datos.display(16), datos(25), 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  y               1   11[COMRAM] unsigned char 
  7228 ;;  data            1   12[COMRAM] unsigned char 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7238 ;;      Params:         3       0       0       0       0       0       0       0       0
  7239 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7240 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7241 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7242 ;;Total ram usage:        7 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    3
  7245 ;; This function calls:
  7246 ;;		_Lcd_Chr_CP
  7247 ;;		_Lcd_Cmd
  7248 ;; This function is called by:
  7249 ;;		_appADC
  7250 ;;		_appBat
  7251 ;;		_appLCD_Init
  7252 ;;		_appElemts
  7253 ;;		_appGetElements
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           	psect	text39
  7258  0027FC                     __ptext39:
  7259                           	callstack 0
  7260  0027FC                     _Lcd_Out:
  7261                           	callstack 25
  7262                           
  7263                           ;incstack = 0
  7264                           ;Lcd_Out@y stored from wreg
  7265  0027FC  6E0C               	movwf	Lcd_Out@y^0,c
  7266  0027FE                     
  7267                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  7268  0027FE  EF15  F014         	goto	l2953
  7269  002802                     l2943:
  7270                           
  7271                           ;flex_lcd.c: 101:             data = 128 + x;
  7272  002802  5007               	movf	Lcd_Out@x^0,w,c
  7273  002804  0F80               	addlw	128
  7274  002806  6E0D               	movwf	Lcd_Out@data^0,c
  7275                           
  7276                           ;flex_lcd.c: 102:             break;
  7277  002808  EF32  F014         	goto	l2955
  7278  00280C                     l2945:
  7279                           
  7280                           ;flex_lcd.c: 104:             data = 192 + x;
  7281  00280C  5007               	movf	Lcd_Out@x^0,w,c
  7282  00280E  0FC0               	addlw	192
  7283  002810  6E0D               	movwf	Lcd_Out@data^0,c
  7284                           
  7285                           ;flex_lcd.c: 105:             break;
  7286  002812  EF32  F014         	goto	l2955
  7287  002816                     l2947:
  7288                           
  7289                           ;flex_lcd.c: 107:             data = 148 + x;
  7290  002816  5007               	movf	Lcd_Out@x^0,w,c
  7291  002818  0F94               	addlw	148
  7292  00281A  6E0D               	movwf	Lcd_Out@data^0,c
  7293                           
  7294                           ;flex_lcd.c: 108:             break;
  7295  00281C  EF32  F014         	goto	l2955
  7296  002820                     l2949:
  7297                           
  7298                           ;flex_lcd.c: 110:             data = 212 + x;
  7299  002820  5007               	movf	Lcd_Out@x^0,w,c
  7300  002822  0FD4               	addlw	212
  7301  002824  6E0D               	movwf	Lcd_Out@data^0,c
  7302                           
  7303                           ;flex_lcd.c: 111:             break;
  7304  002826  EF32  F014         	goto	l2955
  7305  00282A                     l2953:
  7306  00282A  500C               	movf	Lcd_Out@y^0,w,c
  7307  00282C  6E0A               	movwf	??_Lcd_Out^0,c
  7308  00282E  6A0B               	clrf	(??_Lcd_Out+1)^0,c
  7309                           
  7310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7311                           ; Switch size 1, requested type "simple"
  7312                           ; Number of cases is 1, Range of values is 0 to 0
  7313                           ; switch strategies available:
  7314                           ; Name         Instructions Cycles
  7315                           ; simple_byte            4     3 (average)
  7316                           ;	Chosen strategy is simple_byte
  7317  002830  500B               	movf	(??_Lcd_Out+1)^0,w,c
  7318  002832  0A00               	xorlw	0	; case 0
  7319  002834  B4D8               	btfsc	status,2,c
  7320  002836  EF1F  F014         	goto	l4351
  7321  00283A  EF32  F014         	goto	l2955
  7322  00283E                     l4351:
  7323                           
  7324                           ; Switch size 1, requested type "simple"
  7325                           ; Number of cases is 4, Range of values is 1 to 4
  7326                           ; switch strategies available:
  7327                           ; Name         Instructions Cycles
  7328                           ; simple_byte           13     7 (average)
  7329                           ;	Chosen strategy is simple_byte
  7330  00283E  500A               	movf	??_Lcd_Out^0,w,c
  7331  002840  0A01               	xorlw	1	; case 1
  7332  002842  B4D8               	btfsc	status,2,c
  7333  002844  EF01  F014         	goto	l2943
  7334  002848  0A03               	xorlw	3	; case 2
  7335  00284A  B4D8               	btfsc	status,2,c
  7336  00284C  EF06  F014         	goto	l2945
  7337  002850  0A01               	xorlw	1	; case 3
  7338  002852  B4D8               	btfsc	status,2,c
  7339  002854  EF0B  F014         	goto	l2947
  7340  002858  0A07               	xorlw	7	; case 4
  7341  00285A  B4D8               	btfsc	status,2,c
  7342  00285C  EF10  F014         	goto	l2949
  7343  002860  EF32  F014         	goto	l2955
  7344  002864                     l2955:
  7345                           
  7346                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  7347  002864  500D               	movf	Lcd_Out@data^0,w,c
  7348  002866  ECE6  F012         	call	_Lcd_Cmd
  7349                           
  7350                           ;flex_lcd.c: 116:     while(*buffer)
  7351  00286A  EF4B  F014         	goto	l2961
  7352  00286E                     l2957:
  7353                           
  7354                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  7355  00286E  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7356  002872  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7357  002876  6AF8               	clrf	tblptru,c
  7358  002878  0E07               	movlw	(high __ramtop+-1)
  7359  00287A  64F7               	cpfsgt	tblptrh,c
  7360  00287C  D003               	bra	u2647
  7361  00287E  0008               	tblrd		*
  7362  002880  50F5               	movf	tablat,w,c
  7363  002882  D005               	bra	u2640
  7364  002884                     u2647:
  7365  002884  CFF6 FFE1          	movff	tblptrl,fsr1l
  7366  002888  CFF7 FFE2          	movff	tblptrh,fsr1h
  7367  00288C  50E7               	movf	indf1,w,c
  7368  00288E                     u2640:
  7369  00288E  EC9D  F011         	call	_Lcd_Chr_CP
  7370  002892                     
  7371                           ;flex_lcd.c: 119:         buffer++;
  7372  002892  4A08               	infsnz	Lcd_Out@buffer^0,f,c
  7373  002894  2A09               	incf	(Lcd_Out@buffer+1)^0,f,c
  7374  002896                     l2961:
  7375                           
  7376                           ;flex_lcd.c: 116:     while(*buffer)
  7377  002896  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7378  00289A  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7379  00289E  6AF8               	clrf	tblptru,c
  7380  0028A0  0E07               	movlw	(high __ramtop+-1)
  7381  0028A2  64F7               	cpfsgt	tblptrh,c
  7382  0028A4  D003               	bra	u2657
  7383  0028A6  0008               	tblrd		*
  7384  0028A8  50F5               	movf	tablat,w,c
  7385  0028AA  D005               	bra	u2650
  7386  0028AC                     u2657:
  7387  0028AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7388  0028B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7389  0028B4  50E7               	movf	indf1,w,c
  7390  0028B6                     u2650:
  7391  0028B6  0900               	iorlw	0
  7392  0028B8  A4D8               	btfss	status,2,c
  7393  0028BA  EF61  F014         	goto	u2661
  7394  0028BE  EF63  F014         	goto	u2660
  7395  0028C2                     u2661:
  7396  0028C2  EF37  F014         	goto	l2957
  7397  0028C6                     u2660:
  7398  0028C6  0012               	return		;funcret
  7399  0028C8                     __end_of_Lcd_Out:
  7400                           	callstack 0
  7401                           
  7402 ;; *************** function _Lcd_Cmd *****************
  7403 ;; Defined at:
  7404 ;;		line 175 in file "flex_lcd.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  data            1    wreg     unsigned char 
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  data            1    5[COMRAM] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  1    wreg      void 
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7418 ;;      Params:         0       0       0       0       0       0       0       0       0
  7419 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7420 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7421 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7422 ;;Total ram usage:        3 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:    2
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_Lcd_Init
  7429 ;;		_Lcd_Out
  7430 ;;		_appLCD_Init
  7431 ;;		_appGetElements
  7432 ;;		_Lcd_Out2
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	text40
  7437  0025CC                     __ptext40:
  7438                           	callstack 0
  7439  0025CC                     _Lcd_Cmd:
  7440                           	callstack 25
  7441                           
  7442                           ;incstack = 0
  7443                           ;Lcd_Cmd@data stored from wreg
  7444  0025CC  6E06               	movwf	Lcd_Cmd@data^0,c
  7445  0025CE                     
  7446                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  7447  0025CE  968C               	bcf	140,3,c	;volatile
  7448  0025D0  948C               	bcf	140,2,c	;volatile
  7449  0025D2                     
  7450                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  7451  0025D2  6A04               	clrf	??_Lcd_Cmd^0,c
  7452  0025D4  AE06               	btfss	Lcd_Cmd@data^0,7,c
  7453  0025D6  D001               	bra	u2485
  7454  0025D8  2A04               	incf	??_Lcd_Cmd^0,f,c
  7455  0025DA                     u2485:
  7456  0025DA  0E01               	movlw	1
  7457  0025DC  1604               	andwf	??_Lcd_Cmd^0,f,c
  7458  0025DE  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7459  0025E0  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7460  0025E2  508C               	movf	140,w,c	;volatile
  7461  0025E4  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7462  0025E6  0B7F               	andlw	-129
  7463  0025E8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7464  0025EA  6E8C               	movwf	140,c	;volatile
  7465                           
  7466                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  7467  0025EC  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7468  0025F0  0E06               	movlw	6
  7469  0025F2  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7470  0025F4                     u2495:
  7471  0025F4  90D8               	bcf	status,0,c
  7472  0025F6  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7473  0025F8  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7474  0025FA  EFFA  F012         	goto	u2495
  7475  0025FE  0E01               	movlw	1
  7476  002600  1604               	andwf	??_Lcd_Cmd^0,f,c
  7477  002602  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7478  002604  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7479  002606  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7480  002608  508C               	movf	140,w,c	;volatile
  7481  00260A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7482  00260C  0BBF               	andlw	-65
  7483  00260E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7484  002610  6E8C               	movwf	140,c	;volatile
  7485                           
  7486                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  7487  002612  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7488  002616  0E05               	movlw	5
  7489  002618  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7490  00261A                     u2505:
  7491  00261A  90D8               	bcf	status,0,c
  7492  00261C  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7493  00261E  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7494  002620  EF0D  F013         	goto	u2505
  7495  002624  0E01               	movlw	1
  7496  002626  1604               	andwf	??_Lcd_Cmd^0,f,c
  7497  002628  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7498  00262A  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7499  00262C  508C               	movf	140,w,c	;volatile
  7500  00262E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7501  002630  0BDF               	andlw	-33
  7502  002632  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7503  002634  6E8C               	movwf	140,c	;volatile
  7504                           
  7505                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  7506  002636  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7507  00263A  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7508  00263C  0E0F               	movlw	15
  7509  00263E  1604               	andwf	??_Lcd_Cmd^0,f,c
  7510  002640  0E01               	movlw	1
  7511  002642  1604               	andwf	??_Lcd_Cmd^0,f,c
  7512  002644  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7513  002646  508C               	movf	140,w,c	;volatile
  7514  002648  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7515  00264A  0BEF               	andlw	-17
  7516  00264C  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7517  00264E  6E8C               	movwf	140,c	;volatile
  7518  002650                     
  7519                           ;flex_lcd.c: 182:     _delay(10);
  7520  002650  0E03               	movlw	3
  7521  002652                     u4557:
  7522  002652  2EE8               	decfsz	wreg,f,c
  7523  002654  D7FE               	bra	u4557
  7524  002656  F000               	nop	
  7525  002658                     
  7526                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  7527  002658  868C               	bsf	140,3,c	;volatile
  7528  00265A                     
  7529                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7530  00265A  0E05               	movlw	5
  7531  00265C                     u4567:
  7532  00265C  2EE8               	decfsz	wreg,f,c
  7533  00265E  D7FE               	bra	u4567
  7534  002660                     
  7535                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  7536  002660  968C               	bcf	140,3,c	;volatile
  7537                           
  7538                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  7539  002662  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7540  002666  90D8               	bcf	status,0,c
  7541  002668  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7542  00266A  90D8               	bcf	status,0,c
  7543  00266C  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7544  00266E  90D8               	bcf	status,0,c
  7545  002670  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7546  002672  0E01               	movlw	1
  7547  002674  1604               	andwf	??_Lcd_Cmd^0,f,c
  7548  002676  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7549  002678  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7550  00267A  508C               	movf	140,w,c	;volatile
  7551  00267C  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7552  00267E  0B7F               	andlw	-129
  7553  002680  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7554  002682  6E8C               	movwf	140,c	;volatile
  7555                           
  7556                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  7557  002684  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7558  002688  90D8               	bcf	status,0,c
  7559  00268A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7560  00268C  90D8               	bcf	status,0,c
  7561  00268E  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7562  002690  0E01               	movlw	1
  7563  002692  1604               	andwf	??_Lcd_Cmd^0,f,c
  7564  002694  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7565  002696  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7566  002698  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7567  00269A  508C               	movf	140,w,c	;volatile
  7568  00269C  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7569  00269E  0BBF               	andlw	-65
  7570  0026A0  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7571  0026A2  6E8C               	movwf	140,c	;volatile
  7572                           
  7573                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  7574  0026A4  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7575  0026A8  90D8               	bcf	status,0,c
  7576  0026AA  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7577  0026AC  0E01               	movlw	1
  7578  0026AE  1604               	andwf	??_Lcd_Cmd^0,f,c
  7579  0026B0  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7580  0026B2  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7581  0026B4  508C               	movf	140,w,c	;volatile
  7582  0026B6  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7583  0026B8  0BDF               	andlw	-33
  7584  0026BA  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7585  0026BC  6E8C               	movwf	140,c	;volatile
  7586                           
  7587                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  7588  0026BE  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7589  0026C2  0E01               	movlw	1
  7590  0026C4  1604               	andwf	??_Lcd_Cmd^0,f,c
  7591  0026C6  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7592  0026C8  508C               	movf	140,w,c	;volatile
  7593  0026CA  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7594  0026CC  0BEF               	andlw	-17
  7595  0026CE  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7596  0026D0  6E8C               	movwf	140,c	;volatile
  7597  0026D2                     
  7598                           ;flex_lcd.c: 190:     _delay(10);
  7599  0026D2  0E03               	movlw	3
  7600  0026D4                     u4577:
  7601  0026D4  2EE8               	decfsz	wreg,f,c
  7602  0026D6  D7FE               	bra	u4577
  7603  0026D8  F000               	nop	
  7604  0026DA                     
  7605                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  7606  0026DA  868C               	bsf	140,3,c	;volatile
  7607  0026DC                     
  7608                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7609  0026DC  0E05               	movlw	5
  7610  0026DE                     u4587:
  7611  0026DE  2EE8               	decfsz	wreg,f,c
  7612  0026E0  D7FE               	bra	u4587
  7613  0026E2                     
  7614                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  7615  0026E2  968C               	bcf	140,3,c	;volatile
  7616  0026E4                     
  7617                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7618  0026E4  0E16               	movlw	22
  7619  0026E6  6E04               	movwf	??_Lcd_Cmd^0,c
  7620  0026E8  0E6C               	movlw	108
  7621  0026EA                     u4597:
  7622  0026EA  2EE8               	decfsz	wreg,f,c
  7623  0026EC  D7FE               	bra	u4597
  7624  0026EE  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  7625  0026F0  D7FC               	bra	u4597
  7626  0026F2  D000               	nop2	
  7627  0026F4  0012               	return		;funcret
  7628  0026F6                     __end_of_Lcd_Cmd:
  7629                           	callstack 0
  7630                           
  7631 ;; *************** function _Lcd_Chr_CP *****************
  7632 ;; Defined at:
  7633 ;;		line 151 in file "flex_lcd.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;  data            1    wreg     char 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  data            1    5[COMRAM] char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2, status,0
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7647 ;;      Params:         0       0       0       0       0       0       0       0       0
  7648 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7649 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7650 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7651 ;;Total ram usage:        3 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; Hardware stack levels required when called:    2
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_Lcd_Out
  7658 ;;		_Lcd_Out2
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text41
  7663  00233A                     __ptext41:
  7664                           	callstack 0
  7665  00233A                     _Lcd_Chr_CP:
  7666                           	callstack 25
  7667                           
  7668                           ;incstack = 0
  7669                           ;Lcd_Chr_CP@data stored from wreg
  7670  00233A  6E06               	movwf	Lcd_Chr_CP@data^0,c
  7671  00233C                     
  7672                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  7673  00233C  968C               	bcf	140,3,c	;volatile
  7674                           
  7675                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  7676  00233E  848C               	bsf	140,2,c	;volatile
  7677  002340                     
  7678                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  7679  002340  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7680  002344  0E07               	movlw	7
  7681  002346  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7682  002348                     u2515:
  7683  002348  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7684  00234A  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7685  00234C  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7686  00234E  EFA4  F011         	goto	u2515
  7687  002352  0E01               	movlw	1
  7688  002354  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7689  002356  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7690  002358  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7691  00235A  508C               	movf	140,w,c	;volatile
  7692  00235C  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7693  00235E  0B7F               	andlw	-129
  7694  002360  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7695  002362  6E8C               	movwf	140,c	;volatile
  7696                           
  7697                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  7698  002364  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7699  002368  0E06               	movlw	6
  7700  00236A  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7701  00236C                     u2525:
  7702  00236C  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7703  00236E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7704  002370  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7705  002372  EFB6  F011         	goto	u2525
  7706  002376  0E01               	movlw	1
  7707  002378  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7708  00237A  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7709  00237C  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7710  00237E  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7711  002380  508C               	movf	140,w,c	;volatile
  7712  002382  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7713  002384  0BBF               	andlw	-65
  7714  002386  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7715  002388  6E8C               	movwf	140,c	;volatile
  7716                           
  7717                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  7718  00238A  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7719  00238E  0E05               	movlw	5
  7720  002390  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7721  002392                     u2535:
  7722  002392  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7723  002394  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7724  002396  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7725  002398  EFC9  F011         	goto	u2535
  7726  00239C  0E01               	movlw	1
  7727  00239E  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7728  0023A0  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7729  0023A2  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7730  0023A4  508C               	movf	140,w,c	;volatile
  7731  0023A6  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7732  0023A8  0BDF               	andlw	-33
  7733  0023AA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7734  0023AC  6E8C               	movwf	140,c	;volatile
  7735                           
  7736                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  7737  0023AE  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7738  0023B2  0E04               	movlw	4
  7739  0023B4  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7740  0023B6                     u2545:
  7741  0023B6  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7742  0023B8  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7743  0023BA  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7744  0023BC  EFDB  F011         	goto	u2545
  7745  0023C0  0E01               	movlw	1
  7746  0023C2  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7747  0023C4  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7748  0023C6  508C               	movf	140,w,c	;volatile
  7749  0023C8  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7750  0023CA  0BEF               	andlw	-17
  7751  0023CC  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7752  0023CE  6E8C               	movwf	140,c	;volatile
  7753  0023D0                     
  7754                           ;flex_lcd.c: 159:     _delay(10);
  7755  0023D0  0E03               	movlw	3
  7756  0023D2                     u4607:
  7757  0023D2  2EE8               	decfsz	wreg,f,c
  7758  0023D4  D7FE               	bra	u4607
  7759  0023D6  F000               	nop	
  7760  0023D8                     
  7761                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  7762  0023D8  868C               	bsf	140,3,c	;volatile
  7763  0023DA                     
  7764                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7765  0023DA  0E05               	movlw	5
  7766  0023DC                     u4617:
  7767  0023DC  2EE8               	decfsz	wreg,f,c
  7768  0023DE  D7FE               	bra	u4617
  7769  0023E0                     
  7770                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  7771  0023E0  968C               	bcf	140,3,c	;volatile
  7772                           
  7773                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  7774  0023E2  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7775  0023E6  0E03               	movlw	3
  7776  0023E8  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7777  0023EA                     u2555:
  7778  0023EA  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7779  0023EC  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7780  0023EE  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7781  0023F0  EFF5  F011         	goto	u2555
  7782  0023F4  0E01               	movlw	1
  7783  0023F6  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7784  0023F8  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7785  0023FA  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7786  0023FC  508C               	movf	140,w,c	;volatile
  7787  0023FE  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7788  002400  0B7F               	andlw	-129
  7789  002402  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7790  002404  6E8C               	movwf	140,c	;volatile
  7791                           
  7792                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  7793  002406  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7794  00240A  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7795  00240C  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7796  00240E  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7797  002410  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7798  002412  0E01               	movlw	1
  7799  002414  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7800  002416  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7801  002418  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7802  00241A  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7803  00241C  508C               	movf	140,w,c	;volatile
  7804  00241E  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7805  002420  0BBF               	andlw	-65
  7806  002422  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7807  002424  6E8C               	movwf	140,c	;volatile
  7808                           
  7809                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  7810  002426  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7811  00242A  0E01               	movlw	1
  7812  00242C  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7813  00242E                     u2565:
  7814  00242E  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7815  002430  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7816  002432  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7817  002434  EF17  F012         	goto	u2565
  7818  002438  0E01               	movlw	1
  7819  00243A  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7820  00243C  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7821  00243E  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7822  002440  508C               	movf	140,w,c	;volatile
  7823  002442  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7824  002444  0BDF               	andlw	-33
  7825  002446  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7826  002448  6E8C               	movwf	140,c	;volatile
  7827                           
  7828                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  7829  00244A  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7830  00244E  0E01               	movlw	1
  7831  002450  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7832  002452  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7833  002454  508C               	movf	140,w,c	;volatile
  7834  002456  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7835  002458  0BEF               	andlw	-17
  7836  00245A  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7837  00245C  6E8C               	movwf	140,c	;volatile
  7838  00245E                     
  7839                           ;flex_lcd.c: 167:     _delay(10);
  7840  00245E  0E03               	movlw	3
  7841  002460                     u4627:
  7842  002460  2EE8               	decfsz	wreg,f,c
  7843  002462  D7FE               	bra	u4627
  7844  002464  F000               	nop	
  7845  002466                     
  7846                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  7847  002466  868C               	bsf	140,3,c	;volatile
  7848  002468                     
  7849                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7850  002468  0E05               	movlw	5
  7851  00246A                     u4637:
  7852  00246A  2EE8               	decfsz	wreg,f,c
  7853  00246C  D7FE               	bra	u4637
  7854  00246E                     
  7855                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  7856  00246E  968C               	bcf	140,3,c	;volatile
  7857  002470                     
  7858                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7859  002470  0E05               	movlw	5
  7860  002472                     u4647:
  7861  002472  2EE8               	decfsz	wreg,f,c
  7862  002474  D7FE               	bra	u4647
  7863  002476                     
  7864                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7865  002476  0E16               	movlw	22
  7866  002478  6E04               	movwf	??_Lcd_Chr_CP^0,c
  7867  00247A  0E6C               	movlw	108
  7868  00247C                     u4657:
  7869  00247C  2EE8               	decfsz	wreg,f,c
  7870  00247E  D7FE               	bra	u4657
  7871  002480  2E04               	decfsz	??_Lcd_Chr_CP^0,f,c
  7872  002482  D7FC               	bra	u4657
  7873  002484  D000               	nop2	
  7874  002486  0012               	return		;funcret
  7875  002488                     __end_of_Lcd_Chr_CP:
  7876                           	callstack 0
  7877                           
  7878 ;; *************** function _isrL *****************
  7879 ;; Defined at:
  7880 ;;		line 83 in file "app.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;		None
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;		None
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      void 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7894 ;;      Params:         0       0       0       0       0       0       0       0       0
  7895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7896 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7897 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7898 ;;Total ram usage:        3 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    1
  7901 ;; This function calls:
  7902 ;;		Nothing
  7903 ;; This function is called by:
  7904 ;;		Interrupt level 1
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	intcodelo
  7909  000018                     __pintcodelo:
  7910                           	callstack 0
  7911  000018                     _isrL:
  7912                           	callstack 19
  7913                           
  7914                           ;incstack = 0
  7915  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7916  00001A  CFD8 F001          	movff	status,??_isrL
  7917  00001E  CFE8 F002          	movff	wreg,??_isrL+1
  7918  000022  CFE0 F003          	movff	bsr,??_isrL+2
  7919  000026                     
  7920                           ;app.c: 85:     if(TMR3IE && TMR3IF)
  7921  000026  A2A0               	btfss	4000,1,c	;volatile
  7922  000028  EF18  F000         	goto	i1u437_21
  7923  00002C  EF1A  F000         	goto	i1u437_20
  7924  000030                     i1u437_21:
  7925  000030  EF4D  F000         	goto	i1l274
  7926  000034                     i1u437_20:
  7927  000034  A2A1               	btfss	4001,1,c	;volatile
  7928  000036  EF1F  F000         	goto	i1u438_21
  7929  00003A  EF21  F000         	goto	i1u438_20
  7930  00003E                     i1u438_21:
  7931  00003E  EF4D  F000         	goto	i1l274
  7932  000042                     i1u438_20:
  7933  000042                     
  7934                           ;app.c: 86:     {;app.c: 87:         TMR3IF = 0;
  7935  000042  92A1               	bcf	4001,1,c	;volatile
  7936  000044                     
  7937                           ;app.c: 88:         datos.counter++;
  7938  000044  0100               	movlb	0	; () banked
  7939  000046  2BB8               	incf	_datos& (0+255),f,b
  7940  000048                     
  7941                           ; BSR set to: 0
  7942                           ;app.c: 89:         if((datos.counter == 10) && (datos.state == 0))
  7943  000048  0E0A               	movlw	10
  7944  00004A  19B8               	xorwf	_datos& (0+255),w,b
  7945  00004C  A4D8               	btfss	status,2,c
  7946  00004E  EF2B  F000         	goto	i1u439_21
  7947  000052  EF2D  F000         	goto	i1u439_20
  7948  000056                     i1u439_21:
  7949  000056  EF3D  F000         	goto	i1l4251
  7950  00005A                     i1u439_20:
  7951  00005A                     
  7952                           ; BSR set to: 0
  7953  00005A  51BB               	movf	(_datos+3)& (0+255),w,b
  7954  00005C  A4D8               	btfss	status,2,c
  7955  00005E  EF33  F000         	goto	i1u440_21
  7956  000062  EF35  F000         	goto	i1u440_20
  7957  000066                     i1u440_21:
  7958  000066  EF3D  F000         	goto	i1l4251
  7959  00006A                     i1u440_20:
  7960  00006A                     
  7961                           ; BSR set to: 0
  7962                           ;app.c: 90:         {;app.c: 91:             datos.counter = 0;
  7963  00006A  0E00               	movlw	0
  7964  00006C  6FB8               	movwf	_datos& (0+255),b
  7965  00006E                     
  7966                           ; BSR set to: 0
  7967                           ;app.c: 92:             datos.nextFunc = appStateRecolectData;
  7968  00006E  0E88               	movlw	low _appStateRecolectData
  7969  000070  6FCF               	movwf	(_datos+23)& (0+255),b
  7970  000072  0E2F               	movlw	high _appStateRecolectData
  7971  000074  6FD0               	movwf	(_datos+24)& (0+255),b
  7972                           
  7973                           ;app.c: 93:         }
  7974  000076  EF49  F000         	goto	i1l4255
  7975  00007A                     i1l4251:
  7976                           
  7977                           ; BSR set to: 0
  7978  00007A  05BB               	decf	(_datos+3)& (0+255),w,b
  7979  00007C  A4D8               	btfss	status,2,c
  7980  00007E  EF43  F000         	goto	i1u441_21
  7981  000082  EF45  F000         	goto	i1u441_20
  7982  000086                     i1u441_21:
  7983  000086  EF49  F000         	goto	i1l4255
  7984  00008A                     i1u441_20:
  7985  00008A                     
  7986                           ; BSR set to: 0
  7987                           ;app.c: 95:         {;app.c: 96:             datos.nextFunc = appGetElements;
  7988  00008A  0EEA               	movlw	low _appGetElements
  7989  00008C  6FCF               	movwf	(_datos+23)& (0+255),b
  7990  00008E  0E1E               	movlw	high _appGetElements
  7991  000090  6FD0               	movwf	(_datos+24)& (0+255),b
  7992  000092                     i1l4255:
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;app.c: 98:         TMR3 = 20536;
  7996  000092  0E50               	movlw	80
  7997  000094  6EB3               	movwf	179,c	;volatile
  7998  000096  0E38               	movlw	56
  7999  000098  6EB2               	movwf	178,c	;volatile
  8000  00009A                     i1l274:
  8001  00009A  C003  FFE0         	movff	??_isrL+2,bsr
  8002  00009E  C002  FFE8         	movff	??_isrL+1,wreg
  8003  0000A2  C001  FFD8         	movff	??_isrL,status
  8004  0000A6  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8005  0000A8  0010               	retfie	
  8006  0000AA                     __end_of_isrL:
  8007                           	callstack 0
  8008                           
  8009 ;; *************** function _isrH *****************
  8010 ;; Defined at:
  8011 ;;		line 101 in file "app.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;		None
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;		None
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1    wreg      void 
  8018 ;; Registers used:
  8019 ;;		None
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8025 ;;      Params:         0       0       0       0       0       0       0       0       0
  8026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8028 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8029 ;;Total ram usage:        0 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		Interrupt level 2
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	intcode
  8039  000008                     __pintcode:
  8040                           	callstack 0
  8041  000008                     _isrH:
  8042                           	callstack 19
  8043                           
  8044                           ;incstack = 0
  8045  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8046  00000A  ED4E  F018         	call	int_func,f	;refresh shadow registers
  8047  00000E                     
  8048                           	psect	intcode_body
  8049  00309C                     __pintcode_body:
  8050                           	callstack 19
  8051  00309C                     int_func:
  8052                           	callstack 19
  8053  00309C  0006               	pop		; remove dummy address from shadow register refresh
  8054  00309E  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8055  0030A0  0011               	retfie		f
  8056  0030A2                     __end_of_isrH:
  8057                           	callstack 0
  8058                           
  8059                           	psect	rparam
  8060  0000                     
  8061                           	psect	temp
  8062  00005C                     btemp:
  8063                           	callstack 0
  8064  00005C                     	ds	1
  8065  0000                     int$flags	set	btemp
  8066  0000                     wtemp8	set	btemp+1
  8067  0000                     ttemp5	set	btemp+1
  8068  0000                     ttemp6	set	btemp+4
  8069  0000                     ttemp7	set	btemp+8
  8070                           
  8071                           	psect	idloc
  8072                           
  8073                           ;Config register IDLOC0 @ 0x200000
  8074                           ;	unspecified, using default values
  8075  200000                     	org	2097152
  8076  200000  FF                 	db	255
  8077                           
  8078                           ;Config register IDLOC1 @ 0x200001
  8079                           ;	unspecified, using default values
  8080  200001                     	org	2097153
  8081  200001  FF                 	db	255
  8082                           
  8083                           ;Config register IDLOC2 @ 0x200002
  8084                           ;	unspecified, using default values
  8085  200002                     	org	2097154
  8086  200002  FF                 	db	255
  8087                           
  8088                           ;Config register IDLOC3 @ 0x200003
  8089                           ;	unspecified, using default values
  8090  200003                     	org	2097155
  8091  200003  FF                 	db	255
  8092                           
  8093                           ;Config register IDLOC4 @ 0x200004
  8094                           ;	unspecified, using default values
  8095  200004                     	org	2097156
  8096  200004  FF                 	db	255
  8097                           
  8098                           ;Config register IDLOC5 @ 0x200005
  8099                           ;	unspecified, using default values
  8100  200005                     	org	2097157
  8101  200005  FF                 	db	255
  8102                           
  8103                           ;Config register IDLOC6 @ 0x200006
  8104                           ;	unspecified, using default values
  8105  200006                     	org	2097158
  8106  200006  FF                 	db	255
  8107                           
  8108                           ;Config register IDLOC7 @ 0x200007
  8109                           ;	unspecified, using default values
  8110  200007                     	org	2097159
  8111  200007  FF                 	db	255
  8112                           
  8113                           	psect	config
  8114                           
  8115                           ;Config register CONFIG1L @ 0x300000
  8116                           ;	PLL Prescaler Selection bits
  8117                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8118                           ;	System Clock Postscaler Selection bits
  8119                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8120                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8121                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8122  300000                     	org	3145728
  8123  300000  00                 	db	0
  8124                           
  8125                           ;Config register CONFIG1H @ 0x300001
  8126                           ;	Oscillator Selection bits
  8127                           ;	FOSC = HS, HS oscillator (HS)
  8128                           ;	Fail-Safe Clock Monitor Enable bit
  8129                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8130                           ;	Internal/External Oscillator Switchover bit
  8131                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8132  300001                     	org	3145729
  8133  300001  0C                 	db	12
  8134                           
  8135                           ;Config register CONFIG2L @ 0x300002
  8136                           ;	Power-up Timer Enable bit
  8137                           ;	PWRT = OFF, PWRT disabled
  8138                           ;	Brown-out Reset Enable bits
  8139                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8140                           ;	Brown-out Reset Voltage bits
  8141                           ;	BORV = 3, Minimum setting 2.05V
  8142                           ;	USB Voltage Regulator Enable bit
  8143                           ;	VREGEN = OFF, USB voltage regulator disabled
  8144  300002                     	org	3145730
  8145  300002  19                 	db	25
  8146                           
  8147                           ;Config register CONFIG2H @ 0x300003
  8148                           ;	Watchdog Timer Enable bit
  8149                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8150                           ;	Watchdog Timer Postscale Select bits
  8151                           ;	WDTPS = 32768, 1:32768
  8152  300003                     	org	3145731
  8153  300003  1E                 	db	30
  8154                           
  8155                           ; Padding undefined space
  8156  300004                     	org	3145732
  8157  300004  FF                 	db	255
  8158                           
  8159                           ;Config register CONFIG3H @ 0x300005
  8160                           ;	CCP2 MUX bit
  8161                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8162                           ;	PORTB A/D Enable bit
  8163                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8164                           ;	Low-Power Timer 1 Oscillator Enable bit
  8165                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8166                           ;	MCLR Pin Enable bit
  8167                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8168  300005                     	org	3145733
  8169  300005  81                 	db	129
  8170                           
  8171                           ;Config register CONFIG4L @ 0x300006
  8172                           ;	Stack Full/Underflow Reset Enable bit
  8173                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8174                           ;	Single-Supply ICSP Enable bit
  8175                           ;	LVP = OFF, Single-Supply ICSP disabled
  8176                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8177                           ;	ICPRT = OFF, ICPORT disabled
  8178                           ;	Extended Instruction Set Enable bit
  8179                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8180                           ;	Background Debugger Enable bit
  8181                           ;	DEBUG = 0x1, unprogrammed default
  8182  300006                     	org	3145734
  8183  300006  81                 	db	129
  8184                           
  8185                           ; Padding undefined space
  8186  300007                     	org	3145735
  8187  300007  FF                 	db	255
  8188                           
  8189                           ;Config register CONFIG5L @ 0x300008
  8190                           ;	Code Protection bit
  8191                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8192                           ;	Code Protection bit
  8193                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8194                           ;	Code Protection bit
  8195                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8196                           ;	Code Protection bit
  8197                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8198  300008                     	org	3145736
  8199  300008  0F                 	db	15
  8200                           
  8201                           ;Config register CONFIG5H @ 0x300009
  8202                           ;	Boot Block Code Protection bit
  8203                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8204                           ;	Data EEPROM Code Protection bit
  8205                           ;	CPD = OFF, Data EEPROM is not code-protected
  8206  300009                     	org	3145737
  8207  300009  C0                 	db	192
  8208                           
  8209                           ;Config register CONFIG6L @ 0x30000A
  8210                           ;	Write Protection bit
  8211                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8212                           ;	Write Protection bit
  8213                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8214                           ;	Write Protection bit
  8215                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8216                           ;	Write Protection bit
  8217                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8218  30000A                     	org	3145738
  8219  30000A  0F                 	db	15
  8220                           
  8221                           ;Config register CONFIG6H @ 0x30000B
  8222                           ;	Configuration Register Write Protection bit
  8223                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8224                           ;	Boot Block Write Protection bit
  8225                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8226                           ;	Data EEPROM Write Protection bit
  8227                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8228  30000B                     	org	3145739
  8229  30000B  E0                 	db	224
  8230                           
  8231                           ;Config register CONFIG7L @ 0x30000C
  8232                           ;	Table Read Protection bit
  8233                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8234                           ;	Table Read Protection bit
  8235                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8236                           ;	Table Read Protection bit
  8237                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8238                           ;	Table Read Protection bit
  8239                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8240  30000C                     	org	3145740
  8241  30000C  0F                 	db	15
  8242                           
  8243                           ;Config register CONFIG7H @ 0x30000D
  8244                           ;	Boot Block Table Read Protection bit
  8245                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8246  30000D                     	org	3145741
  8247  30000D  40                 	db	64
  8248                           tosu	equ	0xFFF
  8249                           tosh	equ	0xFFE
  8250                           tosl	equ	0xFFD
  8251                           stkptr	equ	0xFFC
  8252                           pclatu	equ	0xFFB
  8253                           pclath	equ	0xFFA
  8254                           pcl	equ	0xFF9
  8255                           tblptru	equ	0xFF8
  8256                           tblptrh	equ	0xFF7
  8257                           tblptrl	equ	0xFF6
  8258                           tablat	equ	0xFF5
  8259                           prodh	equ	0xFF4
  8260                           prodl	equ	0xFF3
  8261                           indf0	equ	0xFEF
  8262                           postinc0	equ	0xFEE
  8263                           postdec0	equ	0xFED
  8264                           preinc0	equ	0xFEC
  8265                           plusw0	equ	0xFEB
  8266                           fsr0h	equ	0xFEA
  8267                           fsr0l	equ	0xFE9
  8268                           wreg	equ	0xFE8
  8269                           indf1	equ	0xFE7
  8270                           postinc1	equ	0xFE6
  8271                           postdec1	equ	0xFE5
  8272                           preinc1	equ	0xFE4
  8273                           plusw1	equ	0xFE3
  8274                           fsr1h	equ	0xFE2
  8275                           fsr1l	equ	0xFE1
  8276                           bsr	equ	0xFE0
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           preinc2	equ	0xFDC
  8281                           plusw2	equ	0xFDB
  8282                           fsr2h	equ	0xFDA
  8283                           fsr2l	equ	0xFD9
  8284                           status	equ	0xFD8

Data Sizes:
    Strings     60
    Constant    0
    Data        25
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      91
    BANK0           160     46     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1622_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@elements	PTR const short  size(2) Largest target is 25
		 -> datos.elements(BANK0[2]), datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_6(CODE[14]), appElemts@dataout(BANK0[6]), STR_4(CODE[6]), STR_3(CODE[12]), 
		 -> datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appGetElements@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    S164_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _appADC->___awmod
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_teclado
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _sprintf->___awmod
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appBat
    _appStateRecolectData->_appElemts
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    _appGetElements->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   72201
                                             44 BANK0      2     2      0
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   53217
                             _appADC
                             _appBat
                          _appElemts
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            8     6      2   13374
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   19758
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20085
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                              7 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     479
                                             71 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             46 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             81 COMRAM     6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0     526
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    2132
                            _adcInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2088
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              6 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       5     5      0   16326
                                             36 BANK0      5     5      0
                            _Lcd_Cmd
                            _Lcd_Out
                             ___wmul
                      _appTimerStart
                       _appTimerStop
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   11573
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   10541
                                             76 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   10011
                                             66 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1795
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     692
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1403
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Out                                              7     4      3    1597
                                              6 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Chr_CP                                           3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     ___wmul
     _appTimerStart
     _appTimerStop
     _memset
     _sprintf
       ___awmod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
     _teclado
   _appInit *
     _adcInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
   _appStateInitial *
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      20        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 30 21:03:11 2021

                 ___fldiv@aexp 0047                   ___fldiv@bexp 0046                   ___fldiv@sign 003F  
                           l23 2E06                             l32 25CA                             l26 2F38  
                           l35 1A1C                             l28 2F46                             l29 2F4E  
                           l86 1834                             l99 2A74                             bsr 000FE0  
          ___wmul@multiplicand 0006                            l100 2AC0                            l101 2B12  
                          l200 2E4C                            l130 2486                            l114 28C6  
                          l133 26F4                            l136 2C46                            l250 2FBC  
                          l254 301A                            l262 205E                            l247 3072  
                          l192 3092                            l409 2338                            l265 309A  
                          l282 3040                            l195 30A4                            l189 3086  
                          l526 2BC2                            l396 1EE8                            l900 0C66  
                          l903 0AF8                            l913 0C28                            l905 0B70  
                          l906 0B5E                            l579 27FA                            l940 1BD0  
                          l951 1B68                            l864 1000                            l944 1B0C  
                          l937 1A74                            l970 2D6C                            l866 0E60  
                          l875 0EA6                            l957 21D4                            l877 0F1E  
                          l869 0E24                            l878 0F0C                            l896 0902  
              adcInit@ADC_PINs 0005                            _PR2 000FCB                            _abs 2ED4  
                          _pad 2992                   ___awmod@sign 0057                            tosl 000FFD  
                          wreg 000FE8                   ___flmul@aexp 0027                   ___flmul@bexp 0028  
                 ___flmul@sign 0022                   ___flmul@temp 002D                   ___flmul@prod 0029  
                 ___fltol@exp1 0051                           l1001 29D6                           l1004 2A18  
                         l1012 140C                           l1006 2A52                           l1014 1414  
                         l1103 1D58                           l1032 164A                           l1106 1D60  
                         ?_abs 0016                           l1132 2990                           l1140 2E90  
                         l1109 2F86                           l1117 2DBE                           l1061 136C  
                         l1046 10F4                           l1143 30A6                           l1072 2F0A  
                         l3001 2AE4                           l1075 2F12                           l1067 2D12  
                         l3011 2AFA                           l3003 2AE6                           l1068 2D1A  
                         l1149 2FF2                           l3021 2B0C                           l3013 2B00  
                         l3005 2AE8                           l3101 0E2E                           l3023 2B0C  
                         l3015 2B00                           l3007 2AFA                           l3111 0E86  
                         l3103 0E4C                           l3031 0C84                           l4001 1C60  
                         l3017 2B06                           l3009 2AFA                           l3121 0EC4  
                         l3113 0E8C                           l3105 0E4E                           l3033 0C94  
                         l3041 0CBE                           l3025 0C68                           l4011 1CDA  
                         l4003 1C68                           l3019 2B06                           l3131 0F2E  
                         l3123 0EC8                           l3115 0E96                           l3107 0E5E  
                         l3051 0CEA                           l3043 0CCE                           l3035 0CA4  
                         l3027 0C74                           l3211 096E                           l3203 0936  
                         l4005 1C70                           l3301 2B32                           l3141 0F90  
                         l3133 0F3A                           l3125 0ED6                           l3117 0EA4  
                         l3109 0E70                           l3053 0CFA                           l3061 0D24  
                         l3045 0CD4                           l3037 0CB4                           l3029 0C82  
                         l3221 09B8                           l3213 0986                           l3205 0942  
                         l4015 1D18                           l4007 1CA4                           l4111 135A  
                         l4103 131C                           l4031 1046                           l3311 2B6A  
                         l3303 2B40                           l3151 0FEE                           l3143 0FA6  
                         l3135 0F48                           l3127 0F04                           l3119 0EB6  
                         l3071 0D66                           l3063 0D34                           l3055 0D0A  
                         l3047 0CDA                           l3039 0CB6                           l3231 0A0E  
                         l3223 09C8                           l3215 0992                           l3207 094C  
                         l4017 1D2A                           l4105 132A                           l4033 104A  
                         l4025 1002                           l3313 2B78                           l3321 2BA2  
                         l3305 2B48                           l3153 0FF4                           l3145 0FC0  
                         l3137 0F72                           l3065 0D4A                           l3057 0D1A  
                         l3049 0CE8                           l3241 0AB2                           l3233 0A2A  
                         l3225 09D4                           l3217 099E                           l3209 0962  
                         l3401 1B58                           l4201 1FC4                           l4019 1D3C  
                         l4051 107C                           l4043 1070                           l4035 1056  
                         l4027 1026                           l4131 2CD0                           l3323 2BB2  
                         l3315 2B8E                           l3307 2B5A                           l3155 0FF6  
                         l3147 0FDC                           l3139 0F76                           l3091 0DE8  
                         l3083 0D9E                           l3067 0D5A                           l3075 0D7A  
                         l3059 0D1C                           l3251 0B08                           l3243 0AC0  
                         l3235 0A36                           l3227 09E4                           l3219 09AC  
                         l3171 086A                           l3163 083E                           l3331 270C  
                         l3411 1BB0                           l3403 1B76                           l4211 2010  
                         l4203 1FD6                           l4037 1058                           l4061 10E2  
                         l4029 1034                           l4109 1336                           l4133 2CF6  
                         l4141 2D3E                           l3501 174A                           l3421 2DD2  
                         l3325 2BBA                           l3317 2B96                           l3309 2B62  
                         l3149 0FE0                           l3093 0DF0                           l3085 0DB8  
                         l3077 0D8A                           l3069 0D62                           l3253 0B16  
                         l3245 0ADE                           l3237 0A52                           l3229 09FE  
                         l3181 08A6                           l3173 087A                           l3165 084A  
                         l3341 275C                           l3413 1BBE                           l3405 1B78  
                         l4213 2018                           l4205 1FEA                           l4221 2C48  
                         l4071 116C                           l4063 1102                           l4055 1082  
                         l4047 1076                           l4039 106A                           l4127 2CBA  
                         l4143 2D5A                           l4135 2D1C                           l3511 178C  
                         l3503 1758                           l3431 2E02                           l3423 2DDE  
                         l3319 2B9C                           l3095 0E00                           l3087 0DC8  
                         l3079 0D8A                           l3263 0B80                           l3271 0BC8  
                         l3255 0B1A                           l3247 0AE8                           l3239 0A7C  
                         l3191 08DC                           l3183 08AC                           l3175 088A  
                         l3167 0858                           l3351 2786                           l3343 2760  
                         l3335 2720                           l3415 1BC0                           l3407 1B7C  
                         l4151 24D2                           l4215 2032                           l4207 1FF2  
                         l4231 2C7C                           l4223 2C4C                           l4081 11F0  
                         l4073 117A                           l4065 1104                           l4129 2CC2  
                         l4137 2D2E                           l3521 17C4                           l3513 1798  
                         l3505 1764                           l3433 2E04                           l3425 2DEE  
                         l3097 0E14                           l3089 0DD8                           l3281 0C3C  
                         l3273 0BE2                           l3265 0B8C                           l3257 0B28  
                         l3249 0AF6                           l3193 08EC                           l3185 08BA  
                         l3177 0890                           l3169 085A                           l3361 27AE  
                         l3353 2790                           l3345 276E                           l3337 274A  
                         l3329 26F6                           l3409 1BA0                           l4153 252A  
                         l4161 18F2                           l4217 2038                           l4209 1FF6  
                         l4233 2C94                           l4225 2C4E                           l4075 119A  
                         l4083 1202                           l4067 1128                           l4059 108E  
                         l4139 2D36                           l3531 1804                           l3523 17D0  
                         l3515 17A6                           l3507 1772                           l3427 2DF2  
                         l3419 2DC2                           l3099 0E22                           l3283 0C4A  
                         l3275 0BF6                           l3267 0B9A                           l3259 0B56  
                         l3195 08F2                           l3187 08BC                           l3179 08A0  
                         l3363 27BA                           l3355 279A                           l3339 274C  
                         l4155 25B2                           l4147 2488                           l4163 1940  
                         l4171 2E14                           l4219 2050                           l4227 2C50  
                         l2901 207E                           l4093 12CA                           l4085 1226  
                         l4077 11A8                           l4069 115E                           l3533 1812  
                         l3525 17DE                           l3517 17B2                           l3509 177E  
                         l3461 165C                           l3429 2DFA                           l3541 2BD4  
                         l3293 2B14                           l3285 0C4C                           l3277 0C10  
                         l3269 0BC4                           l3197 0912                           l3189 08CC  
                         l3365 27CA                           l3381 1A9A                           l3373 1A20  
                         l4149 24AA                           l4165 19D8                           l4157 1836  
                         l4173 2E3A                           l4181 1EFC                           l4229 2C54  
                         l4351 283E                           l2903 208A                           l4095 12EE  
                         l4087 124A                           l3527 17EA                           l3519 17B6  
                         l3471 169A                           l3463 166E                           l3535 181E  
                         l3543 2BEC                           l3551 3074                           l3295 2B18  
                         l3279 0C2C                           l3287 0C52                           l3199 0922  
                         l3367 27DA                           l3391 1AF4                           l3375 1A30  
                         l4167 1A04                           l4159 1874                           l4175 2F88  
                         l4191 1F50                           l4183 1F00                           l2841 2650  
                         l2921 21AC                           l2913 2132                           l3801 1D66  
                         l4097 12FC                           l4089 1292                           l3537 1822  
                         l3529 17F8                           l3481 16DA                           l3473 16A6  
                         l3465 1672                           l3457 164C                           l3545 2BFE  
                         l3561 3084                           l3553 307A                           l3297 2B26  
                         l3289 0C56                           l3369 27EA                           l3393 1AF6  
                         l3385 1AAE                           l3377 1A3E                           l4169 2E08  
                         l4177 2FB2                           l4193 1F5C                           l4185 1F1C  
                         l2851 26DA                           l2843 2658                           l3563 3088  
                         l2923 21B8                           l2915 215E                           l2907 20C0  
                         l3811 1DC6                           l3803 1D74                           l4099 1310  
                         l4347 10B4                           l3491 1712                           l3483 16DE  
                         l3475 16B4                           l3467 1680                           l3459 1658  
                         l3547 2C10                           l3539 2BC4                           l3555 307E  
                         l3299 2B2E                           l3395 1B02                           l3387 1AB6  
                         l3379 1A84                           l4195 1F6E                           l4187 1F22  
                         l4179 1EEA                           l2861 2340                           l2853 26DC  
                         l2845 265A                           l2837 25CE                           l2941 27FE  
                         l3565 3090                           l2925 21BE                           l2909 2118  
                         l4349 1C8E                           l3821 1E10                           l3813 1DCA  
                         l3805 1D94                           l3901 2ED4                           l3493 1720  
                         l3485 16EC                           l3477 16C0                           l3469 168C  
                         l3549 2C2E                           l3557 3080                           l3581 3064  
                         l3397 1B3E                           l3389 1AC2                           l4197 1F7E  
                         l4189 1F3A                           ?_pad 0014                           l2871 245E  
                         l2863 23D0                           l2855 26E2                           l2847 2660  
                         l2839 25D2                           l2943 2802                           l3567 30A2  
                         l2927 21C2                           l2919 2178                           l3911 2D72  
                         l3831 1E80                           l3823 1E1E                           l3815 1DD6  
                         l3807 1D98                           l3903 2EEE                           l3495 172C  
                         l3487 16F8                           l3479 16CE                           l3575 3094  
                         l3559 3082                           l3583 306A                           l3399 1B4A  
                         l3591 2FF4                           l4199 1FA8                           l2881 2476  
                         l2873 2466                           l2865 23D8                           l2857 26E4  
                         l2849 26D2                           l2961 2896                           l2945 280C  
                         l2953 282A                           l3905 2F50                           l3913 2D86  
                         l3833 1E92                           l3825 1E30                           l3817 1DF4  
                         l3809 1DA6                           l3761 28C8                           l3921 136E  
                         l3497 173A                           l3489 1706                           l3585 306E  
                         l3577 305C                           l3593 3000                           l2875 2468  
                         l2867 23DA                           l2859 233C                           l2947 2816  
                         l2955 2864                           l3915 2DB4                           l3827 1E5E  
                         l3819 1DFC                           l3835 1E98                           l3851 220C  
                         l3843 21D6                           l3771 294A                           l3763 28DA  
                         l3931 13E6                           l3923 138E                           l3499 1746  
                         l2971 2A70                           l3579 3060                           l2891 2F16  
                         l3595 3012                           l2877 246E                           l2869 23E0  
                         l2957 286E                           l2949 2820                           l3917 2DB8  
                         l3909 2D6E                           l3837 1EA8                           l3829 1E7E  
                         l3861 2274                           l3853 221A                           l3845 21DA  
                         l3765 28EC                           l3781 2E70                           l3941 1442  
                         l3933 1400                           l3925 13B6                           l2981 2A94  
                         l2893 2F28                           l2879 2470                           l2959 2892  
                         l3839 1EC8                           l3863 2282                           l3871 22E8  
                         l3855 223A                           l3847 21E8                           l3767 28F6  
                         l3775 2E4E                           l3783 2FBE                           l3951 14E2  
                         l3943 144A                           l3935 141C                           l3927 13D6  
                         l2991 2AAE                           l2983 2A96                           l2967 2A54  
                         l2895 2F36                           l2897 2060                           l3793 301C  
                         l3873 22F8                           l3865 22B0                           l3857 2258  
                         l3849 2208                           l3769 2914                           l3777 2E5A  
                         l3785 2FCA                           l3881 29A0                           l3961 159E  
                         l3953 14E8                           l3945 1454                           l3937 142E  
                         l3929 13E4                           l2993 2AD8                           l2985 2A98  
                         l2977 2A8C                           l2969 2A60                           l3795 3038  
                         l3875 2318                           l3867 22D0                           l3859 2260  
                         l3779 2E6C                           l3787 2FCE                           l3891 29F6  
                         l3883 29B4                           l3971 15EC                           l3963 15B8  
                         l3947 145A                           l3955 154C                           l3939 143C  
                         l2995 2ADE                           l2987 2A9A                           l2979 2A92  
                         l3869 22E2                           l3789 2FE6                           l3893 29FA  
                         l3885 29C2                           l3973 15FE                           l3957 1566  
                         l3965 15C6                           l3949 14DC                           l2997 2AE0  
                         l2989 2A9C                           l3991 1C0A                           l3983 1BD2  
                         l3799 1D62                           l3895 2A26                           l3887 29CE  
                         l3879 2992                           l3975 160A                           l3967 15D8  
                         l3959 1584                           l2999 2AE2                           l3993 1C40  
                         l3985 1BE6                           l3897 2A3A                           l3889 29E2  
                         l3977 1612                           l3969 15E6                           l3995 1C44  
                         l3987 1BEA                           l3979 1622                           l3989 1BEE  
                         l3999 1C4A                           STR_1 080F                           STR_2 0829  
                         STR_3 081D                           STR_4 0832                           STR_5 0838  
                         STR_6 0801                           STR_7 083A                           u3000 0AF6  
                         u3001 0AF2                           u3010 0B16                           u3011 0B12  
                         u3100 2B26                           u3020 0B28                           u3101 2B22  
                         u3021 0B24                           u3110 2B40                           u3030 0B56  
                         u3111 2B3C                           u3031 0B52                           u4000 142E  
                         u3120 2B5A                           u3040 0B6C                           u3200 27AA  
                         u4001 142A                           u3121 2B56                           u3041 0B68  
                         u3201 27A6                           u4010 143C                           u3130 2B78  
                         u3050 0B80                           u3210 27CA                           u4011 1438  
                         u3131 2B74                           u3051 0B7C                           u3211 27C6  
                         u4100 1C0A                           u4020 1566                           u3140 2B8E  
                         u3060 0B9A                           u3220 27DA                           u3300 1B76  
                         u4101 1C06                           u4021 1562                           u3141 2B8A  
                         u3061 0B96                           u3221 27D6                           u3301 1B72  
                         u4110 1C40                           u4030 1584                           u3150 2BB2  
                         u3070 0BE2                           u3310 1BB0                           u3230 1A30  
                         u4111 1C3C                           u4031 1580                           u3151 2BAE  
                         u3071 0BDE                           u3311 1BAC                           u3231 1A2C  
                         u2600 20BC                           u4120 1C5C                           u4040 159E  
                         u4200 1128                           u3400 1706                           u3080 0C10  
                         u3160 270C                           u3320 1BBE                           u3240 1A3E  
                         u2505 261A                           u2601 20B8                           u4121 1C58  
                         u4041 159A                           u4201 1124                           u3401 1702  
                         u3081 0C0C                           u3161 2708                           u3321 1BBA  
                         u3241 1A3A                           u2610 212E                           u4130 1D12  
                         u4050 15B8                           u4210 116C                           u3410 1720  
                         u3330 2DD2                           u3090 0C4A                           u3170 2740  
                         u3250 1A9A                           u2515 2348                           u2611 212A  
                         u4131 1D0C                           u4051 15B4                           u4211 1168  
                         u3411 171C                           u3331 2DCE                           u3091 0C46  
                         u3251 1A96                           u2620 2174                           u4140 1D14  
                         u4060 15C6                           u4220 11E8                           u3500 1812  
                         u3420 173A                           u3340 166E                           u2700 0CA4  
                         u3180 276E                           u3260 1AF0                           u4300 1F6E  
                         u2525 236C                           u2621 2170                           u4061 15C2  
                         u4221 11E2                           u3501 180E                           u3421 1736  
                         u3341 166A                           u2701 0CA0                           u3181 276A  
                         u3261 1AEC                           u4301 1F6A                           u2630 21D4  
                         u4150 1D2A                           u4070 15D8                           u4230 11EA  
                         u3510 1834                           u3430 1758                           u3350 1680  
                         u2710 0CE8                           u3190 2782                           u3270 1B3A  
                         u4310 1F7E                           u2535 2392                           u2631 21D0  
                         u4151 1D26                           u4071 15D4                           u3511 1830  
                         u3431 1754                           u3351 167C                           u2711 0CE4  
                         u3191 277E                           u3175 2736                           u3271 1B36  
                         u4311 1F7A                           u2640 288E                           u4160 1D3C  
                         u4080 15E6                           u4240 1202                           u3440 1772  
                         u3360 169A                           u2800 0E86                           u2720 0CFA  
                         u3280 1B58                           u4320 1FEA                           u2545 23B6  
                         u4161 1D38                           u4081 15E2                           u4241 11FE  
                         u3441 176E                           u3361 1696                           u2801 0E82  
                         u2721 0CF6                           u3281 1B54                           u4321 1FE6  
                         u2650 28B6                           u4090 15FE                           u4250 1226  
                         u4170 1026                           u3450 178C                           u3370 16B4  
                         u2810 0EA4                           u2730 0D0A                           u3290 1B68  
                         u3530 3012                           u4330 2010                           u2555 23EA  
                         u4091 15FA                           u4251 1222                           u4171 1022  
                         u3451 1788                           u3371 16B0                           u2811 0EA0  
                         u2731 0D06                           u3291 1B64                           u3531 300E  
                         u4331 200C                           u2660 28C6                           u3700 294A  
                         u4260 124A                           u4180 10F4                           u3460 17A6  
                         u3380 16CE                           u2900 0FEE                           u2820 0EC4  
                         u2740 0D4A                           u2580 2F46                           u4340 2C68  
                         u2565 242E                           u2485 25DA                           u2661 28C2  
                         u3701 2946                           u4261 1246                           u4181 10F0  
                         u3461 17A2                           u3381 16CA                           u2901 0FEA  
                         u2821 0EC0                           u2741 0D46                           u2581 2F42  
                         u4341 2C5E                           u2590 207A                           u3710 2E90  
                         u4270 12EE                           u4190 1102                           u3470 17C4  
                         u3390 16EC                           u2670 2AC0                           u2830 0ED6  
                         u2750 0D8A                           u2910 0858                           u2495 25F4  
                         u2647 2884                           u2591 2076                           u3711 2E8C  
                         u4271 12EA                           u4191 10FE                           u3471 17C0  
                         u3391 16E8                           u2671 2ABC                           u2831 0ED2  
                         u2751 0D86                           u2911 0854                           u3800 21E8  
                         u3720 2FE6                           u4280 2D12                           u3480 17DE  
                         u2840 0F04                           u2760 0E00                           u2680 0C82  
                         u2920 086A                           u2657 28AC                           u3801 21E4  
                         u3721 2FE2                           u4281 2D0E                           u3481 17DA  
                         u2841 0F00                           u2761 0DFC                           u2681 0C7E  
                         u2921 0866                           u3730 1D74                           u3810 221A  
                         u3490 17F8                           u2850 0F1A                           u2770 0E22  
                         u2690 0C94                           u2930 087A                           u3731 1D70  
                         u3811 2216                           u3491 17F4                           u4507 2A66  
                         u2851 0F16                           u2771 0E1E                           u2691 0C90  
                         u2931 0876                           u4291 2E0E                           u4427 2C88  
                         u3740 1DA6                           u3820 2258                           u3900 2EEE  
                         u2860 0F2E                           u2780 0E4C                           u2940 08BA  
                         u3741 1DA2                           u3821 2254                           u3901 2EEA  
                         u4517 2A8E                           u2861 0F2A                           u2781 0E48  
                         u2941 08B6                           u4437 1F2E                           u3910 2F80  
                         u3830 2282                           u3670 28DA                           u2870 0F48  
                         u2790 0E70                           u2950 08CC                           u4358 2C6C  
                         u4607 23D2                           u3911 2F7A                           u3751 1DD0  
                         u3831 227E                           u3671 28D6                           u4527 2AA4  
                         u2871 0F44                           u2791 0E6C                           u2951 08C8  
                         u4447 2024                           u3920 2F82                           u3760 1DF4  
                         u3840 22B0                           u3680 28EC                           u2880 0F90  
                         u2960 08DC                           u4368 2C9E                           u4617 23DC  
                         u3761 1DF0                           u3841 22AC                           u3681 28E8  
                         u4537 2ADA                           u2881 0F8C                           u2961 08D8  
                         u4457 2044                           u4369 2CB2                           u3930 2D86  
                         u3770 1E1E                           u3850 22F8                           u3690 2914  
                         u2890 0FC0                           u2970 0912                           u4627 2460  
                         u3931 2D82                           u3771 1E1A                           u3851 22F4  
                         u3691 2910                           u4547 2AF0                           u2891 0FBC  
                         u2971 090E                           u4467 2F2E                           u3940 2DB4  
                         u3780 1E5E                           u3860 29A0                           u2980 0922  
                         u4637 246A                           u4557 2652                           u3941 2DB0  
                         u3781 1E5A                           u3861 299C                           u4477 2BDE  
                         u2981 091E                           u3790 1EA8                           u3870 29C2  
                         u3950 139E                           u2990 0A9C                           u4647 2472  
                         u4567 265C                           u3791 1EA4                           u3871 29BE  
                         u3951 1398                           u4487 2C1A                           u3880 2A18  
                         u3960 13A0                           u4657 247C                           u4577 26D4  
                         u3881 2A14                           u4497 2C38                           u3890 2A26  
                         u3970 13B6                           u4587 26DE                           u3891 2A22  
                         u3971 13B2                           u2995 0A92                           u3980 13E4  
                         u4597 26EA                           u3981 13E0                           u3990 1400  
                         u3991 13FC                           _TMR2 000FCC                           _TMR3 000FB2  
                         abs@a 0016                           _dbuf 0098                           _atoi 1BD2  
                         _main 2C48                           _dtoa 136E                           _isrH 0008  
                         _isrL 0018                           _prec 0058                           _nout 0094  
                         pad@i 001B                           pad@p 0018                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001D                           fsr2l 000FD9  
                         btemp 005C                           prodh 000FF4                           prodl 000FF3  
                         start 00AA                ___fldiv@new_exp 0040   __end_of_appStateRecolectData 2FBE  
              __end_of_Lcd_Cmd 26F6                __end_of_Lcd_Out 28C8                   ___param_bank 000000  
                   _Lcd_Chr_CP 233A           __size_of_appLCD_Init 0084                          ??_abs 0018  
                        ??_pad 001A                  ___fltol@sign1 0050                __end_of___aodiv 1EEA  
                        ?_atoi 000B                          ?_main 0001                          ?_dtoa 001F  
              __end_of___aomod 233A                          ?_isrH 0001                          ?_isrL 0001  
              __end_of_adcInit 2E08                __end_of___fldiv 1002                          _ADRES 000FC3  
              __end_of___awmod 2BC4                __end_of___flmul 0C68                __end_of___fltol 27FC  
                        i1l274 009A        __end_of_appStateInitial 301C                          i2l279 309E  
                 vfpfcnvrt@fmt 0045                          _PORTB 000F81                          _TRISB 000F93  
              __end_of_appInit 3074                          _datos 00B8                          _flags 005A  
                        _fputc 28C8                          _fputs 2E4E                __end_of_isdigit 2F88  
                        atoi@n 0018                          pad@fp 0014                          atoi@s 000B  
                        _width 0096                          _putch 30A6                          dtoa@d 0021  
                        dtoa@i 0041                          dtoa@n 0039                          dtoa@p 0033  
                        dtoa@s 0037                          dtoa@w 0035                __end_of_teclado 1836  
              __end_of_isspace 2DC0                          pclath 000FFA                          tablat 000FF5  
                        ttemp5 005D                          ttemp6 0060                          ttemp7 0064  
                        status 000FD8                          wtemp8 005D                __end_of_sprintf 2D6E  
         __end_of_appTimerInit 3088           __end_of_appTimerStop 30A6               __end_of_Lcd_Init 2B14  
              __initialization 2E92                   __end_of_atoi 1D62                   __end_of_main 2CBA  
                 __end_of_dtoa 164C                   __end_of_isrH 30A2                   __end_of_isrL 00AA  
                       ??_atoi 000D                         ??_main 008C                         ??_dtoa 0029  
                       ??_isrH 0001                         ??_isrL 0001                  __activetblptr 000002  
               _appGetElements 1EEA                         ?_fputc 0004                         ?_fputs 000D  
        __size_of_appISRConfig 0008                         ?_putch 0001                         i1l4241 0044  
                       i1l4251 007A                         i1l4243 0048                         i1l4235 0026  
                       i1l4253 008A                         i1l4245 005A                         i1l4237 0034  
                       i1l4255 0092                         i1l4247 006A                         i1l4239 0042  
                       i1l4249 006E                      ??_Lcd_Cmd 0004                  vfpfcnvrt@done 0068  
                       _TMR3IE 007D01                         _TMR3IF 007D09                      ??_Lcd_Out 000A  
             __end_of___xxtofl 1BD2                   vfprintf@cfmt 004D                    ?_Lcd_Chr_CP 0001  
                       _appADC 2488                      ??___aodiv 0014                      ??___aomod 0014  
                       ___wmul 301C                      ??_adcInit 0004                      ??___fldiv 0037  
                    ??___awmod 0056                      ??___flmul 001E                         _appBat 1836  
                    ??___fltol 004C                         _memset 2060                         clear_0 2EB8  
              ___awmod@divisor 0054                      ??_appInit 0010         __end_of_appGetElements 2060  
              ___awmod@counter 0056                         pad@buf 0016                         dtoa@fp 001F  
                       _strlen 2FBE                   _appISRConfig 3094                         fputc@c 0004  
             ?_appStateInitial 0001                         fputs@c 0011                         fputs@i 0012  
                       fputs@s 000D                      ??_isdigit 0006                      ??_teclado 0006  
                 __mediumconst 0000                      ??_isspace 0006                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8           _appStateRecolectData 2F88  
            adcGetValue@PinADC 0007                         putch@c 0001               __end_of_vfprintf 2D1C  
                    ??_sprintf 0058                   ___xxtofl@arg 0012                   ___xxtofl@exp 0011  
                 ___xxtofl@val 0008                     __accesstop 0060        __end_of__initialization 2EC6  
        __end_of_appTimerStart 3094                  ___rparam_used 000001                     ___fltol@f1 0048  
               __pcstackCOMRAM 0001                   __pidataBANK0 3042                  __end_of_fputc 2992  
                __end_of_fputs 2E92                  __end_of_putch 30A8             __size_of_appElemts 0046  
              ?_appGetElements 0001                  ??_adcGetValue 0006          ?_appStateRecolectData 0001  
                    ?_Lcd_Init 0001                        ??_fputc 0008                        ??_fputs 0011  
          __size_of_Lcd_Chr_CP 014E                        ??_putch 0004          __size_of_appTimerInit 0014  
                   __pbssBANK0 008E          __size_of_appTimerStop 0004                        ?_appADC 0084  
                      ?___wmul 0004                        ?_appBat 0084                        ?_memset 0004  
                   appADC@data 0084                        ?_strlen 0004                   _appTimerInit 3074  
                    ?___xxtofl 0008                   _appTimerStop 30A2             __size_of_vfpfcnvrt 036C  
                   ??_Lcd_Init 0007            __end_of_adcGetValue 2F50              __end_of_appElemts 2E4E  
                      _Lcd_Cmd 25CC                        _Lcd_Out 27FC                  ??_appLCD_Init 000E  
                      __Hparam 0000                        __Lparam 0000                        ___aodiv 1D62  
                      ___aomod 21D6                        _adcInit 2DC0                        ___fldiv 0C68  
                      ___awmod 2B14                        ___flmul 083E                        ___fltol 26F6  
              __size_of_appADC 0144                __size_of___wmul 0026                __size_of_appBat 01E8  
                    ?_vfprintf 006C                     appBat@data 0084                   __psmallconst 0800  
                      __pcinit 2E92                __size_of_memset 0176                        _appInit 305C  
                      __ramtop 0800                        __ptext0 2C48                        __ptext1 1EEA  
                      __ptext2 2FF4                        __ptext3 2F88                        __ptext4 2E08  
                      __ptext5 1836                        __ptext6 2488                        __ptext7 2F14  
                      __ptext8 1A1E                        __ptext9 26F6                __size_of_strlen 0036  
                    _T2CONbits 000FCA                   __size_of_abs 0040                   __size_of_pad 00C2  
       ??_appStateRecolectData 0058                        _isdigit 2F50                     ??___xxtofl 000C  
                    _T3CONbits 000FB1               ___awmod@dividend 0052                        _teclado 164C  
                      _isspace 2D6E                        atoi@neg 0011                        _sprintf 2D1C  
               __pintcode_body 309C           end_of_initialization 2EC6                        fputc@fp 0006  
                      memset@c 0006                        memset@k 000C                        memset@n 0008  
                      memset@s 000E                  __Lmediumconst 0000                        int_func 309C  
                      fputs@fp 000F            appGetElements@inout 0088              __end_of_vfpfcnvrt 136E  
                    Lcd_Init@i 0008                   ??_Lcd_Chr_CP 0004                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     ??_vfprintf 004D            __end_of_appLCD_Init 2C48  
                      strlen@a 0006                        strlen@s 0004                      _PORTBbits 000F81  
                  _adcGetValue 2F14                  ___xxtofl@sign 0010                      _TRISAbits 000F92  
                    _TRISBbits 000F93                      _TRISDbits 000F95                    ___fldiv@grs 0042  
                  ___fldiv@rem 003B             __end_of_Lcd_Chr_CP 2488                    ___flmul@grs 0023  
             ??_appGetElements 0084                 __end_of_appADC 25CC                    vfpfcnvrt@ap 0047  
                  vfpfcnvrt@fp 0043                    vfpfcnvrt@ll 0060                 __end_of___wmul 3042  
               __end_of_appBat 1A1E                 __end_of_memset 21D6                 __end_of_strlen 2FF4  
          start_initialization 2E92                    __end_of_abs 2F14                    __end_of_pad 2A54  
                Lcd_Out@buffer 0008       __size_of_appStateInitial 0028              __size_of_Lcd_Init 00C0  
           fp__appStateInitial 000E                    _appLCD_Init 2BC4                    vfprintf@fmt 006E  
                     ??_appADC 0058                       ??___wmul 0008                    _appBat$2019 0088  
                     ??_appBat 0086                    __pdataBANK0 00B8                       ??_memset 000A  
                   memset@dest 0004                       ??_strlen 0006                      ___fldiv@a 0033  
                    ___fldiv@b 002F         __size_of_appTimerStart 000C                      ___flmul@a 001A  
                    ___flmul@b 0016                    __pbssCOMRAM 0058                  __pcstackBANK0 0060  
             ___aodiv@dividend 0004              __size_of___xxtofl 01B4        fp__appStateRecolectData 000E  
       appGetElements@cantidad 0086                       ?_Lcd_Cmd 0001                       ?_Lcd_Out 0007  
                    _atoi$1740 0013                      _atoi$1741 0017                      _atoi$1742 0015  
                    _appElemts 2E08                      _dtoa$1705 0031              appElemts@elements 0084  
                    __pintcode 0008                       ?___aodiv 0004                       ?___aomod 0004  
                     ?_adcInit 0001                       ?___fldiv 002F               ___aodiv@quotient 0016  
                     ?___awmod 0052                       ?___flmul 0016                       ?___fltol 0048  
                  __pintcodelo 0018                       ?_appInit 0001              __size_of_vfprintf 0062  
                  __smallconst 0800                       ?_isdigit 0004                   teclado@valor 0004  
                     ?_teclado 0004                       ?_isspace 0004                       ?_sprintf 0072  
               __size_of_fputc 00CA                 __size_of_fputs 0044                 __size_of_putch 0002  
               ___wmul@product 0008                       _LATAbits 000F89                       _LATBbits 000F8A  
                     _LATDbits 000F8C                  _appTimerStart 3088                       _IPR2bits 000FA2  
                     _PIE2bits 000FA0              ??_appStateInitial 0006                     ?_appElemts 0084  
                     i1u440_20 006A                       i1u440_21 0066                       i1u441_20 008A  
                     i1u441_21 0086                       i1u437_20 0034                       i1u437_21 0030  
                     i1u438_20 0042                       i1u438_21 003E                       i1u439_20 005A  
                     i1u439_21 0056                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _GO_nDONE 007E11                       _RCONbits 000FD0                       Lcd_Out@x 0007  
                     Lcd_Out@y 000C                      _vfpfcnvrt 1002                     _ADCON0bits 000FC2  
                   _ADCON1bits 000FC1                     _ADCON2bits 000FC0              ___wmul@multiplier 0004  
                ?_appISRConfig 0001                   ?_adcGetValue 0004  __size_of_appStateRecolectData 0036  
                 _isspace$1758 000A                       _Lcd_Init 2A54                    _INTCON2bits 000FF1  
                    copy_data0 2EA6                 ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A  
             __size_of_Lcd_Out 00CC                       __Hrparam 0000                     vfprintf@ap 0070  
                     __Lrparam 0000                     vfprintf@fp 006C               __size_of___aodiv 0188  
             __size_of___aomod 0164               __size_of_adcInit 0048               __size_of___fldiv 039A  
             __size_of___awmod 00B0               __size_of___flmul 042A               __size_of___fltol 0106  
                appADC@lm35val 0086                     ?_vfpfcnvrt 0043                ___aodiv@divisor 000C  
               ??_appISRConfig 0004                ___aodiv@counter 0014               __size_of_appInit 0018  
                   sprintf@fmt 0074                       ___xxtofl 1A1E               appElemts@dataout 0086  
             __size_of_isdigit 0038                 Lcd_Chr_CP@data 0006               __size_of_teclado 01EA  
             __size_of_isspace 0052                       __ptext10 083E                       __ptext11 0C68  
                     __ptext20 2D1C                       __ptext12 2B14                       __ptext21 2CBA  
                     __ptext13 305C                       __ptext30 21D6                       __ptext22 1002  
                     __ptext14 3074                       __ptext31 1D62                       __ptext23 136E  
                     __ptext15 2BC4                       __ptext40 25CC                       __ptext32 1BD2  
                     __ptext24 2992                       __ptext16 2A54                       __ptext41 233A  
                     __ptext33 2D6E                       __ptext25 2FBE                       __ptext17 3094  
                     __ptext34 2F50                       __ptext26 2E4E                       __ptext18 2DC0  
                     __ptext35 301C                       __ptext27 28C8                       __ptext19 164C  
                     __ptext36 2060                       __ptext28 30A6                       __ptext37 30A2  
                     __ptext29 2ED4                       __ptext38 3088                       __ptext39 27FC  
             __size_of_sprintf 0052                    Lcd_Cmd@data 0006                  __size_of_atoi 0190  
                __size_of_main 0072                  __size_of_dtoa 02DE                  __size_of_isrH 309A  
                __size_of_isrL 0092                    ??_appElemts 0058                   ?_appLCD_Init 0001  
                     int$flags 005C                       _vfprintf 2CBA               ___aomod@dividend 0004  
                ?_appTimerInit 0001                    Lcd_Out@data 000D                 _vfpfcnvrt$1720 006A  
                ?_appTimerStop 0001                     _INTCONbits 000FF2                       isdigit@c 0004  
                     intlevel1 0000                       intlevel2 0000                      sprintf@ap 007C  
              ??_appTimerStart 0004                       isspace@c 0004                 appElemts@F3559 008E  
              ___aomod@divisor 000C                    ??_vfpfcnvrt 0049                ___aomod@counter 0014  
               ??_appTimerInit 0004                       sprintf@f 007E                       sprintf@s 0072  
               ??_appTimerStop 0004        __size_of_appGetElements 0176              fp__appGetElements 000E  
         __size_of_adcGetValue 003C                _appStateInitial 2FF4                   ___aodiv@sign 0015  
         __end_of_appISRConfig 309C                   ___aomod@sign 0015  
