

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed May 26 18:37:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _ADRES	set	4035
    50  0000                     _PORTBbits	set	3969
    51  0000                     _PORTB	set	3969
    52  0000                     _LATAbits	set	3977
    53  0000                     _LATD	set	3980
    54  0000                     _TRISD	set	3989
    55  0000                     _TRISAbits	set	3986
    56  0000                     _LATDbits	set	3980
    57  0000                     _TRISDbits	set	3989
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _ADCON2bits	set	4032
    60  0000                     _ADCON1bits	set	4033
    61  0000                     _GO_nDONE	set	32273
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  007F12                     __pcinit:
    67                           	callstack 0
    68  007F12                     start_initialization:
    69                           	callstack 0
    70  007F12                     __initialization:
    71                           	callstack 0
    72  007F12                     end_of_initialization:
    73                           	callstack 0
    74  007F12                     __end_of__initialization:
    75                           	callstack 0
    76  007F12  0E00               	movlw	low (__Lmediumconst shr (0+16))
    77  007F14  6EF8               	movwf	tblptru,c
    78  007F16  0100               	movlb	0
    79  007F18  EFD0  F03F         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	cstackCOMRAM
    82  000001                     __pcstackCOMRAM:
    83                           	callstack 0
    84  000001                     ??_adcInit:
    85  000001                     ?_adcGetValue:
    86                           	callstack 0
    87                           
    88                           ; 2 bytes @ 0x0
    89  000001                     	ds	1
    90  000002                     adcInit@ADC_PINs:
    91                           	callstack 0
    92                           
    93                           ; 1 bytes @ 0x1
    94  000002                     	ds	1
    95  000003                     ??_adcGetValue:
    96                           
    97                           ; 1 bytes @ 0x2
    98  000003                     	ds	1
    99  000004                     adcGetValue@PinADC:
   100                           	callstack 0
   101                           
   102                           ; 1 bytes @ 0x3
   103  000004                     	ds	1
   104  000005                     ??_main:
   105                           
   106                           ; 1 bytes @ 0x4
   107  000005                     	ds	2
   108                           
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 13 in file "main.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;		None
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2, status,0, cstack
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   128 ;;      Params:         0       0       0       0       0       0       0       0       0
   129 ;;      Locals:         0       0       0       0       0       0       0       0       0
   130 ;;      Temps:          2       0       0       0       0       0       0       0       0
   131 ;;      Totals:         2       0       0       0       0       0       0       0       0
   132 ;;Total ram usage:        2 bytes
   133 ;; Hardware stack levels required when called:    1
   134 ;; This function calls:
   135 ;;		_adcGetValue
   136 ;;		_adcInit
   137 ;; This function is called by:
   138 ;;		Startup code after reset
   139 ;; This function uses a non-reentrant model
   140 ;;
   141                           
   142                           	psect	text0
   143  007FA0                     __ptext0:
   144                           	callstack 0
   145  007FA0                     _main:
   146                           	callstack 30
   147  007FA0                     
   148                           ;main.c: 16:     TRISAbits.TRISA0 = 1;
   149  007FA0  8092               	bsf	146,0,c	;volatile
   150                           
   151                           ;main.c: 17:     TRISAbits.TRISA1 = 1;
   152  007FA2  8292               	bsf	146,1,c	;volatile
   153                           
   154                           ;main.c: 18:     TRISAbits.TRISA2 = 0;
   155  007FA4  9492               	bcf	146,2,c	;volatile
   156  007FA6                     
   157                           ;main.c: 19:     TRISD = 0x00;
   158  007FA6  0E00               	movlw	0
   159  007FA8  6E95               	movwf	149,c	;volatile
   160  007FAA                     
   161                           ;main.c: 20:     adcInit(2);
   162  007FAA  0E02               	movlw	2
   163  007FAC  ECAC  F03F         	call	_adcInit
   164  007FB0                     l1027:
   165                           
   166                           ;main.c: 23:         LATD = (uint8_t)adcGetValue(0);
   167  007FB0  0E00               	movlw	0
   168  007FB2  EC8E  F03F         	call	_adcGetValue
   169  007FB6  5001               	movf	?_adcGetValue^0,w,c
   170  007FB8  6E8C               	movwf	140,c	;volatile
   171  007FBA                     
   172                           ;main.c: 24:         LATAbits.LA2 = 1;
   173  007FBA  8489               	bsf	137,2,c	;volatile
   174  007FBC                     
   175                           ;main.c: 25:         _delay((unsigned long)((500)*(48000000/4000.0)));
   176  007FBC  0E1F               	movlw	31
   177  007FBE  6E06               	movwf	(??_main+1)^0,c
   178  007FC0  0E71               	movlw	113
   179  007FC2  6E05               	movwf	??_main^0,c
   180  007FC4  0E1E               	movlw	30
   181  007FC6                     u187:
   182  007FC6  2EE8               	decfsz	wreg,f,c
   183  007FC8  D7FE               	bra	u187
   184  007FCA  2E05               	decfsz	??_main^0,f,c
   185  007FCC  D7FC               	bra	u187
   186  007FCE  2E06               	decfsz	(??_main+1)^0,f,c
   187  007FD0  D7FA               	bra	u187
   188  007FD2  D000               	nop2	
   189  007FD4                     
   190                           ;main.c: 26:         LATD = (uint8_t)adcGetValue(1);
   191  007FD4  0E01               	movlw	1
   192  007FD6  EC8E  F03F         	call	_adcGetValue
   193  007FDA  5001               	movf	?_adcGetValue^0,w,c
   194  007FDC  6E8C               	movwf	140,c	;volatile
   195  007FDE                     
   196                           ;main.c: 27:         LATAbits.LA2 = 0;
   197  007FDE  9489               	bcf	137,2,c	;volatile
   198  007FE0                     
   199                           ;main.c: 28:         _delay((unsigned long)((500)*(48000000/4000.0)));
   200  007FE0  0E1F               	movlw	31
   201  007FE2  6E06               	movwf	(??_main+1)^0,c
   202  007FE4  0E71               	movlw	113
   203  007FE6  6E05               	movwf	??_main^0,c
   204  007FE8  0E1E               	movlw	30
   205  007FEA                     u197:
   206  007FEA  2EE8               	decfsz	wreg,f,c
   207  007FEC  D7FE               	bra	u197
   208  007FEE  2E05               	decfsz	??_main^0,f,c
   209  007FF0  D7FC               	bra	u197
   210  007FF2  2E06               	decfsz	(??_main+1)^0,f,c
   211  007FF4  D7FA               	bra	u197
   212  007FF6  D000               	nop2	
   213  007FF8  EFD8  F03F         	goto	l1027
   214  007FFC  EF00  F000         	goto	start
   215  008000                     __end_of_main:
   216                           	callstack 0
   217                           
   218 ;; *************** function _adcInit *****************
   219 ;; Defined at:
   220 ;;		line 11 in file "adc.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;  ADC_PINs        1    wreg     unsigned char 
   223 ;; Auto vars:     Size  Location     Type
   224 ;;  ADC_PINs        1    1[COMRAM] unsigned char 
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2, status,0
   229 ;; Tracked objects:
   230 ;;		On entry : 0/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   234 ;;      Params:         0       0       0       0       0       0       0       0       0
   235 ;;      Locals:         1       0       0       0       0       0       0       0       0
   236 ;;      Temps:          1       0       0       0       0       0       0       0       0
   237 ;;      Totals:         2       0       0       0       0       0       0       0       0
   238 ;;Total ram usage:        2 bytes
   239 ;; Hardware stack levels used:    1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		_main
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text1
   248  007F58                     __ptext1:
   249                           	callstack 0
   250  007F58                     _adcInit:
   251                           	callstack 30
   252                           
   253                           ;incstack = 0
   254                           ;adcInit@ADC_PINs stored from wreg
   255  007F58  6E02               	movwf	adcInit@ADC_PINs^0,c
   256  007F5A                     
   257                           ;adc.c: 11: void adcInit(uint8_t ADC_PINs);adc.c: 12: {;adc.c: 14:     if(ADC_PINs == 0)
   258  007F5A  5002               	movf	adcInit@ADC_PINs^0,w,c
   259  007F5C  A4D8               	btfss	status,2,c
   260  007F5E  EFB3  F03F         	goto	u11
   261  007F62  EFB5  F03F         	goto	u10
   262  007F66                     u11:
   263  007F66  EFBB  F03F         	goto	l799
   264  007F6A                     u10:
   265  007F6A                     
   266                           ;adc.c: 15:     {;adc.c: 16:         ADCON1bits.PCFG = 0b1110;
   267  007F6A  50C1               	movf	193,w,c	;volatile
   268  007F6C  0BF0               	andlw	-16
   269  007F6E  090E               	iorlw	14
   270  007F70  6EC1               	movwf	193,c	;volatile
   271                           
   272                           ;adc.c: 17:     }
   273  007F72  EFC3  F03F         	goto	l801
   274  007F76                     l799:
   275                           
   276                           ;adc.c: 19:     {;adc.c: 20:         ADCON1bits.PCFG = 15 - ADC_PINs;
   277  007F76  5002               	movf	adcInit@ADC_PINs^0,w,c
   278  007F78  080F               	sublw	15
   279  007F7A  6E01               	movwf	??_adcInit^0,c
   280  007F7C  50C1               	movf	193,w,c	;volatile
   281  007F7E  1801               	xorwf	??_adcInit^0,w,c
   282  007F80  0BF0               	andlw	-16
   283  007F82  1801               	xorwf	??_adcInit^0,w,c
   284  007F84  6EC1               	movwf	193,c	;volatile
   285  007F86                     l801:
   286                           
   287                           ;adc.c: 26:     ADCON1bits.VCFG = 0b00;
   288  007F86  0ECF               	movlw	-49
   289  007F88  16C1               	andwf	193,f,c	;volatile
   290  007F8A                     
   291                           ;adc.c: 31:     ADCON2bits.ACQT = 0b010;
   292  007F8A  50C0               	movf	192,w,c	;volatile
   293  007F8C  0BC7               	andlw	-57
   294  007F8E  0910               	iorlw	16
   295  007F90  6EC0               	movwf	192,c	;volatile
   296  007F92                     
   297                           ;adc.c: 36:     ADCON2bits.ADCS = 3;
   298  007F92  50C0               	movf	192,w,c	;volatile
   299  007F94  0BF8               	andlw	-8
   300  007F96  0903               	iorlw	3
   301  007F98  6EC0               	movwf	192,c	;volatile
   302  007F9A                     
   303                           ;adc.c: 39:     ADCON2bits.ADFM = 1;
   304  007F9A  8EC0               	bsf	192,7,c	;volatile
   305  007F9C                     
   306                           ;adc.c: 40:     ADCON0bits.ADON = 1;
   307  007F9C  80C2               	bsf	194,0,c	;volatile
   308  007F9E  0012               	return		;funcret
   309  007FA0                     __end_of_adcInit:
   310                           	callstack 0
   311                           
   312 ;; *************** function _adcGetValue *****************
   313 ;; Defined at:
   314 ;;		line 43 in file "adc.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;  PinADC          1    wreg     unsigned char 
   317 ;; Auto vars:     Size  Location     Type
   318 ;;  PinADC          1    3[COMRAM] unsigned char 
   319 ;; Return value:  Size  Location     Type
   320 ;;                  2    0[COMRAM] unsigned short 
   321 ;; Registers used:
   322 ;;		wreg, status,2, status,0
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   328 ;;      Params:         2       0       0       0       0       0       0       0       0
   329 ;;      Locals:         1       0       0       0       0       0       0       0       0
   330 ;;      Temps:          1       0       0       0       0       0       0       0       0
   331 ;;      Totals:         4       0       0       0       0       0       0       0       0
   332 ;;Total ram usage:        4 bytes
   333 ;; Hardware stack levels used:    1
   334 ;; This function calls:
   335 ;;		Nothing
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text2
   342  007F1C                     __ptext2:
   343                           	callstack 0
   344  007F1C                     _adcGetValue:
   345                           	callstack 30
   346                           
   347                           ;incstack = 0
   348                           ;adcGetValue@PinADC stored from wreg
   349  007F1C  6E04               	movwf	adcGetValue@PinADC^0,c
   350  007F1E                     
   351                           ;adc.c: 43: uint16_t adcGetValue(uint8_t PinADC);adc.c: 44: {;adc.c: 45:     ADCON0bits.
      +                          CHS = PinADC;
   352  007F1E  C004  F003         	movff	adcGetValue@PinADC,??_adcGetValue
   353  007F22  4603               	rlncf	??_adcGetValue^0,f,c
   354  007F24  4603               	rlncf	??_adcGetValue^0,f,c
   355  007F26  50C2               	movf	194,w,c	;volatile
   356  007F28  1803               	xorwf	??_adcGetValue^0,w,c
   357  007F2A  0BC3               	andlw	-61
   358  007F2C  1803               	xorwf	??_adcGetValue^0,w,c
   359  007F2E  6EC2               	movwf	194,c	;volatile
   360  007F30                     
   361                           ;adc.c: 46:     _delay((unsigned long)((2)*(48000000/4000.0)));
   362  007F30  0E20               	movlw	32
   363  007F32  6E03               	movwf	??_adcGetValue^0,c
   364  007F34  0E2A               	movlw	42
   365  007F36                     u207:
   366  007F36  2EE8               	decfsz	wreg,f,c
   367  007F38  D7FE               	bra	u207
   368  007F3A  2E03               	decfsz	??_adcGetValue^0,f,c
   369  007F3C  D7FC               	bra	u207
   370  007F3E                     
   371                           ;adc.c: 47:     GO_nDONE = 1;
   372  007F3E  82C2               	bsf	4034,1,c	;volatile
   373  007F40                     l20:
   374                           
   375                           ;adc.c: 48:     while(ADCON0bits.GO_DONE)
   376  007F40  B2C2               	btfsc	194,1,c	;volatile
   377  007F42  EFA5  F03F         	goto	u171
   378  007F46  EFA7  F03F         	goto	u170
   379  007F4A                     u171:
   380  007F4A  EFA0  F03F         	goto	l20
   381  007F4E                     u170:
   382  007F4E                     
   383                           ;adc.c: 51:     return ADRES;
   384  007F4E  CFC3 F001          	movff	4035,?_adcGetValue	;volatile
   385  007F52  CFC4 F002          	movff	4036,?_adcGetValue+1	;volatile
   386  007F56  0012               	return		;funcret
   387  007F58                     __end_of_adcGetValue:
   388                           	callstack 0
   389  0000                     
   390                           	psect	rparam
   391  0000                     
   392                           	psect	idloc
   393                           
   394                           ;Config register IDLOC0 @ 0x200000
   395                           ;	unspecified, using default values
   396  200000                     	org	2097152
   397  200000  FF                 	db	255
   398                           
   399                           ;Config register IDLOC1 @ 0x200001
   400                           ;	unspecified, using default values
   401  200001                     	org	2097153
   402  200001  FF                 	db	255
   403                           
   404                           ;Config register IDLOC2 @ 0x200002
   405                           ;	unspecified, using default values
   406  200002                     	org	2097154
   407  200002  FF                 	db	255
   408                           
   409                           ;Config register IDLOC3 @ 0x200003
   410                           ;	unspecified, using default values
   411  200003                     	org	2097155
   412  200003  FF                 	db	255
   413                           
   414                           ;Config register IDLOC4 @ 0x200004
   415                           ;	unspecified, using default values
   416  200004                     	org	2097156
   417  200004  FF                 	db	255
   418                           
   419                           ;Config register IDLOC5 @ 0x200005
   420                           ;	unspecified, using default values
   421  200005                     	org	2097157
   422  200005  FF                 	db	255
   423                           
   424                           ;Config register IDLOC6 @ 0x200006
   425                           ;	unspecified, using default values
   426  200006                     	org	2097158
   427  200006  FF                 	db	255
   428                           
   429                           ;Config register IDLOC7 @ 0x200007
   430                           ;	unspecified, using default values
   431  200007                     	org	2097159
   432  200007  FF                 	db	255
   433                           
   434                           	psect	config
   435                           
   436                           ;Config register CONFIG1L @ 0x300000
   437                           ;	PLL Prescaler Selection bits
   438                           ;	PLLDIV = 3, Divide by 3 (12 MHz oscillator input)
   439                           ;	System Clock Postscaler Selection bits
   440                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   441                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   442                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   443  300000                     	org	3145728
   444  300000  02                 	db	2
   445                           
   446                           ;Config register CONFIG1H @ 0x300001
   447                           ;	Oscillator Selection bits
   448                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   449                           ;	Fail-Safe Clock Monitor Enable bit
   450                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   451                           ;	Internal/External Oscillator Switchover bit
   452                           ;	IESO = OFF, Oscillator Switchover mode disabled
   453  300001                     	org	3145729
   454  300001  0E                 	db	14
   455                           
   456                           ;Config register CONFIG2L @ 0x300002
   457                           ;	Power-up Timer Enable bit
   458                           ;	PWRT = OFF, PWRT disabled
   459                           ;	Brown-out Reset Enable bits
   460                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   461                           ;	Brown-out Reset Voltage bits
   462                           ;	BORV = 3, Minimum setting 2.05V
   463                           ;	USB Voltage Regulator Enable bit
   464                           ;	VREGEN = OFF, USB voltage regulator disabled
   465  300002                     	org	3145730
   466  300002  19                 	db	25
   467                           
   468                           ;Config register CONFIG2H @ 0x300003
   469                           ;	Watchdog Timer Enable bit
   470                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   471                           ;	Watchdog Timer Postscale Select bits
   472                           ;	WDTPS = 32768, 1:32768
   473  300003                     	org	3145731
   474  300003  1E                 	db	30
   475                           
   476                           ; Padding undefined space
   477  300004                     	org	3145732
   478  300004  FF                 	db	255
   479                           
   480                           ;Config register CONFIG3H @ 0x300005
   481                           ;	CCP2 MUX bit
   482                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   483                           ;	PORTB A/D Enable bit
   484                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   485                           ;	Low-Power Timer 1 Oscillator Enable bit
   486                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   487                           ;	MCLR Pin Enable bit
   488                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   489  300005                     	org	3145733
   490  300005  81                 	db	129
   491                           
   492                           ;Config register CONFIG4L @ 0x300006
   493                           ;	Stack Full/Underflow Reset Enable bit
   494                           ;	STVREN = ON, Stack full/underflow will cause Reset
   495                           ;	Single-Supply ICSP Enable bit
   496                           ;	LVP = OFF, Single-Supply ICSP disabled
   497                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   498                           ;	ICPRT = OFF, ICPORT disabled
   499                           ;	Extended Instruction Set Enable bit
   500                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   501                           ;	Background Debugger Enable bit
   502                           ;	DEBUG = 0x1, unprogrammed default
   503  300006                     	org	3145734
   504  300006  81                 	db	129
   505                           
   506                           ; Padding undefined space
   507  300007                     	org	3145735
   508  300007  FF                 	db	255
   509                           
   510                           ;Config register CONFIG5L @ 0x300008
   511                           ;	Code Protection bit
   512                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   513                           ;	Code Protection bit
   514                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   515                           ;	Code Protection bit
   516                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   517                           ;	Code Protection bit
   518                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   519  300008                     	org	3145736
   520  300008  0F                 	db	15
   521                           
   522                           ;Config register CONFIG5H @ 0x300009
   523                           ;	Boot Block Code Protection bit
   524                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   525                           ;	Data EEPROM Code Protection bit
   526                           ;	CPD = OFF, Data EEPROM is not code-protected
   527  300009                     	org	3145737
   528  300009  C0                 	db	192
   529                           
   530                           ;Config register CONFIG6L @ 0x30000A
   531                           ;	Write Protection bit
   532                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   533                           ;	Write Protection bit
   534                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   535                           ;	Write Protection bit
   536                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   537                           ;	Write Protection bit
   538                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   539  30000A                     	org	3145738
   540  30000A  0F                 	db	15
   541                           
   542                           ;Config register CONFIG6H @ 0x30000B
   543                           ;	Configuration Register Write Protection bit
   544                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   545                           ;	Boot Block Write Protection bit
   546                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   547                           ;	Data EEPROM Write Protection bit
   548                           ;	WRTD = OFF, Data EEPROM is not write-protected
   549  30000B                     	org	3145739
   550  30000B  E0                 	db	224
   551                           
   552                           ;Config register CONFIG7L @ 0x30000C
   553                           ;	Table Read Protection bit
   554                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   555                           ;	Table Read Protection bit
   556                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   557                           ;	Table Read Protection bit
   558                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   559                           ;	Table Read Protection bit
   560                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   561  30000C                     	org	3145740
   562  30000C  0F                 	db	15
   563                           
   564                           ;Config register CONFIG7H @ 0x30000D
   565                           ;	Boot Block Table Read Protection bit
   566                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   567  30000D                     	org	3145741
   568  30000D  40                 	db	64
   569                           tosu	equ	0xFFF
   570                           tosh	equ	0xFFE
   571                           tosl	equ	0xFFD
   572                           stkptr	equ	0xFFC
   573                           pclatu	equ	0xFFB
   574                           pclath	equ	0xFFA
   575                           pcl	equ	0xFF9
   576                           tblptru	equ	0xFF8
   577                           tblptrh	equ	0xFF7
   578                           tblptrl	equ	0xFF6
   579                           tablat	equ	0xFF5
   580                           prodh	equ	0xFF4
   581                           prodl	equ	0xFF3
   582                           indf0	equ	0xFEF
   583                           postinc0	equ	0xFEE
   584                           postdec0	equ	0xFED
   585                           preinc0	equ	0xFEC
   586                           plusw0	equ	0xFEB
   587                           fsr0h	equ	0xFEA
   588                           fsr0l	equ	0xFE9
   589                           wreg	equ	0xFE8
   590                           indf1	equ	0xFE7
   591                           postinc1	equ	0xFE6
   592                           postdec1	equ	0xFE5
   593                           preinc1	equ	0xFE4
   594                           plusw1	equ	0xFE3
   595                           fsr1h	equ	0xFE2
   596                           fsr1l	equ	0xFE1
   597                           bsr	equ	0xFE0
   598                           indf2	equ	0xFDF
   599                           postinc2	equ	0xFDE
   600                           postdec2	equ	0xFDD
   601                           preinc2	equ	0xFDC
   602                           plusw2	equ	0xFDB
   603                           fsr2h	equ	0xFDA
   604                           fsr2l	equ	0xFD9
   605                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_adcGetValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      52
                                              4 COMRAM     2     2      0
                        _adcGetValue
                            _adcInit
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adcGetValue                                          4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcGetValue
   _adcInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed May 26 18:37:00 2021

                     l20 7F40                       l22 7F4E                       l23 7F56  
                     l17 7F9E                       u10 7F6A                       u11 7F66  
                    l801 7F86                      l803 7F8A                      l805 7F92  
                    l807 7F9A                      l809 7F9C                      l795 7F5A  
                    l797 7F6A                      l799 7F76          adcInit@ADC_PINs 0002  
                    u207 7F36                      u170 7F4E                      u171 7F4A  
                    u187 7FC6                      u197 7FEA                      wreg 000FE8  
                   l1021 7FA0                     l1015 7F1E                     l1031 7FBC  
                   l1023 7FA6                     l1017 7F30                     l1033 7FD4  
                   l1025 7FAA                     l1019 7F3E                     l1035 7FDE  
                   l1027 7FB0                     l1037 7FE0                     l1029 7FBA  
                   _LATD 000F8C                     _main 7FA0                     start 0000  
           ___param_bank 000000                    ?_main 0001          __end_of_adcInit 7FA0  
                  _ADRES 000FC3                    _PORTB 000F81                    _TRISD 000F95  
                  status 000FD8          __initialization 7F12             __end_of_main 8000  
                 ??_main 0005            __activetblptr 000002                ??_adcInit 0001  
                 tblptru 000FF8        adcGetValue@PinADC 0004               __accesstop 0060  
__end_of__initialization 7F12            ___rparam_used 000001           __pcstackCOMRAM 0001  
          ??_adcGetValue 0003      __end_of_adcGetValue 7F58                  __Hparam 0000  
                __Lparam 0000                  _adcInit 7F58                  __pcinit 7F12  
                __ramtop 0800                  __ptext0 7FA0                  __ptext1 7F58  
                __ptext2 7F1C     end_of_initialization 7F12            __Lmediumconst 0000  
              _PORTBbits 000F81              _adcGetValue 7F1C                _TRISAbits 000F92  
              _TRISDbits 000F95      start_initialization 7F12                 ?_adcInit 0001  
               _LATAbits 000F89                 _LATDbits 000F8C                 _GO_nDONE 007E11  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
           ?_adcGetValue 0001                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_adcInit 0048            __size_of_main 0060     __size_of_adcGetValue 003C  
