

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jun 03 00:13:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 12/02/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  0037EE                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _datos
   120  0037EE  00                 	db	0
   121  0037EF  0000               	dw	0
   122  0037F1  08                 	db	8
   123  0037F2  0000               	dw	0
   124  0037F4  00                 	db	0
   125  0037F5  00                 	db	0
   126  0037F6  00                 	db	0
   127  0037F7  00                 	db	0
   128  0037F8  00                 	db	0
   129  0037F9  00                 	db	0
   130  0037FA  00                 	db	0
   131  0037FB  00                 	db	0
   132  0037FC  00                 	db	0
   133  0037FD  00                 	db	0
   134  0037FE  00                 	db	0
   135  0037FF  00                 	db	0
   136  003800  00                 	db	0
   137  003801  00                 	db	0
   138  003802  00                 	db	0
   139  003803  00                 	db	0
   140  003804  00                 	db	0
   141  003805  F0                 	db	low _confirmacion
   142  003806  34                 	db	high _confirmacion
   143  0000                     _TMR0	set	4054
   144  0000                     _TMR3	set	4018
   145  0000                     _ADRES	set	4035
   146  0000                     _TXREG	set	4013
   147  0000                     _IPR1bits	set	3999
   148  0000                     _PIE1bits	set	3997
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _TXSTAbits	set	4012
   151  0000                     _SPBRG	set	4015
   152  0000                     _BAUDCONbits	set	4024
   153  0000                     _PORTAbits	set	3968
   154  0000                     _LATAbits	set	3977
   155  0000                     _RCONbits	set	4048
   156  0000                     _PIE2bits	set	4000
   157  0000                     _IPR2bits	set	4002
   158  0000                     _PIR2bits	set	4001
   159  0000                     _INTCONbits	set	4082
   160  0000                     _T0CONbits	set	4053
   161  0000                     _T3CONbits	set	4017
   162  0000                     _LATEbits	set	3981
   163  0000                     _PIR1bits	set	3998
   164  0000                     _PR2	set	4043
   165  0000                     _TMR2	set	4044
   166  0000                     _TRISEbits	set	3990
   167  0000                     _T2CONbits	set	4042
   168  0000                     _LATDbits	set	3980
   169  0000                     _TRISDbits	set	3989
   170  0000                     _PORTBbits	set	3969
   171  0000                     _PORTB	set	3969
   172  0000                     _RCREG	set	4014
   173  0000                     _TRISAbits	set	3986
   174  0000                     _INTCON2bits	set	4081
   175  0000                     _TRISB	set	3987
   176  0000                     _LATCbits	set	3979
   177  0000                     _TRISCbits	set	3988
   178  0000                     _ADCON0bits	set	4034
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON1bits	set	4033
   181  0000                     _RCIE	set	31981
   182  0000                     _RCIF	set	31989
   183  0000                     _TMR0IF	set	32658
   184  0000                     _TMR0IE	set	32661
   185  0000                     _TMR3IF	set	32009
   186  0000                     _TMR3IE	set	32001
   187  0000                     _GO_nDONE	set	32273
   188                           
   189                           	psect	smallconst
   190  000800                     __psmallconst:
   191                           	callstack 0
   192  000800  00                 	db	0
   193  000801                     STR_9:
   194  000801  52                 	db	82	;'R'
   195  000802  65                 	db	101	;'e'
   196  000803  63                 	db	99	;'c'
   197  000804  61                 	db	97	;'a'
   198  000805  72                 	db	114	;'r'
   199  000806  67                 	db	103	;'g'
   200  000807  61                 	db	97	;'a'
   201  000808  20                 	db	32
   202  000809  50                 	db	80	;'P'
   203  00080A  6F                 	db	111	;'o'
   204  00080B  72                 	db	114	;'r'
   205  00080C  66                 	db	102	;'f'
   206  00080D  61                 	db	97	;'a'
   207  00080E  76                 	db	118	;'v'
   208  00080F  6F                 	db	111	;'o'
   209  000810  72                 	db	114	;'r'
   210  000811  00                 	db	0
   211  000812                     STR_6:
   212  000812  43                 	db	67	;'C'
   213  000813  20                 	db	32
   214  000814  64                 	db	100	;'d'
   215  000815  65                 	db	101	;'e'
   216  000816  20                 	db	32
   217  000817  76                 	db	118	;'v'
   218  000818  61                 	db	97	;'a'
   219  000819  63                 	db	99	;'c'
   220  00081A  75                 	db	117	;'u'
   221  00081B  6E                 	db	110	;'n'
   222  00081C  61                 	db	97	;'a'
   223  00081D  73                 	db	115	;'s'
   224  00081E  3A                 	db	58	;':'
   225  00081F  00                 	db	0
   226  000820                     STR_1:
   227  000820  54                 	db	84	;'T'
   228  000821  3A                 	db	58	;':'
   229  000822  25                 	db	37
   230  000823  30                 	db	48	;'0'
   231  000824  32                 	db	50	;'2'
   232  000825  64                 	db	100	;'d'
   233  000826  2E                 	db	46
   234  000827  25                 	db	37
   235  000828  30                 	db	48	;'0'
   236  000829  32                 	db	50	;'2'
   237  00082A  64                 	db	100	;'d'
   238  00082B  20                 	db	32
   239  00082C  43                 	db	67	;'C'
   240  00082D  00                 	db	0
   241  00082E                     STR_12:
   242  00082E  49                 	db	73	;'I'
   243  00082F  6E                 	db	110	;'n'
   244  000830  66                 	db	102	;'f'
   245  000831  6F                 	db	111	;'o'
   246  000832  72                 	db	114	;'r'
   247  000833  6D                 	db	109	;'m'
   248  000834  61                 	db	97	;'a'
   249  000835  63                 	db	99	;'c'
   250  000836  69                 	db	105	;'i'
   251  000837  6F                 	db	111	;'o'
   252  000838  6E                 	db	110	;'n'
   253  000839  40                 	db	64	;'@'
   254  00083A  00                 	db	0
   255  00083B                     STR_10:
   256  00083B  43                 	db	67	;'C'
   257  00083C  6F                 	db	111	;'o'
   258  00083D  6E                 	db	110	;'n'
   259  00083E  66                 	db	102	;'f'
   260  00083F  69                 	db	105	;'i'
   261  000840  72                 	db	114	;'r'
   262  000841  6D                 	db	109	;'m'
   263  000842  61                 	db	97	;'a'
   264  000843  63                 	db	99	;'c'
   265  000844  69                 	db	105	;'i'
   266  000845  6F                 	db	111	;'o'
   267  000846  6E                 	db	110	;'n'
   268  000847  00                 	db	0
   269  000848                     STR_8:
   270  000848  53                 	db	83	;'S'
   271  000849  69                 	db	105	;'i'
   272  00084A  6E                 	db	110	;'n'
   273  00084B  20                 	db	32
   274  00084C  76                 	db	118	;'v'
   275  00084D  61                 	db	97	;'a'
   276  00084E  63                 	db	99	;'c'
   277  00084F  75                 	db	117	;'u'
   278  000850  6E                 	db	110	;'n'
   279  000851  61                 	db	97	;'a'
   280  000852  73                 	db	115	;'s'
   281  000853  00                 	db	0
   282  000854                     STR_3:
   283  000854  42                 	db	66	;'B'
   284  000855  69                 	db	105	;'i'
   285  000856  65                 	db	101	;'e'
   286  000857  6E                 	db	110	;'n'
   287  000858  76                 	db	118	;'v'
   288  000859  65                 	db	101	;'e'
   289  00085A  6E                 	db	110	;'n'
   290  00085B  69                 	db	105	;'i'
   291  00085C  64                 	db	100	;'d'
   292  00085D  6F                 	db	111	;'o'
   293  00085E  73                 	db	115	;'s'
   294  00085F  00                 	db	0
   295  000860                     STR_14:
   296  000860  41                 	db	65	;'A'
   297  000861  63                 	db	99	;'c'
   298  000862  74                 	db	116	;'t'
   299  000863  69                 	db	105	;'i'
   300  000864  76                 	db	118	;'v'
   301  000865  61                 	db	97	;'a'
   302  000866  64                 	db	100	;'d'
   303  000867  6F                 	db	111	;'o'
   304  000868  40                 	db	64	;'@'
   305  000869  00                 	db	0
   306  00086A                     STR_2:
   307  00086A  42                 	db	66	;'B'
   308  00086B  61                 	db	97	;'a'
   309  00086C  74                 	db	116	;'t'
   310  00086D  3A                 	db	58	;':'
   311  00086E  25                 	db	37
   312  00086F  30                 	db	48	;'0'
   313  000870  32                 	db	50	;'2'
   314  000871  64                 	db	100	;'d'
   315  000872  00                 	db	0
   316  000873                     STR_4:
   317  000873  53                 	db	83	;'S'
   318  000874  49                 	db	73	;'I'
   319  000875  43                 	db	67	;'C'
   320  000876  43                 	db	67	;'C'
   321  000877  56                 	db	86	;'V'
   322  000878  00                 	db	0
   323  000879                     STR_5:
   324  000879  23                 	db	35
   325  00087A  3A                 	db	58	;':'
   326  00087B  25                 	db	37
   327  00087C  64                 	db	100	;'d'
   328  00087D  00                 	db	0
   329  00087E  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334  0035CA                     __pcinit:
   335                           	callstack 0
   336  0035CA                     start_initialization:
   337                           	callstack 0
   338  0035CA                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK0 (25 bytes)
   342                           ; load TBLPTR registers with __pidataBANK0
   343  0035CA  0EEE               	movlw	low __pidataBANK0
   344  0035CC  6EF6               	movwf	tblptrl,c
   345  0035CE  0E37               	movlw	high __pidataBANK0
   346  0035D0  6EF7               	movwf	tblptrh,c
   347  0035D2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   348  0035D4  6EF8               	movwf	tblptru,c
   349  0035D6  EE00  F0C0         	lfsr	0,__pdataBANK0
   350  0035DA  EE10 F019          	lfsr	1,25
   351  0035DE                     copy_data0:
   352  0035DE  0009               	tblrd		*+
   353  0035E0  CFF5 FFEE          	movff	tablat,postinc0
   354  0035E4  50E5               	movf	postdec1,w,c
   355  0035E6  50E1               	movf	fsr1l,w,c
   356  0035E8  E1FA               	bnz	copy_data0
   357                           
   358                           ; Clear objects allocated to BANK0 (52 bytes)
   359  0035EA  EE00  F060         	lfsr	0,__pbssBANK0
   360  0035EE  0E34               	movlw	52
   361  0035F0                     clear_0:
   362  0035F0  6AEE               	clrf	postinc0,c
   363  0035F2  06E8               	decf	wreg,f,c
   364  0035F4  E1FD               	bnz	clear_0
   365                           
   366                           ; Clear objects allocated to COMRAM (5 bytes)
   367  0035F6  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   368  0035F8  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   369  0035FA  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   370  0035FC  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   371  0035FE  6A53               	clrf	__pbssCOMRAM& (0+255),c
   372  003600                     end_of_initialization:
   373                           	callstack 0
   374  003600                     __end_of__initialization:
   375                           	callstack 0
   376  003600  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   377  003602  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   378  003604  0E00               	movlw	low (__Lmediumconst shr (0+16))
   379  003606  6EF8               	movwf	tblptru,c
   380  003608  0100               	movlb	0
   381  00360A  EF9E  F01B         	goto	_main	;jump to C main() function
   382                           
   383                           	psect	bssCOMRAM
   384  000053                     __pbssCOMRAM:
   385                           	callstack 0
   386  000053                     _prec:
   387                           	callstack 0
   388  000053                     	ds	2
   389  000055                     _flags:
   390                           	callstack 0
   391  000055                     	ds	2
   392  000057                     isrH@counter:
   393                           	callstack 0
   394  000057                     	ds	1
   395                           
   396                           	psect	bssBANK0
   397  000060                     __pbssBANK0:
   398                           	callstack 0
   399  000060                     _nout:
   400                           	callstack 0
   401  000060                     	ds	2
   402  000062                     _width:
   403                           	callstack 0
   404  000062                     	ds	2
   405  000064                     _dbuf:
   406                           	callstack 0
   407  000064                     	ds	32
   408  000084                     _puerto:
   409                           	callstack 0
   410  000084                     	ds	16
   411                           
   412                           	psect	dataBANK0
   413  0000C0                     __pdataBANK0:
   414                           	callstack 0
   415  0000C0                     _datos:
   416                           	callstack 0
   417  0000C0                     	ds	25
   418                           
   419                           	psect	cstackBANK0
   420  000094                     __pcstackBANK0:
   421                           	callstack 0
   422  000094                     ___fltol@sign1:
   423                           	callstack 0
   424  000094                     vfpfcnvrt@ll:
   425                           	callstack 0
   426                           
   427                           ; 8 bytes @ 0x0
   428  000094                     	ds	1
   429  000095                     ___fltol@exp1:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x1
   433  000095                     	ds	1
   434  000096                     ?___awmod:
   435                           	callstack 0
   436  000096                     ___awmod@dividend:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2
   440  000096                     	ds	2
   441  000098                     ___awmod@divisor:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x4
   445  000098                     	ds	2
   446  00009A                     ___awmod@counter:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x6
   450  00009A                     	ds	1
   451  00009B                     ___awmod@sign:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x7
   455  00009B                     	ds	1
   456  00009C                     vfpfcnvrt@done:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x8
   460  00009C                     	ds	2
   461  00009E                     _vfpfcnvrt$2355:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xA
   465  00009E                     	ds	2
   466  0000A0                     ?_vfprintf:
   467                           	callstack 0
   468  0000A0                     vfprintf@fp:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xC
   472  0000A0                     	ds	2
   473  0000A2                     vfprintf@fmt:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xE
   477  0000A2                     	ds	2
   478  0000A4                     vfprintf@ap:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x10
   482  0000A4                     	ds	2
   483  0000A6                     ?_sprintf:
   484                           	callstack 0
   485  0000A6                     sprintf@s:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x12
   489  0000A6                     	ds	2
   490  0000A8                     sprintf@fmt:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x14
   494  0000A8                     	ds	8
   495  0000B0                     sprintf@ap:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1C
   499  0000B0                     	ds	2
   500  0000B2                     sprintf@f:
   501                           	callstack 0
   502                           
   503                           ; 6 bytes @ 0x1E
   504  0000B2                     	ds	6
   505  0000B8                     appADC@data:
   506                           	callstack 0
   507  0000B8                     appBat@data:
   508                           	callstack 0
   509  0000B8                     appElemts@data:
   510                           	callstack 0
   511  0000B8                     appSubGetData@data_Inout:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x24
   515  0000B8                     	ds	2
   516  0000BA                     ??_appBat:
   517  0000BA                     appSubGetData@cantidad:
   518                           	callstack 0
   519  0000BA                     appADC@lm35val:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x26
   523  0000BA                     	ds	2
   524  0000BC                     appSubGetData@inout:
   525                           	callstack 0
   526  0000BC                     _appBat$2655:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x28
   530  0000BC                     	ds	1
   531  0000BD                     ??_appGetElements:
   532                           
   533                           ; 1 bytes @ 0x29
   534  0000BD                     	ds	3
   535                           
   536                           	psect	cstackCOMRAM
   537  000001                     __pcstackCOMRAM:
   538                           	callstack 0
   539  000001                     ??_isrH:
   540  000001                     
   541                           ; 1 bytes @ 0x0
   542  000001                     	ds	3
   543  000004                     ??_isrL:
   544                           
   545                           ; 1 bytes @ 0x3
   546  000004                     	ds	3
   547  000007                     ??_Lcd_Cmd:
   548  000007                     ??_Lcd_Chr_CP:
   549  000007                     ??_adcInit:
   550  000007                     ?_memcmp:
   551                           	callstack 0
   552  000007                     ?_strlen:
   553                           	callstack 0
   554  000007                     ?_isdigit:
   555                           	callstack 0
   556  000007                     ?_isspace:
   557                           	callstack 0
   558  000007                     ?_adcGetValue:
   559                           	callstack 0
   560  000007                     ?___wmul:
   561                           	callstack 0
   562  000007                     ?___lldiv:
   563                           	callstack 0
   564  000007                     ?___aodiv:
   565                           	callstack 0
   566  000007                     ?___aomod:
   567                           	callstack 0
   568  000007                     setServoAngle@pin:
   569                           	callstack 0
   570  000007                     teclado@valor:
   571                           	callstack 0
   572  000007                     appCounterInit@reload:
   573                           	callstack 0
   574  000007                     ___wmul@multiplier:
   575                           	callstack 0
   576  000007                     memcmp@vl:
   577                           	callstack 0
   578  000007                     memset@dest:
   579                           	callstack 0
   580  000007                     isdigit@c:
   581                           	callstack 0
   582  000007                     isspace@c:
   583                           	callstack 0
   584  000007                     fputc@c:
   585                           	callstack 0
   586  000007                     strlen@s:
   587                           	callstack 0
   588  000007                     ___lldiv@dividend:
   589                           	callstack 0
   590  000007                     ___aodiv@dividend:
   591                           	callstack 0
   592  000007                     ___aomod@dividend:
   593                           	callstack 0
   594                           
   595                           ; 8 bytes @ 0x6
   596  000007                     	ds	1
   597  000008                     ??_setServoAngle:
   598  000008                     adcInit@ADC_PINs:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x7
   602  000008                     	ds	1
   603  000009                     ??_isdigit:
   604  000009                     ??_isspace:
   605  000009                     ??_adcGetValue:
   606  000009                     Lcd_Chr_CP@data:
   607                           	callstack 0
   608  000009                     Lcd_Cmd@data:
   609                           	callstack 0
   610  000009                     ___wmul@multiplicand:
   611                           	callstack 0
   612  000009                     memcmp@vr:
   613                           	callstack 0
   614  000009                     memset@c:
   615                           	callstack 0
   616  000009                     fputc@fp:
   617                           	callstack 0
   618  000009                     strlen@a:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x8
   622  000009                     	ds	1
   623  00000A                     ??_Lcd_Init:
   624  00000A                     adcGetValue@PinADC:
   625                           	callstack 0
   626  00000A                     Lcd_Out@x:
   627                           	callstack 0
   628  00000A                     setServoAngle@angle:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x9
   632  00000A                     	ds	1
   633  00000B                     ??_fputc:
   634  00000B                     ?___xxtofl:
   635                           	callstack 0
   636  00000B                     Lcd_Init@i:
   637                           	callstack 0
   638  00000B                     setServo@pulsos:
   639                           	callstack 0
   640  00000B                     Lcd_Out@buffer:
   641                           	callstack 0
   642  00000B                     sendData@data:
   643                           	callstack 0
   644  00000B                     ___wmul@product:
   645                           	callstack 0
   646  00000B                     memcmp@n:
   647                           	callstack 0
   648  00000B                     memset@n:
   649                           	callstack 0
   650  00000B                     ___lldiv@divisor:
   651                           	callstack 0
   652  00000B                     ___xxtofl@val:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0xA
   656  00000B                     	ds	1
   657  00000C                     setServo@pin:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0xB
   661  00000C                     	ds	1
   662  00000D                     ??_memset:
   663  00000D                     ??_Lcd_Out:
   664  00000D                     ??_sendData:
   665  00000D                     ??_memcmp:
   666  00000D                     setServo@angle:
   667                           	callstack 0
   668  00000D                     _isspace$2393:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xC
   672  00000D                     	ds	1
   673  00000E                     ?_atoi:
   674                           	callstack 0
   675  00000E                     setServo@i:
   676                           	callstack 0
   677  00000E                     memcmp@l:
   678                           	callstack 0
   679  00000E                     atoi@s:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xD
   683  00000E                     	ds	1
   684  00000F                     ??___xxtofl:
   685  00000F                     Lcd_Out@y:
   686                           	callstack 0
   687  00000F                     sendData@i:
   688                           	callstack 0
   689  00000F                     appSubGiveElemts@data:
   690                           	callstack 0
   691  00000F                     memset@k:
   692                           	callstack 0
   693  00000F                     ___lldiv@quotient:
   694                           	callstack 0
   695  00000F                     ___aodiv@divisor:
   696                           	callstack 0
   697  00000F                     ___aomod@divisor:
   698                           	callstack 0
   699                           
   700                           ; 8 bytes @ 0xE
   701  00000F                     	ds	1
   702  000010                     ??_atoi:
   703  000010                     Lcd_Out@data:
   704                           	callstack 0
   705  000010                     memcmp@r:
   706                           	callstack 0
   707  000010                     fputs@s:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0xF
   711  000010                     	ds	1
   712  000011                     ??_confirmacion:
   713  000011                     ??_warning:
   714  000011                     ??_appLCD_Init:
   715  000011                     memset@s:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x10
   719  000011                     	ds	1
   720  000012                     fputs@fp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x11
   724  000012                     	ds	1
   725  000013                     ??_readUART:
   726  000013                     ___lldiv@counter:
   727                           	callstack 0
   728  000013                     ___xxtofl@sign:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x12
   732  000013                     	ds	1
   733  000014                     ___xxtofl@exp:
   734                           	callstack 0
   735  000014                     fputs@c:
   736                           	callstack 0
   737  000014                     atoi@neg:
   738                           	callstack 0
   739  000014                     uart_Init@baud:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x13
   743  000014                     	ds	1
   744  000015                     fputs@i:
   745                           	callstack 0
   746  000015                     ___xxtofl@arg:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x14
   750  000015                     	ds	1
   751  000016                     _atoi$2375:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x15
   755  000016                     	ds	1
   756  000017                     ?_pad:
   757                           	callstack 0
   758  000017                     ___aodiv@counter:
   759                           	callstack 0
   760  000017                     ___aomod@counter:
   761                           	callstack 0
   762  000017                     pad@fp:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x16
   766  000017                     	ds	1
   767  000018                     ___aodiv@sign:
   768                           	callstack 0
   769  000018                     ___aomod@sign:
   770                           	callstack 0
   771  000018                     _atoi$2377:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x17
   775  000018                     	ds	1
   776  000019                     ?_abs:
   777                           	callstack 0
   778  000019                     ?___flmul:
   779                           	callstack 0
   780  000019                     pad@buf:
   781                           	callstack 0
   782  000019                     abs@a:
   783                           	callstack 0
   784  000019                     ___flmul@b:
   785                           	callstack 0
   786  000019                     ___aodiv@quotient:
   787                           	callstack 0
   788                           
   789                           ; 8 bytes @ 0x18
   790  000019                     	ds	1
   791  00001A                     _atoi$2376:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x19
   795  00001A                     	ds	1
   796  00001B                     ??_abs:
   797  00001B                     pad@p:
   798                           	callstack 0
   799  00001B                     atoi@n:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x1A
   803  00001B                     	ds	2
   804  00001D                     ??_pad:
   805  00001D                     ___flmul@a:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x1C
   809  00001D                     	ds	1
   810  00001E                     pad@i:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x1D
   814  00001E                     	ds	2
   815  000020                     pad@w:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x1F
   819  000020                     	ds	1
   820  000021                     ??___flmul:
   821                           
   822                           ; 1 bytes @ 0x20
   823  000021                     	ds	1
   824  000022                     ?_dtoa:
   825                           	callstack 0
   826  000022                     dtoa@fp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x21
   830  000022                     	ds	2
   831  000024                     dtoa@d:
   832                           	callstack 0
   833                           
   834                           ; 8 bytes @ 0x23
   835  000024                     	ds	1
   836  000025                     ___flmul@sign:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x24
   840  000025                     	ds	1
   841  000026                     ___flmul@grs:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x25
   845  000026                     	ds	4
   846  00002A                     ___flmul@aexp:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x29
   850  00002A                     	ds	1
   851  00002B                     ___flmul@bexp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x2A
   855  00002B                     	ds	1
   856  00002C                     ??_dtoa:
   857  00002C                     ___flmul@prod:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x2B
   861  00002C                     	ds	4
   862  000030                     ___flmul@temp:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x2F
   866  000030                     	ds	2
   867  000032                     ?___fldiv:
   868                           	callstack 0
   869  000032                     ___fldiv@b:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x31
   873  000032                     	ds	2
   874  000034                     _dtoa$2340:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x33
   878  000034                     	ds	2
   879  000036                     dtoa@p:
   880                           	callstack 0
   881  000036                     ___fldiv@a:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x35
   885  000036                     	ds	2
   886  000038                     dtoa@w:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x37
   890  000038                     	ds	2
   891  00003A                     ??___fldiv:
   892  00003A                     dtoa@s:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x39
   896  00003A                     	ds	2
   897  00003C                     dtoa@n:
   898                           	callstack 0
   899                           
   900                           ; 8 bytes @ 0x3B
   901  00003C                     	ds	2
   902  00003E                     ___fldiv@rem:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x3D
   906  00003E                     	ds	4
   907  000042                     ___fldiv@sign:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x41
   911  000042                     	ds	1
   912  000043                     ___fldiv@new_exp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x42
   916  000043                     	ds	1
   917  000044                     dtoa@i:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x43
   921  000044                     	ds	1
   922  000045                     ___fldiv@grs:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x44
   926  000045                     	ds	1
   927  000046                     ?_vfpfcnvrt:
   928                           	callstack 0
   929  000046                     vfpfcnvrt@fp:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x45
   933  000046                     	ds	2
   934  000048                     vfpfcnvrt@fmt:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x47
   938  000048                     	ds	1
   939  000049                     ___fldiv@bexp:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x48
   943  000049                     	ds	1
   944  00004A                     ___fldiv@aexp:
   945                           	callstack 0
   946  00004A                     vfpfcnvrt@ap:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x49
   950  00004A                     	ds	1
   951  00004B                     ?___fltol:
   952                           	callstack 0
   953  00004B                     ___fltol@f1:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x4A
   957  00004B                     	ds	1
   958  00004C                     ??_vfpfcnvrt:
   959                           
   960                           ; 1 bytes @ 0x4B
   961  00004C                     	ds	3
   962  00004F                     ??___fltol:
   963                           
   964                           ; 1 bytes @ 0x4E
   965  00004F                     	ds	1
   966  000050                     vfprintf@cfmt:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x4F
   970  000050                     	ds	3
   971  000053                     
   972                           ; 1 bytes @ 0x52
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   975 ;;
   976 ;; *************** function _main *****************
   977 ;; Defined at:
   978 ;;		line 13 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         0       0       0       0       0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels required when called:   12
   998 ;; This function calls:
   999 ;;		_appGetElements
  1000 ;;		_appInit
  1001 ;;		_appStateInitial
  1002 ;;		_appStateRecolectData
  1003 ;;		_confirmacion
  1004 ;;		_readUART
  1005 ;;		_sendinformation
  1006 ;;		_warning
  1007 ;; This function is called by:
  1008 ;;		Startup code after reset
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text0
  1013  00373C                     __ptext0:
  1014                           	callstack 0
  1015  00373C                     _main:
  1016                           	callstack 19
  1017  00373C                     
  1018                           ;main.c: 15:     TRISB = 0xF0;
  1019  00373C  0EF0               	movlw	240
  1020  00373E  6E93               	movwf	147,c	;volatile
  1021  003740                     
  1022                           ;main.c: 16:     INTCON2bits.RBPU = 0;
  1023  003740  9EF1               	bcf	241,7,c	;volatile
  1024  003742                     
  1025                           ;main.c: 17:     TRISAbits.TRISA2 = 0;
  1026  003742  9492               	bcf	146,2,c	;volatile
  1027  003744                     
  1028                           ;main.c: 18:     TRISAbits.TRISA5 = 0;
  1029  003744  9A92               	bcf	146,5,c	;volatile
  1030  003746                     
  1031                           ;main.c: 19:     appInit();
  1032  003746  ECC2  F01A         	call	_appInit	;wreg free
  1033  00374A                     l4817:
  1034                           
  1035                           ;main.c: 21:     {;main.c: 24:         datos.nextFunc();
  1036  00374A  EE20  F0D7         	lfsr	2,_datos+23
  1037  00374E  D802               	call	u4348
  1038  003750  EFB4  F01B         	goto	u4349
  1039  003754                     u4348:
  1040  003754  0005               	push	
  1041  003756  6EFA               	movwf	pclath,c
  1042  003758  50DE               	movf	postinc2,w,c
  1043  00375A  6EFD               	movwf	tosl,c
  1044  00375C  50DE               	movf	postinc2,w,c
  1045  00375E  6EFE               	movwf	tosh,c
  1046  003760  50F8               	movf	tblptru,w,c
  1047  003762  6EFF               	movwf	tosu,c
  1048  003764  50FA               	movf	pclath,w,c
  1049  003766  0012               	return		;indir
  1050  003768                     u4349:
  1051  003768  EFA5  F01B         	goto	l4817
  1052  00376C  EF5E  F000         	goto	start
  1053  003770                     __end_of_main:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _sendinformation *****************
  1057 ;; Defined at:
  1058 ;;		line 131 in file "app.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:   11
  1079 ;; This function calls:
  1080 ;;		_appADC
  1081 ;;		_appBat
  1082 ;;		_appElemts
  1083 ;;		_appTimerStart
  1084 ;;		_memset
  1085 ;;		_sendData
  1086 ;;		_sprintf
  1087 ;; This function is called by:
  1088 ;;		_readUART
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text1
  1094  002D36                     __ptext1:
  1095                           	callstack 0
  1096  002D36                     _sendinformation:
  1097                           	callstack 19
  1098  002D36                     
  1099                           ;app.c: 133:     appADC(&datos);
  1100  002D36  0EC0               	movlw	low _datos
  1101  002D38  0100               	movlb	0	; () banked
  1102  002D3A  6FB8               	movwf	appADC@data& (0+255),b
  1103  002D3C  0E00               	movlw	high _datos
  1104  002D3E  6FB9               	movwf	(appADC@data+1)& (0+255),b
  1105  002D40  EC0A  F00E         	call	_appADC	;wreg free
  1106  002D44                     
  1107                           ;app.c: 134:     sendData(&datos);
  1108  002D44  0EC0               	movlw	low _datos
  1109  002D46  6E0B               	movwf	sendData@data^0,c
  1110  002D48  0E00               	movlw	high _datos
  1111  002D4A  6E0C               	movwf	(sendData@data+1)^0,c
  1112  002D4C  EC73  F019         	call	_sendData	;wreg free
  1113  002D50                     
  1114                           ;app.c: 135:     appBat(&datos);
  1115  002D50  0EC0               	movlw	low _datos
  1116  002D52  0100               	movlb	0	; () banked
  1117  002D54  6FB8               	movwf	appBat@data& (0+255),b
  1118  002D56  0E00               	movlw	high _datos
  1119  002D58  6FB9               	movwf	(appBat@data+1)& (0+255),b
  1120  002D5A  EC3C  F00C         	call	_appBat	;wreg free
  1121                           
  1122                           ;app.c: 136:     sendData(&datos);
  1123  002D5E  0EC0               	movlw	low _datos
  1124  002D60  6E0B               	movwf	sendData@data^0,c
  1125  002D62  0E00               	movlw	high _datos
  1126  002D64  6E0C               	movwf	(sendData@data+1)^0,c
  1127  002D66  EC73  F019         	call	_sendData	;wreg free
  1128  002D6A                     
  1129                           ;app.c: 137:     appElemts(&datos);
  1130  002D6A  0EC0               	movlw	low _datos
  1131  002D6C  0100               	movlb	0	; () banked
  1132  002D6E  6FB8               	movwf	appElemts@data& (0+255),b
  1133  002D70  0E00               	movlw	high _datos
  1134  002D72  6FB9               	movwf	(appElemts@data+1)& (0+255),b
  1135  002D74  EC40  F019         	call	_appElemts	;wreg free
  1136  002D78                     
  1137                           ;app.c: 138:     sendData(&datos);
  1138  002D78  0EC0               	movlw	low _datos
  1139  002D7A  6E0B               	movwf	sendData@data^0,c
  1140  002D7C  0E00               	movlw	high _datos
  1141  002D7E  6E0C               	movwf	(sendData@data+1)^0,c
  1142  002D80  EC73  F019         	call	_sendData	;wreg free
  1143  002D84                     
  1144                           ;app.c: 139:     memset(datos.display,0,sizeof(datos.display));
  1145  002D84  0EC7               	movlw	low (_datos+7)
  1146  002D86  6E07               	movwf	memset@dest^0,c
  1147  002D88  0E00               	movlw	high (_datos+7)
  1148  002D8A  6E08               	movwf	(memset@dest+1)^0,c
  1149  002D8C  0E00               	movlw	0
  1150  002D8E  6E0A               	movwf	(memset@c+1)^0,c
  1151  002D90  0E00               	movlw	0
  1152  002D92  6E09               	movwf	memset@c^0,c
  1153  002D94  0E00               	movlw	0
  1154  002D96  6E0C               	movwf	(memset@n+1)^0,c
  1155  002D98  0E10               	movlw	16
  1156  002D9A  6E0B               	movwf	memset@n^0,c
  1157  002D9C  EC6D  F010         	call	_memset	;wreg free
  1158  002DA0                     
  1159                           ;app.c: 140:     sprintf((char *)datos.display,"@");
  1160  002DA0  0EC7               	movlw	low (_datos+7)
  1161  002DA2  0100               	movlb	0	; () banked
  1162  002DA4  6FA6               	movwf	sprintf@s& (0+255),b
  1163  002DA6  0E00               	movlw	high (_datos+7)
  1164  002DA8  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  1165  002DAA  0E39               	movlw	low (STR_12+11)
  1166  002DAC  6FA8               	movwf	sprintf@fmt& (0+255),b
  1167  002DAE  0E08               	movlw	high (STR_12+11)
  1168  002DB0  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  1169  002DB2  EC01  F01A         	call	_sprintf	;wreg free
  1170                           
  1171                           ;app.c: 141:     sendData(&datos);
  1172  002DB6  0EC0               	movlw	low _datos
  1173  002DB8  6E0B               	movwf	sendData@data^0,c
  1174  002DBA  0E00               	movlw	high _datos
  1175  002DBC  6E0C               	movwf	(sendData@data+1)^0,c
  1176  002DBE  EC73  F019         	call	_sendData	;wreg free
  1177  002DC2                     
  1178                           ;app.c: 143:     appTimerStart();
  1179  002DC2  EC1A  F01C         	call	_appTimerStart	;wreg free
  1180  002DC6                     
  1181                           ;app.c: 144:     memset(datos.display,0,sizeof(datos.display));
  1182  002DC6  0EC7               	movlw	low (_datos+7)
  1183  002DC8  6E07               	movwf	memset@dest^0,c
  1184  002DCA  0E00               	movlw	high (_datos+7)
  1185  002DCC  6E08               	movwf	(memset@dest+1)^0,c
  1186  002DCE  0E00               	movlw	0
  1187  002DD0  6E0A               	movwf	(memset@c+1)^0,c
  1188  002DD2  0E00               	movlw	0
  1189  002DD4  6E09               	movwf	memset@c^0,c
  1190  002DD6  0E00               	movlw	0
  1191  002DD8  6E0C               	movwf	(memset@n+1)^0,c
  1192  002DDA  0E10               	movlw	16
  1193  002DDC  6E0B               	movwf	memset@n^0,c
  1194  002DDE  EC6D  F010         	call	_memset	;wreg free
  1195  002DE2                     
  1196                           ;app.c: 145:     datos.state = 0;
  1197  002DE2  0E00               	movlw	0
  1198  002DE4  0100               	movlb	0	; () banked
  1199  002DE6  6FC3               	movwf	(_datos+3)& (0+255),b
  1200  002DE8                     
  1201                           ; BSR set to: 0
  1202                           ;app.c: 146:     datos.nextFunc = appStateInitial;
  1203  002DE8  0EA6               	movlw	low _appStateInitial
  1204  002DEA  6FD7               	movwf	(_datos+23)& (0+255),b
  1205  002DEC  0E34               	movlw	high _appStateInitial
  1206  002DEE  6FD8               	movwf	(_datos+24)& (0+255),b
  1207  002DF0                     
  1208                           ; BSR set to: 0
  1209  002DF0  0012               	return		;funcret
  1210  002DF2                     __end_of_sendinformation:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _appStateInitial *****************
  1214 ;; Defined at:
  1215 ;;		line 56 in file "app.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    4
  1236 ;; This function calls:
  1237 ;;		_setServo
  1238 ;;		_teclado
  1239 ;; This function is called by:
  1240 ;;		_appStateRecolectData
  1241 ;;		_appGetElements
  1242 ;;		_sendinformation
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text2
  1248  0034A6                     __ptext2:
  1249                           	callstack 0
  1250  0034A6                     _appStateInitial:
  1251                           	callstack 26
  1252  0034A6                     
  1253                           ;app.c: 59:     teclado(&datos.character);
  1254  0034A6  0EC6               	movlw	low (_datos+6)
  1255  0034A8  6E07               	movwf	teclado@valor^0,c
  1256  0034AA  0E00               	movlw	high (_datos+6)
  1257  0034AC  6E08               	movwf	(teclado@valor+1)^0,c
  1258  0034AE  EC47  F00B         	call	_teclado	;wreg free
  1259  0034B2                     
  1260                           ;app.c: 60:     if(datos.character != 0)
  1261  0034B2  0100               	movlb	0	; () banked
  1262  0034B4  51C6               	movf	(_datos+6)& (0+255),w,b
  1263  0034B6  B4D8               	btfsc	status,2,c
  1264  0034B8  EF60  F01A         	goto	u3921
  1265  0034BC  EF62  F01A         	goto	u3920
  1266  0034C0                     u3921:
  1267  0034C0  EF68  F01A         	goto	l356
  1268  0034C4                     u3920:
  1269  0034C4                     
  1270                           ; BSR set to: 0
  1271                           ;app.c: 61:     {;app.c: 62:         datos.state = 1;
  1272  0034C4  0E01               	movlw	1
  1273  0034C6  6FC3               	movwf	(_datos+3)& (0+255),b
  1274                           
  1275                           ;app.c: 63:         datos.character = 0;
  1276  0034C8  0E00               	movlw	0
  1277  0034CA  6FC6               	movwf	(_datos+6)& (0+255),b
  1278                           
  1279                           ;app.c: 64:     }
  1280  0034CC  EF77  F01A         	goto	l359
  1281  0034D0                     l356:
  1282                           
  1283                           ; BSR set to: 0
  1284  0034D0  A680               	btfss	128,3,c	;volatile
  1285  0034D2  EF6D  F01A         	goto	u3931
  1286  0034D6  EF6F  F01A         	goto	u3930
  1287  0034DA                     u3931:
  1288  0034DA  EF77  F01A         	goto	l359
  1289  0034DE                     u3930:
  1290  0034DE                     
  1291                           ; BSR set to: 0
  1292                           ;app.c: 66:     {;app.c: 67:         setServo(33,10,0);
  1293  0034DE  0E0A               	movlw	10
  1294  0034E0  6E0B               	movwf	setServo@pulsos^0,c
  1295  0034E2  0E00               	movlw	0
  1296  0034E4  6E0C               	movwf	setServo@pin^0,c
  1297  0034E6  0E21               	movlw	33
  1298  0034E8  ECCF  F01B         	call	_setServo
  1299  0034EC                     
  1300                           ;app.c: 68:         TMR3IF = 1;
  1301  0034EC  82A1               	bsf	4001,1,c	;volatile
  1302  0034EE                     l359:
  1303  0034EE  0012               	return		;funcret
  1304  0034F0                     __end_of_appStateInitial:
  1305                           	callstack 0
  1306                           
  1307 ;; *************** function _readUART *****************
  1308 ;; Defined at:
  1309 ;;		line 39 in file "UART.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1323 ;;      Params:         0       0       0       0       0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1325 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1326 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1327 ;;Total ram usage:        2 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    3
  1330 ;; This function calls:
  1331 ;;		_Lcd_Cmd
  1332 ;;		_memcmp
  1333 ;;		_memset
  1334 ;; This function is called by:
  1335 ;;		_isrH
  1336 ;;		_main
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text3
  1341  00294E                     __ptext3:
  1342                           	callstack 0
  1343  00294E                     _readUART:
  1344                           	callstack 27
  1345  00294E                     
  1346                           ;UART.c: 43:     if(!memcmp(puerto,"Informacion@",12))
  1347  00294E  0E84               	movlw	low _puerto
  1348  002950  6E07               	movwf	memcmp@vl^0,c
  1349  002952  0E00               	movlw	high _puerto
  1350  002954  6E08               	movwf	(memcmp@vl+1)^0,c
  1351  002956  0E2E               	movlw	low STR_12
  1352  002958  6E09               	movwf	memcmp@vr^0,c
  1353  00295A  0E08               	movlw	high STR_12
  1354  00295C  6E0A               	movwf	(memcmp@vr+1)^0,c
  1355  00295E  0E00               	movlw	0
  1356  002960  6E0C               	movwf	(memcmp@n+1)^0,c
  1357  002962  0E0C               	movlw	12
  1358  002964  6E0B               	movwf	memcmp@n^0,c
  1359  002966  ECF6  F017         	call	_memcmp	;wreg free
  1360  00296A  5007               	movf	?_memcmp^0,w,c
  1361  00296C  1008               	iorwf	(?_memcmp+1)^0,w,c
  1362  00296E  A4D8               	btfss	status,2,c
  1363  002970  EFBC  F014         	goto	u4321
  1364  002974  EFBE  F014         	goto	u4320
  1365  002978                     u4321:
  1366  002978  EFD3  F014         	goto	l4795
  1367  00297C                     u4320:
  1368  00297C                     
  1369                           ;UART.c: 44:     {;UART.c: 45:         memset(puerto,0,sizeof(puerto));
  1370  00297C  0E84               	movlw	low _puerto
  1371  00297E  6E07               	movwf	memset@dest^0,c
  1372  002980  0E00               	movlw	high _puerto
  1373  002982  6E08               	movwf	(memset@dest+1)^0,c
  1374  002984  0E00               	movlw	0
  1375  002986  6E0A               	movwf	(memset@c+1)^0,c
  1376  002988  0E00               	movlw	0
  1377  00298A  6E09               	movwf	memset@c^0,c
  1378  00298C  0E00               	movlw	0
  1379  00298E  6E0C               	movwf	(memset@n+1)^0,c
  1380  002990  0E08               	movlw	8
  1381  002992  6E0B               	movwf	memset@n^0,c
  1382  002994  EC6D  F010         	call	_memset	;wreg free
  1383  002998                     
  1384                           ;UART.c: 46:         datos.nextFunc = sendinformation;
  1385  002998  0E36               	movlw	low _sendinformation
  1386  00299A  0100               	movlb	0	; () banked
  1387  00299C  6FD7               	movwf	(_datos+23)& (0+255),b
  1388  00299E  0E2D               	movlw	high _sendinformation
  1389  0029A0  6FD8               	movwf	(_datos+24)& (0+255),b
  1390                           
  1391                           ;UART.c: 47:     }
  1392  0029A2  EF0E  F015         	goto	l430
  1393  0029A6                     l4795:
  1394  0029A6  0E84               	movlw	low _puerto
  1395  0029A8  6E07               	movwf	memcmp@vl^0,c
  1396  0029AA  0E00               	movlw	high _puerto
  1397  0029AC  6E08               	movwf	(memcmp@vl+1)^0,c
  1398  0029AE  0E60               	movlw	low STR_14
  1399  0029B0  6E09               	movwf	memcmp@vr^0,c
  1400  0029B2  0E08               	movlw	high STR_14
  1401  0029B4  6E0A               	movwf	(memcmp@vr+1)^0,c
  1402  0029B6  0E00               	movlw	0
  1403  0029B8  6E0C               	movwf	(memcmp@n+1)^0,c
  1404  0029BA  0E09               	movlw	9
  1405  0029BC  6E0B               	movwf	memcmp@n^0,c
  1406  0029BE  ECF6  F017         	call	_memcmp	;wreg free
  1407  0029C2  5007               	movf	?_memcmp^0,w,c
  1408  0029C4  1008               	iorwf	(?_memcmp+1)^0,w,c
  1409  0029C6  A4D8               	btfss	status,2,c
  1410  0029C8  EFE8  F014         	goto	u4331
  1411  0029CC  EFEA  F014         	goto	u4330
  1412  0029D0                     u4331:
  1413  0029D0  EF0E  F015         	goto	l430
  1414  0029D4                     u4330:
  1415  0029D4                     
  1416                           ;UART.c: 49:     {;UART.c: 50:         (Lcd_Cmd(1),_delay((unsigned long)((100)*(1200000
      +                          0/4000.0))));
  1417  0029D4  0E01               	movlw	1
  1418  0029D6  EC81  F012         	call	_Lcd_Cmd
  1419  0029DA  0E02               	movlw	2
  1420  0029DC  6E14               	movwf	(??_readUART+1)^0,c
  1421  0029DE  0E86               	movlw	134
  1422  0029E0  6E13               	movwf	??_readUART^0,c
  1423  0029E2  0E99               	movlw	153
  1424  0029E4                     u4467:
  1425  0029E4  2EE8               	decfsz	wreg,f,c
  1426  0029E6  D7FE               	bra	u4467
  1427  0029E8  2E13               	decfsz	??_readUART^0,f,c
  1428  0029EA  D7FC               	bra	u4467
  1429  0029EC  2E14               	decfsz	(??_readUART+1)^0,f,c
  1430  0029EE  D7FA               	bra	u4467
  1431  0029F0  F000               	nop	
  1432  0029F2                     
  1433                           ;UART.c: 51:         memset(puerto,0,sizeof(puerto));
  1434  0029F2  0E84               	movlw	low _puerto
  1435  0029F4  6E07               	movwf	memset@dest^0,c
  1436  0029F6  0E00               	movlw	high _puerto
  1437  0029F8  6E08               	movwf	(memset@dest+1)^0,c
  1438  0029FA  0E00               	movlw	0
  1439  0029FC  6E0A               	movwf	(memset@c+1)^0,c
  1440  0029FE  0E00               	movlw	0
  1441  002A00  6E09               	movwf	memset@c^0,c
  1442  002A02  0E00               	movlw	0
  1443  002A04  6E0C               	movwf	(memset@n+1)^0,c
  1444  002A06  0E08               	movlw	8
  1445  002A08  6E0B               	movwf	memset@n^0,c
  1446  002A0A  EC6D  F010         	call	_memset	;wreg free
  1447  002A0E                     
  1448                           ;UART.c: 52:         datos.state = 0;
  1449  002A0E  0E00               	movlw	0
  1450  002A10  0100               	movlb	0	; () banked
  1451  002A12  6FC3               	movwf	(_datos+3)& (0+255),b
  1452  002A14                     
  1453                           ; BSR set to: 0
  1454                           ;UART.c: 53:         datos.nextFunc = appStateRecolectData;
  1455  002A14  0E8A               	movlw	low _appStateRecolectData
  1456  002A16  6FD7               	movwf	(_datos+23)& (0+255),b
  1457  002A18  0E30               	movlw	high _appStateRecolectData
  1458  002A1A  6FD8               	movwf	(_datos+24)& (0+255),b
  1459  002A1C                     l430:
  1460  002A1C  0012               	return		;funcret
  1461  002A1E                     __end_of_readUART:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _appGetElements *****************
  1465 ;; Defined at:
  1466 ;;		line 72 in file "app.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1482 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1483 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1484 ;;Total ram usage:        2 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:   11
  1487 ;; This function calls:
  1488 ;;		_Lcd_Cmd
  1489 ;;		_appSubGetData
  1490 ;;		_appSubGiveElemts
  1491 ;;		_appTimerStart
  1492 ;;		_appTimerStop
  1493 ;; This function is called by:
  1494 ;;		_isrL
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text4
  1500  0031A2                     __ptext4:
  1501                           	callstack 0
  1502  0031A2                     _appGetElements:
  1503                           	callstack 19
  1504  0031A2                     
  1505                           ;app.c: 74:     datos.state = 2;
  1506  0031A2  0E02               	movlw	2
  1507  0031A4  0100               	movlb	0	; () banked
  1508  0031A6  6FC3               	movwf	(_datos+3)& (0+255),b
  1509  0031A8                     
  1510                           ; BSR set to: 0
  1511                           ;app.c: 75:     appTimerStop();
  1512  0031A8  EC2B  F01C         	call	_appTimerStop	;wreg free
  1513  0031AC                     
  1514                           ;app.c: 76:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1515  0031AC  0E01               	movlw	1
  1516  0031AE  EC81  F012         	call	_Lcd_Cmd
  1517  0031B2  0E02               	movlw	2
  1518  0031B4  0100               	movlb	0	; () banked
  1519  0031B6  6FBE               	movwf	(??_appGetElements+1)& (0+255),b
  1520  0031B8  0E86               	movlw	134
  1521  0031BA  6FBD               	movwf	??_appGetElements& (0+255),b
  1522  0031BC  0E99               	movlw	153
  1523  0031BE                     u4477:
  1524  0031BE  2EE8               	decfsz	wreg,f,c
  1525  0031C0  D7FE               	bra	u4477
  1526  0031C2  2FBD               	decfsz	??_appGetElements& (0+255),f,b
  1527  0031C4  D7FC               	bra	u4477
  1528  0031C6  2FBE               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1529  0031C8  D7FA               	bra	u4477
  1530  0031CA                     
  1531                           ;app.c: 77:     appSubGetData(&datos);
  1532  0031CA  0EC0               	movlw	low _datos
  1533  0031CC  0100               	movlb	0	; () banked
  1534  0031CE  6FB8               	movwf	appSubGetData@data_Inout& (0+255),b
  1535  0031D0  0E00               	movlw	high _datos
  1536  0031D2  6FB9               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1537  0031D4  EC28  F014         	call	_appSubGetData	;wreg free
  1538  0031D8                     
  1539                           ;app.c: 78:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1540  0031D8  0E01               	movlw	1
  1541  0031DA  EC81  F012         	call	_Lcd_Cmd
  1542  0031DE  0E02               	movlw	2
  1543  0031E0  0100               	movlb	0	; () banked
  1544  0031E2  6FBE               	movwf	(??_appGetElements+1)& (0+255),b
  1545  0031E4  0E86               	movlw	134
  1546  0031E6  6FBD               	movwf	??_appGetElements& (0+255),b
  1547  0031E8  0E99               	movlw	153
  1548  0031EA                     u4487:
  1549  0031EA  2EE8               	decfsz	wreg,f,c
  1550  0031EC  D7FE               	bra	u4487
  1551  0031EE  2FBD               	decfsz	??_appGetElements& (0+255),f,b
  1552  0031F0  D7FC               	bra	u4487
  1553  0031F2  2FBE               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1554  0031F4  D7FA               	bra	u4487
  1555  0031F6                     
  1556                           ;app.c: 79:     appSubGiveElemts(&datos);
  1557  0031F6  0EC0               	movlw	low _datos
  1558  0031F8  6E0F               	movwf	appSubGiveElemts@data^0,c
  1559  0031FA  0E00               	movlw	high _datos
  1560  0031FC  6E10               	movwf	(appSubGiveElemts@data+1)^0,c
  1561  0031FE  EC10  F01C         	call	_appSubGiveElemts	;wreg free
  1562  003202                     
  1563                           ;app.c: 80:     datos.nextFunc = appStateInitial;
  1564  003202  0EA6               	movlw	low _appStateInitial
  1565  003204  0100               	movlb	0	; () banked
  1566  003206  6FD7               	movwf	(_datos+23)& (0+255),b
  1567  003208  0E34               	movlw	high _appStateInitial
  1568  00320A  6FD8               	movwf	(_datos+24)& (0+255),b
  1569  00320C                     
  1570                           ; BSR set to: 0
  1571                           ;app.c: 81:     appTimerStart();
  1572  00320C  EC1A  F01C         	call	_appTimerStart	;wreg free
  1573  003210  0012               	return		;funcret
  1574  003212                     __end_of_appGetElements:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _appStateRecolectData *****************
  1578 ;; Defined at:
  1579 ;;		line 35 in file "app.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:   11
  1600 ;; This function calls:
  1601 ;;		_appADC
  1602 ;;		_appBat
  1603 ;;		_appCounterStop
  1604 ;;		_appElemts
  1605 ;;		_setServo
  1606 ;; This function is called by:
  1607 ;;		_isrL
  1608 ;;		_readUART
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text5
  1614  00308A                     __ptext5:
  1615                           	callstack 0
  1616  00308A                     _appStateRecolectData:
  1617                           	callstack 19
  1618  00308A                     
  1619                           ;app.c: 37:     appADC(&datos);
  1620  00308A  0EC0               	movlw	low _datos
  1621  00308C  0100               	movlb	0	; () banked
  1622  00308E  6FB8               	movwf	appADC@data& (0+255),b
  1623  003090  0E00               	movlw	high _datos
  1624  003092  6FB9               	movwf	(appADC@data+1)& (0+255),b
  1625  003094  EC0A  F00E         	call	_appADC	;wreg free
  1626                           
  1627                           ;app.c: 38:     appBat(&datos);
  1628  003098  0EC0               	movlw	low _datos
  1629  00309A  0100               	movlb	0	; () banked
  1630  00309C  6FB8               	movwf	appBat@data& (0+255),b
  1631  00309E  0E00               	movlw	high _datos
  1632  0030A0  6FB9               	movwf	(appBat@data+1)& (0+255),b
  1633  0030A2  EC3C  F00C         	call	_appBat	;wreg free
  1634                           
  1635                           ;app.c: 40:     appElemts(&datos);
  1636  0030A6  0EC0               	movlw	low _datos
  1637  0030A8  0100               	movlb	0	; () banked
  1638  0030AA  6FB8               	movwf	appElemts@data& (0+255),b
  1639  0030AC  0E00               	movlw	high _datos
  1640  0030AE  6FB9               	movwf	(appElemts@data+1)& (0+255),b
  1641  0030B0  EC40  F019         	call	_appElemts	;wreg free
  1642  0030B4                     
  1643                           ;app.c: 41:     if(datos.state == 2)
  1644  0030B4  0E02               	movlw	2
  1645  0030B6  0100               	movlb	0	; () banked
  1646  0030B8  19C3               	xorwf	(_datos+3)& (0+255),w,b
  1647  0030BA  A4D8               	btfss	status,2,c
  1648  0030BC  EF62  F018         	goto	u4301
  1649  0030C0  EF64  F018         	goto	u4300
  1650  0030C4                     u4301:
  1651  0030C4  EF89  F018         	goto	l4745
  1652  0030C8                     u4300:
  1653  0030C8                     
  1654                           ; BSR set to: 0
  1655                           ;app.c: 42:     {;app.c: 43:         LATAbits.LA5 = 1;
  1656  0030C8  8A89               	bsf	137,5,c	;volatile
  1657  0030CA                     
  1658                           ; BSR set to: 0
  1659                           ;app.c: 44:         if(datos.elements == TMR0)
  1660  0030CA  50D6               	movf	214,w,c	;volatile
  1661  0030CC  19C1               	xorwf	(_datos+1)& (0+255),w,b
  1662  0030CE  E107               	bnz	u4311
  1663  0030D0  50D7               	movf	215,w,c	;volatile
  1664  0030D2  19C2               	xorwf	(_datos+2)& (0+255),w,b
  1665  0030D4  A4D8               	btfss	status,2,c
  1666  0030D6  EF6F  F018         	goto	u4311
  1667  0030DA  EF71  F018         	goto	u4310
  1668  0030DE                     u4311:
  1669  0030DE  EF89  F018         	goto	l4745
  1670  0030E2                     u4310:
  1671  0030E2                     
  1672                           ; BSR set to: 0
  1673                           ;app.c: 45:         {;app.c: 46:             datos.elements = (int16_t)TMR0;
  1674  0030E2  CFD6 F0C1          	movff	4054,_datos+1	;volatile
  1675  0030E6  CFD7 F0C2          	movff	4055,_datos+2	;volatile
  1676  0030EA                     
  1677                           ; BSR set to: 0
  1678                           ;app.c: 47:             appCounterStop();
  1679  0030EA  EC29  F01C         	call	_appCounterStop	;wreg free
  1680  0030EE                     
  1681                           ;app.c: 48:             datos.state = 0;
  1682  0030EE  0E00               	movlw	0
  1683  0030F0  0100               	movlb	0	; () banked
  1684  0030F2  6FC3               	movwf	(_datos+3)& (0+255),b
  1685  0030F4                     
  1686                           ; BSR set to: 0
  1687                           ;app.c: 49:             setServo(33,10,2);
  1688  0030F4  0E0A               	movlw	10
  1689  0030F6  6E0B               	movwf	setServo@pulsos^0,c
  1690  0030F8  0E02               	movlw	2
  1691  0030FA  6E0C               	movwf	setServo@pin^0,c
  1692  0030FC  0E21               	movlw	33
  1693  0030FE  ECCF  F01B         	call	_setServo
  1694  003102                     
  1695                           ;app.c: 50:             LATAbits.LA5 = 0;
  1696  003102  9A89               	bcf	137,5,c	;volatile
  1697  003104                     
  1698                           ;app.c: 51:             setServo(45,10,0);
  1699  003104  0E0A               	movlw	10
  1700  003106  6E0B               	movwf	setServo@pulsos^0,c
  1701  003108  0E00               	movlw	0
  1702  00310A  6E0C               	movwf	setServo@pin^0,c
  1703  00310C  0E2D               	movlw	45
  1704  00310E  ECCF  F01B         	call	_setServo
  1705  003112                     l4745:
  1706                           
  1707                           ;app.c: 54:     datos.nextFunc = appStateInitial;
  1708  003112  0EA6               	movlw	low _appStateInitial
  1709  003114  0100               	movlb	0	; () banked
  1710  003116  6FD7               	movwf	(_datos+23)& (0+255),b
  1711  003118  0E34               	movlw	high _appStateInitial
  1712  00311A  6FD8               	movwf	(_datos+24)& (0+255),b
  1713  00311C                     
  1714                           ; BSR set to: 0
  1715  00311C  0012               	return		;funcret
  1716  00311E                     __end_of_appStateRecolectData:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function _confirmacion *****************
  1720 ;; Defined at:
  1721 ;;		line 123 in file "app.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1735 ;;      Params:         0       0       0       0       0       0       0       0       0
  1736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1737 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1738 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1739 ;;Total ram usage:        2 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    4
  1742 ;; This function calls:
  1743 ;;		_Lcd_Cmd
  1744 ;;		_Lcd_Out
  1745 ;;		_appTimerStart
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text6
  1752  0034F0                     __ptext6:
  1753                           	callstack 0
  1754  0034F0                     _confirmacion:
  1755                           	callstack 26
  1756  0034F0                     
  1757                           ;app.c: 125:     Lcd_Out(1,0, (const int8_t*)"Confirmacion");
  1758  0034F0  0E00               	movlw	0
  1759  0034F2  6E0A               	movwf	Lcd_Out@x^0,c
  1760  0034F4  0E3B               	movlw	low STR_10
  1761  0034F6  6E0B               	movwf	Lcd_Out@buffer^0,c
  1762  0034F8  0E08               	movlw	high STR_10
  1763  0034FA  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1764  0034FC  0E01               	movlw	1
  1765  0034FE  EC0F  F015         	call	_Lcd_Out
  1766  003502                     l4305:
  1767  003502  0E08               	movlw	8
  1768  003504  0100               	movlb	0	; () banked
  1769  003506  19C3               	xorwf	(_datos+3)& (0+255),w,b
  1770  003508  B4D8               	btfsc	status,2,c
  1771  00350A  EF89  F01A         	goto	u3951
  1772  00350E  EF8B  F01A         	goto	u3950
  1773  003512                     u3951:
  1774  003512  EF81  F01A         	goto	l4305
  1775  003516                     u3950:
  1776  003516                     
  1777                           ; BSR set to: 0
  1778                           ;app.c: 127:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1779  003516  0E01               	movlw	1
  1780  003518  EC81  F012         	call	_Lcd_Cmd
  1781  00351C  0E02               	movlw	2
  1782  00351E  6E12               	movwf	(??_confirmacion+1)^0,c
  1783  003520  0E86               	movlw	134
  1784  003522  6E11               	movwf	??_confirmacion^0,c
  1785  003524  0E99               	movlw	153
  1786  003526                     u4497:
  1787  003526  2EE8               	decfsz	wreg,f,c
  1788  003528  D7FE               	bra	u4497
  1789  00352A  2E11               	decfsz	??_confirmacion^0,f,c
  1790  00352C  D7FC               	bra	u4497
  1791  00352E  2E12               	decfsz	(??_confirmacion+1)^0,f,c
  1792  003530  D7FA               	bra	u4497
  1793  003532  F000               	nop	
  1794  003534                     
  1795                           ;app.c: 128:     appTimerStart();
  1796  003534  EC1A  F01C         	call	_appTimerStart	;wreg free
  1797  003538  0012               	return		;funcret
  1798  00353A                     __end_of_confirmacion:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _warning *****************
  1802 ;; Defined at:
  1803 ;;		line 112 in file "app.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1817 ;;      Params:         0       0       0       0       0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1819 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1820 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1821 ;;Total ram usage:        2 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    4
  1824 ;; This function calls:
  1825 ;;		_Lcd_Cmd
  1826 ;;		_Lcd_Out
  1827 ;;		_appTimerStart
  1828 ;;		_appTimerStop
  1829 ;;		_setServo
  1830 ;; This function is called by:
  1831 ;;		_isrH
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text7
  1837  003212                     __ptext7:
  1838                           	callstack 0
  1839  003212                     _warning:
  1840                           	callstack 26
  1841  003212                     
  1842                           ;app.c: 114:     appTimerStop();
  1843  003212  EC2B  F01C         	call	_appTimerStop	;wreg free
  1844  003216                     
  1845                           ;app.c: 115:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1846  003216  0E01               	movlw	1
  1847  003218  EC81  F012         	call	_Lcd_Cmd
  1848  00321C  0E02               	movlw	2
  1849  00321E  6E12               	movwf	(??_warning+1)^0,c
  1850  003220  0E86               	movlw	134
  1851  003222  6E11               	movwf	??_warning^0,c
  1852  003224  0E99               	movlw	153
  1853  003226                     u4507:
  1854  003226  2EE8               	decfsz	wreg,f,c
  1855  003228  D7FE               	bra	u4507
  1856  00322A  2E11               	decfsz	??_warning^0,f,c
  1857  00322C  D7FC               	bra	u4507
  1858  00322E  2E12               	decfsz	(??_warning+1)^0,f,c
  1859  003230  D7FA               	bra	u4507
  1860  003232  F000               	nop	
  1861  003234                     
  1862                           ;app.c: 116:     Lcd_Out(1,0, (const int8_t*)"Sin vacunas");
  1863  003234  0E00               	movlw	0
  1864  003236  6E0A               	movwf	Lcd_Out@x^0,c
  1865  003238  0E48               	movlw	low STR_8
  1866  00323A  6E0B               	movwf	Lcd_Out@buffer^0,c
  1867  00323C  0E08               	movlw	high STR_8
  1868  00323E  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1869  003240  0E01               	movlw	1
  1870  003242  EC0F  F015         	call	_Lcd_Out
  1871  003246                     
  1872                           ;app.c: 117:     Lcd_Out(2,0, (const int8_t*)"Recarga Porfavor");
  1873  003246  0E00               	movlw	0
  1874  003248  6E0A               	movwf	Lcd_Out@x^0,c
  1875  00324A  0E01               	movlw	low STR_9
  1876  00324C  6E0B               	movwf	Lcd_Out@buffer^0,c
  1877  00324E  0E08               	movlw	high STR_9
  1878  003250  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1879  003252  0E02               	movlw	2
  1880  003254  EC0F  F015         	call	_Lcd_Out
  1881  003258                     
  1882                           ;app.c: 118:     setServo(45,10,1);
  1883  003258  0E0A               	movlw	10
  1884  00325A  6E0B               	movwf	setServo@pulsos^0,c
  1885  00325C  0E01               	movlw	1
  1886  00325E  6E0C               	movwf	setServo@pin^0,c
  1887  003260  0E2D               	movlw	45
  1888  003262  ECCF  F01B         	call	_setServo
  1889  003266                     l4299:
  1890  003266  0E0A               	movlw	10
  1891  003268  0100               	movlb	0	; () banked
  1892  00326A  19C3               	xorwf	(_datos+3)& (0+255),w,b
  1893  00326C  B4D8               	btfsc	status,2,c
  1894  00326E  EF3B  F019         	goto	u3941
  1895  003272  EF3D  F019         	goto	u3940
  1896  003276                     u3941:
  1897  003276  EF33  F019         	goto	l4299
  1898  00327A                     u3940:
  1899  00327A                     
  1900                           ; BSR set to: 0
  1901                           ;app.c: 120:     appTimerStart();
  1902  00327A  EC1A  F01C         	call	_appTimerStart	;wreg free
  1903  00327E  0012               	return		;funcret
  1904  003280                     __end_of_warning:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _sendData *****************
  1908 ;; Defined at:
  1909 ;;		line 58 in file "UART.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  data            2   10[COMRAM] PTR struct _state
  1912 ;;		 -> datos(25), 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  i               1   14[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1924 ;;      Params:         2       0       0       0       0       0       0       0       0
  1925 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1926 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1927 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1928 ;;Total ram usage:        5 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    3
  1931 ;; This function calls:
  1932 ;;		_strlen
  1933 ;; This function is called by:
  1934 ;;		_sendinformation
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text8
  1939  0032E6                     __ptext8:
  1940                           	callstack 0
  1941  0032E6                     _sendData:
  1942                           	callstack 26
  1943  0032E6                     
  1944                           ;UART.c: 58: void sendData(StateMachine *data);UART.c: 59: {;UART.c: 60:     for(uint8_t
      +                           i = 0; i < strlen((const char *)data->display);)
  1945  0032E6  0E00               	movlw	0
  1946  0032E8  6E0F               	movwf	sendData@i^0,c
  1947  0032EA  EF8D  F019         	goto	l4201
  1948  0032EE                     l434:
  1949                           
  1950                           ;UART.c: 61:         {;UART.c: 62:             if(TXSTAbits.TRMT == 1)
  1951  0032EE  A2AC               	btfss	172,1,c	;volatile
  1952  0032F0  EF7C  F019         	goto	u3851
  1953  0032F4  EF7E  F019         	goto	u3850
  1954  0032F8                     u3851:
  1955  0032F8  EF8D  F019         	goto	l4201
  1956  0032FC                     u3850:
  1957  0032FC                     
  1958                           ;UART.c: 63:             {;UART.c: 64:                 TXREG = data->display[i];
  1959  0032FC  500F               	movf	sendData@i^0,w,c
  1960  0032FE  240B               	addwf	sendData@data^0,w,c
  1961  003300  6E0D               	movwf	??_sendData^0,c
  1962  003302  0E00               	movlw	0
  1963  003304  200C               	addwfc	(sendData@data+1)^0,w,c
  1964  003306  6E0E               	movwf	(??_sendData+1)^0,c
  1965  003308  0E07               	movlw	7
  1966  00330A  240D               	addwf	??_sendData^0,w,c
  1967  00330C  6ED9               	movwf	fsr2l,c
  1968  00330E  0E00               	movlw	0
  1969  003310  200E               	addwfc	(??_sendData+1)^0,w,c
  1970  003312  6EDA               	movwf	fsr2h,c
  1971  003314  50DF               	movf	indf2,w,c
  1972  003316  6EAD               	movwf	173,c	;volatile
  1973  003318                     
  1974                           ;UART.c: 65:                 i++;
  1975  003318  2A0F               	incf	sendData@i^0,f,c
  1976  00331A                     l4201:
  1977  00331A  0E07               	movlw	7
  1978  00331C  240B               	addwf	sendData@data^0,w,c
  1979  00331E  6E07               	movwf	strlen@s^0,c
  1980  003320  0E00               	movlw	0
  1981  003322  200C               	addwfc	(sendData@data+1)^0,w,c
  1982  003324  6E08               	movwf	(strlen@s+1)^0,c
  1983  003326  EC83  F01B         	call	_strlen	;wreg free
  1984  00332A  500F               	movf	sendData@i^0,w,c
  1985  00332C  6E0D               	movwf	??_sendData^0,c
  1986  00332E  6A0E               	clrf	(??_sendData+1)^0,c
  1987  003330  5007               	movf	?_strlen^0,w,c
  1988  003332  5C0D               	subwf	??_sendData^0,w,c
  1989  003334  5008               	movf	(?_strlen+1)^0,w,c
  1990  003336  580E               	subwfb	(??_sendData+1)^0,w,c
  1991  003338  A0D8               	btfss	status,0,c
  1992  00333A  EFA1  F019         	goto	u3861
  1993  00333E  EFA3  F019         	goto	u3860
  1994  003342                     u3861:
  1995  003342  EF77  F019         	goto	l434
  1996  003346                     u3860:
  1997  003346  0012               	return		;funcret
  1998  003348                     __end_of_sendData:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function _memcmp *****************
  2002 ;; Defined at:
  2003 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memcmp.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  vl              2    6[COMRAM] PTR const void 
  2006 ;;		 -> puerto(16), 
  2007 ;;  vr              2    8[COMRAM] PTR const void 
  2008 ;;		 -> STR_15(10), STR_13(13), 
  2009 ;;  n               2   10[COMRAM] unsigned int 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  r               2   15[COMRAM] PTR const unsigned char 
  2012 ;;		 -> STR_15(10), STR_13(13), 
  2013 ;;  l               2   13[COMRAM] PTR const unsigned char 
  2014 ;;		 -> puerto(16), 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  2    6[COMRAM] int 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2024 ;;      Params:         6       0       0       0       0       0       0       0       0
  2025 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2026 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2027 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2028 ;;Total ram usage:       11 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    2
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_readUART
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text9
  2039  002FEC                     __ptext9:
  2040                           	callstack 0
  2041  002FEC                     _memcmp:
  2042                           	callstack 27
  2043  002FEC  C007  F00E         	movff	memcmp@vl,memcmp@l
  2044  002FF0  C008  F00F         	movff	memcmp@vl+1,memcmp@l+1
  2045  002FF4  C009  F010         	movff	memcmp@vr,memcmp@r
  2046  002FF8  C00A  F011         	movff	memcmp@vr+1,memcmp@r+1
  2047  002FFC  EF07  F018         	goto	l4207
  2048  003000                     l4205:
  2049  003000  060B               	decf	memcmp@n^0,f,c
  2050  003002  A0D8               	btfss	status,0,c
  2051  003004  060C               	decf	(memcmp@n+1)^0,f,c
  2052  003006  4A0E               	infsnz	memcmp@l^0,f,c
  2053  003008  2A0F               	incf	(memcmp@l+1)^0,f,c
  2054  00300A  4A10               	infsnz	memcmp@r^0,f,c
  2055  00300C  2A11               	incf	(memcmp@r+1)^0,f,c
  2056  00300E                     l4207:
  2057  00300E  500B               	movf	memcmp@n^0,w,c
  2058  003010  100C               	iorwf	(memcmp@n+1)^0,w,c
  2059  003012  B4D8               	btfsc	status,2,c
  2060  003014  EF0E  F018         	goto	u3871
  2061  003018  EF10  F018         	goto	u3870
  2062  00301C                     u3871:
  2063  00301C  EF24  F018         	goto	l4211
  2064  003020                     u3870:
  2065  003020  C00E  FFD9         	movff	memcmp@l,fsr2l
  2066  003024  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2067  003028  50DF               	movf	indf2,w,c
  2068  00302A  6E0D               	movwf	??_memcmp^0,c
  2069  00302C  C010  FFF6         	movff	memcmp@r,tblptrl
  2070  003030  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2071  003034                     	if	0	;tblptru may be non-zero
  2072  003034                     	endif
  2073  003034                     	if	0	;tblptru may be non-zero
  2074  003034                     	endif
  2075  003034  0008               	tblrd		*
  2076  003036  50F5               	movf	tablat,w,c
  2077  003038  180D               	xorwf	??_memcmp^0,w,c
  2078  00303A  B4D8               	btfsc	status,2,c
  2079  00303C  EF22  F018         	goto	u3881
  2080  003040  EF24  F018         	goto	u3880
  2081  003044                     u3881:
  2082  003044  EF00  F018         	goto	l4205
  2083  003048                     u3880:
  2084  003048                     l4211:
  2085  003048  500B               	movf	memcmp@n^0,w,c
  2086  00304A  100C               	iorwf	(memcmp@n+1)^0,w,c
  2087  00304C  A4D8               	btfss	status,2,c
  2088  00304E  EF2B  F018         	goto	u3891
  2089  003052  EF2D  F018         	goto	u3890
  2090  003056                     u3891:
  2091  003056  EF33  F018         	goto	l4215
  2092  00305A                     u3890:
  2093  00305A  0E00               	movlw	0
  2094  00305C  6E08               	movwf	(?_memcmp+1)^0,c
  2095  00305E  0E00               	movlw	0
  2096  003060  6E07               	movwf	?_memcmp^0,c
  2097  003062  EF44  F018         	goto	l1123
  2098  003066                     l4215:
  2099  003066  C00E  FFD9         	movff	memcmp@l,fsr2l
  2100  00306A  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2101  00306E  50DF               	movf	indf2,w,c
  2102  003070  6E0D               	movwf	??_memcmp^0,c
  2103  003072  C010  FFF6         	movff	memcmp@r,tblptrl
  2104  003076  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2105  00307A                     	if	0	;tblptru may be non-zero
  2106  00307A                     	endif
  2107  00307A                     	if	0	;tblptru may be non-zero
  2108  00307A                     	endif
  2109  00307A  0008               	tblrd		*
  2110  00307C  50F5               	movf	tablat,w,c
  2111  00307E  5C0D               	subwf	??_memcmp^0,w,c
  2112  003080  6E07               	movwf	?_memcmp^0,c
  2113  003082  6A08               	clrf	(?_memcmp+1)^0,c
  2114  003084  A0D8               	btfss	status,0,c
  2115  003086  0608               	decf	(?_memcmp+1)^0,f,c
  2116  003088                     l1123:
  2117  003088  0012               	return		;funcret
  2118  00308A                     __end_of_memcmp:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _appElemts *****************
  2122 ;; Defined at:
  2123 ;;		line 154 in file "servo.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  data            2   36[BANK0 ] PTR struct _state
  2126 ;;		 -> datos(25), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2138 ;;      Params:         0       2       0       0       0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2141 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2142 ;;Total ram usage:        2 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:   10
  2145 ;; This function calls:
  2146 ;;		_Lcd_Out
  2147 ;;		_memset
  2148 ;;		_sprintf
  2149 ;; This function is called by:
  2150 ;;		_appStateRecolectData
  2151 ;;		_sendinformation
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text10
  2156  003280                     __ptext10:
  2157                           	callstack 0
  2158  003280                     _appElemts:
  2159                           	callstack 19
  2160  003280                     
  2161                           ;servo.c: 154: void appElemts(StateMachine *data);servo.c: 155: {;servo.c: 157:     mems
      +                          et(data->display,0,sizeof(data->display));
  2162  003280  0E07               	movlw	7
  2163  003282  0100               	movlb	0	; () banked
  2164  003284  25B8               	addwf	appElemts@data& (0+255),w,b
  2165  003286  6E07               	movwf	memset@dest^0,c
  2166  003288  0E00               	movlw	0
  2167  00328A  21B9               	addwfc	(appElemts@data+1)& (0+255),w,b
  2168  00328C  6E08               	movwf	(memset@dest+1)^0,c
  2169  00328E  0E00               	movlw	0
  2170  003290  6E0A               	movwf	(memset@c+1)^0,c
  2171  003292  0E00               	movlw	0
  2172  003294  6E09               	movwf	memset@c^0,c
  2173  003296  0E00               	movlw	0
  2174  003298  6E0C               	movwf	(memset@n+1)^0,c
  2175  00329A  0E10               	movlw	16
  2176  00329C  6E0B               	movwf	memset@n^0,c
  2177  00329E  EC6D  F010         	call	_memset	;wreg free
  2178  0032A2                     
  2179                           ;servo.c: 158:     sprintf((char *)data->display,"#:%d",(256 - (TMR0)));
  2180  0032A2  0E07               	movlw	7
  2181  0032A4  0100               	movlb	0	; () banked
  2182  0032A6  25B8               	addwf	appElemts@data& (0+255),w,b
  2183  0032A8  6FA6               	movwf	sprintf@s& (0+255),b
  2184  0032AA  0E00               	movlw	0
  2185  0032AC  21B9               	addwfc	(appElemts@data+1)& (0+255),w,b
  2186  0032AE  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2187  0032B0  0E79               	movlw	low STR_5
  2188  0032B2  6FA8               	movwf	sprintf@fmt& (0+255),b
  2189  0032B4  0E08               	movlw	high STR_5
  2190  0032B6  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  2191  0032B8  50D6               	movf	214,w,c	;volatile
  2192  0032BA  0800               	sublw	0
  2193  0032BC  6FAA               	movwf	(?_sprintf+4)& (0+255),b
  2194  0032BE  50D7               	movf	215,w,c	;volatile
  2195  0032C0  A0D8               	btfss	status,0,c
  2196  0032C2  2AE8               	incf	wreg,f,c
  2197  0032C4  0801               	sublw	1
  2198  0032C6  6FAB               	movwf	(?_sprintf+5)& (0+255),b
  2199  0032C8  EC01  F01A         	call	_sprintf	;wreg free
  2200  0032CC                     
  2201                           ;servo.c: 159:     Lcd_Out(2,10, (int8_t*)data->display);
  2202  0032CC  0E0A               	movlw	10
  2203  0032CE  6E0A               	movwf	Lcd_Out@x^0,c
  2204  0032D0  0E07               	movlw	7
  2205  0032D2  0100               	movlb	0	; () banked
  2206  0032D4  25B8               	addwf	appElemts@data& (0+255),w,b
  2207  0032D6  6E0B               	movwf	Lcd_Out@buffer^0,c
  2208  0032D8  0E00               	movlw	0
  2209  0032DA  21B9               	addwfc	(appElemts@data+1)& (0+255),w,b
  2210  0032DC  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2211  0032DE  0E02               	movlw	2
  2212  0032E0  EC0F  F015         	call	_Lcd_Out
  2213  0032E4  0012               	return		;funcret
  2214  0032E6                     __end_of_appElemts:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _appCounterStop *****************
  2218 ;; Defined at:
  2219 ;;		line 148 in file "servo.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		None
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2233 ;;      Params:         0       0       0       0       0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2236 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    2
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_appStateRecolectData
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text11
  2248  003852                     __ptext11:
  2249                           	callstack 0
  2250  003852                     _appCounterStop:
  2251                           	callstack 27
  2252  003852                     
  2253                           ;servo.c: 150:     T0CONbits.TMR0ON = 0;
  2254  003852  9ED5               	bcf	213,7,c	;volatile
  2255  003854  0012               	return		;funcret
  2256  003856                     __end_of_appCounterStop:
  2257                           	callstack 0
  2258                           
  2259 ;; *************** function _appBat *****************
  2260 ;; Defined at:
  2261 ;;		line 73 in file "adc.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  data            2   36[BANK0 ] PTR struct _state
  2264 ;;		 -> datos(25), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2276 ;;      Params:         0       2       0       0       0       0       0       0       0
  2277 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2278 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2279 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2280 ;;Total ram usage:        8 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:   10
  2283 ;; This function calls:
  2284 ;;		_Lcd_Out
  2285 ;;		___fldiv
  2286 ;;		___flmul
  2287 ;;		___fltol
  2288 ;;		___xxtofl
  2289 ;;		_adcGetValue
  2290 ;;		_memset
  2291 ;;		_sprintf
  2292 ;; This function is called by:
  2293 ;;		_appStateRecolectData
  2294 ;;		_sendinformation
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text12
  2299  001878                     __ptext12:
  2300                           	callstack 0
  2301  001878                     _appBat:
  2302                           	callstack 19
  2303  001878                     
  2304                           ;adc.c: 73: void appBat(StateMachine *data);adc.c: 74: {;adc.c: 75:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2305  001878  0E07               	movlw	7
  2306  00187A  0100               	movlb	0	; () banked
  2307  00187C  25B8               	addwf	appBat@data& (0+255),w,b
  2308  00187E  6E07               	movwf	memset@dest^0,c
  2309  001880  0E00               	movlw	0
  2310  001882  21B9               	addwfc	(appBat@data+1)& (0+255),w,b
  2311  001884  6E08               	movwf	(memset@dest+1)^0,c
  2312  001886  0E00               	movlw	0
  2313  001888  6E0A               	movwf	(memset@c+1)^0,c
  2314  00188A  0E00               	movlw	0
  2315  00188C  6E09               	movwf	memset@c^0,c
  2316  00188E  0E00               	movlw	0
  2317  001890  6E0C               	movwf	(memset@n+1)^0,c
  2318  001892  0E10               	movlw	16
  2319  001894  6E0B               	movwf	memset@n^0,c
  2320  001896  EC6D  F010         	call	_memset	;wreg free
  2321                           
  2322                           ;adc.c: 80:     data->bat = adcGetValue(1);
  2323  00189A  0E01               	movlw	1
  2324  00189C  EC49  F01B         	call	_adcGetValue
  2325  0018A0  0100               	movlb	0	; () banked
  2326  0018A2  EE20 F004          	lfsr	2,4
  2327  0018A6  51B8               	movf	appBat@data& (0+255),w,b
  2328  0018A8  26D9               	addwf	fsr2l,f,c
  2329  0018AA  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2330  0018AC  22DA               	addwfc	fsr2h,f,c
  2331  0018AE  C007  FFDE         	movff	?_adcGetValue,postinc2
  2332  0018B2  C008  FFDD         	movff	?_adcGetValue+1,postdec2
  2333  0018B6                     
  2334                           ; BSR set to: 0
  2335                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2336  0018B6  0E00               	movlw	0
  2337  0018B8  6E36               	movwf	___fldiv@a^0,c
  2338  0018BA  0E00               	movlw	0
  2339  0018BC  6E37               	movwf	(___fldiv@a+1)^0,c
  2340  0018BE  0E80               	movlw	128
  2341  0018C0  6E38               	movwf	(___fldiv@a+2)^0,c
  2342  0018C2  0E44               	movlw	68
  2343  0018C4  6E39               	movwf	(___fldiv@a+3)^0,c
  2344  0018C6  0E00               	movlw	0
  2345  0018C8  6E1D               	movwf	___flmul@a^0,c
  2346  0018CA  0E00               	movlw	0
  2347  0018CC  6E1E               	movwf	(___flmul@a+1)^0,c
  2348  0018CE  0EA0               	movlw	160
  2349  0018D0  6E1F               	movwf	(___flmul@a+2)^0,c
  2350  0018D2  0E40               	movlw	64
  2351  0018D4  6E20               	movwf	(___flmul@a+3)^0,c
  2352  0018D6  EE20 F004          	lfsr	2,4
  2353  0018DA  51B8               	movf	appBat@data& (0+255),w,b
  2354  0018DC  26D9               	addwf	fsr2l,f,c
  2355  0018DE  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2356  0018E0  22DA               	addwfc	fsr2h,f,c
  2357  0018E2  CFDE F0BA          	movff	postinc2,??_appBat
  2358  0018E6  CFDD F0BB          	movff	postdec2,??_appBat+1
  2359  0018EA  C0BA  F00B         	movff	??_appBat,___xxtofl@val
  2360  0018EE  C0BB  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2361  0018F2  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2362  0018F4  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2363  0018F6  0E00               	movlw	0
  2364  0018F8  EC30  F00D         	call	___xxtofl
  2365  0018FC  C00B  F019         	movff	?___xxtofl,___flmul@b
  2366  001900  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2367  001904  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2368  001908  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2369  00190C  EC40  F004         	call	___flmul	;wreg free
  2370  001910  C019  F032         	movff	?___flmul,___fldiv@b
  2371  001914  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2372  001918  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2373  00191C  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2374  001920  EC55  F006         	call	___fldiv	;wreg free
  2375  001924  C032  F0BC         	movff	?___fldiv,_appBat$2655
  2376  001928  C033  F0BD         	movff	?___fldiv+1,_appBat$2655+1
  2377  00192C  C034  F0BE         	movff	?___fldiv+2,_appBat$2655+2
  2378  001930  C035  F0BF         	movff	?___fldiv+3,_appBat$2655+3
  2379  001934                     
  2380                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2381  001934  0E00               	movlw	0
  2382  001936  6E1D               	movwf	___flmul@a^0,c
  2383  001938  0E00               	movlw	0
  2384  00193A  6E1E               	movwf	(___flmul@a+1)^0,c
  2385  00193C  0EC8               	movlw	200
  2386  00193E  6E1F               	movwf	(___flmul@a+2)^0,c
  2387  001940  0E42               	movlw	66
  2388  001942  6E20               	movwf	(___flmul@a+3)^0,c
  2389  001944  C0BC  F019         	movff	_appBat$2655,___flmul@b
  2390  001948  C0BD  F01A         	movff	_appBat$2655+1,___flmul@b+1
  2391  00194C  C0BE  F01B         	movff	_appBat$2655+2,___flmul@b+2
  2392  001950  C0BF  F01C         	movff	_appBat$2655+3,___flmul@b+3
  2393  001954  EC40  F004         	call	___flmul	;wreg free
  2394  001958  C019  F04B         	movff	?___flmul,___fltol@f1
  2395  00195C  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2396  001960  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2397  001964  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2398  001968  ECA4  F013         	call	___fltol	;wreg free
  2399  00196C  0100               	movlb	0	; () banked
  2400  00196E  EE20 F004          	lfsr	2,4
  2401  001972  51B8               	movf	appBat@data& (0+255),w,b
  2402  001974  26D9               	addwf	fsr2l,f,c
  2403  001976  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2404  001978  22DA               	addwfc	fsr2h,f,c
  2405  00197A  C04B  FFDE         	movff	?___fltol,postinc2
  2406  00197E  C04C  FFDD         	movff	?___fltol+1,postdec2
  2407  001982                     
  2408                           ; BSR set to: 0
  2409                           ;adc.c: 82:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  2410  001982  0E00               	movlw	0
  2411  001984  6E36               	movwf	___fldiv@a^0,c
  2412  001986  0E00               	movlw	0
  2413  001988  6E37               	movwf	(___fldiv@a+1)^0,c
  2414  00198A  0EFA               	movlw	250
  2415  00198C  6E38               	movwf	(___fldiv@a+2)^0,c
  2416  00198E  0E43               	movlw	67
  2417  001990  6E39               	movwf	(___fldiv@a+3)^0,c
  2418  001992  0E00               	movlw	0
  2419  001994  6E1D               	movwf	___flmul@a^0,c
  2420  001996  0E00               	movlw	0
  2421  001998  6E1E               	movwf	(___flmul@a+1)^0,c
  2422  00199A  0EC8               	movlw	200
  2423  00199C  6E1F               	movwf	(___flmul@a+2)^0,c
  2424  00199E  0E42               	movlw	66
  2425  0019A0  6E20               	movwf	(___flmul@a+3)^0,c
  2426  0019A2  EE20 F004          	lfsr	2,4
  2427  0019A6  51B8               	movf	appBat@data& (0+255),w,b
  2428  0019A8  26D9               	addwf	fsr2l,f,c
  2429  0019AA  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2430  0019AC  22DA               	addwfc	fsr2h,f,c
  2431  0019AE  CFDE F0BA          	movff	postinc2,??_appBat
  2432  0019B2  CFDD F0BB          	movff	postdec2,??_appBat+1
  2433  0019B6  C0BA  F00B         	movff	??_appBat,___xxtofl@val
  2434  0019BA  C0BB  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2435  0019BE  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2436  0019C0  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2437  0019C2  0E00               	movlw	0
  2438  0019C4  EC30  F00D         	call	___xxtofl
  2439  0019C8  C00B  F019         	movff	?___xxtofl,___flmul@b
  2440  0019CC  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2441  0019D0  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2442  0019D4  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2443  0019D8  EC40  F004         	call	___flmul	;wreg free
  2444  0019DC  C019  F032         	movff	?___flmul,___fldiv@b
  2445  0019E0  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2446  0019E4  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2447  0019E8  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2448  0019EC  EC55  F006         	call	___fldiv	;wreg free
  2449  0019F0  C032  F04B         	movff	?___fldiv,___fltol@f1
  2450  0019F4  C033  F04C         	movff	?___fldiv+1,___fltol@f1+1
  2451  0019F8  C034  F04D         	movff	?___fldiv+2,___fltol@f1+2
  2452  0019FC  C035  F04E         	movff	?___fldiv+3,___fltol@f1+3
  2453  001A00  ECA4  F013         	call	___fltol	;wreg free
  2454  001A04  0100               	movlb	0	; () banked
  2455  001A06  EE20 F004          	lfsr	2,4
  2456  001A0A  51B8               	movf	appBat@data& (0+255),w,b
  2457  001A0C  26D9               	addwf	fsr2l,f,c
  2458  001A0E  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2459  001A10  22DA               	addwfc	fsr2h,f,c
  2460  001A12  C04B  FFDE         	movff	?___fltol,postinc2
  2461  001A16  C04C  FFDD         	movff	?___fltol+1,postdec2
  2462  001A1A                     
  2463                           ; BSR set to: 0
  2464                           ;adc.c: 83:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  2465  001A1A  0E07               	movlw	7
  2466  001A1C  25B8               	addwf	appBat@data& (0+255),w,b
  2467  001A1E  6FA6               	movwf	sprintf@s& (0+255),b
  2468  001A20  0E00               	movlw	0
  2469  001A22  21B9               	addwfc	(appBat@data+1)& (0+255),w,b
  2470  001A24  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2471  001A26  0E6A               	movlw	low STR_2
  2472  001A28  6FA8               	movwf	sprintf@fmt& (0+255),b
  2473  001A2A  0E08               	movlw	high STR_2
  2474  001A2C  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  2475  001A2E  EE20 F004          	lfsr	2,4
  2476  001A32  51B8               	movf	appBat@data& (0+255),w,b
  2477  001A34  26D9               	addwf	fsr2l,f,c
  2478  001A36  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2479  001A38  22DA               	addwfc	fsr2h,f,c
  2480  001A3A  CFDE F0AA          	movff	postinc2,?_sprintf+4
  2481  001A3E  CFDD F0AB          	movff	postdec2,?_sprintf+5
  2482  001A42  EC01  F01A         	call	_sprintf	;wreg free
  2483  001A46                     
  2484                           ;adc.c: 84:     Lcd_Out(2,0, (int8_t*)data->display);
  2485  001A46  0E00               	movlw	0
  2486  001A48  6E0A               	movwf	Lcd_Out@x^0,c
  2487  001A4A  0E07               	movlw	7
  2488  001A4C  0100               	movlb	0	; () banked
  2489  001A4E  25B8               	addwf	appBat@data& (0+255),w,b
  2490  001A50  6E0B               	movwf	Lcd_Out@buffer^0,c
  2491  001A52  0E00               	movlw	0
  2492  001A54  21B9               	addwfc	(appBat@data+1)& (0+255),w,b
  2493  001A56  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2494  001A58  0E02               	movlw	2
  2495  001A5A  EC0F  F015         	call	_Lcd_Out
  2496  001A5E  0012               	return		;funcret
  2497  001A60                     __end_of_appBat:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _appADC *****************
  2501 ;; Defined at:
  2502 ;;		line 55 in file "adc.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  data            2   36[BANK0 ] PTR struct _state
  2505 ;;		 -> datos(25), 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  lm35val         4   38[BANK0 ] float 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2517 ;;      Params:         0       2       0       0       0       0       0       0       0
  2518 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2520 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2521 ;;Total ram usage:        6 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:   10
  2524 ;; This function calls:
  2525 ;;		_Lcd_Out
  2526 ;;		___awmod
  2527 ;;		___fldiv
  2528 ;;		___flmul
  2529 ;;		___fltol
  2530 ;;		___xxtofl
  2531 ;;		_adcGetValue
  2532 ;;		_memset
  2533 ;;		_sprintf
  2534 ;; This function is called by:
  2535 ;;		_appStateRecolectData
  2536 ;;		_sendinformation
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text13
  2541  001C14                     __ptext13:
  2542                           	callstack 0
  2543  001C14                     _appADC:
  2544                           	callstack 19
  2545  001C14                     
  2546                           ;adc.c: 55: void appADC(StateMachine *data);adc.c: 56: {;adc.c: 57:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2547  001C14  0E07               	movlw	7
  2548  001C16  0100               	movlb	0	; () banked
  2549  001C18  25B8               	addwf	appADC@data& (0+255),w,b
  2550  001C1A  6E07               	movwf	memset@dest^0,c
  2551  001C1C  0E00               	movlw	0
  2552  001C1E  21B9               	addwfc	(appADC@data+1)& (0+255),w,b
  2553  001C20  6E08               	movwf	(memset@dest+1)^0,c
  2554  001C22  0E00               	movlw	0
  2555  001C24  6E0A               	movwf	(memset@c+1)^0,c
  2556  001C26  0E00               	movlw	0
  2557  001C28  6E09               	movwf	memset@c^0,c
  2558  001C2A  0E00               	movlw	0
  2559  001C2C  6E0C               	movwf	(memset@n+1)^0,c
  2560  001C2E  0E10               	movlw	16
  2561  001C30  6E0B               	movwf	memset@n^0,c
  2562  001C32  EC6D  F010         	call	_memset	;wreg free
  2563  001C36                     
  2564                           ;adc.c: 58:     float lm35val = adcGetValue(0);
  2565  001C36  0E00               	movlw	0
  2566  001C38  EC49  F01B         	call	_adcGetValue
  2567  001C3C  C007  F00B         	movff	?_adcGetValue,___xxtofl@val
  2568  001C40  C008  F00C         	movff	?_adcGetValue+1,___xxtofl@val+1
  2569  001C44  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2570  001C46  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2571  001C48  0E00               	movlw	0
  2572  001C4A  EC30  F00D         	call	___xxtofl
  2573  001C4E  C00B  F0BA         	movff	?___xxtofl,appADC@lm35val
  2574  001C52  C00C  F0BB         	movff	?___xxtofl+1,appADC@lm35val+1
  2575  001C56  C00D  F0BC         	movff	?___xxtofl+2,appADC@lm35val+2
  2576  001C5A  C00E  F0BD         	movff	?___xxtofl+3,appADC@lm35val+3
  2577  001C5E                     
  2578                           ;adc.c: 59:     lm35val = (float)((lm35val*4.88)/10.0);
  2579  001C5E  0EF6               	movlw	246
  2580  001C60  6E1D               	movwf	___flmul@a^0,c
  2581  001C62  0E28               	movlw	40
  2582  001C64  6E1E               	movwf	(___flmul@a+1)^0,c
  2583  001C66  0E9C               	movlw	156
  2584  001C68  6E1F               	movwf	(___flmul@a+2)^0,c
  2585  001C6A  0E40               	movlw	64
  2586  001C6C  6E20               	movwf	(___flmul@a+3)^0,c
  2587  001C6E  C0BA  F019         	movff	appADC@lm35val,___flmul@b
  2588  001C72  C0BB  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2589  001C76  C0BC  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2590  001C7A  C0BD  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2591  001C7E  EC40  F004         	call	___flmul	;wreg free
  2592  001C82  C019  F032         	movff	?___flmul,___fldiv@b
  2593  001C86  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2594  001C8A  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2595  001C8E  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2596  001C92  0E00               	movlw	0
  2597  001C94  6E36               	movwf	___fldiv@a^0,c
  2598  001C96  0E00               	movlw	0
  2599  001C98  6E37               	movwf	(___fldiv@a+1)^0,c
  2600  001C9A  0E20               	movlw	32
  2601  001C9C  6E38               	movwf	(___fldiv@a+2)^0,c
  2602  001C9E  0E41               	movlw	65
  2603  001CA0  6E39               	movwf	(___fldiv@a+3)^0,c
  2604  001CA2  EC55  F006         	call	___fldiv	;wreg free
  2605  001CA6  C032  F0BA         	movff	?___fldiv,appADC@lm35val
  2606  001CAA  C033  F0BB         	movff	?___fldiv+1,appADC@lm35val+1
  2607  001CAE  C034  F0BC         	movff	?___fldiv+2,appADC@lm35val+2
  2608  001CB2  C035  F0BD         	movff	?___fldiv+3,appADC@lm35val+3
  2609  001CB6                     
  2610                           ;adc.c: 61:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  2611  001CB6  0E07               	movlw	7
  2612  001CB8  0100               	movlb	0	; () banked
  2613  001CBA  25B8               	addwf	appADC@data& (0+255),w,b
  2614  001CBC  6FA6               	movwf	sprintf@s& (0+255),b
  2615  001CBE  0E00               	movlw	0
  2616  001CC0  21B9               	addwfc	(appADC@data+1)& (0+255),w,b
  2617  001CC2  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2618  001CC4  0E20               	movlw	low STR_1
  2619  001CC6  6FA8               	movwf	sprintf@fmt& (0+255),b
  2620  001CC8  0E08               	movlw	high STR_1
  2621  001CCA  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  2622  001CCC  C0BA  F04B         	movff	appADC@lm35val,___fltol@f1
  2623  001CD0  C0BB  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2624  001CD4  C0BC  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2625  001CD8  C0BD  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2626  001CDC  ECA4  F013         	call	___fltol	;wreg free
  2627  001CE0  504B               	movf	?___fltol^0,w,c
  2628  001CE2  0100               	movlb	0	; () banked
  2629  001CE4  6FAA               	movwf	(?_sprintf+4)& (0+255),b
  2630  001CE6  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  2631  001CE8  0E00               	movlw	0
  2632  001CEA  6E1D               	movwf	___flmul@a^0,c
  2633  001CEC  0E00               	movlw	0
  2634  001CEE  6E1E               	movwf	(___flmul@a+1)^0,c
  2635  001CF0  0EC8               	movlw	200
  2636  001CF2  6E1F               	movwf	(___flmul@a+2)^0,c
  2637  001CF4  0E42               	movlw	66
  2638  001CF6  6E20               	movwf	(___flmul@a+3)^0,c
  2639  001CF8  C0BA  F019         	movff	appADC@lm35val,___flmul@b
  2640  001CFC  C0BB  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2641  001D00  C0BC  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2642  001D04  C0BD  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2643  001D08  EC40  F004         	call	___flmul	;wreg free
  2644  001D0C  C019  F04B         	movff	?___flmul,___fltol@f1
  2645  001D10  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2646  001D14  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2647  001D18  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2648  001D1C  ECA4  F013         	call	___fltol	;wreg free
  2649  001D20  504B               	movf	?___fltol^0,w,c
  2650  001D22  0100               	movlb	0	; () banked
  2651  001D24  6F96               	movwf	___awmod@dividend& (0+255),b
  2652  001D26  6B97               	clrf	(___awmod@dividend+1)& (0+255),b
  2653  001D28  0E00               	movlw	0
  2654  001D2A  6F99               	movwf	(___awmod@divisor+1)& (0+255),b
  2655  001D2C  0E64               	movlw	100
  2656  001D2E  6F98               	movwf	___awmod@divisor& (0+255),b
  2657  001D30  ECF9  F016         	call	___awmod	;wreg free
  2658  001D34  0100               	movlb	0	; () banked
  2659  001D36  5196               	movf	?___awmod& (0+255),w,b
  2660  001D38  6FAC               	movwf	(?_sprintf+6)& (0+255),b
  2661  001D3A  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  2662  001D3C  EC01  F01A         	call	_sprintf	;wreg free
  2663  001D40                     
  2664                           ;adc.c: 62:     Lcd_Out(1,0, (int8_t*)data->display);
  2665  001D40  0E00               	movlw	0
  2666  001D42  6E0A               	movwf	Lcd_Out@x^0,c
  2667  001D44  0E07               	movlw	7
  2668  001D46  0100               	movlb	0	; () banked
  2669  001D48  25B8               	addwf	appADC@data& (0+255),w,b
  2670  001D4A  6E0B               	movwf	Lcd_Out@buffer^0,c
  2671  001D4C  0E00               	movlw	0
  2672  001D4E  21B9               	addwfc	(appADC@data+1)& (0+255),w,b
  2673  001D50  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2674  001D52  0E01               	movlw	1
  2675  001D54  EC0F  F015         	call	_Lcd_Out
  2676                           
  2677                           ;adc.c: 63:     if(((int)lm35val < 2))
  2678  001D58  C0BA  F04B         	movff	appADC@lm35val,___fltol@f1
  2679  001D5C  C0BB  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2680  001D60  C0BC  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2681  001D64  C0BD  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2682  001D68  ECA4  F013         	call	___fltol	;wreg free
  2683  001D6C  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2684  001D6E  EFC4  F00E         	goto	u4250
  2685  001D72  504C               	movf	(?___fltol+1)^0,w,c
  2686  001D74  E107               	bnz	u4251
  2687  001D76  0E02               	movlw	2
  2688  001D78  5C4B               	subwf	?___fltol^0,w,c
  2689  001D7A  B0D8               	btfsc	status,0,c
  2690  001D7C  EFC2  F00E         	goto	u4251
  2691  001D80  EFC4  F00E         	goto	u4250
  2692  001D84                     u4251:
  2693  001D84  EFC7  F00E         	goto	l4681
  2694  001D88                     u4250:
  2695  001D88                     
  2696                           ;adc.c: 64:     {;adc.c: 65:         LATCbits.LATC1 = 0;
  2697  001D88  928B               	bcf	139,1,c	;volatile
  2698                           
  2699                           ;adc.c: 66:     }
  2700  001D8A  EFE0  F00E         	goto	l39
  2701  001D8E                     l4681:
  2702  001D8E  C0BA  F04B         	movff	appADC@lm35val,___fltol@f1
  2703  001D92  C0BB  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2704  001D96  C0BC  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2705  001D9A  C0BD  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2706  001D9E  ECA4  F013         	call	___fltol	;wreg free
  2707  001DA2  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2708  001DA4  EFDD  F00E         	goto	u4261
  2709  001DA8  504C               	movf	(?___fltol+1)^0,w,c
  2710  001DAA  E109               	bnz	u4260
  2711  001DAC  0E07               	movlw	7
  2712  001DAE  5C4B               	subwf	?___fltol^0,w,c
  2713  001DB0  A0D8               	btfss	status,0,c
  2714  001DB2  EFDD  F00E         	goto	u4261
  2715  001DB6  EFDF  F00E         	goto	u4260
  2716  001DBA                     u4261:
  2717  001DBA  EFE0  F00E         	goto	l39
  2718  001DBE                     u4260:
  2719  001DBE                     
  2720                           ;adc.c: 68:     {;adc.c: 69:         LATCbits.LATC1 = 1;
  2721  001DBE  828B               	bsf	139,1,c	;volatile
  2722  001DC0                     l39:
  2723  001DC0  0012               	return		;funcret
  2724  001DC2                     __end_of_appADC:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _adcGetValue *****************
  2728 ;; Defined at:
  2729 ;;		line 44 in file "adc.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  PinADC          1    wreg     unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  PinADC          1    9[COMRAM] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  2    6[COMRAM] unsigned short 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2743 ;;      Params:         2       0       0       0       0       0       0       0       0
  2744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2745 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2746 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2747 ;;Total ram usage:        4 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    2
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_appADC
  2754 ;;		_appBat
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text14
  2759  003692                     __ptext14:
  2760                           	callstack 0
  2761  003692                     _adcGetValue:
  2762                           	callstack 26
  2763                           
  2764                           ;incstack = 0
  2765                           ;adcGetValue@PinADC stored from wreg
  2766  003692  6E0A               	movwf	adcGetValue@PinADC^0,c
  2767  003694                     
  2768                           ;adc.c: 44: uint16_t adcGetValue(uint8_t PinADC);adc.c: 45: {;adc.c: 46:     ADCON0bits.
      +                          CHS = PinADC;
  2769  003694  C00A  F009         	movff	adcGetValue@PinADC,??_adcGetValue
  2770  003698  4609               	rlncf	??_adcGetValue^0,f,c
  2771  00369A  4609               	rlncf	??_adcGetValue^0,f,c
  2772  00369C  50C2               	movf	194,w,c	;volatile
  2773  00369E  1809               	xorwf	??_adcGetValue^0,w,c
  2774  0036A0  0BC3               	andlw	-61
  2775  0036A2  1809               	xorwf	??_adcGetValue^0,w,c
  2776  0036A4  6EC2               	movwf	194,c	;volatile
  2777  0036A6                     
  2778                           ;adc.c: 47:     _delay((unsigned long)((2)*(12000000/4000.0)));
  2779  0036A6  0E08               	movlw	8
  2780  0036A8  6E09               	movwf	??_adcGetValue^0,c
  2781  0036AA  0ECA               	movlw	202
  2782  0036AC                     u4517:
  2783  0036AC  2EE8               	decfsz	wreg,f,c
  2784  0036AE  D7FE               	bra	u4517
  2785  0036B0  2E09               	decfsz	??_adcGetValue^0,f,c
  2786  0036B2  D7FC               	bra	u4517
  2787  0036B4                     
  2788                           ;adc.c: 48:     GO_nDONE = 1;
  2789  0036B4  82C2               	bsf	4034,1,c	;volatile
  2790  0036B6                     l30:
  2791                           
  2792                           ;adc.c: 49:     while(ADCON0bits.GO_DONE)
  2793  0036B6  B2C2               	btfsc	194,1,c	;volatile
  2794  0036B8  EF60  F01B         	goto	u2811
  2795  0036BC  EF62  F01B         	goto	u2810
  2796  0036C0                     u2811:
  2797  0036C0  EF5B  F01B         	goto	l30
  2798  0036C4                     u2810:
  2799  0036C4                     
  2800                           ;adc.c: 52:     return ADRES;
  2801  0036C4  CFC3 F007          	movff	4035,?_adcGetValue	;volatile
  2802  0036C8  CFC4 F008          	movff	4036,?_adcGetValue+1	;volatile
  2803  0036CC  0012               	return		;funcret
  2804  0036CE                     __end_of_adcGetValue:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function ___xxtofl *****************
  2808 ;; Defined at:
  2809 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  sign            1    wreg     unsigned char 
  2812 ;;  val             4   10[COMRAM] long 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  sign            1   18[COMRAM] unsigned char 
  2815 ;;  arg             4   20[COMRAM] unsigned long 
  2816 ;;  exp             1   19[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  4   10[COMRAM] unsigned char 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2826 ;;      Params:         4       0       0       0       0       0       0       0       0
  2827 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2828 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2829 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2830 ;;Total ram usage:       14 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    2
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_appADC
  2837 ;;		_appBat
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text15
  2842  001A60                     __ptext15:
  2843                           	callstack 0
  2844  001A60                     ___xxtofl:
  2845                           	callstack 26
  2846                           
  2847                           ;incstack = 0
  2848                           ;___xxtofl@sign stored from wreg
  2849  001A60  6E13               	movwf	___xxtofl@sign^0,c
  2850  001A62  5013               	movf	___xxtofl@sign^0,w,c
  2851  001A64  B4D8               	btfsc	status,2,c
  2852  001A66  EF37  F00D         	goto	u3681
  2853  001A6A  EF39  F00D         	goto	u3680
  2854  001A6E                     u3681:
  2855  001A6E  EF5B  F00D         	goto	l1095
  2856  001A72                     u3680:
  2857  001A72  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  2858  001A74  EF40  F00D         	goto	u3690
  2859  001A78  EF3E  F00D         	goto	u3691
  2860  001A7C                     u3691:
  2861  001A7C  EF5B  F00D         	goto	l1095
  2862  001A80                     u3690:
  2863  001A80  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  2864  001A84  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  2865  001A88  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  2866  001A8C  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  2867  001A90  1E0F               	comf	??___xxtofl^0,f,c
  2868  001A92  1E10               	comf	(??___xxtofl+1)^0,f,c
  2869  001A94  1E11               	comf	(??___xxtofl+2)^0,f,c
  2870  001A96  1E12               	comf	(??___xxtofl+3)^0,f,c
  2871  001A98  2A0F               	incf	??___xxtofl^0,f,c
  2872  001A9A  0E00               	movlw	0
  2873  001A9C  2210               	addwfc	(??___xxtofl+1)^0,f,c
  2874  001A9E  2211               	addwfc	(??___xxtofl+2)^0,f,c
  2875  001AA0  2212               	addwfc	(??___xxtofl+3)^0,f,c
  2876  001AA2  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  2877  001AA6  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  2878  001AAA  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  2879  001AAE  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  2880  001AB2  EF63  F00D         	goto	l3985
  2881  001AB6                     l1095:
  2882  001AB6  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  2883  001ABA  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2884  001ABE  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2885  001AC2  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2886  001AC6                     l3985:
  2887  001AC6  500B               	movf	___xxtofl@val^0,w,c
  2888  001AC8  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  2889  001ACA  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  2890  001ACC  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  2891  001ACE  A4D8               	btfss	status,2,c
  2892  001AD0  EF6C  F00D         	goto	u3701
  2893  001AD4  EF6E  F00D         	goto	u3700
  2894  001AD8                     u3701:
  2895  001AD8  EF78  F00D         	goto	l3991
  2896  001ADC                     u3700:
  2897  001ADC  0E00               	movlw	0
  2898  001ADE  6E0B               	movwf	?___xxtofl^0,c
  2899  001AE0  0E00               	movlw	0
  2900  001AE2  6E0C               	movwf	(?___xxtofl+1)^0,c
  2901  001AE4  0E00               	movlw	0
  2902  001AE6  6E0D               	movwf	(?___xxtofl+2)^0,c
  2903  001AE8  0E00               	movlw	0
  2904  001AEA  6E0E               	movwf	(?___xxtofl+3)^0,c
  2905  001AEC  EF09  F00E         	goto	l1098
  2906  001AF0                     l3991:
  2907  001AF0  0E96               	movlw	150
  2908  001AF2  6E14               	movwf	___xxtofl@exp^0,c
  2909  001AF4  EF82  F00D         	goto	l3995
  2910  001AF8                     l3993:
  2911  001AF8  2A14               	incf	___xxtofl@exp^0,f,c
  2912  001AFA  90D8               	bcf	status,0,c
  2913  001AFC  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2914  001AFE  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2915  001B00  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2916  001B02  3215               	rrcf	___xxtofl@arg^0,f,c
  2917  001B04                     l3995:
  2918  001B04  0E00               	movlw	0
  2919  001B06  1415               	andwf	___xxtofl@arg^0,w,c
  2920  001B08  6E0F               	movwf	??___xxtofl^0,c
  2921  001B0A  0E00               	movlw	0
  2922  001B0C  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2923  001B0E  6E10               	movwf	(??___xxtofl+1)^0,c
  2924  001B10  0E00               	movlw	0
  2925  001B12  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2926  001B14  6E11               	movwf	(??___xxtofl+2)^0,c
  2927  001B16  0EFE               	movlw	254
  2928  001B18  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2929  001B1A  6E12               	movwf	(??___xxtofl+3)^0,c
  2930  001B1C  500F               	movf	??___xxtofl^0,w,c
  2931  001B1E  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2932  001B20  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2933  001B22  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2934  001B24  A4D8               	btfss	status,2,c
  2935  001B26  EF97  F00D         	goto	u3711
  2936  001B2A  EF99  F00D         	goto	u3710
  2937  001B2E                     u3711:
  2938  001B2E  EF7C  F00D         	goto	l3993
  2939  001B32                     u3710:
  2940  001B32  EFA7  F00D         	goto	l1102
  2941  001B36                     l3997:
  2942  001B36  2A14               	incf	___xxtofl@exp^0,f,c
  2943  001B38  0E01               	movlw	1
  2944  001B3A  2615               	addwf	___xxtofl@arg^0,f,c
  2945  001B3C  0E00               	movlw	0
  2946  001B3E  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  2947  001B40  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  2948  001B42  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  2949  001B44  90D8               	bcf	status,0,c
  2950  001B46  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2951  001B48  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2952  001B4A  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2953  001B4C  3215               	rrcf	___xxtofl@arg^0,f,c
  2954  001B4E                     l1102:
  2955  001B4E  0E00               	movlw	0
  2956  001B50  1415               	andwf	___xxtofl@arg^0,w,c
  2957  001B52  6E0F               	movwf	??___xxtofl^0,c
  2958  001B54  0E00               	movlw	0
  2959  001B56  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2960  001B58  6E10               	movwf	(??___xxtofl+1)^0,c
  2961  001B5A  0E00               	movlw	0
  2962  001B5C  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2963  001B5E  6E11               	movwf	(??___xxtofl+2)^0,c
  2964  001B60  0EFF               	movlw	255
  2965  001B62  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2966  001B64  6E12               	movwf	(??___xxtofl+3)^0,c
  2967  001B66  500F               	movf	??___xxtofl^0,w,c
  2968  001B68  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2969  001B6A  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2970  001B6C  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2971  001B6E  A4D8               	btfss	status,2,c
  2972  001B70  EFBC  F00D         	goto	u3721
  2973  001B74  EFBE  F00D         	goto	u3720
  2974  001B78                     u3721:
  2975  001B78  EF9B  F00D         	goto	l3997
  2976  001B7C                     u3720:
  2977  001B7C  EFC6  F00D         	goto	l4005
  2978  001B80                     l4003:
  2979  001B80  0614               	decf	___xxtofl@exp^0,f,c
  2980  001B82  90D8               	bcf	status,0,c
  2981  001B84  3615               	rlcf	___xxtofl@arg^0,f,c
  2982  001B86  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  2983  001B88  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  2984  001B8A  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  2985  001B8C                     l4005:
  2986  001B8C  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  2987  001B8E  EFCB  F00D         	goto	u3731
  2988  001B92  EFCD  F00D         	goto	u3730
  2989  001B96                     u3731:
  2990  001B96  EFD5  F00D         	goto	l1109
  2991  001B9A                     u3730:
  2992  001B9A  0E02               	movlw	2
  2993  001B9C  6014               	cpfslt	___xxtofl@exp^0,c
  2994  001B9E  EFD3  F00D         	goto	u3741
  2995  001BA2  EFD5  F00D         	goto	u3740
  2996  001BA6                     u3741:
  2997  001BA6  EFC0  F00D         	goto	l4003
  2998  001BAA                     u3740:
  2999  001BAA                     l1109:
  3000  001BAA  B014               	btfsc	___xxtofl@exp^0,0,c
  3001  001BAC  EFDA  F00D         	goto	u3751
  3002  001BB0  EFDC  F00D         	goto	u3750
  3003  001BB4                     u3751:
  3004  001BB4  EFDD  F00D         	goto	l4011
  3005  001BB8                     u3750:
  3006  001BB8  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  3007  001BBA                     l4011:
  3008  001BBA  90D8               	bcf	status,0,c
  3009  001BBC  3214               	rrcf	___xxtofl@exp^0,f,c
  3010  001BBE  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  3011  001BC2  6A10               	clrf	(??___xxtofl+1)^0,c
  3012  001BC4  6A11               	clrf	(??___xxtofl+2)^0,c
  3013  001BC6  6A12               	clrf	(??___xxtofl+3)^0,c
  3014  001BC8  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  3015  001BCC  6A11               	clrf	(??___xxtofl+2)^0,c
  3016  001BCE  6A10               	clrf	(??___xxtofl+1)^0,c
  3017  001BD0  6A0F               	clrf	??___xxtofl^0,c
  3018  001BD2  500F               	movf	??___xxtofl^0,w,c
  3019  001BD4  1215               	iorwf	___xxtofl@arg^0,f,c
  3020  001BD6  5010               	movf	(??___xxtofl+1)^0,w,c
  3021  001BD8  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  3022  001BDA  5011               	movf	(??___xxtofl+2)^0,w,c
  3023  001BDC  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  3024  001BDE  5012               	movf	(??___xxtofl+3)^0,w,c
  3025  001BE0  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  3026  001BE2  5013               	movf	___xxtofl@sign^0,w,c
  3027  001BE4  B4D8               	btfsc	status,2,c
  3028  001BE6  EFF7  F00D         	goto	u3761
  3029  001BEA  EFF9  F00D         	goto	u3760
  3030  001BEE                     u3761:
  3031  001BEE  EF01  F00E         	goto	l4021
  3032  001BF2                     u3760:
  3033  001BF2  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  3034  001BF4  EF00  F00E         	goto	u3770
  3035  001BF8  EFFE  F00D         	goto	u3771
  3036  001BFC                     u3771:
  3037  001BFC  EF01  F00E         	goto	l4021
  3038  001C00                     u3770:
  3039  001C00  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  3040  001C02                     l4021:
  3041  001C02  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  3042  001C06  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  3043  001C0A  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  3044  001C0E  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  3045  001C12                     l1098:
  3046  001C12  0012               	return		;funcret
  3047  001C14                     __end_of___xxtofl:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function ___fltol *****************
  3051 ;; Defined at:
  3052 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  f1              4   74[COMRAM] unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  exp1            1    1[BANK0 ] unsigned char 
  3057 ;;  sign1           1    0[BANK0 ] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  4   74[COMRAM] long 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3067 ;;      Params:         4       0       0       0       0       0       0       0       0
  3068 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3069 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3070 ;;      Totals:         8       2       0       0       0       0       0       0       0
  3071 ;;Total ram usage:       10 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    2
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_appADC
  3078 ;;		_appBat
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text16
  3083  002748                     __ptext16:
  3084                           	callstack 0
  3085  002748                     ___fltol:
  3086                           	callstack 26
  3087  002748  344D               	rlcf	(___fltol@f1+2)^0,w,c
  3088  00274A  344E               	rlcf	(___fltol@f1+3)^0,w,c
  3089  00274C  0100               	movlb	0	; () banked
  3090  00274E  6F95               	movwf	___fltol@exp1& (0+255),b
  3091  002750  5195               	movf	___fltol@exp1& (0+255),w,b
  3092  002752  A4D8               	btfss	status,2,c
  3093  002754  EFAE  F013         	goto	u4181
  3094  002758  EFB0  F013         	goto	u4180
  3095  00275C                     u4181:
  3096  00275C  EFBA  F013         	goto	l4631
  3097  002760                     u4180:
  3098  002760                     l4627:
  3099                           
  3100                           ; BSR set to: 0
  3101  002760  0E00               	movlw	0
  3102  002762  6E4B               	movwf	?___fltol^0,c
  3103  002764  0E00               	movlw	0
  3104  002766  6E4C               	movwf	(?___fltol+1)^0,c
  3105  002768  0E00               	movlw	0
  3106  00276A  6E4D               	movwf	(?___fltol+2)^0,c
  3107  00276C  0E00               	movlw	0
  3108  00276E  6E4E               	movwf	(?___fltol+3)^0,c
  3109  002770  EF27  F014         	goto	l737
  3110  002774                     l4631:
  3111                           
  3112                           ; BSR set to: 0
  3113  002774  C04B  F04F         	movff	___fltol@f1,??___fltol
  3114  002778  C04C  F050         	movff	___fltol@f1+1,??___fltol+1
  3115  00277C  C04D  F051         	movff	___fltol@f1+2,??___fltol+2
  3116  002780  C04E  F052         	movff	___fltol@f1+3,??___fltol+3
  3117  002784  0E20               	movlw	32
  3118  002786  EFCA  F013         	goto	u4190
  3119  00278A                     u4195:
  3120  00278A  90D8               	bcf	status,0,c
  3121  00278C  3252               	rrcf	(??___fltol+3)^0,f,c
  3122  00278E  3251               	rrcf	(??___fltol+2)^0,f,c
  3123  002790  3250               	rrcf	(??___fltol+1)^0,f,c
  3124  002792  324F               	rrcf	??___fltol^0,f,c
  3125  002794                     u4190:
  3126  002794  2EE8               	decfsz	wreg,f,c
  3127  002796  EFC5  F013         	goto	u4195
  3128  00279A  504F               	movf	??___fltol^0,w,c
  3129  00279C  6F94               	movwf	___fltol@sign1& (0+255),b
  3130  00279E                     
  3131                           ; BSR set to: 0
  3132  00279E  8E4D               	bsf	(___fltol@f1+2)^0,7,c
  3133  0027A0                     
  3134                           ; BSR set to: 0
  3135  0027A0  0EFF               	movlw	255
  3136  0027A2  164B               	andwf	___fltol@f1^0,f,c
  3137  0027A4  0EFF               	movlw	255
  3138  0027A6  164C               	andwf	(___fltol@f1+1)^0,f,c
  3139  0027A8  0EFF               	movlw	255
  3140  0027AA  164D               	andwf	(___fltol@f1+2)^0,f,c
  3141  0027AC  0E00               	movlw	0
  3142  0027AE  164E               	andwf	(___fltol@f1+3)^0,f,c
  3143  0027B0                     
  3144                           ; BSR set to: 0
  3145  0027B0  0E96               	movlw	150
  3146  0027B2  5F95               	subwf	___fltol@exp1& (0+255),f,b
  3147  0027B4                     
  3148                           ; BSR set to: 0
  3149  0027B4  BF95               	btfsc	___fltol@exp1& (0+255),7,b
  3150  0027B6  EFE1  F013         	goto	u4200
  3151  0027BA  EFDF  F013         	goto	u4201
  3152  0027BE                     u4201:
  3153  0027BE  EFF7  F013         	goto	l4651
  3154  0027C2                     u4200:
  3155  0027C2                     
  3156                           ; BSR set to: 0
  3157  0027C2  5195               	movf	___fltol@exp1& (0+255),w,b
  3158  0027C4  0A80               	xorlw	128
  3159  0027C6  0F97               	addlw	151
  3160  0027C8  B0D8               	btfsc	status,0,c
  3161  0027CA  EFE9  F013         	goto	u4211
  3162  0027CE  EFEB  F013         	goto	u4210
  3163  0027D2                     u4211:
  3164  0027D2  EFED  F013         	goto	l4647
  3165  0027D6                     u4210:
  3166  0027D6  EFB0  F013         	goto	l4627
  3167  0027DA                     l4647:
  3168                           
  3169                           ; BSR set to: 0
  3170  0027DA  90D8               	bcf	status,0,c
  3171  0027DC  324E               	rrcf	(___fltol@f1+3)^0,f,c
  3172  0027DE  324D               	rrcf	(___fltol@f1+2)^0,f,c
  3173  0027E0  324C               	rrcf	(___fltol@f1+1)^0,f,c
  3174  0027E2  324B               	rrcf	___fltol@f1^0,f,c
  3175  0027E4                     
  3176                           ; BSR set to: 0
  3177  0027E4  3F95               	incfsz	___fltol@exp1& (0+255),f,b
  3178  0027E6  EFED  F013         	goto	l4647
  3179  0027EA  EF0F  F014         	goto	l4661
  3180  0027EE                     l4651:
  3181                           
  3182                           ; BSR set to: 0
  3183  0027EE  0E1F               	movlw	31
  3184  0027F0  6595               	cpfsgt	___fltol@exp1& (0+255),b
  3185  0027F2  EFFD  F013         	goto	u4221
  3186  0027F6  EFFF  F013         	goto	u4220
  3187  0027FA                     u4221:
  3188  0027FA  EF07  F014         	goto	l4659
  3189  0027FE                     u4220:
  3190  0027FE  EFB0  F013         	goto	l4627
  3191  002802                     l4657:
  3192                           
  3193                           ; BSR set to: 0
  3194  002802  90D8               	bcf	status,0,c
  3195  002804  364B               	rlcf	___fltol@f1^0,f,c
  3196  002806  364C               	rlcf	(___fltol@f1+1)^0,f,c
  3197  002808  364D               	rlcf	(___fltol@f1+2)^0,f,c
  3198  00280A  364E               	rlcf	(___fltol@f1+3)^0,f,c
  3199  00280C  0795               	decf	___fltol@exp1& (0+255),f,b
  3200  00280E                     l4659:
  3201                           
  3202                           ; BSR set to: 0
  3203  00280E  5195               	movf	___fltol@exp1& (0+255),w,b
  3204  002810  A4D8               	btfss	status,2,c
  3205  002812  EF0D  F014         	goto	u4231
  3206  002816  EF0F  F014         	goto	u4230
  3207  00281A                     u4231:
  3208  00281A  EF01  F014         	goto	l4657
  3209  00281E                     u4230:
  3210  00281E                     l4661:
  3211                           
  3212                           ; BSR set to: 0
  3213  00281E  5194               	movf	___fltol@sign1& (0+255),w,b
  3214  002820  B4D8               	btfsc	status,2,c
  3215  002822  EF15  F014         	goto	u4241
  3216  002826  EF17  F014         	goto	u4240
  3217  00282A                     u4241:
  3218  00282A  EF1F  F014         	goto	l4665
  3219  00282E                     u4240:
  3220  00282E                     
  3221                           ; BSR set to: 0
  3222  00282E  1E4E               	comf	(___fltol@f1+3)^0,f,c
  3223  002830  1E4D               	comf	(___fltol@f1+2)^0,f,c
  3224  002832  1E4C               	comf	(___fltol@f1+1)^0,f,c
  3225  002834  6C4B               	negf	___fltol@f1^0,c
  3226  002836  0E00               	movlw	0
  3227  002838  224C               	addwfc	(___fltol@f1+1)^0,f,c
  3228  00283A  224D               	addwfc	(___fltol@f1+2)^0,f,c
  3229  00283C  224E               	addwfc	(___fltol@f1+3)^0,f,c
  3230  00283E                     l4665:
  3231                           
  3232                           ; BSR set to: 0
  3233  00283E  C04B  F04B         	movff	___fltol@f1,?___fltol
  3234  002842  C04C  F04C         	movff	___fltol@f1+1,?___fltol+1
  3235  002846  C04D  F04D         	movff	___fltol@f1+2,?___fltol+2
  3236  00284A  C04E  F04E         	movff	___fltol@f1+3,?___fltol+3
  3237  00284E                     l737:
  3238                           
  3239                           ; BSR set to: 0
  3240  00284E  0012               	return		;funcret
  3241  002850                     __end_of___fltol:
  3242                           	callstack 0
  3243                           
  3244 ;; *************** function ___flmul *****************
  3245 ;; Defined at:
  3246 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  b               4   24[COMRAM] long 
  3249 ;;  a               4   28[COMRAM] long 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  prod            4   43[COMRAM] struct .
  3252 ;;  grs             4   37[COMRAM] unsigned long 
  3253 ;;  temp            2   47[COMRAM] struct .
  3254 ;;  bexp            1   42[COMRAM] unsigned char 
  3255 ;;  aexp            1   41[COMRAM] unsigned char 
  3256 ;;  sign            1   36[COMRAM] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  4   24[COMRAM] unsigned char 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, prodl, prodh
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3266 ;;      Params:         8       0       0       0       0       0       0       0       0
  3267 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3268 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3269 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3270 ;;Total ram usage:       25 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    2
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		_appADC
  3277 ;;		_appBat
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text17
  3282  000880                     __ptext17:
  3283                           	callstack 0
  3284  000880                     ___flmul:
  3285                           	callstack 26
  3286  000880  501C               	movf	(___flmul@b+3)^0,w,c
  3287  000882  0B80               	andlw	128
  3288  000884  6E25               	movwf	___flmul@sign^0,c
  3289  000886  501C               	movf	(___flmul@b+3)^0,w,c
  3290  000888  241C               	addwf	(___flmul@b+3)^0,w,c
  3291  00088A  6E2B               	movwf	___flmul@bexp^0,c
  3292  00088C  AE1B               	btfss	(___flmul@b+2)^0,7,c
  3293  00088E  EF4B  F004         	goto	u3361
  3294  000892  EF4D  F004         	goto	u3360
  3295  000896                     u3361:
  3296  000896  EF4E  F004         	goto	l3775
  3297  00089A                     u3360:
  3298  00089A  802B               	bsf	___flmul@bexp^0,0,c
  3299  00089C                     l3775:
  3300  00089C  502B               	movf	___flmul@bexp^0,w,c
  3301  00089E  B4D8               	btfsc	status,2,c
  3302  0008A0  EF54  F004         	goto	u3371
  3303  0008A4  EF56  F004         	goto	u3370
  3304  0008A8                     u3371:
  3305  0008A8  EF69  F004         	goto	l3783
  3306  0008AC                     u3370:
  3307  0008AC  282B               	incf	___flmul@bexp^0,w,c
  3308  0008AE  A4D8               	btfss	status,2,c
  3309  0008B0  EF5C  F004         	goto	u3381
  3310  0008B4  EF5E  F004         	goto	u3380
  3311  0008B8                     u3381:
  3312  0008B8  EF66  F004         	goto	l3781
  3313  0008BC                     u3380:
  3314  0008BC  0E00               	movlw	0
  3315  0008BE  6E19               	movwf	___flmul@b^0,c
  3316  0008C0  0E00               	movlw	0
  3317  0008C2  6E1A               	movwf	(___flmul@b+1)^0,c
  3318  0008C4  0E00               	movlw	0
  3319  0008C6  6E1B               	movwf	(___flmul@b+2)^0,c
  3320  0008C8  0E00               	movlw	0
  3321  0008CA  6E1C               	movwf	(___flmul@b+3)^0,c
  3322  0008CC                     l3781:
  3323  0008CC  8E1B               	bsf	(___flmul@b+2)^0,7,c
  3324  0008CE  EF71  F004         	goto	l3785
  3325  0008D2                     l3783:
  3326  0008D2  0E00               	movlw	0
  3327  0008D4  6E19               	movwf	___flmul@b^0,c
  3328  0008D6  0E00               	movlw	0
  3329  0008D8  6E1A               	movwf	(___flmul@b+1)^0,c
  3330  0008DA  0E00               	movlw	0
  3331  0008DC  6E1B               	movwf	(___flmul@b+2)^0,c
  3332  0008DE  0E00               	movlw	0
  3333  0008E0  6E1C               	movwf	(___flmul@b+3)^0,c
  3334  0008E2                     l3785:
  3335  0008E2  5020               	movf	(___flmul@a+3)^0,w,c
  3336  0008E4  0B80               	andlw	128
  3337  0008E6  1A25               	xorwf	___flmul@sign^0,f,c
  3338  0008E8  5020               	movf	(___flmul@a+3)^0,w,c
  3339  0008EA  2420               	addwf	(___flmul@a+3)^0,w,c
  3340  0008EC  6E2A               	movwf	___flmul@aexp^0,c
  3341  0008EE  AE1F               	btfss	(___flmul@a+2)^0,7,c
  3342  0008F0  EF7C  F004         	goto	u3391
  3343  0008F4  EF7E  F004         	goto	u3390
  3344  0008F8                     u3391:
  3345  0008F8  EF7F  F004         	goto	l3793
  3346  0008FC                     u3390:
  3347  0008FC  802A               	bsf	___flmul@aexp^0,0,c
  3348  0008FE                     l3793:
  3349  0008FE  502A               	movf	___flmul@aexp^0,w,c
  3350  000900  B4D8               	btfsc	status,2,c
  3351  000902  EF85  F004         	goto	u3401
  3352  000906  EF87  F004         	goto	u3400
  3353  00090A                     u3401:
  3354  00090A  EF9A  F004         	goto	l3801
  3355  00090E                     u3400:
  3356  00090E  282A               	incf	___flmul@aexp^0,w,c
  3357  000910  A4D8               	btfss	status,2,c
  3358  000912  EF8D  F004         	goto	u3411
  3359  000916  EF8F  F004         	goto	u3410
  3360  00091A                     u3411:
  3361  00091A  EF97  F004         	goto	l3799
  3362  00091E                     u3410:
  3363  00091E  0E00               	movlw	0
  3364  000920  6E1D               	movwf	___flmul@a^0,c
  3365  000922  0E00               	movlw	0
  3366  000924  6E1E               	movwf	(___flmul@a+1)^0,c
  3367  000926  0E00               	movlw	0
  3368  000928  6E1F               	movwf	(___flmul@a+2)^0,c
  3369  00092A  0E00               	movlw	0
  3370  00092C  6E20               	movwf	(___flmul@a+3)^0,c
  3371  00092E                     l3799:
  3372  00092E  8E1F               	bsf	(___flmul@a+2)^0,7,c
  3373  000930  EFA2  F004         	goto	l1054
  3374  000934                     l3801:
  3375  000934  0E00               	movlw	0
  3376  000936  6E1D               	movwf	___flmul@a^0,c
  3377  000938  0E00               	movlw	0
  3378  00093A  6E1E               	movwf	(___flmul@a+1)^0,c
  3379  00093C  0E00               	movlw	0
  3380  00093E  6E1F               	movwf	(___flmul@a+2)^0,c
  3381  000940  0E00               	movlw	0
  3382  000942  6E20               	movwf	(___flmul@a+3)^0,c
  3383  000944                     l1054:
  3384  000944  502A               	movf	___flmul@aexp^0,w,c
  3385  000946  B4D8               	btfsc	status,2,c
  3386  000948  EFA8  F004         	goto	u3421
  3387  00094C  EFAA  F004         	goto	u3420
  3388  000950                     u3421:
  3389  000950  EFB2  F004         	goto	l3805
  3390  000954                     u3420:
  3391  000954  502B               	movf	___flmul@bexp^0,w,c
  3392  000956  A4D8               	btfss	status,2,c
  3393  000958  EFB0  F004         	goto	u3431
  3394  00095C  EFB2  F004         	goto	u3430
  3395  000960                     u3431:
  3396  000960  EFBC  F004         	goto	l3809
  3397  000964                     u3430:
  3398  000964                     l3805:
  3399  000964  0E00               	movlw	0
  3400  000966  6E19               	movwf	?___flmul^0,c
  3401  000968  0E00               	movlw	0
  3402  00096A  6E1A               	movwf	(?___flmul+1)^0,c
  3403  00096C  0E00               	movlw	0
  3404  00096E  6E1B               	movwf	(?___flmul+2)^0,c
  3405  000970  0E00               	movlw	0
  3406  000972  6E1C               	movwf	(?___flmul+3)^0,c
  3407  000974  EF54  F006         	goto	l1058
  3408  000978                     l3809:
  3409  000978  501F               	movf	(___flmul@a+2)^0,w,c
  3410  00097A  0219               	mulwf	___flmul@b^0,c
  3411  00097C  CFF3 F030          	movff	prodl,___flmul@temp
  3412  000980  CFF4 F031          	movff	prodh,___flmul@temp+1
  3413  000984  5030               	movf	___flmul@temp^0,w,c
  3414  000986  6E26               	movwf	___flmul@grs^0,c
  3415  000988  6A27               	clrf	(___flmul@grs+1)^0,c
  3416  00098A  6A28               	clrf	(___flmul@grs+2)^0,c
  3417  00098C  6A29               	clrf	(___flmul@grs+3)^0,c
  3418  00098E  5031               	movf	(___flmul@temp+1)^0,w,c
  3419  000990  6E2C               	movwf	___flmul@prod^0,c
  3420  000992  6A2D               	clrf	(___flmul@prod+1)^0,c
  3421  000994  6A2E               	clrf	(___flmul@prod+2)^0,c
  3422  000996  6A2F               	clrf	(___flmul@prod+3)^0,c
  3423  000998  501E               	movf	(___flmul@a+1)^0,w,c
  3424  00099A  021A               	mulwf	(___flmul@b+1)^0,c
  3425  00099C  CFF3 F030          	movff	prodl,___flmul@temp
  3426  0009A0  CFF4 F031          	movff	prodh,___flmul@temp+1
  3427  0009A4  5030               	movf	___flmul@temp^0,w,c
  3428  0009A6  2626               	addwf	___flmul@grs^0,f,c
  3429  0009A8  0E00               	movlw	0
  3430  0009AA  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3431  0009AC  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3432  0009AE  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3433  0009B0  5031               	movf	(___flmul@temp+1)^0,w,c
  3434  0009B2  262C               	addwf	___flmul@prod^0,f,c
  3435  0009B4  0E00               	movlw	0
  3436  0009B6  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3437  0009B8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3438  0009BA  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3439  0009BC  501D               	movf	___flmul@a^0,w,c
  3440  0009BE  021B               	mulwf	(___flmul@b+2)^0,c
  3441  0009C0  CFF3 F030          	movff	prodl,___flmul@temp
  3442  0009C4  CFF4 F031          	movff	prodh,___flmul@temp+1
  3443  0009C8  5030               	movf	___flmul@temp^0,w,c
  3444  0009CA  2626               	addwf	___flmul@grs^0,f,c
  3445  0009CC  0E00               	movlw	0
  3446  0009CE  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3447  0009D0  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3448  0009D2  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3449  0009D4  5031               	movf	(___flmul@temp+1)^0,w,c
  3450  0009D6  262C               	addwf	___flmul@prod^0,f,c
  3451  0009D8  0E00               	movlw	0
  3452  0009DA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3453  0009DC  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3454  0009DE  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3455  0009E0  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3456  0009E4  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3457  0009E8  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3458  0009EC  6A26               	clrf	___flmul@grs^0,c
  3459  0009EE  501D               	movf	___flmul@a^0,w,c
  3460  0009F0  021A               	mulwf	(___flmul@b+1)^0,c
  3461  0009F2  CFF3 F030          	movff	prodl,___flmul@temp
  3462  0009F6  CFF4 F031          	movff	prodh,___flmul@temp+1
  3463  0009FA  5030               	movf	___flmul@temp^0,w,c
  3464  0009FC  2626               	addwf	___flmul@grs^0,f,c
  3465  0009FE  5031               	movf	(___flmul@temp+1)^0,w,c
  3466  000A00  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3467  000A02  0E00               	movlw	0
  3468  000A04  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3469  000A06  0E00               	movlw	0
  3470  000A08  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3471  000A0A  501E               	movf	(___flmul@a+1)^0,w,c
  3472  000A0C  0219               	mulwf	___flmul@b^0,c
  3473  000A0E  CFF3 F030          	movff	prodl,___flmul@temp
  3474  000A12  CFF4 F031          	movff	prodh,___flmul@temp+1
  3475  000A16  5030               	movf	___flmul@temp^0,w,c
  3476  000A18  2626               	addwf	___flmul@grs^0,f,c
  3477  000A1A  5031               	movf	(___flmul@temp+1)^0,w,c
  3478  000A1C  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3479  000A1E  0E00               	movlw	0
  3480  000A20  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3481  000A22  0E00               	movlw	0
  3482  000A24  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3483  000A26  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3484  000A2A  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3485  000A2E  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3486  000A32  6A26               	clrf	___flmul@grs^0,c
  3487  000A34  501D               	movf	___flmul@a^0,w,c
  3488  000A36  0219               	mulwf	___flmul@b^0,c
  3489  000A38  CFF3 F030          	movff	prodl,___flmul@temp
  3490  000A3C  CFF4 F031          	movff	prodh,___flmul@temp+1
  3491  000A40  5030               	movf	___flmul@temp^0,w,c
  3492  000A42  2626               	addwf	___flmul@grs^0,f,c
  3493  000A44  5031               	movf	(___flmul@temp+1)^0,w,c
  3494  000A46  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3495  000A48  0E00               	movlw	0
  3496  000A4A  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3497  000A4C  0E00               	movlw	0
  3498  000A4E  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3499  000A50  501F               	movf	(___flmul@a+2)^0,w,c
  3500  000A52  021A               	mulwf	(___flmul@b+1)^0,c
  3501  000A54  CFF3 F030          	movff	prodl,___flmul@temp
  3502  000A58  CFF4 F031          	movff	prodh,___flmul@temp+1
  3503  000A5C  5030               	movf	___flmul@temp^0,w,c
  3504  000A5E  262C               	addwf	___flmul@prod^0,f,c
  3505  000A60  5031               	movf	(___flmul@temp+1)^0,w,c
  3506  000A62  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3507  000A64  0E00               	movlw	0
  3508  000A66  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3509  000A68  0E00               	movlw	0
  3510  000A6A  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3511  000A6C  501E               	movf	(___flmul@a+1)^0,w,c
  3512  000A6E  021B               	mulwf	(___flmul@b+2)^0,c
  3513  000A70  CFF3 F030          	movff	prodl,___flmul@temp
  3514  000A74  CFF4 F031          	movff	prodh,___flmul@temp+1
  3515  000A78  5030               	movf	___flmul@temp^0,w,c
  3516  000A7A  262C               	addwf	___flmul@prod^0,f,c
  3517  000A7C  5031               	movf	(___flmul@temp+1)^0,w,c
  3518  000A7E  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3519  000A80  0E00               	movlw	0
  3520  000A82  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3521  000A84  0E00               	movlw	0
  3522  000A86  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3523  000A88  501F               	movf	(___flmul@a+2)^0,w,c
  3524  000A8A  021B               	mulwf	(___flmul@b+2)^0,c
  3525  000A8C  CFF3 F030          	movff	prodl,___flmul@temp
  3526  000A90  CFF4 F031          	movff	prodh,___flmul@temp+1
  3527  000A94  5030               	movf	___flmul@temp^0,w,c
  3528  000A96  6E21               	movwf	??___flmul^0,c
  3529  000A98  5031               	movf	(___flmul@temp+1)^0,w,c
  3530  000A9A  6E22               	movwf	(??___flmul+1)^0,c
  3531  000A9C  6A23               	clrf	(??___flmul+2)^0,c
  3532  000A9E  6A24               	clrf	(??___flmul+3)^0,c
  3533  000AA0  C023  F024         	movff	??___flmul+2,??___flmul+3
  3534  000AA4  C022  F023         	movff	??___flmul+1,??___flmul+2
  3535  000AA8  C021  F022         	movff	??___flmul,??___flmul+1
  3536  000AAC  6A21               	clrf	??___flmul^0,c
  3537  000AAE  5021               	movf	??___flmul^0,w,c
  3538  000AB0  262C               	addwf	___flmul@prod^0,f,c
  3539  000AB2  5022               	movf	(??___flmul+1)^0,w,c
  3540  000AB4  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3541  000AB6  5023               	movf	(??___flmul+2)^0,w,c
  3542  000AB8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3543  000ABA  5024               	movf	(??___flmul+3)^0,w,c
  3544  000ABC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3545  000ABE  C026  F021         	movff	___flmul@grs,??___flmul
  3546  000AC2  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  3547  000AC6  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  3548  000ACA  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  3549  000ACE  0E19               	movlw	25
  3550  000AD0  EF6F  F005         	goto	u3440
  3551  000AD4                     u3445:
  3552  000AD4  90D8               	bcf	status,0,c
  3553  000AD6  3224               	rrcf	(??___flmul+3)^0,f,c
  3554  000AD8  3223               	rrcf	(??___flmul+2)^0,f,c
  3555  000ADA  3222               	rrcf	(??___flmul+1)^0,f,c
  3556  000ADC  3221               	rrcf	??___flmul^0,f,c
  3557  000ADE                     u3440:
  3558  000ADE  2EE8               	decfsz	wreg,f,c
  3559  000AE0  EF6A  F005         	goto	u3445
  3560  000AE4  5021               	movf	??___flmul^0,w,c
  3561  000AE6  262C               	addwf	___flmul@prod^0,f,c
  3562  000AE8  5022               	movf	(??___flmul+1)^0,w,c
  3563  000AEA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3564  000AEC  5023               	movf	(??___flmul+2)^0,w,c
  3565  000AEE  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3566  000AF0  5024               	movf	(??___flmul+3)^0,w,c
  3567  000AF2  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3568  000AF4  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3569  000AF8  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3570  000AFC  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3571  000B00  6A26               	clrf	___flmul@grs^0,c
  3572  000B02  502A               	movf	___flmul@aexp^0,w,c
  3573  000B04  C02B  F021         	movff	___flmul@bexp,??___flmul
  3574  000B08  6A22               	clrf	(??___flmul+1)^0,c
  3575  000B0A  2621               	addwf	??___flmul^0,f,c
  3576  000B0C  0E00               	movlw	0
  3577  000B0E  2222               	addwfc	(??___flmul+1)^0,f,c
  3578  000B10  0E82               	movlw	130
  3579  000B12  2421               	addwf	??___flmul^0,w,c
  3580  000B14  6E30               	movwf	___flmul@temp^0,c
  3581  000B16  0EFF               	movlw	255
  3582  000B18  2022               	addwfc	(??___flmul+1)^0,w,c
  3583  000B1A  6E31               	movwf	(___flmul@temp+1)^0,c
  3584  000B1C  EFA5  F005         	goto	l3857
  3585  000B20                     l3851:
  3586  000B20  90D8               	bcf	status,0,c
  3587  000B22  362C               	rlcf	___flmul@prod^0,f,c
  3588  000B24  362D               	rlcf	(___flmul@prod+1)^0,f,c
  3589  000B26  362E               	rlcf	(___flmul@prod+2)^0,f,c
  3590  000B28  362F               	rlcf	(___flmul@prod+3)^0,f,c
  3591  000B2A  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3592  000B2C  EF9A  F005         	goto	u3451
  3593  000B30  EF9C  F005         	goto	u3450
  3594  000B34                     u3451:
  3595  000B34  EF9D  F005         	goto	l1061
  3596  000B38                     u3450:
  3597  000B38  802C               	bsf	___flmul@prod^0,0,c
  3598  000B3A                     l1061:
  3599  000B3A  90D8               	bcf	status,0,c
  3600  000B3C  3626               	rlcf	___flmul@grs^0,f,c
  3601  000B3E  3627               	rlcf	(___flmul@grs+1)^0,f,c
  3602  000B40  3628               	rlcf	(___flmul@grs+2)^0,f,c
  3603  000B42  3629               	rlcf	(___flmul@grs+3)^0,f,c
  3604  000B44  0630               	decf	___flmul@temp^0,f,c
  3605  000B46  A0D8               	btfss	status,0,c
  3606  000B48  0631               	decf	(___flmul@temp+1)^0,f,c
  3607  000B4A                     l3857:
  3608  000B4A  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  3609  000B4C  EFAA  F005         	goto	u3461
  3610  000B50  EFAC  F005         	goto	u3460
  3611  000B54                     u3461:
  3612  000B54  EF90  F005         	goto	l3851
  3613  000B58                     u3460:
  3614  000B58  0E00               	movlw	0
  3615  000B5A  6E2A               	movwf	___flmul@aexp^0,c
  3616  000B5C  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3617  000B5E  EFB3  F005         	goto	u3471
  3618  000B62  EFB5  F005         	goto	u3470
  3619  000B66                     u3471:
  3620  000B66  EFD9  F005         	goto	l1063
  3621  000B6A                     u3470:
  3622  000B6A  0EFF               	movlw	255
  3623  000B6C  1426               	andwf	___flmul@grs^0,w,c
  3624  000B6E  6E21               	movwf	??___flmul^0,c
  3625  000B70  0EFF               	movlw	255
  3626  000B72  1427               	andwf	(___flmul@grs+1)^0,w,c
  3627  000B74  6E22               	movwf	(??___flmul+1)^0,c
  3628  000B76  0EFF               	movlw	255
  3629  000B78  1428               	andwf	(___flmul@grs+2)^0,w,c
  3630  000B7A  6E23               	movwf	(??___flmul+2)^0,c
  3631  000B7C  0E7F               	movlw	127
  3632  000B7E  1429               	andwf	(___flmul@grs+3)^0,w,c
  3633  000B80  6E24               	movwf	(??___flmul+3)^0,c
  3634  000B82  5021               	movf	??___flmul^0,w,c
  3635  000B84  1022               	iorwf	(??___flmul+1)^0,w,c
  3636  000B86  1023               	iorwf	(??___flmul+2)^0,w,c
  3637  000B88  1024               	iorwf	(??___flmul+3)^0,w,c
  3638  000B8A  B4D8               	btfsc	status,2,c
  3639  000B8C  EFCA  F005         	goto	u3481
  3640  000B90  EFCC  F005         	goto	u3480
  3641  000B94                     u3481:
  3642  000B94  EFD0  F005         	goto	l1064
  3643  000B98                     u3480:
  3644  000B98                     l3865:
  3645  000B98  0E01               	movlw	1
  3646  000B9A  6E2A               	movwf	___flmul@aexp^0,c
  3647  000B9C  EFD9  F005         	goto	l1063
  3648  000BA0                     l1064:
  3649  000BA0  A02C               	btfss	___flmul@prod^0,0,c
  3650  000BA2  EFD5  F005         	goto	u3491
  3651  000BA6  EFD7  F005         	goto	u3490
  3652  000BAA                     u3491:
  3653  000BAA  EFD9  F005         	goto	l1063
  3654  000BAE                     u3490:
  3655  000BAE  EFCC  F005         	goto	l3865
  3656  000BB2                     l1063:
  3657  000BB2  502A               	movf	___flmul@aexp^0,w,c
  3658  000BB4  B4D8               	btfsc	status,2,c
  3659  000BB6  EFDF  F005         	goto	u3501
  3660  000BBA  EFE1  F005         	goto	u3500
  3661  000BBE                     u3501:
  3662  000BBE  EF05  F006         	goto	l3877
  3663  000BC2                     u3500:
  3664  000BC2  0E01               	movlw	1
  3665  000BC4  262C               	addwf	___flmul@prod^0,f,c
  3666  000BC6  0E00               	movlw	0
  3667  000BC8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3668  000BCA  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3669  000BCC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3670  000BCE  A02F               	btfss	(___flmul@prod+3)^0,0,c
  3671  000BD0  EFEC  F005         	goto	u3511
  3672  000BD4  EFEE  F005         	goto	u3510
  3673  000BD8                     u3511:
  3674  000BD8  EF05  F006         	goto	l3877
  3675  000BDC                     u3510:
  3676  000BDC  C02C  F021         	movff	___flmul@prod,??___flmul
  3677  000BE0  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  3678  000BE4  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  3679  000BE8  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  3680  000BEC  3424               	rlcf	(??___flmul+3)^0,w,c
  3681  000BEE  3224               	rrcf	(??___flmul+3)^0,f,c
  3682  000BF0  3223               	rrcf	(??___flmul+2)^0,f,c
  3683  000BF2  3222               	rrcf	(??___flmul+1)^0,f,c
  3684  000BF4  3221               	rrcf	??___flmul^0,f,c
  3685  000BF6  C021  F02C         	movff	??___flmul,___flmul@prod
  3686  000BFA  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  3687  000BFE  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  3688  000C02  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  3689  000C06  4A30               	infsnz	___flmul@temp^0,f,c
  3690  000C08  2A31               	incf	(___flmul@temp+1)^0,f,c
  3691  000C0A                     l3877:
  3692  000C0A  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3693  000C0C  EF10  F006         	goto	u3521
  3694  000C10  5031               	movf	(___flmul@temp+1)^0,w,c
  3695  000C12  E108               	bnz	u3520
  3696  000C14  2830               	incf	___flmul@temp^0,w,c
  3697  000C16  A0D8               	btfss	status,0,c
  3698  000C18  EF10  F006         	goto	u3521
  3699  000C1C  EF12  F006         	goto	u3520
  3700  000C20                     u3521:
  3701  000C20  EF1C  F006         	goto	l3881
  3702  000C24                     u3520:
  3703  000C24  0E00               	movlw	0
  3704  000C26  6E2C               	movwf	___flmul@prod^0,c
  3705  000C28  0E00               	movlw	0
  3706  000C2A  6E2D               	movwf	(___flmul@prod+1)^0,c
  3707  000C2C  0E80               	movlw	128
  3708  000C2E  6E2E               	movwf	(___flmul@prod+2)^0,c
  3709  000C30  0E7F               	movlw	127
  3710  000C32  6E2F               	movwf	(___flmul@prod+3)^0,c
  3711  000C34  EF4A  F006         	goto	l3893
  3712  000C38                     l3881:
  3713  000C38  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3714  000C3A  EF29  F006         	goto	u3530
  3715  000C3E  5031               	movf	(___flmul@temp+1)^0,w,c
  3716  000C40  E106               	bnz	u3531
  3717  000C42  0430               	decf	___flmul@temp^0,w,c
  3718  000C44  B0D8               	btfsc	status,0,c
  3719  000C46  EF27  F006         	goto	u3531
  3720  000C4A  EF29  F006         	goto	u3530
  3721  000C4E                     u3531:
  3722  000C4E  EF35  F006         	goto	l1071
  3723  000C52                     u3530:
  3724  000C52  0E00               	movlw	0
  3725  000C54  6E2C               	movwf	___flmul@prod^0,c
  3726  000C56  0E00               	movlw	0
  3727  000C58  6E2D               	movwf	(___flmul@prod+1)^0,c
  3728  000C5A  0E00               	movlw	0
  3729  000C5C  6E2E               	movwf	(___flmul@prod+2)^0,c
  3730  000C5E  0E00               	movlw	0
  3731  000C60  6E2F               	movwf	(___flmul@prod+3)^0,c
  3732  000C62  0E00               	movlw	0
  3733  000C64  6E25               	movwf	___flmul@sign^0,c
  3734  000C66  EF4A  F006         	goto	l3893
  3735  000C6A                     l1071:
  3736  000C6A  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  3737  000C6E  0EFF               	movlw	255
  3738  000C70  162C               	andwf	___flmul@prod^0,f,c
  3739  000C72  0EFF               	movlw	255
  3740  000C74  162D               	andwf	(___flmul@prod+1)^0,f,c
  3741  000C76  0E7F               	movlw	127
  3742  000C78  162E               	andwf	(___flmul@prod+2)^0,f,c
  3743  000C7A  0E00               	movlw	0
  3744  000C7C  162F               	andwf	(___flmul@prod+3)^0,f,c
  3745  000C7E  A02B               	btfss	___flmul@bexp^0,0,c
  3746  000C80  EF44  F006         	goto	u3541
  3747  000C84  EF46  F006         	goto	u3540
  3748  000C88                     u3541:
  3749  000C88  EF47  F006         	goto	l3891
  3750  000C8C                     u3540:
  3751  000C8C  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  3752  000C8E                     l3891:
  3753  000C8E  90D8               	bcf	status,0,c
  3754  000C90  302B               	rrcf	___flmul@bexp^0,w,c
  3755  000C92  6E2F               	movwf	(___flmul@prod+3)^0,c
  3756  000C94                     l3893:
  3757  000C94  5025               	movf	___flmul@sign^0,w,c
  3758  000C96  122F               	iorwf	(___flmul@prod+3)^0,f,c
  3759  000C98  C02C  F019         	movff	___flmul@prod,?___flmul
  3760  000C9C  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  3761  000CA0  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  3762  000CA4  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  3763  000CA8                     l1058:
  3764  000CA8  0012               	return		;funcret
  3765  000CAA                     __end_of___flmul:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function ___fldiv *****************
  3769 ;; Defined at:
  3770 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  b               4   49[COMRAM] unsigned char 
  3773 ;;  a               4   53[COMRAM] unsigned char 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  grs             4   68[COMRAM] unsigned long 
  3776 ;;  rem             4   61[COMRAM] unsigned long 
  3777 ;;  new_exp         2   66[COMRAM] short 
  3778 ;;  aexp            1   73[COMRAM] unsigned char 
  3779 ;;  bexp            1   72[COMRAM] unsigned char 
  3780 ;;  sign            1   65[COMRAM] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  4   49[COMRAM] unsigned char 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3790 ;;      Params:         8       0       0       0       0       0       0       0       0
  3791 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3792 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3793 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3794 ;;Total ram usage:       25 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    2
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_appADC
  3801 ;;		_appBat
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text18
  3806  000CAA                     __ptext18:
  3807                           	callstack 0
  3808  000CAA                     ___fldiv:
  3809                           	callstack 26
  3810  000CAA  5035               	movf	(___fldiv@b+3)^0,w,c
  3811  000CAC  0B80               	andlw	128
  3812  000CAE  6E42               	movwf	___fldiv@sign^0,c
  3813  000CB0  5035               	movf	(___fldiv@b+3)^0,w,c
  3814  000CB2  2435               	addwf	(___fldiv@b+3)^0,w,c
  3815  000CB4  6E49               	movwf	___fldiv@bexp^0,c
  3816  000CB6  AE34               	btfss	(___fldiv@b+2)^0,7,c
  3817  000CB8  EF60  F006         	goto	u3131
  3818  000CBC  EF62  F006         	goto	u3130
  3819  000CC0                     u3131:
  3820  000CC0  EF63  F006         	goto	l3637
  3821  000CC4                     u3130:
  3822  000CC4  8049               	bsf	___fldiv@bexp^0,0,c
  3823  000CC6                     l3637:
  3824  000CC6  5049               	movf	___fldiv@bexp^0,w,c
  3825  000CC8  B4D8               	btfsc	status,2,c
  3826  000CCA  EF69  F006         	goto	u3141
  3827  000CCE  EF6B  F006         	goto	u3140
  3828  000CD2                     u3141:
  3829  000CD2  EF80  F006         	goto	l3647
  3830  000CD6                     u3140:
  3831  000CD6  2849               	incf	___fldiv@bexp^0,w,c
  3832  000CD8  A4D8               	btfss	status,2,c
  3833  000CDA  EF71  F006         	goto	u3151
  3834  000CDE  EF73  F006         	goto	u3150
  3835  000CE2                     u3151:
  3836  000CE2  EF7B  F006         	goto	l3643
  3837  000CE6                     u3150:
  3838  000CE6  0E00               	movlw	0
  3839  000CE8  6E32               	movwf	___fldiv@b^0,c
  3840  000CEA  0E00               	movlw	0
  3841  000CEC  6E33               	movwf	(___fldiv@b+1)^0,c
  3842  000CEE  0E00               	movlw	0
  3843  000CF0  6E34               	movwf	(___fldiv@b+2)^0,c
  3844  000CF2  0E00               	movlw	0
  3845  000CF4  6E35               	movwf	(___fldiv@b+3)^0,c
  3846  000CF6                     l3643:
  3847  000CF6  8E34               	bsf	(___fldiv@b+2)^0,7,c
  3848  000CF8  0E00               	movlw	0
  3849  000CFA  6E35               	movwf	(___fldiv@b+3)^0,c
  3850  000CFC  EF88  F006         	goto	l3649
  3851  000D00                     l3647:
  3852  000D00  0E00               	movlw	0
  3853  000D02  6E32               	movwf	___fldiv@b^0,c
  3854  000D04  0E00               	movlw	0
  3855  000D06  6E33               	movwf	(___fldiv@b+1)^0,c
  3856  000D08  0E00               	movlw	0
  3857  000D0A  6E34               	movwf	(___fldiv@b+2)^0,c
  3858  000D0C  0E00               	movlw	0
  3859  000D0E  6E35               	movwf	(___fldiv@b+3)^0,c
  3860  000D10                     l3649:
  3861  000D10  5039               	movf	(___fldiv@a+3)^0,w,c
  3862  000D12  0B80               	andlw	128
  3863  000D14  1A42               	xorwf	___fldiv@sign^0,f,c
  3864  000D16  5039               	movf	(___fldiv@a+3)^0,w,c
  3865  000D18  2439               	addwf	(___fldiv@a+3)^0,w,c
  3866  000D1A  6E4A               	movwf	___fldiv@aexp^0,c
  3867  000D1C  AE38               	btfss	(___fldiv@a+2)^0,7,c
  3868  000D1E  EF93  F006         	goto	u3161
  3869  000D22  EF95  F006         	goto	u3160
  3870  000D26                     u3161:
  3871  000D26  EF96  F006         	goto	l3657
  3872  000D2A                     u3160:
  3873  000D2A  804A               	bsf	___fldiv@aexp^0,0,c
  3874  000D2C                     l3657:
  3875  000D2C  504A               	movf	___fldiv@aexp^0,w,c
  3876  000D2E  B4D8               	btfsc	status,2,c
  3877  000D30  EF9C  F006         	goto	u3171
  3878  000D34  EF9E  F006         	goto	u3170
  3879  000D38                     u3171:
  3880  000D38  EFB3  F006         	goto	l3667
  3881  000D3C                     u3170:
  3882  000D3C  284A               	incf	___fldiv@aexp^0,w,c
  3883  000D3E  A4D8               	btfss	status,2,c
  3884  000D40  EFA4  F006         	goto	u3181
  3885  000D44  EFA6  F006         	goto	u3180
  3886  000D48                     u3181:
  3887  000D48  EFAE  F006         	goto	l3663
  3888  000D4C                     u3180:
  3889  000D4C  0E00               	movlw	0
  3890  000D4E  6E36               	movwf	___fldiv@a^0,c
  3891  000D50  0E00               	movlw	0
  3892  000D52  6E37               	movwf	(___fldiv@a+1)^0,c
  3893  000D54  0E00               	movlw	0
  3894  000D56  6E38               	movwf	(___fldiv@a+2)^0,c
  3895  000D58  0E00               	movlw	0
  3896  000D5A  6E39               	movwf	(___fldiv@a+3)^0,c
  3897  000D5C                     l3663:
  3898  000D5C  8E38               	bsf	(___fldiv@a+2)^0,7,c
  3899  000D5E  0E00               	movlw	0
  3900  000D60  6E39               	movwf	(___fldiv@a+3)^0,c
  3901  000D62  EFBB  F006         	goto	l3669
  3902  000D66                     l3667:
  3903  000D66  0E00               	movlw	0
  3904  000D68  6E36               	movwf	___fldiv@a^0,c
  3905  000D6A  0E00               	movlw	0
  3906  000D6C  6E37               	movwf	(___fldiv@a+1)^0,c
  3907  000D6E  0E00               	movlw	0
  3908  000D70  6E38               	movwf	(___fldiv@a+2)^0,c
  3909  000D72  0E00               	movlw	0
  3910  000D74  6E39               	movwf	(___fldiv@a+3)^0,c
  3911  000D76                     l3669:
  3912  000D76  5036               	movf	___fldiv@a^0,w,c
  3913  000D78  1037               	iorwf	(___fldiv@a+1)^0,w,c
  3914  000D7A  1038               	iorwf	(___fldiv@a+2)^0,w,c
  3915  000D7C  1039               	iorwf	(___fldiv@a+3)^0,w,c
  3916  000D7E  A4D8               	btfss	status,2,c
  3917  000D80  EFC4  F006         	goto	u3191
  3918  000D84  EFC6  F006         	goto	u3190
  3919  000D88                     u3191:
  3920  000D88  EFDE  F006         	goto	l3681
  3921  000D8C                     u3190:
  3922  000D8C  0E00               	movlw	0
  3923  000D8E  6E32               	movwf	___fldiv@b^0,c
  3924  000D90  0E00               	movlw	0
  3925  000D92  6E33               	movwf	(___fldiv@b+1)^0,c
  3926  000D94  0E00               	movlw	0
  3927  000D96  6E34               	movwf	(___fldiv@b+2)^0,c
  3928  000D98  0E00               	movlw	0
  3929  000D9A  6E35               	movwf	(___fldiv@b+3)^0,c
  3930  000D9C  0E80               	movlw	128
  3931  000D9E  1234               	iorwf	(___fldiv@b+2)^0,f,c
  3932  000DA0  0E7F               	movlw	127
  3933  000DA2  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3934  000DA4                     l3675:
  3935  000DA4  5042               	movf	___fldiv@sign^0,w,c
  3936  000DA6  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3937  000DA8  C032  F032         	movff	___fldiv@b,?___fldiv
  3938  000DAC  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  3939  000DB0  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  3940  000DB4  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  3941  000DB8  EF21  F008         	goto	l1022
  3942  000DBC                     l3681:
  3943  000DBC  5049               	movf	___fldiv@bexp^0,w,c
  3944  000DBE  A4D8               	btfss	status,2,c
  3945  000DC0  EFE4  F006         	goto	u3201
  3946  000DC4  EFE6  F006         	goto	u3200
  3947  000DC8                     u3201:
  3948  000DC8  EFF0  F006         	goto	l3689
  3949  000DCC                     u3200:
  3950  000DCC  0E00               	movlw	0
  3951  000DCE  6E32               	movwf	?___fldiv^0,c
  3952  000DD0  0E00               	movlw	0
  3953  000DD2  6E33               	movwf	(?___fldiv+1)^0,c
  3954  000DD4  0E00               	movlw	0
  3955  000DD6  6E34               	movwf	(?___fldiv+2)^0,c
  3956  000DD8  0E00               	movlw	0
  3957  000DDA  6E35               	movwf	(?___fldiv+3)^0,c
  3958  000DDC  EF21  F008         	goto	l1022
  3959  000DE0                     l3689:
  3960  000DE0  504A               	movf	___fldiv@aexp^0,w,c
  3961  000DE2  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  3962  000DE6  6A3B               	clrf	(??___fldiv+1)^0,c
  3963  000DE8  5E3A               	subwf	??___fldiv^0,f,c
  3964  000DEA  0E00               	movlw	0
  3965  000DEC  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  3966  000DEE  0E7F               	movlw	127
  3967  000DF0  243A               	addwf	??___fldiv^0,w,c
  3968  000DF2  6E43               	movwf	___fldiv@new_exp^0,c
  3969  000DF4  0E00               	movlw	0
  3970  000DF6  203B               	addwfc	(??___fldiv+1)^0,w,c
  3971  000DF8  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  3972  000DFA  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  3973  000DFE  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  3974  000E02  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  3975  000E06  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  3976  000E0A  0E00               	movlw	0
  3977  000E0C  6E32               	movwf	___fldiv@b^0,c
  3978  000E0E  0E00               	movlw	0
  3979  000E10  6E33               	movwf	(___fldiv@b+1)^0,c
  3980  000E12  0E00               	movlw	0
  3981  000E14  6E34               	movwf	(___fldiv@b+2)^0,c
  3982  000E16  0E00               	movlw	0
  3983  000E18  6E35               	movwf	(___fldiv@b+3)^0,c
  3984  000E1A  0E00               	movlw	0
  3985  000E1C  6E45               	movwf	___fldiv@grs^0,c
  3986  000E1E  0E00               	movlw	0
  3987  000E20  6E46               	movwf	(___fldiv@grs+1)^0,c
  3988  000E22  0E00               	movlw	0
  3989  000E24  6E47               	movwf	(___fldiv@grs+2)^0,c
  3990  000E26  0E00               	movlw	0
  3991  000E28  6E48               	movwf	(___fldiv@grs+3)^0,c
  3992  000E2A  0E00               	movlw	0
  3993  000E2C  6E4A               	movwf	___fldiv@aexp^0,c
  3994  000E2E  EF51  F007         	goto	l1024
  3995  000E32                     l3699:
  3996  000E32  504A               	movf	___fldiv@aexp^0,w,c
  3997  000E34  B4D8               	btfsc	status,2,c
  3998  000E36  EF1F  F007         	goto	u3211
  3999  000E3A  EF21  F007         	goto	u3210
  4000  000E3E                     u3211:
  4001  000E3E  EF38  F007         	goto	l3707
  4002  000E42                     u3210:
  4003  000E42  90D8               	bcf	status,0,c
  4004  000E44  363E               	rlcf	___fldiv@rem^0,f,c
  4005  000E46  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  4006  000E48  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  4007  000E4A  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  4008  000E4C  90D8               	bcf	status,0,c
  4009  000E4E  3632               	rlcf	___fldiv@b^0,f,c
  4010  000E50  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4011  000E52  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4012  000E54  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4013  000E56  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4014  000E58  EF30  F007         	goto	u3221
  4015  000E5C  EF32  F007         	goto	u3220
  4016  000E60                     u3221:
  4017  000E60  EF33  F007         	goto	l1027
  4018  000E64                     u3220:
  4019  000E64  8032               	bsf	___fldiv@b^0,0,c
  4020  000E66                     l1027:
  4021  000E66  90D8               	bcf	status,0,c
  4022  000E68  3645               	rlcf	___fldiv@grs^0,f,c
  4023  000E6A  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4024  000E6C  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4025  000E6E  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4026  000E70                     l3707:
  4027  000E70  5036               	movf	___fldiv@a^0,w,c
  4028  000E72  5C3E               	subwf	___fldiv@rem^0,w,c
  4029  000E74  5037               	movf	(___fldiv@a+1)^0,w,c
  4030  000E76  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  4031  000E78  5038               	movf	(___fldiv@a+2)^0,w,c
  4032  000E7A  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  4033  000E7C  5039               	movf	(___fldiv@a+3)^0,w,c
  4034  000E7E  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  4035  000E80  A0D8               	btfss	status,0,c
  4036  000E82  EF45  F007         	goto	u3231
  4037  000E86  EF47  F007         	goto	u3230
  4038  000E8A                     u3231:
  4039  000E8A  EF50  F007         	goto	l3713
  4040  000E8E                     u3230:
  4041  000E8E  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  4042  000E90  5036               	movf	___fldiv@a^0,w,c
  4043  000E92  5E3E               	subwf	___fldiv@rem^0,f,c
  4044  000E94  5037               	movf	(___fldiv@a+1)^0,w,c
  4045  000E96  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  4046  000E98  5038               	movf	(___fldiv@a+2)^0,w,c
  4047  000E9A  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  4048  000E9C  5039               	movf	(___fldiv@a+3)^0,w,c
  4049  000E9E  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  4050  000EA0                     l3713:
  4051  000EA0  2A4A               	incf	___fldiv@aexp^0,f,c
  4052  000EA2                     l1024:
  4053  000EA2  0E19               	movlw	25
  4054  000EA4  644A               	cpfsgt	___fldiv@aexp^0,c
  4055  000EA6  EF57  F007         	goto	u3241
  4056  000EAA  EF59  F007         	goto	u3240
  4057  000EAE                     u3241:
  4058  000EAE  EF19  F007         	goto	l3699
  4059  000EB2                     u3240:
  4060  000EB2  503E               	movf	___fldiv@rem^0,w,c
  4061  000EB4  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  4062  000EB6  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  4063  000EB8  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  4064  000EBA  B4D8               	btfsc	status,2,c
  4065  000EBC  EF62  F007         	goto	u3251
  4066  000EC0  EF64  F007         	goto	u3250
  4067  000EC4                     u3251:
  4068  000EC4  EF7C  F007         	goto	l3725
  4069  000EC8                     u3250:
  4070  000EC8  8045               	bsf	___fldiv@grs^0,0,c
  4071  000ECA  EF7C  F007         	goto	l3725
  4072  000ECE                     l3719:
  4073  000ECE  90D8               	bcf	status,0,c
  4074  000ED0  3632               	rlcf	___fldiv@b^0,f,c
  4075  000ED2  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4076  000ED4  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4077  000ED6  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4078  000ED8  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4079  000EDA  EF71  F007         	goto	u3261
  4080  000EDE  EF73  F007         	goto	u3260
  4081  000EE2                     u3261:
  4082  000EE2  EF74  F007         	goto	l1033
  4083  000EE6                     u3260:
  4084  000EE6  8032               	bsf	___fldiv@b^0,0,c
  4085  000EE8                     l1033:
  4086  000EE8  90D8               	bcf	status,0,c
  4087  000EEA  3645               	rlcf	___fldiv@grs^0,f,c
  4088  000EEC  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4089  000EEE  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4090  000EF0  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4091  000EF2  0643               	decf	___fldiv@new_exp^0,f,c
  4092  000EF4  A0D8               	btfss	status,0,c
  4093  000EF6  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  4094  000EF8                     l3725:
  4095  000EF8  AE34               	btfss	(___fldiv@b+2)^0,7,c
  4096  000EFA  EF81  F007         	goto	u3271
  4097  000EFE  EF83  F007         	goto	u3270
  4098  000F02                     u3271:
  4099  000F02  EF67  F007         	goto	l3719
  4100  000F06                     u3270:
  4101  000F06  0E00               	movlw	0
  4102  000F08  6E4A               	movwf	___fldiv@aexp^0,c
  4103  000F0A  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4104  000F0C  EF8A  F007         	goto	u3281
  4105  000F10  EF8C  F007         	goto	u3280
  4106  000F14                     u3281:
  4107  000F14  EFB0  F007         	goto	l1035
  4108  000F18                     u3280:
  4109  000F18  0EFF               	movlw	255
  4110  000F1A  1445               	andwf	___fldiv@grs^0,w,c
  4111  000F1C  6E3A               	movwf	??___fldiv^0,c
  4112  000F1E  0EFF               	movlw	255
  4113  000F20  1446               	andwf	(___fldiv@grs+1)^0,w,c
  4114  000F22  6E3B               	movwf	(??___fldiv+1)^0,c
  4115  000F24  0EFF               	movlw	255
  4116  000F26  1447               	andwf	(___fldiv@grs+2)^0,w,c
  4117  000F28  6E3C               	movwf	(??___fldiv+2)^0,c
  4118  000F2A  0E7F               	movlw	127
  4119  000F2C  1448               	andwf	(___fldiv@grs+3)^0,w,c
  4120  000F2E  6E3D               	movwf	(??___fldiv+3)^0,c
  4121  000F30  503A               	movf	??___fldiv^0,w,c
  4122  000F32  103B               	iorwf	(??___fldiv+1)^0,w,c
  4123  000F34  103C               	iorwf	(??___fldiv+2)^0,w,c
  4124  000F36  103D               	iorwf	(??___fldiv+3)^0,w,c
  4125  000F38  B4D8               	btfsc	status,2,c
  4126  000F3A  EFA1  F007         	goto	u3291
  4127  000F3E  EFA3  F007         	goto	u3290
  4128  000F42                     u3291:
  4129  000F42  EFA7  F007         	goto	l1036
  4130  000F46                     u3290:
  4131  000F46                     l3733:
  4132  000F46  0E01               	movlw	1
  4133  000F48  6E4A               	movwf	___fldiv@aexp^0,c
  4134  000F4A  EFB0  F007         	goto	l1035
  4135  000F4E                     l1036:
  4136  000F4E  A032               	btfss	___fldiv@b^0,0,c
  4137  000F50  EFAC  F007         	goto	u3301
  4138  000F54  EFAE  F007         	goto	u3300
  4139  000F58                     u3301:
  4140  000F58  EFB0  F007         	goto	l1035
  4141  000F5C                     u3300:
  4142  000F5C  EFA3  F007         	goto	l3733
  4143  000F60                     l1035:
  4144  000F60  504A               	movf	___fldiv@aexp^0,w,c
  4145  000F62  B4D8               	btfsc	status,2,c
  4146  000F64  EFB6  F007         	goto	u3311
  4147  000F68  EFB8  F007         	goto	u3310
  4148  000F6C                     u3311:
  4149  000F6C  EFDC  F007         	goto	l3745
  4150  000F70                     u3310:
  4151  000F70  0E01               	movlw	1
  4152  000F72  2632               	addwf	___fldiv@b^0,f,c
  4153  000F74  0E00               	movlw	0
  4154  000F76  2233               	addwfc	(___fldiv@b+1)^0,f,c
  4155  000F78  2234               	addwfc	(___fldiv@b+2)^0,f,c
  4156  000F7A  2235               	addwfc	(___fldiv@b+3)^0,f,c
  4157  000F7C  A035               	btfss	(___fldiv@b+3)^0,0,c
  4158  000F7E  EFC3  F007         	goto	u3321
  4159  000F82  EFC5  F007         	goto	u3320
  4160  000F86                     u3321:
  4161  000F86  EFDC  F007         	goto	l3745
  4162  000F8A                     u3320:
  4163  000F8A  C032  F03A         	movff	___fldiv@b,??___fldiv
  4164  000F8E  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  4165  000F92  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  4166  000F96  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  4167  000F9A  343D               	rlcf	(??___fldiv+3)^0,w,c
  4168  000F9C  323D               	rrcf	(??___fldiv+3)^0,f,c
  4169  000F9E  323C               	rrcf	(??___fldiv+2)^0,f,c
  4170  000FA0  323B               	rrcf	(??___fldiv+1)^0,f,c
  4171  000FA2  323A               	rrcf	??___fldiv^0,f,c
  4172  000FA4  C03A  F032         	movff	??___fldiv,___fldiv@b
  4173  000FA8  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  4174  000FAC  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  4175  000FB0  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  4176  000FB4  4A43               	infsnz	___fldiv@new_exp^0,f,c
  4177  000FB6  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  4178  000FB8                     l3745:
  4179  000FB8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4180  000FBA  EFE7  F007         	goto	u3331
  4181  000FBE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4182  000FC0  E108               	bnz	u3330
  4183  000FC2  2843               	incf	___fldiv@new_exp^0,w,c
  4184  000FC4  A0D8               	btfss	status,0,c
  4185  000FC6  EFE7  F007         	goto	u3331
  4186  000FCA  EFE9  F007         	goto	u3330
  4187  000FCE                     u3331:
  4188  000FCE  EFF4  F007         	goto	l3749
  4189  000FD2                     u3330:
  4190  000FD2  0E00               	movlw	0
  4191  000FD4  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4192  000FD6  6843               	setf	___fldiv@new_exp^0,c
  4193  000FD8  0E00               	movlw	0
  4194  000FDA  6E32               	movwf	___fldiv@b^0,c
  4195  000FDC  0E00               	movlw	0
  4196  000FDE  6E33               	movwf	(___fldiv@b+1)^0,c
  4197  000FE0  0E00               	movlw	0
  4198  000FE2  6E34               	movwf	(___fldiv@b+2)^0,c
  4199  000FE4  0E00               	movlw	0
  4200  000FE6  6E35               	movwf	(___fldiv@b+3)^0,c
  4201  000FE8                     l3749:
  4202  000FE8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4203  000FEA  EF01  F008         	goto	u3340
  4204  000FEE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4205  000FF0  E106               	bnz	u3341
  4206  000FF2  0443               	decf	___fldiv@new_exp^0,w,c
  4207  000FF4  B0D8               	btfsc	status,0,c
  4208  000FF6  EFFF  F007         	goto	u3341
  4209  000FFA  EF01  F008         	goto	u3340
  4210  000FFE                     u3341:
  4211  000FFE  EF0F  F008         	goto	l3753
  4212  001002                     u3340:
  4213  001002  0E00               	movlw	0
  4214  001004  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4215  001006  0E00               	movlw	0
  4216  001008  6E43               	movwf	___fldiv@new_exp^0,c
  4217  00100A  0E00               	movlw	0
  4218  00100C  6E32               	movwf	___fldiv@b^0,c
  4219  00100E  0E00               	movlw	0
  4220  001010  6E33               	movwf	(___fldiv@b+1)^0,c
  4221  001012  0E00               	movlw	0
  4222  001014  6E34               	movwf	(___fldiv@b+2)^0,c
  4223  001016  0E00               	movlw	0
  4224  001018  6E35               	movwf	(___fldiv@b+3)^0,c
  4225  00101A  0E00               	movlw	0
  4226  00101C  6E42               	movwf	___fldiv@sign^0,c
  4227  00101E                     l3753:
  4228  00101E  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  4229  001022  A049               	btfss	___fldiv@bexp^0,0,c
  4230  001024  EF16  F008         	goto	u3351
  4231  001028  EF18  F008         	goto	u3350
  4232  00102C                     u3351:
  4233  00102C  EF1B  F008         	goto	l3759
  4234  001030                     u3350:
  4235  001030  8E34               	bsf	(___fldiv@b+2)^0,7,c
  4236  001032  EF1C  F008         	goto	l3761
  4237  001036                     l3759:
  4238  001036  9E34               	bcf	(___fldiv@b+2)^0,7,c
  4239  001038                     l3761:
  4240  001038  90D8               	bcf	status,0,c
  4241  00103A  3049               	rrcf	___fldiv@bexp^0,w,c
  4242  00103C  6E35               	movwf	(___fldiv@b+3)^0,c
  4243  00103E  EFD2  F006         	goto	l3675
  4244  001042                     l1022:
  4245  001042  0012               	return		;funcret
  4246  001044                     __end_of___fldiv:
  4247                           	callstack 0
  4248                           
  4249 ;; *************** function ___awmod *****************
  4250 ;; Defined at:
  4251 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  dividend        2    2[BANK0 ] int 
  4254 ;;  divisor         2    4[BANK0 ] int 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  sign            1    7[BANK0 ] unsigned char 
  4257 ;;  counter         1    6[BANK0 ] unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2    2[BANK0 ] int 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4267 ;;      Params:         0       4       0       0       0       0       0       0       0
  4268 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4270 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4271 ;;Total ram usage:        6 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    2
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_appADC
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text19
  4282  002DF2                     __ptext19:
  4283                           	callstack 0
  4284  002DF2                     ___awmod:
  4285                           	callstack 26
  4286  002DF2  0E00               	movlw	0
  4287  002DF4  0100               	movlb	0	; () banked
  4288  002DF6  6F9B               	movwf	___awmod@sign& (0+255),b
  4289  002DF8                     
  4290                           ; BSR set to: 0
  4291  002DF8  BF97               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4292  002DFA  EF03  F017         	goto	u4120
  4293  002DFE  EF01  F017         	goto	u4121
  4294  002E02                     u4121:
  4295  002E02  EF09  F017         	goto	l4597
  4296  002E06                     u4120:
  4297  002E06                     
  4298                           ; BSR set to: 0
  4299  002E06  6D96               	negf	___awmod@dividend& (0+255),b
  4300  002E08  1F97               	comf	(___awmod@dividend+1)& (0+255),f,b
  4301  002E0A  B0D8               	btfsc	status,0,c
  4302  002E0C  2B97               	incf	(___awmod@dividend+1)& (0+255),f,b
  4303  002E0E                     
  4304                           ; BSR set to: 0
  4305  002E0E  0E01               	movlw	1
  4306  002E10  6F9B               	movwf	___awmod@sign& (0+255),b
  4307  002E12                     l4597:
  4308                           
  4309                           ; BSR set to: 0
  4310  002E12  BF99               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4311  002E14  EF10  F017         	goto	u4130
  4312  002E18  EF0E  F017         	goto	u4131
  4313  002E1C                     u4131:
  4314  002E1C  EF14  F017         	goto	l4601
  4315  002E20                     u4130:
  4316  002E20                     
  4317                           ; BSR set to: 0
  4318  002E20  6D98               	negf	___awmod@divisor& (0+255),b
  4319  002E22  1F99               	comf	(___awmod@divisor+1)& (0+255),f,b
  4320  002E24  B0D8               	btfsc	status,0,c
  4321  002E26  2B99               	incf	(___awmod@divisor+1)& (0+255),f,b
  4322  002E28                     l4601:
  4323                           
  4324                           ; BSR set to: 0
  4325  002E28  5198               	movf	___awmod@divisor& (0+255),w,b
  4326  002E2A  1199               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4327  002E2C  B4D8               	btfsc	status,2,c
  4328  002E2E  EF1B  F017         	goto	u4141
  4329  002E32  EF1D  F017         	goto	u4140
  4330  002E36                     u4141:
  4331  002E36  EF41  F017         	goto	l4617
  4332  002E3A                     u4140:
  4333  002E3A                     
  4334                           ; BSR set to: 0
  4335  002E3A  0E01               	movlw	1
  4336  002E3C  6F9A               	movwf	___awmod@counter& (0+255),b
  4337  002E3E  EF25  F017         	goto	l4607
  4338  002E42                     l4605:
  4339                           
  4340                           ; BSR set to: 0
  4341  002E42  90D8               	bcf	status,0,c
  4342  002E44  3798               	rlcf	___awmod@divisor& (0+255),f,b
  4343  002E46  3799               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4344  002E48  2B9A               	incf	___awmod@counter& (0+255),f,b
  4345  002E4A                     l4607:
  4346                           
  4347                           ; BSR set to: 0
  4348  002E4A  AF99               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4349  002E4C  EF2A  F017         	goto	u4151
  4350  002E50  EF2C  F017         	goto	u4150
  4351  002E54                     u4151:
  4352  002E54  EF21  F017         	goto	l4605
  4353  002E58                     u4150:
  4354  002E58                     l4609:
  4355                           
  4356                           ; BSR set to: 0
  4357  002E58  5198               	movf	___awmod@divisor& (0+255),w,b
  4358  002E5A  5D96               	subwf	___awmod@dividend& (0+255),w,b
  4359  002E5C  5199               	movf	(___awmod@divisor+1)& (0+255),w,b
  4360  002E5E  5997               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4361  002E60  A0D8               	btfss	status,0,c
  4362  002E62  EF35  F017         	goto	u4161
  4363  002E66  EF37  F017         	goto	u4160
  4364  002E6A                     u4161:
  4365  002E6A  EF3B  F017         	goto	l4613
  4366  002E6E                     u4160:
  4367  002E6E                     
  4368                           ; BSR set to: 0
  4369  002E6E  5198               	movf	___awmod@divisor& (0+255),w,b
  4370  002E70  5F96               	subwf	___awmod@dividend& (0+255),f,b
  4371  002E72  5199               	movf	(___awmod@divisor+1)& (0+255),w,b
  4372  002E74  5B97               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4373  002E76                     l4613:
  4374                           
  4375                           ; BSR set to: 0
  4376  002E76  90D8               	bcf	status,0,c
  4377  002E78  3399               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4378  002E7A  3398               	rrcf	___awmod@divisor& (0+255),f,b
  4379  002E7C                     
  4380                           ; BSR set to: 0
  4381  002E7C  2F9A               	decfsz	___awmod@counter& (0+255),f,b
  4382  002E7E  EF2C  F017         	goto	l4609
  4383  002E82                     l4617:
  4384                           
  4385                           ; BSR set to: 0
  4386  002E82  519B               	movf	___awmod@sign& (0+255),w,b
  4387  002E84  B4D8               	btfsc	status,2,c
  4388  002E86  EF47  F017         	goto	u4171
  4389  002E8A  EF49  F017         	goto	u4170
  4390  002E8E                     u4171:
  4391  002E8E  EF4D  F017         	goto	l4621
  4392  002E92                     u4170:
  4393  002E92                     
  4394                           ; BSR set to: 0
  4395  002E92  6D96               	negf	___awmod@dividend& (0+255),b
  4396  002E94  1F97               	comf	(___awmod@dividend+1)& (0+255),f,b
  4397  002E96  B0D8               	btfsc	status,0,c
  4398  002E98  2B97               	incf	(___awmod@dividend+1)& (0+255),f,b
  4399  002E9A                     l4621:
  4400                           
  4401                           ; BSR set to: 0
  4402  002E9A  C096  F096         	movff	___awmod@dividend,?___awmod
  4403  002E9E  C097  F097         	movff	___awmod@dividend+1,?___awmod+1
  4404  002EA2                     
  4405                           ; BSR set to: 0
  4406  002EA2  0012               	return		;funcret
  4407  002EA4                     __end_of___awmod:
  4408                           	callstack 0
  4409                           
  4410 ;; *************** function _appInit *****************
  4411 ;; Defined at:
  4412 ;;		line 12 in file "app.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4426 ;;      Params:         0       0       0       0       0       0       0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4429 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    5
  4433 ;; This function calls:
  4434 ;;		_adcInit
  4435 ;;		_appCounterInit
  4436 ;;		_appISRConfig
  4437 ;;		_appLCD_Init
  4438 ;;		_appTimerInit
  4439 ;;		_servoInit
  4440 ;;		_setServo
  4441 ;;		_uart_Init
  4442 ;; This function is called by:
  4443 ;;		_main
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text20
  4448  003584                     __ptext20:
  4449                           	callstack 0
  4450  003584                     _appInit:
  4451                           	callstack 25
  4452  003584                     
  4453                           ;app.c: 14:     appISRConfig();
  4454  003584  EC25  F01C         	call	_appISRConfig	;wreg free
  4455  003588                     
  4456                           ;app.c: 15:     appLCD_Init();
  4457  003588  EC8F  F018         	call	_appLCD_Init	;wreg free
  4458  00358C                     
  4459                           ;app.c: 16:     adcInit(2);
  4460  00358C  0E02               	movlw	2
  4461  00358E  EC9D  F01A         	call	_adcInit
  4462  003592                     
  4463                           ;app.c: 17:     appTimerInit();
  4464  003592  ECB8  F01B         	call	_appTimerInit	;wreg free
  4465  003596                     
  4466                           ;app.c: 18:     appCounterInit(0);
  4467  003596  0E00               	movlw	0
  4468  003598  6E08               	movwf	(appCounterInit@reload+1)^0,c
  4469  00359A  0E00               	movlw	0
  4470  00359C  6E07               	movwf	appCounterInit@reload^0,c
  4471  00359E  EC20  F01C         	call	_appCounterInit	;wreg free
  4472  0035A2                     
  4473                           ;app.c: 19:     servoInit();
  4474  0035A2  EC04  F01C         	call	_servoInit	;wreg free
  4475  0035A6                     
  4476                           ;app.c: 20:     uart_Init(9600);
  4477  0035A6  0E80               	movlw	128
  4478  0035A8  6E14               	movwf	uart_Init@baud^0,c
  4479  0035AA  0E25               	movlw	37
  4480  0035AC  6E15               	movwf	(uart_Init@baud+1)^0,c
  4481  0035AE  0E00               	movlw	0
  4482  0035B0  6E16               	movwf	(uart_Init@baud+2)^0,c
  4483  0035B2  0E00               	movlw	0
  4484  0035B4  6E17               	movwf	(uart_Init@baud+3)^0,c
  4485  0035B6  ECD5  F019         	call	_uart_Init	;wreg free
  4486  0035BA                     
  4487                           ;app.c: 21:     setServo(33,10,0);
  4488  0035BA  0E0A               	movlw	10
  4489  0035BC  6E0B               	movwf	setServo@pulsos^0,c
  4490  0035BE  0E00               	movlw	0
  4491  0035C0  6E0C               	movwf	setServo@pin^0,c
  4492  0035C2  0E21               	movlw	33
  4493  0035C4  ECCF  F01B         	call	_setServo
  4494  0035C8  0012               	return		;funcret
  4495  0035CA                     __end_of_appInit:
  4496                           	callstack 0
  4497                           
  4498 ;; *************** function _uart_Init *****************
  4499 ;; Defined at:
  4500 ;;		line 18 in file "UART.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  baud            4   19[COMRAM] unsigned long 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;		None
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  1    wreg      void 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4514 ;;      Params:         4       0       0       0       0       0       0       0       0
  4515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4517 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4518 ;;Total ram usage:        4 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; Hardware stack levels required when called:    3
  4521 ;; This function calls:
  4522 ;;		___lldiv
  4523 ;; This function is called by:
  4524 ;;		_appInit
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text21
  4529  0033AA                     __ptext21:
  4530                           	callstack 0
  4531  0033AA                     _uart_Init:
  4532                           	callstack 26
  4533  0033AA                     
  4534                           ;UART.c: 18: void uart_Init(uint32_t baud);UART.c: 19: {;UART.c: 20:     TRISCbits.RC6 =
      +                           0;
  4535  0033AA  9C94               	bcf	148,6,c	;volatile
  4536                           
  4537                           ;UART.c: 21:     TRISCbits.RC7 = 1;
  4538  0033AC  8E94               	bsf	148,7,c	;volatile
  4539                           
  4540                           ;UART.c: 23:     BAUDCONbits.BRG16 = 0;
  4541  0033AE  96B8               	bcf	184,3,c	;volatile
  4542  0033B0                     
  4543                           ;UART.c: 24:     SPBRG = (uint8_t)(((12000000/baud)/64)-1);
  4544  0033B0  0E00               	movlw	0
  4545  0033B2  6E07               	movwf	___lldiv@dividend^0,c
  4546  0033B4  0E1B               	movlw	27
  4547  0033B6  6E08               	movwf	(___lldiv@dividend+1)^0,c
  4548  0033B8  0EB7               	movlw	183
  4549  0033BA  6E09               	movwf	(___lldiv@dividend+2)^0,c
  4550  0033BC  0E00               	movlw	0
  4551  0033BE  6E0A               	movwf	(___lldiv@dividend+3)^0,c
  4552  0033C0  C014  F00B         	movff	uart_Init@baud,___lldiv@divisor
  4553  0033C4  C015  F00C         	movff	uart_Init@baud+1,___lldiv@divisor+1
  4554  0033C8  C016  F00D         	movff	uart_Init@baud+2,___lldiv@divisor+2
  4555  0033CC  C017  F00E         	movff	uart_Init@baud+3,___lldiv@divisor+3
  4556  0033D0  EC52  F017         	call	___lldiv	;wreg free
  4557  0033D4  0E07               	movlw	7
  4558  0033D6  EFF2  F019         	goto	u3810
  4559  0033DA                     u3815:
  4560  0033DA  90D8               	bcf	status,0,c
  4561  0033DC  320A               	rrcf	(?___lldiv+3)^0,f,c
  4562  0033DE  3209               	rrcf	(?___lldiv+2)^0,f,c
  4563  0033E0  3208               	rrcf	(?___lldiv+1)^0,f,c
  4564  0033E2  3207               	rrcf	?___lldiv^0,f,c
  4565  0033E4                     u3810:
  4566  0033E4  2EE8               	decfsz	wreg,f,c
  4567  0033E6  EFED  F019         	goto	u3815
  4568  0033EA  0407               	decf	?___lldiv^0,w,c
  4569  0033EC  6EAF               	movwf	175,c	;volatile
  4570  0033EE                     
  4571                           ;UART.c: 26:     TXSTAbits.BRGH = 0;
  4572  0033EE  94AC               	bcf	172,2,c	;volatile
  4573  0033F0                     
  4574                           ;UART.c: 27:     TXSTAbits.SYNC = 0;
  4575  0033F0  98AC               	bcf	172,4,c	;volatile
  4576  0033F2                     
  4577                           ;UART.c: 28:     TXSTAbits.TX9 = 0;
  4578  0033F2  9CAC               	bcf	172,6,c	;volatile
  4579  0033F4                     
  4580                           ;UART.c: 29:     TXSTAbits.TXEN = 1;
  4581  0033F4  8AAC               	bsf	172,5,c	;volatile
  4582  0033F6                     
  4583                           ;UART.c: 31:     RCSTAbits.SPEN = 1;
  4584  0033F6  8EAB               	bsf	171,7,c	;volatile
  4585  0033F8                     
  4586                           ;UART.c: 32:     RCSTAbits.RC9 = 0;
  4587  0033F8  9CAB               	bcf	171,6,c	;volatile
  4588  0033FA                     
  4589                           ;UART.c: 33:     RCSTAbits.CREN = 1;
  4590  0033FA  88AB               	bsf	171,4,c	;volatile
  4591  0033FC                     
  4592                           ;UART.c: 35:     PIE1bits.RCIE = 1;
  4593  0033FC  8A9D               	bsf	157,5,c	;volatile
  4594  0033FE                     
  4595                           ;UART.c: 36:     IPR1bits.RCIP =1;
  4596  0033FE  8A9F               	bsf	159,5,c	;volatile
  4597  003400  0012               	return		;funcret
  4598  003402                     __end_of_uart_Init:
  4599                           	callstack 0
  4600                           
  4601 ;; *************** function ___lldiv *****************
  4602 ;; Defined at:
  4603 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  dividend        4    6[COMRAM] unsigned long 
  4606 ;;  divisor         4   10[COMRAM] unsigned long 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  quotient        4   14[COMRAM] unsigned long 
  4609 ;;  counter         1   18[COMRAM] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  4    6[COMRAM] unsigned long 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4619 ;;      Params:         8       0       0       0       0       0       0       0       0
  4620 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4622 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4623 ;;Total ram usage:       13 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    2
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_uart_Init
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text22
  4634  002EA4                     __ptext22:
  4635                           	callstack 0
  4636  002EA4                     ___lldiv:
  4637                           	callstack 26
  4638  002EA4  0E00               	movlw	0
  4639  002EA6  6E0F               	movwf	___lldiv@quotient^0,c
  4640  002EA8  0E00               	movlw	0
  4641  002EAA  6E10               	movwf	(___lldiv@quotient+1)^0,c
  4642  002EAC  0E00               	movlw	0
  4643  002EAE  6E11               	movwf	(___lldiv@quotient+2)^0,c
  4644  002EB0  0E00               	movlw	0
  4645  002EB2  6E12               	movwf	(___lldiv@quotient+3)^0,c
  4646  002EB4  500B               	movf	___lldiv@divisor^0,w,c
  4647  002EB6  100C               	iorwf	(___lldiv@divisor+1)^0,w,c
  4648  002EB8  100D               	iorwf	(___lldiv@divisor+2)^0,w,c
  4649  002EBA  100E               	iorwf	(___lldiv@divisor+3)^0,w,c
  4650  002EBC  B4D8               	btfsc	status,2,c
  4651  002EBE  EF63  F017         	goto	u3101
  4652  002EC2  EF65  F017         	goto	u3100
  4653  002EC6                     u3101:
  4654  002EC6  EF9B  F017         	goto	l467
  4655  002ECA                     u3100:
  4656  002ECA  0E01               	movlw	1
  4657  002ECC  6E13               	movwf	___lldiv@counter^0,c
  4658  002ECE  EF6F  F017         	goto	l3617
  4659  002ED2                     l3615:
  4660  002ED2  90D8               	bcf	status,0,c
  4661  002ED4  360B               	rlcf	___lldiv@divisor^0,f,c
  4662  002ED6  360C               	rlcf	(___lldiv@divisor+1)^0,f,c
  4663  002ED8  360D               	rlcf	(___lldiv@divisor+2)^0,f,c
  4664  002EDA  360E               	rlcf	(___lldiv@divisor+3)^0,f,c
  4665  002EDC  2A13               	incf	___lldiv@counter^0,f,c
  4666  002EDE                     l3617:
  4667  002EDE  AE0E               	btfss	(___lldiv@divisor+3)^0,7,c
  4668  002EE0  EF74  F017         	goto	u3111
  4669  002EE4  EF76  F017         	goto	u3110
  4670  002EE8                     u3111:
  4671  002EE8  EF69  F017         	goto	l3615
  4672  002EEC                     u3110:
  4673  002EEC                     l3619:
  4674  002EEC  90D8               	bcf	status,0,c
  4675  002EEE  360F               	rlcf	___lldiv@quotient^0,f,c
  4676  002EF0  3610               	rlcf	(___lldiv@quotient+1)^0,f,c
  4677  002EF2  3611               	rlcf	(___lldiv@quotient+2)^0,f,c
  4678  002EF4  3612               	rlcf	(___lldiv@quotient+3)^0,f,c
  4679  002EF6  500B               	movf	___lldiv@divisor^0,w,c
  4680  002EF8  5C07               	subwf	___lldiv@dividend^0,w,c
  4681  002EFA  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4682  002EFC  5808               	subwfb	(___lldiv@dividend+1)^0,w,c
  4683  002EFE  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4684  002F00  5809               	subwfb	(___lldiv@dividend+2)^0,w,c
  4685  002F02  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4686  002F04  580A               	subwfb	(___lldiv@dividend+3)^0,w,c
  4687  002F06  A0D8               	btfss	status,0,c
  4688  002F08  EF88  F017         	goto	u3121
  4689  002F0C  EF8A  F017         	goto	u3120
  4690  002F10                     u3121:
  4691  002F10  EF93  F017         	goto	l3627
  4692  002F14                     u3120:
  4693  002F14  500B               	movf	___lldiv@divisor^0,w,c
  4694  002F16  5E07               	subwf	___lldiv@dividend^0,f,c
  4695  002F18  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4696  002F1A  5A08               	subwfb	(___lldiv@dividend+1)^0,f,c
  4697  002F1C  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4698  002F1E  5A09               	subwfb	(___lldiv@dividend+2)^0,f,c
  4699  002F20  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4700  002F22  5A0A               	subwfb	(___lldiv@dividend+3)^0,f,c
  4701  002F24  800F               	bsf	___lldiv@quotient^0,0,c
  4702  002F26                     l3627:
  4703  002F26  90D8               	bcf	status,0,c
  4704  002F28  320E               	rrcf	(___lldiv@divisor+3)^0,f,c
  4705  002F2A  320D               	rrcf	(___lldiv@divisor+2)^0,f,c
  4706  002F2C  320C               	rrcf	(___lldiv@divisor+1)^0,f,c
  4707  002F2E  320B               	rrcf	___lldiv@divisor^0,f,c
  4708  002F30  2E13               	decfsz	___lldiv@counter^0,f,c
  4709  002F32  EF76  F017         	goto	l3619
  4710  002F36                     l467:
  4711  002F36  C00F  F007         	movff	___lldiv@quotient,?___lldiv
  4712  002F3A  C010  F008         	movff	___lldiv@quotient+1,?___lldiv+1
  4713  002F3E  C011  F009         	movff	___lldiv@quotient+2,?___lldiv+2
  4714  002F42  C012  F00A         	movff	___lldiv@quotient+3,?___lldiv+3
  4715  002F46  0012               	return		;funcret
  4716  002F48                     __end_of___lldiv:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _servoInit *****************
  4720 ;; Defined at:
  4721 ;;		line 4 in file "servo.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    2
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		_appInit
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text23
  4750  003808                     __ptext23:
  4751                           	callstack 0
  4752  003808                     _servoInit:
  4753                           	callstack 27
  4754  003808                     
  4755                           ;servo.c: 10:     T2CONbits.T2CKPS = 0b10;
  4756  003808  50CA               	movf	202,w,c	;volatile
  4757  00380A  0BFC               	andlw	-4
  4758  00380C  0902               	iorlw	2
  4759  00380E  6ECA               	movwf	202,c	;volatile
  4760  003810                     
  4761                           ;servo.c: 11:     T2CONbits.T2OUTPS0 = 1;
  4762  003810  86CA               	bsf	202,3,c	;volatile
  4763  003812                     
  4764                           ;servo.c: 12:     T2CONbits.T2OUTPS1 = 1;
  4765  003812  88CA               	bsf	202,4,c	;volatile
  4766  003814                     
  4767                           ;servo.c: 13:     T2CONbits.T2OUTPS2 = 1;
  4768  003814  8ACA               	bsf	202,5,c	;volatile
  4769  003816                     
  4770                           ;servo.c: 14:     T2CONbits.T2OUTPS3 = 1;
  4771  003816  8CCA               	bsf	202,6,c	;volatile
  4772  003818                     
  4773                           ;servo.c: 15:     TRISEbits.TRISE0 = 0;
  4774  003818  9096               	bcf	150,0,c	;volatile
  4775  00381A                     
  4776                           ;servo.c: 16:     TRISEbits.TRISE1 = 0;
  4777  00381A  9296               	bcf	150,1,c	;volatile
  4778  00381C                     
  4779                           ;servo.c: 17:     TRISEbits.TRISE2 = 0;
  4780  00381C  9496               	bcf	150,2,c	;volatile
  4781  00381E  0012               	return		;funcret
  4782  003820                     __end_of_servoInit:
  4783                           	callstack 0
  4784                           
  4785 ;; *************** function _appTimerInit *****************
  4786 ;; Defined at:
  4787 ;;		line 85 in file "servo.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4801 ;;      Params:         0       0       0       0       0       0       0       0       0
  4802 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4804 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4805 ;;Total ram usage:        0 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    2
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_appInit
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text24
  4816  003770                     __ptext24:
  4817                           	callstack 0
  4818  003770                     _appTimerInit:
  4819                           	callstack 27
  4820  003770                     
  4821                           ;servo.c: 90:     T3CONbits.TMR3ON = 0;
  4822  003770  90B1               	bcf	177,0,c	;volatile
  4823                           
  4824                           ;servo.c: 91:     T3CONbits.RD16 = 1;
  4825  003772  8EB1               	bsf	177,7,c	;volatile
  4826                           
  4827                           ;servo.c: 92:     T3CONbits.TMR3CS = 0;
  4828  003774  92B1               	bcf	177,1,c	;volatile
  4829  003776                     
  4830                           ;servo.c: 93:     T3CONbits.T3CKPS = 0b11;
  4831  003776  0E30               	movlw	48
  4832  003778  12B1               	iorwf	177,f,c	;volatile
  4833  00377A                     
  4834                           ;servo.c: 94:     T3CONbits.T3NSYNC = 1;
  4835  00377A  84B1               	bsf	177,2,c	;volatile
  4836                           
  4837                           ;servo.c: 95:     TMR3 = 20536;
  4838  00377C  0E50               	movlw	80
  4839  00377E  6EB3               	movwf	179,c	;volatile
  4840  003780  0E38               	movlw	56
  4841  003782  6EB2               	movwf	178,c	;volatile
  4842  003784                     
  4843                           ;servo.c: 100:     T0CONbits.TMR0ON = 0;
  4844  003784  9ED5               	bcf	213,7,c	;volatile
  4845  003786                     
  4846                           ;servo.c: 101:     T0CONbits.T08BIT = 1;
  4847  003786  8CD5               	bsf	213,6,c	;volatile
  4848  003788                     
  4849                           ;servo.c: 102:     T0CONbits.T0CS = 1;
  4850  003788  8AD5               	bsf	213,5,c	;volatile
  4851  00378A                     
  4852                           ;servo.c: 103:     T0CONbits.T0SE = 0;
  4853  00378A  98D5               	bcf	213,4,c	;volatile
  4854  00378C                     
  4855                           ;servo.c: 104:     T0CONbits.PSA = 1;
  4856  00378C  86D5               	bsf	213,3,c	;volatile
  4857  00378E                     
  4858                           ;servo.c: 106:     TRISAbits.TRISA4 = 1;
  4859  00378E  8892               	bsf	146,4,c	;volatile
  4860  003790                     
  4861                           ;servo.c: 112:     INTCONbits.TMR0IE = 1;
  4862  003790  8AF2               	bsf	242,5,c	;volatile
  4863  003792                     
  4864                           ;servo.c: 113:     INTCONbits.TMR0IF = 0;
  4865  003792  94F2               	bcf	242,2,c	;volatile
  4866  003794                     
  4867                           ;servo.c: 114:     INTCON2bits.TMR0IP = 1;
  4868  003794  84F1               	bsf	241,2,c	;volatile
  4869  003796                     
  4870                           ;servo.c: 120:     PIR2bits.TMR3IF = 0;
  4871  003796  92A1               	bcf	161,1,c	;volatile
  4872  003798                     
  4873                           ;servo.c: 121:     IPR2bits.TMR3IP = 0;
  4874  003798  92A2               	bcf	162,1,c	;volatile
  4875  00379A                     
  4876                           ;servo.c: 122:     PIE2bits.TMR3IE = 1;
  4877  00379A  82A0               	bsf	160,1,c	;volatile
  4878  00379C  0012               	return		;funcret
  4879  00379E                     __end_of_appTimerInit:
  4880                           	callstack 0
  4881                           
  4882 ;; *************** function _appLCD_Init *****************
  4883 ;; Defined at:
  4884 ;;		line 197 in file "flex_lcd.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4898 ;;      Params:         0       0       0       0       0       0       0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4900 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4901 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4902 ;;Total ram usage:        2 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    4
  4905 ;; This function calls:
  4906 ;;		_Lcd_Cmd
  4907 ;;		_Lcd_Init
  4908 ;;		_Lcd_Out
  4909 ;; This function is called by:
  4910 ;;		_appInit
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text25
  4915  00311E                     __ptext25:
  4916                           	callstack 0
  4917  00311E                     _appLCD_Init:
  4918                           	callstack 25
  4919  00311E                     
  4920                           ;flex_lcd.c: 199:     Lcd_Init();
  4921  00311E  EC3B  F016         	call	_Lcd_Init	;wreg free
  4922                           
  4923                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  4924  003122  0E01               	movlw	1
  4925  003124  EC81  F012         	call	_Lcd_Cmd
  4926                           
  4927                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  4928  003128  0E0C               	movlw	12
  4929  00312A  EC81  F012         	call	_Lcd_Cmd
  4930  00312E                     
  4931                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  4932  00312E  0E02               	movlw	2
  4933  003130  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4934  003132  0E86               	movlw	134
  4935  003134  6E11               	movwf	??_appLCD_Init^0,c
  4936  003136  0E99               	movlw	153
  4937  003138                     u4527:
  4938  003138  2EE8               	decfsz	wreg,f,c
  4939  00313A  D7FE               	bra	u4527
  4940  00313C  2E11               	decfsz	??_appLCD_Init^0,f,c
  4941  00313E  D7FC               	bra	u4527
  4942  003140  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4943  003142  D7FA               	bra	u4527
  4944  003144  F000               	nop	
  4945  003146                     
  4946                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  4947  003146  0E03               	movlw	3
  4948  003148  6E0A               	movwf	Lcd_Out@x^0,c
  4949  00314A  0E54               	movlw	low STR_3
  4950  00314C  6E0B               	movwf	Lcd_Out@buffer^0,c
  4951  00314E  0E08               	movlw	high STR_3
  4952  003150  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  4953  003152  0E01               	movlw	1
  4954  003154  EC0F  F015         	call	_Lcd_Out
  4955  003158                     
  4956                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  4957  003158  0E06               	movlw	6
  4958  00315A  6E0A               	movwf	Lcd_Out@x^0,c
  4959  00315C  0E73               	movlw	low STR_4
  4960  00315E  6E0B               	movwf	Lcd_Out@buffer^0,c
  4961  003160  0E08               	movlw	high STR_4
  4962  003162  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  4963  003164  0E02               	movlw	2
  4964  003166  EC0F  F015         	call	_Lcd_Out
  4965  00316A                     
  4966                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  4967  00316A  0E1F               	movlw	31
  4968  00316C  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4969  00316E  0E71               	movlw	113
  4970  003170  6E11               	movwf	??_appLCD_Init^0,c
  4971  003172  0E1E               	movlw	30
  4972  003174                     u4537:
  4973  003174  2EE8               	decfsz	wreg,f,c
  4974  003176  D7FE               	bra	u4537
  4975  003178  2E11               	decfsz	??_appLCD_Init^0,f,c
  4976  00317A  D7FC               	bra	u4537
  4977  00317C  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4978  00317E  D7FA               	bra	u4537
  4979  003180  D000               	nop2	
  4980                           
  4981                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  4982  003182  0E01               	movlw	1
  4983  003184  EC81  F012         	call	_Lcd_Cmd
  4984  003188  0E02               	movlw	2
  4985  00318A  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4986  00318C  0E86               	movlw	134
  4987  00318E  6E11               	movwf	??_appLCD_Init^0,c
  4988  003190  0E99               	movlw	153
  4989  003192                     u4547:
  4990  003192  2EE8               	decfsz	wreg,f,c
  4991  003194  D7FE               	bra	u4547
  4992  003196  2E11               	decfsz	??_appLCD_Init^0,f,c
  4993  003198  D7FC               	bra	u4547
  4994  00319A  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4995  00319C  D7FA               	bra	u4547
  4996  00319E  F000               	nop	
  4997  0031A0  0012               	return		;funcret
  4998  0031A2                     __end_of_appLCD_Init:
  4999                           	callstack 0
  5000                           
  5001 ;; *************** function _Lcd_Init *****************
  5002 ;; Defined at:
  5003 ;;		line 31 in file "flex_lcd.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  i               1   10[COMRAM] unsigned char 
  5008 ;;  data            1    0        unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5018 ;;      Params:         0       0       0       0       0       0       0       0       0
  5019 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5020 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5021 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5022 ;;Total ram usage:        3 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    3
  5025 ;; This function calls:
  5026 ;;		_Lcd_Cmd
  5027 ;; This function is called by:
  5028 ;;		_appLCD_Init
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text26
  5033  002C76                     __ptext26:
  5034                           	callstack 0
  5035  002C76                     _Lcd_Init:
  5036                           	callstack 25
  5037  002C76                     
  5038                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  5039  002C76  9E95               	bcf	149,7,c	;volatile
  5040                           
  5041                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  5042  002C78  9C95               	bcf	149,6,c	;volatile
  5043                           
  5044                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  5045  002C7A  9A95               	bcf	149,5,c	;volatile
  5046                           
  5047                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  5048  002C7C  9895               	bcf	149,4,c	;volatile
  5049                           
  5050                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  5051  002C7E  9695               	bcf	149,3,c	;volatile
  5052                           
  5053                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  5054  002C80  9495               	bcf	149,2,c	;volatile
  5055  002C82                     
  5056                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  5057  002C82  0E85               	movlw	133
  5058  002C84  6E0A               	movwf	??_Lcd_Init^0,c
  5059  002C86  0E76               	movlw	118
  5060  002C88                     u4557:
  5061  002C88  2EE8               	decfsz	wreg,f,c
  5062  002C8A  D7FE               	bra	u4557
  5063  002C8C  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5064  002C8E  D7FC               	bra	u4557
  5065  002C90  D000               	nop2	
  5066  002C92                     
  5067                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  5068  002C92  0E00               	movlw	0
  5069  002C94  6E0B               	movwf	Lcd_Init@i^0,c
  5070  002C96                     l150:
  5071                           
  5072                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  5073  002C96  9E8C               	bcf	140,7,c	;volatile
  5074                           
  5075                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  5076  002C98  9C8C               	bcf	140,6,c	;volatile
  5077                           
  5078                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  5079  002C9A  8A8C               	bsf	140,5,c	;volatile
  5080                           
  5081                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  5082  002C9C  888C               	bsf	140,4,c	;volatile
  5083                           
  5084                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  5085  002C9E  968C               	bcf	140,3,c	;volatile
  5086                           
  5087                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  5088  002CA0  948C               	bcf	140,2,c	;volatile
  5089                           
  5090                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  5091  002CA2  9E8C               	bcf	140,7,c	;volatile
  5092                           
  5093                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  5094  002CA4  9C8C               	bcf	140,6,c	;volatile
  5095                           
  5096                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  5097  002CA6  8A8C               	bsf	140,5,c	;volatile
  5098                           
  5099                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  5100  002CA8  888C               	bsf	140,4,c	;volatile
  5101                           
  5102                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  5103  002CAA  868C               	bsf	140,3,c	;volatile
  5104                           
  5105                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  5106  002CAC  948C               	bcf	140,2,c	;volatile
  5107  002CAE                     
  5108                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  5109  002CAE  0E05               	movlw	5
  5110  002CB0                     u4567:
  5111  002CB0  2EE8               	decfsz	wreg,f,c
  5112  002CB2  D7FE               	bra	u4567
  5113  002CB4                     
  5114                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  5115  002CB4  9E8C               	bcf	140,7,c	;volatile
  5116  002CB6                     
  5117                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  5118  002CB6  9C8C               	bcf	140,6,c	;volatile
  5119  002CB8                     
  5120                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  5121  002CB8  8A8C               	bsf	140,5,c	;volatile
  5122  002CBA                     
  5123                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  5124  002CBA  888C               	bsf	140,4,c	;volatile
  5125  002CBC                     
  5126                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  5127  002CBC  968C               	bcf	140,3,c	;volatile
  5128  002CBE                     
  5129                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  5130  002CBE  948C               	bcf	140,2,c	;volatile
  5131                           
  5132                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5133  002CC0  0E16               	movlw	22
  5134  002CC2  6E0A               	movwf	??_Lcd_Init^0,c
  5135  002CC4  0E6C               	movlw	108
  5136  002CC6                     u4577:
  5137  002CC6  2EE8               	decfsz	wreg,f,c
  5138  002CC8  D7FE               	bra	u4577
  5139  002CCA  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5140  002CCC  D7FC               	bra	u4577
  5141  002CCE  D000               	nop2	
  5142  002CD0                     
  5143                           ;flex_lcd.c: 61:     }
  5144  002CD0  2A0B               	incf	Lcd_Init@i^0,f,c
  5145  002CD2  0E03               	movlw	3
  5146  002CD4  640B               	cpfsgt	Lcd_Init@i^0,c
  5147  002CD6  EF6F  F016         	goto	u3081
  5148  002CDA  EF71  F016         	goto	u3080
  5149  002CDE                     u3081:
  5150  002CDE  EF4B  F016         	goto	l150
  5151  002CE2                     u3080:
  5152  002CE2                     
  5153                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  5154  002CE2  9E8C               	bcf	140,7,c	;volatile
  5155                           
  5156                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  5157  002CE4  9C8C               	bcf	140,6,c	;volatile
  5158                           
  5159                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  5160  002CE6  8A8C               	bsf	140,5,c	;volatile
  5161                           
  5162                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  5163  002CE8  988C               	bcf	140,4,c	;volatile
  5164                           
  5165                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  5166  002CEA  968C               	bcf	140,3,c	;volatile
  5167                           
  5168                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  5169  002CEC  948C               	bcf	140,2,c	;volatile
  5170                           
  5171                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  5172  002CEE  9E8C               	bcf	140,7,c	;volatile
  5173                           
  5174                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  5175  002CF0  9C8C               	bcf	140,6,c	;volatile
  5176                           
  5177                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  5178  002CF2  8A8C               	bsf	140,5,c	;volatile
  5179                           
  5180                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  5181  002CF4  988C               	bcf	140,4,c	;volatile
  5182                           
  5183                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  5184  002CF6  868C               	bsf	140,3,c	;volatile
  5185                           
  5186                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  5187  002CF8  948C               	bcf	140,2,c	;volatile
  5188  002CFA                     
  5189                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  5190  002CFA  0E05               	movlw	5
  5191  002CFC                     u4587:
  5192  002CFC  2EE8               	decfsz	wreg,f,c
  5193  002CFE  D7FE               	bra	u4587
  5194  002D00                     
  5195                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  5196  002D00  9E8C               	bcf	140,7,c	;volatile
  5197  002D02                     
  5198                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  5199  002D02  9C8C               	bcf	140,6,c	;volatile
  5200  002D04                     
  5201                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  5202  002D04  8A8C               	bsf	140,5,c	;volatile
  5203  002D06                     
  5204                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  5205  002D06  988C               	bcf	140,4,c	;volatile
  5206  002D08                     
  5207                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  5208  002D08  968C               	bcf	140,3,c	;volatile
  5209  002D0A                     
  5210                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  5211  002D0A  948C               	bcf	140,2,c	;volatile
  5212                           
  5213                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5214  002D0C  0E16               	movlw	22
  5215  002D0E  6E0A               	movwf	??_Lcd_Init^0,c
  5216  002D10  0E6C               	movlw	108
  5217  002D12                     u4597:
  5218  002D12  2EE8               	decfsz	wreg,f,c
  5219  002D14  D7FE               	bra	u4597
  5220  002D16  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5221  002D18  D7FC               	bra	u4597
  5222  002D1A  D000               	nop2	
  5223  002D1C                     
  5224                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  5225  002D1C  0E28               	movlw	40
  5226  002D1E  EC81  F012         	call	_Lcd_Cmd
  5227  002D22                     
  5228                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  5229  002D22  0E10               	movlw	16
  5230  002D24  EC81  F012         	call	_Lcd_Cmd
  5231  002D28                     
  5232                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  5233  002D28  0E01               	movlw	1
  5234  002D2A  EC81  F012         	call	_Lcd_Cmd
  5235  002D2E                     
  5236                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  5237  002D2E  0E0F               	movlw	15
  5238  002D30  EC81  F012         	call	_Lcd_Cmd
  5239  002D34  0012               	return		;funcret
  5240  002D36                     __end_of_Lcd_Init:
  5241                           	callstack 0
  5242                           
  5243 ;; *************** function _appISRConfig *****************
  5244 ;; Defined at:
  5245 ;;		line 25 in file "app.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		None
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5259 ;;      Params:         0       0       0       0       0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5262 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5263 ;;Total ram usage:        0 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    2
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_appInit
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text27
  5274  00384A                     __ptext27:
  5275                           	callstack 0
  5276  00384A                     _appISRConfig:
  5277                           	callstack 27
  5278  00384A                     
  5279                           ;app.c: 30:     RCONbits.IPEN = 1;
  5280  00384A  8ED0               	bsf	208,7,c	;volatile
  5281                           
  5282                           ;app.c: 31:     INTCONbits.GIE_GIEH = 1;
  5283  00384C  8EF2               	bsf	242,7,c	;volatile
  5284                           
  5285                           ;app.c: 32:     INTCONbits.PEIE_GIEL = 1;
  5286  00384E  8CF2               	bsf	242,6,c	;volatile
  5287  003850  0012               	return		;funcret
  5288  003852                     __end_of_appISRConfig:
  5289                           	callstack 0
  5290                           
  5291 ;; *************** function _appCounterInit *****************
  5292 ;; Defined at:
  5293 ;;		line 136 in file "servo.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  reload          2    6[COMRAM] unsigned short 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		None
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5307 ;;      Params:         2       0       0       0       0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5310 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5311 ;;Total ram usage:        2 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    2
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_appInit
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text28
  5322  003840                     __ptext28:
  5323                           	callstack 0
  5324  003840                     _appCounterInit:
  5325                           	callstack 27
  5326  003840                     
  5327                           ;servo.c: 136: void appCounterInit(uint16_t reload);servo.c: 137: {;servo.c: 139:     TM
      +                          R0 = reload;
  5328  003840  C007  FFD6         	movff	appCounterInit@reload,4054	;volatile
  5329  003844  C008  FFD7         	movff	appCounterInit@reload+1,4055	;volatile
  5330  003848  0012               	return		;funcret
  5331  00384A                     __end_of_appCounterInit:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function _adcInit *****************
  5335 ;; Defined at:
  5336 ;;		line 10 in file "adc.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  ADC_PINs        1    wreg     unsigned char 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  ADC_PINs        1    7[COMRAM] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0
  5351 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5352 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5353 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5354 ;;Total ram usage:        2 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    2
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_appInit
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text29
  5365  00353A                     __ptext29:
  5366                           	callstack 0
  5367  00353A                     _adcInit:
  5368                           	callstack 27
  5369                           
  5370                           ;incstack = 0
  5371                           ;adcInit@ADC_PINs stored from wreg
  5372  00353A  6E08               	movwf	adcInit@ADC_PINs^0,c
  5373  00353C                     
  5374                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  5375  00353C  5008               	movf	adcInit@ADC_PINs^0,w,c
  5376  00353E  A4D8               	btfss	status,2,c
  5377  003540  EFA4  F01A         	goto	u3781
  5378  003544  EFA6  F01A         	goto	u3780
  5379  003548                     u3781:
  5380  003548  EFAC  F01A         	goto	l4029
  5381  00354C                     u3780:
  5382  00354C                     
  5383                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  5384  00354C  50C1               	movf	193,w,c	;volatile
  5385  00354E  0BF0               	andlw	-16
  5386  003550  090E               	iorlw	14
  5387  003552  6EC1               	movwf	193,c	;volatile
  5388                           
  5389                           ;adc.c: 16:     }
  5390  003554  EFB4  F01A         	goto	l4031
  5391  003558                     l4029:
  5392                           
  5393                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  5394  003558  5008               	movf	adcInit@ADC_PINs^0,w,c
  5395  00355A  080F               	sublw	15
  5396  00355C  6E07               	movwf	??_adcInit^0,c
  5397  00355E  50C1               	movf	193,w,c	;volatile
  5398  003560  1807               	xorwf	??_adcInit^0,w,c
  5399  003562  0BF0               	andlw	-16
  5400  003564  1807               	xorwf	??_adcInit^0,w,c
  5401  003566  6EC1               	movwf	193,c	;volatile
  5402  003568                     l4031:
  5403                           
  5404                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  5405  003568  0ECF               	movlw	-49
  5406  00356A  16C1               	andwf	193,f,c	;volatile
  5407  00356C                     
  5408                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  5409  00356C  50C0               	movf	192,w,c	;volatile
  5410  00356E  0BC7               	andlw	-57
  5411  003570  0910               	iorlw	16
  5412  003572  6EC0               	movwf	192,c	;volatile
  5413  003574                     
  5414                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  5415  003574  50C0               	movf	192,w,c	;volatile
  5416  003576  0BF8               	andlw	-8
  5417  003578  0903               	iorlw	3
  5418  00357A  6EC0               	movwf	192,c	;volatile
  5419  00357C                     
  5420                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  5421  00357C  8EC0               	bsf	192,7,c	;volatile
  5422  00357E                     
  5423                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  5424  00357E  80C2               	bsf	194,0,c	;volatile
  5425  003580                     
  5426                           ;adc.c: 41:     TRISCbits.TRISC1 = 0;
  5427  003580  9294               	bcf	148,1,c	;volatile
  5428  003582  0012               	return		;funcret
  5429  003584                     __end_of_adcInit:
  5430                           	callstack 0
  5431                           
  5432 ;; *************** function _appTimerStop *****************
  5433 ;; Defined at:
  5434 ;;		line 131 in file "servo.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;		None
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;		None
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      void 
  5441 ;; Registers used:
  5442 ;;		None
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5448 ;;      Params:         0       0       0       0       0       0       0       0       0
  5449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5452 ;;Total ram usage:        0 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    2
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_appGetElements
  5459 ;;		_warning
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text30
  5464  003856                     __ptext30:
  5465                           	callstack 0
  5466  003856                     _appTimerStop:
  5467                           	callstack 27
  5468  003856                     
  5469                           ;servo.c: 133:     T3CONbits.TMR3ON = 0;
  5470  003856  90B1               	bcf	177,0,c	;volatile
  5471  003858  0012               	return		;funcret
  5472  00385A                     __end_of_appTimerStop:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _appTimerStart *****************
  5476 ;; Defined at:
  5477 ;;		line 124 in file "servo.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5494 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    2
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_appGetElements
  5502 ;;		_warning
  5503 ;;		_confirmacion
  5504 ;;		_sendinformation
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text31
  5509  003834                     __ptext31:
  5510                           	callstack 0
  5511  003834                     _appTimerStart:
  5512                           	callstack 27
  5513  003834                     
  5514                           ;servo.c: 127:     TMR3 = 20536;
  5515  003834  0E50               	movlw	80
  5516  003836  6EB3               	movwf	179,c	;volatile
  5517  003838  0E38               	movlw	56
  5518  00383A  6EB2               	movwf	178,c	;volatile
  5519  00383C                     
  5520                           ;servo.c: 128:     T3CONbits.TMR3ON = 1;
  5521  00383C  80B1               	bsf	177,0,c	;volatile
  5522  00383E  0012               	return		;funcret
  5523  003840                     __end_of_appTimerStart:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function _appSubGiveElemts *****************
  5527 ;; Defined at:
  5528 ;;		line 106 in file "app.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  data            2   14[COMRAM] PTR struct _state
  5531 ;;		 -> datos(25), 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5543 ;;      Params:         2       0       0       0       0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5546 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5547 ;;Total ram usage:        2 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    4
  5550 ;; This function calls:
  5551 ;;		_appCounterStart
  5552 ;;		_setServo
  5553 ;; This function is called by:
  5554 ;;		_appGetElements
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text32
  5559  003820                     __ptext32:
  5560                           	callstack 0
  5561  003820                     _appSubGiveElemts:
  5562                           	callstack 25
  5563  003820                     
  5564                           ;app.c: 106: void appSubGiveElemts(StateMachine *data);app.c: 107: {;app.c: 108:     app
      +                          CounterStart();
  5565  003820  EC2D  F01C         	call	_appCounterStart	;wreg free
  5566  003824                     
  5567                           ;app.c: 109:     setServo(39,10,2);
  5568  003824  0E0A               	movlw	10
  5569  003826  6E0B               	movwf	setServo@pulsos^0,c
  5570  003828  0E02               	movlw	2
  5571  00382A  6E0C               	movwf	setServo@pin^0,c
  5572  00382C  0E27               	movlw	39
  5573  00382E  ECCF  F01B         	call	_setServo
  5574  003832  0012               	return		;funcret
  5575  003834                     __end_of_appSubGiveElemts:
  5576                           	callstack 0
  5577                           
  5578 ;; *************** function _setServo *****************
  5579 ;; Defined at:
  5580 ;;		line 77 in file "servo.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  angle           1    wreg     unsigned char 
  5583 ;;  pulsos          1   10[COMRAM] unsigned char 
  5584 ;;  pin             1   11[COMRAM] unsigned char 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  angle           1   12[COMRAM] unsigned char 
  5587 ;;  i               1   13[COMRAM] unsigned char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      void 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5597 ;;      Params:         2       0       0       0       0       0       0       0       0
  5598 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5600 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5601 ;;Total ram usage:        4 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    3
  5604 ;; This function calls:
  5605 ;;		_setServoAngle
  5606 ;; This function is called by:
  5607 ;;		_appInit
  5608 ;;		_appStateRecolectData
  5609 ;;		_appStateInitial
  5610 ;;		_appSubGiveElemts
  5611 ;;		_warning
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text33
  5616  00379E                     __ptext33:
  5617                           	callstack 0
  5618  00379E                     _setServo:
  5619                           	callstack 26
  5620                           
  5621                           ;incstack = 0
  5622                           ;setServo@angle stored from wreg
  5623  00379E  6E0D               	movwf	setServo@angle^0,c
  5624  0037A0                     
  5625                           ;servo.c: 77: void setServo(uint8_t angle, uint8_t pulsos, uint8_t pin);servo.c: 78: {;s
      +                          ervo.c: 79:     for(uint8_t i = 0; i < pulsos; i++)
  5626  0037A0  0E00               	movlw	0
  5627  0037A2  6E0E               	movwf	setServo@i^0,c
  5628  0037A4  EFDA  F01B         	goto	l3605
  5629  0037A8                     l3601:
  5630                           
  5631                           ;servo.c: 80:     {;servo.c: 81:         setServoAngle(angle, pin);
  5632  0037A8  C00C  F007         	movff	setServo@pin,setServoAngle@pin
  5633  0037AC  500D               	movf	setServo@angle^0,w,c
  5634  0037AE  EC16  F013         	call	_setServoAngle
  5635  0037B2                     
  5636                           ;servo.c: 82:     }
  5637  0037B2  2A0E               	incf	setServo@i^0,f,c
  5638  0037B4                     l3605:
  5639  0037B4  500B               	movf	setServo@pulsos^0,w,c
  5640  0037B6  5C0E               	subwf	setServo@i^0,w,c
  5641  0037B8  A0D8               	btfss	status,0,c
  5642  0037BA  EFE1  F01B         	goto	u3091
  5643  0037BE  EFE3  F01B         	goto	u3090
  5644  0037C2                     u3091:
  5645  0037C2  EFD4  F01B         	goto	l3601
  5646  0037C6                     u3090:
  5647  0037C6  0012               	return		;funcret
  5648  0037C8                     __end_of_setServo:
  5649                           	callstack 0
  5650                           
  5651 ;; *************** function _setServoAngle *****************
  5652 ;; Defined at:
  5653 ;;		line 20 in file "servo.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  angle           1    wreg     unsigned char 
  5656 ;;  pin             1    6[COMRAM] unsigned char 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  angle           1    9[COMRAM] unsigned char 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5668 ;;      Params:         1       0       0       0       0       0       0       0       0
  5669 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5670 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5671 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5672 ;;Total ram usage:        4 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    2
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_setServo
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text34
  5683  00262C                     __ptext34:
  5684                           	callstack 0
  5685  00262C                     _setServoAngle:
  5686                           	callstack 26
  5687                           
  5688                           ;incstack = 0
  5689                           ;setServoAngle@angle stored from wreg
  5690  00262C  6E0A               	movwf	setServoAngle@angle^0,c
  5691  00262E                     
  5692                           ;servo.c: 20: void setServoAngle(uint8_t angle, uint8_t pin);servo.c: 21: {;servo.c: 23:
      +                               TMR2 = angle;
  5693  00262E  C00A  FFCC         	movff	setServoAngle@angle,4044	;volatile
  5694  002632                     
  5695                           ;servo.c: 24:     PR2 = 255;
  5696  002632  68CB               	setf	203,c	;volatile
  5697  002634                     
  5698                           ;servo.c: 26:     PIR1bits.TMR2IF = 0;
  5699  002634  929E               	bcf	158,1,c	;volatile
  5700                           
  5701                           ;servo.c: 28:     switch(pin)
  5702  002636  EF26  F013         	goto	l3347
  5703  00263A                     l234:
  5704                           
  5705                           ;servo.c: 31:             LATEbits.LATE0 = 1;
  5706  00263A  808D               	bsf	141,0,c	;volatile
  5707                           
  5708                           ;servo.c: 32:             break;
  5709  00263C  EF3F  F013         	goto	l3349
  5710  002640                     l236:
  5711                           
  5712                           ;servo.c: 34:             LATEbits.LATE1 = 1;
  5713  002640  828D               	bsf	141,1,c	;volatile
  5714                           
  5715                           ;servo.c: 35:             break;
  5716  002642  EF3F  F013         	goto	l3349
  5717  002646                     l237:
  5718                           
  5719                           ;servo.c: 37:             LATEbits.LATE2 = 1;
  5720  002646  848D               	bsf	141,2,c	;volatile
  5721                           
  5722                           ;servo.c: 38:             break;
  5723  002648  EF3F  F013         	goto	l3349
  5724  00264C                     l3347:
  5725  00264C  5007               	movf	setServoAngle@pin^0,w,c
  5726  00264E  6E08               	movwf	??_setServoAngle^0,c
  5727  002650  6A09               	clrf	(??_setServoAngle+1)^0,c
  5728                           
  5729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5730                           ; Switch size 1, requested type "simple"
  5731                           ; Number of cases is 1, Range of values is 0 to 0
  5732                           ; switch strategies available:
  5733                           ; Name         Instructions Cycles
  5734                           ; simple_byte            4     3 (average)
  5735                           ;	Chosen strategy is simple_byte
  5736  002652  5009               	movf	(??_setServoAngle+1)^0,w,c
  5737  002654  0A00               	xorlw	0	; case 0
  5738  002656  B4D8               	btfsc	status,2,c
  5739  002658  EF30  F013         	goto	l4997
  5740  00265C  EF3F  F013         	goto	l3349
  5741  002660                     l4997:
  5742                           
  5743                           ; Switch size 1, requested type "simple"
  5744                           ; Number of cases is 3, Range of values is 0 to 2
  5745                           ; switch strategies available:
  5746                           ; Name         Instructions Cycles
  5747                           ; simple_byte           10     6 (average)
  5748                           ;	Chosen strategy is simple_byte
  5749  002660  5008               	movf	??_setServoAngle^0,w,c
  5750  002662  0A00               	xorlw	0	; case 0
  5751  002664  B4D8               	btfsc	status,2,c
  5752  002666  EF1D  F013         	goto	l234
  5753  00266A  0A01               	xorlw	1	; case 1
  5754  00266C  B4D8               	btfsc	status,2,c
  5755  00266E  EF20  F013         	goto	l236
  5756  002672  0A03               	xorlw	3	; case 2
  5757  002674  B4D8               	btfsc	status,2,c
  5758  002676  EF23  F013         	goto	l237
  5759  00267A  EF3F  F013         	goto	l3349
  5760  00267E                     l3349:
  5761                           
  5762                           ;servo.c: 41:     if(angle == 45)
  5763  00267E  0E2D               	movlw	45
  5764  002680  180A               	xorwf	setServoAngle@angle^0,w,c
  5765  002682  A4D8               	btfss	status,2,c
  5766  002684  EF46  F013         	goto	u2761
  5767  002688  EF48  F013         	goto	u2760
  5768  00268C                     u2761:
  5769  00268C  EF51  F013         	goto	l3353
  5770  002690                     u2760:
  5771  002690                     
  5772                           ;servo.c: 42:     {;servo.c: 43:         _delay((unsigned long)((2000)*(12000000/4000000
      +                          .0)));
  5773  002690  0E08               	movlw	8
  5774  002692  6E08               	movwf	??_setServoAngle^0,c
  5775  002694  0ECA               	movlw	202
  5776  002696                     u4607:
  5777  002696  2EE8               	decfsz	wreg,f,c
  5778  002698  D7FE               	bra	u4607
  5779  00269A  2E08               	decfsz	??_setServoAngle^0,f,c
  5780  00269C  D7FC               	bra	u4607
  5781                           
  5782                           ;servo.c: 44:     }
  5783  00269E  EF75  F013         	goto	l3361
  5784  0026A2                     l3353:
  5785  0026A2  0E21               	movlw	33
  5786  0026A4  180A               	xorwf	setServoAngle@angle^0,w,c
  5787  0026A6  A4D8               	btfss	status,2,c
  5788  0026A8  EF58  F013         	goto	u2771
  5789  0026AC  EF5A  F013         	goto	u2770
  5790  0026B0                     u2771:
  5791  0026B0  EF64  F013         	goto	l3357
  5792  0026B4                     u2770:
  5793  0026B4                     
  5794                           ;servo.c: 46:     {;servo.c: 47:         _delay((unsigned long)((1000)*(12000000/4000000
      +                          .0)));
  5795  0026B4  0E04               	movlw	4
  5796  0026B6  6E08               	movwf	??_setServoAngle^0,c
  5797  0026B8  0EE4               	movlw	228
  5798  0026BA                     u4617:
  5799  0026BA  2EE8               	decfsz	wreg,f,c
  5800  0026BC  D7FE               	bra	u4617
  5801  0026BE  2E08               	decfsz	??_setServoAngle^0,f,c
  5802  0026C0  D7FC               	bra	u4617
  5803  0026C2  D000               	nop2	
  5804                           
  5805                           ;servo.c: 48:     }
  5806  0026C4  EF75  F013         	goto	l3361
  5807  0026C8                     l3357:
  5808  0026C8  0E27               	movlw	39
  5809  0026CA  180A               	xorwf	setServoAngle@angle^0,w,c
  5810  0026CC  A4D8               	btfss	status,2,c
  5811  0026CE  EF6B  F013         	goto	u2781
  5812  0026D2  EF6D  F013         	goto	u2780
  5813  0026D6                     u2781:
  5814  0026D6  EF75  F013         	goto	l3361
  5815  0026DA                     u2780:
  5816  0026DA                     
  5817                           ;servo.c: 50:     {;servo.c: 51:         _delay((unsigned long)((1500)*(12000000/4000000
      +                          .0)));
  5818  0026DA  0E06               	movlw	6
  5819  0026DC  6E08               	movwf	??_setServoAngle^0,c
  5820  0026DE  0ED7               	movlw	215
  5821  0026E0                     u4627:
  5822  0026E0  2EE8               	decfsz	wreg,f,c
  5823  0026E2  D7FE               	bra	u4627
  5824  0026E4  2E08               	decfsz	??_setServoAngle^0,f,c
  5825  0026E6  D7FC               	bra	u4627
  5826  0026E8  F000               	nop	
  5827  0026EA                     l3361:
  5828                           
  5829                           ;servo.c: 54:     T2CONbits.TMR2ON = 1;
  5830  0026EA  84CA               	bsf	202,2,c	;volatile
  5831                           
  5832                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5833  0026EC  EF9A  F013         	goto	l243
  5834  0026F0                     l246:
  5835                           
  5836                           ;servo.c: 60:                 LATEbits.LATE0 = 0;
  5837  0026F0  908D               	bcf	141,0,c	;volatile
  5838                           
  5839                           ;servo.c: 61:                 break;
  5840  0026F2  EF9A  F013         	goto	l243
  5841  0026F6                     l248:
  5842                           
  5843                           ;servo.c: 63:                 LATEbits.LATE1 = 0;
  5844  0026F6  928D               	bcf	141,1,c	;volatile
  5845                           
  5846                           ;servo.c: 64:                 break;
  5847  0026F8  EF9A  F013         	goto	l243
  5848  0026FC                     l249:
  5849                           
  5850                           ;servo.c: 66:                 LATEbits.LATE2 = 0;
  5851  0026FC  948D               	bcf	141,2,c	;volatile
  5852                           
  5853                           ;servo.c: 67:                 break;
  5854  0026FE  EF9A  F013         	goto	l243
  5855  002702                     l3365:
  5856  002702  5007               	movf	setServoAngle@pin^0,w,c
  5857  002704  6E08               	movwf	??_setServoAngle^0,c
  5858  002706  6A09               	clrf	(??_setServoAngle+1)^0,c
  5859                           
  5860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5861                           ; Switch size 1, requested type "simple"
  5862                           ; Number of cases is 1, Range of values is 0 to 0
  5863                           ; switch strategies available:
  5864                           ; Name         Instructions Cycles
  5865                           ; simple_byte            4     3 (average)
  5866                           ;	Chosen strategy is simple_byte
  5867  002708  5009               	movf	(??_setServoAngle+1)^0,w,c
  5868  00270A  0A00               	xorlw	0	; case 0
  5869  00270C  B4D8               	btfsc	status,2,c
  5870  00270E  EF8B  F013         	goto	l4999
  5871  002712  EF9A  F013         	goto	l243
  5872  002716                     l4999:
  5873                           
  5874                           ; Switch size 1, requested type "simple"
  5875                           ; Number of cases is 3, Range of values is 0 to 2
  5876                           ; switch strategies available:
  5877                           ; Name         Instructions Cycles
  5878                           ; simple_byte           10     6 (average)
  5879                           ;	Chosen strategy is simple_byte
  5880  002716  5008               	movf	??_setServoAngle^0,w,c
  5881  002718  0A00               	xorlw	0	; case 0
  5882  00271A  B4D8               	btfsc	status,2,c
  5883  00271C  EF78  F013         	goto	l246
  5884  002720  0A01               	xorlw	1	; case 1
  5885  002722  B4D8               	btfsc	status,2,c
  5886  002724  EF7B  F013         	goto	l248
  5887  002728  0A03               	xorlw	3	; case 2
  5888  00272A  B4D8               	btfsc	status,2,c
  5889  00272C  EF7E  F013         	goto	l249
  5890  002730  EF9A  F013         	goto	l243
  5891  002734                     l243:
  5892                           
  5893                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5894  002734  A29E               	btfss	158,1,c	;volatile
  5895  002736  EF9F  F013         	goto	u2791
  5896  00273A  EFA1  F013         	goto	u2790
  5897  00273E                     u2791:
  5898  00273E  EF81  F013         	goto	l3365
  5899  002742                     u2790:
  5900  002742                     
  5901                           ;servo.c: 71:     T2CONbits.TMR2ON = 0;
  5902  002742  94CA               	bcf	202,2,c	;volatile
  5903                           
  5904                           ;servo.c: 72:     PIR1bits.TMR2IF = 0;
  5905  002744  929E               	bcf	158,1,c	;volatile
  5906  002746  0012               	return		;funcret
  5907  002748                     __end_of_setServoAngle:
  5908                           	callstack 0
  5909                           
  5910 ;; *************** function _appCounterStart *****************
  5911 ;; Defined at:
  5912 ;;		line 142 in file "servo.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		None
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5926 ;;      Params:         0       0       0       0       0       0       0       0       0
  5927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5929 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5930 ;;Total ram usage:        0 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; Hardware stack levels required when called:    2
  5933 ;; This function calls:
  5934 ;;		Nothing
  5935 ;; This function is called by:
  5936 ;;		_appSubGiveElemts
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text35
  5941  00385A                     __ptext35:
  5942                           	callstack 0
  5943  00385A                     _appCounterStart:
  5944                           	callstack 26
  5945  00385A                     
  5946                           ;servo.c: 145:     T0CONbits.TMR0ON = 1;
  5947  00385A  8ED5               	bsf	213,7,c	;volatile
  5948  00385C  0012               	return		;funcret
  5949  00385E                     __end_of_appCounterStart:
  5950                           	callstack 0
  5951                           
  5952 ;; *************** function _appSubGetData *****************
  5953 ;; Defined at:
  5954 ;;		line 86 in file "app.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  5957 ;;		 -> datos(25), 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  cantidad        2   38[BANK0 ] unsigned short 
  5960 ;;  inout           1   40[BANK0 ] unsigned char 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      void 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5970 ;;      Params:         0       2       0       0       0       0       0       0       0
  5971 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5973 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5974 ;;Total ram usage:        5 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:   10
  5977 ;; This function calls:
  5978 ;;		_Lcd_Out
  5979 ;;		___wmul
  5980 ;;		_memset
  5981 ;;		_sprintf
  5982 ;;		_teclado
  5983 ;; This function is called by:
  5984 ;;		_appGetElements
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text36
  5989  002850                     __ptext36:
  5990                           	callstack 0
  5991  002850                     _appSubGetData:
  5992                           	callstack 19
  5993  002850                     
  5994                           ;app.c: 86: void appSubGetData(StateMachine *data_Inout);app.c: 87: {;app.c: 88:     uin
      +                          t16_t cantidad = 0;
  5995  002850  0E00               	movlw	0
  5996  002852  0100               	movlb	0	; () banked
  5997  002854  6FBB               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  5998  002856  0E00               	movlw	0
  5999  002858  6FBA               	movwf	appSubGetData@cantidad& (0+255),b
  6000                           
  6001                           ;app.c: 89:     uint8_t inout = 0;
  6002  00285A  0E00               	movlw	0
  6003  00285C  6FBC               	movwf	appSubGetData@inout& (0+255),b
  6004  00285E                     
  6005                           ; BSR set to: 0
  6006                           ;app.c: 90:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  6007  00285E  0E07               	movlw	7
  6008  002860  25B8               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6009  002862  6E07               	movwf	memset@dest^0,c
  6010  002864  0E00               	movlw	0
  6011  002866  21B9               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6012  002868  6E08               	movwf	(memset@dest+1)^0,c
  6013  00286A  0E00               	movlw	0
  6014  00286C  6E0A               	movwf	(memset@c+1)^0,c
  6015  00286E  0E00               	movlw	0
  6016  002870  6E09               	movwf	memset@c^0,c
  6017  002872  0E00               	movlw	0
  6018  002874  6E0C               	movwf	(memset@n+1)^0,c
  6019  002876  0E10               	movlw	16
  6020  002878  6E0B               	movwf	memset@n^0,c
  6021  00287A  EC6D  F010         	call	_memset	;wreg free
  6022  00287E                     
  6023                           ;app.c: 91:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  6024  00287E  0E00               	movlw	0
  6025  002880  6E0A               	movwf	Lcd_Out@x^0,c
  6026  002882  0E12               	movlw	low STR_6
  6027  002884  6E0B               	movwf	Lcd_Out@buffer^0,c
  6028  002886  0E08               	movlw	high STR_6
  6029  002888  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6030  00288A  0E01               	movlw	1
  6031  00288C  EC0F  F015         	call	_Lcd_Out
  6032                           
  6033                           ;app.c: 92:     while(inout != '*')
  6034  002890  EF92  F014         	goto	l4721
  6035  002894                     l4709:
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;app.c: 93:     {;app.c: 94:         teclado(&inout);
  6039  002894  0EBC               	movlw	low appSubGetData@inout
  6040  002896  6E07               	movwf	teclado@valor^0,c
  6041  002898  0E00               	movlw	high appSubGetData@inout
  6042  00289A  6E08               	movwf	(teclado@valor+1)^0,c
  6043  00289C  EC47  F00B         	call	_teclado	;wreg free
  6044  0028A0                     
  6045                           ;app.c: 96:         if((inout >= '0') && (inout <= '9'))
  6046  0028A0  0E2F               	movlw	47
  6047  0028A2  0100               	movlb	0	; () banked
  6048  0028A4  65BC               	cpfsgt	appSubGetData@inout& (0+255),b
  6049  0028A6  EF57  F014         	goto	u4271
  6050  0028AA  EF59  F014         	goto	u4270
  6051  0028AE                     u4271:
  6052  0028AE  EF76  F014         	goto	l4717
  6053  0028B2                     u4270:
  6054  0028B2                     
  6055                           ; BSR set to: 0
  6056  0028B2  0E3A               	movlw	58
  6057  0028B4  61BC               	cpfslt	appSubGetData@inout& (0+255),b
  6058  0028B6  EF5F  F014         	goto	u4281
  6059  0028BA  EF61  F014         	goto	u4280
  6060  0028BE                     u4281:
  6061  0028BE  EF76  F014         	goto	l4717
  6062  0028C2                     u4280:
  6063  0028C2                     
  6064                           ; BSR set to: 0
  6065                           ;app.c: 97:         {;app.c: 98:             cantidad = (cantidad*10)+(inout - 48);
  6066  0028C2  C0BA  F007         	movff	appSubGetData@cantidad,___wmul@multiplier
  6067  0028C6  C0BB  F008         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  6068  0028CA  0E00               	movlw	0
  6069  0028CC  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  6070  0028CE  0E0A               	movlw	10
  6071  0028D0  6E09               	movwf	___wmul@multiplicand^0,c
  6072  0028D2  ECE4  F01B         	call	___wmul	;wreg free
  6073  0028D6  0100               	movlb	0	; () banked
  6074  0028D8  51BC               	movf	appSubGetData@inout& (0+255),w,b
  6075  0028DA  2607               	addwf	?___wmul^0,f,c
  6076  0028DC  0E00               	movlw	0
  6077  0028DE  2208               	addwfc	(?___wmul+1)^0,f,c
  6078  0028E0  0ED0               	movlw	208
  6079  0028E2  2407               	addwf	?___wmul^0,w,c
  6080  0028E4  6FBA               	movwf	appSubGetData@cantidad& (0+255),b
  6081  0028E6  0EFF               	movlw	255
  6082  0028E8  2008               	addwfc	(?___wmul+1)^0,w,c
  6083  0028EA  6FBB               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  6084  0028EC                     l4717:
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;app.c: 100:         sprintf((char *)data_Inout->display,"%d",cantidad);
  6088  0028EC  0E07               	movlw	7
  6089  0028EE  25B8               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6090  0028F0  6FA6               	movwf	sprintf@s& (0+255),b
  6091  0028F2  0E00               	movlw	0
  6092  0028F4  21B9               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6093  0028F6  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6094  0028F8  0E7B               	movlw	low (STR_5+2)
  6095  0028FA  6FA8               	movwf	sprintf@fmt& (0+255),b
  6096  0028FC  0E08               	movlw	high (STR_5+2)
  6097  0028FE  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6098  002900  C0BA  F0AA         	movff	appSubGetData@cantidad,?_sprintf+4
  6099  002904  C0BB  F0AB         	movff	appSubGetData@cantidad+1,?_sprintf+5
  6100  002908  EC01  F01A         	call	_sprintf	;wreg free
  6101  00290C                     
  6102                           ;app.c: 101:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  6103  00290C  0E00               	movlw	0
  6104  00290E  6E0A               	movwf	Lcd_Out@x^0,c
  6105  002910  0E07               	movlw	7
  6106  002912  0100               	movlb	0	; () banked
  6107  002914  25B8               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6108  002916  6E0B               	movwf	Lcd_Out@buffer^0,c
  6109  002918  0E00               	movlw	0
  6110  00291A  21B9               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6111  00291C  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6112  00291E  0E02               	movlw	2
  6113  002920  EC0F  F015         	call	_Lcd_Out
  6114  002924                     l4721:
  6115                           
  6116                           ;app.c: 92:     while(inout != '*')
  6117  002924  0E2A               	movlw	42
  6118  002926  0100               	movlb	0	; () banked
  6119  002928  19BC               	xorwf	appSubGetData@inout& (0+255),w,b
  6120  00292A  A4D8               	btfss	status,2,c
  6121  00292C  EF9A  F014         	goto	u4291
  6122  002930  EF9C  F014         	goto	u4290
  6123  002934                     u4291:
  6124  002934  EF4A  F014         	goto	l4709
  6125  002938                     u4290:
  6126  002938                     
  6127                           ; BSR set to: 0
  6128                           ;app.c: 103:     data_Inout->elements += (int16_t)cantidad;
  6129  002938  EE20 F001          	lfsr	2,1
  6130  00293C  51B8               	movf	appSubGetData@data_Inout& (0+255),w,b
  6131  00293E  26D9               	addwf	fsr2l,f,c
  6132  002940  51B9               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  6133  002942  22DA               	addwfc	fsr2h,f,c
  6134  002944  51BA               	movf	appSubGetData@cantidad& (0+255),w,b
  6135  002946  26DE               	addwf	postinc2,f,c
  6136  002948  51BB               	movf	(appSubGetData@cantidad+1)& (0+255),w,b
  6137  00294A  22DD               	addwfc	postdec2,f,c
  6138  00294C                     
  6139                           ; BSR set to: 0
  6140  00294C  0012               	return		;funcret
  6141  00294E                     __end_of_appSubGetData:
  6142                           	callstack 0
  6143                           
  6144 ;; *************** function _teclado *****************
  6145 ;; Defined at:
  6146 ;;		line 10 in file "teclado.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  valor           2    6[COMRAM] PTR unsigned char 
  6149 ;;		 -> appSubGetData@inout(1), datos(25), 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6161 ;;      Params:         2       0       0       0       0       0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6164 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6165 ;;Total ram usage:        2 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    2
  6168 ;; This function calls:
  6169 ;;		Nothing
  6170 ;; This function is called by:
  6171 ;;		_appStateInitial
  6172 ;;		_appSubGetData
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text37
  6177  00168E                     __ptext37:
  6178                           	callstack 0
  6179  00168E                     _teclado:
  6180                           	callstack 27
  6181  00168E                     
  6182                           ;teclado.c: 11:     *valor = 0;
  6183  00168E  C007  FFD9         	movff	teclado@valor,fsr2l
  6184  001692  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6185  001696  0E00               	movlw	0
  6186  001698  6EDF               	movwf	indf2,c
  6187  00169A                     
  6188                           ;teclado.c: 12:     PORTB=0xF0;
  6189  00169A  0EF0               	movlw	240
  6190  00169C  6E81               	movwf	129,c	;volatile
  6191  00169E                     
  6192                           ;teclado.c: 13:     if(PORTB != 0xF0){
  6193  00169E  0EF0               	movlw	240
  6194  0016A0  1881               	xorwf	129,w,c	;volatile
  6195  0016A2  B4D8               	btfsc	status,2,c
  6196  0016A4  EF56  F00B         	goto	u2901
  6197  0016A8  EF58  F00B         	goto	u2900
  6198  0016AC                     u2901:
  6199  0016AC  EF30  F00C         	goto	l3537
  6200  0016B0                     u2900:
  6201  0016B0                     
  6202                           ;teclado.c: 14:         PORTB=0xFE;
  6203  0016B0  0EFE               	movlw	254
  6204  0016B2  6E81               	movwf	129,c	;volatile
  6205  0016B4                     
  6206                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  6207  0016B4  B881               	btfsc	129,4,c	;volatile
  6208  0016B6  EF5F  F00B         	goto	u2911
  6209  0016BA  EF61  F00B         	goto	u2910
  6210  0016BE                     u2911:
  6211  0016BE  EF67  F00B         	goto	l3471
  6212  0016C2                     u2910:
  6213  0016C2  C007  FFD9         	movff	teclado@valor,fsr2l
  6214  0016C6  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6215  0016CA  0E2A               	movlw	42
  6216  0016CC  6EDF               	movwf	indf2,c
  6217  0016CE                     l3471:
  6218                           
  6219                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  6220  0016CE  BA81               	btfsc	129,5,c	;volatile
  6221  0016D0  EF6C  F00B         	goto	u2921
  6222  0016D4  EF6E  F00B         	goto	u2920
  6223  0016D8                     u2921:
  6224  0016D8  EF74  F00B         	goto	l3475
  6225  0016DC                     u2920:
  6226  0016DC  C007  FFD9         	movff	teclado@valor,fsr2l
  6227  0016E0  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6228  0016E4  0E30               	movlw	48
  6229  0016E6  6EDF               	movwf	indf2,c
  6230  0016E8                     l3475:
  6231                           
  6232                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  6233  0016E8  BC81               	btfsc	129,6,c	;volatile
  6234  0016EA  EF79  F00B         	goto	u2931
  6235  0016EE  EF7B  F00B         	goto	u2930
  6236  0016F2                     u2931:
  6237  0016F2  EF81  F00B         	goto	l3479
  6238  0016F6                     u2930:
  6239  0016F6  C007  FFD9         	movff	teclado@valor,fsr2l
  6240  0016FA  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6241  0016FE  0E23               	movlw	35
  6242  001700  6EDF               	movwf	indf2,c
  6243  001702                     l3479:
  6244                           
  6245                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  6246  001702  BE81               	btfsc	129,7,c	;volatile
  6247  001704  EF86  F00B         	goto	u2941
  6248  001708  EF88  F00B         	goto	u2940
  6249  00170C                     u2941:
  6250  00170C  EF8E  F00B         	goto	l3483
  6251  001710                     u2940:
  6252  001710  C007  FFD9         	movff	teclado@valor,fsr2l
  6253  001714  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6254  001718  0E44               	movlw	68
  6255  00171A  6EDF               	movwf	indf2,c
  6256  00171C                     l3483:
  6257                           
  6258                           ;teclado.c: 19:         PORTB=0xFD;
  6259  00171C  0EFD               	movlw	253
  6260  00171E  6E81               	movwf	129,c	;volatile
  6261  001720                     
  6262                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  6263  001720  B881               	btfsc	129,4,c	;volatile
  6264  001722  EF95  F00B         	goto	u2951
  6265  001726  EF97  F00B         	goto	u2950
  6266  00172A                     u2951:
  6267  00172A  EF9D  F00B         	goto	l3489
  6268  00172E                     u2950:
  6269  00172E  C007  FFD9         	movff	teclado@valor,fsr2l
  6270  001732  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6271  001736  0E37               	movlw	55
  6272  001738  6EDF               	movwf	indf2,c
  6273  00173A                     l3489:
  6274                           
  6275                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  6276  00173A  BA81               	btfsc	129,5,c	;volatile
  6277  00173C  EFA2  F00B         	goto	u2961
  6278  001740  EFA4  F00B         	goto	u2960
  6279  001744                     u2961:
  6280  001744  EFAA  F00B         	goto	l3493
  6281  001748                     u2960:
  6282  001748  C007  FFD9         	movff	teclado@valor,fsr2l
  6283  00174C  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6284  001750  0E38               	movlw	56
  6285  001752  6EDF               	movwf	indf2,c
  6286  001754                     l3493:
  6287                           
  6288                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  6289  001754  BC81               	btfsc	129,6,c	;volatile
  6290  001756  EFAF  F00B         	goto	u2971
  6291  00175A  EFB1  F00B         	goto	u2970
  6292  00175E                     u2971:
  6293  00175E  EFB7  F00B         	goto	l3497
  6294  001762                     u2970:
  6295  001762  C007  FFD9         	movff	teclado@valor,fsr2l
  6296  001766  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6297  00176A  0E39               	movlw	57
  6298  00176C  6EDF               	movwf	indf2,c
  6299  00176E                     l3497:
  6300                           
  6301                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  6302  00176E  BE81               	btfsc	129,7,c	;volatile
  6303  001770  EFBC  F00B         	goto	u2981
  6304  001774  EFBE  F00B         	goto	u2980
  6305  001778                     u2981:
  6306  001778  EFC4  F00B         	goto	l3501
  6307  00177C                     u2980:
  6308  00177C  C007  FFD9         	movff	teclado@valor,fsr2l
  6309  001780  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6310  001784  0E43               	movlw	67
  6311  001786  6EDF               	movwf	indf2,c
  6312  001788                     l3501:
  6313                           
  6314                           ;teclado.c: 24:         PORTB=0xFB;
  6315  001788  0EFB               	movlw	251
  6316  00178A  6E81               	movwf	129,c	;volatile
  6317  00178C                     
  6318                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  6319  00178C  B881               	btfsc	129,4,c	;volatile
  6320  00178E  EFCB  F00B         	goto	u2991
  6321  001792  EFCD  F00B         	goto	u2990
  6322  001796                     u2991:
  6323  001796  EFD3  F00B         	goto	l3507
  6324  00179A                     u2990:
  6325  00179A  C007  FFD9         	movff	teclado@valor,fsr2l
  6326  00179E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6327  0017A2  0E34               	movlw	52
  6328  0017A4  6EDF               	movwf	indf2,c
  6329  0017A6                     l3507:
  6330                           
  6331                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  6332  0017A6  BA81               	btfsc	129,5,c	;volatile
  6333  0017A8  EFD8  F00B         	goto	u3001
  6334  0017AC  EFDA  F00B         	goto	u3000
  6335  0017B0                     u3001:
  6336  0017B0  EFE0  F00B         	goto	l3511
  6337  0017B4                     u3000:
  6338  0017B4  C007  FFD9         	movff	teclado@valor,fsr2l
  6339  0017B8  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6340  0017BC  0E35               	movlw	53
  6341  0017BE  6EDF               	movwf	indf2,c
  6342  0017C0                     l3511:
  6343                           
  6344                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  6345  0017C0  BC81               	btfsc	129,6,c	;volatile
  6346  0017C2  EFE5  F00B         	goto	u3011
  6347  0017C6  EFE7  F00B         	goto	u3010
  6348  0017CA                     u3011:
  6349  0017CA  EFED  F00B         	goto	l3515
  6350  0017CE                     u3010:
  6351  0017CE  C007  FFD9         	movff	teclado@valor,fsr2l
  6352  0017D2  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6353  0017D6  0E36               	movlw	54
  6354  0017D8  6EDF               	movwf	indf2,c
  6355  0017DA                     l3515:
  6356                           
  6357                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  6358  0017DA  BE81               	btfsc	129,7,c	;volatile
  6359  0017DC  EFF2  F00B         	goto	u3021
  6360  0017E0  EFF4  F00B         	goto	u3020
  6361  0017E4                     u3021:
  6362  0017E4  EFFA  F00B         	goto	l3519
  6363  0017E8                     u3020:
  6364  0017E8  C007  FFD9         	movff	teclado@valor,fsr2l
  6365  0017EC  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6366  0017F0  0E42               	movlw	66
  6367  0017F2  6EDF               	movwf	indf2,c
  6368  0017F4                     l3519:
  6369                           
  6370                           ;teclado.c: 29:         PORTB=0xF7;
  6371  0017F4  0EF7               	movlw	247
  6372  0017F6  6E81               	movwf	129,c	;volatile
  6373  0017F8                     
  6374                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  6375  0017F8  B881               	btfsc	129,4,c	;volatile
  6376  0017FA  EF01  F00C         	goto	u3031
  6377  0017FE  EF03  F00C         	goto	u3030
  6378  001802                     u3031:
  6379  001802  EF09  F00C         	goto	l3525
  6380  001806                     u3030:
  6381  001806  C007  FFD9         	movff	teclado@valor,fsr2l
  6382  00180A  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6383  00180E  0E31               	movlw	49
  6384  001810  6EDF               	movwf	indf2,c
  6385  001812                     l3525:
  6386                           
  6387                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  6388  001812  BA81               	btfsc	129,5,c	;volatile
  6389  001814  EF0E  F00C         	goto	u3041
  6390  001818  EF10  F00C         	goto	u3040
  6391  00181C                     u3041:
  6392  00181C  EF16  F00C         	goto	l3529
  6393  001820                     u3040:
  6394  001820  C007  FFD9         	movff	teclado@valor,fsr2l
  6395  001824  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6396  001828  0E32               	movlw	50
  6397  00182A  6EDF               	movwf	indf2,c
  6398  00182C                     l3529:
  6399                           
  6400                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  6401  00182C  BC81               	btfsc	129,6,c	;volatile
  6402  00182E  EF1B  F00C         	goto	u3051
  6403  001832  EF1D  F00C         	goto	u3050
  6404  001836                     u3051:
  6405  001836  EF23  F00C         	goto	l3533
  6406  00183A                     u3050:
  6407  00183A  C007  FFD9         	movff	teclado@valor,fsr2l
  6408  00183E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6409  001842  0E33               	movlw	51
  6410  001844  6EDF               	movwf	indf2,c
  6411  001846                     l3533:
  6412                           
  6413                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  6414  001846  BE81               	btfsc	129,7,c	;volatile
  6415  001848  EF28  F00C         	goto	u3061
  6416  00184C  EF2A  F00C         	goto	u3060
  6417  001850                     u3061:
  6418  001850  EF30  F00C         	goto	l3537
  6419  001854                     u3060:
  6420  001854  C007  FFD9         	movff	teclado@valor,fsr2l
  6421  001858  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6422  00185C  0E41               	movlw	65
  6423  00185E  6EDF               	movwf	indf2,c
  6424  001860                     l3537:
  6425                           
  6426                           ;teclado.c: 35:     PORTB = 0xF0;
  6427  001860  0EF0               	movlw	240
  6428  001862  6E81               	movwf	129,c	;volatile
  6429  001864                     l3539:
  6430  001864  0EF0               	movlw	240
  6431  001866  1881               	xorwf	129,w,c	;volatile
  6432  001868  A4D8               	btfss	status,2,c
  6433  00186A  EF39  F00C         	goto	u3071
  6434  00186E  EF3B  F00C         	goto	u3070
  6435  001872                     u3071:
  6436  001872  EF32  F00C         	goto	l3539
  6437  001876                     u3070:
  6438  001876  0012               	return		;funcret
  6439  001878                     __end_of_teclado:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _sprintf *****************
  6443 ;; Defined at:
  6444 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  s               2   18[BANK0 ] PTR unsigned char 
  6447 ;;		 -> datos(25), 
  6448 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  6449 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6450 ;;		 -> STR_1(14), 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  f               6   30[BANK0 ] struct _IO_FILE
  6453 ;;  ap              2   28[BANK0 ] PTR void [1]
  6454 ;;		 -> ?_sprintf(2), 
  6455 ;;  ret             2    0        int 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  2   18[BANK0 ] int 
  6458 ;; Registers used:
  6459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6465 ;;      Params:         0       8       0       0       0       0       0       0       0
  6466 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6468 ;;      Totals:         0      18       0       0       0       0       0       0       0
  6469 ;;Total ram usage:       18 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    9
  6472 ;; This function calls:
  6473 ;;		_vfprintf
  6474 ;; This function is called by:
  6475 ;;		_appADC
  6476 ;;		_appBat
  6477 ;;		_appElemts
  6478 ;;		_appSubGetData
  6479 ;;		_sendinformation
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text38
  6484  003402                     __ptext38:
  6485                           	callstack 0
  6486  003402                     _sprintf:
  6487                           	callstack 20
  6488  003402  0EAA               	movlw	low (?_sprintf+4)
  6489  003404  0100               	movlb	0	; () banked
  6490  003406  6FB0               	movwf	sprintf@ap& (0+255),b
  6491  003408  0E00               	movlw	high (?_sprintf+4)
  6492  00340A  6FB1               	movwf	(sprintf@ap+1)& (0+255),b
  6493  00340C  C0A6  F0B2         	movff	sprintf@s,sprintf@f
  6494  003410  C0A7  F0B3         	movff	sprintf@s+1,sprintf@f+1
  6495  003414                     
  6496                           ; BSR set to: 0
  6497  003414  0E00               	movlw	0
  6498  003416  6FB5               	movwf	(sprintf@f+3)& (0+255),b
  6499  003418  0E00               	movlw	0
  6500  00341A  6FB4               	movwf	(sprintf@f+2)& (0+255),b
  6501  00341C                     
  6502                           ; BSR set to: 0
  6503  00341C  0E00               	movlw	0
  6504  00341E  6FB7               	movwf	(sprintf@f+5)& (0+255),b
  6505  003420  0E00               	movlw	0
  6506  003422  6FB6               	movwf	(sprintf@f+4)& (0+255),b
  6507  003424                     
  6508                           ; BSR set to: 0
  6509  003424  0EB2               	movlw	low sprintf@f
  6510  003426  6FA0               	movwf	vfprintf@fp& (0+255),b
  6511  003428  0E00               	movlw	high sprintf@f
  6512  00342A  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
  6513  00342C  C0A8  F0A2         	movff	sprintf@fmt,vfprintf@fmt
  6514  003430  C0A9  F0A3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6515  003434  0EB0               	movlw	low sprintf@ap
  6516  003436  6FA4               	movwf	vfprintf@ap& (0+255),b
  6517  003438  0E00               	movlw	high sprintf@ap
  6518  00343A  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
  6519  00343C  ECA4  F019         	call	_vfprintf	;wreg free
  6520  003440  0100               	movlb	0	; () banked
  6521  003442  51B4               	movf	(sprintf@f+2)& (0+255),w,b
  6522  003444  25A6               	addwf	sprintf@s& (0+255),w,b
  6523  003446  6ED9               	movwf	fsr2l,c
  6524  003448  51B5               	movf	(sprintf@f+3)& (0+255),w,b
  6525  00344A  21A7               	addwfc	(sprintf@s+1)& (0+255),w,b
  6526  00344C  6EDA               	movwf	fsr2h,c
  6527  00344E  0E00               	movlw	0
  6528  003450  6EDF               	movwf	indf2,c
  6529  003452                     
  6530                           ; BSR set to: 0
  6531  003452  0012               	return		;funcret
  6532  003454                     __end_of_sprintf:
  6533                           	callstack 0
  6534                           
  6535 ;; *************** function _vfprintf *****************
  6536 ;; Defined at:
  6537 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  6540 ;;		 -> sprintf@f(6), 
  6541 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  6542 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6543 ;;		 -> STR_1(14), 
  6544 ;;  ap              2   16[BANK0 ] PTR PTR void 
  6545 ;;		 -> sprintf@ap(2), 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  6548 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6549 ;;		 -> STR_1(14), 
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  2   12[BANK0 ] int 
  6552 ;; Registers used:
  6553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6559 ;;      Params:         0       6       0       0       0       0       0       0       0
  6560 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6562 ;;      Totals:         2       6       0       0       0       0       0       0       0
  6563 ;;Total ram usage:        8 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; Hardware stack levels required when called:    8
  6566 ;; This function calls:
  6567 ;;		_vfpfcnvrt
  6568 ;; This function is called by:
  6569 ;;		_sprintf
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text39
  6574  003348                     __ptext39:
  6575                           	callstack 0
  6576  003348                     _vfprintf:
  6577                           	callstack 20
  6578  003348                     
  6579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6580  003348  C0A2  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  6581  00334C  C0A3  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6582  003350                     
  6583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6584  003350  0E00               	movlw	0
  6585  003352  0100               	movlb	0	; () banked
  6586  003354  6F61               	movwf	(_nout+1)& (0+255),b
  6587  003356  0E00               	movlw	0
  6588  003358  6F60               	movwf	_nout& (0+255),b
  6589                           
  6590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6591  00335A  EFC2  F019         	goto	l4575
  6592  00335E                     l4573:
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6596  00335E  C0A0  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  6597  003362  C0A1  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6598  003366  0E50               	movlw	low vfprintf@cfmt
  6599  003368  6E48               	movwf	vfpfcnvrt@fmt^0,c
  6600  00336A  0E00               	movlw	high vfprintf@cfmt
  6601  00336C  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6602  00336E  C0A4  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  6603  003372  C0A5  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6604  003376  EC22  F008         	call	_vfpfcnvrt	;wreg free
  6605  00337A  5046               	movf	?_vfpfcnvrt^0,w,c
  6606  00337C  0100               	movlb	0	; () banked
  6607  00337E  2760               	addwf	_nout& (0+255),f,b
  6608  003380  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  6609  003382  2361               	addwfc	(_nout+1)& (0+255),f,b
  6610  003384                     l4575:
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6614  003384  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  6615  003388  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6616  00338C                     	if	0	;tblptru may be non-zero
  6617  00338C                     	endif
  6618  00338C                     	if	0	;tblptru may be non-zero
  6619  00338C                     	endif
  6620  00338C  0008               	tblrd		*
  6621  00338E  50F5               	movf	tablat,w,c
  6622  003390  0900               	iorlw	0
  6623  003392  A4D8               	btfss	status,2,c
  6624  003394  EFCE  F019         	goto	u4111
  6625  003398  EFD0  F019         	goto	u4110
  6626  00339C                     u4111:
  6627  00339C  EFAF  F019         	goto	l4573
  6628  0033A0                     u4110:
  6629  0033A0                     
  6630                           ; BSR set to: 0
  6631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6632  0033A0  C060  F0A0         	movff	_nout,?_vfprintf
  6633  0033A4  C061  F0A1         	movff	_nout+1,?_vfprintf+1
  6634  0033A8                     
  6635                           ; BSR set to: 0
  6636  0033A8  0012               	return		;funcret
  6637  0033AA                     __end_of_vfprintf:
  6638                           	callstack 0
  6639                           
  6640 ;; *************** function _vfpfcnvrt *****************
  6641 ;; Defined at:
  6642 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  6645 ;;		 -> sprintf@f(6), 
  6646 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  6647 ;;		 -> vfprintf@cfmt(2), 
  6648 ;;  ap              2   73[COMRAM] PTR PTR void 
  6649 ;;		 -> sprintf@ap(2), 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  ll              8    0[BANK0 ] long long 
  6652 ;;  llu             8    0        unsigned long long 
  6653 ;;  f               4    0        unsigned long long 
  6654 ;;  vp              3    0        PTR void 
  6655 ;;  ct              3    0        unsigned char [3]
  6656 ;;  cp              3    0        PTR unsigned char 
  6657 ;;  done            2    8[BANK0 ] int 
  6658 ;;  i               2    0        int 
  6659 ;;  c               1    0        unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  2   69[COMRAM] int 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6669 ;;      Params:         6       0       0       0       0       0       0       0       0
  6670 ;;      Locals:         0      12       0       0       0       0       0       0       0
  6671 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6672 ;;      Totals:        10      12       0       0       0       0       0       0       0
  6673 ;;Total ram usage:       22 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    7
  6676 ;; This function calls:
  6677 ;;		_atoi
  6678 ;;		_dtoa
  6679 ;;		_fputc
  6680 ;;		_isdigit
  6681 ;; This function is called by:
  6682 ;;		_vfprintf
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text40
  6687  001044                     __ptext40:
  6688                           	callstack 0
  6689  001044                     _vfpfcnvrt:
  6690                           	callstack 20
  6691  001044                     
  6692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6693  001044  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6694  001048  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6695  00104C  CFDE FFF6          	movff	postinc2,tblptrl
  6696  001050  CFDD FFF7          	movff	postdec2,tblptrh
  6697  001054                     	if	0	;tblptru may be non-zero
  6698  001054                     	endif
  6699  001054                     	if	0	;tblptru may be non-zero
  6700  001054                     	endif
  6701  001054  0008               	tblrd		*
  6702  001056  50F5               	movf	tablat,w,c
  6703  001058  0A25               	xorlw	37
  6704  00105A  A4D8               	btfss	status,2,c
  6705  00105C  EF32  F008         	goto	u2561
  6706  001060  EF34  F008         	goto	u2560
  6707  001064                     u2561:
  6708  001064  EFBC  F009         	goto	l3275
  6709  001068                     u2560:
  6710  001068                     
  6711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6712  001068  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6713  00106C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6714  001070  2ADE               	incf	postinc2,f,c
  6715  001072  0E00               	movlw	0
  6716  001074  22DD               	addwfc	postdec2,f,c
  6717  001076                     
  6718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6719  001076  0E00               	movlw	0
  6720  001078  0100               	movlb	0	; () banked
  6721  00107A  6F63               	movwf	(_width+1)& (0+255),b
  6722  00107C  0E00               	movlw	0
  6723  00107E  6F62               	movwf	_width& (0+255),b
  6724  001080  C062  F055         	movff	_width,_flags
  6725  001084  C063  F056         	movff	_width+1,_flags+1
  6726  001088                     
  6727                           ; BSR set to: 0
  6728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6729  001088  6853               	setf	_prec^0,c
  6730  00108A  6854               	setf	(_prec+1)^0,c
  6731  00108C                     
  6732                           ; BSR set to: 0
  6733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  6734  00108C  0E00               	movlw	0
  6735  00108E  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6736  001090  0E00               	movlw	0
  6737  001092  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  6738                           
  6739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6740  001094  EF92  F008         	goto	l3227
  6741  001098                     l3201:
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  6745  001098  8055               	bsf	_flags^0,0,c
  6746  00109A                     l3203:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  6750  00109A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6751  00109E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6752  0010A2  2ADE               	incf	postinc2,f,c
  6753  0010A4  0E00               	movlw	0
  6754  0010A6  22DD               	addwfc	postdec2,f,c
  6755                           
  6756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  6757  0010A8  EF92  F008         	goto	l3227
  6758  0010AC                     l3205:
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  6762  0010AC  8255               	bsf	_flags^0,1,c
  6763  0010AE  EF4D  F008         	goto	l3203
  6764  0010B2                     l3209:
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  6768  0010B2  8455               	bsf	_flags^0,2,c
  6769  0010B4  EF4D  F008         	goto	l3203
  6770  0010B8                     l3213:
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  6774  0010B8  8655               	bsf	_flags^0,3,c
  6775  0010BA  EF4D  F008         	goto	l3203
  6776  0010BE                     l3217:
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  6780  0010BE  8855               	bsf	_flags^0,4,c
  6781  0010C0  EF4D  F008         	goto	l3203
  6782  0010C4                     l3221:
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  6786  0010C4  0E00               	movlw	0
  6787  0010C6  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6788  0010C8  0E01               	movlw	1
  6789  0010CA  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  6790                           
  6791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  6792  0010CC  EF92  F008         	goto	l3227
  6793  0010D0                     l3225:
  6794                           
  6795                           ; BSR set to: 0
  6796  0010D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6797  0010D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6798  0010D8  CFDE FFF6          	movff	postinc2,tblptrl
  6799  0010DC  CFDD FFF7          	movff	postdec2,tblptrh
  6800  0010E0                     	if	0	;tblptru may be non-zero
  6801  0010E0                     	endif
  6802  0010E0                     	if	0	;tblptru may be non-zero
  6803  0010E0                     	endif
  6804  0010E0  0008               	tblrd		*
  6805  0010E2  50F5               	movf	tablat,w,c
  6806  0010E4  6E4C               	movwf	??_vfpfcnvrt^0,c
  6807  0010E6  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  6808                           
  6809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6810                           ; Switch size 1, requested type "simple"
  6811                           ; Number of cases is 1, Range of values is 0 to 0
  6812                           ; switch strategies available:
  6813                           ; Name         Instructions Cycles
  6814                           ; simple_byte            4     3 (average)
  6815                           ;	Chosen strategy is simple_byte
  6816  0010E8  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  6817  0010EA  0A00               	xorlw	0	; case 0
  6818  0010EC  B4D8               	btfsc	status,2,c
  6819  0010EE  EF7B  F008         	goto	l5001
  6820  0010F2  EF62  F008         	goto	l3221
  6821  0010F6                     l5001:
  6822                           
  6823                           ; BSR set to: 0
  6824                           ; Switch size 1, requested type "simple"
  6825                           ; Number of cases is 5, Range of values is 32 to 48
  6826                           ; switch strategies available:
  6827                           ; Name         Instructions Cycles
  6828                           ; simple_byte           16     9 (average)
  6829                           ;	Chosen strategy is simple_byte
  6830  0010F6  504C               	movf	??_vfpfcnvrt^0,w,c
  6831  0010F8  0A20               	xorlw	32	; case 32
  6832  0010FA  B4D8               	btfsc	status,2,c
  6833  0010FC  EF5C  F008         	goto	l3213
  6834  001100  0A03               	xorlw	3	; case 35
  6835  001102  B4D8               	btfsc	status,2,c
  6836  001104  EF5F  F008         	goto	l3217
  6837  001108  0A08               	xorlw	8	; case 43
  6838  00110A  B4D8               	btfsc	status,2,c
  6839  00110C  EF59  F008         	goto	l3209
  6840  001110  0A06               	xorlw	6	; case 45
  6841  001112  B4D8               	btfsc	status,2,c
  6842  001114  EF4C  F008         	goto	l3201
  6843  001118  0A1D               	xorlw	29	; case 48
  6844  00111A  B4D8               	btfsc	status,2,c
  6845  00111C  EF56  F008         	goto	l3205
  6846  001120  EF62  F008         	goto	l3221
  6847  001124                     l3227:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6851  001124  519C               	movf	vfpfcnvrt@done& (0+255),w,b
  6852  001126  119D               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6853  001128  B4D8               	btfsc	status,2,c
  6854  00112A  EF99  F008         	goto	u2571
  6855  00112E  EF9B  F008         	goto	u2570
  6856  001132                     u2571:
  6857  001132  EF68  F008         	goto	l3225
  6858  001136                     u2570:
  6859  001136                     
  6860                           ; BSR set to: 0
  6861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  6862  001136  A055               	btfss	_flags^0,0,c
  6863  001138  EFA0  F008         	goto	u2581
  6864  00113C  EFA2  F008         	goto	u2580
  6865  001140                     u2581:
  6866  001140  EFA3  F008         	goto	l3231
  6867  001144                     u2580:
  6868  001144                     
  6869                           ; BSR set to: 0
  6870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  6871  001144  9255               	bcf	_flags^0,1,c
  6872  001146                     l3231:
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  6876  001146  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6877  00114A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6878  00114E  CFDE FFF6          	movff	postinc2,tblptrl
  6879  001152  CFDD FFF7          	movff	postdec2,tblptrh
  6880  001156                     	if	0	;tblptru may be non-zero
  6881  001156                     	endif
  6882  001156                     	if	0	;tblptru may be non-zero
  6883  001156                     	endif
  6884  001156  0008               	tblrd		*
  6885  001158  50F5               	movf	tablat,w,c
  6886  00115A  0A2A               	xorlw	42
  6887  00115C  A4D8               	btfss	status,2,c
  6888  00115E  EFB3  F008         	goto	u2591
  6889  001162  EFB5  F008         	goto	u2590
  6890  001166                     u2591:
  6891  001166  EFDE  F008         	goto	l3239
  6892  00116A                     u2590:
  6893  00116A                     
  6894                           ; BSR set to: 0
  6895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6896  00116A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6897  00116E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6898  001172  2ADE               	incf	postinc2,f,c
  6899  001174  0E00               	movlw	0
  6900  001176  22DD               	addwfc	postdec2,f,c
  6901                           
  6902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6903  001178  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6904  00117C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6905  001180  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6906  001184  0E02               	movlw	2
  6907  001186  26DE               	addwf	postinc2,f,c
  6908  001188  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6909  00118C  0E00               	movlw	0
  6910  00118E  22DD               	addwfc	postdec2,f,c
  6911  001190  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6912  001194  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6913  001198  CFDE F062          	movff	postinc2,_width
  6914  00119C  CFDD F063          	movff	postdec2,_width+1
  6915  0011A0                     
  6916                           ; BSR set to: 0
  6917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6918  0011A0  BF63               	btfsc	(_width+1)& (0+255),7,b
  6919  0011A2  EFD7  F008         	goto	u2600
  6920  0011A6  EFD5  F008         	goto	u2601
  6921  0011AA                     u2601:
  6922  0011AA  EF22  F009         	goto	l3249
  6923  0011AE                     u2600:
  6924  0011AE                     
  6925                           ; BSR set to: 0
  6926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6927  0011AE  8055               	bsf	_flags^0,0,c
  6928                           
  6929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6930  0011B0  6D62               	negf	_width& (0+255),b
  6931  0011B2  1F63               	comf	(_width+1)& (0+255),f,b
  6932  0011B4  B0D8               	btfsc	status,0,c
  6933  0011B6  2B63               	incf	(_width+1)& (0+255),f,b
  6934  0011B8  EF22  F009         	goto	l3249
  6935  0011BC                     l3239:
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6939  0011BC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6940  0011C0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6941  0011C4  CFDE F00E          	movff	postinc2,atoi@s
  6942  0011C8  CFDD F00F          	movff	postdec2,atoi@s+1
  6943  0011CC  ECE1  F00E         	call	_atoi	;wreg free
  6944  0011D0  C00E  F062         	movff	?_atoi,_width
  6945  0011D4  C00F  F063         	movff	?_atoi+1,_width+1
  6946                           
  6947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6948  0011D8  EFF5  F008         	goto	l3243
  6949  0011DC                     l3241:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6953  0011DC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6954  0011E0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6955  0011E4  2ADE               	incf	postinc2,f,c
  6956  0011E6  0E00               	movlw	0
  6957  0011E8  22DD               	addwfc	postdec2,f,c
  6958  0011EA                     l3243:
  6959  0011EA  0ED0               	movlw	208
  6960  0011EC  6E4C               	movwf	??_vfpfcnvrt^0,c
  6961  0011EE  0EFF               	movlw	255
  6962  0011F0  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  6963  0011F2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6964  0011F6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6965  0011FA  CFDE FFF6          	movff	postinc2,tblptrl
  6966  0011FE  CFDD FFF7          	movff	postdec2,tblptrh
  6967  001202                     	if	0	;tblptru may be non-zero
  6968  001202                     	endif
  6969  001202                     	if	0	;tblptru may be non-zero
  6970  001202                     	endif
  6971  001202  0008               	tblrd		*
  6972  001204  50F5               	movf	tablat,w,c
  6973  001206  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  6974  001208  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  6975  00120A  504C               	movf	??_vfpfcnvrt^0,w,c
  6976  00120C  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  6977  00120E  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  6978  001210  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  6979  001212  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  6980  001214  E10A               	bnz	u2610
  6981  001216  0E0A               	movlw	10
  6982  001218  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  6983  00121A  A0D8               	btfss	status,0,c
  6984  00121C  EF12  F009         	goto	u2611
  6985  001220  EF15  F009         	goto	u2610
  6986  001224                     u2611:
  6987  001224  0E01               	movlw	1
  6988  001226  EF16  F009         	goto	u2620
  6989  00122A                     u2610:
  6990  00122A  0E00               	movlw	0
  6991  00122C                     u2620:
  6992  00122C  0100               	movlb	0	; () banked
  6993  00122E  6F9E               	movwf	_vfpfcnvrt$2355& (0+255),b
  6994  001230  6B9F               	clrf	(_vfpfcnvrt$2355+1)& (0+255),b
  6995  001232                     
  6996                           ; BSR set to: 0
  6997  001232  519E               	movf	_vfpfcnvrt$2355& (0+255),w,b
  6998  001234  119F               	iorwf	(_vfpfcnvrt$2355+1)& (0+255),w,b
  6999  001236  A4D8               	btfss	status,2,c
  7000  001238  EF20  F009         	goto	u2631
  7001  00123C  EF22  F009         	goto	u2630
  7002  001240                     u2631:
  7003  001240  EFEE  F008         	goto	l3241
  7004  001244                     u2630:
  7005  001244                     l3249:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7009  001244  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7010  001248  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7011  00124C  CFDE FFF6          	movff	postinc2,tblptrl
  7012  001250  CFDD FFF7          	movff	postdec2,tblptrh
  7013  001254                     	if	0	;tblptru may be non-zero
  7014  001254                     	endif
  7015  001254                     	if	0	;tblptru may be non-zero
  7016  001254                     	endif
  7017  001254  0008               	tblrd		*
  7018  001256  50F5               	movf	tablat,w,c
  7019  001258  0A64               	xorlw	100
  7020  00125A  B4D8               	btfsc	status,2,c
  7021  00125C  EF32  F009         	goto	u2641
  7022  001260  EF34  F009         	goto	u2640
  7023  001264                     u2641:
  7024  001264  EF46  F009         	goto	l3253
  7025  001268                     u2640:
  7026  001268                     
  7027                           ; BSR set to: 0
  7028  001268  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7029  00126C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7030  001270  CFDE FFF6          	movff	postinc2,tblptrl
  7031  001274  CFDD FFF7          	movff	postdec2,tblptrh
  7032  001278                     	if	0	;tblptru may be non-zero
  7033  001278                     	endif
  7034  001278                     	if	0	;tblptru may be non-zero
  7035  001278                     	endif
  7036  001278  0008               	tblrd		*
  7037  00127A  50F5               	movf	tablat,w,c
  7038  00127C  0A69               	xorlw	105
  7039  00127E  A4D8               	btfss	status,2,c
  7040  001280  EF44  F009         	goto	u2651
  7041  001284  EF46  F009         	goto	u2650
  7042  001288                     u2651:
  7043  001288  EF86  F009         	goto	l3259
  7044  00128C                     u2650:
  7045  00128C                     l3253:
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7049  00128C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7050  001290  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7051  001294  2ADE               	incf	postinc2,f,c
  7052  001296  0E00               	movlw	0
  7053  001298  22DD               	addwfc	postdec2,f,c
  7054                           
  7055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7056  00129A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7057  00129E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7058  0012A2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  7059  0012A6  0E02               	movlw	2
  7060  0012A8  26DE               	addwf	postinc2,f,c
  7061  0012AA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  7062  0012AE  0E00               	movlw	0
  7063  0012B0  22DD               	addwfc	postdec2,f,c
  7064  0012B2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7065  0012B6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7066  0012BA  CFDE F094          	movff	postinc2,vfpfcnvrt@ll
  7067  0012BE  CFDD F095          	movff	postdec2,vfpfcnvrt@ll+1
  7068  0012C2  0E00               	movlw	0
  7069  0012C4  BF95               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7070  0012C6  0EFF               	movlw	-1
  7071  0012C8  6F96               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7072  0012CA  6F97               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7073  0012CC  6F98               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7074  0012CE  6F99               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7075  0012D0  6F9A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7076  0012D2  6F9B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7077  0012D4                     
  7078                           ; BSR set to: 0
  7079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7080  0012D4  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  7081  0012D8  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7082  0012DC  C094  F024         	movff	vfpfcnvrt@ll,dtoa@d
  7083  0012E0  C095  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7084  0012E4  C096  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7085  0012E8  C097  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7086  0012EC  C098  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7087  0012F0  C099  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7088  0012F4  C09A  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7089  0012F8  C09B  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7090  0012FC  ECD8  F009         	call	_dtoa	;wreg free
  7091  001300  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  7092  001304  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7093  001308  EFD7  F009         	goto	l1231
  7094  00130C                     l3259:
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7098  00130C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7099  001310  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7100  001314  CFDE FFF6          	movff	postinc2,tblptrl
  7101  001318  CFDD FFF7          	movff	postdec2,tblptrh
  7102  00131C                     	if	0	;tblptru may be non-zero
  7103  00131C                     	endif
  7104  00131C                     	if	0	;tblptru may be non-zero
  7105  00131C                     	endif
  7106  00131C  0008               	tblrd		*
  7107  00131E  50F5               	movf	tablat,w,c
  7108  001320  0A25               	xorlw	37
  7109  001322  A4D8               	btfss	status,2,c
  7110  001324  EF96  F009         	goto	u2661
  7111  001328  EF98  F009         	goto	u2660
  7112  00132C                     u2661:
  7113  00132C  EFAF  F009         	goto	l3269
  7114  001330                     u2660:
  7115  001330                     
  7116                           ; BSR set to: 0
  7117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7118  001330  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7119  001334  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7120  001338  2ADE               	incf	postinc2,f,c
  7121  00133A  0E00               	movlw	0
  7122  00133C  22DD               	addwfc	postdec2,f,c
  7123  00133E                     
  7124                           ; BSR set to: 0
  7125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7126  00133E  0E00               	movlw	0
  7127  001340  6E08               	movwf	(fputc@c+1)^0,c
  7128  001342  0E25               	movlw	37
  7129  001344  6E07               	movwf	fputc@c^0,c
  7130  001346  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7131  00134A  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7132  00134E  EC75  F015         	call	_fputc	;wreg free
  7133  001352                     l3265:
  7134                           
  7135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7136  001352  0E00               	movlw	0
  7137  001354  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7138  001356  0E01               	movlw	1
  7139  001358  6E46               	movwf	?_vfpfcnvrt^0,c
  7140  00135A  EFD7  F009         	goto	l1231
  7141  00135E                     l3269:
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7145  00135E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7146  001362  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7147  001366  2ADE               	incf	postinc2,f,c
  7148  001368  0E00               	movlw	0
  7149  00136A  22DD               	addwfc	postdec2,f,c
  7150  00136C                     
  7151                           ; BSR set to: 0
  7152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7153  00136C  0E00               	movlw	0
  7154  00136E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7155  001370  0E00               	movlw	0
  7156  001372  6E46               	movwf	?_vfpfcnvrt^0,c
  7157  001374  EFD7  F009         	goto	l1231
  7158  001378                     l3275:
  7159                           
  7160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7161  001378  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7162  00137C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7163  001380  CFDE FFF6          	movff	postinc2,tblptrl
  7164  001384  CFDD FFF7          	movff	postdec2,tblptrh
  7165  001388                     	if	0	;tblptru may be non-zero
  7166  001388                     	endif
  7167  001388                     	if	0	;tblptru may be non-zero
  7168  001388                     	endif
  7169  001388  0008               	tblrd		*
  7170  00138A  50F5               	movf	tablat,w,c
  7171  00138C  6E07               	movwf	fputc@c^0,c
  7172  00138E  6A08               	clrf	(fputc@c+1)^0,c
  7173  001390  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7174  001394  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7175  001398  EC75  F015         	call	_fputc	;wreg free
  7176  00139C                     
  7177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7178  00139C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7179  0013A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7180  0013A4  2ADE               	incf	postinc2,f,c
  7181  0013A6  0E00               	movlw	0
  7182  0013A8  22DD               	addwfc	postdec2,f,c
  7183  0013AA  EFA9  F009         	goto	l3265
  7184  0013AE                     l1231:
  7185  0013AE  0012               	return		;funcret
  7186  0013B0                     __end_of_vfpfcnvrt:
  7187                           	callstack 0
  7188                           
  7189 ;; *************** function _dtoa *****************
  7190 ;; Defined at:
  7191 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  7194 ;;		 -> sprintf@f(6), 
  7195 ;;  d               8   35[COMRAM] long long 
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;  n               8   59[COMRAM] long long 
  7198 ;;  i               2   67[COMRAM] int 
  7199 ;;  s               2   57[COMRAM] int 
  7200 ;;  w               2   55[COMRAM] int 
  7201 ;;  p               2   53[COMRAM] int 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  2   33[COMRAM] int 
  7204 ;; Registers used:
  7205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7211 ;;      Params:        10       0       0       0       0       0       0       0       0
  7212 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7213 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7214 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7215 ;;Total ram usage:       36 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    6
  7218 ;; This function calls:
  7219 ;;		___aodiv
  7220 ;;		___aomod
  7221 ;;		_abs
  7222 ;;		_pad
  7223 ;; This function is called by:
  7224 ;;		_vfpfcnvrt
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text41
  7229  0013B0                     __ptext41:
  7230                           	callstack 0
  7231  0013B0                     _dtoa:
  7232                           	callstack 20
  7233  0013B0                     
  7234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7235  0013B0  C024  F03C         	movff	dtoa@d,dtoa@n
  7236  0013B4  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  7237  0013B8  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  7238  0013BC  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  7239  0013C0  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  7240  0013C4  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  7241  0013C8  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  7242  0013CC  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  7243  0013D0                     
  7244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7245  0013D0  BE43               	btfsc	(dtoa@n+7)^0,7,c
  7246  0013D2  EFED  F009         	goto	u2341
  7247  0013D6  EFF0  F009         	goto	u2340
  7248  0013DA                     u2341:
  7249  0013DA  0E01               	movlw	1
  7250  0013DC  EFF1  F009         	goto	u2350
  7251  0013E0                     u2340:
  7252  0013E0  0E00               	movlw	0
  7253  0013E2                     u2350:
  7254  0013E2  6E3A               	movwf	dtoa@s^0,c
  7255  0013E4  6A3B               	clrf	(dtoa@s+1)^0,c
  7256                           
  7257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7258  0013E6  503A               	movf	dtoa@s^0,w,c
  7259  0013E8  103B               	iorwf	(dtoa@s+1)^0,w,c
  7260  0013EA  B4D8               	btfsc	status,2,c
  7261  0013EC  EFFA  F009         	goto	u2361
  7262  0013F0  EFFC  F009         	goto	u2360
  7263  0013F4                     u2361:
  7264  0013F4  EF0C  F00A         	goto	l3093
  7265  0013F8                     u2360:
  7266  0013F8                     
  7267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7268  0013F8  1E43               	comf	(dtoa@n+7)^0,f,c
  7269  0013FA  1E42               	comf	(dtoa@n+6)^0,f,c
  7270  0013FC  1E41               	comf	(dtoa@n+5)^0,f,c
  7271  0013FE  1E40               	comf	(dtoa@n+4)^0,f,c
  7272  001400  1E3F               	comf	(dtoa@n+3)^0,f,c
  7273  001402  1E3E               	comf	(dtoa@n+2)^0,f,c
  7274  001404  1E3D               	comf	(dtoa@n+1)^0,f,c
  7275  001406  6C3C               	negf	dtoa@n^0,c
  7276  001408  0E00               	movlw	0
  7277  00140A  223D               	addwfc	(dtoa@n+1)^0,f,c
  7278  00140C  223E               	addwfc	(dtoa@n+2)^0,f,c
  7279  00140E  223F               	addwfc	(dtoa@n+3)^0,f,c
  7280  001410  2240               	addwfc	(dtoa@n+4)^0,f,c
  7281  001412  2241               	addwfc	(dtoa@n+5)^0,f,c
  7282  001414  2242               	addwfc	(dtoa@n+6)^0,f,c
  7283  001416  2243               	addwfc	(dtoa@n+7)^0,f,c
  7284  001418                     l3093:
  7285                           
  7286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7287  001418  BE54               	btfsc	(_prec+1)^0,7,c
  7288  00141A  EF11  F00A         	goto	u2371
  7289  00141E  EF13  F00A         	goto	u2370
  7290  001422                     u2371:
  7291  001422  EF14  F00A         	goto	l3097
  7292  001426                     u2370:
  7293  001426                     
  7294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7295  001426  9255               	bcf	_flags^0,1,c
  7296  001428                     l3097:
  7297                           
  7298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7299  001428  BE54               	btfsc	(_prec+1)^0,7,c
  7300  00142A  EF21  F00A         	goto	u2380
  7301  00142E  5054               	movf	(_prec+1)^0,w,c
  7302  001430  E106               	bnz	u2381
  7303  001432  0453               	decf	_prec^0,w,c
  7304  001434  B0D8               	btfsc	status,0,c
  7305  001436  EF1F  F00A         	goto	u2381
  7306  00143A  EF21  F00A         	goto	u2380
  7307  00143E                     u2381:
  7308  00143E  EF27  F00A         	goto	l1182
  7309  001442                     u2380:
  7310  001442  0E00               	movlw	0
  7311  001444  6E37               	movwf	(dtoa@p+1)^0,c
  7312  001446  0E01               	movlw	1
  7313  001448  6E36               	movwf	dtoa@p^0,c
  7314  00144A  EF2B  F00A         	goto	l1184
  7315  00144E                     l1182:
  7316  00144E  C053  F036         	movff	_prec,dtoa@p
  7317  001452  C054  F037         	movff	_prec+1,dtoa@p+1
  7318  001456                     l1184:
  7319                           
  7320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7321  001456  C062  F038         	movff	_width,dtoa@w
  7322  00145A  C063  F039         	movff	_width+1,dtoa@w+1
  7323  00145E                     
  7324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7325  00145E  503A               	movf	dtoa@s^0,w,c
  7326  001460  103B               	iorwf	(dtoa@s+1)^0,w,c
  7327  001462  A4D8               	btfss	status,2,c
  7328  001464  EF36  F00A         	goto	u2391
  7329  001468  EF38  F00A         	goto	u2390
  7330  00146C                     u2391:
  7331  00146C  EF3F  F00A         	goto	l3105
  7332  001470                     u2390:
  7333  001470  A455               	btfss	_flags^0,2,c
  7334  001472  EF3D  F00A         	goto	u2401
  7335  001476  EF3F  F00A         	goto	u2400
  7336  00147A                     u2401:
  7337  00147A  EF42  F00A         	goto	l3107
  7338  00147E                     u2400:
  7339  00147E                     l3105:
  7340                           
  7341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  7342  00147E  0638               	decf	dtoa@w^0,f,c
  7343  001480  A0D8               	btfss	status,0,c
  7344  001482  0639               	decf	(dtoa@w+1)^0,f,c
  7345  001484                     l3107:
  7346                           
  7347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7348  001484  0E00               	movlw	0
  7349  001486  6E45               	movwf	(dtoa@i+1)^0,c
  7350  001488  0E1F               	movlw	31
  7351  00148A  6E44               	movwf	dtoa@i^0,c
  7352  00148C                     
  7353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7354  00148C  0E00               	movlw	0
  7355  00148E  0100               	movlb	0	; () banked
  7356  001490  6F83               	movwf	(_dbuf+31)& (0+255),b
  7357                           
  7358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7359  001492  EFC7  F00A         	goto	l3121
  7360  001496                     l3111:
  7361                           
  7362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  7363  001496  0644               	decf	dtoa@i^0,f,c
  7364  001498  A0D8               	btfss	status,0,c
  7365  00149A  0645               	decf	(dtoa@i+1)^0,f,c
  7366  00149C                     
  7367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7368  00149C  0E64               	movlw	low _dbuf
  7369  00149E  2444               	addwf	dtoa@i^0,w,c
  7370  0014A0  6ED9               	movwf	fsr2l,c
  7371  0014A2  0E00               	movlw	high _dbuf
  7372  0014A4  2045               	addwfc	(dtoa@i+1)^0,w,c
  7373  0014A6  6EDA               	movwf	fsr2h,c
  7374  0014A8  C03C  F007         	movff	dtoa@n,___aomod@dividend
  7375  0014AC  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  7376  0014B0  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  7377  0014B4  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  7378  0014B8  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  7379  0014BC  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  7380  0014C0  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  7381  0014C4  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  7382  0014C8  0E0A               	movlw	10
  7383  0014CA  6E0F               	movwf	___aomod@divisor^0,c
  7384  0014CC  0E00               	movlw	0
  7385  0014CE  6E10               	movwf	(___aomod@divisor+1)^0,c
  7386  0014D0  0E00               	movlw	0
  7387  0014D2  6E11               	movwf	(___aomod@divisor+2)^0,c
  7388  0014D4  0E00               	movlw	0
  7389  0014D6  6E12               	movwf	(___aomod@divisor+3)^0,c
  7390  0014D8  0E00               	movlw	0
  7391  0014DA  6E13               	movwf	(___aomod@divisor+4)^0,c
  7392  0014DC  0E00               	movlw	0
  7393  0014DE  6E14               	movwf	(___aomod@divisor+5)^0,c
  7394  0014E0  0E00               	movlw	0
  7395  0014E2  6E15               	movwf	(___aomod@divisor+6)^0,c
  7396  0014E4  0E00               	movlw	0
  7397  0014E6  6E16               	movwf	(___aomod@divisor+7)^0,c
  7398  0014E8  EC28  F011         	call	___aomod	;wreg free
  7399  0014EC  C007  F02C         	movff	?___aomod,??_dtoa
  7400  0014F0  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  7401  0014F4  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  7402  0014F8  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  7403  0014FC  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  7404  001500  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  7405  001504  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  7406  001508  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  7407  00150C  C02C  F019         	movff	??_dtoa,abs@a
  7408  001510  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  7409  001514  EC29  F01B         	call	_abs	;wreg free
  7410  001518  5019               	movf	?_abs^0,w,c
  7411  00151A  0F30               	addlw	48
  7412  00151C  6EDF               	movwf	indf2,c
  7413  00151E                     
  7414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  7415  00151E  0636               	decf	dtoa@p^0,f,c
  7416  001520  A0D8               	btfss	status,0,c
  7417  001522  0637               	decf	(dtoa@p+1)^0,f,c
  7418  001524                     
  7419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  7420  001524  0638               	decf	dtoa@w^0,f,c
  7421  001526  A0D8               	btfss	status,0,c
  7422  001528  0639               	decf	(dtoa@w+1)^0,f,c
  7423  00152A                     
  7424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7425  00152A  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  7426  00152E  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  7427  001532  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  7428  001536  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  7429  00153A  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  7430  00153E  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  7431  001542  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  7432  001546  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  7433  00154A  0E0A               	movlw	10
  7434  00154C  6E0F               	movwf	___aodiv@divisor^0,c
  7435  00154E  0E00               	movlw	0
  7436  001550  6E10               	movwf	(___aodiv@divisor+1)^0,c
  7437  001552  0E00               	movlw	0
  7438  001554  6E11               	movwf	(___aodiv@divisor+2)^0,c
  7439  001556  0E00               	movlw	0
  7440  001558  6E12               	movwf	(___aodiv@divisor+3)^0,c
  7441  00155A  0E00               	movlw	0
  7442  00155C  6E13               	movwf	(___aodiv@divisor+4)^0,c
  7443  00155E  0E00               	movlw	0
  7444  001560  6E14               	movwf	(___aodiv@divisor+5)^0,c
  7445  001562  0E00               	movlw	0
  7446  001564  6E15               	movwf	(___aodiv@divisor+6)^0,c
  7447  001566  0E00               	movlw	0
  7448  001568  6E16               	movwf	(___aodiv@divisor+7)^0,c
  7449  00156A  ECA9  F00F         	call	___aodiv	;wreg free
  7450  00156E  C007  F03C         	movff	?___aodiv,dtoa@n
  7451  001572  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  7452  001576  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  7453  00157A  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  7454  00157E  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  7455  001582  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  7456  001586  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  7457  00158A  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  7458  00158E                     l3121:
  7459                           
  7460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7461  00158E  BE45               	btfsc	(dtoa@i+1)^0,7,c
  7462  001590  EFD2  F00A         	goto	u2411
  7463  001594  5045               	movf	(dtoa@i+1)^0,w,c
  7464  001596  E108               	bnz	u2410
  7465  001598  0444               	decf	dtoa@i^0,w,c
  7466  00159A  A0D8               	btfss	status,0,c
  7467  00159C  EFD2  F00A         	goto	u2411
  7468  0015A0  EFD4  F00A         	goto	u2410
  7469  0015A4                     u2411:
  7470  0015A4  EF04  F00B         	goto	l3131
  7471  0015A8                     u2410:
  7472  0015A8  503C               	movf	dtoa@n^0,w,c
  7473  0015AA  103D               	iorwf	(dtoa@n+1)^0,w,c
  7474  0015AC  103E               	iorwf	(dtoa@n+2)^0,w,c
  7475  0015AE  103F               	iorwf	(dtoa@n+3)^0,w,c
  7476  0015B0  1040               	iorwf	(dtoa@n+4)^0,w,c
  7477  0015B2  1041               	iorwf	(dtoa@n+5)^0,w,c
  7478  0015B4  1042               	iorwf	(dtoa@n+6)^0,w,c
  7479  0015B6  1043               	iorwf	(dtoa@n+7)^0,w,c
  7480  0015B8  A4D8               	btfss	status,2,c
  7481  0015BA  EFE1  F00A         	goto	u2421
  7482  0015BE  EFE3  F00A         	goto	u2420
  7483  0015C2                     u2421:
  7484  0015C2  EF4B  F00A         	goto	l3111
  7485  0015C6                     u2420:
  7486  0015C6  BE37               	btfsc	(dtoa@p+1)^0,7,c
  7487  0015C8  EFF0  F00A         	goto	u2430
  7488  0015CC  5037               	movf	(dtoa@p+1)^0,w,c
  7489  0015CE  E106               	bnz	u2431
  7490  0015D0  0436               	decf	dtoa@p^0,w,c
  7491  0015D2  B0D8               	btfsc	status,0,c
  7492  0015D4  EFEE  F00A         	goto	u2431
  7493  0015D8  EFF0  F00A         	goto	u2430
  7494  0015DC                     u2431:
  7495  0015DC  EF4B  F00A         	goto	l3111
  7496  0015E0                     u2430:
  7497  0015E0  BE39               	btfsc	(dtoa@w+1)^0,7,c
  7498  0015E2  EFFB  F00A         	goto	u2441
  7499  0015E6  5039               	movf	(dtoa@w+1)^0,w,c
  7500  0015E8  E108               	bnz	u2440
  7501  0015EA  0438               	decf	dtoa@w^0,w,c
  7502  0015EC  A0D8               	btfss	status,0,c
  7503  0015EE  EFFB  F00A         	goto	u2441
  7504  0015F2  EFFD  F00A         	goto	u2440
  7505  0015F6                     u2441:
  7506  0015F6  EF04  F00B         	goto	l3131
  7507  0015FA                     u2440:
  7508  0015FA  B255               	btfsc	_flags^0,1,c
  7509  0015FC  EF02  F00B         	goto	u2451
  7510  001600  EF04  F00B         	goto	u2450
  7511  001604                     u2451:
  7512  001604  EF4B  F00A         	goto	l3111
  7513  001608                     u2450:
  7514  001608                     l3131:
  7515                           
  7516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7517  001608  503A               	movf	dtoa@s^0,w,c
  7518  00160A  103B               	iorwf	(dtoa@s+1)^0,w,c
  7519  00160C  A4D8               	btfss	status,2,c
  7520  00160E  EF0B  F00B         	goto	u2461
  7521  001612  EF0D  F00B         	goto	u2460
  7522  001616                     u2461:
  7523  001616  EF14  F00B         	goto	l3135
  7524  00161A                     u2460:
  7525  00161A  A455               	btfss	_flags^0,2,c
  7526  00161C  EF12  F00B         	goto	u2471
  7527  001620  EF14  F00B         	goto	u2470
  7528  001624                     u2471:
  7529  001624  EF32  F00B         	goto	l3145
  7530  001628                     u2470:
  7531  001628                     l3135:
  7532                           
  7533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  7534  001628  0644               	decf	dtoa@i^0,f,c
  7535  00162A  A0D8               	btfss	status,0,c
  7536  00162C  0645               	decf	(dtoa@i+1)^0,f,c
  7537  00162E                     
  7538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7539  00162E  503A               	movf	dtoa@s^0,w,c
  7540  001630  103B               	iorwf	(dtoa@s+1)^0,w,c
  7541  001632  A4D8               	btfss	status,2,c
  7542  001634  EF1E  F00B         	goto	u2481
  7543  001638  EF20  F00B         	goto	u2480
  7544  00163C                     u2481:
  7545  00163C  EF26  F00B         	goto	l3141
  7546  001640                     u2480:
  7547  001640  0E00               	movlw	0
  7548  001642  6E35               	movwf	(_dtoa$2340+1)^0,c
  7549  001644  0E2B               	movlw	43
  7550  001646  6E34               	movwf	_dtoa$2340^0,c
  7551  001648  EF2A  F00B         	goto	l3143
  7552  00164C                     l3141:
  7553  00164C  0E00               	movlw	0
  7554  00164E  6E35               	movwf	(_dtoa$2340+1)^0,c
  7555  001650  0E2D               	movlw	45
  7556  001652  6E34               	movwf	_dtoa$2340^0,c
  7557  001654                     l3143:
  7558  001654  0E64               	movlw	low _dbuf
  7559  001656  2444               	addwf	dtoa@i^0,w,c
  7560  001658  6ED9               	movwf	fsr2l,c
  7561  00165A  0E00               	movlw	high _dbuf
  7562  00165C  2045               	addwfc	(dtoa@i+1)^0,w,c
  7563  00165E  6EDA               	movwf	fsr2h,c
  7564  001660  C034  FFDF         	movff	_dtoa$2340,indf2
  7565  001664                     l3145:
  7566                           
  7567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7568  001664  C022  F017         	movff	dtoa@fp,pad@fp
  7569  001668  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  7570  00166C  0E64               	movlw	low _dbuf
  7571  00166E  2444               	addwf	dtoa@i^0,w,c
  7572  001670  6E19               	movwf	pad@buf^0,c
  7573  001672  0E00               	movlw	high _dbuf
  7574  001674  2045               	addwfc	(dtoa@i+1)^0,w,c
  7575  001676  6E1A               	movwf	(pad@buf+1)^0,c
  7576  001678  C038  F01B         	movff	dtoa@w,pad@p
  7577  00167C  C039  F01C         	movff	dtoa@w+1,pad@p+1
  7578  001680  ECDA  F015         	call	_pad	;wreg free
  7579  001684  C017  F022         	movff	?_pad,?_dtoa
  7580  001688  C018  F023         	movff	?_pad+1,?_dtoa+1
  7581  00168C  0012               	return		;funcret
  7582  00168E                     __end_of_dtoa:
  7583                           	callstack 0
  7584                           
  7585 ;; *************** function _pad *****************
  7586 ;; Defined at:
  7587 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  7590 ;;		 -> sprintf@f(6), 
  7591 ;;  buf             2   24[COMRAM] PTR unsigned char 
  7592 ;;		 -> dbuf(32), 
  7593 ;;  p               2   26[COMRAM] int 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  w               2   31[COMRAM] int 
  7596 ;;  i               2   29[COMRAM] int 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  2   22[COMRAM] int 
  7599 ;; Registers used:
  7600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7606 ;;      Params:         6       0       0       0       0       0       0       0       0
  7607 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7608 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7609 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7610 ;;Total ram usage:       11 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    5
  7613 ;; This function calls:
  7614 ;;		_fputc
  7615 ;;		_fputs
  7616 ;;		_strlen
  7617 ;; This function is called by:
  7618 ;;		_dtoa
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text42
  7623  002BB4                     __ptext42:
  7624                           	callstack 0
  7625  002BB4                     _pad:
  7626                           	callstack 20
  7627  002BB4                     
  7628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7629  002BB4  A055               	btfss	_flags^0,0,c
  7630  002BB6  EFDF  F015         	goto	u2251
  7631  002BBA  EFE1  F015         	goto	u2250
  7632  002BBE                     u2251:
  7633  002BBE  EFEB  F015         	goto	l3049
  7634  002BC2                     u2250:
  7635  002BC2                     
  7636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7637  002BC2  C019  F010         	movff	pad@buf,fputs@s
  7638  002BC6  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7639  002BCA  C017  F012         	movff	pad@fp,fputs@fp
  7640  002BCE  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7641  002BD2  EC07  F01B         	call	_fputs	;wreg free
  7642  002BD6                     l3049:
  7643                           
  7644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7645  002BD6  BE1C               	btfsc	(pad@p+1)^0,7,c
  7646  002BD8  EFF0  F015         	goto	u2261
  7647  002BDC  EFF2  F015         	goto	u2260
  7648  002BE0                     u2261:
  7649  002BE0  EFF8  F015         	goto	l3053
  7650  002BE4                     u2260:
  7651  002BE4  C01B  F020         	movff	pad@p,pad@w
  7652  002BE8  C01C  F021         	movff	pad@p+1,pad@w+1
  7653  002BEC  EFFC  F015         	goto	l1171
  7654  002BF0                     l3053:
  7655  002BF0  0E00               	movlw	0
  7656  002BF2  6E21               	movwf	(pad@w+1)^0,c
  7657  002BF4  0E00               	movlw	0
  7658  002BF6  6E20               	movwf	pad@w^0,c
  7659  002BF8                     l1171:
  7660                           
  7661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7662  002BF8  0E00               	movlw	0
  7663  002BFA  6E1F               	movwf	(pad@i+1)^0,c
  7664  002BFC  0E00               	movlw	0
  7665  002BFE  6E1E               	movwf	pad@i^0,c
  7666                           
  7667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7668  002C00  EF0E  F016         	goto	l3059
  7669  002C04                     l3055:
  7670                           
  7671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7672  002C04  0E00               	movlw	0
  7673  002C06  6E08               	movwf	(fputc@c+1)^0,c
  7674  002C08  0E20               	movlw	32
  7675  002C0A  6E07               	movwf	fputc@c^0,c
  7676  002C0C  C017  F009         	movff	pad@fp,fputc@fp
  7677  002C10  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  7678  002C14  EC75  F015         	call	_fputc	;wreg free
  7679  002C18                     
  7680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7681  002C18  4A1E               	infsnz	pad@i^0,f,c
  7682  002C1A  2A1F               	incf	(pad@i+1)^0,f,c
  7683  002C1C                     l3059:
  7684                           
  7685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7686  002C1C  5020               	movf	pad@w^0,w,c
  7687  002C1E  5C1E               	subwf	pad@i^0,w,c
  7688  002C20  501F               	movf	(pad@i+1)^0,w,c
  7689  002C22  0A80               	xorlw	128
  7690  002C24  6E1D               	movwf	??_pad^0,c
  7691  002C26  5021               	movf	(pad@w+1)^0,w,c
  7692  002C28  0A80               	xorlw	128
  7693  002C2A  581D               	subwfb	??_pad^0,w,c
  7694  002C2C  A0D8               	btfss	status,0,c
  7695  002C2E  EF1B  F016         	goto	u2271
  7696  002C32  EF1D  F016         	goto	u2270
  7697  002C36                     u2271:
  7698  002C36  EF02  F016         	goto	l3055
  7699  002C3A                     u2270:
  7700  002C3A                     
  7701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7702  002C3A  B055               	btfsc	_flags^0,0,c
  7703  002C3C  EF22  F016         	goto	u2281
  7704  002C40  EF24  F016         	goto	u2280
  7705  002C44                     u2281:
  7706  002C44  EF2E  F016         	goto	l3063
  7707  002C48                     u2280:
  7708  002C48                     
  7709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7710  002C48  C019  F010         	movff	pad@buf,fputs@s
  7711  002C4C  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7712  002C50  C017  F012         	movff	pad@fp,fputs@fp
  7713  002C54  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7714  002C58  EC07  F01B         	call	_fputs	;wreg free
  7715  002C5C                     l3063:
  7716                           
  7717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7718  002C5C  C019  F007         	movff	pad@buf,strlen@s
  7719  002C60  C01A  F008         	movff	pad@buf+1,strlen@s+1
  7720  002C64  EC83  F01B         	call	_strlen	;wreg free
  7721  002C68  5020               	movf	pad@w^0,w,c
  7722  002C6A  2407               	addwf	?_strlen^0,w,c
  7723  002C6C  6E17               	movwf	?_pad^0,c
  7724  002C6E  5021               	movf	(pad@w+1)^0,w,c
  7725  002C70  2008               	addwfc	(?_strlen+1)^0,w,c
  7726  002C72  6E18               	movwf	(?_pad+1)^0,c
  7727  002C74  0012               	return		;funcret
  7728  002C76                     __end_of_pad:
  7729                           	callstack 0
  7730                           
  7731 ;; *************** function _strlen *****************
  7732 ;; Defined at:
  7733 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7736 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;  a               2    8[COMRAM] PTR const unsigned char 
  7739 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  2    6[COMRAM] unsigned int 
  7742 ;; Registers used:
  7743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7749 ;;      Params:         2       0       0       0       0       0       0       0       0
  7750 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7752 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7753 ;;Total ram usage:        4 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:    2
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_sendData
  7760 ;;		_pad
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text43
  7765  003706                     __ptext43:
  7766                           	callstack 0
  7767  003706                     _strlen:
  7768                           	callstack 22
  7769  003706  C007  F009         	movff	strlen@s,strlen@a
  7770  00370A  C008  F00A         	movff	strlen@s+1,strlen@a+1
  7771  00370E  EF8B  F01B         	goto	l2945
  7772  003712                     l2943:
  7773  003712  4A07               	infsnz	strlen@s^0,f,c
  7774  003714  2A08               	incf	(strlen@s+1)^0,f,c
  7775  003716                     l2945:
  7776  003716  C007  FFD9         	movff	strlen@s,fsr2l
  7777  00371A  C008  FFDA         	movff	strlen@s+1,fsr2h
  7778  00371E  50DF               	movf	indf2,w,c
  7779  003720  A4D8               	btfss	status,2,c
  7780  003722  EF95  F01B         	goto	u2101
  7781  003726  EF97  F01B         	goto	u2100
  7782  00372A                     u2101:
  7783  00372A  EF89  F01B         	goto	l2943
  7784  00372E                     u2100:
  7785  00372E  5009               	movf	strlen@a^0,w,c
  7786  003730  5C07               	subwf	strlen@s^0,w,c
  7787  003732  6E07               	movwf	?_strlen^0,c
  7788  003734  500A               	movf	(strlen@a+1)^0,w,c
  7789  003736  5808               	subwfb	(strlen@s+1)^0,w,c
  7790  003738  6E08               	movwf	(?_strlen+1)^0,c
  7791  00373A  0012               	return		;funcret
  7792  00373C                     __end_of_strlen:
  7793                           	callstack 0
  7794                           
  7795 ;; *************** function _fputs *****************
  7796 ;; Defined at:
  7797 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7800 ;;		 -> dbuf(32), 
  7801 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7802 ;;		 -> sprintf@f(6), 
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;  i               2   20[COMRAM] int 
  7805 ;;  c               1   19[COMRAM] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  2   15[COMRAM] int 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7815 ;;      Params:         4       0       0       0       0       0       0       0       0
  7816 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7818 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7819 ;;Total ram usage:        7 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    4
  7822 ;; This function calls:
  7823 ;;		_fputc
  7824 ;; This function is called by:
  7825 ;;		_pad
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text44
  7830  00360E                     __ptext44:
  7831                           	callstack 0
  7832  00360E                     _fputs:
  7833                           	callstack 20
  7834  00360E  0E00               	movlw	0
  7835  003610  6E16               	movwf	(fputs@i+1)^0,c
  7836  003612  0E00               	movlw	0
  7837  003614  6E15               	movwf	fputs@i^0,c
  7838  003616  EF18  F01B         	goto	l2957
  7839  00361A                     l2953:
  7840  00361A  C014  F007         	movff	fputs@c,fputc@c
  7841  00361E  6A08               	clrf	(fputc@c+1)^0,c
  7842  003620  C012  F009         	movff	fputs@fp,fputc@fp
  7843  003624  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  7844  003628  EC75  F015         	call	_fputc	;wreg free
  7845  00362C  4A15               	infsnz	fputs@i^0,f,c
  7846  00362E  2A16               	incf	(fputs@i+1)^0,f,c
  7847  003630                     l2957:
  7848  003630  5015               	movf	fputs@i^0,w,c
  7849  003632  2410               	addwf	fputs@s^0,w,c
  7850  003634  6ED9               	movwf	fsr2l,c
  7851  003636  5016               	movf	(fputs@i+1)^0,w,c
  7852  003638  2011               	addwfc	(fputs@s+1)^0,w,c
  7853  00363A  6EDA               	movwf	fsr2h,c
  7854  00363C  50DF               	movf	indf2,w,c
  7855  00363E  6E14               	movwf	fputs@c^0,c
  7856  003640  5014               	movf	fputs@c^0,w,c
  7857  003642  A4D8               	btfss	status,2,c
  7858  003644  EF26  F01B         	goto	u2111
  7859  003648  EF28  F01B         	goto	u2110
  7860  00364C                     u2111:
  7861  00364C  EF0D  F01B         	goto	l2953
  7862  003650                     u2110:
  7863  003650  0012               	return		;funcret
  7864  003652                     __end_of_fputs:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function _fputc *****************
  7868 ;; Defined at:
  7869 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  c               2    6[COMRAM] int 
  7872 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  7873 ;;		 -> sprintf@f(6), 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  2    6[COMRAM] int 
  7878 ;; Registers used:
  7879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7885 ;;      Params:         4       0       0       0       0       0       0       0       0
  7886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7887 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7888 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7889 ;;Total ram usage:        9 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    3
  7892 ;; This function calls:
  7893 ;;		_putch
  7894 ;; This function is called by:
  7895 ;;		_pad
  7896 ;;		_vfpfcnvrt
  7897 ;;		_fputs
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text45
  7902  002AEA                     __ptext45:
  7903                           	callstack 0
  7904  002AEA                     _fputc:
  7905                           	callstack 23
  7906  002AEA  5009               	movf	fputc@fp^0,w,c
  7907  002AEC  100A               	iorwf	(fputc@fp+1)^0,w,c
  7908  002AEE  B4D8               	btfsc	status,2,c
  7909  002AF0  EF7C  F015         	goto	u2061
  7910  002AF4  EF7E  F015         	goto	u2060
  7911  002AF8                     u2061:
  7912  002AF8  EF87  F015         	goto	l2931
  7913  002AFC                     u2060:
  7914  002AFC  5009               	movf	fputc@fp^0,w,c
  7915  002AFE  100A               	iorwf	(fputc@fp+1)^0,w,c
  7916  002B00  A4D8               	btfss	status,2,c
  7917  002B02  EF85  F015         	goto	u2071
  7918  002B06  EF87  F015         	goto	u2070
  7919  002B0A                     u2071:
  7920  002B0A  EF8C  F015         	goto	l2933
  7921  002B0E                     u2070:
  7922  002B0E                     l2931:
  7923  002B0E  5007               	movf	fputc@c^0,w,c
  7924  002B10  EC2F  F01C         	call	_putch
  7925  002B14  EFD9  F015         	goto	l1302
  7926  002B18                     l2933:
  7927  002B18  EE20 F004          	lfsr	2,4
  7928  002B1C  5009               	movf	fputc@fp^0,w,c
  7929  002B1E  26D9               	addwf	fsr2l,f,c
  7930  002B20  500A               	movf	(fputc@fp+1)^0,w,c
  7931  002B22  22DA               	addwfc	fsr2h,f,c
  7932  002B24  50DE               	movf	postinc2,w,c
  7933  002B26  10DE               	iorwf	postinc2,w,c
  7934  002B28  B4D8               	btfsc	status,2,c
  7935  002B2A  EF99  F015         	goto	u2081
  7936  002B2E  EF9B  F015         	goto	u2080
  7937  002B32                     u2081:
  7938  002B32  EFB6  F015         	goto	l2937
  7939  002B36                     u2080:
  7940  002B36  EE20 F004          	lfsr	2,4
  7941  002B3A  5009               	movf	fputc@fp^0,w,c
  7942  002B3C  26D9               	addwf	fsr2l,f,c
  7943  002B3E  500A               	movf	(fputc@fp+1)^0,w,c
  7944  002B40  22DA               	addwfc	fsr2h,f,c
  7945  002B42  EE10 F002          	lfsr	1,2
  7946  002B46  5009               	movf	fputc@fp^0,w,c
  7947  002B48  26E1               	addwf	fsr1l,f,c
  7948  002B4A  500A               	movf	(fputc@fp+1)^0,w,c
  7949  002B4C  22E2               	addwfc	fsr1h,f,c
  7950  002B4E  50DE               	movf	postinc2,w,c
  7951  002B50  5CE6               	subwf	postinc1,w,c
  7952  002B52  50E6               	movf	postinc1,w,c
  7953  002B54  0A80               	xorlw	128
  7954  002B56  6E0F               	movwf	(??_fputc+4)^0,c
  7955  002B58  50DE               	movf	postinc2,w,c
  7956  002B5A  0A80               	xorlw	128
  7957  002B5C  580F               	subwfb	(??_fputc+4)^0,w,c
  7958  002B5E  B0D8               	btfsc	status,0,c
  7959  002B60  EFB4  F015         	goto	u2091
  7960  002B64  EFB6  F015         	goto	u2090
  7961  002B68                     u2091:
  7962  002B68  EFD9  F015         	goto	l1302
  7963  002B6C                     u2090:
  7964  002B6C                     l2937:
  7965  002B6C  EE20 F002          	lfsr	2,2
  7966  002B70  5009               	movf	fputc@fp^0,w,c
  7967  002B72  26D9               	addwf	fsr2l,f,c
  7968  002B74  500A               	movf	(fputc@fp+1)^0,w,c
  7969  002B76  22DA               	addwfc	fsr2h,f,c
  7970  002B78  CFDE F00B          	movff	postinc2,??_fputc
  7971  002B7C  CFDD F00C          	movff	postdec2,??_fputc+1
  7972  002B80  C009  FFD9         	movff	fputc@fp,fsr2l
  7973  002B84  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  7974  002B88  CFDE F00D          	movff	postinc2,??_fputc+2
  7975  002B8C  CFDD F00E          	movff	postdec2,??_fputc+3
  7976  002B90  500B               	movf	??_fputc^0,w,c
  7977  002B92  240D               	addwf	(??_fputc+2)^0,w,c
  7978  002B94  6ED9               	movwf	fsr2l,c
  7979  002B96  500C               	movf	(??_fputc+1)^0,w,c
  7980  002B98  200E               	addwfc	(??_fputc+3)^0,w,c
  7981  002B9A  6EDA               	movwf	fsr2h,c
  7982  002B9C  C007  FFDF         	movff	fputc@c,indf2
  7983  002BA0  EE20 F002          	lfsr	2,2
  7984  002BA4  5009               	movf	fputc@fp^0,w,c
  7985  002BA6  26D9               	addwf	fsr2l,f,c
  7986  002BA8  500A               	movf	(fputc@fp+1)^0,w,c
  7987  002BAA  22DA               	addwfc	fsr2h,f,c
  7988  002BAC  2ADE               	incf	postinc2,f,c
  7989  002BAE  0E00               	movlw	0
  7990  002BB0  22DD               	addwfc	postdec2,f,c
  7991  002BB2                     l1302:
  7992  002BB2  0012               	return		;funcret
  7993  002BB4                     __end_of_fputc:
  7994                           	callstack 0
  7995                           
  7996 ;; *************** function _putch *****************
  7997 ;; Defined at:
  7998 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  c               1    wreg     unsigned char 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  c               1    0[COMRAM] unsigned char 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  1    wreg      void 
  8005 ;; Registers used:
  8006 ;;		wreg
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8012 ;;      Params:         0       0       0       0       0       0       0       0       0
  8013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8015 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8016 ;;Total ram usage:        0 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    2
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_fputc
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text46
  8027  00385E                     __ptext46:
  8028                           	callstack 0
  8029  00385E                     _putch:
  8030                           	callstack 23
  8031  00385E  0012               	return		;funcret
  8032  003860                     __end_of_putch:
  8033                           	callstack 0
  8034                           
  8035 ;; *************** function _abs *****************
  8036 ;; Defined at:
  8037 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  a               2   24[COMRAM] int 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  2   24[COMRAM] int 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8051 ;;      Params:         2       0       0       0       0       0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8053 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8054 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8055 ;;Total ram usage:        4 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    2
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_dtoa
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text47
  8066  003652                     __ptext47:
  8067                           	callstack 0
  8068  003652                     _abs:
  8069                           	callstack 23
  8070  003652  BE1A               	btfsc	(abs@a+1)^0,7,c
  8071  003654  EF36  F01B         	goto	u2290
  8072  003658  501A               	movf	(abs@a+1)^0,w,c
  8073  00365A  E106               	bnz	u2291
  8074  00365C  0419               	decf	abs@a^0,w,c
  8075  00365E  B0D8               	btfsc	status,0,c
  8076  003660  EF34  F01B         	goto	u2291
  8077  003664  EF36  F01B         	goto	u2290
  8078  003668                     u2291:
  8079  003668  EF44  F01B         	goto	l1242
  8080  00366C                     u2290:
  8081  00366C  C019  F01B         	movff	abs@a,??_abs
  8082  003670  C01A  F01C         	movff	abs@a+1,??_abs+1
  8083  003674  1E1B               	comf	??_abs^0,f,c
  8084  003676  1E1C               	comf	(??_abs+1)^0,f,c
  8085  003678  4A1B               	infsnz	??_abs^0,f,c
  8086  00367A  2A1C               	incf	(??_abs+1)^0,f,c
  8087  00367C  C01B  F019         	movff	??_abs,?_abs
  8088  003680  C01C  F01A         	movff	??_abs+1,?_abs+1
  8089  003684  EF48  F01B         	goto	l1245
  8090  003688                     l1242:
  8091  003688  C019  F019         	movff	abs@a,?_abs
  8092  00368C  C01A  F01A         	movff	abs@a+1,?_abs+1
  8093  003690                     l1245:
  8094  003690  0012               	return		;funcret
  8095  003692                     __end_of_abs:
  8096                           	callstack 0
  8097                           
  8098 ;; *************** function ___aomod *****************
  8099 ;; Defined at:
  8100 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;  dividend        8    6[COMRAM] long long 
  8103 ;;  divisor         8   14[COMRAM] long long 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  sign            1   23[COMRAM] unsigned char 
  8106 ;;  counter         1   22[COMRAM] unsigned char 
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  8    6[COMRAM] long long 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2, status,0
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8116 ;;      Params:        16       0       0       0       0       0       0       0       0
  8117 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8119 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8120 ;;Total ram usage:       18 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    2
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		_dtoa
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           	psect	text48
  8131  002250                     __ptext48:
  8132                           	callstack 0
  8133  002250                     ___aomod:
  8134                           	callstack 23
  8135  002250  0E00               	movlw	0
  8136  002252  6E18               	movwf	___aomod@sign^0,c
  8137  002254  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  8138  002256  EF31  F011         	goto	u2190
  8139  00225A  EF2F  F011         	goto	u2191
  8140  00225E                     u2191:
  8141  00225E  EF43  F011         	goto	l3017
  8142  002262                     u2190:
  8143  002262  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8144  002264  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8145  002266  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8146  002268  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8147  00226A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8148  00226C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8149  00226E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8150  002270  6C07               	negf	___aomod@dividend^0,c
  8151  002272  0E00               	movlw	0
  8152  002274  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8153  002276  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8154  002278  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8155  00227A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8156  00227C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8157  00227E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8158  002280  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8159  002282  0E01               	movlw	1
  8160  002284  6E18               	movwf	___aomod@sign^0,c
  8161  002286                     l3017:
  8162  002286  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  8163  002288  EF4A  F011         	goto	u2200
  8164  00228C  EF48  F011         	goto	u2201
  8165  002290                     u2201:
  8166  002290  EF5A  F011         	goto	l3021
  8167  002294                     u2200:
  8168  002294  1E16               	comf	(___aomod@divisor+7)^0,f,c
  8169  002296  1E15               	comf	(___aomod@divisor+6)^0,f,c
  8170  002298  1E14               	comf	(___aomod@divisor+5)^0,f,c
  8171  00229A  1E13               	comf	(___aomod@divisor+4)^0,f,c
  8172  00229C  1E12               	comf	(___aomod@divisor+3)^0,f,c
  8173  00229E  1E11               	comf	(___aomod@divisor+2)^0,f,c
  8174  0022A0  1E10               	comf	(___aomod@divisor+1)^0,f,c
  8175  0022A2  6C0F               	negf	___aomod@divisor^0,c
  8176  0022A4  0E00               	movlw	0
  8177  0022A6  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  8178  0022A8  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  8179  0022AA  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  8180  0022AC  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  8181  0022AE  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  8182  0022B0  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  8183  0022B2  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  8184  0022B4                     l3021:
  8185  0022B4  500F               	movf	___aomod@divisor^0,w,c
  8186  0022B6  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  8187  0022B8  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  8188  0022BA  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  8189  0022BC  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  8190  0022BE  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  8191  0022C0  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  8192  0022C2  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  8193  0022C4  B4D8               	btfsc	status,2,c
  8194  0022C6  EF67  F011         	goto	u2211
  8195  0022CA  EF69  F011         	goto	u2210
  8196  0022CE                     u2211:
  8197  0022CE  EFB1  F011         	goto	l3037
  8198  0022D2                     u2210:
  8199  0022D2  0E01               	movlw	1
  8200  0022D4  6E17               	movwf	___aomod@counter^0,c
  8201  0022D6  EF77  F011         	goto	l3027
  8202  0022DA                     l3025:
  8203  0022DA  90D8               	bcf	status,0,c
  8204  0022DC  360F               	rlcf	___aomod@divisor^0,f,c
  8205  0022DE  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  8206  0022E0  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  8207  0022E2  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  8208  0022E4  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  8209  0022E6  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  8210  0022E8  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  8211  0022EA  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  8212  0022EC  2A17               	incf	___aomod@counter^0,f,c
  8213  0022EE                     l3027:
  8214  0022EE  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  8215  0022F0  EF7C  F011         	goto	u2221
  8216  0022F4  EF7E  F011         	goto	u2220
  8217  0022F8                     u2221:
  8218  0022F8  EF6D  F011         	goto	l3025
  8219  0022FC                     u2220:
  8220  0022FC                     l3029:
  8221  0022FC  500F               	movf	___aomod@divisor^0,w,c
  8222  0022FE  5C07               	subwf	___aomod@dividend^0,w,c
  8223  002300  5010               	movf	(___aomod@divisor+1)^0,w,c
  8224  002302  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  8225  002304  5011               	movf	(___aomod@divisor+2)^0,w,c
  8226  002306  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  8227  002308  5012               	movf	(___aomod@divisor+3)^0,w,c
  8228  00230A  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  8229  00230C  5013               	movf	(___aomod@divisor+4)^0,w,c
  8230  00230E  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  8231  002310  5014               	movf	(___aomod@divisor+5)^0,w,c
  8232  002312  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  8233  002314  5015               	movf	(___aomod@divisor+6)^0,w,c
  8234  002316  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  8235  002318  5016               	movf	(___aomod@divisor+7)^0,w,c
  8236  00231A  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  8237  00231C  A0D8               	btfss	status,0,c
  8238  00231E  EF93  F011         	goto	u2231
  8239  002322  EF95  F011         	goto	u2230
  8240  002326                     u2231:
  8241  002326  EFA5  F011         	goto	l3033
  8242  00232A                     u2230:
  8243  00232A  500F               	movf	___aomod@divisor^0,w,c
  8244  00232C  5E07               	subwf	___aomod@dividend^0,f,c
  8245  00232E  5010               	movf	(___aomod@divisor+1)^0,w,c
  8246  002330  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  8247  002332  5011               	movf	(___aomod@divisor+2)^0,w,c
  8248  002334  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  8249  002336  5012               	movf	(___aomod@divisor+3)^0,w,c
  8250  002338  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  8251  00233A  5013               	movf	(___aomod@divisor+4)^0,w,c
  8252  00233C  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  8253  00233E  5014               	movf	(___aomod@divisor+5)^0,w,c
  8254  002340  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  8255  002342  5015               	movf	(___aomod@divisor+6)^0,w,c
  8256  002344  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  8257  002346  5016               	movf	(___aomod@divisor+7)^0,w,c
  8258  002348  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  8259  00234A                     l3033:
  8260  00234A  90D8               	bcf	status,0,c
  8261  00234C  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  8262  00234E  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  8263  002350  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  8264  002352  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  8265  002354  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  8266  002356  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  8267  002358  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  8268  00235A  320F               	rrcf	___aomod@divisor^0,f,c
  8269  00235C  2E17               	decfsz	___aomod@counter^0,f,c
  8270  00235E  EF7E  F011         	goto	l3029
  8271  002362                     l3037:
  8272  002362  5018               	movf	___aomod@sign^0,w,c
  8273  002364  B4D8               	btfsc	status,2,c
  8274  002366  EFB7  F011         	goto	u2241
  8275  00236A  EFB9  F011         	goto	u2240
  8276  00236E                     u2241:
  8277  00236E  EFC9  F011         	goto	l3041
  8278  002372                     u2240:
  8279  002372  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8280  002374  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8281  002376  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8282  002378  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8283  00237A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8284  00237C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8285  00237E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8286  002380  6C07               	negf	___aomod@dividend^0,c
  8287  002382  0E00               	movlw	0
  8288  002384  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8289  002386  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8290  002388  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8291  00238A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8292  00238C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8293  00238E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8294  002390  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8295  002392                     l3041:
  8296  002392  C007  F007         	movff	___aomod@dividend,?___aomod
  8297  002396  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  8298  00239A  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  8299  00239E  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  8300  0023A2  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  8301  0023A6  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  8302  0023AA  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  8303  0023AE  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  8304  0023B2  0012               	return		;funcret
  8305  0023B4                     __end_of___aomod:
  8306                           	callstack 0
  8307                           
  8308 ;; *************** function ___aodiv *****************
  8309 ;; Defined at:
  8310 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  dividend        8    6[COMRAM] long long 
  8313 ;;  divisor         8   14[COMRAM] long long 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;  quotient        8   24[COMRAM] long long 
  8316 ;;  sign            1   23[COMRAM] unsigned char 
  8317 ;;  counter         1   22[COMRAM] unsigned char 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  8    6[COMRAM] long long 
  8320 ;; Registers used:
  8321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8327 ;;      Params:        16       0       0       0       0       0       0       0       0
  8328 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8330 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8331 ;;Total ram usage:       26 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; Hardware stack levels required when called:    2
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_dtoa
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text49
  8342  001F52                     __ptext49:
  8343                           	callstack 0
  8344  001F52                     ___aodiv:
  8345                           	callstack 23
  8346  001F52  0E00               	movlw	0
  8347  001F54  6E18               	movwf	___aodiv@sign^0,c
  8348  001F56  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  8349  001F58  EFB2  F00F         	goto	u2120
  8350  001F5C  EFB0  F00F         	goto	u2121
  8351  001F60                     u2121:
  8352  001F60  EFC4  F00F         	goto	l2973
  8353  001F64                     u2120:
  8354  001F64  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  8355  001F66  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  8356  001F68  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  8357  001F6A  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  8358  001F6C  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  8359  001F6E  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  8360  001F70  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  8361  001F72  6C0F               	negf	___aodiv@divisor^0,c
  8362  001F74  0E00               	movlw	0
  8363  001F76  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  8364  001F78  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  8365  001F7A  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  8366  001F7C  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  8367  001F7E  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  8368  001F80  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  8369  001F82  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  8370  001F84  0E01               	movlw	1
  8371  001F86  6E18               	movwf	___aodiv@sign^0,c
  8372  001F88                     l2973:
  8373  001F88  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  8374  001F8A  EFCB  F00F         	goto	u2130
  8375  001F8E  EFC9  F00F         	goto	u2131
  8376  001F92                     u2131:
  8377  001F92  EFDD  F00F         	goto	l2979
  8378  001F96                     u2130:
  8379  001F96  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  8380  001F98  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  8381  001F9A  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  8382  001F9C  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  8383  001F9E  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  8384  001FA0  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  8385  001FA2  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  8386  001FA4  6C07               	negf	___aodiv@dividend^0,c
  8387  001FA6  0E00               	movlw	0
  8388  001FA8  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  8389  001FAA  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  8390  001FAC  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  8391  001FAE  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  8392  001FB0  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  8393  001FB2  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  8394  001FB4  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  8395  001FB6  0E01               	movlw	1
  8396  001FB8  1A18               	xorwf	___aodiv@sign^0,f,c
  8397  001FBA                     l2979:
  8398  001FBA  EE20  F019         	lfsr	2,___aodiv@quotient
  8399  001FBE  0E07               	movlw	7
  8400  001FC0                     u2141:
  8401  001FC0  6ADE               	clrf	postinc2,c
  8402  001FC2  06E8               	decf	wreg,f,c
  8403  001FC4  E2FD               	bc	u2141
  8404  001FC6  500F               	movf	___aodiv@divisor^0,w,c
  8405  001FC8  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  8406  001FCA  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  8407  001FCC  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  8408  001FCE  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  8409  001FD0  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  8410  001FD2  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  8411  001FD4  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  8412  001FD6  B4D8               	btfsc	status,2,c
  8413  001FD8  EFF0  F00F         	goto	u2151
  8414  001FDC  EFF2  F00F         	goto	u2150
  8415  001FE0                     u2151:
  8416  001FE0  EF44  F010         	goto	l3001
  8417  001FE4                     u2150:
  8418  001FE4  0E01               	movlw	1
  8419  001FE6  6E17               	movwf	___aodiv@counter^0,c
  8420  001FE8  EF00  F010         	goto	l2987
  8421  001FEC                     l2985:
  8422  001FEC  90D8               	bcf	status,0,c
  8423  001FEE  360F               	rlcf	___aodiv@divisor^0,f,c
  8424  001FF0  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  8425  001FF2  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  8426  001FF4  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  8427  001FF6  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  8428  001FF8  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  8429  001FFA  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  8430  001FFC  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  8431  001FFE  2A17               	incf	___aodiv@counter^0,f,c
  8432  002000                     l2987:
  8433  002000  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  8434  002002  EF05  F010         	goto	u2161
  8435  002006  EF07  F010         	goto	u2160
  8436  00200A                     u2161:
  8437  00200A  EFF6  F00F         	goto	l2985
  8438  00200E                     u2160:
  8439  00200E                     l2989:
  8440  00200E  90D8               	bcf	status,0,c
  8441  002010  3619               	rlcf	___aodiv@quotient^0,f,c
  8442  002012  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  8443  002014  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  8444  002016  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  8445  002018  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  8446  00201A  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  8447  00201C  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  8448  00201E  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  8449  002020  500F               	movf	___aodiv@divisor^0,w,c
  8450  002022  5C07               	subwf	___aodiv@dividend^0,w,c
  8451  002024  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8452  002026  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  8453  002028  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8454  00202A  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  8455  00202C  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8456  00202E  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  8457  002030  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8458  002032  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  8459  002034  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8460  002036  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  8461  002038  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8462  00203A  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  8463  00203C  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8464  00203E  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  8465  002040  A0D8               	btfss	status,0,c
  8466  002042  EF25  F010         	goto	u2171
  8467  002046  EF27  F010         	goto	u2170
  8468  00204A                     u2171:
  8469  00204A  EF38  F010         	goto	l2997
  8470  00204E                     u2170:
  8471  00204E  500F               	movf	___aodiv@divisor^0,w,c
  8472  002050  5E07               	subwf	___aodiv@dividend^0,f,c
  8473  002052  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8474  002054  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  8475  002056  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8476  002058  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  8477  00205A  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8478  00205C  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  8479  00205E  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8480  002060  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  8481  002062  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8482  002064  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  8483  002066  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8484  002068  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  8485  00206A  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8486  00206C  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  8487  00206E  8019               	bsf	___aodiv@quotient^0,0,c
  8488  002070                     l2997:
  8489  002070  90D8               	bcf	status,0,c
  8490  002072  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  8491  002074  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  8492  002076  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  8493  002078  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  8494  00207A  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  8495  00207C  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  8496  00207E  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  8497  002080  320F               	rrcf	___aodiv@divisor^0,f,c
  8498  002082  2E17               	decfsz	___aodiv@counter^0,f,c
  8499  002084  EF07  F010         	goto	l2989
  8500  002088                     l3001:
  8501  002088  5018               	movf	___aodiv@sign^0,w,c
  8502  00208A  B4D8               	btfsc	status,2,c
  8503  00208C  EF4A  F010         	goto	u2181
  8504  002090  EF4C  F010         	goto	u2180
  8505  002094                     u2181:
  8506  002094  EF5C  F010         	goto	l3005
  8507  002098                     u2180:
  8508  002098  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  8509  00209A  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  8510  00209C  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  8511  00209E  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  8512  0020A0  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  8513  0020A2  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  8514  0020A4  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  8515  0020A6  6C19               	negf	___aodiv@quotient^0,c
  8516  0020A8  0E00               	movlw	0
  8517  0020AA  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  8518  0020AC  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  8519  0020AE  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  8520  0020B0  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  8521  0020B2  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  8522  0020B4  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  8523  0020B6  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  8524  0020B8                     l3005:
  8525  0020B8  C019  F007         	movff	___aodiv@quotient,?___aodiv
  8526  0020BC  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  8527  0020C0  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  8528  0020C4  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  8529  0020C8  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  8530  0020CC  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  8531  0020D0  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  8532  0020D4  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  8533  0020D8  0012               	return		;funcret
  8534  0020DA                     __end_of___aodiv:
  8535                           	callstack 0
  8536                           
  8537 ;; *************** function _atoi *****************
  8538 ;; Defined at:
  8539 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8542 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  8543 ;;		 -> STR_1(14), 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;  n               2   26[COMRAM] int 
  8546 ;;  neg             2   19[COMRAM] int 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  2   13[COMRAM] int 
  8549 ;; Registers used:
  8550 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8556 ;;      Params:         2       0       0       0       0       0       0       0       0
  8557 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8558 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8559 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8560 ;;Total ram usage:       15 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:    3
  8563 ;; This function calls:
  8564 ;;		___wmul
  8565 ;;		_isdigit
  8566 ;;		_isspace
  8567 ;; This function is called by:
  8568 ;;		_vfpfcnvrt
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           	psect	text50
  8573  001DC2                     __ptext50:
  8574                           	callstack 0
  8575  001DC2                     _atoi:
  8576                           	callstack 23
  8577  001DC2  0E00               	movlw	0
  8578  001DC4  6E1C               	movwf	(atoi@n+1)^0,c
  8579  001DC6  0E00               	movlw	0
  8580  001DC8  6E1B               	movwf	atoi@n^0,c
  8581  001DCA  0E00               	movlw	0
  8582  001DCC  6E15               	movwf	(atoi@neg+1)^0,c
  8583  001DCE  0E00               	movlw	0
  8584  001DD0  6E14               	movwf	atoi@neg^0,c
  8585  001DD2  EFED  F00E         	goto	l3153
  8586  001DD6                     l3151:
  8587  001DD6  4A0E               	infsnz	atoi@s^0,f,c
  8588  001DD8  2A0F               	incf	(atoi@s+1)^0,f,c
  8589  001DDA                     l3153:
  8590  001DDA  0E01               	movlw	1
  8591  001DDC  6E1A               	movwf	_atoi$2376^0,c
  8592  001DDE  C00E  FFF6         	movff	atoi@s,tblptrl
  8593  001DE2  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8594  001DE6                     	if	0	;tblptru may be non-zero
  8595  001DE6                     	endif
  8596  001DE6                     	if	0	;tblptru may be non-zero
  8597  001DE6                     	endif
  8598  001DE6  0008               	tblrd		*
  8599  001DE8  50F5               	movf	tablat,w,c
  8600  001DEA  0A20               	xorlw	32
  8601  001DEC  B4D8               	btfsc	status,2,c
  8602  001DEE  EFFB  F00E         	goto	u2491
  8603  001DF2  EFFD  F00E         	goto	u2490
  8604  001DF6                     u2491:
  8605  001DF6  EF1A  F00F         	goto	l3161
  8606  001DFA                     u2490:
  8607  001DFA  0EF7               	movlw	247
  8608  001DFC  6E10               	movwf	??_atoi^0,c
  8609  001DFE  0EFF               	movlw	255
  8610  001E00  6E11               	movwf	(??_atoi+1)^0,c
  8611  001E02  C00E  FFF6         	movff	atoi@s,tblptrl
  8612  001E06  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8613  001E0A                     	if	0	;tblptru may be non-zero
  8614  001E0A                     	endif
  8615  001E0A                     	if	0	;tblptru may be non-zero
  8616  001E0A                     	endif
  8617  001E0A  0008               	tblrd		*
  8618  001E0C  50F5               	movf	tablat,w,c
  8619  001E0E  6E12               	movwf	(??_atoi+2)^0,c
  8620  001E10  6A13               	clrf	(??_atoi+3)^0,c
  8621  001E12  5010               	movf	??_atoi^0,w,c
  8622  001E14  2612               	addwf	(??_atoi+2)^0,f,c
  8623  001E16  5011               	movf	(??_atoi+1)^0,w,c
  8624  001E18  2213               	addwfc	(??_atoi+3)^0,f,c
  8625  001E1A  5013               	movf	(??_atoi+3)^0,w,c
  8626  001E1C  E109               	bnz	u2500
  8627  001E1E  0E05               	movlw	5
  8628  001E20  5C12               	subwf	(??_atoi+2)^0,w,c
  8629  001E22  A0D8               	btfss	status,0,c
  8630  001E24  EF16  F00F         	goto	u2501
  8631  001E28  EF18  F00F         	goto	u2500
  8632  001E2C                     u2501:
  8633  001E2C  EF1A  F00F         	goto	l3161
  8634  001E30                     u2500:
  8635  001E30  0E00               	movlw	0
  8636  001E32  6E1A               	movwf	_atoi$2376^0,c
  8637  001E34                     l3161:
  8638  001E34  C01A  F016         	movff	_atoi$2376,_atoi$2375
  8639  001E38  6A17               	clrf	(_atoi$2375+1)^0,c
  8640  001E3A  5016               	movf	_atoi$2375^0,w,c
  8641  001E3C  1017               	iorwf	(_atoi$2375+1)^0,w,c
  8642  001E3E  A4D8               	btfss	status,2,c
  8643  001E40  EF24  F00F         	goto	u2511
  8644  001E44  EF26  F00F         	goto	u2510
  8645  001E48                     u2511:
  8646  001E48  EFEB  F00E         	goto	l3151
  8647  001E4C                     u2510:
  8648  001E4C  EF30  F00F         	goto	l3171
  8649  001E50                     l3167:
  8650  001E50  0E00               	movlw	0
  8651  001E52  6E15               	movwf	(atoi@neg+1)^0,c
  8652  001E54  0E01               	movlw	1
  8653  001E56  6E14               	movwf	atoi@neg^0,c
  8654  001E58                     l3169:
  8655  001E58  4A0E               	infsnz	atoi@s^0,f,c
  8656  001E5A  2A0F               	incf	(atoi@s+1)^0,f,c
  8657  001E5C  EF65  F00F         	goto	l3177
  8658  001E60                     l3171:
  8659  001E60  C00E  FFF6         	movff	atoi@s,tblptrl
  8660  001E64  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8661  001E68                     	if	0	;tblptru may be non-zero
  8662  001E68                     	endif
  8663  001E68                     	if	0	;tblptru may be non-zero
  8664  001E68                     	endif
  8665  001E68  0008               	tblrd		*
  8666  001E6A  50F5               	movf	tablat,w,c
  8667  001E6C  6E10               	movwf	??_atoi^0,c
  8668  001E6E  6A11               	clrf	(??_atoi+1)^0,c
  8669                           
  8670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8671                           ; Switch size 1, requested type "simple"
  8672                           ; Number of cases is 1, Range of values is 0 to 0
  8673                           ; switch strategies available:
  8674                           ; Name         Instructions Cycles
  8675                           ; simple_byte            4     3 (average)
  8676                           ;	Chosen strategy is simple_byte
  8677  001E70  5011               	movf	(??_atoi+1)^0,w,c
  8678  001E72  0A00               	xorlw	0	; case 0
  8679  001E74  B4D8               	btfsc	status,2,c
  8680  001E76  EF3F  F00F         	goto	l5003
  8681  001E7A  EF65  F00F         	goto	l3177
  8682  001E7E                     l5003:
  8683                           
  8684                           ; Switch size 1, requested type "simple"
  8685                           ; Number of cases is 2, Range of values is 43 to 45
  8686                           ; switch strategies available:
  8687                           ; Name         Instructions Cycles
  8688                           ; simple_byte            7     4 (average)
  8689                           ;	Chosen strategy is simple_byte
  8690  001E7E  5010               	movf	??_atoi^0,w,c
  8691  001E80  0A2B               	xorlw	43	; case 43
  8692  001E82  B4D8               	btfsc	status,2,c
  8693  001E84  EF2C  F00F         	goto	l3169
  8694  001E88  0A06               	xorlw	6	; case 45
  8695  001E8A  B4D8               	btfsc	status,2,c
  8696  001E8C  EF28  F00F         	goto	l3167
  8697  001E90  EF65  F00F         	goto	l3177
  8698  001E94                     l3173:
  8699  001E94  C01B  F007         	movff	atoi@n,___wmul@multiplier
  8700  001E98  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  8701  001E9C  0E00               	movlw	0
  8702  001E9E  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  8703  001EA0  0E0A               	movlw	10
  8704  001EA2  6E09               	movwf	___wmul@multiplicand^0,c
  8705  001EA4  ECE4  F01B         	call	___wmul	;wreg free
  8706  001EA8  C00E  FFF6         	movff	atoi@s,tblptrl
  8707  001EAC  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8708  001EB0                     	if	0	;tblptru may be non-zero
  8709  001EB0                     	endif
  8710  001EB0                     	if	0	;tblptru may be non-zero
  8711  001EB0                     	endif
  8712  001EB0  0008               	tblrd		*
  8713  001EB2  50F5               	movf	tablat,w,c
  8714  001EB4  5E07               	subwf	?___wmul^0,f,c
  8715  001EB6  0E00               	movlw	0
  8716  001EB8  5A08               	subwfb	(?___wmul+1)^0,f,c
  8717  001EBA  0E30               	movlw	48
  8718  001EBC  2407               	addwf	?___wmul^0,w,c
  8719  001EBE  6E1B               	movwf	atoi@n^0,c
  8720  001EC0  0E00               	movlw	0
  8721  001EC2  2008               	addwfc	(?___wmul+1)^0,w,c
  8722  001EC4  6E1C               	movwf	(atoi@n+1)^0,c
  8723  001EC6  EF2C  F00F         	goto	l3169
  8724  001ECA                     l3177:
  8725  001ECA  0ED0               	movlw	208
  8726  001ECC  6E10               	movwf	??_atoi^0,c
  8727  001ECE  0EFF               	movlw	255
  8728  001ED0  6E11               	movwf	(??_atoi+1)^0,c
  8729  001ED2  C00E  FFF6         	movff	atoi@s,tblptrl
  8730  001ED6  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8731  001EDA                     	if	0	;tblptru may be non-zero
  8732  001EDA                     	endif
  8733  001EDA                     	if	0	;tblptru may be non-zero
  8734  001EDA                     	endif
  8735  001EDA  0008               	tblrd		*
  8736  001EDC  50F5               	movf	tablat,w,c
  8737  001EDE  6E12               	movwf	(??_atoi+2)^0,c
  8738  001EE0  6A13               	clrf	(??_atoi+3)^0,c
  8739  001EE2  5010               	movf	??_atoi^0,w,c
  8740  001EE4  2612               	addwf	(??_atoi+2)^0,f,c
  8741  001EE6  5011               	movf	(??_atoi+1)^0,w,c
  8742  001EE8  2213               	addwfc	(??_atoi+3)^0,f,c
  8743  001EEA  5013               	movf	(??_atoi+3)^0,w,c
  8744  001EEC  E10A               	bnz	u2520
  8745  001EEE  0E0A               	movlw	10
  8746  001EF0  5C12               	subwf	(??_atoi+2)^0,w,c
  8747  001EF2  A0D8               	btfss	status,0,c
  8748  001EF4  EF7E  F00F         	goto	u2521
  8749  001EF8  EF81  F00F         	goto	u2520
  8750  001EFC                     u2521:
  8751  001EFC  0E01               	movlw	1
  8752  001EFE  EF82  F00F         	goto	u2530
  8753  001F02                     u2520:
  8754  001F02  0E00               	movlw	0
  8755  001F04                     u2530:
  8756  001F04  6E18               	movwf	_atoi$2377^0,c
  8757  001F06  6A19               	clrf	(_atoi$2377+1)^0,c
  8758  001F08  5018               	movf	_atoi$2377^0,w,c
  8759  001F0A  1019               	iorwf	(_atoi$2377+1)^0,w,c
  8760  001F0C  A4D8               	btfss	status,2,c
  8761  001F0E  EF8B  F00F         	goto	u2541
  8762  001F12  EF8D  F00F         	goto	u2540
  8763  001F16                     u2541:
  8764  001F16  EF4A  F00F         	goto	l3173
  8765  001F1A                     u2540:
  8766  001F1A  5014               	movf	atoi@neg^0,w,c
  8767  001F1C  1015               	iorwf	(atoi@neg+1)^0,w,c
  8768  001F1E  A4D8               	btfss	status,2,c
  8769  001F20  EF94  F00F         	goto	u2551
  8770  001F24  EF96  F00F         	goto	u2550
  8771  001F28                     u2551:
  8772  001F28  EFA4  F00F         	goto	l1273
  8773  001F2C                     u2550:
  8774  001F2C  C01B  F010         	movff	atoi@n,??_atoi
  8775  001F30  C01C  F011         	movff	atoi@n+1,??_atoi+1
  8776  001F34  1E10               	comf	??_atoi^0,f,c
  8777  001F36  1E11               	comf	(??_atoi+1)^0,f,c
  8778  001F38  4A10               	infsnz	??_atoi^0,f,c
  8779  001F3A  2A11               	incf	(??_atoi+1)^0,f,c
  8780  001F3C  C010  F00E         	movff	??_atoi,?_atoi
  8781  001F40  C011  F00F         	movff	??_atoi+1,?_atoi+1
  8782  001F44  EFA8  F00F         	goto	l1276
  8783  001F48                     l1273:
  8784  001F48  C01B  F00E         	movff	atoi@n,?_atoi
  8785  001F4C  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  8786  001F50                     l1276:
  8787  001F50  0012               	return		;funcret
  8788  001F52                     __end_of_atoi:
  8789                           	callstack 0
  8790                           
  8791 ;; *************** function _isspace *****************
  8792 ;; Defined at:
  8793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  c               2    6[COMRAM] int 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;		None
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  2    6[COMRAM] int 
  8800 ;; Registers used:
  8801 ;;		wreg, status,2, status,0
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8807 ;;      Params:         2       0       0       0       0       0       0       0       0
  8808 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8809 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8810 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8811 ;;Total ram usage:        7 bytes
  8812 ;; Hardware stack levels used:    1
  8813 ;; Hardware stack levels required when called:    2
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_atoi
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           	psect	text51
  8822  003454                     __ptext51:
  8823                           	callstack 0
  8824  003454                     _isspace:
  8825                           	callstack 23
  8826  003454  0E01               	movlw	1
  8827  003456  6E0D               	movwf	_isspace$2393^0,c
  8828  003458  0E20               	movlw	32
  8829  00345A  1807               	xorwf	isspace@c^0,w,c
  8830  00345C  1008               	iorwf	(isspace@c+1)^0,w,c
  8831  00345E  B4D8               	btfsc	status,2,c
  8832  003460  EF34  F01A         	goto	u2321
  8833  003464  EF36  F01A         	goto	u2320
  8834  003468                     u2321:
  8835  003468  EF4F  F01A         	goto	l3083
  8836  00346C                     u2320:
  8837  00346C  0EF7               	movlw	247
  8838  00346E  6E09               	movwf	??_isspace^0,c
  8839  003470  0EFF               	movlw	255
  8840  003472  6E0A               	movwf	(??_isspace+1)^0,c
  8841  003474  C007  F00B         	movff	isspace@c,??_isspace+2
  8842  003478  C008  F00C         	movff	isspace@c+1,??_isspace+3
  8843  00347C  5009               	movf	??_isspace^0,w,c
  8844  00347E  260B               	addwf	(??_isspace+2)^0,f,c
  8845  003480  500A               	movf	(??_isspace+1)^0,w,c
  8846  003482  220C               	addwfc	(??_isspace+3)^0,f,c
  8847  003484  500C               	movf	(??_isspace+3)^0,w,c
  8848  003486  E109               	bnz	u2330
  8849  003488  0E05               	movlw	5
  8850  00348A  5C0B               	subwf	(??_isspace+2)^0,w,c
  8851  00348C  A0D8               	btfss	status,0,c
  8852  00348E  EF4B  F01A         	goto	u2331
  8853  003492  EF4D  F01A         	goto	u2330
  8854  003496                     u2331:
  8855  003496  EF4F  F01A         	goto	l3083
  8856  00349A                     u2330:
  8857  00349A  0E00               	movlw	0
  8858  00349C  6E0D               	movwf	_isspace$2393^0,c
  8859  00349E                     l3083:
  8860  00349E  C00D  F007         	movff	_isspace$2393,?_isspace
  8861  0034A2  6A08               	clrf	(?_isspace+1)^0,c
  8862  0034A4  0012               	return		;funcret
  8863  0034A6                     __end_of_isspace:
  8864                           	callstack 0
  8865                           
  8866 ;; *************** function _isdigit *****************
  8867 ;; Defined at:
  8868 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;  c               2    6[COMRAM] int 
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;		None
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  2    6[COMRAM] int 
  8875 ;; Registers used:
  8876 ;;		wreg, status,2, status,0
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8882 ;;      Params:         2       0       0       0       0       0       0       0       0
  8883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8884 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8885 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8886 ;;Total ram usage:        6 bytes
  8887 ;; Hardware stack levels used:    1
  8888 ;; Hardware stack levels required when called:    2
  8889 ;; This function calls:
  8890 ;;		Nothing
  8891 ;; This function is called by:
  8892 ;;		_vfpfcnvrt
  8893 ;;		_atoi
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           	psect	text52
  8898  0036CE                     __ptext52:
  8899                           	callstack 0
  8900  0036CE                     _isdigit:
  8901                           	callstack 24
  8902  0036CE  0ED0               	movlw	208
  8903  0036D0  6E09               	movwf	??_isdigit^0,c
  8904  0036D2  0EFF               	movlw	255
  8905  0036D4  6E0A               	movwf	(??_isdigit+1)^0,c
  8906  0036D6  C007  F00B         	movff	isdigit@c,??_isdigit+2
  8907  0036DA  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  8908  0036DE  5009               	movf	??_isdigit^0,w,c
  8909  0036E0  260B               	addwf	(??_isdigit+2)^0,f,c
  8910  0036E2  500A               	movf	(??_isdigit+1)^0,w,c
  8911  0036E4  220C               	addwfc	(??_isdigit+3)^0,f,c
  8912  0036E6  500C               	movf	(??_isdigit+3)^0,w,c
  8913  0036E8  E10A               	bnz	u2300
  8914  0036EA  0E0A               	movlw	10
  8915  0036EC  5C0B               	subwf	(??_isdigit+2)^0,w,c
  8916  0036EE  A0D8               	btfss	status,0,c
  8917  0036F0  EF7C  F01B         	goto	u2301
  8918  0036F4  EF7F  F01B         	goto	u2300
  8919  0036F8                     u2301:
  8920  0036F8  0E01               	movlw	1
  8921  0036FA  EF80  F01B         	goto	u2310
  8922  0036FE                     u2300:
  8923  0036FE  0E00               	movlw	0
  8924  003700                     u2310:
  8925  003700  6E07               	movwf	?_isdigit^0,c
  8926  003702  6A08               	clrf	(?_isdigit+1)^0,c
  8927  003704  0012               	return		;funcret
  8928  003706                     __end_of_isdigit:
  8929                           	callstack 0
  8930                           
  8931 ;; *************** function ___wmul *****************
  8932 ;; Defined at:
  8933 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  multiplier      2    6[COMRAM] unsigned int 
  8936 ;;  multiplicand    2    8[COMRAM] unsigned int 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  product         2   10[COMRAM] unsigned int 
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  2    6[COMRAM] unsigned int 
  8941 ;; Registers used:
  8942 ;;		wreg, status,2, status,0, prodl, prodh
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8948 ;;      Params:         4       0       0       0       0       0       0       0       0
  8949 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8951 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8952 ;;Total ram usage:        6 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    2
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_appSubGetData
  8959 ;;		_atoi
  8960 ;; This function uses a non-reentrant model
  8961 ;;
  8962                           
  8963                           	psect	text53
  8964  0037C8                     __ptext53:
  8965                           	callstack 0
  8966  0037C8                     ___wmul:
  8967                           	callstack 23
  8968  0037C8  5007               	movf	___wmul@multiplier^0,w,c
  8969  0037CA  0209               	mulwf	___wmul@multiplicand^0,c
  8970  0037CC  CFF3 F00B          	movff	prodl,___wmul@product
  8971  0037D0  CFF4 F00C          	movff	prodh,___wmul@product+1
  8972  0037D4  5007               	movf	___wmul@multiplier^0,w,c
  8973  0037D6  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  8974  0037D8  50F3               	movf	243,w,c
  8975  0037DA  260C               	addwf	(___wmul@product+1)^0,f,c
  8976  0037DC  5008               	movf	(___wmul@multiplier+1)^0,w,c
  8977  0037DE  0209               	mulwf	___wmul@multiplicand^0,c
  8978  0037E0  50F3               	movf	243,w,c
  8979  0037E2  260C               	addwf	(___wmul@product+1)^0,f,c
  8980  0037E4  C00B  F007         	movff	___wmul@product,?___wmul
  8981  0037E8  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  8982  0037EC  0012               	return		;funcret
  8983  0037EE                     __end_of___wmul:
  8984                           	callstack 0
  8985                           
  8986 ;; *************** function _memset *****************
  8987 ;; Defined at:
  8988 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;  dest            2    6[COMRAM] PTR void 
  8991 ;;		 -> puerto(16), datos(25), 
  8992 ;;  c               2    8[COMRAM] int 
  8993 ;;  n               2   10[COMRAM] unsigned int 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  s               2   16[COMRAM] PTR unsigned char 
  8996 ;;		 -> puerto(16), datos(25), 
  8997 ;;  k               2   14[COMRAM] unsigned int 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  2    6[COMRAM] PTR void 
  9000 ;; Registers used:
  9001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9007 ;;      Params:         6       0       0       0       0       0       0       0       0
  9008 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9009 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9010 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9011 ;;Total ram usage:       12 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    2
  9014 ;; This function calls:
  9015 ;;		Nothing
  9016 ;; This function is called by:
  9017 ;;		_appADC
  9018 ;;		_appBat
  9019 ;;		_appElemts
  9020 ;;		_appSubGetData
  9021 ;;		_sendinformation
  9022 ;;		_readUART
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text54
  9027  0020DA                     __ptext54:
  9028                           	callstack 0
  9029  0020DA                     _memset:
  9030                           	callstack 27
  9031  0020DA  C007  F011         	movff	memset@dest,memset@s
  9032  0020DE  C008  F012         	movff	memset@dest+1,memset@s+1
  9033  0020E2  500B               	movf	memset@n^0,w,c
  9034  0020E4  100C               	iorwf	(memset@n+1)^0,w,c
  9035  0020E6  A4D8               	btfss	status,2,c
  9036  0020E8  EF78  F010         	goto	u2821
  9037  0020EC  EF7A  F010         	goto	u2820
  9038  0020F0                     u2821:
  9039  0020F0  EF7C  F010         	goto	l3393
  9040  0020F4                     u2820:
  9041  0020F4  EF27  F011         	goto	l1127
  9042  0020F8                     l3393:
  9043  0020F8  C011  FFD9         	movff	memset@s,fsr2l
  9044  0020FC  C012  FFDA         	movff	memset@s+1,fsr2h
  9045  002100  C009  FFDF         	movff	memset@c,indf2
  9046  002104  500B               	movf	memset@n^0,w,c
  9047  002106  2411               	addwf	memset@s^0,w,c
  9048  002108  6E0D               	movwf	??_memset^0,c
  9049  00210A  500C               	movf	(memset@n+1)^0,w,c
  9050  00210C  2012               	addwfc	(memset@s+1)^0,w,c
  9051  00210E  6E0E               	movwf	(??_memset+1)^0,c
  9052  002110  0EFF               	movlw	255
  9053  002112  240D               	addwf	??_memset^0,w,c
  9054  002114  6ED9               	movwf	fsr2l,c
  9055  002116  0EFF               	movlw	255
  9056  002118  200E               	addwfc	(??_memset+1)^0,w,c
  9057  00211A  6EDA               	movwf	fsr2h,c
  9058  00211C  C009  FFDF         	movff	memset@c,indf2
  9059  002120  500C               	movf	(memset@n+1)^0,w,c
  9060  002122  E107               	bnz	u2831
  9061  002124  0E03               	movlw	3
  9062  002126  5C0B               	subwf	memset@n^0,w,c
  9063  002128  B0D8               	btfsc	status,0,c
  9064  00212A  EF99  F010         	goto	u2831
  9065  00212E  EF9B  F010         	goto	u2830
  9066  002132                     u2831:
  9067  002132  EF9D  F010         	goto	l3399
  9068  002136                     u2830:
  9069  002136  EF27  F011         	goto	l1127
  9070  00213A                     l3399:
  9071  00213A  EE20 F001          	lfsr	2,1
  9072  00213E  5011               	movf	memset@s^0,w,c
  9073  002140  26D9               	addwf	fsr2l,f,c
  9074  002142  5012               	movf	(memset@s+1)^0,w,c
  9075  002144  22DA               	addwfc	fsr2h,f,c
  9076  002146  C009  FFDF         	movff	memset@c,indf2
  9077  00214A  EE20 F002          	lfsr	2,2
  9078  00214E  5011               	movf	memset@s^0,w,c
  9079  002150  26D9               	addwf	fsr2l,f,c
  9080  002152  5012               	movf	(memset@s+1)^0,w,c
  9081  002154  22DA               	addwfc	fsr2h,f,c
  9082  002156  C009  FFDF         	movff	memset@c,indf2
  9083  00215A  500B               	movf	memset@n^0,w,c
  9084  00215C  2411               	addwf	memset@s^0,w,c
  9085  00215E  6E0D               	movwf	??_memset^0,c
  9086  002160  500C               	movf	(memset@n+1)^0,w,c
  9087  002162  2012               	addwfc	(memset@s+1)^0,w,c
  9088  002164  6E0E               	movwf	(??_memset+1)^0,c
  9089  002166  0EFE               	movlw	254
  9090  002168  240D               	addwf	??_memset^0,w,c
  9091  00216A  6ED9               	movwf	fsr2l,c
  9092  00216C  0EFF               	movlw	255
  9093  00216E  200E               	addwfc	(??_memset+1)^0,w,c
  9094  002170  6EDA               	movwf	fsr2h,c
  9095  002172  C009  FFDF         	movff	memset@c,indf2
  9096  002176  500B               	movf	memset@n^0,w,c
  9097  002178  2411               	addwf	memset@s^0,w,c
  9098  00217A  6E0D               	movwf	??_memset^0,c
  9099  00217C  500C               	movf	(memset@n+1)^0,w,c
  9100  00217E  2012               	addwfc	(memset@s+1)^0,w,c
  9101  002180  6E0E               	movwf	(??_memset+1)^0,c
  9102  002182  0EFD               	movlw	253
  9103  002184  240D               	addwf	??_memset^0,w,c
  9104  002186  6ED9               	movwf	fsr2l,c
  9105  002188  0EFF               	movlw	255
  9106  00218A  200E               	addwfc	(??_memset+1)^0,w,c
  9107  00218C  6EDA               	movwf	fsr2h,c
  9108  00218E  C009  FFDF         	movff	memset@c,indf2
  9109  002192  500C               	movf	(memset@n+1)^0,w,c
  9110  002194  E107               	bnz	u2841
  9111  002196  0E07               	movlw	7
  9112  002198  5C0B               	subwf	memset@n^0,w,c
  9113  00219A  B0D8               	btfsc	status,0,c
  9114  00219C  EFD2  F010         	goto	u2841
  9115  0021A0  EFD4  F010         	goto	u2840
  9116  0021A4                     u2841:
  9117  0021A4  EFD6  F010         	goto	l3405
  9118  0021A8                     u2840:
  9119  0021A8  EF27  F011         	goto	l1127
  9120  0021AC                     l3405:
  9121  0021AC  EE20 F003          	lfsr	2,3
  9122  0021B0  5011               	movf	memset@s^0,w,c
  9123  0021B2  26D9               	addwf	fsr2l,f,c
  9124  0021B4  5012               	movf	(memset@s+1)^0,w,c
  9125  0021B6  22DA               	addwfc	fsr2h,f,c
  9126  0021B8  C009  FFDF         	movff	memset@c,indf2
  9127  0021BC  500B               	movf	memset@n^0,w,c
  9128  0021BE  2411               	addwf	memset@s^0,w,c
  9129  0021C0  6E0D               	movwf	??_memset^0,c
  9130  0021C2  500C               	movf	(memset@n+1)^0,w,c
  9131  0021C4  2012               	addwfc	(memset@s+1)^0,w,c
  9132  0021C6  6E0E               	movwf	(??_memset+1)^0,c
  9133  0021C8  0EFC               	movlw	252
  9134  0021CA  240D               	addwf	??_memset^0,w,c
  9135  0021CC  6ED9               	movwf	fsr2l,c
  9136  0021CE  0EFF               	movlw	255
  9137  0021D0  200E               	addwfc	(??_memset+1)^0,w,c
  9138  0021D2  6EDA               	movwf	fsr2h,c
  9139  0021D4  C009  FFDF         	movff	memset@c,indf2
  9140  0021D8  500C               	movf	(memset@n+1)^0,w,c
  9141  0021DA  E107               	bnz	u2851
  9142  0021DC  0E09               	movlw	9
  9143  0021DE  5C0B               	subwf	memset@n^0,w,c
  9144  0021E0  B0D8               	btfsc	status,0,c
  9145  0021E2  EFF5  F010         	goto	u2851
  9146  0021E6  EFF7  F010         	goto	u2850
  9147  0021EA                     u2851:
  9148  0021EA  EFF9  F010         	goto	l3411
  9149  0021EE                     u2850:
  9150  0021EE  EF27  F011         	goto	l1127
  9151  0021F2                     l3411:
  9152  0021F2  C011  F00D         	movff	memset@s,??_memset
  9153  0021F6  C012  F00E         	movff	memset@s+1,??_memset+1
  9154  0021FA  1E0D               	comf	??_memset^0,f,c
  9155  0021FC  1E0E               	comf	(??_memset+1)^0,f,c
  9156  0021FE  4A0D               	infsnz	??_memset^0,f,c
  9157  002200  2A0E               	incf	(??_memset+1)^0,f,c
  9158  002202  0E03               	movlw	3
  9159  002204  140D               	andwf	??_memset^0,w,c
  9160  002206  6E0F               	movwf	memset@k^0,c
  9161  002208  6A10               	clrf	(memset@k+1)^0,c
  9162  00220A  500F               	movf	memset@k^0,w,c
  9163  00220C  2611               	addwf	memset@s^0,f,c
  9164  00220E  5010               	movf	(memset@k+1)^0,w,c
  9165  002210  2212               	addwfc	(memset@s+1)^0,f,c
  9166  002212  500F               	movf	memset@k^0,w,c
  9167  002214  5E0B               	subwf	memset@n^0,f,c
  9168  002216  5010               	movf	(memset@k+1)^0,w,c
  9169  002218  5A0C               	subwfb	(memset@n+1)^0,f,c
  9170  00221A  0EFC               	movlw	252
  9171  00221C  160B               	andwf	memset@n^0,f,c
  9172  00221E  0EFF               	movlw	255
  9173  002220  160C               	andwf	(memset@n+1)^0,f,c
  9174  002222  EF1E  F011         	goto	l3419
  9175  002226                     l3413:
  9176  002226  C011  FFD9         	movff	memset@s,fsr2l
  9177  00222A  C012  FFDA         	movff	memset@s+1,fsr2h
  9178  00222E  C009  FFDF         	movff	memset@c,indf2
  9179  002232  060B               	decf	memset@n^0,f,c
  9180  002234  A0D8               	btfss	status,0,c
  9181  002236  060C               	decf	(memset@n+1)^0,f,c
  9182  002238  4A11               	infsnz	memset@s^0,f,c
  9183  00223A  2A12               	incf	(memset@s+1)^0,f,c
  9184  00223C                     l3419:
  9185  00223C  500B               	movf	memset@n^0,w,c
  9186  00223E  100C               	iorwf	(memset@n+1)^0,w,c
  9187  002240  A4D8               	btfss	status,2,c
  9188  002242  EF25  F011         	goto	u2861
  9189  002246  EF27  F011         	goto	u2860
  9190  00224A                     u2861:
  9191  00224A  EF13  F011         	goto	l3413
  9192  00224E                     u2860:
  9193  00224E                     l1127:
  9194  00224E  0012               	return		;funcret
  9195  002250                     __end_of_memset:
  9196                           	callstack 0
  9197                           
  9198 ;; *************** function _Lcd_Out *****************
  9199 ;; Defined at:
  9200 ;;		line 95 in file "flex_lcd.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  y               1    wreg     unsigned char 
  9203 ;;  x               1    9[COMRAM] unsigned char 
  9204 ;;  buffer          2   10[COMRAM] PTR const char 
  9205 ;;		 -> STR_10(13), STR_9(17), STR_8(12), STR_6(14), 
  9206 ;;		 -> STR_4(6), STR_3(12), datos.display(16), datos(25), 
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;  y               1   14[COMRAM] unsigned char 
  9209 ;;  data            1   15[COMRAM] unsigned char 
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  1    wreg      void 
  9212 ;; Registers used:
  9213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9219 ;;      Params:         3       0       0       0       0       0       0       0       0
  9220 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9221 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9222 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9223 ;;Total ram usage:        7 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; Hardware stack levels required when called:    3
  9226 ;; This function calls:
  9227 ;;		_Lcd_Chr_CP
  9228 ;;		_Lcd_Cmd
  9229 ;; This function is called by:
  9230 ;;		_appADC
  9231 ;;		_appBat
  9232 ;;		_appLCD_Init
  9233 ;;		_appElemts
  9234 ;;		_appSubGetData
  9235 ;;		_warning
  9236 ;;		_confirmacion
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text55
  9241  002A1E                     __ptext55:
  9242                           	callstack 0
  9243  002A1E                     _Lcd_Out:
  9244                           	callstack 26
  9245                           
  9246                           ;incstack = 0
  9247                           ;Lcd_Out@y stored from wreg
  9248  002A1E  6E0F               	movwf	Lcd_Out@y^0,c
  9249  002A20                     
  9250                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  9251  002A20  EF26  F015         	goto	l3445
  9252  002A24                     l3435:
  9253                           
  9254                           ;flex_lcd.c: 101:             data = 128 + x;
  9255  002A24  500A               	movf	Lcd_Out@x^0,w,c
  9256  002A26  0F80               	addlw	128
  9257  002A28  6E10               	movwf	Lcd_Out@data^0,c
  9258                           
  9259                           ;flex_lcd.c: 102:             break;
  9260  002A2A  EF43  F015         	goto	l3447
  9261  002A2E                     l3437:
  9262                           
  9263                           ;flex_lcd.c: 104:             data = 192 + x;
  9264  002A2E  500A               	movf	Lcd_Out@x^0,w,c
  9265  002A30  0FC0               	addlw	192
  9266  002A32  6E10               	movwf	Lcd_Out@data^0,c
  9267                           
  9268                           ;flex_lcd.c: 105:             break;
  9269  002A34  EF43  F015         	goto	l3447
  9270  002A38                     l3439:
  9271                           
  9272                           ;flex_lcd.c: 107:             data = 148 + x;
  9273  002A38  500A               	movf	Lcd_Out@x^0,w,c
  9274  002A3A  0F94               	addlw	148
  9275  002A3C  6E10               	movwf	Lcd_Out@data^0,c
  9276                           
  9277                           ;flex_lcd.c: 108:             break;
  9278  002A3E  EF43  F015         	goto	l3447
  9279  002A42                     l3441:
  9280                           
  9281                           ;flex_lcd.c: 110:             data = 212 + x;
  9282  002A42  500A               	movf	Lcd_Out@x^0,w,c
  9283  002A44  0FD4               	addlw	212
  9284  002A46  6E10               	movwf	Lcd_Out@data^0,c
  9285                           
  9286                           ;flex_lcd.c: 111:             break;
  9287  002A48  EF43  F015         	goto	l3447
  9288  002A4C                     l3445:
  9289  002A4C  500F               	movf	Lcd_Out@y^0,w,c
  9290  002A4E  6E0D               	movwf	??_Lcd_Out^0,c
  9291  002A50  6A0E               	clrf	(??_Lcd_Out+1)^0,c
  9292                           
  9293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9294                           ; Switch size 1, requested type "simple"
  9295                           ; Number of cases is 1, Range of values is 0 to 0
  9296                           ; switch strategies available:
  9297                           ; Name         Instructions Cycles
  9298                           ; simple_byte            4     3 (average)
  9299                           ;	Chosen strategy is simple_byte
  9300  002A52  500E               	movf	(??_Lcd_Out+1)^0,w,c
  9301  002A54  0A00               	xorlw	0	; case 0
  9302  002A56  B4D8               	btfsc	status,2,c
  9303  002A58  EF30  F015         	goto	l5005
  9304  002A5C  EF43  F015         	goto	l3447
  9305  002A60                     l5005:
  9306                           
  9307                           ; Switch size 1, requested type "simple"
  9308                           ; Number of cases is 4, Range of values is 1 to 4
  9309                           ; switch strategies available:
  9310                           ; Name         Instructions Cycles
  9311                           ; simple_byte           13     7 (average)
  9312                           ;	Chosen strategy is simple_byte
  9313  002A60  500D               	movf	??_Lcd_Out^0,w,c
  9314  002A62  0A01               	xorlw	1	; case 1
  9315  002A64  B4D8               	btfsc	status,2,c
  9316  002A66  EF12  F015         	goto	l3435
  9317  002A6A  0A03               	xorlw	3	; case 2
  9318  002A6C  B4D8               	btfsc	status,2,c
  9319  002A6E  EF17  F015         	goto	l3437
  9320  002A72  0A01               	xorlw	1	; case 3
  9321  002A74  B4D8               	btfsc	status,2,c
  9322  002A76  EF1C  F015         	goto	l3439
  9323  002A7A  0A07               	xorlw	7	; case 4
  9324  002A7C  B4D8               	btfsc	status,2,c
  9325  002A7E  EF21  F015         	goto	l3441
  9326  002A82  EF43  F015         	goto	l3447
  9327  002A86                     l3447:
  9328                           
  9329                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  9330  002A86  5010               	movf	Lcd_Out@data^0,w,c
  9331  002A88  EC81  F012         	call	_Lcd_Cmd
  9332                           
  9333                           ;flex_lcd.c: 116:     while(*buffer)
  9334  002A8C  EF5C  F015         	goto	l3453
  9335  002A90                     l3449:
  9336                           
  9337                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  9338  002A90  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9339  002A94  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9340  002A98  6AF8               	clrf	tblptru,c
  9341  002A9A  0E07               	movlw	(high __ramtop+-1)
  9342  002A9C  64F7               	cpfsgt	tblptrh,c
  9343  002A9E  D003               	bra	u2877
  9344  002AA0  0008               	tblrd		*
  9345  002AA2  50F5               	movf	tablat,w,c
  9346  002AA4  D005               	bra	u2870
  9347  002AA6                     u2877:
  9348  002AA6  CFF6 FFE1          	movff	tblptrl,fsr1l
  9349  002AAA  CFF7 FFE2          	movff	tblptrh,fsr1h
  9350  002AAE  50E7               	movf	indf1,w,c
  9351  002AB0                     u2870:
  9352  002AB0  ECDA  F011         	call	_Lcd_Chr_CP
  9353  002AB4                     
  9354                           ;flex_lcd.c: 119:         buffer++;
  9355  002AB4  4A0B               	infsnz	Lcd_Out@buffer^0,f,c
  9356  002AB6  2A0C               	incf	(Lcd_Out@buffer+1)^0,f,c
  9357  002AB8                     l3453:
  9358                           
  9359                           ;flex_lcd.c: 116:     while(*buffer)
  9360  002AB8  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9361  002ABC  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9362  002AC0  6AF8               	clrf	tblptru,c
  9363  002AC2  0E07               	movlw	(high __ramtop+-1)
  9364  002AC4  64F7               	cpfsgt	tblptrh,c
  9365  002AC6  D003               	bra	u2887
  9366  002AC8  0008               	tblrd		*
  9367  002ACA  50F5               	movf	tablat,w,c
  9368  002ACC  D005               	bra	u2880
  9369  002ACE                     u2887:
  9370  002ACE  CFF6 FFE1          	movff	tblptrl,fsr1l
  9371  002AD2  CFF7 FFE2          	movff	tblptrh,fsr1h
  9372  002AD6  50E7               	movf	indf1,w,c
  9373  002AD8                     u2880:
  9374  002AD8  0900               	iorlw	0
  9375  002ADA  A4D8               	btfss	status,2,c
  9376  002ADC  EF72  F015         	goto	u2891
  9377  002AE0  EF74  F015         	goto	u2890
  9378  002AE4                     u2891:
  9379  002AE4  EF48  F015         	goto	l3449
  9380  002AE8                     u2890:
  9381  002AE8  0012               	return		;funcret
  9382  002AEA                     __end_of_Lcd_Out:
  9383                           	callstack 0
  9384                           
  9385 ;; *************** function _Lcd_Cmd *****************
  9386 ;; Defined at:
  9387 ;;		line 175 in file "flex_lcd.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;  data            1    wreg     unsigned char 
  9390 ;; Auto vars:     Size  Location     Type
  9391 ;;  data            1    8[COMRAM] unsigned char 
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  1    wreg      void 
  9394 ;; Registers used:
  9395 ;;		wreg, status,2, status,0
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9401 ;;      Params:         0       0       0       0       0       0       0       0       0
  9402 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9403 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9404 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9405 ;;Total ram usage:        3 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:    2
  9408 ;; This function calls:
  9409 ;;		Nothing
  9410 ;; This function is called by:
  9411 ;;		_Lcd_Init
  9412 ;;		_Lcd_Out
  9413 ;;		_appLCD_Init
  9414 ;;		_appGetElements
  9415 ;;		_warning
  9416 ;;		_confirmacion
  9417 ;;		_readUART
  9418 ;;		_Lcd_Out2
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text56
  9423  002502                     __ptext56:
  9424                           	callstack 0
  9425  002502                     _Lcd_Cmd:
  9426                           	callstack 26
  9427                           
  9428                           ;incstack = 0
  9429                           ;Lcd_Cmd@data stored from wreg
  9430  002502  6E09               	movwf	Lcd_Cmd@data^0,c
  9431  002504                     
  9432                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  9433  002504  968C               	bcf	140,3,c	;volatile
  9434  002506  948C               	bcf	140,2,c	;volatile
  9435  002508                     
  9436                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9437  002508  6A07               	clrf	??_Lcd_Cmd^0,c
  9438  00250A  AE09               	btfss	Lcd_Cmd@data^0,7,c
  9439  00250C  D001               	bra	u2675
  9440  00250E  2A07               	incf	??_Lcd_Cmd^0,f,c
  9441  002510                     u2675:
  9442  002510  0E01               	movlw	1
  9443  002512  1607               	andwf	??_Lcd_Cmd^0,f,c
  9444  002514  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9445  002516  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9446  002518  508C               	movf	140,w,c	;volatile
  9447  00251A  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9448  00251C  0B7F               	andlw	-129
  9449  00251E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9450  002520  6E8C               	movwf	140,c	;volatile
  9451                           
  9452                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9453  002522  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9454  002526  0E06               	movlw	6
  9455  002528  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9456  00252A                     u2685:
  9457  00252A  90D8               	bcf	status,0,c
  9458  00252C  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9459  00252E  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9460  002530  EF95  F012         	goto	u2685
  9461  002534  0E01               	movlw	1
  9462  002536  1607               	andwf	??_Lcd_Cmd^0,f,c
  9463  002538  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9464  00253A  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9465  00253C  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9466  00253E  508C               	movf	140,w,c	;volatile
  9467  002540  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9468  002542  0BBF               	andlw	-65
  9469  002544  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9470  002546  6E8C               	movwf	140,c	;volatile
  9471                           
  9472                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9473  002548  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9474  00254C  0E05               	movlw	5
  9475  00254E  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9476  002550                     u2695:
  9477  002550  90D8               	bcf	status,0,c
  9478  002552  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9479  002554  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9480  002556  EFA8  F012         	goto	u2695
  9481  00255A  0E01               	movlw	1
  9482  00255C  1607               	andwf	??_Lcd_Cmd^0,f,c
  9483  00255E  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9484  002560  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9485  002562  508C               	movf	140,w,c	;volatile
  9486  002564  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9487  002566  0BDF               	andlw	-33
  9488  002568  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9489  00256A  6E8C               	movwf	140,c	;volatile
  9490                           
  9491                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9492  00256C  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9493  002570  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9494  002572  0E0F               	movlw	15
  9495  002574  1607               	andwf	??_Lcd_Cmd^0,f,c
  9496  002576  0E01               	movlw	1
  9497  002578  1607               	andwf	??_Lcd_Cmd^0,f,c
  9498  00257A  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9499  00257C  508C               	movf	140,w,c	;volatile
  9500  00257E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9501  002580  0BEF               	andlw	-17
  9502  002582  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9503  002584  6E8C               	movwf	140,c	;volatile
  9504  002586                     
  9505                           ;flex_lcd.c: 182:     _delay(10);
  9506  002586  0E03               	movlw	3
  9507  002588                     u4637:
  9508  002588  2EE8               	decfsz	wreg,f,c
  9509  00258A  D7FE               	bra	u4637
  9510  00258C  F000               	nop	
  9511  00258E                     
  9512                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  9513  00258E  868C               	bsf	140,3,c	;volatile
  9514  002590                     
  9515                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9516  002590  0E05               	movlw	5
  9517  002592                     u4647:
  9518  002592  2EE8               	decfsz	wreg,f,c
  9519  002594  D7FE               	bra	u4647
  9520  002596                     
  9521                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  9522  002596  968C               	bcf	140,3,c	;volatile
  9523                           
  9524                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9525  002598  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9526  00259C  90D8               	bcf	status,0,c
  9527  00259E  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9528  0025A0  90D8               	bcf	status,0,c
  9529  0025A2  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9530  0025A4  90D8               	bcf	status,0,c
  9531  0025A6  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9532  0025A8  0E01               	movlw	1
  9533  0025AA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9534  0025AC  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9535  0025AE  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9536  0025B0  508C               	movf	140,w,c	;volatile
  9537  0025B2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9538  0025B4  0B7F               	andlw	-129
  9539  0025B6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9540  0025B8  6E8C               	movwf	140,c	;volatile
  9541                           
  9542                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9543  0025BA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9544  0025BE  90D8               	bcf	status,0,c
  9545  0025C0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9546  0025C2  90D8               	bcf	status,0,c
  9547  0025C4  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9548  0025C6  0E01               	movlw	1
  9549  0025C8  1607               	andwf	??_Lcd_Cmd^0,f,c
  9550  0025CA  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9551  0025CC  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9552  0025CE  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9553  0025D0  508C               	movf	140,w,c	;volatile
  9554  0025D2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9555  0025D4  0BBF               	andlw	-65
  9556  0025D6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9557  0025D8  6E8C               	movwf	140,c	;volatile
  9558                           
  9559                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9560  0025DA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9561  0025DE  90D8               	bcf	status,0,c
  9562  0025E0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9563  0025E2  0E01               	movlw	1
  9564  0025E4  1607               	andwf	??_Lcd_Cmd^0,f,c
  9565  0025E6  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9566  0025E8  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9567  0025EA  508C               	movf	140,w,c	;volatile
  9568  0025EC  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9569  0025EE  0BDF               	andlw	-33
  9570  0025F0  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9571  0025F2  6E8C               	movwf	140,c	;volatile
  9572                           
  9573                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  9574  0025F4  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9575  0025F8  0E01               	movlw	1
  9576  0025FA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9577  0025FC  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9578  0025FE  508C               	movf	140,w,c	;volatile
  9579  002600  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9580  002602  0BEF               	andlw	-17
  9581  002604  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9582  002606  6E8C               	movwf	140,c	;volatile
  9583  002608                     
  9584                           ;flex_lcd.c: 190:     _delay(10);
  9585  002608  0E03               	movlw	3
  9586  00260A                     u4657:
  9587  00260A  2EE8               	decfsz	wreg,f,c
  9588  00260C  D7FE               	bra	u4657
  9589  00260E  F000               	nop	
  9590  002610                     
  9591                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  9592  002610  868C               	bsf	140,3,c	;volatile
  9593  002612                     
  9594                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9595  002612  0E05               	movlw	5
  9596  002614                     u4667:
  9597  002614  2EE8               	decfsz	wreg,f,c
  9598  002616  D7FE               	bra	u4667
  9599  002618                     
  9600                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  9601  002618  968C               	bcf	140,3,c	;volatile
  9602  00261A                     
  9603                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9604  00261A  0E16               	movlw	22
  9605  00261C  6E07               	movwf	??_Lcd_Cmd^0,c
  9606  00261E  0E6C               	movlw	108
  9607  002620                     u4677:
  9608  002620  2EE8               	decfsz	wreg,f,c
  9609  002622  D7FE               	bra	u4677
  9610  002624  2E07               	decfsz	??_Lcd_Cmd^0,f,c
  9611  002626  D7FC               	bra	u4677
  9612  002628  D000               	nop2	
  9613  00262A  0012               	return		;funcret
  9614  00262C                     __end_of_Lcd_Cmd:
  9615                           	callstack 0
  9616                           
  9617 ;; *************** function _Lcd_Chr_CP *****************
  9618 ;; Defined at:
  9619 ;;		line 151 in file "flex_lcd.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  data            1    wreg     char 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  data            1    8[COMRAM] char 
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		wreg, status,2, status,0
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0
  9634 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9635 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9636 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9637 ;;Total ram usage:        3 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    2
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_Lcd_Out
  9644 ;;		_Lcd_Out2
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text57
  9649  0023B4                     __ptext57:
  9650                           	callstack 0
  9651  0023B4                     _Lcd_Chr_CP:
  9652                           	callstack 26
  9653                           
  9654                           ;incstack = 0
  9655                           ;Lcd_Chr_CP@data stored from wreg
  9656  0023B4  6E09               	movwf	Lcd_Chr_CP@data^0,c
  9657  0023B6                     
  9658                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  9659  0023B6  968C               	bcf	140,3,c	;volatile
  9660                           
  9661                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  9662  0023B8  848C               	bsf	140,2,c	;volatile
  9663  0023BA                     
  9664                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9665  0023BA  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9666  0023BE  0E07               	movlw	7
  9667  0023C0  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9668  0023C2                     u2705:
  9669  0023C2  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9670  0023C4  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9671  0023C6  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9672  0023C8  EFE1  F011         	goto	u2705
  9673  0023CC  0E01               	movlw	1
  9674  0023CE  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9675  0023D0  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9676  0023D2  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9677  0023D4  508C               	movf	140,w,c	;volatile
  9678  0023D6  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9679  0023D8  0B7F               	andlw	-129
  9680  0023DA  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9681  0023DC  6E8C               	movwf	140,c	;volatile
  9682                           
  9683                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9684  0023DE  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9685  0023E2  0E06               	movlw	6
  9686  0023E4  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9687  0023E6                     u2715:
  9688  0023E6  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9689  0023E8  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9690  0023EA  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9691  0023EC  EFF3  F011         	goto	u2715
  9692  0023F0  0E01               	movlw	1
  9693  0023F2  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9694  0023F4  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9695  0023F6  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9696  0023F8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9697  0023FA  508C               	movf	140,w,c	;volatile
  9698  0023FC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9699  0023FE  0BBF               	andlw	-65
  9700  002400  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9701  002402  6E8C               	movwf	140,c	;volatile
  9702                           
  9703                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9704  002404  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9705  002408  0E05               	movlw	5
  9706  00240A  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9707  00240C                     u2725:
  9708  00240C  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9709  00240E  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9710  002410  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9711  002412  EF06  F012         	goto	u2725
  9712  002416  0E01               	movlw	1
  9713  002418  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9714  00241A  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9715  00241C  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9716  00241E  508C               	movf	140,w,c	;volatile
  9717  002420  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9718  002422  0BDF               	andlw	-33
  9719  002424  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9720  002426  6E8C               	movwf	140,c	;volatile
  9721                           
  9722                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9723  002428  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9724  00242C  0E04               	movlw	4
  9725  00242E  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9726  002430                     u2735:
  9727  002430  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9728  002432  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9729  002434  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9730  002436  EF18  F012         	goto	u2735
  9731  00243A  0E01               	movlw	1
  9732  00243C  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9733  00243E  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9734  002440  508C               	movf	140,w,c	;volatile
  9735  002442  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9736  002444  0BEF               	andlw	-17
  9737  002446  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9738  002448  6E8C               	movwf	140,c	;volatile
  9739  00244A                     
  9740                           ;flex_lcd.c: 159:     _delay(10);
  9741  00244A  0E03               	movlw	3
  9742  00244C                     u4687:
  9743  00244C  2EE8               	decfsz	wreg,f,c
  9744  00244E  D7FE               	bra	u4687
  9745  002450  F000               	nop	
  9746  002452                     
  9747                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  9748  002452  868C               	bsf	140,3,c	;volatile
  9749  002454                     
  9750                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9751  002454  0E05               	movlw	5
  9752  002456                     u4697:
  9753  002456  2EE8               	decfsz	wreg,f,c
  9754  002458  D7FE               	bra	u4697
  9755  00245A                     
  9756                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  9757  00245A  968C               	bcf	140,3,c	;volatile
  9758                           
  9759                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9760  00245C  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9761  002460  0E03               	movlw	3
  9762  002462  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9763  002464                     u2745:
  9764  002464  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9765  002466  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9766  002468  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9767  00246A  EF32  F012         	goto	u2745
  9768  00246E  0E01               	movlw	1
  9769  002470  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9770  002472  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9771  002474  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9772  002476  508C               	movf	140,w,c	;volatile
  9773  002478  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9774  00247A  0B7F               	andlw	-129
  9775  00247C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9776  00247E  6E8C               	movwf	140,c	;volatile
  9777                           
  9778                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9779  002480  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9780  002484  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9781  002486  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9782  002488  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9783  00248A  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9784  00248C  0E01               	movlw	1
  9785  00248E  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9786  002490  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9787  002492  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9788  002494  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9789  002496  508C               	movf	140,w,c	;volatile
  9790  002498  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9791  00249A  0BBF               	andlw	-65
  9792  00249C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9793  00249E  6E8C               	movwf	140,c	;volatile
  9794                           
  9795                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9796  0024A0  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9797  0024A4  0E01               	movlw	1
  9798  0024A6  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9799  0024A8                     u2755:
  9800  0024A8  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9801  0024AA  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9802  0024AC  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9803  0024AE  EF54  F012         	goto	u2755
  9804  0024B2  0E01               	movlw	1
  9805  0024B4  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9806  0024B6  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9807  0024B8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9808  0024BA  508C               	movf	140,w,c	;volatile
  9809  0024BC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9810  0024BE  0BDF               	andlw	-33
  9811  0024C0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9812  0024C2  6E8C               	movwf	140,c	;volatile
  9813                           
  9814                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  9815  0024C4  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9816  0024C8  0E01               	movlw	1
  9817  0024CA  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9818  0024CC  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9819  0024CE  508C               	movf	140,w,c	;volatile
  9820  0024D0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9821  0024D2  0BEF               	andlw	-17
  9822  0024D4  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9823  0024D6  6E8C               	movwf	140,c	;volatile
  9824  0024D8                     
  9825                           ;flex_lcd.c: 167:     _delay(10);
  9826  0024D8  0E03               	movlw	3
  9827  0024DA                     u4707:
  9828  0024DA  2EE8               	decfsz	wreg,f,c
  9829  0024DC  D7FE               	bra	u4707
  9830  0024DE  F000               	nop	
  9831  0024E0                     
  9832                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  9833  0024E0  868C               	bsf	140,3,c	;volatile
  9834  0024E2                     
  9835                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9836  0024E2  0E05               	movlw	5
  9837  0024E4                     u4717:
  9838  0024E4  2EE8               	decfsz	wreg,f,c
  9839  0024E6  D7FE               	bra	u4717
  9840  0024E8                     
  9841                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  9842  0024E8  968C               	bcf	140,3,c	;volatile
  9843  0024EA                     
  9844                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9845  0024EA  0E05               	movlw	5
  9846  0024EC                     u4727:
  9847  0024EC  2EE8               	decfsz	wreg,f,c
  9848  0024EE  D7FE               	bra	u4727
  9849  0024F0                     
  9850                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9851  0024F0  0E16               	movlw	22
  9852  0024F2  6E07               	movwf	??_Lcd_Chr_CP^0,c
  9853  0024F4  0E6C               	movlw	108
  9854  0024F6                     u4737:
  9855  0024F6  2EE8               	decfsz	wreg,f,c
  9856  0024F8  D7FE               	bra	u4737
  9857  0024FA  2E07               	decfsz	??_Lcd_Chr_CP^0,f,c
  9858  0024FC  D7FC               	bra	u4737
  9859  0024FE  D000               	nop2	
  9860  002500  0012               	return		;funcret
  9861  002502                     __end_of_Lcd_Chr_CP:
  9862                           	callstack 0
  9863                           
  9864 ;; *************** function _isrL *****************
  9865 ;; Defined at:
  9866 ;;		line 31 in file "main.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;		None
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;		None
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  1    wreg      void 
  9873 ;; Registers used:
  9874 ;;		wreg, status,2, status,0
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9880 ;;      Params:         0       0       0       0       0       0       0       0       0
  9881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9882 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9883 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9884 ;;Total ram usage:        3 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; Hardware stack levels required when called:    1
  9887 ;; This function calls:
  9888 ;;		Nothing
  9889 ;; This function is called by:
  9890 ;;		Interrupt level 1
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	intcodelo
  9895  000018                     __pintcodelo:
  9896                           	callstack 0
  9897  000018                     _isrL:
  9898                           	callstack 19
  9899                           
  9900                           ;incstack = 0
  9901  000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9902  00001A  CFD8 F004          	movff	status,??_isrL
  9903  00001E  CFE8 F005          	movff	wreg,??_isrL+1
  9904  000022  CFE0 F006          	movff	bsr,??_isrL+2
  9905  000026                     
  9906                           ;main.c: 33:     if(TMR3IE && TMR3IF)
  9907  000026  A2A0               	btfss	4000,1,c	;volatile
  9908  000028  EF18  F000         	goto	i1u435_21
  9909  00002C  EF1A  F000         	goto	i1u435_20
  9910  000030                     i1u435_21:
  9911  000030  EF56  F000         	goto	i1l99
  9912  000034                     i1u435_20:
  9913  000034  A2A1               	btfss	4001,1,c	;volatile
  9914  000036  EF1F  F000         	goto	i1u436_21
  9915  00003A  EF21  F000         	goto	i1u436_20
  9916  00003E                     i1u436_21:
  9917  00003E  EF56  F000         	goto	i1l99
  9918  000042                     i1u436_20:
  9919  000042                     
  9920                           ;main.c: 34:     {;main.c: 35:         TMR3IF = 0;
  9921  000042  92A1               	bcf	4001,1,c	;volatile
  9922  000044                     
  9923                           ;main.c: 36:         datos.counter++;
  9924  000044  0100               	movlb	0	; () banked
  9925  000046  2BC0               	incf	_datos& (0+255),f,b
  9926  000048                     
  9927                           ; BSR set to: 0
  9928                           ;main.c: 37:         if((datos.counter == 2) && (datos.state == 0 || datos.state == 2))
  9929  000048  0E02               	movlw	2
  9930  00004A  19C0               	xorwf	_datos& (0+255),w,b
  9931  00004C  A4D8               	btfss	status,2,c
  9932  00004E  EF2B  F000         	goto	i1u437_21
  9933  000052  EF2D  F000         	goto	i1u437_20
  9934  000056                     i1u437_21:
  9935  000056  EF46  F000         	goto	i1l4837
  9936  00005A                     i1u437_20:
  9937  00005A                     
  9938                           ; BSR set to: 0
  9939  00005A  51C3               	movf	(_datos+3)& (0+255),w,b
  9940  00005C  B4D8               	btfsc	status,2,c
  9941  00005E  EF33  F000         	goto	i1u438_21
  9942  000062  EF35  F000         	goto	i1u438_20
  9943  000066                     i1u438_21:
  9944  000066  EF3E  F000         	goto	i1l4833
  9945  00006A                     i1u438_20:
  9946  00006A                     
  9947                           ; BSR set to: 0
  9948  00006A  0E02               	movlw	2
  9949  00006C  19C3               	xorwf	(_datos+3)& (0+255),w,b
  9950  00006E  A4D8               	btfss	status,2,c
  9951  000070  EF3C  F000         	goto	i1u439_21
  9952  000074  EF3E  F000         	goto	i1u439_20
  9953  000078                     i1u439_21:
  9954  000078  EF46  F000         	goto	i1l4837
  9955  00007C                     i1u439_20:
  9956  00007C                     i1l4833:
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;main.c: 38:         {;main.c: 39:             datos.counter = 0;
  9960  00007C  0E00               	movlw	0
  9961  00007E  6FC0               	movwf	_datos& (0+255),b
  9962  000080                     
  9963                           ; BSR set to: 0
  9964                           ;main.c: 40:             datos.nextFunc = appStateRecolectData;
  9965  000080  0E8A               	movlw	low _appStateRecolectData
  9966  000082  6FD7               	movwf	(_datos+23)& (0+255),b
  9967  000084  0E30               	movlw	high _appStateRecolectData
  9968  000086  6FD8               	movwf	(_datos+24)& (0+255),b
  9969                           
  9970                           ;main.c: 41:         }
  9971  000088  EF52  F000         	goto	i1l4841
  9972  00008C                     i1l4837:
  9973                           
  9974                           ; BSR set to: 0
  9975  00008C  05C3               	decf	(_datos+3)& (0+255),w,b
  9976  00008E  A4D8               	btfss	status,2,c
  9977  000090  EF4C  F000         	goto	i1u440_21
  9978  000094  EF4E  F000         	goto	i1u440_20
  9979  000098                     i1u440_21:
  9980  000098  EF52  F000         	goto	i1l4841
  9981  00009C                     i1u440_20:
  9982  00009C                     
  9983                           ; BSR set to: 0
  9984                           ;main.c: 43:         {;main.c: 44:             datos.nextFunc = appGetElements;
  9985  00009C  0EA2               	movlw	low _appGetElements
  9986  00009E  6FD7               	movwf	(_datos+23)& (0+255),b
  9987  0000A0  0E31               	movlw	high _appGetElements
  9988  0000A2  6FD8               	movwf	(_datos+24)& (0+255),b
  9989  0000A4                     i1l4841:
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;main.c: 46:         TMR3 = 20536;
  9993  0000A4  0E50               	movlw	80
  9994  0000A6  6EB3               	movwf	179,c	;volatile
  9995  0000A8  0E38               	movlw	56
  9996  0000AA  6EB2               	movwf	178,c	;volatile
  9997  0000AC                     i1l99:
  9998  0000AC  C006  FFE0         	movff	??_isrL+2,bsr
  9999  0000B0  C005  FFE8         	movff	??_isrL+1,wreg
 10000  0000B4  C004  FFD8         	movff	??_isrL,status
 10001  0000B8  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10002  0000BA  0010               	retfie	
 10003  0000BC                     __end_of_isrL:
 10004                           	callstack 0
 10005                           
 10006 ;; *************** function _isrH *****************
 10007 ;; Defined at:
 10008 ;;		line 49 in file "main.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;		None
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;		None
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  1    wreg      void 
 10015 ;; Registers used:
 10016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10022 ;;      Params:         0       0       0       0       0       0       0       0       0
 10023 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10024 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10025 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10026 ;;Total ram usage:        3 bytes
 10027 ;; Hardware stack levels used:    1
 10028 ;; This function calls:
 10029 ;;		Nothing
 10030 ;; This function is called by:
 10031 ;;		Interrupt level 2
 10032 ;; This function uses a non-reentrant model
 10033 ;;
 10034                           
 10035                           	psect	intcode
 10036  000008                     __pintcode:
 10037                           	callstack 0
 10038  000008                     _isrH:
 10039                           	callstack 19
 10040                           
 10041                           ;incstack = 0
 10042  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10043  00000A  EDA4  F017         	call	int_func,f	;refresh shadow registers
 10044  00000E                     
 10045                           	psect	intcode_body
 10046  002F48                     __pintcode_body:
 10047                           	callstack 19
 10048  002F48                     int_func:
 10049                           	callstack 19
 10050  002F48  0006               	pop		; remove dummy address from shadow register refresh
 10051  002F4A  CFD9 F002          	movff	fsr2l,??_isrH+1
 10052  002F4E  CFDA F003          	movff	fsr2h,??_isrH+2
 10053  002F52                     
 10054                           ;main.c: 51:     static uint8_t counter = 0;;main.c: 52:     if(TMR0IE && TMR0IF)
 10055  002F52  AAF2               	btfss	4082,5,c	;volatile
 10056  002F54  EFAE  F017         	goto	i2u441_41
 10057  002F58  EFB0  F017         	goto	i2u441_40
 10058  002F5C                     i2u441_41:
 10059  002F5C  EFBF  F017         	goto	i2l4853
 10060  002F60                     i2u441_40:
 10061  002F60  A4F2               	btfss	4082,2,c	;volatile
 10062  002F62  EFB5  F017         	goto	i2u442_41
 10063  002F66  EFB7  F017         	goto	i2u442_40
 10064  002F6A                     i2u442_41:
 10065  002F6A  EFBF  F017         	goto	i2l4853
 10066  002F6E                     i2u442_40:
 10067  002F6E                     
 10068                           ;main.c: 53:     {;main.c: 54:         TMR0IF = 0;
 10069  002F6E  94F2               	bcf	4082,2,c	;volatile
 10070  002F70                     
 10071                           ;main.c: 55:         datos.state = 10;
 10072  002F70  0E0A               	movlw	10
 10073  002F72  0100               	movlb	0	; () banked
 10074  002F74  6FC3               	movwf	(_datos+3)& (0+255),b
 10075  002F76                     
 10076                           ; BSR set to: 0
 10077                           ;main.c: 56:         datos.nextFunc = warning;
 10078  002F76  0E12               	movlw	low _warning
 10079  002F78  6FD7               	movwf	(_datos+23)& (0+255),b
 10080  002F7A  0E32               	movlw	high _warning
 10081  002F7C  6FD8               	movwf	(_datos+24)& (0+255),b
 10082  002F7E                     i2l4853:
 10083                           
 10084                           ;main.c: 58:     if(RCIF && RCIE)
 10085  002F7E  AA9E               	btfss	3998,5,c	;volatile
 10086  002F80  EFC4  F017         	goto	i2u443_41
 10087  002F84  EFC6  F017         	goto	i2u443_40
 10088  002F88                     i2u443_41:
 10089  002F88  EFF0  F017         	goto	i2l110
 10090  002F8C                     i2u443_40:
 10091  002F8C  AA9D               	btfss	3997,5,c	;volatile
 10092  002F8E  EFCB  F017         	goto	i2u444_41
 10093  002F92  EFCD  F017         	goto	i2u444_40
 10094  002F96                     i2u444_41:
 10095  002F96  EFF0  F017         	goto	i2l110
 10096  002F9A                     i2u444_40:
 10097  002F9A                     
 10098                           ;main.c: 59:     {;main.c: 60:         puerto[counter] = RCREG;
 10099  002F9A  0E84               	movlw	low _puerto
 10100  002F9C  2457               	addwf	isrH@counter^0,w,c
 10101  002F9E  6ED9               	movwf	fsr2l,c
 10102  002FA0  6ADA               	clrf	fsr2h,c
 10103  002FA2  0E00               	movlw	high _puerto
 10104  002FA4  22DA               	addwfc	fsr2h,f,c
 10105  002FA6  CFAE FFDF          	movff	4014,indf2	;volatile
 10106                           
 10107                           ;main.c: 61:         if(puerto[counter] != '@')
 10108  002FAA  0E84               	movlw	low _puerto
 10109  002FAC  2457               	addwf	isrH@counter^0,w,c
 10110  002FAE  6ED9               	movwf	fsr2l,c
 10111  002FB0  6ADA               	clrf	fsr2h,c
 10112  002FB2  0E00               	movlw	high _puerto
 10113  002FB4  22DA               	addwfc	fsr2h,f,c
 10114  002FB6  0E40               	movlw	64
 10115  002FB8  18DE               	xorwf	postinc2,w,c
 10116  002FBA  B4D8               	btfsc	status,2,c
 10117  002FBC  EFE2  F017         	goto	i2u445_41
 10118  002FC0  EFE4  F017         	goto	i2u445_40
 10119  002FC4                     i2u445_41:
 10120  002FC4  EFE7  F017         	goto	i2l4861
 10121  002FC8                     i2u445_40:
 10122  002FC8                     
 10123                           ;main.c: 62:         {;main.c: 63:             counter ++;
 10124  002FC8  2A57               	incf	isrH@counter^0,f,c
 10125                           
 10126                           ;main.c: 64:         }
 10127  002FCA  EFF0  F017         	goto	i2l110
 10128  002FCE                     i2l4861:
 10129                           
 10130                           ;main.c: 66:         {;main.c: 67:             datos.state = 4;
 10131  002FCE  0E04               	movlw	4
 10132  002FD0  0100               	movlb	0	; () banked
 10133  002FD2  6FC3               	movwf	(_datos+3)& (0+255),b
 10134  002FD4                     
 10135                           ; BSR set to: 0
 10136                           ;main.c: 68:             datos.nextFunc = readUART;
 10137  002FD4  0E4E               	movlw	low _readUART
 10138  002FD6  6FD7               	movwf	(_datos+23)& (0+255),b
 10139  002FD8  0E29               	movlw	high _readUART
 10140  002FDA  6FD8               	movwf	(_datos+24)& (0+255),b
 10141  002FDC                     
 10142                           ; BSR set to: 0
 10143                           ;main.c: 69:             counter = 0;
 10144  002FDC  0E00               	movlw	0
 10145  002FDE  6E57               	movwf	isrH@counter^0,c
 10146  002FE0                     i2l110:
 10147  002FE0  C003  FFDA         	movff	??_isrH+2,fsr2h
 10148  002FE4  C002  FFD9         	movff	??_isrH+1,fsr2l
 10149  002FE8  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10150  002FEA  0011               	retfie		f
 10151  002FEC                     __end_of_isrH:
 10152                           	callstack 0
 10153                           
 10154                           	psect	rparam
 10155  0000                     
 10156                           	psect	temp
 10157  000058                     btemp:
 10158                           	callstack 0
 10159  000058                     	ds	1
 10160  0000                     int$flags	set	btemp
 10161  0000                     wtemp8	set	btemp+1
 10162  0000                     ttemp5	set	btemp+1
 10163  0000                     ttemp6	set	btemp+4
 10164  0000                     ttemp7	set	btemp+8
 10165                           
 10166                           	psect	idloc
 10167                           
 10168                           ;Config register IDLOC0 @ 0x200000
 10169                           ;	unspecified, using default values
 10170  200000                     	org	2097152
 10171  200000  FF                 	db	255
 10172                           
 10173                           ;Config register IDLOC1 @ 0x200001
 10174                           ;	unspecified, using default values
 10175  200001                     	org	2097153
 10176  200001  FF                 	db	255
 10177                           
 10178                           ;Config register IDLOC2 @ 0x200002
 10179                           ;	unspecified, using default values
 10180  200002                     	org	2097154
 10181  200002  FF                 	db	255
 10182                           
 10183                           ;Config register IDLOC3 @ 0x200003
 10184                           ;	unspecified, using default values
 10185  200003                     	org	2097155
 10186  200003  FF                 	db	255
 10187                           
 10188                           ;Config register IDLOC4 @ 0x200004
 10189                           ;	unspecified, using default values
 10190  200004                     	org	2097156
 10191  200004  FF                 	db	255
 10192                           
 10193                           ;Config register IDLOC5 @ 0x200005
 10194                           ;	unspecified, using default values
 10195  200005                     	org	2097157
 10196  200005  FF                 	db	255
 10197                           
 10198                           ;Config register IDLOC6 @ 0x200006
 10199                           ;	unspecified, using default values
 10200  200006                     	org	2097158
 10201  200006  FF                 	db	255
 10202                           
 10203                           ;Config register IDLOC7 @ 0x200007
 10204                           ;	unspecified, using default values
 10205  200007                     	org	2097159
 10206  200007  FF                 	db	255
 10207                           
 10208                           	psect	config
 10209                           
 10210                           ;Config register CONFIG1L @ 0x300000
 10211                           ;	PLL Prescaler Selection bits
 10212                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10213                           ;	System Clock Postscaler Selection bits
 10214                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10215                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10216                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10217  300000                     	org	3145728
 10218  300000  00                 	db	0
 10219                           
 10220                           ;Config register CONFIG1H @ 0x300001
 10221                           ;	Oscillator Selection bits
 10222                           ;	FOSC = HS, HS oscillator (HS)
 10223                           ;	Fail-Safe Clock Monitor Enable bit
 10224                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10225                           ;	Internal/External Oscillator Switchover bit
 10226                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10227  300001                     	org	3145729
 10228  300001  0C                 	db	12
 10229                           
 10230                           ;Config register CONFIG2L @ 0x300002
 10231                           ;	Power-up Timer Enable bit
 10232                           ;	PWRT = OFF, PWRT disabled
 10233                           ;	Brown-out Reset Enable bits
 10234                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10235                           ;	Brown-out Reset Voltage bits
 10236                           ;	BORV = 3, Minimum setting 2.05V
 10237                           ;	USB Voltage Regulator Enable bit
 10238                           ;	VREGEN = OFF, USB voltage regulator disabled
 10239  300002                     	org	3145730
 10240  300002  19                 	db	25
 10241                           
 10242                           ;Config register CONFIG2H @ 0x300003
 10243                           ;	Watchdog Timer Enable bit
 10244                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10245                           ;	Watchdog Timer Postscale Select bits
 10246                           ;	WDTPS = 32768, 1:32768
 10247  300003                     	org	3145731
 10248  300003  1E                 	db	30
 10249                           
 10250                           ; Padding undefined space
 10251  300004                     	org	3145732
 10252  300004  FF                 	db	255
 10253                           
 10254                           ;Config register CONFIG3H @ 0x300005
 10255                           ;	CCP2 MUX bit
 10256                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10257                           ;	PORTB A/D Enable bit
 10258                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10259                           ;	Low-Power Timer 1 Oscillator Enable bit
 10260                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10261                           ;	MCLR Pin Enable bit
 10262                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10263  300005                     	org	3145733
 10264  300005  81                 	db	129
 10265                           
 10266                           ;Config register CONFIG4L @ 0x300006
 10267                           ;	Stack Full/Underflow Reset Enable bit
 10268                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10269                           ;	Single-Supply ICSP Enable bit
 10270                           ;	LVP = OFF, Single-Supply ICSP disabled
 10271                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10272                           ;	ICPRT = OFF, ICPORT disabled
 10273                           ;	Extended Instruction Set Enable bit
 10274                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10275                           ;	Background Debugger Enable bit
 10276                           ;	DEBUG = 0x1, unprogrammed default
 10277  300006                     	org	3145734
 10278  300006  81                 	db	129
 10279                           
 10280                           ; Padding undefined space
 10281  300007                     	org	3145735
 10282  300007  FF                 	db	255
 10283                           
 10284                           ;Config register CONFIG5L @ 0x300008
 10285                           ;	Code Protection bit
 10286                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10287                           ;	Code Protection bit
 10288                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10289                           ;	Code Protection bit
 10290                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10291                           ;	Code Protection bit
 10292                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10293  300008                     	org	3145736
 10294  300008  0F                 	db	15
 10295                           
 10296                           ;Config register CONFIG5H @ 0x300009
 10297                           ;	Boot Block Code Protection bit
 10298                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10299                           ;	Data EEPROM Code Protection bit
 10300                           ;	CPD = OFF, Data EEPROM is not code-protected
 10301  300009                     	org	3145737
 10302  300009  C0                 	db	192
 10303                           
 10304                           ;Config register CONFIG6L @ 0x30000A
 10305                           ;	Write Protection bit
 10306                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10307                           ;	Write Protection bit
 10308                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10309                           ;	Write Protection bit
 10310                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10311                           ;	Write Protection bit
 10312                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10313  30000A                     	org	3145738
 10314  30000A  0F                 	db	15
 10315                           
 10316                           ;Config register CONFIG6H @ 0x30000B
 10317                           ;	Configuration Register Write Protection bit
 10318                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10319                           ;	Boot Block Write Protection bit
 10320                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10321                           ;	Data EEPROM Write Protection bit
 10322                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10323  30000B                     	org	3145739
 10324  30000B  E0                 	db	224
 10325                           
 10326                           ;Config register CONFIG7L @ 0x30000C
 10327                           ;	Table Read Protection bit
 10328                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10329                           ;	Table Read Protection bit
 10330                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10331                           ;	Table Read Protection bit
 10332                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10333                           ;	Table Read Protection bit
 10334                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10335  30000C                     	org	3145740
 10336  30000C  0F                 	db	15
 10337                           
 10338                           ;Config register CONFIG7H @ 0x30000D
 10339                           ;	Boot Block Table Read Protection bit
 10340                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10341  30000D                     	org	3145741
 10342  30000D  40                 	db	64
 10343                           tosu	equ	0xFFF
 10344                           tosh	equ	0xFFE
 10345                           tosl	equ	0xFFD
 10346                           stkptr	equ	0xFFC
 10347                           pclatu	equ	0xFFB
 10348                           pclath	equ	0xFFA
 10349                           pcl	equ	0xFF9
 10350                           tblptru	equ	0xFF8
 10351                           tblptrh	equ	0xFF7
 10352                           tblptrl	equ	0xFF6
 10353                           tablat	equ	0xFF5
 10354                           prodh	equ	0xFF4
 10355                           prodl	equ	0xFF3
 10356                           indf0	equ	0xFEF
 10357                           postinc0	equ	0xFEE
 10358                           postdec0	equ	0xFED
 10359                           preinc0	equ	0xFEC
 10360                           plusw0	equ	0xFEB
 10361                           fsr0h	equ	0xFEA
 10362                           fsr0l	equ	0xFE9
 10363                           wreg	equ	0xFE8
 10364                           indf1	equ	0xFE7
 10365                           postinc1	equ	0xFE6
 10366                           postdec1	equ	0xFE5
 10367                           preinc1	equ	0xFE4
 10368                           plusw1	equ	0xFE3
 10369                           fsr1h	equ	0xFE2
 10370                           fsr1l	equ	0xFE1
 10371                           bsr	equ	0xFE0
 10372                           indf2	equ	0xFDF
 10373                           postinc2	equ	0xFDE
 10374                           postdec2	equ	0xFDD
 10375                           preinc2	equ	0xFDC
 10376                           plusw2	equ	0xFDB
 10377                           fsr2h	equ	0xFDA
 10378                           fsr2l	equ	0xFD9
 10379                           status	equ	0xFD8

Data Sizes:
    Strings     125
    Constant    0
    Data        25
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      87
    BANK0           160     44     121
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    appSubGiveElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2261_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memcmp@vr	PTR const void  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@vl	PTR const void  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    sendData@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    sendData@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_10(CODE[13]), STR_9(CODE[17]), STR_8(CODE[12]), STR_6(CODE[14]), 
		 -> STR_4(CODE[6]), STR_3(CODE[12]), datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    S196_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _warning->_Lcd_Out
    _sendData->_strlen
    _readUART->_memset
    _confirmacion->_Lcd_Out
    _appBat->___fltol
    _appADC->___fltol
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_setServo
    _appInit->_uart_Init
    _uart_Init->___lldiv
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _appSubGiveElemts->_setServo
    _setServo->_setServoAngle
    _sprintf->___fltol
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _sendinformation->_appBat
    _appStateRecolectData->_appBat
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    ___awmod->___fltol
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  155139
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
                       _confirmacion *
                           _readUART *
                    _sendinformation *
                            _warning *
 ---------------------------------------------------------------------------------
 (1) _warning                                              2     2      0    3439
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
                       _appTimerStop
                           _setServo
 ---------------------------------------------------------------------------------
 (1) _sendinformation                                      0     0      0   67164
                             _appADC
                             _appBat
                          _appElemts
                      _appTimerStart
                             _memset
                           _sendData
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendData                                             5     3      2     636
                                             10 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _readUART                                             2     2      0    3356
                                             18 COMRAM     2     2      0
                            _Lcd_Cmd
                             _memcmp
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              11     5      6     637
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _confirmacion                                         2     2      0    2229
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   55659
                             _appADC
                             _appBat
                     _appCounterStop
                          _appElemts
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            2     0      2   14405
                                             36 BANK0      2     0      2
                            _Lcd_Out
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appCounterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   19745
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20299
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                             10 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     817
                                             74 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             49 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     613
                                              2 BANK0      6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0    1736
                           _setServo
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    4308
                            _adcInit
                     _appCounterInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                          _servoInit
                           _setServo
                          _uart_Init
 ---------------------------------------------------------------------------------
 (2) _uart_Init                                            4     0      4     412
                                             19 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              6 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _servoInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2544
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              9 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appCounterInit                                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   17248
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                   _appSubGiveElemts
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGiveElemts                                     2     0      2    1286
                                             14 COMRAM     2     0      2
                    _appCounterStart
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _setServo                                             4     2      2    1210
                                             10 COMRAM     4     2      2
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (3) _setServoAngle                                        4     3      1     208
                                              6 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _appCounterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   15786
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    9536
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8324
                                             79 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    7794
                                             69 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4434
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2785
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1396
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     555
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2543
                                              6 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    2053
                                              9 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appSubGiveElemts
       _appCounterStart
       _setServo
         _setServoAngle
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appCounterInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _servoInit
     _setServo
       _setServoAngle
     _uart_Init
       ___lldiv
   _appStateInitial *
     _setServo
       _setServoAngle
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appCounterStop
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _setServo
       _setServoAngle
   _confirmacion *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
   _readUART *
     _Lcd_Cmd
     _memcmp
     _memset
   _sendinformation *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appTimerStart
     _memset
     _sendData
       _strlen
     _sprintf
       ___awmod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _warning *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
     _appTimerStop
     _setServo
       _setServoAngle

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      57       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D0      20        0.0%
DATA                 0      0      D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jun 03 00:13:36 2021

                  fp__readUART 000E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                  ?_confirmacion 0001                             l30 36B6  
                           l32 36C4                             l33 36CC                             l42 1A5E  
                           l27 3582                             l39 1DC0                             bsr 000FE0  
          ___wmul@multiplicand 0009                            l150 2C96                            l230 381E  
                          l151 2CE2                            l152 2D34                            l137 1876  
                          l250 2742                            l234 263A                            l251 2746  
                          l243 2734                            l236 2640                            l260 379C  
                          l181 2500                            l165 2AE8                            l237 2646  
                          l246 26F0                            l430 2A1C                            l263 383E  
                          l184 262A                            l440 37EC                            l272 385C  
                          l248 26F6                            l424 3400                            l249 26FC  
                          l257 37C6                            l345 35C8                            l353 311C  
                          l266 3858                            l434 32EE                            l362 3210  
                          l187 31A0                            l275 3854                            l372 3832  
                          l348 3850                            l356 34D0                            l269 3848  
                          l437 3346                            l278 32E4                            l359 34EE  
                          l384 3538                            l369 294C                            l554 20D8  
                          l474 2F46                            l378 327E                            l467 2F36  
                          l387 2DF0                            l567 23B2                            l737 284E  
                          l684 2EA2                adcInit@ADC_PINs 0008                            _PR2 000FCB  
                          _abs 3652                            _pad 2BB4                   ___awmod@sign 009B  
                          tosl 000FFD                            wreg 000FE8                   ___flmul@aexp 002A  
                 ___flmul@bexp 002B                   ___flmul@sign 0025                   ___flmul@temp 0030  
                 ___flmul@prod 002C                   ___fltol@exp1 0095                           l1022 1042  
                         l1102 1B4E                           l1024 0EA2                           l1033 0EE8  
                         l1202 168C                           l1035 0F60                           l1027 0E66  
                         l1123 3088                           ?_abs 0019                           l1140 3452  
                         l1036 0F4E                           l1061 0B3A                           l1109 1BAA  
                         l1302 2BB2                           l1310 3650                           l1054 0944  
                         l1127 224E                           l1231 13AE                           l1071 0C6A  
                         l1063 0BB2                           l1216 1136                           l1064 0BA0  
                         l3001 2088                           l1313 385E                           l1242 3688  
                         l1058 0CA8                           l3003 2098                           l3011 2254  
                         l1171 2BF8                           l3005 20B8                           l3021 22B4  
                         l3013 2262                           l1245 3690                           l3101 145E  
                         l1237 33A0                           l1174 2C3A                           l1182 144E  
                         l1238 33A8                           l3031 232A                           l3023 22D2  
                         l3015 2282                           l1319 373A                           l3111 1496  
                         l3103 1470                           l1095 1AB6                           l1176 2C74  
                         l1184 1456                           l1273 1F48                           l3041 2392  
                         l3033 234A                           l3025 22DA                           l3017 2286  
                         l3009 2250                           l3113 149C                           l3121 158E  
                         l3105 147E                           l3201 1098                           l4001 1B44  
                         l1098 1C12                           l3035 235C                           l3027 22EE  
                         l3019 2294                           l3051 2BE4                           l3123 15A8  
                         l3131 1608                           l3115 151E                           l3107 1484  
                         l3203 109A                           l4011 1BBA                           l4003 1B80  
                         l1276 1F50                           l3301 2590                           l3029 22FC  
                         l3037 2362                           l3061 2C48                           l3053 2BF0  
                         l3045 2BB4                           l3141 164C                           l3133 161A  
                         l3125 15C6                           l3117 1524                           l3109 148C  
                         l3221 10C4                           l3213 10B8                           l3205 10AC  
                         l4101 3776                           l4021 1C02                           l4013 1BBE  
                         l4005 1B8C                           l3311 2618                           l3303 2596  
                         l1279 3704                           l3071 36CE                           l1287 34A4  
                         l3151 1DD6                           l3039 2372                           l3063 2C5C  
                         l3055 2C04                           l3047 2BC2                           l3143 1654  
                         l3135 1628                           l3127 15E0                           l3119 152A  
                         l3231 1146                           l4031 3568                           l4111 378A  
                         l4103 377A                           l4015 1BE2                           l4007 1B9A  
                         l3321 2452                           l3313 261A                           l3305 2608  
                         l3401 2192                           l3081 349A                           l3161 1E34  
                         l3153 1DDA                           l3057 2C18                           l3049 2BD6  
                         l3137 162E                           l3145 1664                           l3129 15FA  
                         l3241 11DC                           l3233 116A                           l5001 10F6  
                         l3225 10D0                           l3217 10BE                           l3209 10B2  
                         l4041 3580                           l4033 356C                           l4025 353C  
                         l4121 3794                           l4113 378C                           l4105 3784  
                         l4017 1BF2                           l4009 1BB8                           l4201 331A  
                         l3331 24E2                           l3323 2454                           l3315 23B6  
                         l3307 2610                           l3411 21F2                           l3083 349E  
                         l3075 3454                           l5003 1E7E                           l3171 1E60  
                         l3155 1DDE                           l3067 3652                           l3059 2C1C  
                         l3139 1640                           l3091 13F8                           l3251 1268  
                         l3243 11EA                           l3235 11A0                           l3227 1124  
                         l4131 383C                           l4035 3574                           l4027 354C  
                         l4123 3796                           l4115 378E                           l4107 3786  
                         l4019 1C00                           l4211 3048                           l4203 2FEC  
                         l3333 24E8                           l3325 245A                           l3317 23BA  
                         l3309 2612                           l5005 2A60                           l3413 2226  
                         l3405 21AC                           l3077 3458                           l3181 1F08  
                         l3173 1E94                           l3165 1E3A                           l3157 1DFA  
                         l3149 1DC2                           l3069 366C                           l3093 1418  
                         l3261 1330                           l3253 128C                           l3237 11AE  
                         l3229 1144                           l3501 1788                           l3341 2632  
                         l4133 3856                           l4037 357C                           l4029 3558  
                         l4125 3798                           l4117 3790                           l4109 3788  
                         l4221 3588                           l4213 305A                           l4205 3000  
                         l4301 327A                           l3335 24EA                           l3327 24D8  
                         l3319 244A                           l3415 2232                           l3407 21D8  
                         l3079 346C                           l3183 1F1A                           l3167 1E50  
                         l3159 1E30                           l3095 1426                           l3087 13B0  
                         l3271 136C                           l3263 133E                           l3255 12D4  
                         l3247 1232                           l3239 11BC                           l3191 1044  
                         l3511 17C0                           l3503 178C                           l3351 2690  
                         l3343 2634                           l4039 357E                           l4135 3840  
                         l4071 311E                           l4127 379A                           l4119 3792  
                         l4151 33EE                           l4231 35A6                           l4223 358C  
                         l4215 3066                           l4207 300E                           l4311 3534  
                         l4303 34F0                           l3337 24F0                           l3329 24E0  
                         l3441 2A42                           l3433 2A20                           l3417 2238  
                         l3185 1F2C                           l3177 1ECA                           l3169 1E58  
                         l3097 1428                           l3089 13D0                           l3265 1352  
                         l3249 1244                           l3193 1068                           l3521 17F8  
                         l3513 17CE                           l3505 179A                           l3361 26EA  
                         l3353 26A2                           l3601 37A8                           l4129 3834  
                         l4145 384A                           l4081 3188                           l4073 312E  
                         l4161 33F8                           l4153 33F0                           l4233 35BA  
                         l4225 3592                           l4137 3852                           l4209 3020  
                         l4305 3502                           l3451 2AB4                           l3435 2A24  
                         l3419 223C                           l3099 1442                           l3259 130C  
                         l3195 1076                           l3275 1378                           l3531 183A  
                         l3523 1806                           l3515 17DA                           l3507 17A6  
                         l3355 26B4                           l3347 264C                           l3339 262E  
                         l3603 37B2                           l4075 3146                           l4091 3816  
                         l4083 3808                           l3611 2EB4                           l4163 33FA  
                         l4155 33F2                           l4147 33AA                           l4227 3596  
                         l4219 3584                           l4307 3516                           l3293 2504  
                         l3453 2AB8                           l3437 2A2E                           l3445 2A4C  
                         l3277 139C                           l3269 135E                           l3197 1088  
                         l3533 1846                           l3525 1812                           l3517 17E8  
                         l3509 17B4                           l3461 169A                           l3365 2702  
                         l3357 26C8                           l3349 267E                           l3605 37B4  
                         l3541 2C76                           l4077 3158                           l4093 3818  
                         l4085 3810                           l3621 2EF6                           l3613 2ECA  
                         l4165 33FC                           l4157 33F4                           l4149 33B0  
                         l4229 35A2                           l3701 0E42                           l4309 351C  
                         l4261 34C4                           l3295 2508                           l3439 2A38  
                         l3447 2A86                           l3199 108C                           l3535 1854  
                         l3527 1820                           l3519 17F4                           l3471 16CE  
                         l3463 169E                           l3607 385A                           l3359 26DA  
                         l4191 3820                           l3551 2CAE                           l3543 2C82  
                         l4079 316A                           l4095 381A                           l4087 3812  
                         l3623 2F14                           l3615 2ED2                           l4167 33FE  
                         l4159 33F6                           l3711 0E90                           l3703 0E56  
                         l3631 0CAA                           l3383 3694                           l4263 34DE  
                         l3297 2586                           l3449 2A90                           l3393 20F8  
                         l3529 182C                           l3481 1710                           l3473 16DC  
                         l3465 16B0                           l3537 1860                           l4193 3824  
                         l3561 2CBC                           l3553 2CB4                           l3545 2C92  
                         l4097 381C                           l4089 3814                           l3625 2F24  
                         l3617 2EDE                           l3609 2EA4                           l4601 2E28  
                         l3721 0ED8                           l3713 0EA0                           l3705 0E64  
                         l3641 0CE6                           l3633 0CB6                           l3801 0934  
                         l3385 36A6                           l4265 34EC                           l4257 34A6  
                         l3299 258E                           l3395 2104                           l2931 2B0E  
                         l3539 1864                           l3491 1748                           l3483 171C  
                         l3475 16E8                           l3467 16B4                           l3459 168E  
                         l3571 2D02                           l3563 2CBE                           l3555 2CB6  
                         l4099 3770                           l3627 2F26                           l3619 2EEC  
                         l4611 2E6E                           l4603 2E3A                           l3731 0F18  
                         l3723 0EE6                           l3715 0EB2                           l3707 0E70  
                         l3651 0D16                           l3643 0CF6                           l3635 0CC4  
                         l3811 0984                           l3803 0954                           l3387 36B4  
                         l4195 32E6                           l4291 321C                           l4259 34B2  
                         l3389 20DA                           l2933 2B18                           l2941 3706  
                         l3493 1754                           l3485 1720                           l3477 16F6  
                         l3469 16C2                           l3581 2D1C                           l3573 2D04  
                         l3565 2CD0                           l3557 2CB8                           l3629 2F30  
                         l4621 2E9A                           l4613 2E76                           l4605 2E42  
                         l3741 0F8A                           l3733 0F46                           l3717 0EC8  
                         l3725 0EF8                           l3709 0E8E                           l3661 0D4C  
                         l3653 0D1C                           l3645 0CF8                           l3637 0CC6  
                         l3821 09D4                           l3813 098E                           l3805 0964  
                         l4701 32CC                           l4197 32FC                           l4293 3234  
                         ?_pad 0017                           l3399 213A                           l2935 2B36  
                         l2927 2AEA                           l2951 360E                           l2943 3712  
                         l3495 1762                           l3487 172E                           l3479 1702  
                         l4711 28A0                           l4703 2850                           l3591 2D28  
                         l3583 2D1C                           l3575 2D06                           l3567 2CFA  
                         l3559 2CBA                           l4615 2E7C                           l4607 2E4A  
                         l3751 1002                           l3743 0FB4                           l3727 0F06  
                         l3719 0ECE                           l3671 0D8C                           l3663 0D5C  
                         l3655 0D2A                           l3639 0CD6                           l3647 0D00  
                         l3831 0A16                           l3823 09E0                           l3815 09A4  
                         l4631 2774                           l4199 3318                           l4295 3246  
                         l4287 3212                           l2961 37E4                           l2937 2B6C  
                         l2929 2AFC                           l2953 361A                           l2945 3716  
                         l3497 176E                           l3489 173A                           l4713 28B2  
                         l4721 2924                           l4705 285E                           l3593 2D28  
                         l3585 2D1C                           l3577 2D08                           l3569 2D00  
                         l4609 2E58                           l4617 2E82                           l3761 1038  
                         l3753 101E                           l3737 0F70                           l3745 0FB8  
                         l3729 0F0A                           l3673 0D9C                           l3681 0DBC  
                         l3665 0D5E                           l3657 0D2C                           l3649 0D10  
                         l3841 0A78                           l3833 0A26                           l3825 09EE  
                         l3817 09B0                           l3809 0978                           l4641 27C2  
                         l4633 279E                           l4625 2748                           l4297 3258  
                         l4289 3216                           l4801 29F2                           l2971 1F84  
                         l2955 362C                           l2947 372E                           l4571 3350  
                         l3499 177C                           l4723 2938                           l4715 28C2  
                         l4707 287E                           l3595 2D2E                           l3587 2D22  
                         l3579 2D0A                           l4619 2E92                           l3755 1022  
                         l3747 0FD2                           l3739 0F7C                           l3691 0DFA  
                         l3683 0DCC                           l3675 0DA4                           l3659 0D3C  
                         l3667 0D66                           l3851 0B20                           l3843 0A94  
                         l3835 0A40                           l3827 09FA                           l3819 09C8  
                         l3771 088C                           l4651 27EE                           l4635 27A0  
                         l4627 2760                           l4299 3266                           l4731 30CA  
                         l4803 2A0E                           l4811 3742                           l2981 1FC6  
                         l2973 1F88                           l2965 1F52                           l2957 3630  
                         l4573 335E                           l4581 341C                           l4717 28EC  
                         l4709 2894                           l3597 2D2E                           l3589 2D22  
                         l3757 1030                           l3749 0FE8                           l3693 0E0A  
                         l3685 0DCC                           l3677 0DA8                           l3669 0D76  
                         l3861 0B5C                           l3853 0B2A                           l3845 0ABE  
                         l3837 0A50                           l3829 0A0A                           l3781 08CC  
                         l3773 089A                           l4661 281E                           l4637 27B0  
                         l4741 3102                           l4733 30E2                           l4725 308A  
                         l4805 2A14                           l4813 3744                           l2959 37C8  
                         l2991 2020                           l2983 1FE4                           l2975 1F96  
                         l2967 1F56                           l4575 3384                           l4583 3424  
                         l4719 290C                           l3599 37A0                           l4591 2DF8  
                         l3759 1036                           l3695 0E1A                           l3871 0BCE  
                         l3863 0B6A                           l3855 0B38                           l3847 0AF4  
                         l3839 0A6C                           l3791 08FC                           l3783 08D2  
                         l3775 089C                           l4663 282E                           l4647 27DA  
                         l4639 27B4                           l4671 1C36                           l4743 3104  
                         l4735 30EA                           l4727 30B4                           l4751 31AC  
                         l4815 3746                           l4807 373C                           l2993 204E  
                         l2985 1FEC                           l2977 1FB6                           l2969 1F64  
                         l4569 3348                           l4585 3440                           l4577 3402  
                         l4593 2E06                           l3697 0E2A                           l3689 0DE0  
                         l3881 0C38                           l3873 0BDC                           l3865 0B98  
                         l3857 0B4A                           l3849 0B02                           l3793 08FE  
                         l3785 08E2                           l3777 08AC                           l3769 0880  
                         l4665 283E                           l4657 2802                           l4649 27E4  
                         l4681 1D8E                           l4673 1C5E                           l4737 30EE  
                         l4729 30C8                           l4745 3112                           l4761 31F6  
                         l4753 31B2                           l4817 374A                           l4809 3740  
                         l2995 206E                           l2987 2000                           l2979 1FBA  
                         l4579 3414                           l4595 2E0E                           l3699 0E32  
                         l3891 0C8E                           l3883 0C52                           l3875 0C06  
                         l3859 0B58                           l3795 090E                           l3787 08E8  
                         l3779 08BC                           l4659 280E                           l4683 1DBE  
                         l4675 1CB6                           l4691 1982                           l4739 30F4  
                         l4763 3202                           l4755 31CA                           l4747 31A2  
                         l4771 2D50                           l2997 2070                           l2989 200E  
                         l4597 2E12                           l4589 2DF2                           l3885 0C6E  
                         l3893 0C94                           l3869 0BC2                           l3877 0C0A  
                         l3797 091E                           l3789 08EE                           l3981 1A72  
                         l4677 1D40                           l4669 1C14                           l4693 1A1A  
                         l4685 1878                           l4765 320C                           l4757 31D8  
                         l4749 31A8                           l4781 2DC2                           l4773 2D6A  
                         l2999 2082                           l4599 2E20                           l3895 0C98  
                         l3887 0C7E                           l3879 0C24                           l3799 092E  
                         l3991 1AF0                           l3983 1A80                           l4679 1D88  
                         l4695 1A46                           l4687 18B6                           l4759 31DE  
                         l4791 297C                           l4783 2DC6                           l4775 2D78  
                         l4767 2D36                           l3889 0C8C                           l3993 1AF8  
                         l3985 1AC6                           l4689 1934                           l4697 3280  
                         l4793 2998                           l4785 2DE2                           l4777 2D84  
                         l4769 2D44                           l3995 1B04                           l3987 1ADC  
                         l3979 1A62                           l4699 32A2                           l4795 29A6  
                         l4787 2DE8                           l4779 2DA0                           l3997 1B36  
                         l4797 29D4                           l4789 294E                           l3999 1B38  
                         l4799 29DA                           l4997 2660                           l4999 2716  
                         STR_1 0820                           STR_2 086A                           STR_3 0854  
                         STR_4 0873                           STR_5 0879                           STR_6 0812  
                         STR_7 087B                           STR_8 0848                           STR_9 0801  
                         u2100 372E                           u2101 372A                           u2110 3650  
                         u2111 364C                           u2120 1F64                           u2200 2294  
                         u3000 17B4                           u2121 1F60                           u2201 2290  
                         u3001 17B0                           u2130 1F96                           u2210 22D2  
                         u3010 17CE                           u2131 1F92                           u2211 22CE  
                         u3011 17CA                           u2300 36FE                           u2220 22FC  
                         u2060 2AFC                           u3020 17E8                           u3100 2ECA  
                         u2301 36F8                           u2141 1FC0                           u2221 22F8  
                         u2061 2AF8                           u3021 17E4                           u3101 2EC6  
                         u2310 3700                           u2150 1FE4                           u2230 232A  
                         u2070 2B0E                           u3030 1806                           u3110 2EEC  
                         u2151 1FE0                           u2231 2326                           u2071 2B0A  
                         u3031 1802                           u3111 2EE8                           u2320 346C  
                         u2160 200E                           u2240 2372                           u2080 2B36  
                         u2400 147E                           u3040 1820                           u3120 2F14  
                         u3200 0DCC                           u2321 3468                           u2161 200A  
                         u2241 236E                           u2081 2B32                           u2401 147A  
                         u3041 181C                           u3121 2F10                           u3201 0DC8  
                         u2330 349A                           u2170 204E                           u2090 2B6C  
                         u2250 2BC2                           u2410 15A8                           u3050 183A  
                         u3210 0E42                           u3130 0CC4                           u2331 3496  
                         u2171 204A                           u2091 2B68                           u2251 2BBE  
                         u2411 15A4                           u3051 1836                           u3211 0E3E  
                         u3131 0CC0                           u2500 1E30                           u2180 2098  
                         u2260 2BE4                           u2420 15C6                           u2340 13E0  
                         u3060 1854                           u3300 0F5C                           u3220 0E64  
                         u3140 0CD6                           u2501 1E2C                           u2181 2094  
                         u2261 2BE0                           u2421 15C2                           u2341 13DA  
                         u3061 1850                           u3301 0F58                           u3221 0E60  
                         u3141 0CD2                           u2510 1E4C                           u2190 2262  
                         u2270 2C3A                           u2430 15E0                           u2350 13E2  
                         u4110 33A0                           u3070 1876                           u3310 0F70  
                         u3230 0E8E                           u3150 0CE6                           u2511 1E48  
                         u2191 225E                           u2271 2C36                           u2431 15DC  
                         u4111 339C                           u3071 1872                           u3311 0F6C  
                         u3231 0E8A                           u3151 0CE2                           u2520 1F02  
                         u2280 2C48                           u2440 15FA                           u2360 13F8  
                         u2600 11AE                           u3080 2CE2                           u4120 2E06  
                         u3320 0F8A                           u3240 0EB2                           u3160 0D2A  
                         u3400 090E                           u4200 27C2                           u2521 1EFC  
                         u2281 2C44                           u2441 15F6                           u2361 13F4  
                         u2601 11AA                           u3081 2CDE                           u4121 2E02  
                         u3321 0F86                           u3241 0EAE                           u3161 0D26  
                         u3401 090A                           u4201 27BE                           u2530 1F04  
                         u2290 366C                           u2450 1608                           u2370 1426  
                         u2610 122A                           u3090 37C6                           u4130 2E20  
                         u3330 0FD2                           u3250 0EC8                           u3170 0D3C  
                         u3410 091E                           u4210 27D6                           u2291 3668  
                         u2451 1604                           u2371 1422                           u2611 1224  
                         u3091 37C2                           u4131 2E1C                           u3331 0FCE  
                         u3251 0EC4                           u3171 0D38                           u3411 091A  
                         u4211 27D2                           u2540 1F1A                           u2460 161A  
                         u2380 1442                           u2620 122C                           u4140 2E3A  
                         u3340 1002                           u3260 0EE6                           u3180 0D4C  
                         u3500 0BC2                           u3420 0954                           u4220 27FE  
                         u4300 30C8                           u2541 1F16                           u2461 1616  
                         u2381 143E                           u4141 2E36                           u3341 0FFE  
                         u3261 0EE2                           u3181 0D48                           u3501 0BBE  
                         u3421 0950                           u4221 27FA                           u4301 30C4  
                         u2550 1F2C                           u2470 1628                           u2390 1470  
                         u2630 1244                           u4150 2E58                           u3350 1030  
                         u3270 0F06                           u3190 0D8C                           u3510 0BDC  
                         u3430 0964                           u4230 281E                           u4310 30E2  
                         u2551 1F28                           u2471 1624                           u2391 146C  
                         u2631 1240                           u4151 2E54                           u3351 102C  
                         u3271 0F02                           u3191 0D88                           u3511 0BD8  
                         u3431 0960                           u4231 281A                           u4311 30DE  
                         u2480 1640                           u2640 1268                           u2560 1068  
                         u4160 2E6E                           u3280 0F18                           u3520 0C24  
                         u3440 0ADE                           u3360 089A                           u4240 282E  
                         u4320 297C                           u2705 23C2                           u2481 163C  
                         u2641 1264                           u2561 1064                           u4161 2E6A  
                         u3281 0F14                           u3521 0C20                           u3361 0896  
                         u4241 282A                           u4321 2978                           u2490 1DFA  
                         u2650 128C                           u2570 1136                           u4170 2E92  
                         u3290 0F46                           u3530 0C52                           u3450 0B38  
                         u3370 08AC                           u2810 36C4                           u4250 1D88  
                         u4330 29D4                           u2715 23E6                           u2491 1DF6  
                         u2651 1288                           u2571 1132                           u4171 2E8E  
                         u3291 0F42                           u3531 0C4E                           u3451 0B34  
                         u3371 08A8                           u2811 36C0                           u4251 1D84  
                         u4331 29D0                           u2820 20F4                           u2660 1330  
                         u2580 1144                           u2900 16B0                           u3540 0C8C  
                         u3460 0B58                           u3380 08BC                           u4180 2760  
                         u3700 1ADC                           u4260 1DBE                           u2725 240C  
                         u2821 20F0                           u2661 132C                           u2581 1140  
                         u2901 16AC                           u3541 0C88                           u3461 0B54  
                         u3445 0AD4                           u3381 08B8                           u4181 275C  
                         u3701 1AD8                           u4261 1DBA                           u2830 2136  
                         u2590 116A                           u2910 16C2                           u4270 28B2  
                         u3470 0B6A                           u3390 08FC                           u4190 2794  
                         u3710 1B32                           u2735 2430                           u2831 2132  
                         u2591 1166                           u2911 16BE                           u4271 28AE  
                         u3471 0B66                           u3391 08F8                           u3711 1B2E  
                         u2840 21A8                           u2920 16DC                           u4280 28C2  
                         u2760 2690                           u3480 0B98                           u3720 1B7C  
                         u2745 2464                           u2841 21A4                           u2921 16D8  
                         u4281 28BE                           u2761 268C                           u3481 0B94  
                         u3721 1B78                           u2850 21EE                           u2930 16F6  
                         u4290 2938                           u2770 26B4                           u3810 33E4  
                         u3490 0BAE                           u3730 1B9A                           u2755 24A8  
                         u2675 2510                           u2851 21EA                           u2931 16F2  
                         u4291 2934                           u2771 26B0                           u3491 0BAA  
                         u4195 278A                           u3731 1B96                           u4507 3226  
                         u2860 224E                           u2940 1710                           u2780 26DA  
                         u3740 1BAA                           u4348 3754                           u2685 252A  
                         u2861 224A                           u2941 170C                           u2781 26D6  
                         u3741 1BA6                           u4517 36AC                           u4349 3768  
                         u2870 2AB0                           u2950 172E                           u2790 2742  
                         u3750 1BB8                           u2695 2550                           u2951 172A  
                         u2791 273E                           u4607 2696                           u4527 3138  
                         u3815 33DA                           u3751 1BB4                           u2880 2AD8  
                         u2960 1748                           u3760 1BF2                           u3680 1A72  
                         u3920 34C4                           u2961 1744                           u4617 26BA  
                         u4537 3174                           u3761 1BEE                           u3681 1A6E  
                         u3921 34C0                           u2890 2AE8                           u2970 1762  
                         u3770 1C00                           u3690 1A80                           u3850 32FC  
                         u3930 34DE                           u4707 24DA                           u2891 2AE4  
                         u2971 175E                           u4627 26E0                           u4547 3192  
                         u3771 1BFC                           u3691 1A7C                           u3851 32F8  
                         u4467 29E4                           u3931 34DA                           _RCIE 007CED  
                         u2980 177C                           u3780 354C                           u3860 3346  
                         u3940 327A                           _RCIF 007CF5                           u4717 24E4  
                         u4637 2588                           u2877 2AA6                           u2981 1778  
                         u3781 3548                           u4557 2C88                           u3861 3342  
                         u3941 3276                           u4477 31BE                           u2990 179A  
                         u3870 3020                           u3950 3516                           u4727 24EC  
                         u4647 2592                           u2887 2ACE                           u2991 1796  
                         u4567 2CB0                           u3871 301C                           u3951 3512  
                         u4487 31EA                           u3880 3048                           u4737 24F6  
                         u4657 260A                           u4577 2CC6                           u3881 3044  
                         u4497 3526                           u3890 305A                           u4667 2614  
                         u4587 2CFC                           u3891 3056                           u4677 2620  
                         u4597 2D12                           u4687 244C                           u4697 2456  
                         i1l99 00AC                           _TMR0 000FD6                           _TMR2 000FCC  
                         _TMR3 000FB2                           abs@a 0019                           _dbuf 0064  
                         _atoi 1DC2                           _main 373C                           _dtoa 13B0  
                         _isrH 0008                           _isrL 0018                           _prec 0053  
                         _nout 0060                           pad@i 001E                           pad@p 001B  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 0020  
                         fsr2l 000FD9                           btemp 0058                           prodh 000FF4  
                         prodl 000FF3                           start 00BC                ___fldiv@new_exp 0043  
 __end_of_appStateRecolectData 311E                __end_of_Lcd_Cmd 262C                __end_of_Lcd_Out 2AEA  
                 ___param_bank 000000                     _Lcd_Chr_CP 23B4           __size_of_appLCD_Init 0084  
               ??_confirmacion 0011        __size_of_appCounterInit 000A                          ??_abs 001B  
                        ??_pad 001D        __size_of_appCounterStop 0004                 setServo@pulsos 000B  
                ___fltol@sign1 0094                __end_of___aodiv 20DA                          ?_atoi 000E  
                        ?_main 0001                          ?_dtoa 0022                __end_of___aomod 23B4  
                        ?_isrH 0001                          ?_isrL 0001                __end_of_adcInit 3584  
              __end_of___fldiv 1044                          _ADRES 000FC3                          STR_10 083B  
                        STR_11 0839                          STR_12 082E                          STR_13 082E  
                        STR_14 0860                          STR_15 0860                __end_of___awmod 2EA4  
              __end_of___flmul 0CAA                __end_of___fltol 2850                __end_of___lldiv 2F48  
                        i2l110 2FE0        __end_of_appStateInitial 34F0                          _RCREG 000FAE  
                 vfpfcnvrt@fmt 0048                          _SPBRG 000FAF                          _PORTB 000F81  
                        _TRISB 000F93                          _TXREG 000FAD                __end_of_appInit 35CA  
        appSubGetData@cantidad 00BA                          _datos 00C0                          _flags 0055  
                        _fputc 2AEA                          _fputs 360E                __end_of_isdigit 3706  
                        atoi@n 001B                          pad@fp 0017                          atoi@s 000E  
                        _width 0062                          _putch 385E                          dtoa@d 0024  
                        dtoa@i 0044                          dtoa@n 003C                          dtoa@p 0036  
                        dtoa@s 003A                          dtoa@w 0038                __end_of_teclado 1878  
              __end_of_isspace 34A6                          pclath 000FFA                          tablat 000FF5  
              __end_of_warning 3280                          ttemp5 0059                          ttemp6 005C  
                        ttemp7 0060                          status 000FD8                          wtemp8 0059  
              __end_of_sprintf 3454           __end_of_appTimerInit 379E           __end_of_appTimerStop 385A  
             __end_of_Lcd_Init 2D36                    isrH@counter 0057                __initialization 35CA  
                 __end_of_atoi 1F52                   __end_of_main 3770                   __end_of_dtoa 168E  
                 __end_of_isrH 2FEC                   __end_of_isrL 00BC                         ??_atoi 0010  
                       ??_main 0053                         ??_dtoa 002C                         ??_isrH 0001  
                       ??_isrL 0004       __size_of_appCounterStart 0004                  __activetblptr 000002  
               _appGetElements 31A2          __end_of_setServoAngle 2748                         ?_fputc 0007  
                       ?_fputs 0010          __size_of_appISRConfig 0008                         ?_putch 0001  
                       i1l4821 0034                         i1l4831 006A                         i1l4823 0042  
                       i1l4841 00A4                         i1l4833 007C                         i1l4825 0044  
                       i1l4835 0080                         i1l4827 0048                         i1l4819 0026  
                       i1l4829 005A                         i1l4837 008C                         i1l4839 009C  
                       i2l4851 2F76                         i2l4843 2F52                         i2l4861 2FCE  
                       i2l4845 2F60                         i2l4853 2F7E                         i2l4863 2FD4  
                       i2l4855 2F8C                         i2l4847 2F6E                         i2l4865 2FDC  
                       i2l4857 2F9A                         i2l4849 2F70                         i2l4859 2FC8  
                    ??_Lcd_Cmd 0007                  vfpfcnvrt@done 009C                         _TMR0IE 007F95  
                       _TMR0IF 007F92                         _TMR3IE 007D01                         _TMR3IF 007D09  
                    ??_Lcd_Out 000D               __end_of___xxtofl 1C14                   vfprintf@cfmt 0050  
            ?_appSubGiveElemts 000F                    ?_Lcd_Chr_CP 0001                         _appADC 1C14  
                    ??___aodiv 0017                      ??___aomod 0017                         ___wmul 37C8  
                    ??_adcInit 0007                      ??___fldiv 003A                      ??___awmod 0053  
                    ??___flmul 0021                         _appBat 1878                      ??___fltol 004F  
                    ??___lldiv 000F               __end_of_readUART 2A1E             ??_appSubGiveElemts 0011  
                       _memcmp 2FEC                         _memset 20DA                         clear_0 35F0  
              ___awmod@divisor 0098                      ??_appInit 0018         __end_of_appGetElements 3212  
              ___awmod@counter 009A                         pad@buf 0019                         _puerto 0084  
             __end_of_sendData 3348                         dtoa@fp 0022                         _strlen 3706  
             __end_of_setServo 37C8                   _appISRConfig 384A                         fputc@c 0007  
             ?_appStateInitial 0001                         fputs@c 0014                         fputs@i 0015  
                       fputs@s 0010                      ??_isdigit 0009                      ??_teclado 0009  
                 __mediumconst 0000                      ??_isspace 0009                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8           _appStateRecolectData 308A  
            adcGetValue@PinADC 000A                         putch@c 0001          __end_of_appSubGetData 294E  
                    ??_warning 0011               __end_of_vfprintf 33AA                      ??_sprintf 0053  
         __end_of_confirmacion 353A                   ___xxtofl@arg 0015                   ___xxtofl@exp 0014  
           setServoAngle@angle 000A                   ___xxtofl@val 000B                     __accesstop 0060  
      __end_of__initialization 3600          __end_of_appTimerStart 3840                  ___rparam_used 000001  
                   ___fltol@f1 004B                 __pcstackCOMRAM 0001                   __pidataBANK0 37EE  
               _appCounterInit 3840                 _appCounterStop 3852                  __end_of_fputc 2BB4  
                __end_of_fputs 3652                  __end_of_putch 3860             __size_of_appElemts 0066  
              ?_appGetElements 0001                  ??_adcGetValue 0009          ?_appStateRecolectData 0001  
                    ?_Lcd_Init 0001              ??_appCounterStart 0007                        ??_fputc 000B  
                      ??_fputs 0014            __size_of_Lcd_Chr_CP 014E                        ??_putch 0007  
        __size_of_appTimerInit 002E                     __pbssBANK0 0060               setServoAngle@pin 0007  
        __size_of_appTimerStop 0004       __size_of_sendinformation 00BC         __end_of_appCounterInit 384A  
           fp__sendinformation 000E         __end_of_appCounterStop 3856                        ?_appADC 00B8  
                      ?___wmul 0007                        ?_appBat 00B8                        ?_memcmp 0007  
                      ?_memset 0007                     appADC@data 00B8             __size_of_uart_Init 0058  
                      ?_strlen 0007             __size_of_servoInit 0018                   _appTimerInit 3770  
                    ?___xxtofl 000B                   _appTimerStop 3856             __size_of_vfpfcnvrt 036C  
                   ??_Lcd_Init 000A            __end_of_adcGetValue 36CE                      ?_readUART 0001  
            __end_of_appElemts 32E6                        _Lcd_Cmd 2502                    setServo@pin 000C  
                      _Lcd_Out 2A1E        appSubGetData@data_Inout 00B8                      ?_sendData 000B  
                ??_appLCD_Init 0011                        __Hparam 0000                      ?_setServo 000B  
                      __Lparam 0000                ?_appCounterInit 0007                ?_appCounterStop 0001  
                      ___aodiv 1F52                        ___aomod 2250                        _adcInit 353A  
                      ___fldiv 0CAA                        ___awmod 2DF2                        ___flmul 0880  
                      ___fltol 2748                __size_of_appADC 01AE                        ___lldiv 2EA4  
              __size_of___wmul 0026                __size_of_appBat 01E8                      ?_vfprintf 00A0  
                   appBat@data 00B8                   __psmallconst 0800                        __pcinit 35CA  
              __size_of_memcmp 009E                __size_of_memset 0176                        _appInit 3584  
                      __ramtop 0800                        __ptext0 373C                        __ptext1 2D36  
                      __ptext2 34A6                        __ptext3 294E                        __ptext4 31A2  
                      __ptext5 308A                        __ptext6 34F0                        __ptext7 3212  
                      __ptext8 32E6                        __ptext9 2FEC                      _T0CONbits 000FD5  
              __size_of_strlen 0036                      _T2CONbits 000FCA                   __size_of_abs 0040  
                 __size_of_pad 00C2         ??_appStateRecolectData 0053                        _isdigit 36CE  
                   ??___xxtofl 000F                      _T3CONbits 000FB1               ___awmod@dividend 0096  
        __size_of_confirmacion 004A                        _teclado 168E                        _isspace 3454  
                      _warning 3212                        atoi@neg 0014                        _sprintf 3402  
               __pintcode_body 2F48           end_of_initialization 3600                        memcmp@l 000E  
                      memcmp@n 000B                     ??_readUART 0013                        memcmp@r 0010  
                      fputc@fp 0009                        memset@c 0009                        memset@k 000F  
                      memset@n 000B                        memset@s 0011                  __Lmediumconst 0000  
                      int_func 2F48                        fputs@fp 0012              __end_of_uart_Init 3402  
                   ??_sendData 000D                ___lldiv@divisor 000B              __end_of_servoInit 3820  
                   ??_setServo 000D                ___lldiv@counter 0013           appCounterInit@reload 0007  
            __end_of_vfpfcnvrt 13B0                      Lcd_Init@i 000B                      _RCSTAbits 000FAB  
                 ??_Lcd_Chr_CP 0007                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 0050                  appElemts@data 00B8                   _confirmacion 34F0  
          __end_of_appLCD_Init 31A2                        strlen@a 0009                        strlen@s 0007  
            ??_sendinformation 0053                      _PORTAbits 000F80                      _PORTBbits 000F81  
                  _adcGetValue 3692                  ___xxtofl@sign 0013                      _TRISAbits 000F92  
                    _TRISCbits 000F94                      _TRISDbits 000F95      __size_of_appSubGiveElemts 0014  
                    _TRISEbits 000F96                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
           __end_of_Lcd_Chr_CP 2502                     fp__warning 000E                    ___flmul@grs 0026  
                    _TXSTAbits 000FAC         __size_of_setServoAngle 011C                  setServo@angle 000D  
             ??_appGetElements 00BD                 __end_of_appADC 1DC2                    vfpfcnvrt@ap 004A  
                  vfpfcnvrt@fp 0046                    vfpfcnvrt@ll 0094                 __end_of___wmul 37EE  
               __end_of_appBat 1A60                    _BAUDCONbits 000FB8                _appCounterStart 385A  
               __end_of_memcmp 308A                 __end_of_memset 2250                 __end_of_strlen 373C  
          start_initialization 35CA                    __end_of_abs 3692                    __end_of_pad 2C76  
                Lcd_Out@buffer 000B       __size_of_appStateInitial 004A              __size_of_Lcd_Init 00C0  
           fp__appStateInitial 000E                    _appLCD_Init 311E                    vfprintf@fmt 00A2  
                     ??_appADC 0053                       ??___wmul 000B                       ??_appBat 00BA  
                  _appBat$2655 00BC         __size_of_appSubGetData 00FE                    __pdataBANK0 00C0  
                     ??_memcmp 000D                       ??_memset 000D                     memset@dest 0007  
                     ??_strlen 0009                   sendData@data 000B                      ___fldiv@a 0036  
                    ___fldiv@b 0032         __size_of_appTimerStart 000C                      ___flmul@a 001D  
                    ___flmul@b 0019                    __pbssCOMRAM 0053                  __pcstackBANK0 0094  
             ___aodiv@dividend 0007                  _setServoAngle 262C              __size_of___xxtofl 01B4  
      fp__appStateRecolectData 000E                       ?_Lcd_Cmd 0001               ??_appCounterInit 0009  
                     ?_Lcd_Out 000A               ??_appCounterStop 0007                      _atoi$2375 0016  
                    _atoi$2376 001A                      _atoi$2377 0018              __size_of_readUART 00D0  
                    _appElemts 3280                      _dtoa$2340 0034        __end_of_appCounterStart 385E  
            __size_of_sendData 0062                      __pintcode 0008                       ?___aodiv 0007  
                     ?___aomod 0007              __size_of_setServo 002A                       ?_adcInit 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0019                       ?___awmod 0096  
                     ?___flmul 0019                       ?___fltol 004B                       ?___lldiv 0007  
                  __pintcodelo 0018                       ?_appInit 0001              __size_of_vfprintf 0062  
                  __smallconst 0800                       ?_isdigit 0007                   teclado@valor 0007  
                     ?_teclado 0007                 ?_setServoAngle 0007                       ?_isspace 0007  
             _appSubGiveElemts 3820                       ?_warning 0001                       ?_sprintf 00A6  
                _appSubGetData 2850                 __size_of_fputc 00CA                 __size_of_fputs 0044  
               __size_of_putch 0002                 ___wmul@product 000B                       _LATAbits 000F89  
                     _LATCbits 000F8B                       _LATDbits 000F8C                       _LATEbits 000F8D  
                _appTimerStart 3834                       _IPR1bits 000F9F                       _IPR2bits 000FA2  
                     _PIE1bits 000F9D                       _PIE2bits 000FA0                _sendinformation 2D36  
            ??_appStateInitial 000F                     ?_appElemts 00B8                       i1u440_20 009C  
                     i1u440_21 0098                       i1u435_20 0034                       i1u435_21 0030  
                     i1u436_20 0042                       i1u436_21 003E                       i1u437_20 005A  
                     i1u437_21 0056                       i1u438_20 006A                       i1u438_21 0066  
                     i1u439_20 007C                       i1u439_21 0078                       i2u441_40 2F60  
                     i2u441_41 2F5C                       _PIR1bits 000F9E                       i2u442_40 2F6E  
                     i2u442_41 2F6A                       i2u443_40 2F8C                       i2u443_41 2F88  
                     _PIR2bits 000FA1                       i2u444_40 2F9A                       i2u444_41 2F96  
                     i2u445_40 2FC8                       i2u445_41 2FC4                       _GO_nDONE 007E11  
                    _uart_Init 33AA                       _RCONbits 000FD0                       Lcd_Out@x 000A  
                     Lcd_Out@y 000F                      _servoInit 3808                      _vfpfcnvrt 1044  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0007                  ?_appISRConfig 0001                   ?_adcGetValue 0007  
__size_of_appStateRecolectData 0094                   _isspace$2393 000D                       _Lcd_Init 2C76  
               ?_appSubGetData 00B8                    _INTCON2bits 000FF1                      copy_data0 35DE  
               ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A               __size_of_Lcd_Out 00CC  
                     __Hrparam 0000                  uart_Init@baud 0014                     vfprintf@ap 00A4  
                     __Lrparam 0000                     vfprintf@fp 00A0               ?_appCounterStart 0001  
                   ?_uart_Init 0014                     ?_servoInit 0001               __size_of___aodiv 0188  
             __size_of___aomod 0164               __size_of_adcInit 004A               __size_of___fldiv 039A  
             __size_of___awmod 00B2               __size_of___flmul 042A               __size_of___fltol 0108  
                appADC@lm35val 00BA               __size_of___lldiv 00A4                     ?_vfpfcnvrt 0046  
              ___aodiv@divisor 000F                 ??_appISRConfig 0007                ___aodiv@counter 0017  
             __size_of_appInit 0046                ??_setServoAngle 0008                     sprintf@fmt 00A8  
                    sendData@i 000F                       ___xxtofl 1A60               __size_of_isdigit 0038  
               Lcd_Chr_CP@data 0009               __size_of_teclado 01EA               __size_of_isspace 0052  
                     __ptext10 3280                       __ptext11 3852                       __ptext20 3584  
                     __ptext12 1878                       __ptext21 33AA                       __ptext13 1C14  
                     __ptext30 3856                       __ptext22 2EA4                       __ptext14 3692  
                     __ptext31 3834                       __ptext23 3808                       __ptext15 1A60  
                     __ptext40 1044                       __ptext32 3820                       __ptext24 3770  
                     __ptext16 2748                       __ptext41 13B0                       __ptext33 379E  
                     __ptext25 311E                       __ptext17 0880                       __ptext50 1DC2  
                     __ptext42 2BB4                       __ptext34 262C                       __ptext26 2C76  
                     __ptext18 0CAA                       __ptext51 3454                       __ptext43 3706  
                     __ptext35 385A                       __ptext27 384A                       __ptext19 2DF2  
                     __ptext52 36CE                       __ptext44 360E                       __ptext36 2850  
                     __ptext28 3840                       __ptext53 37C8                       __ptext45 2AEA  
                     __ptext37 168E                       __ptext29 353A                       __ptext54 20DA  
                     __ptext46 385E                       __ptext38 3402                       __ptext55 2A1E  
                     __ptext47 3652                       __ptext39 3348                       __ptext56 2502  
                     __ptext48 2250                       __ptext57 23B4                       __ptext49 1F52  
             __size_of_warning 006E        __end_of_sendinformation 2DF2               __size_of_sprintf 0052  
                    setServo@i 000E                       _readUART 294E                    Lcd_Cmd@data 0009  
                __size_of_atoi 0190                  __size_of_main 0034                  __size_of_dtoa 02DE  
                __size_of_isrH 2FE4                  __size_of_isrL 00A4                       _sendData 32E6  
                  ??_appElemts 0053                   ?_appLCD_Init 0001                       _setServo 379E  
                     int$flags 0058                       _vfprintf 3348               ___aomod@dividend 0007  
           appSubGetData@inout 00BC                  ?_appTimerInit 0001                    Lcd_Out@data 0010  
               _vfpfcnvrt$2355 009E                  ?_appTimerStop 0001                     _INTCONbits 000FF2  
              ??_appSubGetData 0053                       memcmp@vl 0007                       memcmp@vr 0009  
                     isdigit@c 0007                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 00B0                ??_appTimerStart 0007                       isspace@c 0007  
             ___lldiv@dividend 0007           appSubGiveElemts@data 000F                fp__confirmacion 000E  
     __end_of_appSubGiveElemts 3834                    ??_uart_Init 0018                    ??_servoInit 0007  
              ___aomod@divisor 000F                    ??_vfpfcnvrt 004C                ___aomod@counter 0017  
               ??_appTimerInit 0007                       sprintf@f 00B2                       sprintf@s 00A6  
               ??_appTimerStop 0007               ___lldiv@quotient 000F        __size_of_appGetElements 0070  
            fp__appGetElements 000E           __size_of_adcGetValue 003C                _appStateInitial 34A6  
             ?_sendinformation 0001                   ___aodiv@sign 0018           __end_of_appISRConfig 3852  
                 ___aomod@sign 0018  
