

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jun 03 18:59:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 12/02/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  0037F2                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _datos
   120  0037F2  00                 	db	0
   121  0037F3  0000               	dw	0
   122  0037F5  08                 	db	8
   123  0037F6  0000               	dw	0
   124  0037F8  00                 	db	0
   125  0037F9  00                 	db	0
   126  0037FA  00                 	db	0
   127  0037FB  00                 	db	0
   128  0037FC  00                 	db	0
   129  0037FD  00                 	db	0
   130  0037FE  00                 	db	0
   131  0037FF  00                 	db	0
   132  003800  00                 	db	0
   133  003801  00                 	db	0
   134  003802  00                 	db	0
   135  003803  00                 	db	0
   136  003804  00                 	db	0
   137  003805  00                 	db	0
   138  003806  00                 	db	0
   139  003807  00                 	db	0
   140  003808  00                 	db	0
   141  003809  F4                 	db	low _confirmacion
   142  00380A  34                 	db	high _confirmacion
   143  0000                     _TMR0	set	4054
   144  0000                     _TMR3	set	4018
   145  0000                     _ADRES	set	4035
   146  0000                     _TXREG	set	4013
   147  0000                     _IPR1bits	set	3999
   148  0000                     _PIE1bits	set	3997
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _TXSTAbits	set	4012
   151  0000                     _SPBRG	set	4015
   152  0000                     _BAUDCONbits	set	4024
   153  0000                     _PORTAbits	set	3968
   154  0000                     _LATAbits	set	3977
   155  0000                     _RCONbits	set	4048
   156  0000                     _PIE2bits	set	4000
   157  0000                     _IPR2bits	set	4002
   158  0000                     _PIR2bits	set	4001
   159  0000                     _INTCONbits	set	4082
   160  0000                     _T0CONbits	set	4053
   161  0000                     _T3CONbits	set	4017
   162  0000                     _LATEbits	set	3981
   163  0000                     _PIR1bits	set	3998
   164  0000                     _PR2	set	4043
   165  0000                     _TMR2	set	4044
   166  0000                     _TRISEbits	set	3990
   167  0000                     _T2CONbits	set	4042
   168  0000                     _LATDbits	set	3980
   169  0000                     _TRISDbits	set	3989
   170  0000                     _PORTBbits	set	3969
   171  0000                     _PORTB	set	3969
   172  0000                     _RCREG	set	4014
   173  0000                     _TRISAbits	set	3986
   174  0000                     _INTCON2bits	set	4081
   175  0000                     _TRISB	set	3987
   176  0000                     _LATCbits	set	3979
   177  0000                     _TRISCbits	set	3988
   178  0000                     _ADCON0bits	set	4034
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON1bits	set	4033
   181  0000                     _RCIE	set	31981
   182  0000                     _RCIF	set	31989
   183  0000                     _TMR0IF	set	32658
   184  0000                     _TMR0IE	set	32661
   185  0000                     _TMR3IF	set	32009
   186  0000                     _TMR3IE	set	32001
   187  0000                     _GO_nDONE	set	32273
   188                           
   189                           	psect	smallconst
   190  000800                     __psmallconst:
   191                           	callstack 0
   192  000800  00                 	db	0
   193  000801                     STR_9:
   194  000801  52                 	db	82	;'R'
   195  000802  65                 	db	101	;'e'
   196  000803  63                 	db	99	;'c'
   197  000804  61                 	db	97	;'a'
   198  000805  72                 	db	114	;'r'
   199  000806  67                 	db	103	;'g'
   200  000807  61                 	db	97	;'a'
   201  000808  20                 	db	32
   202  000809  50                 	db	80	;'P'
   203  00080A  6F                 	db	111	;'o'
   204  00080B  72                 	db	114	;'r'
   205  00080C  66                 	db	102	;'f'
   206  00080D  61                 	db	97	;'a'
   207  00080E  76                 	db	118	;'v'
   208  00080F  6F                 	db	111	;'o'
   209  000810  72                 	db	114	;'r'
   210  000811  00                 	db	0
   211  000812                     STR_6:
   212  000812  43                 	db	67	;'C'
   213  000813  20                 	db	32
   214  000814  64                 	db	100	;'d'
   215  000815  65                 	db	101	;'e'
   216  000816  20                 	db	32
   217  000817  76                 	db	118	;'v'
   218  000818  61                 	db	97	;'a'
   219  000819  63                 	db	99	;'c'
   220  00081A  75                 	db	117	;'u'
   221  00081B  6E                 	db	110	;'n'
   222  00081C  61                 	db	97	;'a'
   223  00081D  73                 	db	115	;'s'
   224  00081E  3A                 	db	58	;':'
   225  00081F  00                 	db	0
   226  000820                     STR_1:
   227  000820  54                 	db	84	;'T'
   228  000821  3A                 	db	58	;':'
   229  000822  25                 	db	37
   230  000823  30                 	db	48	;'0'
   231  000824  32                 	db	50	;'2'
   232  000825  64                 	db	100	;'d'
   233  000826  2E                 	db	46
   234  000827  25                 	db	37
   235  000828  30                 	db	48	;'0'
   236  000829  32                 	db	50	;'2'
   237  00082A  64                 	db	100	;'d'
   238  00082B  20                 	db	32
   239  00082C  43                 	db	67	;'C'
   240  00082D  00                 	db	0
   241  00082E                     STR_12:
   242  00082E  49                 	db	73	;'I'
   243  00082F  6E                 	db	110	;'n'
   244  000830  66                 	db	102	;'f'
   245  000831  6F                 	db	111	;'o'
   246  000832  72                 	db	114	;'r'
   247  000833  6D                 	db	109	;'m'
   248  000834  61                 	db	97	;'a'
   249  000835  63                 	db	99	;'c'
   250  000836  69                 	db	105	;'i'
   251  000837  6F                 	db	111	;'o'
   252  000838  6E                 	db	110	;'n'
   253  000839  40                 	db	64	;'@'
   254  00083A  00                 	db	0
   255  00083B                     STR_10:
   256  00083B  43                 	db	67	;'C'
   257  00083C  6F                 	db	111	;'o'
   258  00083D  6E                 	db	110	;'n'
   259  00083E  66                 	db	102	;'f'
   260  00083F  69                 	db	105	;'i'
   261  000840  72                 	db	114	;'r'
   262  000841  6D                 	db	109	;'m'
   263  000842  61                 	db	97	;'a'
   264  000843  63                 	db	99	;'c'
   265  000844  69                 	db	105	;'i'
   266  000845  6F                 	db	111	;'o'
   267  000846  6E                 	db	110	;'n'
   268  000847  00                 	db	0
   269  000848                     STR_8:
   270  000848  53                 	db	83	;'S'
   271  000849  69                 	db	105	;'i'
   272  00084A  6E                 	db	110	;'n'
   273  00084B  20                 	db	32
   274  00084C  76                 	db	118	;'v'
   275  00084D  61                 	db	97	;'a'
   276  00084E  63                 	db	99	;'c'
   277  00084F  75                 	db	117	;'u'
   278  000850  6E                 	db	110	;'n'
   279  000851  61                 	db	97	;'a'
   280  000852  73                 	db	115	;'s'
   281  000853  00                 	db	0
   282  000854                     STR_3:
   283  000854  42                 	db	66	;'B'
   284  000855  69                 	db	105	;'i'
   285  000856  65                 	db	101	;'e'
   286  000857  6E                 	db	110	;'n'
   287  000858  76                 	db	118	;'v'
   288  000859  65                 	db	101	;'e'
   289  00085A  6E                 	db	110	;'n'
   290  00085B  69                 	db	105	;'i'
   291  00085C  64                 	db	100	;'d'
   292  00085D  6F                 	db	111	;'o'
   293  00085E  73                 	db	115	;'s'
   294  00085F  00                 	db	0
   295  000860                     STR_14:
   296  000860  41                 	db	65	;'A'
   297  000861  63                 	db	99	;'c'
   298  000862  74                 	db	116	;'t'
   299  000863  69                 	db	105	;'i'
   300  000864  76                 	db	118	;'v'
   301  000865  61                 	db	97	;'a'
   302  000866  64                 	db	100	;'d'
   303  000867  6F                 	db	111	;'o'
   304  000868  40                 	db	64	;'@'
   305  000869  00                 	db	0
   306  00086A                     STR_2:
   307  00086A  42                 	db	66	;'B'
   308  00086B  61                 	db	97	;'a'
   309  00086C  74                 	db	116	;'t'
   310  00086D  3A                 	db	58	;':'
   311  00086E  25                 	db	37
   312  00086F  30                 	db	48	;'0'
   313  000870  32                 	db	50	;'2'
   314  000871  64                 	db	100	;'d'
   315  000872  00                 	db	0
   316  000873                     STR_4:
   317  000873  53                 	db	83	;'S'
   318  000874  49                 	db	73	;'I'
   319  000875  43                 	db	67	;'C'
   320  000876  43                 	db	67	;'C'
   321  000877  56                 	db	86	;'V'
   322  000878  00                 	db	0
   323  000879                     STR_5:
   324  000879  23                 	db	35
   325  00087A  3A                 	db	58	;':'
   326  00087B  25                 	db	37
   327  00087C  64                 	db	100	;'d'
   328  00087D  00                 	db	0
   329  00087E  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334  0035CE                     __pcinit:
   335                           	callstack 0
   336  0035CE                     start_initialization:
   337                           	callstack 0
   338  0035CE                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK0 (25 bytes)
   342                           ; load TBLPTR registers with __pidataBANK0
   343  0035CE  0EF2               	movlw	low __pidataBANK0
   344  0035D0  6EF6               	movwf	tblptrl,c
   345  0035D2  0E37               	movlw	high __pidataBANK0
   346  0035D4  6EF7               	movwf	tblptrh,c
   347  0035D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   348  0035D8  6EF8               	movwf	tblptru,c
   349  0035DA  EE00  F0C2         	lfsr	0,__pdataBANK0
   350  0035DE  EE10 F019          	lfsr	1,25
   351  0035E2                     copy_data0:
   352  0035E2  0009               	tblrd		*+
   353  0035E4  CFF5 FFEE          	movff	tablat,postinc0
   354  0035E8  50E5               	movf	postdec1,w,c
   355  0035EA  50E1               	movf	fsr1l,w,c
   356  0035EC  E1FA               	bnz	copy_data0
   357                           
   358                           ; Clear objects allocated to BANK0 (54 bytes)
   359  0035EE  EE00  F060         	lfsr	0,__pbssBANK0
   360  0035F2  0E36               	movlw	54
   361  0035F4                     clear_0:
   362  0035F4  6AEE               	clrf	postinc0,c
   363  0035F6  06E8               	decf	wreg,f,c
   364  0035F8  E1FD               	bnz	clear_0
   365                           
   366                           ; Clear objects allocated to COMRAM (5 bytes)
   367  0035FA  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   368  0035FC  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   369  0035FE  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   370  003600  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   371  003602  6A53               	clrf	__pbssCOMRAM& (0+255),c
   372  003604                     end_of_initialization:
   373                           	callstack 0
   374  003604                     __end_of__initialization:
   375                           	callstack 0
   376  003604  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   377  003606  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   378  003608  0E00               	movlw	low (__Lmediumconst shr (0+16))
   379  00360A  6EF8               	movwf	tblptru,c
   380  00360C  0100               	movlb	0
   381  00360E  EFA0  F01B         	goto	_main	;jump to C main() function
   382                           
   383                           	psect	bssCOMRAM
   384  000053                     __pbssCOMRAM:
   385                           	callstack 0
   386  000053                     _prec:
   387                           	callstack 0
   388  000053                     	ds	2
   389  000055                     _flags:
   390                           	callstack 0
   391  000055                     	ds	2
   392  000057                     isrH@counter:
   393                           	callstack 0
   394  000057                     	ds	1
   395                           
   396                           	psect	bssBANK0
   397  000060                     __pbssBANK0:
   398                           	callstack 0
   399  000060                     _nout:
   400                           	callstack 0
   401  000060                     	ds	2
   402  000062                     _width:
   403                           	callstack 0
   404  000062                     	ds	2
   405  000064                     isrL@bloqueo:
   406                           	callstack 0
   407  000064                     	ds	2
   408  000066                     _dbuf:
   409                           	callstack 0
   410  000066                     	ds	32
   411  000086                     _puerto:
   412                           	callstack 0
   413  000086                     	ds	16
   414                           
   415                           	psect	dataBANK0
   416  0000C2                     __pdataBANK0:
   417                           	callstack 0
   418  0000C2                     _datos:
   419                           	callstack 0
   420  0000C2                     	ds	25
   421                           
   422                           	psect	cstackBANK0
   423  000096                     __pcstackBANK0:
   424                           	callstack 0
   425  000096                     ___fltol@sign1:
   426                           	callstack 0
   427  000096                     vfpfcnvrt@ll:
   428                           	callstack 0
   429                           
   430                           ; 8 bytes @ 0x0
   431  000096                     	ds	1
   432  000097                     ___fltol@exp1:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x1
   436  000097                     	ds	1
   437  000098                     ?___awmod:
   438                           	callstack 0
   439  000098                     ___awmod@dividend:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x2
   443  000098                     	ds	2
   444  00009A                     ___awmod@divisor:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x4
   448  00009A                     	ds	2
   449  00009C                     ___awmod@counter:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x6
   453  00009C                     	ds	1
   454  00009D                     ___awmod@sign:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x7
   458  00009D                     	ds	1
   459  00009E                     vfpfcnvrt@done:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x8
   463  00009E                     	ds	2
   464  0000A0                     _vfpfcnvrt$2356:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0xA
   468  0000A0                     	ds	2
   469  0000A2                     ?_vfprintf:
   470                           	callstack 0
   471  0000A2                     vfprintf@fp:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xC
   475  0000A2                     	ds	2
   476  0000A4                     vfprintf@fmt:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xE
   480  0000A4                     	ds	2
   481  0000A6                     vfprintf@ap:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x10
   485  0000A6                     	ds	2
   486  0000A8                     ?_sprintf:
   487                           	callstack 0
   488  0000A8                     sprintf@s:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x12
   492  0000A8                     	ds	2
   493  0000AA                     sprintf@fmt:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x14
   497  0000AA                     	ds	8
   498  0000B2                     sprintf@ap:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x1C
   502  0000B2                     	ds	2
   503  0000B4                     sprintf@f:
   504                           	callstack 0
   505                           
   506                           ; 6 bytes @ 0x1E
   507  0000B4                     	ds	6
   508  0000BA                     appADC@data:
   509                           	callstack 0
   510  0000BA                     appBat@data:
   511                           	callstack 0
   512  0000BA                     appElemts@data:
   513                           	callstack 0
   514  0000BA                     appSubGetData@data_Inout:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x24
   518  0000BA                     	ds	2
   519  0000BC                     ??_appBat:
   520  0000BC                     appSubGetData@cantidad:
   521                           	callstack 0
   522  0000BC                     appADC@lm35val:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x26
   526  0000BC                     	ds	2
   527  0000BE                     appSubGetData@inout:
   528                           	callstack 0
   529  0000BE                     _appBat$2656:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x28
   533  0000BE                     	ds	1
   534  0000BF                     ??_appGetElements:
   535                           
   536                           ; 1 bytes @ 0x29
   537  0000BF                     	ds	3
   538                           
   539                           	psect	cstackCOMRAM
   540  000001                     __pcstackCOMRAM:
   541                           	callstack 0
   542  000001                     ??_isrH:
   543  000001                     
   544                           ; 1 bytes @ 0x0
   545  000001                     	ds	3
   546  000004                     ??_isrL:
   547                           
   548                           ; 1 bytes @ 0x3
   549  000004                     	ds	3
   550  000007                     ??_Lcd_Cmd:
   551  000007                     ??_Lcd_Chr_CP:
   552  000007                     ??_adcInit:
   553  000007                     ?_memcmp:
   554                           	callstack 0
   555  000007                     ?_strlen:
   556                           	callstack 0
   557  000007                     ?_isdigit:
   558                           	callstack 0
   559  000007                     ?_isspace:
   560                           	callstack 0
   561  000007                     ?_adcGetValue:
   562                           	callstack 0
   563  000007                     ?___wmul:
   564                           	callstack 0
   565  000007                     ?___lldiv:
   566                           	callstack 0
   567  000007                     ?___aodiv:
   568                           	callstack 0
   569  000007                     ?___aomod:
   570                           	callstack 0
   571  000007                     setServoAngle@pin:
   572                           	callstack 0
   573  000007                     teclado@valor:
   574                           	callstack 0
   575  000007                     appCounterInit@reload:
   576                           	callstack 0
   577  000007                     ___wmul@multiplier:
   578                           	callstack 0
   579  000007                     memcmp@vl:
   580                           	callstack 0
   581  000007                     memset@dest:
   582                           	callstack 0
   583  000007                     isdigit@c:
   584                           	callstack 0
   585  000007                     isspace@c:
   586                           	callstack 0
   587  000007                     fputc@c:
   588                           	callstack 0
   589  000007                     strlen@s:
   590                           	callstack 0
   591  000007                     ___lldiv@dividend:
   592                           	callstack 0
   593  000007                     ___aodiv@dividend:
   594                           	callstack 0
   595  000007                     ___aomod@dividend:
   596                           	callstack 0
   597                           
   598                           ; 8 bytes @ 0x6
   599  000007                     	ds	1
   600  000008                     ??_setServoAngle:
   601  000008                     adcInit@ADC_PINs:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x7
   605  000008                     	ds	1
   606  000009                     ??_isdigit:
   607  000009                     ??_isspace:
   608  000009                     ??_adcGetValue:
   609  000009                     Lcd_Chr_CP@data:
   610                           	callstack 0
   611  000009                     Lcd_Cmd@data:
   612                           	callstack 0
   613  000009                     ___wmul@multiplicand:
   614                           	callstack 0
   615  000009                     memcmp@vr:
   616                           	callstack 0
   617  000009                     memset@c:
   618                           	callstack 0
   619  000009                     fputc@fp:
   620                           	callstack 0
   621  000009                     strlen@a:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x8
   625  000009                     	ds	1
   626  00000A                     ??_Lcd_Init:
   627  00000A                     adcGetValue@PinADC:
   628                           	callstack 0
   629  00000A                     Lcd_Out@x:
   630                           	callstack 0
   631  00000A                     setServoAngle@angle:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x9
   635  00000A                     	ds	1
   636  00000B                     ??_fputc:
   637  00000B                     ?___xxtofl:
   638                           	callstack 0
   639  00000B                     Lcd_Init@i:
   640                           	callstack 0
   641  00000B                     setServo@pulsos:
   642                           	callstack 0
   643  00000B                     Lcd_Out@buffer:
   644                           	callstack 0
   645  00000B                     sendData@data:
   646                           	callstack 0
   647  00000B                     ___wmul@product:
   648                           	callstack 0
   649  00000B                     memcmp@n:
   650                           	callstack 0
   651  00000B                     memset@n:
   652                           	callstack 0
   653  00000B                     ___lldiv@divisor:
   654                           	callstack 0
   655  00000B                     ___xxtofl@val:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0xA
   659  00000B                     	ds	1
   660  00000C                     setServo@pin:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0xB
   664  00000C                     	ds	1
   665  00000D                     ??_memset:
   666  00000D                     ??_Lcd_Out:
   667  00000D                     ??_sendData:
   668  00000D                     ??_memcmp:
   669  00000D                     setServo@angle:
   670                           	callstack 0
   671  00000D                     _isspace$2394:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0xC
   675  00000D                     	ds	1
   676  00000E                     ?_atoi:
   677                           	callstack 0
   678  00000E                     setServo@i:
   679                           	callstack 0
   680  00000E                     memcmp@l:
   681                           	callstack 0
   682  00000E                     atoi@s:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0xD
   686  00000E                     	ds	1
   687  00000F                     ??___xxtofl:
   688  00000F                     Lcd_Out@y:
   689                           	callstack 0
   690  00000F                     sendData@i:
   691                           	callstack 0
   692  00000F                     appSubGiveElemts@data:
   693                           	callstack 0
   694  00000F                     memset@k:
   695                           	callstack 0
   696  00000F                     ___lldiv@quotient:
   697                           	callstack 0
   698  00000F                     ___aodiv@divisor:
   699                           	callstack 0
   700  00000F                     ___aomod@divisor:
   701                           	callstack 0
   702                           
   703                           ; 8 bytes @ 0xE
   704  00000F                     	ds	1
   705  000010                     ??_atoi:
   706  000010                     Lcd_Out@data:
   707                           	callstack 0
   708  000010                     memcmp@r:
   709                           	callstack 0
   710  000010                     fputs@s:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0xF
   714  000010                     	ds	1
   715  000011                     ??_confirmacion:
   716  000011                     ??_warning:
   717  000011                     ??_appLCD_Init:
   718  000011                     memset@s:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x10
   722  000011                     	ds	1
   723  000012                     fputs@fp:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x11
   727  000012                     	ds	1
   728  000013                     ??_readUART:
   729  000013                     ___lldiv@counter:
   730                           	callstack 0
   731  000013                     ___xxtofl@sign:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x12
   735  000013                     	ds	1
   736  000014                     ___xxtofl@exp:
   737                           	callstack 0
   738  000014                     fputs@c:
   739                           	callstack 0
   740  000014                     atoi@neg:
   741                           	callstack 0
   742  000014                     uart_Init@baud:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x13
   746  000014                     	ds	1
   747  000015                     fputs@i:
   748                           	callstack 0
   749  000015                     ___xxtofl@arg:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x14
   753  000015                     	ds	1
   754  000016                     _atoi$2376:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x15
   758  000016                     	ds	1
   759  000017                     ?_pad:
   760                           	callstack 0
   761  000017                     ___aodiv@counter:
   762                           	callstack 0
   763  000017                     ___aomod@counter:
   764                           	callstack 0
   765  000017                     pad@fp:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x16
   769  000017                     	ds	1
   770  000018                     ___aodiv@sign:
   771                           	callstack 0
   772  000018                     ___aomod@sign:
   773                           	callstack 0
   774  000018                     _atoi$2378:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x17
   778  000018                     	ds	1
   779  000019                     ?_abs:
   780                           	callstack 0
   781  000019                     ?___flmul:
   782                           	callstack 0
   783  000019                     pad@buf:
   784                           	callstack 0
   785  000019                     abs@a:
   786                           	callstack 0
   787  000019                     ___flmul@b:
   788                           	callstack 0
   789  000019                     ___aodiv@quotient:
   790                           	callstack 0
   791                           
   792                           ; 8 bytes @ 0x18
   793  000019                     	ds	1
   794  00001A                     _atoi$2377:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x19
   798  00001A                     	ds	1
   799  00001B                     ??_abs:
   800  00001B                     pad@p:
   801                           	callstack 0
   802  00001B                     atoi@n:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x1A
   806  00001B                     	ds	2
   807  00001D                     ??_pad:
   808  00001D                     ___flmul@a:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x1C
   812  00001D                     	ds	1
   813  00001E                     pad@i:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x1D
   817  00001E                     	ds	2
   818  000020                     pad@w:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1F
   822  000020                     	ds	1
   823  000021                     ??___flmul:
   824                           
   825                           ; 1 bytes @ 0x20
   826  000021                     	ds	1
   827  000022                     ?_dtoa:
   828                           	callstack 0
   829  000022                     dtoa@fp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x21
   833  000022                     	ds	2
   834  000024                     dtoa@d:
   835                           	callstack 0
   836                           
   837                           ; 8 bytes @ 0x23
   838  000024                     	ds	1
   839  000025                     ___flmul@sign:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x24
   843  000025                     	ds	1
   844  000026                     ___flmul@grs:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x25
   848  000026                     	ds	4
   849  00002A                     ___flmul@aexp:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x29
   853  00002A                     	ds	1
   854  00002B                     ___flmul@bexp:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x2A
   858  00002B                     	ds	1
   859  00002C                     ??_dtoa:
   860  00002C                     ___flmul@prod:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x2B
   864  00002C                     	ds	4
   865  000030                     ___flmul@temp:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x2F
   869  000030                     	ds	2
   870  000032                     ?___fldiv:
   871                           	callstack 0
   872  000032                     ___fldiv@b:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x31
   876  000032                     	ds	2
   877  000034                     _dtoa$2341:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x33
   881  000034                     	ds	2
   882  000036                     dtoa@p:
   883                           	callstack 0
   884  000036                     ___fldiv@a:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x35
   888  000036                     	ds	2
   889  000038                     dtoa@w:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x37
   893  000038                     	ds	2
   894  00003A                     ??___fldiv:
   895  00003A                     dtoa@s:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x39
   899  00003A                     	ds	2
   900  00003C                     dtoa@n:
   901                           	callstack 0
   902                           
   903                           ; 8 bytes @ 0x3B
   904  00003C                     	ds	2
   905  00003E                     ___fldiv@rem:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x3D
   909  00003E                     	ds	4
   910  000042                     ___fldiv@sign:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x41
   914  000042                     	ds	1
   915  000043                     ___fldiv@new_exp:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x42
   919  000043                     	ds	1
   920  000044                     dtoa@i:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x43
   924  000044                     	ds	1
   925  000045                     ___fldiv@grs:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x44
   929  000045                     	ds	1
   930  000046                     ?_vfpfcnvrt:
   931                           	callstack 0
   932  000046                     vfpfcnvrt@fp:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x45
   936  000046                     	ds	2
   937  000048                     vfpfcnvrt@fmt:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x47
   941  000048                     	ds	1
   942  000049                     ___fldiv@bexp:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0x48
   946  000049                     	ds	1
   947  00004A                     ___fldiv@aexp:
   948                           	callstack 0
   949  00004A                     vfpfcnvrt@ap:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x49
   953  00004A                     	ds	1
   954  00004B                     ?___fltol:
   955                           	callstack 0
   956  00004B                     ___fltol@f1:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x4A
   960  00004B                     	ds	1
   961  00004C                     ??_vfpfcnvrt:
   962                           
   963                           ; 1 bytes @ 0x4B
   964  00004C                     	ds	3
   965  00004F                     ??___fltol:
   966                           
   967                           ; 1 bytes @ 0x4E
   968  00004F                     	ds	1
   969  000050                     vfprintf@cfmt:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x4F
   973  000050                     	ds	3
   974  000053                     
   975                           ; 1 bytes @ 0x52
   976 ;;
   977 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   978 ;;
   979 ;; *************** function _main *****************
   980 ;; Defined at:
   981 ;;		line 13 in file "main.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;		None
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   995 ;;      Params:         0       0       0       0       0       0       0       0       0
   996 ;;      Locals:         0       0       0       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0       0       0
   998 ;;      Totals:         0       0       0       0       0       0       0       0       0
   999 ;;Total ram usage:        0 bytes
  1000 ;; Hardware stack levels required when called:   12
  1001 ;; This function calls:
  1002 ;;		_appGetElements
  1003 ;;		_appInit
  1004 ;;		_appStateInitial
  1005 ;;		_appStateRecolectData
  1006 ;;		_confirmacion
  1007 ;;		_readUART
  1008 ;;		_sendinformation
  1009 ;;		_warning
  1010 ;; This function is called by:
  1011 ;;		Startup code after reset
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text0
  1016  003740                     __ptext0:
  1017                           	callstack 0
  1018  003740                     _main:
  1019                           	callstack 19
  1020  003740                     
  1021                           ;main.c: 15:     TRISB = 0xF0;
  1022  003740  0EF0               	movlw	240
  1023  003742  6E93               	movwf	147,c	;volatile
  1024  003744                     
  1025                           ;main.c: 16:     INTCON2bits.RBPU = 0;
  1026  003744  9EF1               	bcf	241,7,c	;volatile
  1027  003746                     
  1028                           ;main.c: 17:     TRISAbits.TRISA2 = 0;
  1029  003746  9492               	bcf	146,2,c	;volatile
  1030  003748                     
  1031                           ;main.c: 18:     TRISAbits.TRISA5 = 0;
  1032  003748  9A92               	bcf	146,5,c	;volatile
  1033  00374A                     
  1034                           ;main.c: 19:     appInit();
  1035  00374A  ECC4  F01A         	call	_appInit	;wreg free
  1036  00374E                     l4835:
  1037                           
  1038                           ;main.c: 21:     {;main.c: 22:         datos.nextFunc();
  1039  00374E  EE20  F0D9         	lfsr	2,_datos+23
  1040  003752  D802               	call	u4368
  1041  003754  EFB6  F01B         	goto	u4369
  1042  003758                     u4368:
  1043  003758  0005               	push	
  1044  00375A  6EFA               	movwf	pclath,c
  1045  00375C  50DE               	movf	postinc2,w,c
  1046  00375E  6EFD               	movwf	tosl,c
  1047  003760  50DE               	movf	postinc2,w,c
  1048  003762  6EFE               	movwf	tosh,c
  1049  003764  50F8               	movf	tblptru,w,c
  1050  003766  6EFF               	movwf	tosu,c
  1051  003768  50FA               	movf	pclath,w,c
  1052  00376A  0012               	return		;indir
  1053  00376C                     u4369:
  1054  00376C  EFA7  F01B         	goto	l4835
  1055  003770  EF78  F000         	goto	start
  1056  003774                     __end_of_main:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function _sendinformation *****************
  1060 ;; Defined at:
  1061 ;;		line 131 in file "app.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1078 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1079 ;;Total ram usage:        0 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:   11
  1082 ;; This function calls:
  1083 ;;		_appADC
  1084 ;;		_appBat
  1085 ;;		_appElemts
  1086 ;;		_appTimerStart
  1087 ;;		_memset
  1088 ;;		_sendData
  1089 ;;		_sprintf
  1090 ;; This function is called by:
  1091 ;;		_readUART
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text1
  1097  002D3A                     __ptext1:
  1098                           	callstack 0
  1099  002D3A                     _sendinformation:
  1100                           	callstack 19
  1101  002D3A                     
  1102                           ;app.c: 133:     appADC(&datos);
  1103  002D3A  0EC2               	movlw	low _datos
  1104  002D3C  0100               	movlb	0	; () banked
  1105  002D3E  6FBA               	movwf	appADC@data& (0+255),b
  1106  002D40  0E00               	movlw	high _datos
  1107  002D42  6FBB               	movwf	(appADC@data+1)& (0+255),b
  1108  002D44  EC0A  F00E         	call	_appADC	;wreg free
  1109  002D48                     
  1110                           ;app.c: 134:     sendData(&datos);
  1111  002D48  0EC2               	movlw	low _datos
  1112  002D4A  6E0B               	movwf	sendData@data^0,c
  1113  002D4C  0E00               	movlw	high _datos
  1114  002D4E  6E0C               	movwf	(sendData@data+1)^0,c
  1115  002D50  EC75  F019         	call	_sendData	;wreg free
  1116  002D54                     
  1117                           ;app.c: 135:     appBat(&datos);
  1118  002D54  0EC2               	movlw	low _datos
  1119  002D56  0100               	movlb	0	; () banked
  1120  002D58  6FBA               	movwf	appBat@data& (0+255),b
  1121  002D5A  0E00               	movlw	high _datos
  1122  002D5C  6FBB               	movwf	(appBat@data+1)& (0+255),b
  1123  002D5E  EC3C  F00C         	call	_appBat	;wreg free
  1124                           
  1125                           ;app.c: 136:     sendData(&datos);
  1126  002D62  0EC2               	movlw	low _datos
  1127  002D64  6E0B               	movwf	sendData@data^0,c
  1128  002D66  0E00               	movlw	high _datos
  1129  002D68  6E0C               	movwf	(sendData@data+1)^0,c
  1130  002D6A  EC75  F019         	call	_sendData	;wreg free
  1131  002D6E                     
  1132                           ;app.c: 137:     appElemts(&datos);
  1133  002D6E  0EC2               	movlw	low _datos
  1134  002D70  0100               	movlb	0	; () banked
  1135  002D72  6FBA               	movwf	appElemts@data& (0+255),b
  1136  002D74  0E00               	movlw	high _datos
  1137  002D76  6FBB               	movwf	(appElemts@data+1)& (0+255),b
  1138  002D78  EC42  F019         	call	_appElemts	;wreg free
  1139  002D7C                     
  1140                           ;app.c: 138:     sendData(&datos);
  1141  002D7C  0EC2               	movlw	low _datos
  1142  002D7E  6E0B               	movwf	sendData@data^0,c
  1143  002D80  0E00               	movlw	high _datos
  1144  002D82  6E0C               	movwf	(sendData@data+1)^0,c
  1145  002D84  EC75  F019         	call	_sendData	;wreg free
  1146  002D88                     
  1147                           ;app.c: 139:     memset(datos.display,0,sizeof(datos.display));
  1148  002D88  0EC9               	movlw	low (_datos+7)
  1149  002D8A  6E07               	movwf	memset@dest^0,c
  1150  002D8C  0E00               	movlw	high (_datos+7)
  1151  002D8E  6E08               	movwf	(memset@dest+1)^0,c
  1152  002D90  0E00               	movlw	0
  1153  002D92  6E0A               	movwf	(memset@c+1)^0,c
  1154  002D94  0E00               	movlw	0
  1155  002D96  6E09               	movwf	memset@c^0,c
  1156  002D98  0E00               	movlw	0
  1157  002D9A  6E0C               	movwf	(memset@n+1)^0,c
  1158  002D9C  0E10               	movlw	16
  1159  002D9E  6E0B               	movwf	memset@n^0,c
  1160  002DA0  EC6D  F010         	call	_memset	;wreg free
  1161  002DA4                     
  1162                           ;app.c: 140:     sprintf((char *)datos.display,"@");
  1163  002DA4  0EC9               	movlw	low (_datos+7)
  1164  002DA6  0100               	movlb	0	; () banked
  1165  002DA8  6FA8               	movwf	sprintf@s& (0+255),b
  1166  002DAA  0E00               	movlw	high (_datos+7)
  1167  002DAC  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  1168  002DAE  0E39               	movlw	low (STR_12+11)
  1169  002DB0  6FAA               	movwf	sprintf@fmt& (0+255),b
  1170  002DB2  0E08               	movlw	high (STR_12+11)
  1171  002DB4  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  1172  002DB6  EC03  F01A         	call	_sprintf	;wreg free
  1173                           
  1174                           ;app.c: 141:     sendData(&datos);
  1175  002DBA  0EC2               	movlw	low _datos
  1176  002DBC  6E0B               	movwf	sendData@data^0,c
  1177  002DBE  0E00               	movlw	high _datos
  1178  002DC0  6E0C               	movwf	(sendData@data+1)^0,c
  1179  002DC2  EC75  F019         	call	_sendData	;wreg free
  1180  002DC6                     
  1181                           ;app.c: 143:     appTimerStart();
  1182  002DC6  EC29  F01C         	call	_appTimerStart	;wreg free
  1183  002DCA                     
  1184                           ;app.c: 144:     memset(datos.display,0,sizeof(datos.display));
  1185  002DCA  0EC9               	movlw	low (_datos+7)
  1186  002DCC  6E07               	movwf	memset@dest^0,c
  1187  002DCE  0E00               	movlw	high (_datos+7)
  1188  002DD0  6E08               	movwf	(memset@dest+1)^0,c
  1189  002DD2  0E00               	movlw	0
  1190  002DD4  6E0A               	movwf	(memset@c+1)^0,c
  1191  002DD6  0E00               	movlw	0
  1192  002DD8  6E09               	movwf	memset@c^0,c
  1193  002DDA  0E00               	movlw	0
  1194  002DDC  6E0C               	movwf	(memset@n+1)^0,c
  1195  002DDE  0E10               	movlw	16
  1196  002DE0  6E0B               	movwf	memset@n^0,c
  1197  002DE2  EC6D  F010         	call	_memset	;wreg free
  1198  002DE6                     
  1199                           ;app.c: 145:     datos.state = 0;
  1200  002DE6  0E00               	movlw	0
  1201  002DE8  0100               	movlb	0	; () banked
  1202  002DEA  6FC5               	movwf	(_datos+3)& (0+255),b
  1203  002DEC                     
  1204                           ; BSR set to: 0
  1205                           ;app.c: 146:     datos.nextFunc = appStateInitial;
  1206  002DEC  0EAA               	movlw	low _appStateInitial
  1207  002DEE  6FD9               	movwf	(_datos+23)& (0+255),b
  1208  002DF0  0E34               	movlw	high _appStateInitial
  1209  002DF2  6FDA               	movwf	(_datos+24)& (0+255),b
  1210  002DF4                     
  1211                           ; BSR set to: 0
  1212  002DF4  0012               	return		;funcret
  1213  002DF6                     __end_of_sendinformation:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _appStateInitial *****************
  1217 ;; Defined at:
  1218 ;;		line 56 in file "app.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    4
  1239 ;; This function calls:
  1240 ;;		_setServo
  1241 ;;		_teclado
  1242 ;; This function is called by:
  1243 ;;		_appStateRecolectData
  1244 ;;		_appGetElements
  1245 ;;		_sendinformation
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text2
  1251  0034AA                     __ptext2:
  1252                           	callstack 0
  1253  0034AA                     _appStateInitial:
  1254                           	callstack 26
  1255  0034AA                     
  1256                           ;app.c: 59:     teclado(&datos.character);
  1257  0034AA  0EC8               	movlw	low (_datos+6)
  1258  0034AC  6E07               	movwf	teclado@valor^0,c
  1259  0034AE  0E00               	movlw	high (_datos+6)
  1260  0034B0  6E08               	movwf	(teclado@valor+1)^0,c
  1261  0034B2  EC47  F00B         	call	_teclado	;wreg free
  1262  0034B6                     
  1263                           ;app.c: 60:     if(datos.character != 0)
  1264  0034B6  0100               	movlb	0	; () banked
  1265  0034B8  51C8               	movf	(_datos+6)& (0+255),w,b
  1266  0034BA  B4D8               	btfsc	status,2,c
  1267  0034BC  EF62  F01A         	goto	u3931
  1268  0034C0  EF64  F01A         	goto	u3930
  1269  0034C4                     u3931:
  1270  0034C4  EF6A  F01A         	goto	l360
  1271  0034C8                     u3930:
  1272  0034C8                     
  1273                           ; BSR set to: 0
  1274                           ;app.c: 61:     {;app.c: 62:         datos.state = 1;
  1275  0034C8  0E01               	movlw	1
  1276  0034CA  6FC5               	movwf	(_datos+3)& (0+255),b
  1277                           
  1278                           ;app.c: 63:         datos.character = 0;
  1279  0034CC  0E00               	movlw	0
  1280  0034CE  6FC8               	movwf	(_datos+6)& (0+255),b
  1281                           
  1282                           ;app.c: 64:     }
  1283  0034D0  EF79  F01A         	goto	l363
  1284  0034D4                     l360:
  1285                           
  1286                           ; BSR set to: 0
  1287  0034D4  A680               	btfss	128,3,c	;volatile
  1288  0034D6  EF6F  F01A         	goto	u3941
  1289  0034DA  EF71  F01A         	goto	u3940
  1290  0034DE                     u3941:
  1291  0034DE  EF79  F01A         	goto	l363
  1292  0034E2                     u3940:
  1293  0034E2                     
  1294                           ; BSR set to: 0
  1295                           ;app.c: 66:     {;app.c: 67:         setServo(33,10,0);
  1296  0034E2  0E0A               	movlw	10
  1297  0034E4  6E0B               	movwf	setServo@pulsos^0,c
  1298  0034E6  0E00               	movlw	0
  1299  0034E8  6E0C               	movwf	setServo@pin^0,c
  1300  0034EA  0E21               	movlw	33
  1301  0034EC  ECD1  F01B         	call	_setServo
  1302  0034F0                     
  1303                           ;app.c: 68:         TMR3IF = 1;
  1304  0034F0  82A1               	bsf	4001,1,c	;volatile
  1305  0034F2                     l363:
  1306  0034F2  0012               	return		;funcret
  1307  0034F4                     __end_of_appStateInitial:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _readUART *****************
  1311 ;; Defined at:
  1312 ;;		line 39 in file "UART.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1326 ;;      Params:         0       0       0       0       0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1328 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1329 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1330 ;;Total ram usage:        2 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    3
  1333 ;; This function calls:
  1334 ;;		_Lcd_Cmd
  1335 ;;		_memcmp
  1336 ;;		_memset
  1337 ;; This function is called by:
  1338 ;;		_isrH
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text3
  1344  00294E                     __ptext3:
  1345                           	callstack 0
  1346  00294E                     _readUART:
  1347                           	callstack 27
  1348  00294E                     
  1349                           ;UART.c: 41:     if(!memcmp(puerto,"Informacion@",12))
  1350  00294E  0E86               	movlw	low _puerto
  1351  002950  6E07               	movwf	memcmp@vl^0,c
  1352  002952  0E00               	movlw	high _puerto
  1353  002954  6E08               	movwf	(memcmp@vl+1)^0,c
  1354  002956  0E2E               	movlw	low STR_12
  1355  002958  6E09               	movwf	memcmp@vr^0,c
  1356  00295A  0E08               	movlw	high STR_12
  1357  00295C  6E0A               	movwf	(memcmp@vr+1)^0,c
  1358  00295E  0E00               	movlw	0
  1359  002960  6E0C               	movwf	(memcmp@n+1)^0,c
  1360  002962  0E0C               	movlw	12
  1361  002964  6E0B               	movwf	memcmp@n^0,c
  1362  002966  ECF8  F017         	call	_memcmp	;wreg free
  1363  00296A  5007               	movf	?_memcmp^0,w,c
  1364  00296C  1008               	iorwf	(?_memcmp+1)^0,w,c
  1365  00296E  A4D8               	btfss	status,2,c
  1366  002970  EFBC  F014         	goto	u4341
  1367  002974  EFBE  F014         	goto	u4340
  1368  002978                     u4341:
  1369  002978  EFD5  F014         	goto	l4813
  1370  00297C                     u4340:
  1371  00297C                     
  1372                           ;UART.c: 42:     {;UART.c: 43:         memset(puerto,0,sizeof(puerto));
  1373  00297C  0E86               	movlw	low _puerto
  1374  00297E  6E07               	movwf	memset@dest^0,c
  1375  002980  0E00               	movlw	high _puerto
  1376  002982  6E08               	movwf	(memset@dest+1)^0,c
  1377  002984  0E00               	movlw	0
  1378  002986  6E0A               	movwf	(memset@c+1)^0,c
  1379  002988  0E00               	movlw	0
  1380  00298A  6E09               	movwf	memset@c^0,c
  1381  00298C  0E00               	movlw	0
  1382  00298E  6E0C               	movwf	(memset@n+1)^0,c
  1383  002990  0E08               	movlw	8
  1384  002992  6E0B               	movwf	memset@n^0,c
  1385  002994  EC6D  F010         	call	_memset	;wreg free
  1386  002998                     
  1387                           ;UART.c: 44:         datos.state = 0;
  1388  002998  0E00               	movlw	0
  1389  00299A  0100               	movlb	0	; () banked
  1390  00299C  6FC5               	movwf	(_datos+3)& (0+255),b
  1391  00299E                     
  1392                           ; BSR set to: 0
  1393                           ;UART.c: 45:         datos.nextFunc = sendinformation;
  1394  00299E  0E3A               	movlw	low _sendinformation
  1395  0029A0  6FD9               	movwf	(_datos+23)& (0+255),b
  1396  0029A2  0E2D               	movlw	high _sendinformation
  1397  0029A4  6FDA               	movwf	(_datos+24)& (0+255),b
  1398                           
  1399                           ;UART.c: 46:     }
  1400  0029A6  EF10  F015         	goto	l434
  1401  0029AA                     l4813:
  1402  0029AA  0E86               	movlw	low _puerto
  1403  0029AC  6E07               	movwf	memcmp@vl^0,c
  1404  0029AE  0E00               	movlw	high _puerto
  1405  0029B0  6E08               	movwf	(memcmp@vl+1)^0,c
  1406  0029B2  0E60               	movlw	low STR_14
  1407  0029B4  6E09               	movwf	memcmp@vr^0,c
  1408  0029B6  0E08               	movlw	high STR_14
  1409  0029B8  6E0A               	movwf	(memcmp@vr+1)^0,c
  1410  0029BA  0E00               	movlw	0
  1411  0029BC  6E0C               	movwf	(memcmp@n+1)^0,c
  1412  0029BE  0E09               	movlw	9
  1413  0029C0  6E0B               	movwf	memcmp@n^0,c
  1414  0029C2  ECF8  F017         	call	_memcmp	;wreg free
  1415  0029C6  5007               	movf	?_memcmp^0,w,c
  1416  0029C8  1008               	iorwf	(?_memcmp+1)^0,w,c
  1417  0029CA  A4D8               	btfss	status,2,c
  1418  0029CC  EFEA  F014         	goto	u4351
  1419  0029D0  EFEC  F014         	goto	u4350
  1420  0029D4                     u4351:
  1421  0029D4  EF10  F015         	goto	l434
  1422  0029D8                     u4350:
  1423  0029D8                     
  1424                           ;UART.c: 48:     {;UART.c: 49:         (Lcd_Cmd(1),_delay((unsigned long)((100)*(1200000
      +                          0/4000.0))));
  1425  0029D8  0E01               	movlw	1
  1426  0029DA  EC81  F012         	call	_Lcd_Cmd
  1427  0029DE  0E02               	movlw	2
  1428  0029E0  6E14               	movwf	(??_readUART+1)^0,c
  1429  0029E2  0E86               	movlw	134
  1430  0029E4  6E13               	movwf	??_readUART^0,c
  1431  0029E6  0E99               	movlw	153
  1432  0029E8                     u4497:
  1433  0029E8  2EE8               	decfsz	wreg,f,c
  1434  0029EA  D7FE               	bra	u4497
  1435  0029EC  2E13               	decfsz	??_readUART^0,f,c
  1436  0029EE  D7FC               	bra	u4497
  1437  0029F0  2E14               	decfsz	(??_readUART+1)^0,f,c
  1438  0029F2  D7FA               	bra	u4497
  1439  0029F4  F000               	nop	
  1440  0029F6                     
  1441                           ;UART.c: 50:         memset(puerto,0,sizeof(puerto));
  1442  0029F6  0E86               	movlw	low _puerto
  1443  0029F8  6E07               	movwf	memset@dest^0,c
  1444  0029FA  0E00               	movlw	high _puerto
  1445  0029FC  6E08               	movwf	(memset@dest+1)^0,c
  1446  0029FE  0E00               	movlw	0
  1447  002A00  6E0A               	movwf	(memset@c+1)^0,c
  1448  002A02  0E00               	movlw	0
  1449  002A04  6E09               	movwf	memset@c^0,c
  1450  002A06  0E00               	movlw	0
  1451  002A08  6E0C               	movwf	(memset@n+1)^0,c
  1452  002A0A  0E08               	movlw	8
  1453  002A0C  6E0B               	movwf	memset@n^0,c
  1454  002A0E  EC6D  F010         	call	_memset	;wreg free
  1455  002A12                     
  1456                           ;UART.c: 51:         datos.state = 0;
  1457  002A12  0E00               	movlw	0
  1458  002A14  0100               	movlb	0	; () banked
  1459  002A16  6FC5               	movwf	(_datos+3)& (0+255),b
  1460  002A18                     
  1461                           ; BSR set to: 0
  1462                           ;UART.c: 52:         datos.nextFunc = appStateRecolectData;
  1463  002A18  0E8E               	movlw	low _appStateRecolectData
  1464  002A1A  6FD9               	movwf	(_datos+23)& (0+255),b
  1465  002A1C  0E30               	movlw	high _appStateRecolectData
  1466  002A1E  6FDA               	movwf	(_datos+24)& (0+255),b
  1467  002A20                     l434:
  1468  002A20  0012               	return		;funcret
  1469  002A22                     __end_of_readUART:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _appGetElements *****************
  1473 ;; Defined at:
  1474 ;;		line 72 in file "app.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1490 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1491 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1492 ;;Total ram usage:        2 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:   11
  1495 ;; This function calls:
  1496 ;;		_Lcd_Cmd
  1497 ;;		_appSubGetData
  1498 ;;		_appSubGiveElemts
  1499 ;;		_appTimerStart
  1500 ;;		_appTimerStop
  1501 ;; This function is called by:
  1502 ;;		_isrL
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text4
  1508  0031A6                     __ptext4:
  1509                           	callstack 0
  1510  0031A6                     _appGetElements:
  1511                           	callstack 19
  1512  0031A6                     
  1513                           ;app.c: 74:     datos.state = 2;
  1514  0031A6  0E02               	movlw	2
  1515  0031A8  0100               	movlb	0	; () banked
  1516  0031AA  6FC5               	movwf	(_datos+3)& (0+255),b
  1517  0031AC                     
  1518                           ; BSR set to: 0
  1519                           ;app.c: 75:     appTimerStop();
  1520  0031AC  EC27  F01C         	call	_appTimerStop	;wreg free
  1521  0031B0                     
  1522                           ;app.c: 76:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1523  0031B0  0E01               	movlw	1
  1524  0031B2  EC81  F012         	call	_Lcd_Cmd
  1525  0031B6  0E02               	movlw	2
  1526  0031B8  0100               	movlb	0	; () banked
  1527  0031BA  6FC0               	movwf	(??_appGetElements+1)& (0+255),b
  1528  0031BC  0E86               	movlw	134
  1529  0031BE  6FBF               	movwf	??_appGetElements& (0+255),b
  1530  0031C0  0E99               	movlw	153
  1531  0031C2                     u4507:
  1532  0031C2  2EE8               	decfsz	wreg,f,c
  1533  0031C4  D7FE               	bra	u4507
  1534  0031C6  2FBF               	decfsz	??_appGetElements& (0+255),f,b
  1535  0031C8  D7FC               	bra	u4507
  1536  0031CA  2FC0               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1537  0031CC  D7FA               	bra	u4507
  1538  0031CE                     
  1539                           ;app.c: 77:     appSubGetData(&datos);
  1540  0031CE  0EC2               	movlw	low _datos
  1541  0031D0  0100               	movlb	0	; () banked
  1542  0031D2  6FBA               	movwf	appSubGetData@data_Inout& (0+255),b
  1543  0031D4  0E00               	movlw	high _datos
  1544  0031D6  6FBB               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1545  0031D8  EC28  F014         	call	_appSubGetData	;wreg free
  1546  0031DC                     
  1547                           ;app.c: 78:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1548  0031DC  0E01               	movlw	1
  1549  0031DE  EC81  F012         	call	_Lcd_Cmd
  1550  0031E2  0E02               	movlw	2
  1551  0031E4  0100               	movlb	0	; () banked
  1552  0031E6  6FC0               	movwf	(??_appGetElements+1)& (0+255),b
  1553  0031E8  0E86               	movlw	134
  1554  0031EA  6FBF               	movwf	??_appGetElements& (0+255),b
  1555  0031EC  0E99               	movlw	153
  1556  0031EE                     u4517:
  1557  0031EE  2EE8               	decfsz	wreg,f,c
  1558  0031F0  D7FE               	bra	u4517
  1559  0031F2  2FBF               	decfsz	??_appGetElements& (0+255),f,b
  1560  0031F4  D7FC               	bra	u4517
  1561  0031F6  2FC0               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1562  0031F8  D7FA               	bra	u4517
  1563  0031FA                     
  1564                           ;app.c: 79:     appSubGiveElemts(&datos);
  1565  0031FA  0EC2               	movlw	low _datos
  1566  0031FC  6E0F               	movwf	appSubGiveElemts@data^0,c
  1567  0031FE  0E00               	movlw	high _datos
  1568  003200  6E10               	movwf	(appSubGiveElemts@data+1)^0,c
  1569  003202  EC12  F01C         	call	_appSubGiveElemts	;wreg free
  1570  003206                     
  1571                           ;app.c: 80:     datos.nextFunc = appStateInitial;
  1572  003206  0EAA               	movlw	low _appStateInitial
  1573  003208  0100               	movlb	0	; () banked
  1574  00320A  6FD9               	movwf	(_datos+23)& (0+255),b
  1575  00320C  0E34               	movlw	high _appStateInitial
  1576  00320E  6FDA               	movwf	(_datos+24)& (0+255),b
  1577  003210                     
  1578                           ; BSR set to: 0
  1579                           ;app.c: 81:     appTimerStart();
  1580  003210  EC29  F01C         	call	_appTimerStart	;wreg free
  1581  003214  0012               	return		;funcret
  1582  003216                     __end_of_appGetElements:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _appStateRecolectData *****************
  1586 ;; Defined at:
  1587 ;;		line 35 in file "app.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1604 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:   11
  1608 ;; This function calls:
  1609 ;;		_appADC
  1610 ;;		_appBat
  1611 ;;		_appCounterStop
  1612 ;;		_appElemts
  1613 ;;		_setServo
  1614 ;; This function is called by:
  1615 ;;		_isrL
  1616 ;;		_readUART
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text5
  1622  00308E                     __ptext5:
  1623                           	callstack 0
  1624  00308E                     _appStateRecolectData:
  1625                           	callstack 19
  1626  00308E                     
  1627                           ;app.c: 37:     appADC(&datos);
  1628  00308E  0EC2               	movlw	low _datos
  1629  003090  0100               	movlb	0	; () banked
  1630  003092  6FBA               	movwf	appADC@data& (0+255),b
  1631  003094  0E00               	movlw	high _datos
  1632  003096  6FBB               	movwf	(appADC@data+1)& (0+255),b
  1633  003098  EC0A  F00E         	call	_appADC	;wreg free
  1634                           
  1635                           ;app.c: 38:     appBat(&datos);
  1636  00309C  0EC2               	movlw	low _datos
  1637  00309E  0100               	movlb	0	; () banked
  1638  0030A0  6FBA               	movwf	appBat@data& (0+255),b
  1639  0030A2  0E00               	movlw	high _datos
  1640  0030A4  6FBB               	movwf	(appBat@data+1)& (0+255),b
  1641  0030A6  EC3C  F00C         	call	_appBat	;wreg free
  1642                           
  1643                           ;app.c: 40:     appElemts(&datos);
  1644  0030AA  0EC2               	movlw	low _datos
  1645  0030AC  0100               	movlb	0	; () banked
  1646  0030AE  6FBA               	movwf	appElemts@data& (0+255),b
  1647  0030B0  0E00               	movlw	high _datos
  1648  0030B2  6FBB               	movwf	(appElemts@data+1)& (0+255),b
  1649  0030B4  EC42  F019         	call	_appElemts	;wreg free
  1650  0030B8                     
  1651                           ;app.c: 41:     if(datos.state == 2)
  1652  0030B8  0E02               	movlw	2
  1653  0030BA  0100               	movlb	0	; () banked
  1654  0030BC  19C5               	xorwf	(_datos+3)& (0+255),w,b
  1655  0030BE  A4D8               	btfss	status,2,c
  1656  0030C0  EF64  F018         	goto	u4321
  1657  0030C4  EF66  F018         	goto	u4320
  1658  0030C8                     u4321:
  1659  0030C8  EF8B  F018         	goto	l4761
  1660  0030CC                     u4320:
  1661  0030CC                     
  1662                           ; BSR set to: 0
  1663                           ;app.c: 42:     {;app.c: 43:         LATAbits.LA5 = 1;
  1664  0030CC  8A89               	bsf	137,5,c	;volatile
  1665  0030CE                     
  1666                           ; BSR set to: 0
  1667                           ;app.c: 44:         if(datos.elements == TMR0)
  1668  0030CE  50D6               	movf	214,w,c	;volatile
  1669  0030D0  19C3               	xorwf	(_datos+1)& (0+255),w,b
  1670  0030D2  E107               	bnz	u4331
  1671  0030D4  50D7               	movf	215,w,c	;volatile
  1672  0030D6  19C4               	xorwf	(_datos+2)& (0+255),w,b
  1673  0030D8  A4D8               	btfss	status,2,c
  1674  0030DA  EF71  F018         	goto	u4331
  1675  0030DE  EF73  F018         	goto	u4330
  1676  0030E2                     u4331:
  1677  0030E2  EF8B  F018         	goto	l4761
  1678  0030E6                     u4330:
  1679  0030E6                     
  1680                           ; BSR set to: 0
  1681                           ;app.c: 45:         {;app.c: 46:             datos.elements = (int16_t)TMR0;
  1682  0030E6  CFD6 F0C3          	movff	4054,_datos+1	;volatile
  1683  0030EA  CFD7 F0C4          	movff	4055,_datos+2	;volatile
  1684  0030EE                     
  1685                           ; BSR set to: 0
  1686                           ;app.c: 47:             appCounterStop();
  1687  0030EE  EC25  F01C         	call	_appCounterStop	;wreg free
  1688  0030F2                     
  1689                           ;app.c: 48:             datos.state = 0;
  1690  0030F2  0E00               	movlw	0
  1691  0030F4  0100               	movlb	0	; () banked
  1692  0030F6  6FC5               	movwf	(_datos+3)& (0+255),b
  1693  0030F8                     
  1694                           ; BSR set to: 0
  1695                           ;app.c: 49:             setServo(33,10,2);
  1696  0030F8  0E0A               	movlw	10
  1697  0030FA  6E0B               	movwf	setServo@pulsos^0,c
  1698  0030FC  0E02               	movlw	2
  1699  0030FE  6E0C               	movwf	setServo@pin^0,c
  1700  003100  0E21               	movlw	33
  1701  003102  ECD1  F01B         	call	_setServo
  1702  003106                     
  1703                           ;app.c: 50:             LATAbits.LA5 = 0;
  1704  003106  9A89               	bcf	137,5,c	;volatile
  1705  003108                     
  1706                           ;app.c: 51:             setServo(45,10,0);
  1707  003108  0E0A               	movlw	10
  1708  00310A  6E0B               	movwf	setServo@pulsos^0,c
  1709  00310C  0E00               	movlw	0
  1710  00310E  6E0C               	movwf	setServo@pin^0,c
  1711  003110  0E2D               	movlw	45
  1712  003112  ECD1  F01B         	call	_setServo
  1713  003116                     l4761:
  1714                           
  1715                           ;app.c: 54:     datos.nextFunc = appStateInitial;
  1716  003116  0EAA               	movlw	low _appStateInitial
  1717  003118  0100               	movlb	0	; () banked
  1718  00311A  6FD9               	movwf	(_datos+23)& (0+255),b
  1719  00311C  0E34               	movlw	high _appStateInitial
  1720  00311E  6FDA               	movwf	(_datos+24)& (0+255),b
  1721  003120                     
  1722                           ; BSR set to: 0
  1723  003120  0012               	return		;funcret
  1724  003122                     __end_of_appStateRecolectData:
  1725                           	callstack 0
  1726                           
  1727 ;; *************** function _confirmacion *****************
  1728 ;; Defined at:
  1729 ;;		line 123 in file "app.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1743 ;;      Params:         0       0       0       0       0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1745 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1746 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1747 ;;Total ram usage:        2 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    4
  1750 ;; This function calls:
  1751 ;;		_Lcd_Cmd
  1752 ;;		_Lcd_Out
  1753 ;;		_appTimerStart
  1754 ;; This function is called by:
  1755 ;;		_isrL
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text6
  1761  0034F4                     __ptext6:
  1762                           	callstack 0
  1763  0034F4                     _confirmacion:
  1764                           	callstack 26
  1765  0034F4                     
  1766                           ;app.c: 125:     Lcd_Out(1,0, (const int8_t*)"Confirmacion");
  1767  0034F4  0E00               	movlw	0
  1768  0034F6  6E0A               	movwf	Lcd_Out@x^0,c
  1769  0034F8  0E3B               	movlw	low STR_10
  1770  0034FA  6E0B               	movwf	Lcd_Out@buffer^0,c
  1771  0034FC  0E08               	movlw	high STR_10
  1772  0034FE  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1773  003500  0E01               	movlw	1
  1774  003502  EC11  F015         	call	_Lcd_Out
  1775  003506                     l4313:
  1776  003506  0E08               	movlw	8
  1777  003508  0100               	movlb	0	; () banked
  1778  00350A  19C5               	xorwf	(_datos+3)& (0+255),w,b
  1779  00350C  B4D8               	btfsc	status,2,c
  1780  00350E  EF8B  F01A         	goto	u3961
  1781  003512  EF8D  F01A         	goto	u3960
  1782  003516                     u3961:
  1783  003516  EF83  F01A         	goto	l4313
  1784  00351A                     u3960:
  1785  00351A                     
  1786                           ; BSR set to: 0
  1787                           ;app.c: 127:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1788  00351A  0E01               	movlw	1
  1789  00351C  EC81  F012         	call	_Lcd_Cmd
  1790  003520  0E02               	movlw	2
  1791  003522  6E12               	movwf	(??_confirmacion+1)^0,c
  1792  003524  0E86               	movlw	134
  1793  003526  6E11               	movwf	??_confirmacion^0,c
  1794  003528  0E99               	movlw	153
  1795  00352A                     u4527:
  1796  00352A  2EE8               	decfsz	wreg,f,c
  1797  00352C  D7FE               	bra	u4527
  1798  00352E  2E11               	decfsz	??_confirmacion^0,f,c
  1799  003530  D7FC               	bra	u4527
  1800  003532  2E12               	decfsz	(??_confirmacion+1)^0,f,c
  1801  003534  D7FA               	bra	u4527
  1802  003536  F000               	nop	
  1803  003538                     
  1804                           ;app.c: 128:     appTimerStart();
  1805  003538  EC29  F01C         	call	_appTimerStart	;wreg free
  1806  00353C  0012               	return		;funcret
  1807  00353E                     __end_of_confirmacion:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _warning *****************
  1811 ;; Defined at:
  1812 ;;		line 112 in file "app.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1826 ;;      Params:         0       0       0       0       0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1828 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1829 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1830 ;;Total ram usage:        2 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    4
  1833 ;; This function calls:
  1834 ;;		_Lcd_Cmd
  1835 ;;		_Lcd_Out
  1836 ;;		_appTimerStart
  1837 ;;		_appTimerStop
  1838 ;;		_setServo
  1839 ;; This function is called by:
  1840 ;;		_isrH
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text7
  1846  003216                     __ptext7:
  1847                           	callstack 0
  1848  003216                     _warning:
  1849                           	callstack 26
  1850  003216                     
  1851                           ;app.c: 114:     appTimerStop();
  1852  003216  EC27  F01C         	call	_appTimerStop	;wreg free
  1853  00321A                     
  1854                           ;app.c: 115:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1855  00321A  0E01               	movlw	1
  1856  00321C  EC81  F012         	call	_Lcd_Cmd
  1857  003220  0E02               	movlw	2
  1858  003222  6E12               	movwf	(??_warning+1)^0,c
  1859  003224  0E86               	movlw	134
  1860  003226  6E11               	movwf	??_warning^0,c
  1861  003228  0E99               	movlw	153
  1862  00322A                     u4537:
  1863  00322A  2EE8               	decfsz	wreg,f,c
  1864  00322C  D7FE               	bra	u4537
  1865  00322E  2E11               	decfsz	??_warning^0,f,c
  1866  003230  D7FC               	bra	u4537
  1867  003232  2E12               	decfsz	(??_warning+1)^0,f,c
  1868  003234  D7FA               	bra	u4537
  1869  003236  F000               	nop	
  1870  003238                     
  1871                           ;app.c: 116:     Lcd_Out(1,0, (const int8_t*)"Sin vacunas");
  1872  003238  0E00               	movlw	0
  1873  00323A  6E0A               	movwf	Lcd_Out@x^0,c
  1874  00323C  0E48               	movlw	low STR_8
  1875  00323E  6E0B               	movwf	Lcd_Out@buffer^0,c
  1876  003240  0E08               	movlw	high STR_8
  1877  003242  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1878  003244  0E01               	movlw	1
  1879  003246  EC11  F015         	call	_Lcd_Out
  1880  00324A                     
  1881                           ;app.c: 117:     Lcd_Out(2,0, (const int8_t*)"Recarga Porfavor");
  1882  00324A  0E00               	movlw	0
  1883  00324C  6E0A               	movwf	Lcd_Out@x^0,c
  1884  00324E  0E01               	movlw	low STR_9
  1885  003250  6E0B               	movwf	Lcd_Out@buffer^0,c
  1886  003252  0E08               	movlw	high STR_9
  1887  003254  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1888  003256  0E02               	movlw	2
  1889  003258  EC11  F015         	call	_Lcd_Out
  1890  00325C                     
  1891                           ;app.c: 118:     setServo(45,10,1);
  1892  00325C  0E0A               	movlw	10
  1893  00325E  6E0B               	movwf	setServo@pulsos^0,c
  1894  003260  0E01               	movlw	1
  1895  003262  6E0C               	movwf	setServo@pin^0,c
  1896  003264  0E2D               	movlw	45
  1897  003266  ECD1  F01B         	call	_setServo
  1898  00326A                     l4307:
  1899  00326A  0E0A               	movlw	10
  1900  00326C  0100               	movlb	0	; () banked
  1901  00326E  19C5               	xorwf	(_datos+3)& (0+255),w,b
  1902  003270  B4D8               	btfsc	status,2,c
  1903  003272  EF3D  F019         	goto	u3951
  1904  003276  EF3F  F019         	goto	u3950
  1905  00327A                     u3951:
  1906  00327A  EF35  F019         	goto	l4307
  1907  00327E                     u3950:
  1908  00327E                     
  1909                           ; BSR set to: 0
  1910                           ;app.c: 120:     appTimerStart();
  1911  00327E  EC29  F01C         	call	_appTimerStart	;wreg free
  1912  003282  0012               	return		;funcret
  1913  003284                     __end_of_warning:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _sendData *****************
  1917 ;; Defined at:
  1918 ;;		line 56 in file "UART.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  data            2   10[COMRAM] PTR struct _state
  1921 ;;		 -> datos(25), 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  i               1   14[COMRAM] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1933 ;;      Params:         2       0       0       0       0       0       0       0       0
  1934 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1935 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1936 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1937 ;;Total ram usage:        5 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    3
  1940 ;; This function calls:
  1941 ;;		_strlen
  1942 ;; This function is called by:
  1943 ;;		_sendinformation
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text8
  1948  0032EA                     __ptext8:
  1949                           	callstack 0
  1950  0032EA                     _sendData:
  1951                           	callstack 26
  1952  0032EA                     
  1953                           ;UART.c: 56: void sendData(StateMachine *data);UART.c: 57: {;UART.c: 58:     for(uint8_t
      +                           i = 0; i < strlen((const char *)data->display);)
  1954  0032EA  0E00               	movlw	0
  1955  0032EC  6E0F               	movwf	sendData@i^0,c
  1956  0032EE  EF8F  F019         	goto	l4209
  1957  0032F2                     l438:
  1958                           
  1959                           ;UART.c: 59:         {;UART.c: 60:             if(TXSTAbits.TRMT == 1)
  1960  0032F2  A2AC               	btfss	172,1,c	;volatile
  1961  0032F4  EF7E  F019         	goto	u3861
  1962  0032F8  EF80  F019         	goto	u3860
  1963  0032FC                     u3861:
  1964  0032FC  EF8F  F019         	goto	l4209
  1965  003300                     u3860:
  1966  003300                     
  1967                           ;UART.c: 61:             {;UART.c: 62:                 TXREG = data->display[i];
  1968  003300  500F               	movf	sendData@i^0,w,c
  1969  003302  240B               	addwf	sendData@data^0,w,c
  1970  003304  6E0D               	movwf	??_sendData^0,c
  1971  003306  0E00               	movlw	0
  1972  003308  200C               	addwfc	(sendData@data+1)^0,w,c
  1973  00330A  6E0E               	movwf	(??_sendData+1)^0,c
  1974  00330C  0E07               	movlw	7
  1975  00330E  240D               	addwf	??_sendData^0,w,c
  1976  003310  6ED9               	movwf	fsr2l,c
  1977  003312  0E00               	movlw	0
  1978  003314  200E               	addwfc	(??_sendData+1)^0,w,c
  1979  003316  6EDA               	movwf	fsr2h,c
  1980  003318  50DF               	movf	indf2,w,c
  1981  00331A  6EAD               	movwf	173,c	;volatile
  1982  00331C                     
  1983                           ;UART.c: 63:                 i++;
  1984  00331C  2A0F               	incf	sendData@i^0,f,c
  1985  00331E                     l4209:
  1986  00331E  0E07               	movlw	7
  1987  003320  240B               	addwf	sendData@data^0,w,c
  1988  003322  6E07               	movwf	strlen@s^0,c
  1989  003324  0E00               	movlw	0
  1990  003326  200C               	addwfc	(sendData@data+1)^0,w,c
  1991  003328  6E08               	movwf	(strlen@s+1)^0,c
  1992  00332A  EC85  F01B         	call	_strlen	;wreg free
  1993  00332E  500F               	movf	sendData@i^0,w,c
  1994  003330  6E0D               	movwf	??_sendData^0,c
  1995  003332  6A0E               	clrf	(??_sendData+1)^0,c
  1996  003334  5007               	movf	?_strlen^0,w,c
  1997  003336  5C0D               	subwf	??_sendData^0,w,c
  1998  003338  5008               	movf	(?_strlen+1)^0,w,c
  1999  00333A  580E               	subwfb	(??_sendData+1)^0,w,c
  2000  00333C  A0D8               	btfss	status,0,c
  2001  00333E  EFA3  F019         	goto	u3871
  2002  003342  EFA5  F019         	goto	u3870
  2003  003346                     u3871:
  2004  003346  EF79  F019         	goto	l438
  2005  00334A                     u3870:
  2006  00334A  0012               	return		;funcret
  2007  00334C                     __end_of_sendData:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _memcmp *****************
  2011 ;; Defined at:
  2012 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memcmp.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  vl              2    6[COMRAM] PTR const void 
  2015 ;;		 -> puerto(16), 
  2016 ;;  vr              2    8[COMRAM] PTR const void 
  2017 ;;		 -> STR_15(10), STR_13(13), 
  2018 ;;  n               2   10[COMRAM] unsigned int 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  r               2   15[COMRAM] PTR const unsigned char 
  2021 ;;		 -> STR_15(10), STR_13(13), 
  2022 ;;  l               2   13[COMRAM] PTR const unsigned char 
  2023 ;;		 -> puerto(16), 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  2    6[COMRAM] int 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2033 ;;      Params:         6       0       0       0       0       0       0       0       0
  2034 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2035 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2036 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2037 ;;Total ram usage:       11 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    2
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_readUART
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text9
  2048  002FF0                     __ptext9:
  2049                           	callstack 0
  2050  002FF0                     _memcmp:
  2051                           	callstack 27
  2052  002FF0  C007  F00E         	movff	memcmp@vl,memcmp@l
  2053  002FF4  C008  F00F         	movff	memcmp@vl+1,memcmp@l+1
  2054  002FF8  C009  F010         	movff	memcmp@vr,memcmp@r
  2055  002FFC  C00A  F011         	movff	memcmp@vr+1,memcmp@r+1
  2056  003000  EF09  F018         	goto	l4215
  2057  003004                     l4213:
  2058  003004  060B               	decf	memcmp@n^0,f,c
  2059  003006  A0D8               	btfss	status,0,c
  2060  003008  060C               	decf	(memcmp@n+1)^0,f,c
  2061  00300A  4A0E               	infsnz	memcmp@l^0,f,c
  2062  00300C  2A0F               	incf	(memcmp@l+1)^0,f,c
  2063  00300E  4A10               	infsnz	memcmp@r^0,f,c
  2064  003010  2A11               	incf	(memcmp@r+1)^0,f,c
  2065  003012                     l4215:
  2066  003012  500B               	movf	memcmp@n^0,w,c
  2067  003014  100C               	iorwf	(memcmp@n+1)^0,w,c
  2068  003016  B4D8               	btfsc	status,2,c
  2069  003018  EF10  F018         	goto	u3881
  2070  00301C  EF12  F018         	goto	u3880
  2071  003020                     u3881:
  2072  003020  EF26  F018         	goto	l4219
  2073  003024                     u3880:
  2074  003024  C00E  FFD9         	movff	memcmp@l,fsr2l
  2075  003028  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2076  00302C  50DF               	movf	indf2,w,c
  2077  00302E  6E0D               	movwf	??_memcmp^0,c
  2078  003030  C010  FFF6         	movff	memcmp@r,tblptrl
  2079  003034  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2080  003038                     	if	0	;tblptru may be non-zero
  2081  003038                     	endif
  2082  003038                     	if	0	;tblptru may be non-zero
  2083  003038                     	endif
  2084  003038  0008               	tblrd		*
  2085  00303A  50F5               	movf	tablat,w,c
  2086  00303C  180D               	xorwf	??_memcmp^0,w,c
  2087  00303E  B4D8               	btfsc	status,2,c
  2088  003040  EF24  F018         	goto	u3891
  2089  003044  EF26  F018         	goto	u3890
  2090  003048                     u3891:
  2091  003048  EF02  F018         	goto	l4213
  2092  00304C                     u3890:
  2093  00304C                     l4219:
  2094  00304C  500B               	movf	memcmp@n^0,w,c
  2095  00304E  100C               	iorwf	(memcmp@n+1)^0,w,c
  2096  003050  A4D8               	btfss	status,2,c
  2097  003052  EF2D  F018         	goto	u3901
  2098  003056  EF2F  F018         	goto	u3900
  2099  00305A                     u3901:
  2100  00305A  EF35  F018         	goto	l4223
  2101  00305E                     u3900:
  2102  00305E  0E00               	movlw	0
  2103  003060  6E08               	movwf	(?_memcmp+1)^0,c
  2104  003062  0E00               	movlw	0
  2105  003064  6E07               	movwf	?_memcmp^0,c
  2106  003066  EF46  F018         	goto	l1127
  2107  00306A                     l4223:
  2108  00306A  C00E  FFD9         	movff	memcmp@l,fsr2l
  2109  00306E  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2110  003072  50DF               	movf	indf2,w,c
  2111  003074  6E0D               	movwf	??_memcmp^0,c
  2112  003076  C010  FFF6         	movff	memcmp@r,tblptrl
  2113  00307A  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2114  00307E                     	if	0	;tblptru may be non-zero
  2115  00307E                     	endif
  2116  00307E                     	if	0	;tblptru may be non-zero
  2117  00307E                     	endif
  2118  00307E  0008               	tblrd		*
  2119  003080  50F5               	movf	tablat,w,c
  2120  003082  5C0D               	subwf	??_memcmp^0,w,c
  2121  003084  6E07               	movwf	?_memcmp^0,c
  2122  003086  6A08               	clrf	(?_memcmp+1)^0,c
  2123  003088  A0D8               	btfss	status,0,c
  2124  00308A  0608               	decf	(?_memcmp+1)^0,f,c
  2125  00308C                     l1127:
  2126  00308C  0012               	return		;funcret
  2127  00308E                     __end_of_memcmp:
  2128                           	callstack 0
  2129                           
  2130 ;; *************** function _appElemts *****************
  2131 ;; Defined at:
  2132 ;;		line 154 in file "servo.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  data            2   36[BANK0 ] PTR struct _state
  2135 ;;		 -> datos(25), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2147 ;;      Params:         0       2       0       0       0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2150 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2151 ;;Total ram usage:        2 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:   10
  2154 ;; This function calls:
  2155 ;;		_Lcd_Out
  2156 ;;		_memset
  2157 ;;		_sprintf
  2158 ;; This function is called by:
  2159 ;;		_appStateRecolectData
  2160 ;;		_sendinformation
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text10
  2165  003284                     __ptext10:
  2166                           	callstack 0
  2167  003284                     _appElemts:
  2168                           	callstack 19
  2169  003284                     
  2170                           ;servo.c: 154: void appElemts(StateMachine *data);servo.c: 155: {;servo.c: 157:     mems
      +                          et(data->display,0,sizeof(data->display));
  2171  003284  0E07               	movlw	7
  2172  003286  0100               	movlb	0	; () banked
  2173  003288  25BA               	addwf	appElemts@data& (0+255),w,b
  2174  00328A  6E07               	movwf	memset@dest^0,c
  2175  00328C  0E00               	movlw	0
  2176  00328E  21BB               	addwfc	(appElemts@data+1)& (0+255),w,b
  2177  003290  6E08               	movwf	(memset@dest+1)^0,c
  2178  003292  0E00               	movlw	0
  2179  003294  6E0A               	movwf	(memset@c+1)^0,c
  2180  003296  0E00               	movlw	0
  2181  003298  6E09               	movwf	memset@c^0,c
  2182  00329A  0E00               	movlw	0
  2183  00329C  6E0C               	movwf	(memset@n+1)^0,c
  2184  00329E  0E10               	movlw	16
  2185  0032A0  6E0B               	movwf	memset@n^0,c
  2186  0032A2  EC6D  F010         	call	_memset	;wreg free
  2187  0032A6                     
  2188                           ;servo.c: 158:     sprintf((char *)data->display,"#:%d",(256 - (TMR0)));
  2189  0032A6  0E07               	movlw	7
  2190  0032A8  0100               	movlb	0	; () banked
  2191  0032AA  25BA               	addwf	appElemts@data& (0+255),w,b
  2192  0032AC  6FA8               	movwf	sprintf@s& (0+255),b
  2193  0032AE  0E00               	movlw	0
  2194  0032B0  21BB               	addwfc	(appElemts@data+1)& (0+255),w,b
  2195  0032B2  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  2196  0032B4  0E79               	movlw	low STR_5
  2197  0032B6  6FAA               	movwf	sprintf@fmt& (0+255),b
  2198  0032B8  0E08               	movlw	high STR_5
  2199  0032BA  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  2200  0032BC  50D6               	movf	214,w,c	;volatile
  2201  0032BE  0800               	sublw	0
  2202  0032C0  6FAC               	movwf	(?_sprintf+4)& (0+255),b
  2203  0032C2  50D7               	movf	215,w,c	;volatile
  2204  0032C4  A0D8               	btfss	status,0,c
  2205  0032C6  2AE8               	incf	wreg,f,c
  2206  0032C8  0801               	sublw	1
  2207  0032CA  6FAD               	movwf	(?_sprintf+5)& (0+255),b
  2208  0032CC  EC03  F01A         	call	_sprintf	;wreg free
  2209  0032D0                     
  2210                           ;servo.c: 159:     Lcd_Out(2,10, (int8_t*)data->display);
  2211  0032D0  0E0A               	movlw	10
  2212  0032D2  6E0A               	movwf	Lcd_Out@x^0,c
  2213  0032D4  0E07               	movlw	7
  2214  0032D6  0100               	movlb	0	; () banked
  2215  0032D8  25BA               	addwf	appElemts@data& (0+255),w,b
  2216  0032DA  6E0B               	movwf	Lcd_Out@buffer^0,c
  2217  0032DC  0E00               	movlw	0
  2218  0032DE  21BB               	addwfc	(appElemts@data+1)& (0+255),w,b
  2219  0032E0  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2220  0032E2  0E02               	movlw	2
  2221  0032E4  EC11  F015         	call	_Lcd_Out
  2222  0032E8  0012               	return		;funcret
  2223  0032EA                     __end_of_appElemts:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _appCounterStop *****************
  2227 ;; Defined at:
  2228 ;;		line 148 in file "servo.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		None
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2245 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    2
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_appStateRecolectData
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text11
  2257  00384A                     __ptext11:
  2258                           	callstack 0
  2259  00384A                     _appCounterStop:
  2260                           	callstack 27
  2261  00384A                     
  2262                           ;servo.c: 150:     T0CONbits.TMR0ON = 0;
  2263  00384A  9ED5               	bcf	213,7,c	;volatile
  2264  00384C  0012               	return		;funcret
  2265  00384E                     __end_of_appCounterStop:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _appBat *****************
  2269 ;; Defined at:
  2270 ;;		line 73 in file "adc.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  data            2   36[BANK0 ] PTR struct _state
  2273 ;;		 -> datos(25), 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2285 ;;      Params:         0       2       0       0       0       0       0       0       0
  2286 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2287 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2288 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2289 ;;Total ram usage:        8 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:   10
  2292 ;; This function calls:
  2293 ;;		_Lcd_Out
  2294 ;;		___fldiv
  2295 ;;		___flmul
  2296 ;;		___fltol
  2297 ;;		___xxtofl
  2298 ;;		_adcGetValue
  2299 ;;		_memset
  2300 ;;		_sprintf
  2301 ;; This function is called by:
  2302 ;;		_appStateRecolectData
  2303 ;;		_sendinformation
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text12
  2308  001878                     __ptext12:
  2309                           	callstack 0
  2310  001878                     _appBat:
  2311                           	callstack 19
  2312  001878                     
  2313                           ;adc.c: 73: void appBat(StateMachine *data);adc.c: 74: {;adc.c: 75:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2314  001878  0E07               	movlw	7
  2315  00187A  0100               	movlb	0	; () banked
  2316  00187C  25BA               	addwf	appBat@data& (0+255),w,b
  2317  00187E  6E07               	movwf	memset@dest^0,c
  2318  001880  0E00               	movlw	0
  2319  001882  21BB               	addwfc	(appBat@data+1)& (0+255),w,b
  2320  001884  6E08               	movwf	(memset@dest+1)^0,c
  2321  001886  0E00               	movlw	0
  2322  001888  6E0A               	movwf	(memset@c+1)^0,c
  2323  00188A  0E00               	movlw	0
  2324  00188C  6E09               	movwf	memset@c^0,c
  2325  00188E  0E00               	movlw	0
  2326  001890  6E0C               	movwf	(memset@n+1)^0,c
  2327  001892  0E10               	movlw	16
  2328  001894  6E0B               	movwf	memset@n^0,c
  2329  001896  EC6D  F010         	call	_memset	;wreg free
  2330                           
  2331                           ;adc.c: 80:     data->bat = adcGetValue(1);
  2332  00189A  0E01               	movlw	1
  2333  00189C  EC4B  F01B         	call	_adcGetValue
  2334  0018A0  0100               	movlb	0	; () banked
  2335  0018A2  EE20 F004          	lfsr	2,4
  2336  0018A6  51BA               	movf	appBat@data& (0+255),w,b
  2337  0018A8  26D9               	addwf	fsr2l,f,c
  2338  0018AA  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2339  0018AC  22DA               	addwfc	fsr2h,f,c
  2340  0018AE  C007  FFDE         	movff	?_adcGetValue,postinc2
  2341  0018B2  C008  FFDD         	movff	?_adcGetValue+1,postdec2
  2342  0018B6                     
  2343                           ; BSR set to: 0
  2344                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2345  0018B6  0E00               	movlw	0
  2346  0018B8  6E36               	movwf	___fldiv@a^0,c
  2347  0018BA  0E00               	movlw	0
  2348  0018BC  6E37               	movwf	(___fldiv@a+1)^0,c
  2349  0018BE  0E80               	movlw	128
  2350  0018C0  6E38               	movwf	(___fldiv@a+2)^0,c
  2351  0018C2  0E44               	movlw	68
  2352  0018C4  6E39               	movwf	(___fldiv@a+3)^0,c
  2353  0018C6  0E00               	movlw	0
  2354  0018C8  6E1D               	movwf	___flmul@a^0,c
  2355  0018CA  0E00               	movlw	0
  2356  0018CC  6E1E               	movwf	(___flmul@a+1)^0,c
  2357  0018CE  0EA0               	movlw	160
  2358  0018D0  6E1F               	movwf	(___flmul@a+2)^0,c
  2359  0018D2  0E40               	movlw	64
  2360  0018D4  6E20               	movwf	(___flmul@a+3)^0,c
  2361  0018D6  EE20 F004          	lfsr	2,4
  2362  0018DA  51BA               	movf	appBat@data& (0+255),w,b
  2363  0018DC  26D9               	addwf	fsr2l,f,c
  2364  0018DE  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2365  0018E0  22DA               	addwfc	fsr2h,f,c
  2366  0018E2  CFDE F0BC          	movff	postinc2,??_appBat
  2367  0018E6  CFDD F0BD          	movff	postdec2,??_appBat+1
  2368  0018EA  C0BC  F00B         	movff	??_appBat,___xxtofl@val
  2369  0018EE  C0BD  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2370  0018F2  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2371  0018F4  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2372  0018F6  0E00               	movlw	0
  2373  0018F8  EC30  F00D         	call	___xxtofl
  2374  0018FC  C00B  F019         	movff	?___xxtofl,___flmul@b
  2375  001900  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2376  001904  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2377  001908  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2378  00190C  EC40  F004         	call	___flmul	;wreg free
  2379  001910  C019  F032         	movff	?___flmul,___fldiv@b
  2380  001914  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2381  001918  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2382  00191C  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2383  001920  EC55  F006         	call	___fldiv	;wreg free
  2384  001924  C032  F0BE         	movff	?___fldiv,_appBat$2656
  2385  001928  C033  F0BF         	movff	?___fldiv+1,_appBat$2656+1
  2386  00192C  C034  F0C0         	movff	?___fldiv+2,_appBat$2656+2
  2387  001930  C035  F0C1         	movff	?___fldiv+3,_appBat$2656+3
  2388  001934                     
  2389                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2390  001934  0E00               	movlw	0
  2391  001936  6E1D               	movwf	___flmul@a^0,c
  2392  001938  0E00               	movlw	0
  2393  00193A  6E1E               	movwf	(___flmul@a+1)^0,c
  2394  00193C  0EC8               	movlw	200
  2395  00193E  6E1F               	movwf	(___flmul@a+2)^0,c
  2396  001940  0E42               	movlw	66
  2397  001942  6E20               	movwf	(___flmul@a+3)^0,c
  2398  001944  C0BE  F019         	movff	_appBat$2656,___flmul@b
  2399  001948  C0BF  F01A         	movff	_appBat$2656+1,___flmul@b+1
  2400  00194C  C0C0  F01B         	movff	_appBat$2656+2,___flmul@b+2
  2401  001950  C0C1  F01C         	movff	_appBat$2656+3,___flmul@b+3
  2402  001954  EC40  F004         	call	___flmul	;wreg free
  2403  001958  C019  F04B         	movff	?___flmul,___fltol@f1
  2404  00195C  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2405  001960  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2406  001964  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2407  001968  ECA4  F013         	call	___fltol	;wreg free
  2408  00196C  0100               	movlb	0	; () banked
  2409  00196E  EE20 F004          	lfsr	2,4
  2410  001972  51BA               	movf	appBat@data& (0+255),w,b
  2411  001974  26D9               	addwf	fsr2l,f,c
  2412  001976  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2413  001978  22DA               	addwfc	fsr2h,f,c
  2414  00197A  C04B  FFDE         	movff	?___fltol,postinc2
  2415  00197E  C04C  FFDD         	movff	?___fltol+1,postdec2
  2416  001982                     
  2417                           ; BSR set to: 0
  2418                           ;adc.c: 82:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  2419  001982  0E00               	movlw	0
  2420  001984  6E36               	movwf	___fldiv@a^0,c
  2421  001986  0E00               	movlw	0
  2422  001988  6E37               	movwf	(___fldiv@a+1)^0,c
  2423  00198A  0EFA               	movlw	250
  2424  00198C  6E38               	movwf	(___fldiv@a+2)^0,c
  2425  00198E  0E43               	movlw	67
  2426  001990  6E39               	movwf	(___fldiv@a+3)^0,c
  2427  001992  0E00               	movlw	0
  2428  001994  6E1D               	movwf	___flmul@a^0,c
  2429  001996  0E00               	movlw	0
  2430  001998  6E1E               	movwf	(___flmul@a+1)^0,c
  2431  00199A  0EC8               	movlw	200
  2432  00199C  6E1F               	movwf	(___flmul@a+2)^0,c
  2433  00199E  0E42               	movlw	66
  2434  0019A0  6E20               	movwf	(___flmul@a+3)^0,c
  2435  0019A2  EE20 F004          	lfsr	2,4
  2436  0019A6  51BA               	movf	appBat@data& (0+255),w,b
  2437  0019A8  26D9               	addwf	fsr2l,f,c
  2438  0019AA  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2439  0019AC  22DA               	addwfc	fsr2h,f,c
  2440  0019AE  CFDE F0BC          	movff	postinc2,??_appBat
  2441  0019B2  CFDD F0BD          	movff	postdec2,??_appBat+1
  2442  0019B6  C0BC  F00B         	movff	??_appBat,___xxtofl@val
  2443  0019BA  C0BD  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2444  0019BE  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2445  0019C0  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2446  0019C2  0E00               	movlw	0
  2447  0019C4  EC30  F00D         	call	___xxtofl
  2448  0019C8  C00B  F019         	movff	?___xxtofl,___flmul@b
  2449  0019CC  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2450  0019D0  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2451  0019D4  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2452  0019D8  EC40  F004         	call	___flmul	;wreg free
  2453  0019DC  C019  F032         	movff	?___flmul,___fldiv@b
  2454  0019E0  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2455  0019E4  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2456  0019E8  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2457  0019EC  EC55  F006         	call	___fldiv	;wreg free
  2458  0019F0  C032  F04B         	movff	?___fldiv,___fltol@f1
  2459  0019F4  C033  F04C         	movff	?___fldiv+1,___fltol@f1+1
  2460  0019F8  C034  F04D         	movff	?___fldiv+2,___fltol@f1+2
  2461  0019FC  C035  F04E         	movff	?___fldiv+3,___fltol@f1+3
  2462  001A00  ECA4  F013         	call	___fltol	;wreg free
  2463  001A04  0100               	movlb	0	; () banked
  2464  001A06  EE20 F004          	lfsr	2,4
  2465  001A0A  51BA               	movf	appBat@data& (0+255),w,b
  2466  001A0C  26D9               	addwf	fsr2l,f,c
  2467  001A0E  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2468  001A10  22DA               	addwfc	fsr2h,f,c
  2469  001A12  C04B  FFDE         	movff	?___fltol,postinc2
  2470  001A16  C04C  FFDD         	movff	?___fltol+1,postdec2
  2471  001A1A                     
  2472                           ; BSR set to: 0
  2473                           ;adc.c: 83:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  2474  001A1A  0E07               	movlw	7
  2475  001A1C  25BA               	addwf	appBat@data& (0+255),w,b
  2476  001A1E  6FA8               	movwf	sprintf@s& (0+255),b
  2477  001A20  0E00               	movlw	0
  2478  001A22  21BB               	addwfc	(appBat@data+1)& (0+255),w,b
  2479  001A24  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  2480  001A26  0E6A               	movlw	low STR_2
  2481  001A28  6FAA               	movwf	sprintf@fmt& (0+255),b
  2482  001A2A  0E08               	movlw	high STR_2
  2483  001A2C  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  2484  001A2E  EE20 F004          	lfsr	2,4
  2485  001A32  51BA               	movf	appBat@data& (0+255),w,b
  2486  001A34  26D9               	addwf	fsr2l,f,c
  2487  001A36  51BB               	movf	(appBat@data+1)& (0+255),w,b
  2488  001A38  22DA               	addwfc	fsr2h,f,c
  2489  001A3A  CFDE F0AC          	movff	postinc2,?_sprintf+4
  2490  001A3E  CFDD F0AD          	movff	postdec2,?_sprintf+5
  2491  001A42  EC03  F01A         	call	_sprintf	;wreg free
  2492  001A46                     
  2493                           ;adc.c: 84:     Lcd_Out(2,0, (int8_t*)data->display);
  2494  001A46  0E00               	movlw	0
  2495  001A48  6E0A               	movwf	Lcd_Out@x^0,c
  2496  001A4A  0E07               	movlw	7
  2497  001A4C  0100               	movlb	0	; () banked
  2498  001A4E  25BA               	addwf	appBat@data& (0+255),w,b
  2499  001A50  6E0B               	movwf	Lcd_Out@buffer^0,c
  2500  001A52  0E00               	movlw	0
  2501  001A54  21BB               	addwfc	(appBat@data+1)& (0+255),w,b
  2502  001A56  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2503  001A58  0E02               	movlw	2
  2504  001A5A  EC11  F015         	call	_Lcd_Out
  2505  001A5E  0012               	return		;funcret
  2506  001A60                     __end_of_appBat:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function _appADC *****************
  2510 ;; Defined at:
  2511 ;;		line 55 in file "adc.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  data            2   36[BANK0 ] PTR struct _state
  2514 ;;		 -> datos(25), 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  lm35val         4   38[BANK0 ] float 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2526 ;;      Params:         0       2       0       0       0       0       0       0       0
  2527 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2529 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2530 ;;Total ram usage:        6 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:   10
  2533 ;; This function calls:
  2534 ;;		_Lcd_Out
  2535 ;;		___awmod
  2536 ;;		___fldiv
  2537 ;;		___flmul
  2538 ;;		___fltol
  2539 ;;		___xxtofl
  2540 ;;		_adcGetValue
  2541 ;;		_memset
  2542 ;;		_sprintf
  2543 ;; This function is called by:
  2544 ;;		_appStateRecolectData
  2545 ;;		_sendinformation
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text13
  2550  001C14                     __ptext13:
  2551                           	callstack 0
  2552  001C14                     _appADC:
  2553                           	callstack 19
  2554  001C14                     
  2555                           ;adc.c: 55: void appADC(StateMachine *data);adc.c: 56: {;adc.c: 57:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2556  001C14  0E07               	movlw	7
  2557  001C16  0100               	movlb	0	; () banked
  2558  001C18  25BA               	addwf	appADC@data& (0+255),w,b
  2559  001C1A  6E07               	movwf	memset@dest^0,c
  2560  001C1C  0E00               	movlw	0
  2561  001C1E  21BB               	addwfc	(appADC@data+1)& (0+255),w,b
  2562  001C20  6E08               	movwf	(memset@dest+1)^0,c
  2563  001C22  0E00               	movlw	0
  2564  001C24  6E0A               	movwf	(memset@c+1)^0,c
  2565  001C26  0E00               	movlw	0
  2566  001C28  6E09               	movwf	memset@c^0,c
  2567  001C2A  0E00               	movlw	0
  2568  001C2C  6E0C               	movwf	(memset@n+1)^0,c
  2569  001C2E  0E10               	movlw	16
  2570  001C30  6E0B               	movwf	memset@n^0,c
  2571  001C32  EC6D  F010         	call	_memset	;wreg free
  2572  001C36                     
  2573                           ;adc.c: 58:     float lm35val = adcGetValue(0);
  2574  001C36  0E00               	movlw	0
  2575  001C38  EC4B  F01B         	call	_adcGetValue
  2576  001C3C  C007  F00B         	movff	?_adcGetValue,___xxtofl@val
  2577  001C40  C008  F00C         	movff	?_adcGetValue+1,___xxtofl@val+1
  2578  001C44  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2579  001C46  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2580  001C48  0E00               	movlw	0
  2581  001C4A  EC30  F00D         	call	___xxtofl
  2582  001C4E  C00B  F0BC         	movff	?___xxtofl,appADC@lm35val
  2583  001C52  C00C  F0BD         	movff	?___xxtofl+1,appADC@lm35val+1
  2584  001C56  C00D  F0BE         	movff	?___xxtofl+2,appADC@lm35val+2
  2585  001C5A  C00E  F0BF         	movff	?___xxtofl+3,appADC@lm35val+3
  2586  001C5E                     
  2587                           ;adc.c: 59:     lm35val = (float)((lm35val*4.88)/10.0);
  2588  001C5E  0EF6               	movlw	246
  2589  001C60  6E1D               	movwf	___flmul@a^0,c
  2590  001C62  0E28               	movlw	40
  2591  001C64  6E1E               	movwf	(___flmul@a+1)^0,c
  2592  001C66  0E9C               	movlw	156
  2593  001C68  6E1F               	movwf	(___flmul@a+2)^0,c
  2594  001C6A  0E40               	movlw	64
  2595  001C6C  6E20               	movwf	(___flmul@a+3)^0,c
  2596  001C6E  C0BC  F019         	movff	appADC@lm35val,___flmul@b
  2597  001C72  C0BD  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2598  001C76  C0BE  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2599  001C7A  C0BF  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2600  001C7E  EC40  F004         	call	___flmul	;wreg free
  2601  001C82  C019  F032         	movff	?___flmul,___fldiv@b
  2602  001C86  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2603  001C8A  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2604  001C8E  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2605  001C92  0E00               	movlw	0
  2606  001C94  6E36               	movwf	___fldiv@a^0,c
  2607  001C96  0E00               	movlw	0
  2608  001C98  6E37               	movwf	(___fldiv@a+1)^0,c
  2609  001C9A  0E20               	movlw	32
  2610  001C9C  6E38               	movwf	(___fldiv@a+2)^0,c
  2611  001C9E  0E41               	movlw	65
  2612  001CA0  6E39               	movwf	(___fldiv@a+3)^0,c
  2613  001CA2  EC55  F006         	call	___fldiv	;wreg free
  2614  001CA6  C032  F0BC         	movff	?___fldiv,appADC@lm35val
  2615  001CAA  C033  F0BD         	movff	?___fldiv+1,appADC@lm35val+1
  2616  001CAE  C034  F0BE         	movff	?___fldiv+2,appADC@lm35val+2
  2617  001CB2  C035  F0BF         	movff	?___fldiv+3,appADC@lm35val+3
  2618  001CB6                     
  2619                           ;adc.c: 61:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  2620  001CB6  0E07               	movlw	7
  2621  001CB8  0100               	movlb	0	; () banked
  2622  001CBA  25BA               	addwf	appADC@data& (0+255),w,b
  2623  001CBC  6FA8               	movwf	sprintf@s& (0+255),b
  2624  001CBE  0E00               	movlw	0
  2625  001CC0  21BB               	addwfc	(appADC@data+1)& (0+255),w,b
  2626  001CC2  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  2627  001CC4  0E20               	movlw	low STR_1
  2628  001CC6  6FAA               	movwf	sprintf@fmt& (0+255),b
  2629  001CC8  0E08               	movlw	high STR_1
  2630  001CCA  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  2631  001CCC  C0BC  F04B         	movff	appADC@lm35val,___fltol@f1
  2632  001CD0  C0BD  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2633  001CD4  C0BE  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2634  001CD8  C0BF  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2635  001CDC  ECA4  F013         	call	___fltol	;wreg free
  2636  001CE0  504B               	movf	?___fltol^0,w,c
  2637  001CE2  0100               	movlb	0	; () banked
  2638  001CE4  6FAC               	movwf	(?_sprintf+4)& (0+255),b
  2639  001CE6  6BAD               	clrf	(?_sprintf+5)& (0+255),b
  2640  001CE8  0E00               	movlw	0
  2641  001CEA  6E1D               	movwf	___flmul@a^0,c
  2642  001CEC  0E00               	movlw	0
  2643  001CEE  6E1E               	movwf	(___flmul@a+1)^0,c
  2644  001CF0  0EC8               	movlw	200
  2645  001CF2  6E1F               	movwf	(___flmul@a+2)^0,c
  2646  001CF4  0E42               	movlw	66
  2647  001CF6  6E20               	movwf	(___flmul@a+3)^0,c
  2648  001CF8  C0BC  F019         	movff	appADC@lm35val,___flmul@b
  2649  001CFC  C0BD  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2650  001D00  C0BE  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2651  001D04  C0BF  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2652  001D08  EC40  F004         	call	___flmul	;wreg free
  2653  001D0C  C019  F04B         	movff	?___flmul,___fltol@f1
  2654  001D10  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2655  001D14  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2656  001D18  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2657  001D1C  ECA4  F013         	call	___fltol	;wreg free
  2658  001D20  504B               	movf	?___fltol^0,w,c
  2659  001D22  0100               	movlb	0	; () banked
  2660  001D24  6F98               	movwf	___awmod@dividend& (0+255),b
  2661  001D26  6B99               	clrf	(___awmod@dividend+1)& (0+255),b
  2662  001D28  0E00               	movlw	0
  2663  001D2A  6F9B               	movwf	(___awmod@divisor+1)& (0+255),b
  2664  001D2C  0E64               	movlw	100
  2665  001D2E  6F9A               	movwf	___awmod@divisor& (0+255),b
  2666  001D30  ECFB  F016         	call	___awmod	;wreg free
  2667  001D34  0100               	movlb	0	; () banked
  2668  001D36  5198               	movf	?___awmod& (0+255),w,b
  2669  001D38  6FAE               	movwf	(?_sprintf+6)& (0+255),b
  2670  001D3A  6BAF               	clrf	(?_sprintf+7)& (0+255),b
  2671  001D3C  EC03  F01A         	call	_sprintf	;wreg free
  2672  001D40                     
  2673                           ;adc.c: 62:     Lcd_Out(1,0, (int8_t*)data->display);
  2674  001D40  0E00               	movlw	0
  2675  001D42  6E0A               	movwf	Lcd_Out@x^0,c
  2676  001D44  0E07               	movlw	7
  2677  001D46  0100               	movlb	0	; () banked
  2678  001D48  25BA               	addwf	appADC@data& (0+255),w,b
  2679  001D4A  6E0B               	movwf	Lcd_Out@buffer^0,c
  2680  001D4C  0E00               	movlw	0
  2681  001D4E  21BB               	addwfc	(appADC@data+1)& (0+255),w,b
  2682  001D50  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2683  001D52  0E01               	movlw	1
  2684  001D54  EC11  F015         	call	_Lcd_Out
  2685                           
  2686                           ;adc.c: 63:     if(((int)lm35val < 2))
  2687  001D58  C0BC  F04B         	movff	appADC@lm35val,___fltol@f1
  2688  001D5C  C0BD  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2689  001D60  C0BE  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2690  001D64  C0BF  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2691  001D68  ECA4  F013         	call	___fltol	;wreg free
  2692  001D6C  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2693  001D6E  EFC4  F00E         	goto	u4270
  2694  001D72  504C               	movf	(?___fltol+1)^0,w,c
  2695  001D74  E107               	bnz	u4271
  2696  001D76  0E02               	movlw	2
  2697  001D78  5C4B               	subwf	?___fltol^0,w,c
  2698  001D7A  B0D8               	btfsc	status,0,c
  2699  001D7C  EFC2  F00E         	goto	u4271
  2700  001D80  EFC4  F00E         	goto	u4270
  2701  001D84                     u4271:
  2702  001D84  EFC7  F00E         	goto	l4697
  2703  001D88                     u4270:
  2704  001D88                     
  2705                           ;adc.c: 64:     {;adc.c: 65:         LATCbits.LATC1 = 0;
  2706  001D88  928B               	bcf	139,1,c	;volatile
  2707                           
  2708                           ;adc.c: 66:     }
  2709  001D8A  EFE0  F00E         	goto	l39
  2710  001D8E                     l4697:
  2711  001D8E  C0BC  F04B         	movff	appADC@lm35val,___fltol@f1
  2712  001D92  C0BD  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2713  001D96  C0BE  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2714  001D9A  C0BF  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2715  001D9E  ECA4  F013         	call	___fltol	;wreg free
  2716  001DA2  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2717  001DA4  EFDD  F00E         	goto	u4281
  2718  001DA8  504C               	movf	(?___fltol+1)^0,w,c
  2719  001DAA  E109               	bnz	u4280
  2720  001DAC  0E07               	movlw	7
  2721  001DAE  5C4B               	subwf	?___fltol^0,w,c
  2722  001DB0  A0D8               	btfss	status,0,c
  2723  001DB2  EFDD  F00E         	goto	u4281
  2724  001DB6  EFDF  F00E         	goto	u4280
  2725  001DBA                     u4281:
  2726  001DBA  EFE0  F00E         	goto	l39
  2727  001DBE                     u4280:
  2728  001DBE                     
  2729                           ;adc.c: 68:     {;adc.c: 69:         LATCbits.LATC1 = 1;
  2730  001DBE  828B               	bsf	139,1,c	;volatile
  2731  001DC0                     l39:
  2732  001DC0  0012               	return		;funcret
  2733  001DC2                     __end_of_appADC:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _adcGetValue *****************
  2737 ;; Defined at:
  2738 ;;		line 44 in file "adc.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  PinADC          1    wreg     unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  PinADC          1    9[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  2    6[COMRAM] unsigned short 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2752 ;;      Params:         2       0       0       0       0       0       0       0       0
  2753 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2754 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2755 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2756 ;;Total ram usage:        4 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    2
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_appADC
  2763 ;;		_appBat
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text14
  2768  003696                     __ptext14:
  2769                           	callstack 0
  2770  003696                     _adcGetValue:
  2771                           	callstack 26
  2772                           
  2773                           ;incstack = 0
  2774                           ;adcGetValue@PinADC stored from wreg
  2775  003696  6E0A               	movwf	adcGetValue@PinADC^0,c
  2776  003698                     
  2777                           ;adc.c: 44: uint16_t adcGetValue(uint8_t PinADC);adc.c: 45: {;adc.c: 46:     ADCON0bits.
      +                          CHS = PinADC;
  2778  003698  C00A  F009         	movff	adcGetValue@PinADC,??_adcGetValue
  2779  00369C  4609               	rlncf	??_adcGetValue^0,f,c
  2780  00369E  4609               	rlncf	??_adcGetValue^0,f,c
  2781  0036A0  50C2               	movf	194,w,c	;volatile
  2782  0036A2  1809               	xorwf	??_adcGetValue^0,w,c
  2783  0036A4  0BC3               	andlw	-61
  2784  0036A6  1809               	xorwf	??_adcGetValue^0,w,c
  2785  0036A8  6EC2               	movwf	194,c	;volatile
  2786  0036AA                     
  2787                           ;adc.c: 47:     _delay((unsigned long)((2)*(12000000/4000.0)));
  2788  0036AA  0E08               	movlw	8
  2789  0036AC  6E09               	movwf	??_adcGetValue^0,c
  2790  0036AE  0ECA               	movlw	202
  2791  0036B0                     u4547:
  2792  0036B0  2EE8               	decfsz	wreg,f,c
  2793  0036B2  D7FE               	bra	u4547
  2794  0036B4  2E09               	decfsz	??_adcGetValue^0,f,c
  2795  0036B6  D7FC               	bra	u4547
  2796  0036B8                     
  2797                           ;adc.c: 48:     GO_nDONE = 1;
  2798  0036B8  82C2               	bsf	4034,1,c	;volatile
  2799  0036BA                     l30:
  2800                           
  2801                           ;adc.c: 49:     while(ADCON0bits.GO_DONE)
  2802  0036BA  B2C2               	btfsc	194,1,c	;volatile
  2803  0036BC  EF62  F01B         	goto	u2821
  2804  0036C0  EF64  F01B         	goto	u2820
  2805  0036C4                     u2821:
  2806  0036C4  EF5D  F01B         	goto	l30
  2807  0036C8                     u2820:
  2808  0036C8                     
  2809                           ;adc.c: 52:     return ADRES;
  2810  0036C8  CFC3 F007          	movff	4035,?_adcGetValue	;volatile
  2811  0036CC  CFC4 F008          	movff	4036,?_adcGetValue+1	;volatile
  2812  0036D0  0012               	return		;funcret
  2813  0036D2                     __end_of_adcGetValue:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function ___xxtofl *****************
  2817 ;; Defined at:
  2818 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  sign            1    wreg     unsigned char 
  2821 ;;  val             4   10[COMRAM] long 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  sign            1   18[COMRAM] unsigned char 
  2824 ;;  arg             4   20[COMRAM] unsigned long 
  2825 ;;  exp             1   19[COMRAM] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  4   10[COMRAM] unsigned char 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2835 ;;      Params:         4       0       0       0       0       0       0       0       0
  2836 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2837 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2838 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2839 ;;Total ram usage:       14 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    2
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_appADC
  2846 ;;		_appBat
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text15
  2851  001A60                     __ptext15:
  2852                           	callstack 0
  2853  001A60                     ___xxtofl:
  2854                           	callstack 26
  2855                           
  2856                           ;incstack = 0
  2857                           ;___xxtofl@sign stored from wreg
  2858  001A60  6E13               	movwf	___xxtofl@sign^0,c
  2859  001A62  5013               	movf	___xxtofl@sign^0,w,c
  2860  001A64  B4D8               	btfsc	status,2,c
  2861  001A66  EF37  F00D         	goto	u3691
  2862  001A6A  EF39  F00D         	goto	u3690
  2863  001A6E                     u3691:
  2864  001A6E  EF5B  F00D         	goto	l1099
  2865  001A72                     u3690:
  2866  001A72  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  2867  001A74  EF40  F00D         	goto	u3700
  2868  001A78  EF3E  F00D         	goto	u3701
  2869  001A7C                     u3701:
  2870  001A7C  EF5B  F00D         	goto	l1099
  2871  001A80                     u3700:
  2872  001A80  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  2873  001A84  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  2874  001A88  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  2875  001A8C  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  2876  001A90  1E0F               	comf	??___xxtofl^0,f,c
  2877  001A92  1E10               	comf	(??___xxtofl+1)^0,f,c
  2878  001A94  1E11               	comf	(??___xxtofl+2)^0,f,c
  2879  001A96  1E12               	comf	(??___xxtofl+3)^0,f,c
  2880  001A98  2A0F               	incf	??___xxtofl^0,f,c
  2881  001A9A  0E00               	movlw	0
  2882  001A9C  2210               	addwfc	(??___xxtofl+1)^0,f,c
  2883  001A9E  2211               	addwfc	(??___xxtofl+2)^0,f,c
  2884  001AA0  2212               	addwfc	(??___xxtofl+3)^0,f,c
  2885  001AA2  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  2886  001AA6  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  2887  001AAA  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  2888  001AAE  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  2889  001AB2  EF63  F00D         	goto	l3995
  2890  001AB6                     l1099:
  2891  001AB6  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  2892  001ABA  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2893  001ABE  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2894  001AC2  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2895  001AC6                     l3995:
  2896  001AC6  500B               	movf	___xxtofl@val^0,w,c
  2897  001AC8  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  2898  001ACA  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  2899  001ACC  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  2900  001ACE  A4D8               	btfss	status,2,c
  2901  001AD0  EF6C  F00D         	goto	u3711
  2902  001AD4  EF6E  F00D         	goto	u3710
  2903  001AD8                     u3711:
  2904  001AD8  EF78  F00D         	goto	l4001
  2905  001ADC                     u3710:
  2906  001ADC  0E00               	movlw	0
  2907  001ADE  6E0B               	movwf	?___xxtofl^0,c
  2908  001AE0  0E00               	movlw	0
  2909  001AE2  6E0C               	movwf	(?___xxtofl+1)^0,c
  2910  001AE4  0E00               	movlw	0
  2911  001AE6  6E0D               	movwf	(?___xxtofl+2)^0,c
  2912  001AE8  0E00               	movlw	0
  2913  001AEA  6E0E               	movwf	(?___xxtofl+3)^0,c
  2914  001AEC  EF09  F00E         	goto	l1102
  2915  001AF0                     l4001:
  2916  001AF0  0E96               	movlw	150
  2917  001AF2  6E14               	movwf	___xxtofl@exp^0,c
  2918  001AF4  EF82  F00D         	goto	l4005
  2919  001AF8                     l4003:
  2920  001AF8  2A14               	incf	___xxtofl@exp^0,f,c
  2921  001AFA  90D8               	bcf	status,0,c
  2922  001AFC  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2923  001AFE  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2924  001B00  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2925  001B02  3215               	rrcf	___xxtofl@arg^0,f,c
  2926  001B04                     l4005:
  2927  001B04  0E00               	movlw	0
  2928  001B06  1415               	andwf	___xxtofl@arg^0,w,c
  2929  001B08  6E0F               	movwf	??___xxtofl^0,c
  2930  001B0A  0E00               	movlw	0
  2931  001B0C  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2932  001B0E  6E10               	movwf	(??___xxtofl+1)^0,c
  2933  001B10  0E00               	movlw	0
  2934  001B12  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2935  001B14  6E11               	movwf	(??___xxtofl+2)^0,c
  2936  001B16  0EFE               	movlw	254
  2937  001B18  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2938  001B1A  6E12               	movwf	(??___xxtofl+3)^0,c
  2939  001B1C  500F               	movf	??___xxtofl^0,w,c
  2940  001B1E  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2941  001B20  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2942  001B22  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2943  001B24  A4D8               	btfss	status,2,c
  2944  001B26  EF97  F00D         	goto	u3721
  2945  001B2A  EF99  F00D         	goto	u3720
  2946  001B2E                     u3721:
  2947  001B2E  EF7C  F00D         	goto	l4003
  2948  001B32                     u3720:
  2949  001B32  EFA7  F00D         	goto	l1106
  2950  001B36                     l4007:
  2951  001B36  2A14               	incf	___xxtofl@exp^0,f,c
  2952  001B38  0E01               	movlw	1
  2953  001B3A  2615               	addwf	___xxtofl@arg^0,f,c
  2954  001B3C  0E00               	movlw	0
  2955  001B3E  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  2956  001B40  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  2957  001B42  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  2958  001B44  90D8               	bcf	status,0,c
  2959  001B46  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2960  001B48  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2961  001B4A  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2962  001B4C  3215               	rrcf	___xxtofl@arg^0,f,c
  2963  001B4E                     l1106:
  2964  001B4E  0E00               	movlw	0
  2965  001B50  1415               	andwf	___xxtofl@arg^0,w,c
  2966  001B52  6E0F               	movwf	??___xxtofl^0,c
  2967  001B54  0E00               	movlw	0
  2968  001B56  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2969  001B58  6E10               	movwf	(??___xxtofl+1)^0,c
  2970  001B5A  0E00               	movlw	0
  2971  001B5C  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2972  001B5E  6E11               	movwf	(??___xxtofl+2)^0,c
  2973  001B60  0EFF               	movlw	255
  2974  001B62  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2975  001B64  6E12               	movwf	(??___xxtofl+3)^0,c
  2976  001B66  500F               	movf	??___xxtofl^0,w,c
  2977  001B68  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2978  001B6A  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2979  001B6C  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2980  001B6E  A4D8               	btfss	status,2,c
  2981  001B70  EFBC  F00D         	goto	u3731
  2982  001B74  EFBE  F00D         	goto	u3730
  2983  001B78                     u3731:
  2984  001B78  EF9B  F00D         	goto	l4007
  2985  001B7C                     u3730:
  2986  001B7C  EFC6  F00D         	goto	l4015
  2987  001B80                     l4013:
  2988  001B80  0614               	decf	___xxtofl@exp^0,f,c
  2989  001B82  90D8               	bcf	status,0,c
  2990  001B84  3615               	rlcf	___xxtofl@arg^0,f,c
  2991  001B86  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  2992  001B88  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  2993  001B8A  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  2994  001B8C                     l4015:
  2995  001B8C  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  2996  001B8E  EFCB  F00D         	goto	u3741
  2997  001B92  EFCD  F00D         	goto	u3740
  2998  001B96                     u3741:
  2999  001B96  EFD5  F00D         	goto	l1113
  3000  001B9A                     u3740:
  3001  001B9A  0E02               	movlw	2
  3002  001B9C  6014               	cpfslt	___xxtofl@exp^0,c
  3003  001B9E  EFD3  F00D         	goto	u3751
  3004  001BA2  EFD5  F00D         	goto	u3750
  3005  001BA6                     u3751:
  3006  001BA6  EFC0  F00D         	goto	l4013
  3007  001BAA                     u3750:
  3008  001BAA                     l1113:
  3009  001BAA  B014               	btfsc	___xxtofl@exp^0,0,c
  3010  001BAC  EFDA  F00D         	goto	u3761
  3011  001BB0  EFDC  F00D         	goto	u3760
  3012  001BB4                     u3761:
  3013  001BB4  EFDD  F00D         	goto	l4021
  3014  001BB8                     u3760:
  3015  001BB8  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  3016  001BBA                     l4021:
  3017  001BBA  90D8               	bcf	status,0,c
  3018  001BBC  3214               	rrcf	___xxtofl@exp^0,f,c
  3019  001BBE  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  3020  001BC2  6A10               	clrf	(??___xxtofl+1)^0,c
  3021  001BC4  6A11               	clrf	(??___xxtofl+2)^0,c
  3022  001BC6  6A12               	clrf	(??___xxtofl+3)^0,c
  3023  001BC8  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  3024  001BCC  6A11               	clrf	(??___xxtofl+2)^0,c
  3025  001BCE  6A10               	clrf	(??___xxtofl+1)^0,c
  3026  001BD0  6A0F               	clrf	??___xxtofl^0,c
  3027  001BD2  500F               	movf	??___xxtofl^0,w,c
  3028  001BD4  1215               	iorwf	___xxtofl@arg^0,f,c
  3029  001BD6  5010               	movf	(??___xxtofl+1)^0,w,c
  3030  001BD8  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  3031  001BDA  5011               	movf	(??___xxtofl+2)^0,w,c
  3032  001BDC  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  3033  001BDE  5012               	movf	(??___xxtofl+3)^0,w,c
  3034  001BE0  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  3035  001BE2  5013               	movf	___xxtofl@sign^0,w,c
  3036  001BE4  B4D8               	btfsc	status,2,c
  3037  001BE6  EFF7  F00D         	goto	u3771
  3038  001BEA  EFF9  F00D         	goto	u3770
  3039  001BEE                     u3771:
  3040  001BEE  EF01  F00E         	goto	l4031
  3041  001BF2                     u3770:
  3042  001BF2  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  3043  001BF4  EF00  F00E         	goto	u3780
  3044  001BF8  EFFE  F00D         	goto	u3781
  3045  001BFC                     u3781:
  3046  001BFC  EF01  F00E         	goto	l4031
  3047  001C00                     u3780:
  3048  001C00  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  3049  001C02                     l4031:
  3050  001C02  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  3051  001C06  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  3052  001C0A  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  3053  001C0E  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  3054  001C12                     l1102:
  3055  001C12  0012               	return		;funcret
  3056  001C14                     __end_of___xxtofl:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function ___fltol *****************
  3060 ;; Defined at:
  3061 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  f1              4   74[COMRAM] unsigned char 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  exp1            1    1[BANK0 ] unsigned char 
  3066 ;;  sign1           1    0[BANK0 ] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  4   74[COMRAM] long 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3076 ;;      Params:         4       0       0       0       0       0       0       0       0
  3077 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3078 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3079 ;;      Totals:         8       2       0       0       0       0       0       0       0
  3080 ;;Total ram usage:       10 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    2
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_appADC
  3087 ;;		_appBat
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text16
  3092  002748                     __ptext16:
  3093                           	callstack 0
  3094  002748                     ___fltol:
  3095                           	callstack 26
  3096  002748  344D               	rlcf	(___fltol@f1+2)^0,w,c
  3097  00274A  344E               	rlcf	(___fltol@f1+3)^0,w,c
  3098  00274C  0100               	movlb	0	; () banked
  3099  00274E  6F97               	movwf	___fltol@exp1& (0+255),b
  3100  002750  5197               	movf	___fltol@exp1& (0+255),w,b
  3101  002752  A4D8               	btfss	status,2,c
  3102  002754  EFAE  F013         	goto	u4201
  3103  002758  EFB0  F013         	goto	u4200
  3104  00275C                     u4201:
  3105  00275C  EFBA  F013         	goto	l4647
  3106  002760                     u4200:
  3107  002760                     l4643:
  3108                           
  3109                           ; BSR set to: 0
  3110  002760  0E00               	movlw	0
  3111  002762  6E4B               	movwf	?___fltol^0,c
  3112  002764  0E00               	movlw	0
  3113  002766  6E4C               	movwf	(?___fltol+1)^0,c
  3114  002768  0E00               	movlw	0
  3115  00276A  6E4D               	movwf	(?___fltol+2)^0,c
  3116  00276C  0E00               	movlw	0
  3117  00276E  6E4E               	movwf	(?___fltol+3)^0,c
  3118  002770  EF27  F014         	goto	l741
  3119  002774                     l4647:
  3120                           
  3121                           ; BSR set to: 0
  3122  002774  C04B  F04F         	movff	___fltol@f1,??___fltol
  3123  002778  C04C  F050         	movff	___fltol@f1+1,??___fltol+1
  3124  00277C  C04D  F051         	movff	___fltol@f1+2,??___fltol+2
  3125  002780  C04E  F052         	movff	___fltol@f1+3,??___fltol+3
  3126  002784  0E20               	movlw	32
  3127  002786  EFCA  F013         	goto	u4210
  3128  00278A                     u4215:
  3129  00278A  90D8               	bcf	status,0,c
  3130  00278C  3252               	rrcf	(??___fltol+3)^0,f,c
  3131  00278E  3251               	rrcf	(??___fltol+2)^0,f,c
  3132  002790  3250               	rrcf	(??___fltol+1)^0,f,c
  3133  002792  324F               	rrcf	??___fltol^0,f,c
  3134  002794                     u4210:
  3135  002794  2EE8               	decfsz	wreg,f,c
  3136  002796  EFC5  F013         	goto	u4215
  3137  00279A  504F               	movf	??___fltol^0,w,c
  3138  00279C  6F96               	movwf	___fltol@sign1& (0+255),b
  3139  00279E                     
  3140                           ; BSR set to: 0
  3141  00279E  8E4D               	bsf	(___fltol@f1+2)^0,7,c
  3142  0027A0                     
  3143                           ; BSR set to: 0
  3144  0027A0  0EFF               	movlw	255
  3145  0027A2  164B               	andwf	___fltol@f1^0,f,c
  3146  0027A4  0EFF               	movlw	255
  3147  0027A6  164C               	andwf	(___fltol@f1+1)^0,f,c
  3148  0027A8  0EFF               	movlw	255
  3149  0027AA  164D               	andwf	(___fltol@f1+2)^0,f,c
  3150  0027AC  0E00               	movlw	0
  3151  0027AE  164E               	andwf	(___fltol@f1+3)^0,f,c
  3152  0027B0                     
  3153                           ; BSR set to: 0
  3154  0027B0  0E96               	movlw	150
  3155  0027B2  5F97               	subwf	___fltol@exp1& (0+255),f,b
  3156  0027B4                     
  3157                           ; BSR set to: 0
  3158  0027B4  BF97               	btfsc	___fltol@exp1& (0+255),7,b
  3159  0027B6  EFE1  F013         	goto	u4220
  3160  0027BA  EFDF  F013         	goto	u4221
  3161  0027BE                     u4221:
  3162  0027BE  EFF7  F013         	goto	l4667
  3163  0027C2                     u4220:
  3164  0027C2                     
  3165                           ; BSR set to: 0
  3166  0027C2  5197               	movf	___fltol@exp1& (0+255),w,b
  3167  0027C4  0A80               	xorlw	128
  3168  0027C6  0F97               	addlw	151
  3169  0027C8  B0D8               	btfsc	status,0,c
  3170  0027CA  EFE9  F013         	goto	u4231
  3171  0027CE  EFEB  F013         	goto	u4230
  3172  0027D2                     u4231:
  3173  0027D2  EFED  F013         	goto	l4663
  3174  0027D6                     u4230:
  3175  0027D6  EFB0  F013         	goto	l4643
  3176  0027DA                     l4663:
  3177                           
  3178                           ; BSR set to: 0
  3179  0027DA  90D8               	bcf	status,0,c
  3180  0027DC  324E               	rrcf	(___fltol@f1+3)^0,f,c
  3181  0027DE  324D               	rrcf	(___fltol@f1+2)^0,f,c
  3182  0027E0  324C               	rrcf	(___fltol@f1+1)^0,f,c
  3183  0027E2  324B               	rrcf	___fltol@f1^0,f,c
  3184  0027E4                     
  3185                           ; BSR set to: 0
  3186  0027E4  3F97               	incfsz	___fltol@exp1& (0+255),f,b
  3187  0027E6  EFED  F013         	goto	l4663
  3188  0027EA  EF0F  F014         	goto	l4677
  3189  0027EE                     l4667:
  3190                           
  3191                           ; BSR set to: 0
  3192  0027EE  0E1F               	movlw	31
  3193  0027F0  6597               	cpfsgt	___fltol@exp1& (0+255),b
  3194  0027F2  EFFD  F013         	goto	u4241
  3195  0027F6  EFFF  F013         	goto	u4240
  3196  0027FA                     u4241:
  3197  0027FA  EF07  F014         	goto	l4675
  3198  0027FE                     u4240:
  3199  0027FE  EFB0  F013         	goto	l4643
  3200  002802                     l4673:
  3201                           
  3202                           ; BSR set to: 0
  3203  002802  90D8               	bcf	status,0,c
  3204  002804  364B               	rlcf	___fltol@f1^0,f,c
  3205  002806  364C               	rlcf	(___fltol@f1+1)^0,f,c
  3206  002808  364D               	rlcf	(___fltol@f1+2)^0,f,c
  3207  00280A  364E               	rlcf	(___fltol@f1+3)^0,f,c
  3208  00280C  0797               	decf	___fltol@exp1& (0+255),f,b
  3209  00280E                     l4675:
  3210                           
  3211                           ; BSR set to: 0
  3212  00280E  5197               	movf	___fltol@exp1& (0+255),w,b
  3213  002810  A4D8               	btfss	status,2,c
  3214  002812  EF0D  F014         	goto	u4251
  3215  002816  EF0F  F014         	goto	u4250
  3216  00281A                     u4251:
  3217  00281A  EF01  F014         	goto	l4673
  3218  00281E                     u4250:
  3219  00281E                     l4677:
  3220                           
  3221                           ; BSR set to: 0
  3222  00281E  5196               	movf	___fltol@sign1& (0+255),w,b
  3223  002820  B4D8               	btfsc	status,2,c
  3224  002822  EF15  F014         	goto	u4261
  3225  002826  EF17  F014         	goto	u4260
  3226  00282A                     u4261:
  3227  00282A  EF1F  F014         	goto	l4681
  3228  00282E                     u4260:
  3229  00282E                     
  3230                           ; BSR set to: 0
  3231  00282E  1E4E               	comf	(___fltol@f1+3)^0,f,c
  3232  002830  1E4D               	comf	(___fltol@f1+2)^0,f,c
  3233  002832  1E4C               	comf	(___fltol@f1+1)^0,f,c
  3234  002834  6C4B               	negf	___fltol@f1^0,c
  3235  002836  0E00               	movlw	0
  3236  002838  224C               	addwfc	(___fltol@f1+1)^0,f,c
  3237  00283A  224D               	addwfc	(___fltol@f1+2)^0,f,c
  3238  00283C  224E               	addwfc	(___fltol@f1+3)^0,f,c
  3239  00283E                     l4681:
  3240                           
  3241                           ; BSR set to: 0
  3242  00283E  C04B  F04B         	movff	___fltol@f1,?___fltol
  3243  002842  C04C  F04C         	movff	___fltol@f1+1,?___fltol+1
  3244  002846  C04D  F04D         	movff	___fltol@f1+2,?___fltol+2
  3245  00284A  C04E  F04E         	movff	___fltol@f1+3,?___fltol+3
  3246  00284E                     l741:
  3247                           
  3248                           ; BSR set to: 0
  3249  00284E  0012               	return		;funcret
  3250  002850                     __end_of___fltol:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function ___flmul *****************
  3254 ;; Defined at:
  3255 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  b               4   24[COMRAM] long 
  3258 ;;  a               4   28[COMRAM] long 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  prod            4   43[COMRAM] struct .
  3261 ;;  grs             4   37[COMRAM] unsigned long 
  3262 ;;  temp            2   47[COMRAM] struct .
  3263 ;;  bexp            1   42[COMRAM] unsigned char 
  3264 ;;  aexp            1   41[COMRAM] unsigned char 
  3265 ;;  sign            1   36[COMRAM] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  4   24[COMRAM] unsigned char 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, prodl, prodh
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3275 ;;      Params:         8       0       0       0       0       0       0       0       0
  3276 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3277 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3278 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3279 ;;Total ram usage:       25 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    2
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_appADC
  3286 ;;		_appBat
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text17
  3291  000880                     __ptext17:
  3292                           	callstack 0
  3293  000880                     ___flmul:
  3294                           	callstack 26
  3295  000880  501C               	movf	(___flmul@b+3)^0,w,c
  3296  000882  0B80               	andlw	128
  3297  000884  6E25               	movwf	___flmul@sign^0,c
  3298  000886  501C               	movf	(___flmul@b+3)^0,w,c
  3299  000888  241C               	addwf	(___flmul@b+3)^0,w,c
  3300  00088A  6E2B               	movwf	___flmul@bexp^0,c
  3301  00088C  AE1B               	btfss	(___flmul@b+2)^0,7,c
  3302  00088E  EF4B  F004         	goto	u3371
  3303  000892  EF4D  F004         	goto	u3370
  3304  000896                     u3371:
  3305  000896  EF4E  F004         	goto	l3785
  3306  00089A                     u3370:
  3307  00089A  802B               	bsf	___flmul@bexp^0,0,c
  3308  00089C                     l3785:
  3309  00089C  502B               	movf	___flmul@bexp^0,w,c
  3310  00089E  B4D8               	btfsc	status,2,c
  3311  0008A0  EF54  F004         	goto	u3381
  3312  0008A4  EF56  F004         	goto	u3380
  3313  0008A8                     u3381:
  3314  0008A8  EF69  F004         	goto	l3793
  3315  0008AC                     u3380:
  3316  0008AC  282B               	incf	___flmul@bexp^0,w,c
  3317  0008AE  A4D8               	btfss	status,2,c
  3318  0008B0  EF5C  F004         	goto	u3391
  3319  0008B4  EF5E  F004         	goto	u3390
  3320  0008B8                     u3391:
  3321  0008B8  EF66  F004         	goto	l3791
  3322  0008BC                     u3390:
  3323  0008BC  0E00               	movlw	0
  3324  0008BE  6E19               	movwf	___flmul@b^0,c
  3325  0008C0  0E00               	movlw	0
  3326  0008C2  6E1A               	movwf	(___flmul@b+1)^0,c
  3327  0008C4  0E00               	movlw	0
  3328  0008C6  6E1B               	movwf	(___flmul@b+2)^0,c
  3329  0008C8  0E00               	movlw	0
  3330  0008CA  6E1C               	movwf	(___flmul@b+3)^0,c
  3331  0008CC                     l3791:
  3332  0008CC  8E1B               	bsf	(___flmul@b+2)^0,7,c
  3333  0008CE  EF71  F004         	goto	l3795
  3334  0008D2                     l3793:
  3335  0008D2  0E00               	movlw	0
  3336  0008D4  6E19               	movwf	___flmul@b^0,c
  3337  0008D6  0E00               	movlw	0
  3338  0008D8  6E1A               	movwf	(___flmul@b+1)^0,c
  3339  0008DA  0E00               	movlw	0
  3340  0008DC  6E1B               	movwf	(___flmul@b+2)^0,c
  3341  0008DE  0E00               	movlw	0
  3342  0008E0  6E1C               	movwf	(___flmul@b+3)^0,c
  3343  0008E2                     l3795:
  3344  0008E2  5020               	movf	(___flmul@a+3)^0,w,c
  3345  0008E4  0B80               	andlw	128
  3346  0008E6  1A25               	xorwf	___flmul@sign^0,f,c
  3347  0008E8  5020               	movf	(___flmul@a+3)^0,w,c
  3348  0008EA  2420               	addwf	(___flmul@a+3)^0,w,c
  3349  0008EC  6E2A               	movwf	___flmul@aexp^0,c
  3350  0008EE  AE1F               	btfss	(___flmul@a+2)^0,7,c
  3351  0008F0  EF7C  F004         	goto	u3401
  3352  0008F4  EF7E  F004         	goto	u3400
  3353  0008F8                     u3401:
  3354  0008F8  EF7F  F004         	goto	l3803
  3355  0008FC                     u3400:
  3356  0008FC  802A               	bsf	___flmul@aexp^0,0,c
  3357  0008FE                     l3803:
  3358  0008FE  502A               	movf	___flmul@aexp^0,w,c
  3359  000900  B4D8               	btfsc	status,2,c
  3360  000902  EF85  F004         	goto	u3411
  3361  000906  EF87  F004         	goto	u3410
  3362  00090A                     u3411:
  3363  00090A  EF9A  F004         	goto	l3811
  3364  00090E                     u3410:
  3365  00090E  282A               	incf	___flmul@aexp^0,w,c
  3366  000910  A4D8               	btfss	status,2,c
  3367  000912  EF8D  F004         	goto	u3421
  3368  000916  EF8F  F004         	goto	u3420
  3369  00091A                     u3421:
  3370  00091A  EF97  F004         	goto	l3809
  3371  00091E                     u3420:
  3372  00091E  0E00               	movlw	0
  3373  000920  6E1D               	movwf	___flmul@a^0,c
  3374  000922  0E00               	movlw	0
  3375  000924  6E1E               	movwf	(___flmul@a+1)^0,c
  3376  000926  0E00               	movlw	0
  3377  000928  6E1F               	movwf	(___flmul@a+2)^0,c
  3378  00092A  0E00               	movlw	0
  3379  00092C  6E20               	movwf	(___flmul@a+3)^0,c
  3380  00092E                     l3809:
  3381  00092E  8E1F               	bsf	(___flmul@a+2)^0,7,c
  3382  000930  EFA2  F004         	goto	l1058
  3383  000934                     l3811:
  3384  000934  0E00               	movlw	0
  3385  000936  6E1D               	movwf	___flmul@a^0,c
  3386  000938  0E00               	movlw	0
  3387  00093A  6E1E               	movwf	(___flmul@a+1)^0,c
  3388  00093C  0E00               	movlw	0
  3389  00093E  6E1F               	movwf	(___flmul@a+2)^0,c
  3390  000940  0E00               	movlw	0
  3391  000942  6E20               	movwf	(___flmul@a+3)^0,c
  3392  000944                     l1058:
  3393  000944  502A               	movf	___flmul@aexp^0,w,c
  3394  000946  B4D8               	btfsc	status,2,c
  3395  000948  EFA8  F004         	goto	u3431
  3396  00094C  EFAA  F004         	goto	u3430
  3397  000950                     u3431:
  3398  000950  EFB2  F004         	goto	l3815
  3399  000954                     u3430:
  3400  000954  502B               	movf	___flmul@bexp^0,w,c
  3401  000956  A4D8               	btfss	status,2,c
  3402  000958  EFB0  F004         	goto	u3441
  3403  00095C  EFB2  F004         	goto	u3440
  3404  000960                     u3441:
  3405  000960  EFBC  F004         	goto	l3819
  3406  000964                     u3440:
  3407  000964                     l3815:
  3408  000964  0E00               	movlw	0
  3409  000966  6E19               	movwf	?___flmul^0,c
  3410  000968  0E00               	movlw	0
  3411  00096A  6E1A               	movwf	(?___flmul+1)^0,c
  3412  00096C  0E00               	movlw	0
  3413  00096E  6E1B               	movwf	(?___flmul+2)^0,c
  3414  000970  0E00               	movlw	0
  3415  000972  6E1C               	movwf	(?___flmul+3)^0,c
  3416  000974  EF54  F006         	goto	l1062
  3417  000978                     l3819:
  3418  000978  501F               	movf	(___flmul@a+2)^0,w,c
  3419  00097A  0219               	mulwf	___flmul@b^0,c
  3420  00097C  CFF3 F030          	movff	prodl,___flmul@temp
  3421  000980  CFF4 F031          	movff	prodh,___flmul@temp+1
  3422  000984  5030               	movf	___flmul@temp^0,w,c
  3423  000986  6E26               	movwf	___flmul@grs^0,c
  3424  000988  6A27               	clrf	(___flmul@grs+1)^0,c
  3425  00098A  6A28               	clrf	(___flmul@grs+2)^0,c
  3426  00098C  6A29               	clrf	(___flmul@grs+3)^0,c
  3427  00098E  5031               	movf	(___flmul@temp+1)^0,w,c
  3428  000990  6E2C               	movwf	___flmul@prod^0,c
  3429  000992  6A2D               	clrf	(___flmul@prod+1)^0,c
  3430  000994  6A2E               	clrf	(___flmul@prod+2)^0,c
  3431  000996  6A2F               	clrf	(___flmul@prod+3)^0,c
  3432  000998  501E               	movf	(___flmul@a+1)^0,w,c
  3433  00099A  021A               	mulwf	(___flmul@b+1)^0,c
  3434  00099C  CFF3 F030          	movff	prodl,___flmul@temp
  3435  0009A0  CFF4 F031          	movff	prodh,___flmul@temp+1
  3436  0009A4  5030               	movf	___flmul@temp^0,w,c
  3437  0009A6  2626               	addwf	___flmul@grs^0,f,c
  3438  0009A8  0E00               	movlw	0
  3439  0009AA  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3440  0009AC  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3441  0009AE  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3442  0009B0  5031               	movf	(___flmul@temp+1)^0,w,c
  3443  0009B2  262C               	addwf	___flmul@prod^0,f,c
  3444  0009B4  0E00               	movlw	0
  3445  0009B6  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3446  0009B8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3447  0009BA  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3448  0009BC  501D               	movf	___flmul@a^0,w,c
  3449  0009BE  021B               	mulwf	(___flmul@b+2)^0,c
  3450  0009C0  CFF3 F030          	movff	prodl,___flmul@temp
  3451  0009C4  CFF4 F031          	movff	prodh,___flmul@temp+1
  3452  0009C8  5030               	movf	___flmul@temp^0,w,c
  3453  0009CA  2626               	addwf	___flmul@grs^0,f,c
  3454  0009CC  0E00               	movlw	0
  3455  0009CE  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3456  0009D0  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3457  0009D2  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3458  0009D4  5031               	movf	(___flmul@temp+1)^0,w,c
  3459  0009D6  262C               	addwf	___flmul@prod^0,f,c
  3460  0009D8  0E00               	movlw	0
  3461  0009DA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3462  0009DC  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3463  0009DE  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3464  0009E0  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3465  0009E4  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3466  0009E8  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3467  0009EC  6A26               	clrf	___flmul@grs^0,c
  3468  0009EE  501D               	movf	___flmul@a^0,w,c
  3469  0009F0  021A               	mulwf	(___flmul@b+1)^0,c
  3470  0009F2  CFF3 F030          	movff	prodl,___flmul@temp
  3471  0009F6  CFF4 F031          	movff	prodh,___flmul@temp+1
  3472  0009FA  5030               	movf	___flmul@temp^0,w,c
  3473  0009FC  2626               	addwf	___flmul@grs^0,f,c
  3474  0009FE  5031               	movf	(___flmul@temp+1)^0,w,c
  3475  000A00  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3476  000A02  0E00               	movlw	0
  3477  000A04  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3478  000A06  0E00               	movlw	0
  3479  000A08  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3480  000A0A  501E               	movf	(___flmul@a+1)^0,w,c
  3481  000A0C  0219               	mulwf	___flmul@b^0,c
  3482  000A0E  CFF3 F030          	movff	prodl,___flmul@temp
  3483  000A12  CFF4 F031          	movff	prodh,___flmul@temp+1
  3484  000A16  5030               	movf	___flmul@temp^0,w,c
  3485  000A18  2626               	addwf	___flmul@grs^0,f,c
  3486  000A1A  5031               	movf	(___flmul@temp+1)^0,w,c
  3487  000A1C  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3488  000A1E  0E00               	movlw	0
  3489  000A20  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3490  000A22  0E00               	movlw	0
  3491  000A24  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3492  000A26  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3493  000A2A  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3494  000A2E  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3495  000A32  6A26               	clrf	___flmul@grs^0,c
  3496  000A34  501D               	movf	___flmul@a^0,w,c
  3497  000A36  0219               	mulwf	___flmul@b^0,c
  3498  000A38  CFF3 F030          	movff	prodl,___flmul@temp
  3499  000A3C  CFF4 F031          	movff	prodh,___flmul@temp+1
  3500  000A40  5030               	movf	___flmul@temp^0,w,c
  3501  000A42  2626               	addwf	___flmul@grs^0,f,c
  3502  000A44  5031               	movf	(___flmul@temp+1)^0,w,c
  3503  000A46  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3504  000A48  0E00               	movlw	0
  3505  000A4A  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3506  000A4C  0E00               	movlw	0
  3507  000A4E  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3508  000A50  501F               	movf	(___flmul@a+2)^0,w,c
  3509  000A52  021A               	mulwf	(___flmul@b+1)^0,c
  3510  000A54  CFF3 F030          	movff	prodl,___flmul@temp
  3511  000A58  CFF4 F031          	movff	prodh,___flmul@temp+1
  3512  000A5C  5030               	movf	___flmul@temp^0,w,c
  3513  000A5E  262C               	addwf	___flmul@prod^0,f,c
  3514  000A60  5031               	movf	(___flmul@temp+1)^0,w,c
  3515  000A62  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3516  000A64  0E00               	movlw	0
  3517  000A66  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3518  000A68  0E00               	movlw	0
  3519  000A6A  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3520  000A6C  501E               	movf	(___flmul@a+1)^0,w,c
  3521  000A6E  021B               	mulwf	(___flmul@b+2)^0,c
  3522  000A70  CFF3 F030          	movff	prodl,___flmul@temp
  3523  000A74  CFF4 F031          	movff	prodh,___flmul@temp+1
  3524  000A78  5030               	movf	___flmul@temp^0,w,c
  3525  000A7A  262C               	addwf	___flmul@prod^0,f,c
  3526  000A7C  5031               	movf	(___flmul@temp+1)^0,w,c
  3527  000A7E  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3528  000A80  0E00               	movlw	0
  3529  000A82  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3530  000A84  0E00               	movlw	0
  3531  000A86  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3532  000A88  501F               	movf	(___flmul@a+2)^0,w,c
  3533  000A8A  021B               	mulwf	(___flmul@b+2)^0,c
  3534  000A8C  CFF3 F030          	movff	prodl,___flmul@temp
  3535  000A90  CFF4 F031          	movff	prodh,___flmul@temp+1
  3536  000A94  5030               	movf	___flmul@temp^0,w,c
  3537  000A96  6E21               	movwf	??___flmul^0,c
  3538  000A98  5031               	movf	(___flmul@temp+1)^0,w,c
  3539  000A9A  6E22               	movwf	(??___flmul+1)^0,c
  3540  000A9C  6A23               	clrf	(??___flmul+2)^0,c
  3541  000A9E  6A24               	clrf	(??___flmul+3)^0,c
  3542  000AA0  C023  F024         	movff	??___flmul+2,??___flmul+3
  3543  000AA4  C022  F023         	movff	??___flmul+1,??___flmul+2
  3544  000AA8  C021  F022         	movff	??___flmul,??___flmul+1
  3545  000AAC  6A21               	clrf	??___flmul^0,c
  3546  000AAE  5021               	movf	??___flmul^0,w,c
  3547  000AB0  262C               	addwf	___flmul@prod^0,f,c
  3548  000AB2  5022               	movf	(??___flmul+1)^0,w,c
  3549  000AB4  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3550  000AB6  5023               	movf	(??___flmul+2)^0,w,c
  3551  000AB8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3552  000ABA  5024               	movf	(??___flmul+3)^0,w,c
  3553  000ABC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3554  000ABE  C026  F021         	movff	___flmul@grs,??___flmul
  3555  000AC2  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  3556  000AC6  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  3557  000ACA  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  3558  000ACE  0E19               	movlw	25
  3559  000AD0  EF6F  F005         	goto	u3450
  3560  000AD4                     u3455:
  3561  000AD4  90D8               	bcf	status,0,c
  3562  000AD6  3224               	rrcf	(??___flmul+3)^0,f,c
  3563  000AD8  3223               	rrcf	(??___flmul+2)^0,f,c
  3564  000ADA  3222               	rrcf	(??___flmul+1)^0,f,c
  3565  000ADC  3221               	rrcf	??___flmul^0,f,c
  3566  000ADE                     u3450:
  3567  000ADE  2EE8               	decfsz	wreg,f,c
  3568  000AE0  EF6A  F005         	goto	u3455
  3569  000AE4  5021               	movf	??___flmul^0,w,c
  3570  000AE6  262C               	addwf	___flmul@prod^0,f,c
  3571  000AE8  5022               	movf	(??___flmul+1)^0,w,c
  3572  000AEA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3573  000AEC  5023               	movf	(??___flmul+2)^0,w,c
  3574  000AEE  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3575  000AF0  5024               	movf	(??___flmul+3)^0,w,c
  3576  000AF2  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3577  000AF4  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3578  000AF8  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3579  000AFC  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3580  000B00  6A26               	clrf	___flmul@grs^0,c
  3581  000B02  502A               	movf	___flmul@aexp^0,w,c
  3582  000B04  C02B  F021         	movff	___flmul@bexp,??___flmul
  3583  000B08  6A22               	clrf	(??___flmul+1)^0,c
  3584  000B0A  2621               	addwf	??___flmul^0,f,c
  3585  000B0C  0E00               	movlw	0
  3586  000B0E  2222               	addwfc	(??___flmul+1)^0,f,c
  3587  000B10  0E82               	movlw	130
  3588  000B12  2421               	addwf	??___flmul^0,w,c
  3589  000B14  6E30               	movwf	___flmul@temp^0,c
  3590  000B16  0EFF               	movlw	255
  3591  000B18  2022               	addwfc	(??___flmul+1)^0,w,c
  3592  000B1A  6E31               	movwf	(___flmul@temp+1)^0,c
  3593  000B1C  EFA5  F005         	goto	l3867
  3594  000B20                     l3861:
  3595  000B20  90D8               	bcf	status,0,c
  3596  000B22  362C               	rlcf	___flmul@prod^0,f,c
  3597  000B24  362D               	rlcf	(___flmul@prod+1)^0,f,c
  3598  000B26  362E               	rlcf	(___flmul@prod+2)^0,f,c
  3599  000B28  362F               	rlcf	(___flmul@prod+3)^0,f,c
  3600  000B2A  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3601  000B2C  EF9A  F005         	goto	u3461
  3602  000B30  EF9C  F005         	goto	u3460
  3603  000B34                     u3461:
  3604  000B34  EF9D  F005         	goto	l1065
  3605  000B38                     u3460:
  3606  000B38  802C               	bsf	___flmul@prod^0,0,c
  3607  000B3A                     l1065:
  3608  000B3A  90D8               	bcf	status,0,c
  3609  000B3C  3626               	rlcf	___flmul@grs^0,f,c
  3610  000B3E  3627               	rlcf	(___flmul@grs+1)^0,f,c
  3611  000B40  3628               	rlcf	(___flmul@grs+2)^0,f,c
  3612  000B42  3629               	rlcf	(___flmul@grs+3)^0,f,c
  3613  000B44  0630               	decf	___flmul@temp^0,f,c
  3614  000B46  A0D8               	btfss	status,0,c
  3615  000B48  0631               	decf	(___flmul@temp+1)^0,f,c
  3616  000B4A                     l3867:
  3617  000B4A  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  3618  000B4C  EFAA  F005         	goto	u3471
  3619  000B50  EFAC  F005         	goto	u3470
  3620  000B54                     u3471:
  3621  000B54  EF90  F005         	goto	l3861
  3622  000B58                     u3470:
  3623  000B58  0E00               	movlw	0
  3624  000B5A  6E2A               	movwf	___flmul@aexp^0,c
  3625  000B5C  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3626  000B5E  EFB3  F005         	goto	u3481
  3627  000B62  EFB5  F005         	goto	u3480
  3628  000B66                     u3481:
  3629  000B66  EFD9  F005         	goto	l1067
  3630  000B6A                     u3480:
  3631  000B6A  0EFF               	movlw	255
  3632  000B6C  1426               	andwf	___flmul@grs^0,w,c
  3633  000B6E  6E21               	movwf	??___flmul^0,c
  3634  000B70  0EFF               	movlw	255
  3635  000B72  1427               	andwf	(___flmul@grs+1)^0,w,c
  3636  000B74  6E22               	movwf	(??___flmul+1)^0,c
  3637  000B76  0EFF               	movlw	255
  3638  000B78  1428               	andwf	(___flmul@grs+2)^0,w,c
  3639  000B7A  6E23               	movwf	(??___flmul+2)^0,c
  3640  000B7C  0E7F               	movlw	127
  3641  000B7E  1429               	andwf	(___flmul@grs+3)^0,w,c
  3642  000B80  6E24               	movwf	(??___flmul+3)^0,c
  3643  000B82  5021               	movf	??___flmul^0,w,c
  3644  000B84  1022               	iorwf	(??___flmul+1)^0,w,c
  3645  000B86  1023               	iorwf	(??___flmul+2)^0,w,c
  3646  000B88  1024               	iorwf	(??___flmul+3)^0,w,c
  3647  000B8A  B4D8               	btfsc	status,2,c
  3648  000B8C  EFCA  F005         	goto	u3491
  3649  000B90  EFCC  F005         	goto	u3490
  3650  000B94                     u3491:
  3651  000B94  EFD0  F005         	goto	l1068
  3652  000B98                     u3490:
  3653  000B98                     l3875:
  3654  000B98  0E01               	movlw	1
  3655  000B9A  6E2A               	movwf	___flmul@aexp^0,c
  3656  000B9C  EFD9  F005         	goto	l1067
  3657  000BA0                     l1068:
  3658  000BA0  A02C               	btfss	___flmul@prod^0,0,c
  3659  000BA2  EFD5  F005         	goto	u3501
  3660  000BA6  EFD7  F005         	goto	u3500
  3661  000BAA                     u3501:
  3662  000BAA  EFD9  F005         	goto	l1067
  3663  000BAE                     u3500:
  3664  000BAE  EFCC  F005         	goto	l3875
  3665  000BB2                     l1067:
  3666  000BB2  502A               	movf	___flmul@aexp^0,w,c
  3667  000BB4  B4D8               	btfsc	status,2,c
  3668  000BB6  EFDF  F005         	goto	u3511
  3669  000BBA  EFE1  F005         	goto	u3510
  3670  000BBE                     u3511:
  3671  000BBE  EF05  F006         	goto	l3887
  3672  000BC2                     u3510:
  3673  000BC2  0E01               	movlw	1
  3674  000BC4  262C               	addwf	___flmul@prod^0,f,c
  3675  000BC6  0E00               	movlw	0
  3676  000BC8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3677  000BCA  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3678  000BCC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3679  000BCE  A02F               	btfss	(___flmul@prod+3)^0,0,c
  3680  000BD0  EFEC  F005         	goto	u3521
  3681  000BD4  EFEE  F005         	goto	u3520
  3682  000BD8                     u3521:
  3683  000BD8  EF05  F006         	goto	l3887
  3684  000BDC                     u3520:
  3685  000BDC  C02C  F021         	movff	___flmul@prod,??___flmul
  3686  000BE0  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  3687  000BE4  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  3688  000BE8  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  3689  000BEC  3424               	rlcf	(??___flmul+3)^0,w,c
  3690  000BEE  3224               	rrcf	(??___flmul+3)^0,f,c
  3691  000BF0  3223               	rrcf	(??___flmul+2)^0,f,c
  3692  000BF2  3222               	rrcf	(??___flmul+1)^0,f,c
  3693  000BF4  3221               	rrcf	??___flmul^0,f,c
  3694  000BF6  C021  F02C         	movff	??___flmul,___flmul@prod
  3695  000BFA  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  3696  000BFE  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  3697  000C02  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  3698  000C06  4A30               	infsnz	___flmul@temp^0,f,c
  3699  000C08  2A31               	incf	(___flmul@temp+1)^0,f,c
  3700  000C0A                     l3887:
  3701  000C0A  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3702  000C0C  EF10  F006         	goto	u3531
  3703  000C10  5031               	movf	(___flmul@temp+1)^0,w,c
  3704  000C12  E108               	bnz	u3530
  3705  000C14  2830               	incf	___flmul@temp^0,w,c
  3706  000C16  A0D8               	btfss	status,0,c
  3707  000C18  EF10  F006         	goto	u3531
  3708  000C1C  EF12  F006         	goto	u3530
  3709  000C20                     u3531:
  3710  000C20  EF1C  F006         	goto	l3891
  3711  000C24                     u3530:
  3712  000C24  0E00               	movlw	0
  3713  000C26  6E2C               	movwf	___flmul@prod^0,c
  3714  000C28  0E00               	movlw	0
  3715  000C2A  6E2D               	movwf	(___flmul@prod+1)^0,c
  3716  000C2C  0E80               	movlw	128
  3717  000C2E  6E2E               	movwf	(___flmul@prod+2)^0,c
  3718  000C30  0E7F               	movlw	127
  3719  000C32  6E2F               	movwf	(___flmul@prod+3)^0,c
  3720  000C34  EF4A  F006         	goto	l3903
  3721  000C38                     l3891:
  3722  000C38  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3723  000C3A  EF29  F006         	goto	u3540
  3724  000C3E  5031               	movf	(___flmul@temp+1)^0,w,c
  3725  000C40  E106               	bnz	u3541
  3726  000C42  0430               	decf	___flmul@temp^0,w,c
  3727  000C44  B0D8               	btfsc	status,0,c
  3728  000C46  EF27  F006         	goto	u3541
  3729  000C4A  EF29  F006         	goto	u3540
  3730  000C4E                     u3541:
  3731  000C4E  EF35  F006         	goto	l1075
  3732  000C52                     u3540:
  3733  000C52  0E00               	movlw	0
  3734  000C54  6E2C               	movwf	___flmul@prod^0,c
  3735  000C56  0E00               	movlw	0
  3736  000C58  6E2D               	movwf	(___flmul@prod+1)^0,c
  3737  000C5A  0E00               	movlw	0
  3738  000C5C  6E2E               	movwf	(___flmul@prod+2)^0,c
  3739  000C5E  0E00               	movlw	0
  3740  000C60  6E2F               	movwf	(___flmul@prod+3)^0,c
  3741  000C62  0E00               	movlw	0
  3742  000C64  6E25               	movwf	___flmul@sign^0,c
  3743  000C66  EF4A  F006         	goto	l3903
  3744  000C6A                     l1075:
  3745  000C6A  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  3746  000C6E  0EFF               	movlw	255
  3747  000C70  162C               	andwf	___flmul@prod^0,f,c
  3748  000C72  0EFF               	movlw	255
  3749  000C74  162D               	andwf	(___flmul@prod+1)^0,f,c
  3750  000C76  0E7F               	movlw	127
  3751  000C78  162E               	andwf	(___flmul@prod+2)^0,f,c
  3752  000C7A  0E00               	movlw	0
  3753  000C7C  162F               	andwf	(___flmul@prod+3)^0,f,c
  3754  000C7E  A02B               	btfss	___flmul@bexp^0,0,c
  3755  000C80  EF44  F006         	goto	u3551
  3756  000C84  EF46  F006         	goto	u3550
  3757  000C88                     u3551:
  3758  000C88  EF47  F006         	goto	l3901
  3759  000C8C                     u3550:
  3760  000C8C  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  3761  000C8E                     l3901:
  3762  000C8E  90D8               	bcf	status,0,c
  3763  000C90  302B               	rrcf	___flmul@bexp^0,w,c
  3764  000C92  6E2F               	movwf	(___flmul@prod+3)^0,c
  3765  000C94                     l3903:
  3766  000C94  5025               	movf	___flmul@sign^0,w,c
  3767  000C96  122F               	iorwf	(___flmul@prod+3)^0,f,c
  3768  000C98  C02C  F019         	movff	___flmul@prod,?___flmul
  3769  000C9C  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  3770  000CA0  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  3771  000CA4  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  3772  000CA8                     l1062:
  3773  000CA8  0012               	return		;funcret
  3774  000CAA                     __end_of___flmul:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function ___fldiv *****************
  3778 ;; Defined at:
  3779 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  b               4   49[COMRAM] unsigned char 
  3782 ;;  a               4   53[COMRAM] unsigned char 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  grs             4   68[COMRAM] unsigned long 
  3785 ;;  rem             4   61[COMRAM] unsigned long 
  3786 ;;  new_exp         2   66[COMRAM] short 
  3787 ;;  aexp            1   73[COMRAM] unsigned char 
  3788 ;;  bexp            1   72[COMRAM] unsigned char 
  3789 ;;  sign            1   65[COMRAM] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  4   49[COMRAM] unsigned char 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3799 ;;      Params:         8       0       0       0       0       0       0       0       0
  3800 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3801 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3802 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3803 ;;Total ram usage:       25 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    2
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_appADC
  3810 ;;		_appBat
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text18
  3815  000CAA                     __ptext18:
  3816                           	callstack 0
  3817  000CAA                     ___fldiv:
  3818                           	callstack 26
  3819  000CAA  5035               	movf	(___fldiv@b+3)^0,w,c
  3820  000CAC  0B80               	andlw	128
  3821  000CAE  6E42               	movwf	___fldiv@sign^0,c
  3822  000CB0  5035               	movf	(___fldiv@b+3)^0,w,c
  3823  000CB2  2435               	addwf	(___fldiv@b+3)^0,w,c
  3824  000CB4  6E49               	movwf	___fldiv@bexp^0,c
  3825  000CB6  AE34               	btfss	(___fldiv@b+2)^0,7,c
  3826  000CB8  EF60  F006         	goto	u3141
  3827  000CBC  EF62  F006         	goto	u3140
  3828  000CC0                     u3141:
  3829  000CC0  EF63  F006         	goto	l3647
  3830  000CC4                     u3140:
  3831  000CC4  8049               	bsf	___fldiv@bexp^0,0,c
  3832  000CC6                     l3647:
  3833  000CC6  5049               	movf	___fldiv@bexp^0,w,c
  3834  000CC8  B4D8               	btfsc	status,2,c
  3835  000CCA  EF69  F006         	goto	u3151
  3836  000CCE  EF6B  F006         	goto	u3150
  3837  000CD2                     u3151:
  3838  000CD2  EF80  F006         	goto	l3657
  3839  000CD6                     u3150:
  3840  000CD6  2849               	incf	___fldiv@bexp^0,w,c
  3841  000CD8  A4D8               	btfss	status,2,c
  3842  000CDA  EF71  F006         	goto	u3161
  3843  000CDE  EF73  F006         	goto	u3160
  3844  000CE2                     u3161:
  3845  000CE2  EF7B  F006         	goto	l3653
  3846  000CE6                     u3160:
  3847  000CE6  0E00               	movlw	0
  3848  000CE8  6E32               	movwf	___fldiv@b^0,c
  3849  000CEA  0E00               	movlw	0
  3850  000CEC  6E33               	movwf	(___fldiv@b+1)^0,c
  3851  000CEE  0E00               	movlw	0
  3852  000CF0  6E34               	movwf	(___fldiv@b+2)^0,c
  3853  000CF2  0E00               	movlw	0
  3854  000CF4  6E35               	movwf	(___fldiv@b+3)^0,c
  3855  000CF6                     l3653:
  3856  000CF6  8E34               	bsf	(___fldiv@b+2)^0,7,c
  3857  000CF8  0E00               	movlw	0
  3858  000CFA  6E35               	movwf	(___fldiv@b+3)^0,c
  3859  000CFC  EF88  F006         	goto	l3659
  3860  000D00                     l3657:
  3861  000D00  0E00               	movlw	0
  3862  000D02  6E32               	movwf	___fldiv@b^0,c
  3863  000D04  0E00               	movlw	0
  3864  000D06  6E33               	movwf	(___fldiv@b+1)^0,c
  3865  000D08  0E00               	movlw	0
  3866  000D0A  6E34               	movwf	(___fldiv@b+2)^0,c
  3867  000D0C  0E00               	movlw	0
  3868  000D0E  6E35               	movwf	(___fldiv@b+3)^0,c
  3869  000D10                     l3659:
  3870  000D10  5039               	movf	(___fldiv@a+3)^0,w,c
  3871  000D12  0B80               	andlw	128
  3872  000D14  1A42               	xorwf	___fldiv@sign^0,f,c
  3873  000D16  5039               	movf	(___fldiv@a+3)^0,w,c
  3874  000D18  2439               	addwf	(___fldiv@a+3)^0,w,c
  3875  000D1A  6E4A               	movwf	___fldiv@aexp^0,c
  3876  000D1C  AE38               	btfss	(___fldiv@a+2)^0,7,c
  3877  000D1E  EF93  F006         	goto	u3171
  3878  000D22  EF95  F006         	goto	u3170
  3879  000D26                     u3171:
  3880  000D26  EF96  F006         	goto	l3667
  3881  000D2A                     u3170:
  3882  000D2A  804A               	bsf	___fldiv@aexp^0,0,c
  3883  000D2C                     l3667:
  3884  000D2C  504A               	movf	___fldiv@aexp^0,w,c
  3885  000D2E  B4D8               	btfsc	status,2,c
  3886  000D30  EF9C  F006         	goto	u3181
  3887  000D34  EF9E  F006         	goto	u3180
  3888  000D38                     u3181:
  3889  000D38  EFB3  F006         	goto	l3677
  3890  000D3C                     u3180:
  3891  000D3C  284A               	incf	___fldiv@aexp^0,w,c
  3892  000D3E  A4D8               	btfss	status,2,c
  3893  000D40  EFA4  F006         	goto	u3191
  3894  000D44  EFA6  F006         	goto	u3190
  3895  000D48                     u3191:
  3896  000D48  EFAE  F006         	goto	l3673
  3897  000D4C                     u3190:
  3898  000D4C  0E00               	movlw	0
  3899  000D4E  6E36               	movwf	___fldiv@a^0,c
  3900  000D50  0E00               	movlw	0
  3901  000D52  6E37               	movwf	(___fldiv@a+1)^0,c
  3902  000D54  0E00               	movlw	0
  3903  000D56  6E38               	movwf	(___fldiv@a+2)^0,c
  3904  000D58  0E00               	movlw	0
  3905  000D5A  6E39               	movwf	(___fldiv@a+3)^0,c
  3906  000D5C                     l3673:
  3907  000D5C  8E38               	bsf	(___fldiv@a+2)^0,7,c
  3908  000D5E  0E00               	movlw	0
  3909  000D60  6E39               	movwf	(___fldiv@a+3)^0,c
  3910  000D62  EFBB  F006         	goto	l3679
  3911  000D66                     l3677:
  3912  000D66  0E00               	movlw	0
  3913  000D68  6E36               	movwf	___fldiv@a^0,c
  3914  000D6A  0E00               	movlw	0
  3915  000D6C  6E37               	movwf	(___fldiv@a+1)^0,c
  3916  000D6E  0E00               	movlw	0
  3917  000D70  6E38               	movwf	(___fldiv@a+2)^0,c
  3918  000D72  0E00               	movlw	0
  3919  000D74  6E39               	movwf	(___fldiv@a+3)^0,c
  3920  000D76                     l3679:
  3921  000D76  5036               	movf	___fldiv@a^0,w,c
  3922  000D78  1037               	iorwf	(___fldiv@a+1)^0,w,c
  3923  000D7A  1038               	iorwf	(___fldiv@a+2)^0,w,c
  3924  000D7C  1039               	iorwf	(___fldiv@a+3)^0,w,c
  3925  000D7E  A4D8               	btfss	status,2,c
  3926  000D80  EFC4  F006         	goto	u3201
  3927  000D84  EFC6  F006         	goto	u3200
  3928  000D88                     u3201:
  3929  000D88  EFDE  F006         	goto	l3691
  3930  000D8C                     u3200:
  3931  000D8C  0E00               	movlw	0
  3932  000D8E  6E32               	movwf	___fldiv@b^0,c
  3933  000D90  0E00               	movlw	0
  3934  000D92  6E33               	movwf	(___fldiv@b+1)^0,c
  3935  000D94  0E00               	movlw	0
  3936  000D96  6E34               	movwf	(___fldiv@b+2)^0,c
  3937  000D98  0E00               	movlw	0
  3938  000D9A  6E35               	movwf	(___fldiv@b+3)^0,c
  3939  000D9C  0E80               	movlw	128
  3940  000D9E  1234               	iorwf	(___fldiv@b+2)^0,f,c
  3941  000DA0  0E7F               	movlw	127
  3942  000DA2  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3943  000DA4                     l3685:
  3944  000DA4  5042               	movf	___fldiv@sign^0,w,c
  3945  000DA6  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3946  000DA8  C032  F032         	movff	___fldiv@b,?___fldiv
  3947  000DAC  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  3948  000DB0  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  3949  000DB4  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  3950  000DB8  EF21  F008         	goto	l1026
  3951  000DBC                     l3691:
  3952  000DBC  5049               	movf	___fldiv@bexp^0,w,c
  3953  000DBE  A4D8               	btfss	status,2,c
  3954  000DC0  EFE4  F006         	goto	u3211
  3955  000DC4  EFE6  F006         	goto	u3210
  3956  000DC8                     u3211:
  3957  000DC8  EFF0  F006         	goto	l3699
  3958  000DCC                     u3210:
  3959  000DCC  0E00               	movlw	0
  3960  000DCE  6E32               	movwf	?___fldiv^0,c
  3961  000DD0  0E00               	movlw	0
  3962  000DD2  6E33               	movwf	(?___fldiv+1)^0,c
  3963  000DD4  0E00               	movlw	0
  3964  000DD6  6E34               	movwf	(?___fldiv+2)^0,c
  3965  000DD8  0E00               	movlw	0
  3966  000DDA  6E35               	movwf	(?___fldiv+3)^0,c
  3967  000DDC  EF21  F008         	goto	l1026
  3968  000DE0                     l3699:
  3969  000DE0  504A               	movf	___fldiv@aexp^0,w,c
  3970  000DE2  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  3971  000DE6  6A3B               	clrf	(??___fldiv+1)^0,c
  3972  000DE8  5E3A               	subwf	??___fldiv^0,f,c
  3973  000DEA  0E00               	movlw	0
  3974  000DEC  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  3975  000DEE  0E7F               	movlw	127
  3976  000DF0  243A               	addwf	??___fldiv^0,w,c
  3977  000DF2  6E43               	movwf	___fldiv@new_exp^0,c
  3978  000DF4  0E00               	movlw	0
  3979  000DF6  203B               	addwfc	(??___fldiv+1)^0,w,c
  3980  000DF8  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  3981  000DFA  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  3982  000DFE  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  3983  000E02  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  3984  000E06  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  3985  000E0A  0E00               	movlw	0
  3986  000E0C  6E32               	movwf	___fldiv@b^0,c
  3987  000E0E  0E00               	movlw	0
  3988  000E10  6E33               	movwf	(___fldiv@b+1)^0,c
  3989  000E12  0E00               	movlw	0
  3990  000E14  6E34               	movwf	(___fldiv@b+2)^0,c
  3991  000E16  0E00               	movlw	0
  3992  000E18  6E35               	movwf	(___fldiv@b+3)^0,c
  3993  000E1A  0E00               	movlw	0
  3994  000E1C  6E45               	movwf	___fldiv@grs^0,c
  3995  000E1E  0E00               	movlw	0
  3996  000E20  6E46               	movwf	(___fldiv@grs+1)^0,c
  3997  000E22  0E00               	movlw	0
  3998  000E24  6E47               	movwf	(___fldiv@grs+2)^0,c
  3999  000E26  0E00               	movlw	0
  4000  000E28  6E48               	movwf	(___fldiv@grs+3)^0,c
  4001  000E2A  0E00               	movlw	0
  4002  000E2C  6E4A               	movwf	___fldiv@aexp^0,c
  4003  000E2E  EF51  F007         	goto	l1028
  4004  000E32                     l3709:
  4005  000E32  504A               	movf	___fldiv@aexp^0,w,c
  4006  000E34  B4D8               	btfsc	status,2,c
  4007  000E36  EF1F  F007         	goto	u3221
  4008  000E3A  EF21  F007         	goto	u3220
  4009  000E3E                     u3221:
  4010  000E3E  EF38  F007         	goto	l3717
  4011  000E42                     u3220:
  4012  000E42  90D8               	bcf	status,0,c
  4013  000E44  363E               	rlcf	___fldiv@rem^0,f,c
  4014  000E46  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  4015  000E48  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  4016  000E4A  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  4017  000E4C  90D8               	bcf	status,0,c
  4018  000E4E  3632               	rlcf	___fldiv@b^0,f,c
  4019  000E50  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4020  000E52  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4021  000E54  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4022  000E56  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4023  000E58  EF30  F007         	goto	u3231
  4024  000E5C  EF32  F007         	goto	u3230
  4025  000E60                     u3231:
  4026  000E60  EF33  F007         	goto	l1031
  4027  000E64                     u3230:
  4028  000E64  8032               	bsf	___fldiv@b^0,0,c
  4029  000E66                     l1031:
  4030  000E66  90D8               	bcf	status,0,c
  4031  000E68  3645               	rlcf	___fldiv@grs^0,f,c
  4032  000E6A  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4033  000E6C  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4034  000E6E  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4035  000E70                     l3717:
  4036  000E70  5036               	movf	___fldiv@a^0,w,c
  4037  000E72  5C3E               	subwf	___fldiv@rem^0,w,c
  4038  000E74  5037               	movf	(___fldiv@a+1)^0,w,c
  4039  000E76  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  4040  000E78  5038               	movf	(___fldiv@a+2)^0,w,c
  4041  000E7A  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  4042  000E7C  5039               	movf	(___fldiv@a+3)^0,w,c
  4043  000E7E  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  4044  000E80  A0D8               	btfss	status,0,c
  4045  000E82  EF45  F007         	goto	u3241
  4046  000E86  EF47  F007         	goto	u3240
  4047  000E8A                     u3241:
  4048  000E8A  EF50  F007         	goto	l3723
  4049  000E8E                     u3240:
  4050  000E8E  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  4051  000E90  5036               	movf	___fldiv@a^0,w,c
  4052  000E92  5E3E               	subwf	___fldiv@rem^0,f,c
  4053  000E94  5037               	movf	(___fldiv@a+1)^0,w,c
  4054  000E96  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  4055  000E98  5038               	movf	(___fldiv@a+2)^0,w,c
  4056  000E9A  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  4057  000E9C  5039               	movf	(___fldiv@a+3)^0,w,c
  4058  000E9E  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  4059  000EA0                     l3723:
  4060  000EA0  2A4A               	incf	___fldiv@aexp^0,f,c
  4061  000EA2                     l1028:
  4062  000EA2  0E19               	movlw	25
  4063  000EA4  644A               	cpfsgt	___fldiv@aexp^0,c
  4064  000EA6  EF57  F007         	goto	u3251
  4065  000EAA  EF59  F007         	goto	u3250
  4066  000EAE                     u3251:
  4067  000EAE  EF19  F007         	goto	l3709
  4068  000EB2                     u3250:
  4069  000EB2  503E               	movf	___fldiv@rem^0,w,c
  4070  000EB4  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  4071  000EB6  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  4072  000EB8  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  4073  000EBA  B4D8               	btfsc	status,2,c
  4074  000EBC  EF62  F007         	goto	u3261
  4075  000EC0  EF64  F007         	goto	u3260
  4076  000EC4                     u3261:
  4077  000EC4  EF7C  F007         	goto	l3735
  4078  000EC8                     u3260:
  4079  000EC8  8045               	bsf	___fldiv@grs^0,0,c
  4080  000ECA  EF7C  F007         	goto	l3735
  4081  000ECE                     l3729:
  4082  000ECE  90D8               	bcf	status,0,c
  4083  000ED0  3632               	rlcf	___fldiv@b^0,f,c
  4084  000ED2  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4085  000ED4  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4086  000ED6  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4087  000ED8  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4088  000EDA  EF71  F007         	goto	u3271
  4089  000EDE  EF73  F007         	goto	u3270
  4090  000EE2                     u3271:
  4091  000EE2  EF74  F007         	goto	l1037
  4092  000EE6                     u3270:
  4093  000EE6  8032               	bsf	___fldiv@b^0,0,c
  4094  000EE8                     l1037:
  4095  000EE8  90D8               	bcf	status,0,c
  4096  000EEA  3645               	rlcf	___fldiv@grs^0,f,c
  4097  000EEC  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4098  000EEE  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4099  000EF0  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4100  000EF2  0643               	decf	___fldiv@new_exp^0,f,c
  4101  000EF4  A0D8               	btfss	status,0,c
  4102  000EF6  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  4103  000EF8                     l3735:
  4104  000EF8  AE34               	btfss	(___fldiv@b+2)^0,7,c
  4105  000EFA  EF81  F007         	goto	u3281
  4106  000EFE  EF83  F007         	goto	u3280
  4107  000F02                     u3281:
  4108  000F02  EF67  F007         	goto	l3729
  4109  000F06                     u3280:
  4110  000F06  0E00               	movlw	0
  4111  000F08  6E4A               	movwf	___fldiv@aexp^0,c
  4112  000F0A  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4113  000F0C  EF8A  F007         	goto	u3291
  4114  000F10  EF8C  F007         	goto	u3290
  4115  000F14                     u3291:
  4116  000F14  EFB0  F007         	goto	l1039
  4117  000F18                     u3290:
  4118  000F18  0EFF               	movlw	255
  4119  000F1A  1445               	andwf	___fldiv@grs^0,w,c
  4120  000F1C  6E3A               	movwf	??___fldiv^0,c
  4121  000F1E  0EFF               	movlw	255
  4122  000F20  1446               	andwf	(___fldiv@grs+1)^0,w,c
  4123  000F22  6E3B               	movwf	(??___fldiv+1)^0,c
  4124  000F24  0EFF               	movlw	255
  4125  000F26  1447               	andwf	(___fldiv@grs+2)^0,w,c
  4126  000F28  6E3C               	movwf	(??___fldiv+2)^0,c
  4127  000F2A  0E7F               	movlw	127
  4128  000F2C  1448               	andwf	(___fldiv@grs+3)^0,w,c
  4129  000F2E  6E3D               	movwf	(??___fldiv+3)^0,c
  4130  000F30  503A               	movf	??___fldiv^0,w,c
  4131  000F32  103B               	iorwf	(??___fldiv+1)^0,w,c
  4132  000F34  103C               	iorwf	(??___fldiv+2)^0,w,c
  4133  000F36  103D               	iorwf	(??___fldiv+3)^0,w,c
  4134  000F38  B4D8               	btfsc	status,2,c
  4135  000F3A  EFA1  F007         	goto	u3301
  4136  000F3E  EFA3  F007         	goto	u3300
  4137  000F42                     u3301:
  4138  000F42  EFA7  F007         	goto	l1040
  4139  000F46                     u3300:
  4140  000F46                     l3743:
  4141  000F46  0E01               	movlw	1
  4142  000F48  6E4A               	movwf	___fldiv@aexp^0,c
  4143  000F4A  EFB0  F007         	goto	l1039
  4144  000F4E                     l1040:
  4145  000F4E  A032               	btfss	___fldiv@b^0,0,c
  4146  000F50  EFAC  F007         	goto	u3311
  4147  000F54  EFAE  F007         	goto	u3310
  4148  000F58                     u3311:
  4149  000F58  EFB0  F007         	goto	l1039
  4150  000F5C                     u3310:
  4151  000F5C  EFA3  F007         	goto	l3743
  4152  000F60                     l1039:
  4153  000F60  504A               	movf	___fldiv@aexp^0,w,c
  4154  000F62  B4D8               	btfsc	status,2,c
  4155  000F64  EFB6  F007         	goto	u3321
  4156  000F68  EFB8  F007         	goto	u3320
  4157  000F6C                     u3321:
  4158  000F6C  EFDC  F007         	goto	l3755
  4159  000F70                     u3320:
  4160  000F70  0E01               	movlw	1
  4161  000F72  2632               	addwf	___fldiv@b^0,f,c
  4162  000F74  0E00               	movlw	0
  4163  000F76  2233               	addwfc	(___fldiv@b+1)^0,f,c
  4164  000F78  2234               	addwfc	(___fldiv@b+2)^0,f,c
  4165  000F7A  2235               	addwfc	(___fldiv@b+3)^0,f,c
  4166  000F7C  A035               	btfss	(___fldiv@b+3)^0,0,c
  4167  000F7E  EFC3  F007         	goto	u3331
  4168  000F82  EFC5  F007         	goto	u3330
  4169  000F86                     u3331:
  4170  000F86  EFDC  F007         	goto	l3755
  4171  000F8A                     u3330:
  4172  000F8A  C032  F03A         	movff	___fldiv@b,??___fldiv
  4173  000F8E  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  4174  000F92  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  4175  000F96  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  4176  000F9A  343D               	rlcf	(??___fldiv+3)^0,w,c
  4177  000F9C  323D               	rrcf	(??___fldiv+3)^0,f,c
  4178  000F9E  323C               	rrcf	(??___fldiv+2)^0,f,c
  4179  000FA0  323B               	rrcf	(??___fldiv+1)^0,f,c
  4180  000FA2  323A               	rrcf	??___fldiv^0,f,c
  4181  000FA4  C03A  F032         	movff	??___fldiv,___fldiv@b
  4182  000FA8  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  4183  000FAC  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  4184  000FB0  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  4185  000FB4  4A43               	infsnz	___fldiv@new_exp^0,f,c
  4186  000FB6  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  4187  000FB8                     l3755:
  4188  000FB8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4189  000FBA  EFE7  F007         	goto	u3341
  4190  000FBE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4191  000FC0  E108               	bnz	u3340
  4192  000FC2  2843               	incf	___fldiv@new_exp^0,w,c
  4193  000FC4  A0D8               	btfss	status,0,c
  4194  000FC6  EFE7  F007         	goto	u3341
  4195  000FCA  EFE9  F007         	goto	u3340
  4196  000FCE                     u3341:
  4197  000FCE  EFF4  F007         	goto	l3759
  4198  000FD2                     u3340:
  4199  000FD2  0E00               	movlw	0
  4200  000FD4  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4201  000FD6  6843               	setf	___fldiv@new_exp^0,c
  4202  000FD8  0E00               	movlw	0
  4203  000FDA  6E32               	movwf	___fldiv@b^0,c
  4204  000FDC  0E00               	movlw	0
  4205  000FDE  6E33               	movwf	(___fldiv@b+1)^0,c
  4206  000FE0  0E00               	movlw	0
  4207  000FE2  6E34               	movwf	(___fldiv@b+2)^0,c
  4208  000FE4  0E00               	movlw	0
  4209  000FE6  6E35               	movwf	(___fldiv@b+3)^0,c
  4210  000FE8                     l3759:
  4211  000FE8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4212  000FEA  EF01  F008         	goto	u3350
  4213  000FEE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4214  000FF0  E106               	bnz	u3351
  4215  000FF2  0443               	decf	___fldiv@new_exp^0,w,c
  4216  000FF4  B0D8               	btfsc	status,0,c
  4217  000FF6  EFFF  F007         	goto	u3351
  4218  000FFA  EF01  F008         	goto	u3350
  4219  000FFE                     u3351:
  4220  000FFE  EF0F  F008         	goto	l3763
  4221  001002                     u3350:
  4222  001002  0E00               	movlw	0
  4223  001004  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4224  001006  0E00               	movlw	0
  4225  001008  6E43               	movwf	___fldiv@new_exp^0,c
  4226  00100A  0E00               	movlw	0
  4227  00100C  6E32               	movwf	___fldiv@b^0,c
  4228  00100E  0E00               	movlw	0
  4229  001010  6E33               	movwf	(___fldiv@b+1)^0,c
  4230  001012  0E00               	movlw	0
  4231  001014  6E34               	movwf	(___fldiv@b+2)^0,c
  4232  001016  0E00               	movlw	0
  4233  001018  6E35               	movwf	(___fldiv@b+3)^0,c
  4234  00101A  0E00               	movlw	0
  4235  00101C  6E42               	movwf	___fldiv@sign^0,c
  4236  00101E                     l3763:
  4237  00101E  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  4238  001022  A049               	btfss	___fldiv@bexp^0,0,c
  4239  001024  EF16  F008         	goto	u3361
  4240  001028  EF18  F008         	goto	u3360
  4241  00102C                     u3361:
  4242  00102C  EF1B  F008         	goto	l3769
  4243  001030                     u3360:
  4244  001030  8E34               	bsf	(___fldiv@b+2)^0,7,c
  4245  001032  EF1C  F008         	goto	l3771
  4246  001036                     l3769:
  4247  001036  9E34               	bcf	(___fldiv@b+2)^0,7,c
  4248  001038                     l3771:
  4249  001038  90D8               	bcf	status,0,c
  4250  00103A  3049               	rrcf	___fldiv@bexp^0,w,c
  4251  00103C  6E35               	movwf	(___fldiv@b+3)^0,c
  4252  00103E  EFD2  F006         	goto	l3685
  4253  001042                     l1026:
  4254  001042  0012               	return		;funcret
  4255  001044                     __end_of___fldiv:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function ___awmod *****************
  4259 ;; Defined at:
  4260 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  dividend        2    2[BANK0 ] int 
  4263 ;;  divisor         2    4[BANK0 ] int 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  sign            1    7[BANK0 ] unsigned char 
  4266 ;;  counter         1    6[BANK0 ] unsigned char 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  2    2[BANK0 ] int 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4276 ;;      Params:         0       4       0       0       0       0       0       0       0
  4277 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4279 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4280 ;;Total ram usage:        6 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    2
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_appADC
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text19
  4291  002DF6                     __ptext19:
  4292                           	callstack 0
  4293  002DF6                     ___awmod:
  4294                           	callstack 26
  4295  002DF6  0E00               	movlw	0
  4296  002DF8  0100               	movlb	0	; () banked
  4297  002DFA  6F9D               	movwf	___awmod@sign& (0+255),b
  4298  002DFC                     
  4299                           ; BSR set to: 0
  4300  002DFC  BF99               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4301  002DFE  EF05  F017         	goto	u4140
  4302  002E02  EF03  F017         	goto	u4141
  4303  002E06                     u4141:
  4304  002E06  EF0B  F017         	goto	l4613
  4305  002E0A                     u4140:
  4306  002E0A                     
  4307                           ; BSR set to: 0
  4308  002E0A  6D98               	negf	___awmod@dividend& (0+255),b
  4309  002E0C  1F99               	comf	(___awmod@dividend+1)& (0+255),f,b
  4310  002E0E  B0D8               	btfsc	status,0,c
  4311  002E10  2B99               	incf	(___awmod@dividend+1)& (0+255),f,b
  4312  002E12                     
  4313                           ; BSR set to: 0
  4314  002E12  0E01               	movlw	1
  4315  002E14  6F9D               	movwf	___awmod@sign& (0+255),b
  4316  002E16                     l4613:
  4317                           
  4318                           ; BSR set to: 0
  4319  002E16  BF9B               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4320  002E18  EF12  F017         	goto	u4150
  4321  002E1C  EF10  F017         	goto	u4151
  4322  002E20                     u4151:
  4323  002E20  EF16  F017         	goto	l4617
  4324  002E24                     u4150:
  4325  002E24                     
  4326                           ; BSR set to: 0
  4327  002E24  6D9A               	negf	___awmod@divisor& (0+255),b
  4328  002E26  1F9B               	comf	(___awmod@divisor+1)& (0+255),f,b
  4329  002E28  B0D8               	btfsc	status,0,c
  4330  002E2A  2B9B               	incf	(___awmod@divisor+1)& (0+255),f,b
  4331  002E2C                     l4617:
  4332                           
  4333                           ; BSR set to: 0
  4334  002E2C  519A               	movf	___awmod@divisor& (0+255),w,b
  4335  002E2E  119B               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4336  002E30  B4D8               	btfsc	status,2,c
  4337  002E32  EF1D  F017         	goto	u4161
  4338  002E36  EF1F  F017         	goto	u4160
  4339  002E3A                     u4161:
  4340  002E3A  EF43  F017         	goto	l4633
  4341  002E3E                     u4160:
  4342  002E3E                     
  4343                           ; BSR set to: 0
  4344  002E3E  0E01               	movlw	1
  4345  002E40  6F9C               	movwf	___awmod@counter& (0+255),b
  4346  002E42  EF27  F017         	goto	l4623
  4347  002E46                     l4621:
  4348                           
  4349                           ; BSR set to: 0
  4350  002E46  90D8               	bcf	status,0,c
  4351  002E48  379A               	rlcf	___awmod@divisor& (0+255),f,b
  4352  002E4A  379B               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4353  002E4C  2B9C               	incf	___awmod@counter& (0+255),f,b
  4354  002E4E                     l4623:
  4355                           
  4356                           ; BSR set to: 0
  4357  002E4E  AF9B               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4358  002E50  EF2C  F017         	goto	u4171
  4359  002E54  EF2E  F017         	goto	u4170
  4360  002E58                     u4171:
  4361  002E58  EF23  F017         	goto	l4621
  4362  002E5C                     u4170:
  4363  002E5C                     l4625:
  4364                           
  4365                           ; BSR set to: 0
  4366  002E5C  519A               	movf	___awmod@divisor& (0+255),w,b
  4367  002E5E  5D98               	subwf	___awmod@dividend& (0+255),w,b
  4368  002E60  519B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4369  002E62  5999               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4370  002E64  A0D8               	btfss	status,0,c
  4371  002E66  EF37  F017         	goto	u4181
  4372  002E6A  EF39  F017         	goto	u4180
  4373  002E6E                     u4181:
  4374  002E6E  EF3D  F017         	goto	l4629
  4375  002E72                     u4180:
  4376  002E72                     
  4377                           ; BSR set to: 0
  4378  002E72  519A               	movf	___awmod@divisor& (0+255),w,b
  4379  002E74  5F98               	subwf	___awmod@dividend& (0+255),f,b
  4380  002E76  519B               	movf	(___awmod@divisor+1)& (0+255),w,b
  4381  002E78  5B99               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4382  002E7A                     l4629:
  4383                           
  4384                           ; BSR set to: 0
  4385  002E7A  90D8               	bcf	status,0,c
  4386  002E7C  339B               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4387  002E7E  339A               	rrcf	___awmod@divisor& (0+255),f,b
  4388  002E80                     
  4389                           ; BSR set to: 0
  4390  002E80  2F9C               	decfsz	___awmod@counter& (0+255),f,b
  4391  002E82  EF2E  F017         	goto	l4625
  4392  002E86                     l4633:
  4393                           
  4394                           ; BSR set to: 0
  4395  002E86  519D               	movf	___awmod@sign& (0+255),w,b
  4396  002E88  B4D8               	btfsc	status,2,c
  4397  002E8A  EF49  F017         	goto	u4191
  4398  002E8E  EF4B  F017         	goto	u4190
  4399  002E92                     u4191:
  4400  002E92  EF4F  F017         	goto	l4637
  4401  002E96                     u4190:
  4402  002E96                     
  4403                           ; BSR set to: 0
  4404  002E96  6D98               	negf	___awmod@dividend& (0+255),b
  4405  002E98  1F99               	comf	(___awmod@dividend+1)& (0+255),f,b
  4406  002E9A  B0D8               	btfsc	status,0,c
  4407  002E9C  2B99               	incf	(___awmod@dividend+1)& (0+255),f,b
  4408  002E9E                     l4637:
  4409                           
  4410                           ; BSR set to: 0
  4411  002E9E  C098  F098         	movff	___awmod@dividend,?___awmod
  4412  002EA2  C099  F099         	movff	___awmod@dividend+1,?___awmod+1
  4413  002EA6                     
  4414                           ; BSR set to: 0
  4415  002EA6  0012               	return		;funcret
  4416  002EA8                     __end_of___awmod:
  4417                           	callstack 0
  4418                           
  4419 ;; *************** function _appInit *****************
  4420 ;; Defined at:
  4421 ;;		line 12 in file "app.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4435 ;;      Params:         0       0       0       0       0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4438 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4439 ;;Total ram usage:        0 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    5
  4442 ;; This function calls:
  4443 ;;		_adcInit
  4444 ;;		_appCounterInit
  4445 ;;		_appISRConfig
  4446 ;;		_appLCD_Init
  4447 ;;		_appTimerInit
  4448 ;;		_servoInit
  4449 ;;		_setServo
  4450 ;;		_uart_Init
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text20
  4457  003588                     __ptext20:
  4458                           	callstack 0
  4459  003588                     _appInit:
  4460                           	callstack 25
  4461  003588                     
  4462                           ;app.c: 14:     appISRConfig();
  4463  003588  EC21  F01C         	call	_appISRConfig	;wreg free
  4464  00358C                     
  4465                           ;app.c: 15:     appLCD_Init();
  4466  00358C  EC91  F018         	call	_appLCD_Init	;wreg free
  4467  003590                     
  4468                           ;app.c: 16:     adcInit(2);
  4469  003590  0E02               	movlw	2
  4470  003592  EC9F  F01A         	call	_adcInit
  4471  003596                     
  4472                           ;app.c: 17:     appTimerInit();
  4473  003596  ECBA  F01B         	call	_appTimerInit	;wreg free
  4474  00359A                     
  4475                           ;app.c: 18:     appCounterInit(0);
  4476  00359A  0E00               	movlw	0
  4477  00359C  6E08               	movwf	(appCounterInit@reload+1)^0,c
  4478  00359E  0E00               	movlw	0
  4479  0035A0  6E07               	movwf	appCounterInit@reload^0,c
  4480  0035A2  EC1C  F01C         	call	_appCounterInit	;wreg free
  4481  0035A6                     
  4482                           ;app.c: 19:     servoInit();
  4483  0035A6  EC06  F01C         	call	_servoInit	;wreg free
  4484  0035AA                     
  4485                           ;app.c: 20:     uart_Init(9600);
  4486  0035AA  0E80               	movlw	128
  4487  0035AC  6E14               	movwf	uart_Init@baud^0,c
  4488  0035AE  0E25               	movlw	37
  4489  0035B0  6E15               	movwf	(uart_Init@baud+1)^0,c
  4490  0035B2  0E00               	movlw	0
  4491  0035B4  6E16               	movwf	(uart_Init@baud+2)^0,c
  4492  0035B6  0E00               	movlw	0
  4493  0035B8  6E17               	movwf	(uart_Init@baud+3)^0,c
  4494  0035BA  ECD7  F019         	call	_uart_Init	;wreg free
  4495  0035BE                     
  4496                           ;app.c: 21:     setServo(33,10,0);
  4497  0035BE  0E0A               	movlw	10
  4498  0035C0  6E0B               	movwf	setServo@pulsos^0,c
  4499  0035C2  0E00               	movlw	0
  4500  0035C4  6E0C               	movwf	setServo@pin^0,c
  4501  0035C6  0E21               	movlw	33
  4502  0035C8  ECD1  F01B         	call	_setServo
  4503  0035CC  0012               	return		;funcret
  4504  0035CE                     __end_of_appInit:
  4505                           	callstack 0
  4506                           
  4507 ;; *************** function _uart_Init *****************
  4508 ;; Defined at:
  4509 ;;		line 18 in file "UART.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  baud            4   19[COMRAM] unsigned long 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4523 ;;      Params:         4       0       0       0       0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4526 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        4 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    3
  4530 ;; This function calls:
  4531 ;;		___lldiv
  4532 ;; This function is called by:
  4533 ;;		_appInit
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text21
  4538  0033AE                     __ptext21:
  4539                           	callstack 0
  4540  0033AE                     _uart_Init:
  4541                           	callstack 26
  4542  0033AE                     
  4543                           ;UART.c: 18: void uart_Init(uint32_t baud);UART.c: 19: {;UART.c: 20:     TRISCbits.RC6 =
      +                           0;
  4544  0033AE  9C94               	bcf	148,6,c	;volatile
  4545                           
  4546                           ;UART.c: 21:     TRISCbits.RC7 = 1;
  4547  0033B0  8E94               	bsf	148,7,c	;volatile
  4548                           
  4549                           ;UART.c: 23:     BAUDCONbits.BRG16 = 0;
  4550  0033B2  96B8               	bcf	184,3,c	;volatile
  4551  0033B4                     
  4552                           ;UART.c: 24:     SPBRG = (uint8_t)(((12000000/baud)/64)-1);
  4553  0033B4  0E00               	movlw	0
  4554  0033B6  6E07               	movwf	___lldiv@dividend^0,c
  4555  0033B8  0E1B               	movlw	27
  4556  0033BA  6E08               	movwf	(___lldiv@dividend+1)^0,c
  4557  0033BC  0EB7               	movlw	183
  4558  0033BE  6E09               	movwf	(___lldiv@dividend+2)^0,c
  4559  0033C0  0E00               	movlw	0
  4560  0033C2  6E0A               	movwf	(___lldiv@dividend+3)^0,c
  4561  0033C4  C014  F00B         	movff	uart_Init@baud,___lldiv@divisor
  4562  0033C8  C015  F00C         	movff	uart_Init@baud+1,___lldiv@divisor+1
  4563  0033CC  C016  F00D         	movff	uart_Init@baud+2,___lldiv@divisor+2
  4564  0033D0  C017  F00E         	movff	uart_Init@baud+3,___lldiv@divisor+3
  4565  0033D4  EC54  F017         	call	___lldiv	;wreg free
  4566  0033D8  0E07               	movlw	7
  4567  0033DA  EFF4  F019         	goto	u3820
  4568  0033DE                     u3825:
  4569  0033DE  90D8               	bcf	status,0,c
  4570  0033E0  320A               	rrcf	(?___lldiv+3)^0,f,c
  4571  0033E2  3209               	rrcf	(?___lldiv+2)^0,f,c
  4572  0033E4  3208               	rrcf	(?___lldiv+1)^0,f,c
  4573  0033E6  3207               	rrcf	?___lldiv^0,f,c
  4574  0033E8                     u3820:
  4575  0033E8  2EE8               	decfsz	wreg,f,c
  4576  0033EA  EFEF  F019         	goto	u3825
  4577  0033EE  0407               	decf	?___lldiv^0,w,c
  4578  0033F0  6EAF               	movwf	175,c	;volatile
  4579  0033F2                     
  4580                           ;UART.c: 26:     TXSTAbits.BRGH = 0;
  4581  0033F2  94AC               	bcf	172,2,c	;volatile
  4582  0033F4                     
  4583                           ;UART.c: 27:     TXSTAbits.SYNC = 0;
  4584  0033F4  98AC               	bcf	172,4,c	;volatile
  4585  0033F6                     
  4586                           ;UART.c: 28:     TXSTAbits.TX9 = 0;
  4587  0033F6  9CAC               	bcf	172,6,c	;volatile
  4588  0033F8                     
  4589                           ;UART.c: 29:     TXSTAbits.TXEN = 1;
  4590  0033F8  8AAC               	bsf	172,5,c	;volatile
  4591  0033FA                     
  4592                           ;UART.c: 31:     RCSTAbits.SPEN = 1;
  4593  0033FA  8EAB               	bsf	171,7,c	;volatile
  4594  0033FC                     
  4595                           ;UART.c: 32:     RCSTAbits.RC9 = 0;
  4596  0033FC  9CAB               	bcf	171,6,c	;volatile
  4597  0033FE                     
  4598                           ;UART.c: 33:     RCSTAbits.CREN = 1;
  4599  0033FE  88AB               	bsf	171,4,c	;volatile
  4600  003400                     
  4601                           ;UART.c: 35:     PIE1bits.RCIE = 1;
  4602  003400  8A9D               	bsf	157,5,c	;volatile
  4603  003402                     
  4604                           ;UART.c: 36:     IPR1bits.RCIP =1;
  4605  003402  8A9F               	bsf	159,5,c	;volatile
  4606  003404  0012               	return		;funcret
  4607  003406                     __end_of_uart_Init:
  4608                           	callstack 0
  4609                           
  4610 ;; *************** function ___lldiv *****************
  4611 ;; Defined at:
  4612 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  dividend        4    6[COMRAM] unsigned long 
  4615 ;;  divisor         4   10[COMRAM] unsigned long 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  quotient        4   14[COMRAM] unsigned long 
  4618 ;;  counter         1   18[COMRAM] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  4    6[COMRAM] unsigned long 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4628 ;;      Params:         8       0       0       0       0       0       0       0       0
  4629 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4631 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4632 ;;Total ram usage:       13 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    2
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_uart_Init
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text22
  4643  002EA8                     __ptext22:
  4644                           	callstack 0
  4645  002EA8                     ___lldiv:
  4646                           	callstack 26
  4647  002EA8  0E00               	movlw	0
  4648  002EAA  6E0F               	movwf	___lldiv@quotient^0,c
  4649  002EAC  0E00               	movlw	0
  4650  002EAE  6E10               	movwf	(___lldiv@quotient+1)^0,c
  4651  002EB0  0E00               	movlw	0
  4652  002EB2  6E11               	movwf	(___lldiv@quotient+2)^0,c
  4653  002EB4  0E00               	movlw	0
  4654  002EB6  6E12               	movwf	(___lldiv@quotient+3)^0,c
  4655  002EB8  500B               	movf	___lldiv@divisor^0,w,c
  4656  002EBA  100C               	iorwf	(___lldiv@divisor+1)^0,w,c
  4657  002EBC  100D               	iorwf	(___lldiv@divisor+2)^0,w,c
  4658  002EBE  100E               	iorwf	(___lldiv@divisor+3)^0,w,c
  4659  002EC0  B4D8               	btfsc	status,2,c
  4660  002EC2  EF65  F017         	goto	u3111
  4661  002EC6  EF67  F017         	goto	u3110
  4662  002ECA                     u3111:
  4663  002ECA  EF9D  F017         	goto	l471
  4664  002ECE                     u3110:
  4665  002ECE  0E01               	movlw	1
  4666  002ED0  6E13               	movwf	___lldiv@counter^0,c
  4667  002ED2  EF71  F017         	goto	l3627
  4668  002ED6                     l3625:
  4669  002ED6  90D8               	bcf	status,0,c
  4670  002ED8  360B               	rlcf	___lldiv@divisor^0,f,c
  4671  002EDA  360C               	rlcf	(___lldiv@divisor+1)^0,f,c
  4672  002EDC  360D               	rlcf	(___lldiv@divisor+2)^0,f,c
  4673  002EDE  360E               	rlcf	(___lldiv@divisor+3)^0,f,c
  4674  002EE0  2A13               	incf	___lldiv@counter^0,f,c
  4675  002EE2                     l3627:
  4676  002EE2  AE0E               	btfss	(___lldiv@divisor+3)^0,7,c
  4677  002EE4  EF76  F017         	goto	u3121
  4678  002EE8  EF78  F017         	goto	u3120
  4679  002EEC                     u3121:
  4680  002EEC  EF6B  F017         	goto	l3625
  4681  002EF0                     u3120:
  4682  002EF0                     l3629:
  4683  002EF0  90D8               	bcf	status,0,c
  4684  002EF2  360F               	rlcf	___lldiv@quotient^0,f,c
  4685  002EF4  3610               	rlcf	(___lldiv@quotient+1)^0,f,c
  4686  002EF6  3611               	rlcf	(___lldiv@quotient+2)^0,f,c
  4687  002EF8  3612               	rlcf	(___lldiv@quotient+3)^0,f,c
  4688  002EFA  500B               	movf	___lldiv@divisor^0,w,c
  4689  002EFC  5C07               	subwf	___lldiv@dividend^0,w,c
  4690  002EFE  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4691  002F00  5808               	subwfb	(___lldiv@dividend+1)^0,w,c
  4692  002F02  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4693  002F04  5809               	subwfb	(___lldiv@dividend+2)^0,w,c
  4694  002F06  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4695  002F08  580A               	subwfb	(___lldiv@dividend+3)^0,w,c
  4696  002F0A  A0D8               	btfss	status,0,c
  4697  002F0C  EF8A  F017         	goto	u3131
  4698  002F10  EF8C  F017         	goto	u3130
  4699  002F14                     u3131:
  4700  002F14  EF95  F017         	goto	l3637
  4701  002F18                     u3130:
  4702  002F18  500B               	movf	___lldiv@divisor^0,w,c
  4703  002F1A  5E07               	subwf	___lldiv@dividend^0,f,c
  4704  002F1C  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4705  002F1E  5A08               	subwfb	(___lldiv@dividend+1)^0,f,c
  4706  002F20  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4707  002F22  5A09               	subwfb	(___lldiv@dividend+2)^0,f,c
  4708  002F24  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4709  002F26  5A0A               	subwfb	(___lldiv@dividend+3)^0,f,c
  4710  002F28  800F               	bsf	___lldiv@quotient^0,0,c
  4711  002F2A                     l3637:
  4712  002F2A  90D8               	bcf	status,0,c
  4713  002F2C  320E               	rrcf	(___lldiv@divisor+3)^0,f,c
  4714  002F2E  320D               	rrcf	(___lldiv@divisor+2)^0,f,c
  4715  002F30  320C               	rrcf	(___lldiv@divisor+1)^0,f,c
  4716  002F32  320B               	rrcf	___lldiv@divisor^0,f,c
  4717  002F34  2E13               	decfsz	___lldiv@counter^0,f,c
  4718  002F36  EF78  F017         	goto	l3629
  4719  002F3A                     l471:
  4720  002F3A  C00F  F007         	movff	___lldiv@quotient,?___lldiv
  4721  002F3E  C010  F008         	movff	___lldiv@quotient+1,?___lldiv+1
  4722  002F42  C011  F009         	movff	___lldiv@quotient+2,?___lldiv+2
  4723  002F46  C012  F00A         	movff	___lldiv@quotient+3,?___lldiv+3
  4724  002F4A  0012               	return		;funcret
  4725  002F4C                     __end_of___lldiv:
  4726                           	callstack 0
  4727                           
  4728 ;; *************** function _servoInit *****************
  4729 ;; Defined at:
  4730 ;;		line 4 in file "servo.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0
  4745 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4747 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4748 ;;Total ram usage:        0 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    2
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_appInit
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text23
  4759  00380C                     __ptext23:
  4760                           	callstack 0
  4761  00380C                     _servoInit:
  4762                           	callstack 27
  4763  00380C                     
  4764                           ;servo.c: 10:     T2CONbits.T2CKPS = 0b10;
  4765  00380C  50CA               	movf	202,w,c	;volatile
  4766  00380E  0BFC               	andlw	-4
  4767  003810  0902               	iorlw	2
  4768  003812  6ECA               	movwf	202,c	;volatile
  4769  003814                     
  4770                           ;servo.c: 11:     T2CONbits.T2OUTPS0 = 1;
  4771  003814  86CA               	bsf	202,3,c	;volatile
  4772  003816                     
  4773                           ;servo.c: 12:     T2CONbits.T2OUTPS1 = 1;
  4774  003816  88CA               	bsf	202,4,c	;volatile
  4775  003818                     
  4776                           ;servo.c: 13:     T2CONbits.T2OUTPS2 = 1;
  4777  003818  8ACA               	bsf	202,5,c	;volatile
  4778  00381A                     
  4779                           ;servo.c: 14:     T2CONbits.T2OUTPS3 = 1;
  4780  00381A  8CCA               	bsf	202,6,c	;volatile
  4781  00381C                     
  4782                           ;servo.c: 15:     TRISEbits.TRISE0 = 0;
  4783  00381C  9096               	bcf	150,0,c	;volatile
  4784  00381E                     
  4785                           ;servo.c: 16:     TRISEbits.TRISE1 = 0;
  4786  00381E  9296               	bcf	150,1,c	;volatile
  4787  003820                     
  4788                           ;servo.c: 17:     TRISEbits.TRISE2 = 0;
  4789  003820  9496               	bcf	150,2,c	;volatile
  4790  003822  0012               	return		;funcret
  4791  003824                     __end_of_servoInit:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _appTimerInit *****************
  4795 ;; Defined at:
  4796 ;;		line 85 in file "servo.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4813 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4814 ;;Total ram usage:        0 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    2
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_appInit
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text24
  4825  003774                     __ptext24:
  4826                           	callstack 0
  4827  003774                     _appTimerInit:
  4828                           	callstack 27
  4829  003774                     
  4830                           ;servo.c: 90:     T3CONbits.TMR3ON = 0;
  4831  003774  90B1               	bcf	177,0,c	;volatile
  4832                           
  4833                           ;servo.c: 91:     T3CONbits.RD16 = 1;
  4834  003776  8EB1               	bsf	177,7,c	;volatile
  4835                           
  4836                           ;servo.c: 92:     T3CONbits.TMR3CS = 0;
  4837  003778  92B1               	bcf	177,1,c	;volatile
  4838  00377A                     
  4839                           ;servo.c: 93:     T3CONbits.T3CKPS = 0b11;
  4840  00377A  0E30               	movlw	48
  4841  00377C  12B1               	iorwf	177,f,c	;volatile
  4842  00377E                     
  4843                           ;servo.c: 94:     T3CONbits.T3NSYNC = 1;
  4844  00377E  84B1               	bsf	177,2,c	;volatile
  4845                           
  4846                           ;servo.c: 95:     TMR3 = 20536;
  4847  003780  0E50               	movlw	80
  4848  003782  6EB3               	movwf	179,c	;volatile
  4849  003784  0E38               	movlw	56
  4850  003786  6EB2               	movwf	178,c	;volatile
  4851  003788                     
  4852                           ;servo.c: 100:     T0CONbits.TMR0ON = 0;
  4853  003788  9ED5               	bcf	213,7,c	;volatile
  4854  00378A                     
  4855                           ;servo.c: 101:     T0CONbits.T08BIT = 1;
  4856  00378A  8CD5               	bsf	213,6,c	;volatile
  4857  00378C                     
  4858                           ;servo.c: 102:     T0CONbits.T0CS = 1;
  4859  00378C  8AD5               	bsf	213,5,c	;volatile
  4860  00378E                     
  4861                           ;servo.c: 103:     T0CONbits.T0SE = 0;
  4862  00378E  98D5               	bcf	213,4,c	;volatile
  4863  003790                     
  4864                           ;servo.c: 104:     T0CONbits.PSA = 1;
  4865  003790  86D5               	bsf	213,3,c	;volatile
  4866  003792                     
  4867                           ;servo.c: 106:     TRISAbits.TRISA4 = 1;
  4868  003792  8892               	bsf	146,4,c	;volatile
  4869  003794                     
  4870                           ;servo.c: 112:     INTCONbits.TMR0IE = 1;
  4871  003794  8AF2               	bsf	242,5,c	;volatile
  4872  003796                     
  4873                           ;servo.c: 113:     INTCONbits.TMR0IF = 0;
  4874  003796  94F2               	bcf	242,2,c	;volatile
  4875  003798                     
  4876                           ;servo.c: 114:     INTCON2bits.TMR0IP = 1;
  4877  003798  84F1               	bsf	241,2,c	;volatile
  4878  00379A                     
  4879                           ;servo.c: 120:     PIR2bits.TMR3IF = 0;
  4880  00379A  92A1               	bcf	161,1,c	;volatile
  4881  00379C                     
  4882                           ;servo.c: 121:     IPR2bits.TMR3IP = 0;
  4883  00379C  92A2               	bcf	162,1,c	;volatile
  4884  00379E                     
  4885                           ;servo.c: 122:     PIE2bits.TMR3IE = 1;
  4886  00379E  82A0               	bsf	160,1,c	;volatile
  4887  0037A0  0012               	return		;funcret
  4888  0037A2                     __end_of_appTimerInit:
  4889                           	callstack 0
  4890                           
  4891 ;; *************** function _appLCD_Init *****************
  4892 ;; Defined at:
  4893 ;;		line 197 in file "flex_lcd.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;		None
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4907 ;;      Params:         0       0       0       0       0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4909 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4910 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4911 ;;Total ram usage:        2 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    4
  4914 ;; This function calls:
  4915 ;;		_Lcd_Cmd
  4916 ;;		_Lcd_Init
  4917 ;;		_Lcd_Out
  4918 ;; This function is called by:
  4919 ;;		_appInit
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text25
  4924  003122                     __ptext25:
  4925                           	callstack 0
  4926  003122                     _appLCD_Init:
  4927                           	callstack 25
  4928  003122                     
  4929                           ;flex_lcd.c: 199:     Lcd_Init();
  4930  003122  EC3D  F016         	call	_Lcd_Init	;wreg free
  4931                           
  4932                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  4933  003126  0E01               	movlw	1
  4934  003128  EC81  F012         	call	_Lcd_Cmd
  4935                           
  4936                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  4937  00312C  0E0C               	movlw	12
  4938  00312E  EC81  F012         	call	_Lcd_Cmd
  4939  003132                     
  4940                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  4941  003132  0E02               	movlw	2
  4942  003134  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4943  003136  0E86               	movlw	134
  4944  003138  6E11               	movwf	??_appLCD_Init^0,c
  4945  00313A  0E99               	movlw	153
  4946  00313C                     u4557:
  4947  00313C  2EE8               	decfsz	wreg,f,c
  4948  00313E  D7FE               	bra	u4557
  4949  003140  2E11               	decfsz	??_appLCD_Init^0,f,c
  4950  003142  D7FC               	bra	u4557
  4951  003144  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4952  003146  D7FA               	bra	u4557
  4953  003148  F000               	nop	
  4954  00314A                     
  4955                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  4956  00314A  0E03               	movlw	3
  4957  00314C  6E0A               	movwf	Lcd_Out@x^0,c
  4958  00314E  0E54               	movlw	low STR_3
  4959  003150  6E0B               	movwf	Lcd_Out@buffer^0,c
  4960  003152  0E08               	movlw	high STR_3
  4961  003154  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  4962  003156  0E01               	movlw	1
  4963  003158  EC11  F015         	call	_Lcd_Out
  4964  00315C                     
  4965                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  4966  00315C  0E06               	movlw	6
  4967  00315E  6E0A               	movwf	Lcd_Out@x^0,c
  4968  003160  0E73               	movlw	low STR_4
  4969  003162  6E0B               	movwf	Lcd_Out@buffer^0,c
  4970  003164  0E08               	movlw	high STR_4
  4971  003166  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  4972  003168  0E02               	movlw	2
  4973  00316A  EC11  F015         	call	_Lcd_Out
  4974  00316E                     
  4975                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  4976  00316E  0E1F               	movlw	31
  4977  003170  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4978  003172  0E71               	movlw	113
  4979  003174  6E11               	movwf	??_appLCD_Init^0,c
  4980  003176  0E1E               	movlw	30
  4981  003178                     u4567:
  4982  003178  2EE8               	decfsz	wreg,f,c
  4983  00317A  D7FE               	bra	u4567
  4984  00317C  2E11               	decfsz	??_appLCD_Init^0,f,c
  4985  00317E  D7FC               	bra	u4567
  4986  003180  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4987  003182  D7FA               	bra	u4567
  4988  003184  D000               	nop2	
  4989                           
  4990                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  4991  003186  0E01               	movlw	1
  4992  003188  EC81  F012         	call	_Lcd_Cmd
  4993  00318C  0E02               	movlw	2
  4994  00318E  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4995  003190  0E86               	movlw	134
  4996  003192  6E11               	movwf	??_appLCD_Init^0,c
  4997  003194  0E99               	movlw	153
  4998  003196                     u4577:
  4999  003196  2EE8               	decfsz	wreg,f,c
  5000  003198  D7FE               	bra	u4577
  5001  00319A  2E11               	decfsz	??_appLCD_Init^0,f,c
  5002  00319C  D7FC               	bra	u4577
  5003  00319E  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  5004  0031A0  D7FA               	bra	u4577
  5005  0031A2  F000               	nop	
  5006  0031A4  0012               	return		;funcret
  5007  0031A6                     __end_of_appLCD_Init:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function _Lcd_Init *****************
  5011 ;; Defined at:
  5012 ;;		line 31 in file "flex_lcd.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;		None
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  i               1   10[COMRAM] unsigned char 
  5017 ;;  data            1    0        unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5027 ;;      Params:         0       0       0       0       0       0       0       0       0
  5028 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5029 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5030 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5031 ;;Total ram usage:        3 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    3
  5034 ;; This function calls:
  5035 ;;		_Lcd_Cmd
  5036 ;; This function is called by:
  5037 ;;		_appLCD_Init
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text26
  5042  002C7A                     __ptext26:
  5043                           	callstack 0
  5044  002C7A                     _Lcd_Init:
  5045                           	callstack 25
  5046  002C7A                     
  5047                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  5048  002C7A  9E95               	bcf	149,7,c	;volatile
  5049                           
  5050                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  5051  002C7C  9C95               	bcf	149,6,c	;volatile
  5052                           
  5053                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  5054  002C7E  9A95               	bcf	149,5,c	;volatile
  5055                           
  5056                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  5057  002C80  9895               	bcf	149,4,c	;volatile
  5058                           
  5059                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  5060  002C82  9695               	bcf	149,3,c	;volatile
  5061                           
  5062                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  5063  002C84  9495               	bcf	149,2,c	;volatile
  5064  002C86                     
  5065                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  5066  002C86  0E85               	movlw	133
  5067  002C88  6E0A               	movwf	??_Lcd_Init^0,c
  5068  002C8A  0E76               	movlw	118
  5069  002C8C                     u4587:
  5070  002C8C  2EE8               	decfsz	wreg,f,c
  5071  002C8E  D7FE               	bra	u4587
  5072  002C90  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5073  002C92  D7FC               	bra	u4587
  5074  002C94  D000               	nop2	
  5075  002C96                     
  5076                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  5077  002C96  0E00               	movlw	0
  5078  002C98  6E0B               	movwf	Lcd_Init@i^0,c
  5079  002C9A                     l154:
  5080                           
  5081                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  5082  002C9A  9E8C               	bcf	140,7,c	;volatile
  5083                           
  5084                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  5085  002C9C  9C8C               	bcf	140,6,c	;volatile
  5086                           
  5087                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  5088  002C9E  8A8C               	bsf	140,5,c	;volatile
  5089                           
  5090                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  5091  002CA0  888C               	bsf	140,4,c	;volatile
  5092                           
  5093                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  5094  002CA2  968C               	bcf	140,3,c	;volatile
  5095                           
  5096                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  5097  002CA4  948C               	bcf	140,2,c	;volatile
  5098                           
  5099                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  5100  002CA6  9E8C               	bcf	140,7,c	;volatile
  5101                           
  5102                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  5103  002CA8  9C8C               	bcf	140,6,c	;volatile
  5104                           
  5105                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  5106  002CAA  8A8C               	bsf	140,5,c	;volatile
  5107                           
  5108                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  5109  002CAC  888C               	bsf	140,4,c	;volatile
  5110                           
  5111                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  5112  002CAE  868C               	bsf	140,3,c	;volatile
  5113                           
  5114                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  5115  002CB0  948C               	bcf	140,2,c	;volatile
  5116  002CB2                     
  5117                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  5118  002CB2  0E05               	movlw	5
  5119  002CB4                     u4597:
  5120  002CB4  2EE8               	decfsz	wreg,f,c
  5121  002CB6  D7FE               	bra	u4597
  5122  002CB8                     
  5123                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  5124  002CB8  9E8C               	bcf	140,7,c	;volatile
  5125  002CBA                     
  5126                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  5127  002CBA  9C8C               	bcf	140,6,c	;volatile
  5128  002CBC                     
  5129                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  5130  002CBC  8A8C               	bsf	140,5,c	;volatile
  5131  002CBE                     
  5132                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  5133  002CBE  888C               	bsf	140,4,c	;volatile
  5134  002CC0                     
  5135                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  5136  002CC0  968C               	bcf	140,3,c	;volatile
  5137  002CC2                     
  5138                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  5139  002CC2  948C               	bcf	140,2,c	;volatile
  5140                           
  5141                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5142  002CC4  0E16               	movlw	22
  5143  002CC6  6E0A               	movwf	??_Lcd_Init^0,c
  5144  002CC8  0E6C               	movlw	108
  5145  002CCA                     u4607:
  5146  002CCA  2EE8               	decfsz	wreg,f,c
  5147  002CCC  D7FE               	bra	u4607
  5148  002CCE  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5149  002CD0  D7FC               	bra	u4607
  5150  002CD2  D000               	nop2	
  5151  002CD4                     
  5152                           ;flex_lcd.c: 61:     }
  5153  002CD4  2A0B               	incf	Lcd_Init@i^0,f,c
  5154  002CD6  0E03               	movlw	3
  5155  002CD8  640B               	cpfsgt	Lcd_Init@i^0,c
  5156  002CDA  EF71  F016         	goto	u3091
  5157  002CDE  EF73  F016         	goto	u3090
  5158  002CE2                     u3091:
  5159  002CE2  EF4D  F016         	goto	l154
  5160  002CE6                     u3090:
  5161  002CE6                     
  5162                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  5163  002CE6  9E8C               	bcf	140,7,c	;volatile
  5164                           
  5165                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  5166  002CE8  9C8C               	bcf	140,6,c	;volatile
  5167                           
  5168                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  5169  002CEA  8A8C               	bsf	140,5,c	;volatile
  5170                           
  5171                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  5172  002CEC  988C               	bcf	140,4,c	;volatile
  5173                           
  5174                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  5175  002CEE  968C               	bcf	140,3,c	;volatile
  5176                           
  5177                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  5178  002CF0  948C               	bcf	140,2,c	;volatile
  5179                           
  5180                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  5181  002CF2  9E8C               	bcf	140,7,c	;volatile
  5182                           
  5183                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  5184  002CF4  9C8C               	bcf	140,6,c	;volatile
  5185                           
  5186                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  5187  002CF6  8A8C               	bsf	140,5,c	;volatile
  5188                           
  5189                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  5190  002CF8  988C               	bcf	140,4,c	;volatile
  5191                           
  5192                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  5193  002CFA  868C               	bsf	140,3,c	;volatile
  5194                           
  5195                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  5196  002CFC  948C               	bcf	140,2,c	;volatile
  5197  002CFE                     
  5198                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  5199  002CFE  0E05               	movlw	5
  5200  002D00                     u4617:
  5201  002D00  2EE8               	decfsz	wreg,f,c
  5202  002D02  D7FE               	bra	u4617
  5203  002D04                     
  5204                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  5205  002D04  9E8C               	bcf	140,7,c	;volatile
  5206  002D06                     
  5207                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  5208  002D06  9C8C               	bcf	140,6,c	;volatile
  5209  002D08                     
  5210                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  5211  002D08  8A8C               	bsf	140,5,c	;volatile
  5212  002D0A                     
  5213                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  5214  002D0A  988C               	bcf	140,4,c	;volatile
  5215  002D0C                     
  5216                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  5217  002D0C  968C               	bcf	140,3,c	;volatile
  5218  002D0E                     
  5219                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  5220  002D0E  948C               	bcf	140,2,c	;volatile
  5221                           
  5222                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5223  002D10  0E16               	movlw	22
  5224  002D12  6E0A               	movwf	??_Lcd_Init^0,c
  5225  002D14  0E6C               	movlw	108
  5226  002D16                     u4627:
  5227  002D16  2EE8               	decfsz	wreg,f,c
  5228  002D18  D7FE               	bra	u4627
  5229  002D1A  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5230  002D1C  D7FC               	bra	u4627
  5231  002D1E  D000               	nop2	
  5232  002D20                     
  5233                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  5234  002D20  0E28               	movlw	40
  5235  002D22  EC81  F012         	call	_Lcd_Cmd
  5236  002D26                     
  5237                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  5238  002D26  0E10               	movlw	16
  5239  002D28  EC81  F012         	call	_Lcd_Cmd
  5240  002D2C                     
  5241                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  5242  002D2C  0E01               	movlw	1
  5243  002D2E  EC81  F012         	call	_Lcd_Cmd
  5244  002D32                     
  5245                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  5246  002D32  0E0F               	movlw	15
  5247  002D34  EC81  F012         	call	_Lcd_Cmd
  5248  002D38  0012               	return		;funcret
  5249  002D3A                     __end_of_Lcd_Init:
  5250                           	callstack 0
  5251                           
  5252 ;; *************** function _appISRConfig *****************
  5253 ;; Defined at:
  5254 ;;		line 25 in file "app.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		None
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5268 ;;      Params:         0       0       0       0       0       0       0       0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5271 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5272 ;;Total ram usage:        0 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    2
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_appInit
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text27
  5283  003842                     __ptext27:
  5284                           	callstack 0
  5285  003842                     _appISRConfig:
  5286                           	callstack 27
  5287  003842                     
  5288                           ;app.c: 30:     RCONbits.IPEN = 1;
  5289  003842  8ED0               	bsf	208,7,c	;volatile
  5290                           
  5291                           ;app.c: 31:     INTCONbits.GIE_GIEH = 1;
  5292  003844  8EF2               	bsf	242,7,c	;volatile
  5293                           
  5294                           ;app.c: 32:     INTCONbits.PEIE_GIEL = 1;
  5295  003846  8CF2               	bsf	242,6,c	;volatile
  5296  003848  0012               	return		;funcret
  5297  00384A                     __end_of_appISRConfig:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _appCounterInit *****************
  5301 ;; Defined at:
  5302 ;;		line 136 in file "servo.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  reload          2    6[COMRAM] unsigned short 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		None
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5316 ;;      Params:         2       0       0       0       0       0       0       0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5319 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5320 ;;Total ram usage:        2 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    2
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_appInit
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text28
  5331  003838                     __ptext28:
  5332                           	callstack 0
  5333  003838                     _appCounterInit:
  5334                           	callstack 27
  5335  003838                     
  5336                           ;servo.c: 136: void appCounterInit(uint16_t reload);servo.c: 137: {;servo.c: 139:     TM
      +                          R0 = reload;
  5337  003838  C007  FFD6         	movff	appCounterInit@reload,4054	;volatile
  5338  00383C  C008  FFD7         	movff	appCounterInit@reload+1,4055	;volatile
  5339  003840  0012               	return		;funcret
  5340  003842                     __end_of_appCounterInit:
  5341                           	callstack 0
  5342                           
  5343 ;; *************** function _adcInit *****************
  5344 ;; Defined at:
  5345 ;;		line 10 in file "adc.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  ADC_PINs        1    wreg     unsigned char 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  ADC_PINs        1    7[COMRAM] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg, status,2, status,0
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5359 ;;      Params:         0       0       0       0       0       0       0       0       0
  5360 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5361 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5362 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5363 ;;Total ram usage:        2 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    2
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_appInit
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text29
  5374  00353E                     __ptext29:
  5375                           	callstack 0
  5376  00353E                     _adcInit:
  5377                           	callstack 27
  5378                           
  5379                           ;incstack = 0
  5380                           ;adcInit@ADC_PINs stored from wreg
  5381  00353E  6E08               	movwf	adcInit@ADC_PINs^0,c
  5382  003540                     
  5383                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  5384  003540  5008               	movf	adcInit@ADC_PINs^0,w,c
  5385  003542  A4D8               	btfss	status,2,c
  5386  003544  EFA6  F01A         	goto	u3791
  5387  003548  EFA8  F01A         	goto	u3790
  5388  00354C                     u3791:
  5389  00354C  EFAE  F01A         	goto	l4039
  5390  003550                     u3790:
  5391  003550                     
  5392                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  5393  003550  50C1               	movf	193,w,c	;volatile
  5394  003552  0BF0               	andlw	-16
  5395  003554  090E               	iorlw	14
  5396  003556  6EC1               	movwf	193,c	;volatile
  5397                           
  5398                           ;adc.c: 16:     }
  5399  003558  EFB6  F01A         	goto	l4041
  5400  00355C                     l4039:
  5401                           
  5402                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  5403  00355C  5008               	movf	adcInit@ADC_PINs^0,w,c
  5404  00355E  080F               	sublw	15
  5405  003560  6E07               	movwf	??_adcInit^0,c
  5406  003562  50C1               	movf	193,w,c	;volatile
  5407  003564  1807               	xorwf	??_adcInit^0,w,c
  5408  003566  0BF0               	andlw	-16
  5409  003568  1807               	xorwf	??_adcInit^0,w,c
  5410  00356A  6EC1               	movwf	193,c	;volatile
  5411  00356C                     l4041:
  5412                           
  5413                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  5414  00356C  0ECF               	movlw	-49
  5415  00356E  16C1               	andwf	193,f,c	;volatile
  5416  003570                     
  5417                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  5418  003570  50C0               	movf	192,w,c	;volatile
  5419  003572  0BC7               	andlw	-57
  5420  003574  0910               	iorlw	16
  5421  003576  6EC0               	movwf	192,c	;volatile
  5422  003578                     
  5423                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  5424  003578  50C0               	movf	192,w,c	;volatile
  5425  00357A  0BF8               	andlw	-8
  5426  00357C  0903               	iorlw	3
  5427  00357E  6EC0               	movwf	192,c	;volatile
  5428  003580                     
  5429                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  5430  003580  8EC0               	bsf	192,7,c	;volatile
  5431  003582                     
  5432                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  5433  003582  80C2               	bsf	194,0,c	;volatile
  5434  003584                     
  5435                           ;adc.c: 41:     TRISCbits.TRISC1 = 0;
  5436  003584  9294               	bcf	148,1,c	;volatile
  5437  003586  0012               	return		;funcret
  5438  003588                     __end_of_adcInit:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function _appTimerStop *****************
  5442 ;; Defined at:
  5443 ;;		line 131 in file "servo.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		None
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5457 ;;      Params:         0       0       0       0       0       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5461 ;;Total ram usage:        0 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:    2
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_appGetElements
  5468 ;;		_warning
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text30
  5473  00384E                     __ptext30:
  5474                           	callstack 0
  5475  00384E                     _appTimerStop:
  5476                           	callstack 27
  5477  00384E                     
  5478                           ;servo.c: 133:     T3CONbits.TMR3ON = 0;
  5479  00384E  90B1               	bcf	177,0,c	;volatile
  5480  003850  0012               	return		;funcret
  5481  003852                     __end_of_appTimerStop:
  5482                           	callstack 0
  5483                           
  5484 ;; *************** function _appTimerStart *****************
  5485 ;; Defined at:
  5486 ;;		line 124 in file "servo.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;		None
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		None
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5500 ;;      Params:         0       0       0       0       0       0       0       0       0
  5501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5503 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5504 ;;Total ram usage:        0 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    2
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_appGetElements
  5511 ;;		_warning
  5512 ;;		_confirmacion
  5513 ;;		_sendinformation
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text31
  5518  003852                     __ptext31:
  5519                           	callstack 0
  5520  003852                     _appTimerStart:
  5521                           	callstack 27
  5522  003852                     
  5523                           ;servo.c: 128:     T3CONbits.TMR3ON = 1;
  5524  003852  80B1               	bsf	177,0,c	;volatile
  5525  003854  0012               	return		;funcret
  5526  003856                     __end_of_appTimerStart:
  5527                           	callstack 0
  5528                           
  5529 ;; *************** function _appSubGiveElemts *****************
  5530 ;; Defined at:
  5531 ;;		line 106 in file "app.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  data            2   14[COMRAM] PTR struct _state
  5534 ;;		 -> datos(25), 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg, status,2, status,0, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5546 ;;      Params:         2       0       0       0       0       0       0       0       0
  5547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5549 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5550 ;;Total ram usage:        2 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    4
  5553 ;; This function calls:
  5554 ;;		_appCounterStart
  5555 ;;		_setServo
  5556 ;; This function is called by:
  5557 ;;		_appGetElements
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text32
  5562  003824                     __ptext32:
  5563                           	callstack 0
  5564  003824                     _appSubGiveElemts:
  5565                           	callstack 25
  5566  003824                     
  5567                           ;app.c: 106: void appSubGiveElemts(StateMachine *data);app.c: 107: {;app.c: 108:     app
      +                          CounterStart();
  5568  003824  EC2B  F01C         	call	_appCounterStart	;wreg free
  5569  003828                     
  5570                           ;app.c: 109:     setServo(39,10,2);
  5571  003828  0E0A               	movlw	10
  5572  00382A  6E0B               	movwf	setServo@pulsos^0,c
  5573  00382C  0E02               	movlw	2
  5574  00382E  6E0C               	movwf	setServo@pin^0,c
  5575  003830  0E27               	movlw	39
  5576  003832  ECD1  F01B         	call	_setServo
  5577  003836  0012               	return		;funcret
  5578  003838                     __end_of_appSubGiveElemts:
  5579                           	callstack 0
  5580                           
  5581 ;; *************** function _setServo *****************
  5582 ;; Defined at:
  5583 ;;		line 77 in file "servo.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  angle           1    wreg     unsigned char 
  5586 ;;  pulsos          1   10[COMRAM] unsigned char 
  5587 ;;  pin             1   11[COMRAM] unsigned char 
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  angle           1   12[COMRAM] unsigned char 
  5590 ;;  i               1   13[COMRAM] unsigned char 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2, status,0, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5600 ;;      Params:         2       0       0       0       0       0       0       0       0
  5601 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5603 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5604 ;;Total ram usage:        4 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    3
  5607 ;; This function calls:
  5608 ;;		_setServoAngle
  5609 ;; This function is called by:
  5610 ;;		_appInit
  5611 ;;		_appStateRecolectData
  5612 ;;		_appStateInitial
  5613 ;;		_appSubGiveElemts
  5614 ;;		_warning
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text33
  5619  0037A2                     __ptext33:
  5620                           	callstack 0
  5621  0037A2                     _setServo:
  5622                           	callstack 26
  5623                           
  5624                           ;incstack = 0
  5625                           ;setServo@angle stored from wreg
  5626  0037A2  6E0D               	movwf	setServo@angle^0,c
  5627  0037A4                     
  5628                           ;servo.c: 77: void setServo(uint8_t angle, uint8_t pulsos, uint8_t pin);servo.c: 78: {;s
      +                          ervo.c: 79:     for(uint8_t i = 0; i < pulsos; i++)
  5629  0037A4  0E00               	movlw	0
  5630  0037A6  6E0E               	movwf	setServo@i^0,c
  5631  0037A8  EFDC  F01B         	goto	l3615
  5632  0037AC                     l3611:
  5633                           
  5634                           ;servo.c: 80:     {;servo.c: 81:         setServoAngle(angle, pin);
  5635  0037AC  C00C  F007         	movff	setServo@pin,setServoAngle@pin
  5636  0037B0  500D               	movf	setServo@angle^0,w,c
  5637  0037B2  EC16  F013         	call	_setServoAngle
  5638  0037B6                     
  5639                           ;servo.c: 82:     }
  5640  0037B6  2A0E               	incf	setServo@i^0,f,c
  5641  0037B8                     l3615:
  5642  0037B8  500B               	movf	setServo@pulsos^0,w,c
  5643  0037BA  5C0E               	subwf	setServo@i^0,w,c
  5644  0037BC  A0D8               	btfss	status,0,c
  5645  0037BE  EFE3  F01B         	goto	u3101
  5646  0037C2  EFE5  F01B         	goto	u3100
  5647  0037C6                     u3101:
  5648  0037C6  EFD6  F01B         	goto	l3611
  5649  0037CA                     u3100:
  5650  0037CA  0012               	return		;funcret
  5651  0037CC                     __end_of_setServo:
  5652                           	callstack 0
  5653                           
  5654 ;; *************** function _setServoAngle *****************
  5655 ;; Defined at:
  5656 ;;		line 20 in file "servo.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  angle           1    wreg     unsigned char 
  5659 ;;  pin             1    6[COMRAM] unsigned char 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  angle           1    9[COMRAM] unsigned char 
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5671 ;;      Params:         1       0       0       0       0       0       0       0       0
  5672 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5673 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5674 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5675 ;;Total ram usage:        4 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    2
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_setServo
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text34
  5686  00262C                     __ptext34:
  5687                           	callstack 0
  5688  00262C                     _setServoAngle:
  5689                           	callstack 26
  5690                           
  5691                           ;incstack = 0
  5692                           ;setServoAngle@angle stored from wreg
  5693  00262C  6E0A               	movwf	setServoAngle@angle^0,c
  5694  00262E                     
  5695                           ;servo.c: 20: void setServoAngle(uint8_t angle, uint8_t pin);servo.c: 21: {;servo.c: 23:
      +                               TMR2 = angle;
  5696  00262E  C00A  FFCC         	movff	setServoAngle@angle,4044	;volatile
  5697  002632                     
  5698                           ;servo.c: 24:     PR2 = 255;
  5699  002632  68CB               	setf	203,c	;volatile
  5700  002634                     
  5701                           ;servo.c: 26:     PIR1bits.TMR2IF = 0;
  5702  002634  929E               	bcf	158,1,c	;volatile
  5703                           
  5704                           ;servo.c: 28:     switch(pin)
  5705  002636  EF26  F013         	goto	l3357
  5706  00263A                     l238:
  5707                           
  5708                           ;servo.c: 31:             LATEbits.LATE0 = 1;
  5709  00263A  808D               	bsf	141,0,c	;volatile
  5710                           
  5711                           ;servo.c: 32:             break;
  5712  00263C  EF3F  F013         	goto	l3359
  5713  002640                     l240:
  5714                           
  5715                           ;servo.c: 34:             LATEbits.LATE1 = 1;
  5716  002640  828D               	bsf	141,1,c	;volatile
  5717                           
  5718                           ;servo.c: 35:             break;
  5719  002642  EF3F  F013         	goto	l3359
  5720  002646                     l241:
  5721                           
  5722                           ;servo.c: 37:             LATEbits.LATE2 = 1;
  5723  002646  848D               	bsf	141,2,c	;volatile
  5724                           
  5725                           ;servo.c: 38:             break;
  5726  002648  EF3F  F013         	goto	l3359
  5727  00264C                     l3357:
  5728  00264C  5007               	movf	setServoAngle@pin^0,w,c
  5729  00264E  6E08               	movwf	??_setServoAngle^0,c
  5730  002650  6A09               	clrf	(??_setServoAngle+1)^0,c
  5731                           
  5732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5733                           ; Switch size 1, requested type "simple"
  5734                           ; Number of cases is 1, Range of values is 0 to 0
  5735                           ; switch strategies available:
  5736                           ; Name         Instructions Cycles
  5737                           ; simple_byte            4     3 (average)
  5738                           ;	Chosen strategy is simple_byte
  5739  002652  5009               	movf	(??_setServoAngle+1)^0,w,c
  5740  002654  0A00               	xorlw	0	; case 0
  5741  002656  B4D8               	btfsc	status,2,c
  5742  002658  EF30  F013         	goto	l5021
  5743  00265C  EF3F  F013         	goto	l3359
  5744  002660                     l5021:
  5745                           
  5746                           ; Switch size 1, requested type "simple"
  5747                           ; Number of cases is 3, Range of values is 0 to 2
  5748                           ; switch strategies available:
  5749                           ; Name         Instructions Cycles
  5750                           ; simple_byte           10     6 (average)
  5751                           ;	Chosen strategy is simple_byte
  5752  002660  5008               	movf	??_setServoAngle^0,w,c
  5753  002662  0A00               	xorlw	0	; case 0
  5754  002664  B4D8               	btfsc	status,2,c
  5755  002666  EF1D  F013         	goto	l238
  5756  00266A  0A01               	xorlw	1	; case 1
  5757  00266C  B4D8               	btfsc	status,2,c
  5758  00266E  EF20  F013         	goto	l240
  5759  002672  0A03               	xorlw	3	; case 2
  5760  002674  B4D8               	btfsc	status,2,c
  5761  002676  EF23  F013         	goto	l241
  5762  00267A  EF3F  F013         	goto	l3359
  5763  00267E                     l3359:
  5764                           
  5765                           ;servo.c: 41:     if(angle == 45)
  5766  00267E  0E2D               	movlw	45
  5767  002680  180A               	xorwf	setServoAngle@angle^0,w,c
  5768  002682  A4D8               	btfss	status,2,c
  5769  002684  EF46  F013         	goto	u2771
  5770  002688  EF48  F013         	goto	u2770
  5771  00268C                     u2771:
  5772  00268C  EF51  F013         	goto	l3363
  5773  002690                     u2770:
  5774  002690                     
  5775                           ;servo.c: 42:     {;servo.c: 43:         _delay((unsigned long)((2000)*(12000000/4000000
      +                          .0)));
  5776  002690  0E08               	movlw	8
  5777  002692  6E08               	movwf	??_setServoAngle^0,c
  5778  002694  0ECA               	movlw	202
  5779  002696                     u4637:
  5780  002696  2EE8               	decfsz	wreg,f,c
  5781  002698  D7FE               	bra	u4637
  5782  00269A  2E08               	decfsz	??_setServoAngle^0,f,c
  5783  00269C  D7FC               	bra	u4637
  5784                           
  5785                           ;servo.c: 44:     }
  5786  00269E  EF75  F013         	goto	l3371
  5787  0026A2                     l3363:
  5788  0026A2  0E21               	movlw	33
  5789  0026A4  180A               	xorwf	setServoAngle@angle^0,w,c
  5790  0026A6  A4D8               	btfss	status,2,c
  5791  0026A8  EF58  F013         	goto	u2781
  5792  0026AC  EF5A  F013         	goto	u2780
  5793  0026B0                     u2781:
  5794  0026B0  EF64  F013         	goto	l3367
  5795  0026B4                     u2780:
  5796  0026B4                     
  5797                           ;servo.c: 46:     {;servo.c: 47:         _delay((unsigned long)((1000)*(12000000/4000000
      +                          .0)));
  5798  0026B4  0E04               	movlw	4
  5799  0026B6  6E08               	movwf	??_setServoAngle^0,c
  5800  0026B8  0EE4               	movlw	228
  5801  0026BA                     u4647:
  5802  0026BA  2EE8               	decfsz	wreg,f,c
  5803  0026BC  D7FE               	bra	u4647
  5804  0026BE  2E08               	decfsz	??_setServoAngle^0,f,c
  5805  0026C0  D7FC               	bra	u4647
  5806  0026C2  D000               	nop2	
  5807                           
  5808                           ;servo.c: 48:     }
  5809  0026C4  EF75  F013         	goto	l3371
  5810  0026C8                     l3367:
  5811  0026C8  0E27               	movlw	39
  5812  0026CA  180A               	xorwf	setServoAngle@angle^0,w,c
  5813  0026CC  A4D8               	btfss	status,2,c
  5814  0026CE  EF6B  F013         	goto	u2791
  5815  0026D2  EF6D  F013         	goto	u2790
  5816  0026D6                     u2791:
  5817  0026D6  EF75  F013         	goto	l3371
  5818  0026DA                     u2790:
  5819  0026DA                     
  5820                           ;servo.c: 50:     {;servo.c: 51:         _delay((unsigned long)((1500)*(12000000/4000000
      +                          .0)));
  5821  0026DA  0E06               	movlw	6
  5822  0026DC  6E08               	movwf	??_setServoAngle^0,c
  5823  0026DE  0ED7               	movlw	215
  5824  0026E0                     u4657:
  5825  0026E0  2EE8               	decfsz	wreg,f,c
  5826  0026E2  D7FE               	bra	u4657
  5827  0026E4  2E08               	decfsz	??_setServoAngle^0,f,c
  5828  0026E6  D7FC               	bra	u4657
  5829  0026E8  F000               	nop	
  5830  0026EA                     l3371:
  5831                           
  5832                           ;servo.c: 54:     T2CONbits.TMR2ON = 1;
  5833  0026EA  84CA               	bsf	202,2,c	;volatile
  5834                           
  5835                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5836  0026EC  EF9A  F013         	goto	l247
  5837  0026F0                     l250:
  5838                           
  5839                           ;servo.c: 60:                 LATEbits.LATE0 = 0;
  5840  0026F0  908D               	bcf	141,0,c	;volatile
  5841                           
  5842                           ;servo.c: 61:                 break;
  5843  0026F2  EF9A  F013         	goto	l247
  5844  0026F6                     l252:
  5845                           
  5846                           ;servo.c: 63:                 LATEbits.LATE1 = 0;
  5847  0026F6  928D               	bcf	141,1,c	;volatile
  5848                           
  5849                           ;servo.c: 64:                 break;
  5850  0026F8  EF9A  F013         	goto	l247
  5851  0026FC                     l253:
  5852                           
  5853                           ;servo.c: 66:                 LATEbits.LATE2 = 0;
  5854  0026FC  948D               	bcf	141,2,c	;volatile
  5855                           
  5856                           ;servo.c: 67:                 break;
  5857  0026FE  EF9A  F013         	goto	l247
  5858  002702                     l3375:
  5859  002702  5007               	movf	setServoAngle@pin^0,w,c
  5860  002704  6E08               	movwf	??_setServoAngle^0,c
  5861  002706  6A09               	clrf	(??_setServoAngle+1)^0,c
  5862                           
  5863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5864                           ; Switch size 1, requested type "simple"
  5865                           ; Number of cases is 1, Range of values is 0 to 0
  5866                           ; switch strategies available:
  5867                           ; Name         Instructions Cycles
  5868                           ; simple_byte            4     3 (average)
  5869                           ;	Chosen strategy is simple_byte
  5870  002708  5009               	movf	(??_setServoAngle+1)^0,w,c
  5871  00270A  0A00               	xorlw	0	; case 0
  5872  00270C  B4D8               	btfsc	status,2,c
  5873  00270E  EF8B  F013         	goto	l5023
  5874  002712  EF9A  F013         	goto	l247
  5875  002716                     l5023:
  5876                           
  5877                           ; Switch size 1, requested type "simple"
  5878                           ; Number of cases is 3, Range of values is 0 to 2
  5879                           ; switch strategies available:
  5880                           ; Name         Instructions Cycles
  5881                           ; simple_byte           10     6 (average)
  5882                           ;	Chosen strategy is simple_byte
  5883  002716  5008               	movf	??_setServoAngle^0,w,c
  5884  002718  0A00               	xorlw	0	; case 0
  5885  00271A  B4D8               	btfsc	status,2,c
  5886  00271C  EF78  F013         	goto	l250
  5887  002720  0A01               	xorlw	1	; case 1
  5888  002722  B4D8               	btfsc	status,2,c
  5889  002724  EF7B  F013         	goto	l252
  5890  002728  0A03               	xorlw	3	; case 2
  5891  00272A  B4D8               	btfsc	status,2,c
  5892  00272C  EF7E  F013         	goto	l253
  5893  002730  EF9A  F013         	goto	l247
  5894  002734                     l247:
  5895                           
  5896                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5897  002734  A29E               	btfss	158,1,c	;volatile
  5898  002736  EF9F  F013         	goto	u2801
  5899  00273A  EFA1  F013         	goto	u2800
  5900  00273E                     u2801:
  5901  00273E  EF81  F013         	goto	l3375
  5902  002742                     u2800:
  5903  002742                     
  5904                           ;servo.c: 71:     T2CONbits.TMR2ON = 0;
  5905  002742  94CA               	bcf	202,2,c	;volatile
  5906                           
  5907                           ;servo.c: 72:     PIR1bits.TMR2IF = 0;
  5908  002744  929E               	bcf	158,1,c	;volatile
  5909  002746  0012               	return		;funcret
  5910  002748                     __end_of_setServoAngle:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function _appCounterStart *****************
  5914 ;; Defined at:
  5915 ;;		line 142 in file "servo.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		None
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5932 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5933 ;;Total ram usage:        0 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    2
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_appSubGiveElemts
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text35
  5944  003856                     __ptext35:
  5945                           	callstack 0
  5946  003856                     _appCounterStart:
  5947                           	callstack 26
  5948  003856                     
  5949                           ;servo.c: 145:     T0CONbits.TMR0ON = 1;
  5950  003856  8ED5               	bsf	213,7,c	;volatile
  5951  003858  0012               	return		;funcret
  5952  00385A                     __end_of_appCounterStart:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function _appSubGetData *****************
  5956 ;; Defined at:
  5957 ;;		line 86 in file "app.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  5960 ;;		 -> datos(25), 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  cantidad        2   38[BANK0 ] unsigned short 
  5963 ;;  inout           1   40[BANK0 ] unsigned char 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5973 ;;      Params:         0       2       0       0       0       0       0       0       0
  5974 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5976 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5977 ;;Total ram usage:        5 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:   10
  5980 ;; This function calls:
  5981 ;;		_Lcd_Out
  5982 ;;		___wmul
  5983 ;;		_memset
  5984 ;;		_sprintf
  5985 ;;		_teclado
  5986 ;; This function is called by:
  5987 ;;		_appGetElements
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text36
  5992  002850                     __ptext36:
  5993                           	callstack 0
  5994  002850                     _appSubGetData:
  5995                           	callstack 19
  5996  002850                     
  5997                           ;app.c: 86: void appSubGetData(StateMachine *data_Inout);app.c: 87: {;app.c: 88:     uin
      +                          t16_t cantidad = 0;
  5998  002850  0E00               	movlw	0
  5999  002852  0100               	movlb	0	; () banked
  6000  002854  6FBD               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  6001  002856  0E00               	movlw	0
  6002  002858  6FBC               	movwf	appSubGetData@cantidad& (0+255),b
  6003                           
  6004                           ;app.c: 89:     uint8_t inout = 0;
  6005  00285A  0E00               	movlw	0
  6006  00285C  6FBE               	movwf	appSubGetData@inout& (0+255),b
  6007  00285E                     
  6008                           ; BSR set to: 0
  6009                           ;app.c: 90:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  6010  00285E  0E07               	movlw	7
  6011  002860  25BA               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6012  002862  6E07               	movwf	memset@dest^0,c
  6013  002864  0E00               	movlw	0
  6014  002866  21BB               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6015  002868  6E08               	movwf	(memset@dest+1)^0,c
  6016  00286A  0E00               	movlw	0
  6017  00286C  6E0A               	movwf	(memset@c+1)^0,c
  6018  00286E  0E00               	movlw	0
  6019  002870  6E09               	movwf	memset@c^0,c
  6020  002872  0E00               	movlw	0
  6021  002874  6E0C               	movwf	(memset@n+1)^0,c
  6022  002876  0E10               	movlw	16
  6023  002878  6E0B               	movwf	memset@n^0,c
  6024  00287A  EC6D  F010         	call	_memset	;wreg free
  6025  00287E                     
  6026                           ;app.c: 91:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  6027  00287E  0E00               	movlw	0
  6028  002880  6E0A               	movwf	Lcd_Out@x^0,c
  6029  002882  0E12               	movlw	low STR_6
  6030  002884  6E0B               	movwf	Lcd_Out@buffer^0,c
  6031  002886  0E08               	movlw	high STR_6
  6032  002888  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6033  00288A  0E01               	movlw	1
  6034  00288C  EC11  F015         	call	_Lcd_Out
  6035                           
  6036                           ;app.c: 92:     while(inout != '*')
  6037  002890  EF92  F014         	goto	l4737
  6038  002894                     l4725:
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;app.c: 93:     {;app.c: 94:         teclado(&inout);
  6042  002894  0EBE               	movlw	low appSubGetData@inout
  6043  002896  6E07               	movwf	teclado@valor^0,c
  6044  002898  0E00               	movlw	high appSubGetData@inout
  6045  00289A  6E08               	movwf	(teclado@valor+1)^0,c
  6046  00289C  EC47  F00B         	call	_teclado	;wreg free
  6047  0028A0                     
  6048                           ;app.c: 96:         if((inout >= '0') && (inout <= '9'))
  6049  0028A0  0E2F               	movlw	47
  6050  0028A2  0100               	movlb	0	; () banked
  6051  0028A4  65BE               	cpfsgt	appSubGetData@inout& (0+255),b
  6052  0028A6  EF57  F014         	goto	u4291
  6053  0028AA  EF59  F014         	goto	u4290
  6054  0028AE                     u4291:
  6055  0028AE  EF76  F014         	goto	l4733
  6056  0028B2                     u4290:
  6057  0028B2                     
  6058                           ; BSR set to: 0
  6059  0028B2  0E3A               	movlw	58
  6060  0028B4  61BE               	cpfslt	appSubGetData@inout& (0+255),b
  6061  0028B6  EF5F  F014         	goto	u4301
  6062  0028BA  EF61  F014         	goto	u4300
  6063  0028BE                     u4301:
  6064  0028BE  EF76  F014         	goto	l4733
  6065  0028C2                     u4300:
  6066  0028C2                     
  6067                           ; BSR set to: 0
  6068                           ;app.c: 97:         {;app.c: 98:             cantidad = (cantidad*10)+(inout - 48);
  6069  0028C2  C0BC  F007         	movff	appSubGetData@cantidad,___wmul@multiplier
  6070  0028C6  C0BD  F008         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  6071  0028CA  0E00               	movlw	0
  6072  0028CC  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  6073  0028CE  0E0A               	movlw	10
  6074  0028D0  6E09               	movwf	___wmul@multiplicand^0,c
  6075  0028D2  ECE6  F01B         	call	___wmul	;wreg free
  6076  0028D6  0100               	movlb	0	; () banked
  6077  0028D8  51BE               	movf	appSubGetData@inout& (0+255),w,b
  6078  0028DA  2607               	addwf	?___wmul^0,f,c
  6079  0028DC  0E00               	movlw	0
  6080  0028DE  2208               	addwfc	(?___wmul+1)^0,f,c
  6081  0028E0  0ED0               	movlw	208
  6082  0028E2  2407               	addwf	?___wmul^0,w,c
  6083  0028E4  6FBC               	movwf	appSubGetData@cantidad& (0+255),b
  6084  0028E6  0EFF               	movlw	255
  6085  0028E8  2008               	addwfc	(?___wmul+1)^0,w,c
  6086  0028EA  6FBD               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  6087  0028EC                     l4733:
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;app.c: 100:         sprintf((char *)data_Inout->display,"%d",cantidad);
  6091  0028EC  0E07               	movlw	7
  6092  0028EE  25BA               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6093  0028F0  6FA8               	movwf	sprintf@s& (0+255),b
  6094  0028F2  0E00               	movlw	0
  6095  0028F4  21BB               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6096  0028F6  6FA9               	movwf	(sprintf@s+1)& (0+255),b
  6097  0028F8  0E7B               	movlw	low (STR_5+2)
  6098  0028FA  6FAA               	movwf	sprintf@fmt& (0+255),b
  6099  0028FC  0E08               	movlw	high (STR_5+2)
  6100  0028FE  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  6101  002900  C0BC  F0AC         	movff	appSubGetData@cantidad,?_sprintf+4
  6102  002904  C0BD  F0AD         	movff	appSubGetData@cantidad+1,?_sprintf+5
  6103  002908  EC03  F01A         	call	_sprintf	;wreg free
  6104  00290C                     
  6105                           ;app.c: 101:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  6106  00290C  0E00               	movlw	0
  6107  00290E  6E0A               	movwf	Lcd_Out@x^0,c
  6108  002910  0E07               	movlw	7
  6109  002912  0100               	movlb	0	; () banked
  6110  002914  25BA               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6111  002916  6E0B               	movwf	Lcd_Out@buffer^0,c
  6112  002918  0E00               	movlw	0
  6113  00291A  21BB               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6114  00291C  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6115  00291E  0E02               	movlw	2
  6116  002920  EC11  F015         	call	_Lcd_Out
  6117  002924                     l4737:
  6118                           
  6119                           ;app.c: 92:     while(inout != '*')
  6120  002924  0E2A               	movlw	42
  6121  002926  0100               	movlb	0	; () banked
  6122  002928  19BE               	xorwf	appSubGetData@inout& (0+255),w,b
  6123  00292A  A4D8               	btfss	status,2,c
  6124  00292C  EF9A  F014         	goto	u4311
  6125  002930  EF9C  F014         	goto	u4310
  6126  002934                     u4311:
  6127  002934  EF4A  F014         	goto	l4725
  6128  002938                     u4310:
  6129  002938                     
  6130                           ; BSR set to: 0
  6131                           ;app.c: 103:     data_Inout->elements += (int16_t)cantidad;
  6132  002938  EE20 F001          	lfsr	2,1
  6133  00293C  51BA               	movf	appSubGetData@data_Inout& (0+255),w,b
  6134  00293E  26D9               	addwf	fsr2l,f,c
  6135  002940  51BB               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  6136  002942  22DA               	addwfc	fsr2h,f,c
  6137  002944  51BC               	movf	appSubGetData@cantidad& (0+255),w,b
  6138  002946  26DE               	addwf	postinc2,f,c
  6139  002948  51BD               	movf	(appSubGetData@cantidad+1)& (0+255),w,b
  6140  00294A  22DD               	addwfc	postdec2,f,c
  6141  00294C                     
  6142                           ; BSR set to: 0
  6143  00294C  0012               	return		;funcret
  6144  00294E                     __end_of_appSubGetData:
  6145                           	callstack 0
  6146                           
  6147 ;; *************** function _teclado *****************
  6148 ;; Defined at:
  6149 ;;		line 10 in file "teclado.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  valor           2    6[COMRAM] PTR unsigned char 
  6152 ;;		 -> appSubGetData@inout(1), datos(25), 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  1    wreg      void 
  6157 ;; Registers used:
  6158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6164 ;;      Params:         2       0       0       0       0       0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6167 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6168 ;;Total ram usage:        2 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    2
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_appStateInitial
  6175 ;;		_appSubGetData
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text37
  6180  00168E                     __ptext37:
  6181                           	callstack 0
  6182  00168E                     _teclado:
  6183                           	callstack 27
  6184  00168E                     
  6185                           ;teclado.c: 11:     *valor = 0;
  6186  00168E  C007  FFD9         	movff	teclado@valor,fsr2l
  6187  001692  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6188  001696  0E00               	movlw	0
  6189  001698  6EDF               	movwf	indf2,c
  6190  00169A                     
  6191                           ;teclado.c: 12:     PORTB=0xF0;
  6192  00169A  0EF0               	movlw	240
  6193  00169C  6E81               	movwf	129,c	;volatile
  6194  00169E                     
  6195                           ;teclado.c: 13:     if(PORTB != 0xF0){
  6196  00169E  0EF0               	movlw	240
  6197  0016A0  1881               	xorwf	129,w,c	;volatile
  6198  0016A2  B4D8               	btfsc	status,2,c
  6199  0016A4  EF56  F00B         	goto	u2911
  6200  0016A8  EF58  F00B         	goto	u2910
  6201  0016AC                     u2911:
  6202  0016AC  EF30  F00C         	goto	l3547
  6203  0016B0                     u2910:
  6204  0016B0                     
  6205                           ;teclado.c: 14:         PORTB=0xFE;
  6206  0016B0  0EFE               	movlw	254
  6207  0016B2  6E81               	movwf	129,c	;volatile
  6208  0016B4                     
  6209                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  6210  0016B4  B881               	btfsc	129,4,c	;volatile
  6211  0016B6  EF5F  F00B         	goto	u2921
  6212  0016BA  EF61  F00B         	goto	u2920
  6213  0016BE                     u2921:
  6214  0016BE  EF67  F00B         	goto	l3481
  6215  0016C2                     u2920:
  6216  0016C2  C007  FFD9         	movff	teclado@valor,fsr2l
  6217  0016C6  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6218  0016CA  0E2A               	movlw	42
  6219  0016CC  6EDF               	movwf	indf2,c
  6220  0016CE                     l3481:
  6221                           
  6222                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  6223  0016CE  BA81               	btfsc	129,5,c	;volatile
  6224  0016D0  EF6C  F00B         	goto	u2931
  6225  0016D4  EF6E  F00B         	goto	u2930
  6226  0016D8                     u2931:
  6227  0016D8  EF74  F00B         	goto	l3485
  6228  0016DC                     u2930:
  6229  0016DC  C007  FFD9         	movff	teclado@valor,fsr2l
  6230  0016E0  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6231  0016E4  0E30               	movlw	48
  6232  0016E6  6EDF               	movwf	indf2,c
  6233  0016E8                     l3485:
  6234                           
  6235                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  6236  0016E8  BC81               	btfsc	129,6,c	;volatile
  6237  0016EA  EF79  F00B         	goto	u2941
  6238  0016EE  EF7B  F00B         	goto	u2940
  6239  0016F2                     u2941:
  6240  0016F2  EF81  F00B         	goto	l3489
  6241  0016F6                     u2940:
  6242  0016F6  C007  FFD9         	movff	teclado@valor,fsr2l
  6243  0016FA  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6244  0016FE  0E23               	movlw	35
  6245  001700  6EDF               	movwf	indf2,c
  6246  001702                     l3489:
  6247                           
  6248                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  6249  001702  BE81               	btfsc	129,7,c	;volatile
  6250  001704  EF86  F00B         	goto	u2951
  6251  001708  EF88  F00B         	goto	u2950
  6252  00170C                     u2951:
  6253  00170C  EF8E  F00B         	goto	l3493
  6254  001710                     u2950:
  6255  001710  C007  FFD9         	movff	teclado@valor,fsr2l
  6256  001714  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6257  001718  0E44               	movlw	68
  6258  00171A  6EDF               	movwf	indf2,c
  6259  00171C                     l3493:
  6260                           
  6261                           ;teclado.c: 19:         PORTB=0xFD;
  6262  00171C  0EFD               	movlw	253
  6263  00171E  6E81               	movwf	129,c	;volatile
  6264  001720                     
  6265                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  6266  001720  B881               	btfsc	129,4,c	;volatile
  6267  001722  EF95  F00B         	goto	u2961
  6268  001726  EF97  F00B         	goto	u2960
  6269  00172A                     u2961:
  6270  00172A  EF9D  F00B         	goto	l3499
  6271  00172E                     u2960:
  6272  00172E  C007  FFD9         	movff	teclado@valor,fsr2l
  6273  001732  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6274  001736  0E37               	movlw	55
  6275  001738  6EDF               	movwf	indf2,c
  6276  00173A                     l3499:
  6277                           
  6278                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  6279  00173A  BA81               	btfsc	129,5,c	;volatile
  6280  00173C  EFA2  F00B         	goto	u2971
  6281  001740  EFA4  F00B         	goto	u2970
  6282  001744                     u2971:
  6283  001744  EFAA  F00B         	goto	l3503
  6284  001748                     u2970:
  6285  001748  C007  FFD9         	movff	teclado@valor,fsr2l
  6286  00174C  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6287  001750  0E38               	movlw	56
  6288  001752  6EDF               	movwf	indf2,c
  6289  001754                     l3503:
  6290                           
  6291                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  6292  001754  BC81               	btfsc	129,6,c	;volatile
  6293  001756  EFAF  F00B         	goto	u2981
  6294  00175A  EFB1  F00B         	goto	u2980
  6295  00175E                     u2981:
  6296  00175E  EFB7  F00B         	goto	l3507
  6297  001762                     u2980:
  6298  001762  C007  FFD9         	movff	teclado@valor,fsr2l
  6299  001766  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6300  00176A  0E39               	movlw	57
  6301  00176C  6EDF               	movwf	indf2,c
  6302  00176E                     l3507:
  6303                           
  6304                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  6305  00176E  BE81               	btfsc	129,7,c	;volatile
  6306  001770  EFBC  F00B         	goto	u2991
  6307  001774  EFBE  F00B         	goto	u2990
  6308  001778                     u2991:
  6309  001778  EFC4  F00B         	goto	l3511
  6310  00177C                     u2990:
  6311  00177C  C007  FFD9         	movff	teclado@valor,fsr2l
  6312  001780  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6313  001784  0E43               	movlw	67
  6314  001786  6EDF               	movwf	indf2,c
  6315  001788                     l3511:
  6316                           
  6317                           ;teclado.c: 24:         PORTB=0xFB;
  6318  001788  0EFB               	movlw	251
  6319  00178A  6E81               	movwf	129,c	;volatile
  6320  00178C                     
  6321                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  6322  00178C  B881               	btfsc	129,4,c	;volatile
  6323  00178E  EFCB  F00B         	goto	u3001
  6324  001792  EFCD  F00B         	goto	u3000
  6325  001796                     u3001:
  6326  001796  EFD3  F00B         	goto	l3517
  6327  00179A                     u3000:
  6328  00179A  C007  FFD9         	movff	teclado@valor,fsr2l
  6329  00179E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6330  0017A2  0E34               	movlw	52
  6331  0017A4  6EDF               	movwf	indf2,c
  6332  0017A6                     l3517:
  6333                           
  6334                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  6335  0017A6  BA81               	btfsc	129,5,c	;volatile
  6336  0017A8  EFD8  F00B         	goto	u3011
  6337  0017AC  EFDA  F00B         	goto	u3010
  6338  0017B0                     u3011:
  6339  0017B0  EFE0  F00B         	goto	l3521
  6340  0017B4                     u3010:
  6341  0017B4  C007  FFD9         	movff	teclado@valor,fsr2l
  6342  0017B8  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6343  0017BC  0E35               	movlw	53
  6344  0017BE  6EDF               	movwf	indf2,c
  6345  0017C0                     l3521:
  6346                           
  6347                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  6348  0017C0  BC81               	btfsc	129,6,c	;volatile
  6349  0017C2  EFE5  F00B         	goto	u3021
  6350  0017C6  EFE7  F00B         	goto	u3020
  6351  0017CA                     u3021:
  6352  0017CA  EFED  F00B         	goto	l3525
  6353  0017CE                     u3020:
  6354  0017CE  C007  FFD9         	movff	teclado@valor,fsr2l
  6355  0017D2  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6356  0017D6  0E36               	movlw	54
  6357  0017D8  6EDF               	movwf	indf2,c
  6358  0017DA                     l3525:
  6359                           
  6360                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  6361  0017DA  BE81               	btfsc	129,7,c	;volatile
  6362  0017DC  EFF2  F00B         	goto	u3031
  6363  0017E0  EFF4  F00B         	goto	u3030
  6364  0017E4                     u3031:
  6365  0017E4  EFFA  F00B         	goto	l3529
  6366  0017E8                     u3030:
  6367  0017E8  C007  FFD9         	movff	teclado@valor,fsr2l
  6368  0017EC  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6369  0017F0  0E42               	movlw	66
  6370  0017F2  6EDF               	movwf	indf2,c
  6371  0017F4                     l3529:
  6372                           
  6373                           ;teclado.c: 29:         PORTB=0xF7;
  6374  0017F4  0EF7               	movlw	247
  6375  0017F6  6E81               	movwf	129,c	;volatile
  6376  0017F8                     
  6377                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  6378  0017F8  B881               	btfsc	129,4,c	;volatile
  6379  0017FA  EF01  F00C         	goto	u3041
  6380  0017FE  EF03  F00C         	goto	u3040
  6381  001802                     u3041:
  6382  001802  EF09  F00C         	goto	l3535
  6383  001806                     u3040:
  6384  001806  C007  FFD9         	movff	teclado@valor,fsr2l
  6385  00180A  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6386  00180E  0E31               	movlw	49
  6387  001810  6EDF               	movwf	indf2,c
  6388  001812                     l3535:
  6389                           
  6390                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  6391  001812  BA81               	btfsc	129,5,c	;volatile
  6392  001814  EF0E  F00C         	goto	u3051
  6393  001818  EF10  F00C         	goto	u3050
  6394  00181C                     u3051:
  6395  00181C  EF16  F00C         	goto	l3539
  6396  001820                     u3050:
  6397  001820  C007  FFD9         	movff	teclado@valor,fsr2l
  6398  001824  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6399  001828  0E32               	movlw	50
  6400  00182A  6EDF               	movwf	indf2,c
  6401  00182C                     l3539:
  6402                           
  6403                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  6404  00182C  BC81               	btfsc	129,6,c	;volatile
  6405  00182E  EF1B  F00C         	goto	u3061
  6406  001832  EF1D  F00C         	goto	u3060
  6407  001836                     u3061:
  6408  001836  EF23  F00C         	goto	l3543
  6409  00183A                     u3060:
  6410  00183A  C007  FFD9         	movff	teclado@valor,fsr2l
  6411  00183E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6412  001842  0E33               	movlw	51
  6413  001844  6EDF               	movwf	indf2,c
  6414  001846                     l3543:
  6415                           
  6416                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  6417  001846  BE81               	btfsc	129,7,c	;volatile
  6418  001848  EF28  F00C         	goto	u3071
  6419  00184C  EF2A  F00C         	goto	u3070
  6420  001850                     u3071:
  6421  001850  EF30  F00C         	goto	l3547
  6422  001854                     u3070:
  6423  001854  C007  FFD9         	movff	teclado@valor,fsr2l
  6424  001858  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6425  00185C  0E41               	movlw	65
  6426  00185E  6EDF               	movwf	indf2,c
  6427  001860                     l3547:
  6428                           
  6429                           ;teclado.c: 35:     PORTB = 0xF0;
  6430  001860  0EF0               	movlw	240
  6431  001862  6E81               	movwf	129,c	;volatile
  6432  001864                     l3549:
  6433  001864  0EF0               	movlw	240
  6434  001866  1881               	xorwf	129,w,c	;volatile
  6435  001868  A4D8               	btfss	status,2,c
  6436  00186A  EF39  F00C         	goto	u3081
  6437  00186E  EF3B  F00C         	goto	u3080
  6438  001872                     u3081:
  6439  001872  EF32  F00C         	goto	l3549
  6440  001876                     u3080:
  6441  001876  0012               	return		;funcret
  6442  001878                     __end_of_teclado:
  6443                           	callstack 0
  6444                           
  6445 ;; *************** function _sprintf *****************
  6446 ;; Defined at:
  6447 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  s               2   18[BANK0 ] PTR unsigned char 
  6450 ;;		 -> datos(25), 
  6451 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  6452 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6453 ;;		 -> STR_1(14), 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  f               6   30[BANK0 ] struct _IO_FILE
  6456 ;;  ap              2   28[BANK0 ] PTR void [1]
  6457 ;;		 -> ?_sprintf(2), 
  6458 ;;  ret             2    0        int 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  2   18[BANK0 ] int 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6468 ;;      Params:         0       8       0       0       0       0       0       0       0
  6469 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6471 ;;      Totals:         0      18       0       0       0       0       0       0       0
  6472 ;;Total ram usage:       18 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    9
  6475 ;; This function calls:
  6476 ;;		_vfprintf
  6477 ;; This function is called by:
  6478 ;;		_appADC
  6479 ;;		_appBat
  6480 ;;		_appElemts
  6481 ;;		_appSubGetData
  6482 ;;		_sendinformation
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text38
  6487  003406                     __ptext38:
  6488                           	callstack 0
  6489  003406                     _sprintf:
  6490                           	callstack 20
  6491  003406  0EAC               	movlw	low (?_sprintf+4)
  6492  003408  0100               	movlb	0	; () banked
  6493  00340A  6FB2               	movwf	sprintf@ap& (0+255),b
  6494  00340C  0E00               	movlw	high (?_sprintf+4)
  6495  00340E  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
  6496  003410  C0A8  F0B4         	movff	sprintf@s,sprintf@f
  6497  003414  C0A9  F0B5         	movff	sprintf@s+1,sprintf@f+1
  6498  003418                     
  6499                           ; BSR set to: 0
  6500  003418  0E00               	movlw	0
  6501  00341A  6FB7               	movwf	(sprintf@f+3)& (0+255),b
  6502  00341C  0E00               	movlw	0
  6503  00341E  6FB6               	movwf	(sprintf@f+2)& (0+255),b
  6504  003420                     
  6505                           ; BSR set to: 0
  6506  003420  0E00               	movlw	0
  6507  003422  6FB9               	movwf	(sprintf@f+5)& (0+255),b
  6508  003424  0E00               	movlw	0
  6509  003426  6FB8               	movwf	(sprintf@f+4)& (0+255),b
  6510  003428                     
  6511                           ; BSR set to: 0
  6512  003428  0EB4               	movlw	low sprintf@f
  6513  00342A  6FA2               	movwf	vfprintf@fp& (0+255),b
  6514  00342C  0E00               	movlw	high sprintf@f
  6515  00342E  6FA3               	movwf	(vfprintf@fp+1)& (0+255),b
  6516  003430  C0AA  F0A4         	movff	sprintf@fmt,vfprintf@fmt
  6517  003434  C0AB  F0A5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6518  003438  0EB2               	movlw	low sprintf@ap
  6519  00343A  6FA6               	movwf	vfprintf@ap& (0+255),b
  6520  00343C  0E00               	movlw	high sprintf@ap
  6521  00343E  6FA7               	movwf	(vfprintf@ap+1)& (0+255),b
  6522  003440  ECA6  F019         	call	_vfprintf	;wreg free
  6523  003444  0100               	movlb	0	; () banked
  6524  003446  51B6               	movf	(sprintf@f+2)& (0+255),w,b
  6525  003448  25A8               	addwf	sprintf@s& (0+255),w,b
  6526  00344A  6ED9               	movwf	fsr2l,c
  6527  00344C  51B7               	movf	(sprintf@f+3)& (0+255),w,b
  6528  00344E  21A9               	addwfc	(sprintf@s+1)& (0+255),w,b
  6529  003450  6EDA               	movwf	fsr2h,c
  6530  003452  0E00               	movlw	0
  6531  003454  6EDF               	movwf	indf2,c
  6532  003456                     
  6533                           ; BSR set to: 0
  6534  003456  0012               	return		;funcret
  6535  003458                     __end_of_sprintf:
  6536                           	callstack 0
  6537                           
  6538 ;; *************** function _vfprintf *****************
  6539 ;; Defined at:
  6540 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  6543 ;;		 -> sprintf@f(6), 
  6544 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  6545 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6546 ;;		 -> STR_1(14), 
  6547 ;;  ap              2   16[BANK0 ] PTR PTR void 
  6548 ;;		 -> sprintf@ap(2), 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  6551 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6552 ;;		 -> STR_1(14), 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  2   12[BANK0 ] int 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6562 ;;      Params:         0       6       0       0       0       0       0       0       0
  6563 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6565 ;;      Totals:         2       6       0       0       0       0       0       0       0
  6566 ;;Total ram usage:        8 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    8
  6569 ;; This function calls:
  6570 ;;		_vfpfcnvrt
  6571 ;; This function is called by:
  6572 ;;		_sprintf
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text39
  6577  00334C                     __ptext39:
  6578                           	callstack 0
  6579  00334C                     _vfprintf:
  6580                           	callstack 20
  6581  00334C                     
  6582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6583  00334C  C0A4  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  6584  003350  C0A5  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6585  003354                     
  6586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6587  003354  0E00               	movlw	0
  6588  003356  0100               	movlb	0	; () banked
  6589  003358  6F61               	movwf	(_nout+1)& (0+255),b
  6590  00335A  0E00               	movlw	0
  6591  00335C  6F60               	movwf	_nout& (0+255),b
  6592                           
  6593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6594  00335E  EFC4  F019         	goto	l4591
  6595  003362                     l4589:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6599  003362  C0A2  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  6600  003366  C0A3  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6601  00336A  0E50               	movlw	low vfprintf@cfmt
  6602  00336C  6E48               	movwf	vfpfcnvrt@fmt^0,c
  6603  00336E  0E00               	movlw	high vfprintf@cfmt
  6604  003370  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6605  003372  C0A6  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  6606  003376  C0A7  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6607  00337A  EC22  F008         	call	_vfpfcnvrt	;wreg free
  6608  00337E  5046               	movf	?_vfpfcnvrt^0,w,c
  6609  003380  0100               	movlb	0	; () banked
  6610  003382  2760               	addwf	_nout& (0+255),f,b
  6611  003384  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  6612  003386  2361               	addwfc	(_nout+1)& (0+255),f,b
  6613  003388                     l4591:
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6617  003388  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  6618  00338C  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6619  003390                     	if	0	;tblptru may be non-zero
  6620  003390                     	endif
  6621  003390                     	if	0	;tblptru may be non-zero
  6622  003390                     	endif
  6623  003390  0008               	tblrd		*
  6624  003392  50F5               	movf	tablat,w,c
  6625  003394  0900               	iorlw	0
  6626  003396  A4D8               	btfss	status,2,c
  6627  003398  EFD0  F019         	goto	u4131
  6628  00339C  EFD2  F019         	goto	u4130
  6629  0033A0                     u4131:
  6630  0033A0  EFB1  F019         	goto	l4589
  6631  0033A4                     u4130:
  6632  0033A4                     
  6633                           ; BSR set to: 0
  6634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6635  0033A4  C060  F0A2         	movff	_nout,?_vfprintf
  6636  0033A8  C061  F0A3         	movff	_nout+1,?_vfprintf+1
  6637  0033AC                     
  6638                           ; BSR set to: 0
  6639  0033AC  0012               	return		;funcret
  6640  0033AE                     __end_of_vfprintf:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _vfpfcnvrt *****************
  6644 ;; Defined at:
  6645 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  6648 ;;		 -> sprintf@f(6), 
  6649 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  6650 ;;		 -> vfprintf@cfmt(2), 
  6651 ;;  ap              2   73[COMRAM] PTR PTR void 
  6652 ;;		 -> sprintf@ap(2), 
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;  ll              8    0[BANK0 ] long long 
  6655 ;;  llu             8    0        unsigned long long 
  6656 ;;  f               4    0        unsigned long long 
  6657 ;;  vp              3    0        PTR void 
  6658 ;;  ct              3    0        unsigned char [3]
  6659 ;;  cp              3    0        PTR unsigned char 
  6660 ;;  done            2    8[BANK0 ] int 
  6661 ;;  i               2    0        int 
  6662 ;;  c               1    0        unsigned char 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  2   69[COMRAM] int 
  6665 ;; Registers used:
  6666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6672 ;;      Params:         6       0       0       0       0       0       0       0       0
  6673 ;;      Locals:         0      12       0       0       0       0       0       0       0
  6674 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6675 ;;      Totals:        10      12       0       0       0       0       0       0       0
  6676 ;;Total ram usage:       22 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:    7
  6679 ;; This function calls:
  6680 ;;		_atoi
  6681 ;;		_dtoa
  6682 ;;		_fputc
  6683 ;;		_isdigit
  6684 ;; This function is called by:
  6685 ;;		_vfprintf
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text40
  6690  001044                     __ptext40:
  6691                           	callstack 0
  6692  001044                     _vfpfcnvrt:
  6693                           	callstack 20
  6694  001044                     
  6695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6696  001044  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6697  001048  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6698  00104C  CFDE FFF6          	movff	postinc2,tblptrl
  6699  001050  CFDD FFF7          	movff	postdec2,tblptrh
  6700  001054                     	if	0	;tblptru may be non-zero
  6701  001054                     	endif
  6702  001054                     	if	0	;tblptru may be non-zero
  6703  001054                     	endif
  6704  001054  0008               	tblrd		*
  6705  001056  50F5               	movf	tablat,w,c
  6706  001058  0A25               	xorlw	37
  6707  00105A  A4D8               	btfss	status,2,c
  6708  00105C  EF32  F008         	goto	u2571
  6709  001060  EF34  F008         	goto	u2570
  6710  001064                     u2571:
  6711  001064  EFBC  F009         	goto	l3285
  6712  001068                     u2570:
  6713  001068                     
  6714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6715  001068  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6716  00106C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6717  001070  2ADE               	incf	postinc2,f,c
  6718  001072  0E00               	movlw	0
  6719  001074  22DD               	addwfc	postdec2,f,c
  6720  001076                     
  6721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6722  001076  0E00               	movlw	0
  6723  001078  0100               	movlb	0	; () banked
  6724  00107A  6F63               	movwf	(_width+1)& (0+255),b
  6725  00107C  0E00               	movlw	0
  6726  00107E  6F62               	movwf	_width& (0+255),b
  6727  001080  C062  F055         	movff	_width,_flags
  6728  001084  C063  F056         	movff	_width+1,_flags+1
  6729  001088                     
  6730                           ; BSR set to: 0
  6731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6732  001088  6853               	setf	_prec^0,c
  6733  00108A  6854               	setf	(_prec+1)^0,c
  6734  00108C                     
  6735                           ; BSR set to: 0
  6736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  6737  00108C  0E00               	movlw	0
  6738  00108E  6F9F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6739  001090  0E00               	movlw	0
  6740  001092  6F9E               	movwf	vfpfcnvrt@done& (0+255),b
  6741                           
  6742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6743  001094  EF92  F008         	goto	l3237
  6744  001098                     l3211:
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  6748  001098  8055               	bsf	_flags^0,0,c
  6749  00109A                     l3213:
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  6753  00109A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6754  00109E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6755  0010A2  2ADE               	incf	postinc2,f,c
  6756  0010A4  0E00               	movlw	0
  6757  0010A6  22DD               	addwfc	postdec2,f,c
  6758                           
  6759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  6760  0010A8  EF92  F008         	goto	l3237
  6761  0010AC                     l3215:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  6765  0010AC  8255               	bsf	_flags^0,1,c
  6766  0010AE  EF4D  F008         	goto	l3213
  6767  0010B2                     l3219:
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  6771  0010B2  8455               	bsf	_flags^0,2,c
  6772  0010B4  EF4D  F008         	goto	l3213
  6773  0010B8                     l3223:
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  6777  0010B8  8655               	bsf	_flags^0,3,c
  6778  0010BA  EF4D  F008         	goto	l3213
  6779  0010BE                     l3227:
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  6783  0010BE  8855               	bsf	_flags^0,4,c
  6784  0010C0  EF4D  F008         	goto	l3213
  6785  0010C4                     l3231:
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  6789  0010C4  0E00               	movlw	0
  6790  0010C6  6F9F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6791  0010C8  0E01               	movlw	1
  6792  0010CA  6F9E               	movwf	vfpfcnvrt@done& (0+255),b
  6793                           
  6794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  6795  0010CC  EF92  F008         	goto	l3237
  6796  0010D0                     l3235:
  6797                           
  6798                           ; BSR set to: 0
  6799  0010D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6800  0010D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6801  0010D8  CFDE FFF6          	movff	postinc2,tblptrl
  6802  0010DC  CFDD FFF7          	movff	postdec2,tblptrh
  6803  0010E0                     	if	0	;tblptru may be non-zero
  6804  0010E0                     	endif
  6805  0010E0                     	if	0	;tblptru may be non-zero
  6806  0010E0                     	endif
  6807  0010E0  0008               	tblrd		*
  6808  0010E2  50F5               	movf	tablat,w,c
  6809  0010E4  6E4C               	movwf	??_vfpfcnvrt^0,c
  6810  0010E6  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  6811                           
  6812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6813                           ; Switch size 1, requested type "simple"
  6814                           ; Number of cases is 1, Range of values is 0 to 0
  6815                           ; switch strategies available:
  6816                           ; Name         Instructions Cycles
  6817                           ; simple_byte            4     3 (average)
  6818                           ;	Chosen strategy is simple_byte
  6819  0010E8  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  6820  0010EA  0A00               	xorlw	0	; case 0
  6821  0010EC  B4D8               	btfsc	status,2,c
  6822  0010EE  EF7B  F008         	goto	l5025
  6823  0010F2  EF62  F008         	goto	l3231
  6824  0010F6                     l5025:
  6825                           
  6826                           ; BSR set to: 0
  6827                           ; Switch size 1, requested type "simple"
  6828                           ; Number of cases is 5, Range of values is 32 to 48
  6829                           ; switch strategies available:
  6830                           ; Name         Instructions Cycles
  6831                           ; simple_byte           16     9 (average)
  6832                           ;	Chosen strategy is simple_byte
  6833  0010F6  504C               	movf	??_vfpfcnvrt^0,w,c
  6834  0010F8  0A20               	xorlw	32	; case 32
  6835  0010FA  B4D8               	btfsc	status,2,c
  6836  0010FC  EF5C  F008         	goto	l3223
  6837  001100  0A03               	xorlw	3	; case 35
  6838  001102  B4D8               	btfsc	status,2,c
  6839  001104  EF5F  F008         	goto	l3227
  6840  001108  0A08               	xorlw	8	; case 43
  6841  00110A  B4D8               	btfsc	status,2,c
  6842  00110C  EF59  F008         	goto	l3219
  6843  001110  0A06               	xorlw	6	; case 45
  6844  001112  B4D8               	btfsc	status,2,c
  6845  001114  EF4C  F008         	goto	l3211
  6846  001118  0A1D               	xorlw	29	; case 48
  6847  00111A  B4D8               	btfsc	status,2,c
  6848  00111C  EF56  F008         	goto	l3215
  6849  001120  EF62  F008         	goto	l3231
  6850  001124                     l3237:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6854  001124  519E               	movf	vfpfcnvrt@done& (0+255),w,b
  6855  001126  119F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6856  001128  B4D8               	btfsc	status,2,c
  6857  00112A  EF99  F008         	goto	u2581
  6858  00112E  EF9B  F008         	goto	u2580
  6859  001132                     u2581:
  6860  001132  EF68  F008         	goto	l3235
  6861  001136                     u2580:
  6862  001136                     
  6863                           ; BSR set to: 0
  6864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  6865  001136  A055               	btfss	_flags^0,0,c
  6866  001138  EFA0  F008         	goto	u2591
  6867  00113C  EFA2  F008         	goto	u2590
  6868  001140                     u2591:
  6869  001140  EFA3  F008         	goto	l3241
  6870  001144                     u2590:
  6871  001144                     
  6872                           ; BSR set to: 0
  6873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  6874  001144  9255               	bcf	_flags^0,1,c
  6875  001146                     l3241:
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  6879  001146  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6880  00114A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6881  00114E  CFDE FFF6          	movff	postinc2,tblptrl
  6882  001152  CFDD FFF7          	movff	postdec2,tblptrh
  6883  001156                     	if	0	;tblptru may be non-zero
  6884  001156                     	endif
  6885  001156                     	if	0	;tblptru may be non-zero
  6886  001156                     	endif
  6887  001156  0008               	tblrd		*
  6888  001158  50F5               	movf	tablat,w,c
  6889  00115A  0A2A               	xorlw	42
  6890  00115C  A4D8               	btfss	status,2,c
  6891  00115E  EFB3  F008         	goto	u2601
  6892  001162  EFB5  F008         	goto	u2600
  6893  001166                     u2601:
  6894  001166  EFDE  F008         	goto	l3249
  6895  00116A                     u2600:
  6896  00116A                     
  6897                           ; BSR set to: 0
  6898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6899  00116A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6900  00116E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6901  001172  2ADE               	incf	postinc2,f,c
  6902  001174  0E00               	movlw	0
  6903  001176  22DD               	addwfc	postdec2,f,c
  6904                           
  6905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6906  001178  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6907  00117C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6908  001180  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6909  001184  0E02               	movlw	2
  6910  001186  26DE               	addwf	postinc2,f,c
  6911  001188  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6912  00118C  0E00               	movlw	0
  6913  00118E  22DD               	addwfc	postdec2,f,c
  6914  001190  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6915  001194  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6916  001198  CFDE F062          	movff	postinc2,_width
  6917  00119C  CFDD F063          	movff	postdec2,_width+1
  6918  0011A0                     
  6919                           ; BSR set to: 0
  6920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6921  0011A0  BF63               	btfsc	(_width+1)& (0+255),7,b
  6922  0011A2  EFD7  F008         	goto	u2610
  6923  0011A6  EFD5  F008         	goto	u2611
  6924  0011AA                     u2611:
  6925  0011AA  EF22  F009         	goto	l3259
  6926  0011AE                     u2610:
  6927  0011AE                     
  6928                           ; BSR set to: 0
  6929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6930  0011AE  8055               	bsf	_flags^0,0,c
  6931                           
  6932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6933  0011B0  6D62               	negf	_width& (0+255),b
  6934  0011B2  1F63               	comf	(_width+1)& (0+255),f,b
  6935  0011B4  B0D8               	btfsc	status,0,c
  6936  0011B6  2B63               	incf	(_width+1)& (0+255),f,b
  6937  0011B8  EF22  F009         	goto	l3259
  6938  0011BC                     l3249:
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6942  0011BC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6943  0011C0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6944  0011C4  CFDE F00E          	movff	postinc2,atoi@s
  6945  0011C8  CFDD F00F          	movff	postdec2,atoi@s+1
  6946  0011CC  ECE1  F00E         	call	_atoi	;wreg free
  6947  0011D0  C00E  F062         	movff	?_atoi,_width
  6948  0011D4  C00F  F063         	movff	?_atoi+1,_width+1
  6949                           
  6950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6951  0011D8  EFF5  F008         	goto	l3253
  6952  0011DC                     l3251:
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6956  0011DC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6957  0011E0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6958  0011E4  2ADE               	incf	postinc2,f,c
  6959  0011E6  0E00               	movlw	0
  6960  0011E8  22DD               	addwfc	postdec2,f,c
  6961  0011EA                     l3253:
  6962  0011EA  0ED0               	movlw	208
  6963  0011EC  6E4C               	movwf	??_vfpfcnvrt^0,c
  6964  0011EE  0EFF               	movlw	255
  6965  0011F0  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  6966  0011F2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6967  0011F6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6968  0011FA  CFDE FFF6          	movff	postinc2,tblptrl
  6969  0011FE  CFDD FFF7          	movff	postdec2,tblptrh
  6970  001202                     	if	0	;tblptru may be non-zero
  6971  001202                     	endif
  6972  001202                     	if	0	;tblptru may be non-zero
  6973  001202                     	endif
  6974  001202  0008               	tblrd		*
  6975  001204  50F5               	movf	tablat,w,c
  6976  001206  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  6977  001208  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  6978  00120A  504C               	movf	??_vfpfcnvrt^0,w,c
  6979  00120C  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  6980  00120E  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  6981  001210  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  6982  001212  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  6983  001214  E10A               	bnz	u2620
  6984  001216  0E0A               	movlw	10
  6985  001218  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  6986  00121A  A0D8               	btfss	status,0,c
  6987  00121C  EF12  F009         	goto	u2621
  6988  001220  EF15  F009         	goto	u2620
  6989  001224                     u2621:
  6990  001224  0E01               	movlw	1
  6991  001226  EF16  F009         	goto	u2630
  6992  00122A                     u2620:
  6993  00122A  0E00               	movlw	0
  6994  00122C                     u2630:
  6995  00122C  0100               	movlb	0	; () banked
  6996  00122E  6FA0               	movwf	_vfpfcnvrt$2356& (0+255),b
  6997  001230  6BA1               	clrf	(_vfpfcnvrt$2356+1)& (0+255),b
  6998  001232                     
  6999                           ; BSR set to: 0
  7000  001232  51A0               	movf	_vfpfcnvrt$2356& (0+255),w,b
  7001  001234  11A1               	iorwf	(_vfpfcnvrt$2356+1)& (0+255),w,b
  7002  001236  A4D8               	btfss	status,2,c
  7003  001238  EF20  F009         	goto	u2641
  7004  00123C  EF22  F009         	goto	u2640
  7005  001240                     u2641:
  7006  001240  EFEE  F008         	goto	l3251
  7007  001244                     u2640:
  7008  001244                     l3259:
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7012  001244  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7013  001248  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7014  00124C  CFDE FFF6          	movff	postinc2,tblptrl
  7015  001250  CFDD FFF7          	movff	postdec2,tblptrh
  7016  001254                     	if	0	;tblptru may be non-zero
  7017  001254                     	endif
  7018  001254                     	if	0	;tblptru may be non-zero
  7019  001254                     	endif
  7020  001254  0008               	tblrd		*
  7021  001256  50F5               	movf	tablat,w,c
  7022  001258  0A64               	xorlw	100
  7023  00125A  B4D8               	btfsc	status,2,c
  7024  00125C  EF32  F009         	goto	u2651
  7025  001260  EF34  F009         	goto	u2650
  7026  001264                     u2651:
  7027  001264  EF46  F009         	goto	l3263
  7028  001268                     u2650:
  7029  001268                     
  7030                           ; BSR set to: 0
  7031  001268  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7032  00126C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7033  001270  CFDE FFF6          	movff	postinc2,tblptrl
  7034  001274  CFDD FFF7          	movff	postdec2,tblptrh
  7035  001278                     	if	0	;tblptru may be non-zero
  7036  001278                     	endif
  7037  001278                     	if	0	;tblptru may be non-zero
  7038  001278                     	endif
  7039  001278  0008               	tblrd		*
  7040  00127A  50F5               	movf	tablat,w,c
  7041  00127C  0A69               	xorlw	105
  7042  00127E  A4D8               	btfss	status,2,c
  7043  001280  EF44  F009         	goto	u2661
  7044  001284  EF46  F009         	goto	u2660
  7045  001288                     u2661:
  7046  001288  EF86  F009         	goto	l3269
  7047  00128C                     u2660:
  7048  00128C                     l3263:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7052  00128C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7053  001290  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7054  001294  2ADE               	incf	postinc2,f,c
  7055  001296  0E00               	movlw	0
  7056  001298  22DD               	addwfc	postdec2,f,c
  7057                           
  7058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7059  00129A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7060  00129E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7061  0012A2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  7062  0012A6  0E02               	movlw	2
  7063  0012A8  26DE               	addwf	postinc2,f,c
  7064  0012AA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  7065  0012AE  0E00               	movlw	0
  7066  0012B0  22DD               	addwfc	postdec2,f,c
  7067  0012B2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7068  0012B6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7069  0012BA  CFDE F096          	movff	postinc2,vfpfcnvrt@ll
  7070  0012BE  CFDD F097          	movff	postdec2,vfpfcnvrt@ll+1
  7071  0012C2  0E00               	movlw	0
  7072  0012C4  BF97               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7073  0012C6  0EFF               	movlw	-1
  7074  0012C8  6F98               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7075  0012CA  6F99               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7076  0012CC  6F9A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7077  0012CE  6F9B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7078  0012D0  6F9C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7079  0012D2  6F9D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7080  0012D4                     
  7081                           ; BSR set to: 0
  7082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7083  0012D4  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  7084  0012D8  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7085  0012DC  C096  F024         	movff	vfpfcnvrt@ll,dtoa@d
  7086  0012E0  C097  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7087  0012E4  C098  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7088  0012E8  C099  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7089  0012EC  C09A  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7090  0012F0  C09B  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7091  0012F4  C09C  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7092  0012F8  C09D  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7093  0012FC  ECD8  F009         	call	_dtoa	;wreg free
  7094  001300  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  7095  001304  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7096  001308  EFD7  F009         	goto	l1235
  7097  00130C                     l3269:
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7101  00130C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7102  001310  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7103  001314  CFDE FFF6          	movff	postinc2,tblptrl
  7104  001318  CFDD FFF7          	movff	postdec2,tblptrh
  7105  00131C                     	if	0	;tblptru may be non-zero
  7106  00131C                     	endif
  7107  00131C                     	if	0	;tblptru may be non-zero
  7108  00131C                     	endif
  7109  00131C  0008               	tblrd		*
  7110  00131E  50F5               	movf	tablat,w,c
  7111  001320  0A25               	xorlw	37
  7112  001322  A4D8               	btfss	status,2,c
  7113  001324  EF96  F009         	goto	u2671
  7114  001328  EF98  F009         	goto	u2670
  7115  00132C                     u2671:
  7116  00132C  EFAF  F009         	goto	l3279
  7117  001330                     u2670:
  7118  001330                     
  7119                           ; BSR set to: 0
  7120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7121  001330  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7122  001334  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7123  001338  2ADE               	incf	postinc2,f,c
  7124  00133A  0E00               	movlw	0
  7125  00133C  22DD               	addwfc	postdec2,f,c
  7126  00133E                     
  7127                           ; BSR set to: 0
  7128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7129  00133E  0E00               	movlw	0
  7130  001340  6E08               	movwf	(fputc@c+1)^0,c
  7131  001342  0E25               	movlw	37
  7132  001344  6E07               	movwf	fputc@c^0,c
  7133  001346  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7134  00134A  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7135  00134E  EC77  F015         	call	_fputc	;wreg free
  7136  001352                     l3275:
  7137                           
  7138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7139  001352  0E00               	movlw	0
  7140  001354  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7141  001356  0E01               	movlw	1
  7142  001358  6E46               	movwf	?_vfpfcnvrt^0,c
  7143  00135A  EFD7  F009         	goto	l1235
  7144  00135E                     l3279:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7148  00135E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7149  001362  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7150  001366  2ADE               	incf	postinc2,f,c
  7151  001368  0E00               	movlw	0
  7152  00136A  22DD               	addwfc	postdec2,f,c
  7153  00136C                     
  7154                           ; BSR set to: 0
  7155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7156  00136C  0E00               	movlw	0
  7157  00136E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7158  001370  0E00               	movlw	0
  7159  001372  6E46               	movwf	?_vfpfcnvrt^0,c
  7160  001374  EFD7  F009         	goto	l1235
  7161  001378                     l3285:
  7162                           
  7163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7164  001378  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7165  00137C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7166  001380  CFDE FFF6          	movff	postinc2,tblptrl
  7167  001384  CFDD FFF7          	movff	postdec2,tblptrh
  7168  001388                     	if	0	;tblptru may be non-zero
  7169  001388                     	endif
  7170  001388                     	if	0	;tblptru may be non-zero
  7171  001388                     	endif
  7172  001388  0008               	tblrd		*
  7173  00138A  50F5               	movf	tablat,w,c
  7174  00138C  6E07               	movwf	fputc@c^0,c
  7175  00138E  6A08               	clrf	(fputc@c+1)^0,c
  7176  001390  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7177  001394  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7178  001398  EC77  F015         	call	_fputc	;wreg free
  7179  00139C                     
  7180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7181  00139C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7182  0013A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7183  0013A4  2ADE               	incf	postinc2,f,c
  7184  0013A6  0E00               	movlw	0
  7185  0013A8  22DD               	addwfc	postdec2,f,c
  7186  0013AA  EFA9  F009         	goto	l3275
  7187  0013AE                     l1235:
  7188  0013AE  0012               	return		;funcret
  7189  0013B0                     __end_of_vfpfcnvrt:
  7190                           	callstack 0
  7191                           
  7192 ;; *************** function _dtoa *****************
  7193 ;; Defined at:
  7194 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  7197 ;;		 -> sprintf@f(6), 
  7198 ;;  d               8   35[COMRAM] long long 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  n               8   59[COMRAM] long long 
  7201 ;;  i               2   67[COMRAM] int 
  7202 ;;  s               2   57[COMRAM] int 
  7203 ;;  w               2   55[COMRAM] int 
  7204 ;;  p               2   53[COMRAM] int 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2   33[COMRAM] int 
  7207 ;; Registers used:
  7208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7214 ;;      Params:        10       0       0       0       0       0       0       0       0
  7215 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7216 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7217 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7218 ;;Total ram usage:       36 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    6
  7221 ;; This function calls:
  7222 ;;		___aodiv
  7223 ;;		___aomod
  7224 ;;		_abs
  7225 ;;		_pad
  7226 ;; This function is called by:
  7227 ;;		_vfpfcnvrt
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text41
  7232  0013B0                     __ptext41:
  7233                           	callstack 0
  7234  0013B0                     _dtoa:
  7235                           	callstack 20
  7236  0013B0                     
  7237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7238  0013B0  C024  F03C         	movff	dtoa@d,dtoa@n
  7239  0013B4  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  7240  0013B8  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  7241  0013BC  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  7242  0013C0  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  7243  0013C4  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  7244  0013C8  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  7245  0013CC  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  7246  0013D0                     
  7247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7248  0013D0  BE43               	btfsc	(dtoa@n+7)^0,7,c
  7249  0013D2  EFED  F009         	goto	u2351
  7250  0013D6  EFF0  F009         	goto	u2350
  7251  0013DA                     u2351:
  7252  0013DA  0E01               	movlw	1
  7253  0013DC  EFF1  F009         	goto	u2360
  7254  0013E0                     u2350:
  7255  0013E0  0E00               	movlw	0
  7256  0013E2                     u2360:
  7257  0013E2  6E3A               	movwf	dtoa@s^0,c
  7258  0013E4  6A3B               	clrf	(dtoa@s+1)^0,c
  7259                           
  7260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7261  0013E6  503A               	movf	dtoa@s^0,w,c
  7262  0013E8  103B               	iorwf	(dtoa@s+1)^0,w,c
  7263  0013EA  B4D8               	btfsc	status,2,c
  7264  0013EC  EFFA  F009         	goto	u2371
  7265  0013F0  EFFC  F009         	goto	u2370
  7266  0013F4                     u2371:
  7267  0013F4  EF0C  F00A         	goto	l3103
  7268  0013F8                     u2370:
  7269  0013F8                     
  7270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7271  0013F8  1E43               	comf	(dtoa@n+7)^0,f,c
  7272  0013FA  1E42               	comf	(dtoa@n+6)^0,f,c
  7273  0013FC  1E41               	comf	(dtoa@n+5)^0,f,c
  7274  0013FE  1E40               	comf	(dtoa@n+4)^0,f,c
  7275  001400  1E3F               	comf	(dtoa@n+3)^0,f,c
  7276  001402  1E3E               	comf	(dtoa@n+2)^0,f,c
  7277  001404  1E3D               	comf	(dtoa@n+1)^0,f,c
  7278  001406  6C3C               	negf	dtoa@n^0,c
  7279  001408  0E00               	movlw	0
  7280  00140A  223D               	addwfc	(dtoa@n+1)^0,f,c
  7281  00140C  223E               	addwfc	(dtoa@n+2)^0,f,c
  7282  00140E  223F               	addwfc	(dtoa@n+3)^0,f,c
  7283  001410  2240               	addwfc	(dtoa@n+4)^0,f,c
  7284  001412  2241               	addwfc	(dtoa@n+5)^0,f,c
  7285  001414  2242               	addwfc	(dtoa@n+6)^0,f,c
  7286  001416  2243               	addwfc	(dtoa@n+7)^0,f,c
  7287  001418                     l3103:
  7288                           
  7289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7290  001418  BE54               	btfsc	(_prec+1)^0,7,c
  7291  00141A  EF11  F00A         	goto	u2381
  7292  00141E  EF13  F00A         	goto	u2380
  7293  001422                     u2381:
  7294  001422  EF14  F00A         	goto	l3107
  7295  001426                     u2380:
  7296  001426                     
  7297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7298  001426  9255               	bcf	_flags^0,1,c
  7299  001428                     l3107:
  7300                           
  7301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7302  001428  BE54               	btfsc	(_prec+1)^0,7,c
  7303  00142A  EF21  F00A         	goto	u2390
  7304  00142E  5054               	movf	(_prec+1)^0,w,c
  7305  001430  E106               	bnz	u2391
  7306  001432  0453               	decf	_prec^0,w,c
  7307  001434  B0D8               	btfsc	status,0,c
  7308  001436  EF1F  F00A         	goto	u2391
  7309  00143A  EF21  F00A         	goto	u2390
  7310  00143E                     u2391:
  7311  00143E  EF27  F00A         	goto	l1186
  7312  001442                     u2390:
  7313  001442  0E00               	movlw	0
  7314  001444  6E37               	movwf	(dtoa@p+1)^0,c
  7315  001446  0E01               	movlw	1
  7316  001448  6E36               	movwf	dtoa@p^0,c
  7317  00144A  EF2B  F00A         	goto	l1188
  7318  00144E                     l1186:
  7319  00144E  C053  F036         	movff	_prec,dtoa@p
  7320  001452  C054  F037         	movff	_prec+1,dtoa@p+1
  7321  001456                     l1188:
  7322                           
  7323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7324  001456  C062  F038         	movff	_width,dtoa@w
  7325  00145A  C063  F039         	movff	_width+1,dtoa@w+1
  7326  00145E                     
  7327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7328  00145E  503A               	movf	dtoa@s^0,w,c
  7329  001460  103B               	iorwf	(dtoa@s+1)^0,w,c
  7330  001462  A4D8               	btfss	status,2,c
  7331  001464  EF36  F00A         	goto	u2401
  7332  001468  EF38  F00A         	goto	u2400
  7333  00146C                     u2401:
  7334  00146C  EF3F  F00A         	goto	l3115
  7335  001470                     u2400:
  7336  001470  A455               	btfss	_flags^0,2,c
  7337  001472  EF3D  F00A         	goto	u2411
  7338  001476  EF3F  F00A         	goto	u2410
  7339  00147A                     u2411:
  7340  00147A  EF42  F00A         	goto	l3117
  7341  00147E                     u2410:
  7342  00147E                     l3115:
  7343                           
  7344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  7345  00147E  0638               	decf	dtoa@w^0,f,c
  7346  001480  A0D8               	btfss	status,0,c
  7347  001482  0639               	decf	(dtoa@w+1)^0,f,c
  7348  001484                     l3117:
  7349                           
  7350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7351  001484  0E00               	movlw	0
  7352  001486  6E45               	movwf	(dtoa@i+1)^0,c
  7353  001488  0E1F               	movlw	31
  7354  00148A  6E44               	movwf	dtoa@i^0,c
  7355  00148C                     
  7356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7357  00148C  0E00               	movlw	0
  7358  00148E  0100               	movlb	0	; () banked
  7359  001490  6F85               	movwf	(_dbuf+31)& (0+255),b
  7360                           
  7361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7362  001492  EFC7  F00A         	goto	l3131
  7363  001496                     l3121:
  7364                           
  7365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  7366  001496  0644               	decf	dtoa@i^0,f,c
  7367  001498  A0D8               	btfss	status,0,c
  7368  00149A  0645               	decf	(dtoa@i+1)^0,f,c
  7369  00149C                     
  7370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7371  00149C  0E66               	movlw	low _dbuf
  7372  00149E  2444               	addwf	dtoa@i^0,w,c
  7373  0014A0  6ED9               	movwf	fsr2l,c
  7374  0014A2  0E00               	movlw	high _dbuf
  7375  0014A4  2045               	addwfc	(dtoa@i+1)^0,w,c
  7376  0014A6  6EDA               	movwf	fsr2h,c
  7377  0014A8  C03C  F007         	movff	dtoa@n,___aomod@dividend
  7378  0014AC  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  7379  0014B0  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  7380  0014B4  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  7381  0014B8  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  7382  0014BC  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  7383  0014C0  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  7384  0014C4  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  7385  0014C8  0E0A               	movlw	10
  7386  0014CA  6E0F               	movwf	___aomod@divisor^0,c
  7387  0014CC  0E00               	movlw	0
  7388  0014CE  6E10               	movwf	(___aomod@divisor+1)^0,c
  7389  0014D0  0E00               	movlw	0
  7390  0014D2  6E11               	movwf	(___aomod@divisor+2)^0,c
  7391  0014D4  0E00               	movlw	0
  7392  0014D6  6E12               	movwf	(___aomod@divisor+3)^0,c
  7393  0014D8  0E00               	movlw	0
  7394  0014DA  6E13               	movwf	(___aomod@divisor+4)^0,c
  7395  0014DC  0E00               	movlw	0
  7396  0014DE  6E14               	movwf	(___aomod@divisor+5)^0,c
  7397  0014E0  0E00               	movlw	0
  7398  0014E2  6E15               	movwf	(___aomod@divisor+6)^0,c
  7399  0014E4  0E00               	movlw	0
  7400  0014E6  6E16               	movwf	(___aomod@divisor+7)^0,c
  7401  0014E8  EC28  F011         	call	___aomod	;wreg free
  7402  0014EC  C007  F02C         	movff	?___aomod,??_dtoa
  7403  0014F0  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  7404  0014F4  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  7405  0014F8  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  7406  0014FC  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  7407  001500  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  7408  001504  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  7409  001508  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  7410  00150C  C02C  F019         	movff	??_dtoa,abs@a
  7411  001510  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  7412  001514  EC2B  F01B         	call	_abs	;wreg free
  7413  001518  5019               	movf	?_abs^0,w,c
  7414  00151A  0F30               	addlw	48
  7415  00151C  6EDF               	movwf	indf2,c
  7416  00151E                     
  7417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  7418  00151E  0636               	decf	dtoa@p^0,f,c
  7419  001520  A0D8               	btfss	status,0,c
  7420  001522  0637               	decf	(dtoa@p+1)^0,f,c
  7421  001524                     
  7422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  7423  001524  0638               	decf	dtoa@w^0,f,c
  7424  001526  A0D8               	btfss	status,0,c
  7425  001528  0639               	decf	(dtoa@w+1)^0,f,c
  7426  00152A                     
  7427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7428  00152A  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  7429  00152E  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  7430  001532  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  7431  001536  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  7432  00153A  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  7433  00153E  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  7434  001542  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  7435  001546  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  7436  00154A  0E0A               	movlw	10
  7437  00154C  6E0F               	movwf	___aodiv@divisor^0,c
  7438  00154E  0E00               	movlw	0
  7439  001550  6E10               	movwf	(___aodiv@divisor+1)^0,c
  7440  001552  0E00               	movlw	0
  7441  001554  6E11               	movwf	(___aodiv@divisor+2)^0,c
  7442  001556  0E00               	movlw	0
  7443  001558  6E12               	movwf	(___aodiv@divisor+3)^0,c
  7444  00155A  0E00               	movlw	0
  7445  00155C  6E13               	movwf	(___aodiv@divisor+4)^0,c
  7446  00155E  0E00               	movlw	0
  7447  001560  6E14               	movwf	(___aodiv@divisor+5)^0,c
  7448  001562  0E00               	movlw	0
  7449  001564  6E15               	movwf	(___aodiv@divisor+6)^0,c
  7450  001566  0E00               	movlw	0
  7451  001568  6E16               	movwf	(___aodiv@divisor+7)^0,c
  7452  00156A  ECA9  F00F         	call	___aodiv	;wreg free
  7453  00156E  C007  F03C         	movff	?___aodiv,dtoa@n
  7454  001572  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  7455  001576  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  7456  00157A  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  7457  00157E  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  7458  001582  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  7459  001586  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  7460  00158A  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  7461  00158E                     l3131:
  7462                           
  7463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7464  00158E  BE45               	btfsc	(dtoa@i+1)^0,7,c
  7465  001590  EFD2  F00A         	goto	u2421
  7466  001594  5045               	movf	(dtoa@i+1)^0,w,c
  7467  001596  E108               	bnz	u2420
  7468  001598  0444               	decf	dtoa@i^0,w,c
  7469  00159A  A0D8               	btfss	status,0,c
  7470  00159C  EFD2  F00A         	goto	u2421
  7471  0015A0  EFD4  F00A         	goto	u2420
  7472  0015A4                     u2421:
  7473  0015A4  EF04  F00B         	goto	l3141
  7474  0015A8                     u2420:
  7475  0015A8  503C               	movf	dtoa@n^0,w,c
  7476  0015AA  103D               	iorwf	(dtoa@n+1)^0,w,c
  7477  0015AC  103E               	iorwf	(dtoa@n+2)^0,w,c
  7478  0015AE  103F               	iorwf	(dtoa@n+3)^0,w,c
  7479  0015B0  1040               	iorwf	(dtoa@n+4)^0,w,c
  7480  0015B2  1041               	iorwf	(dtoa@n+5)^0,w,c
  7481  0015B4  1042               	iorwf	(dtoa@n+6)^0,w,c
  7482  0015B6  1043               	iorwf	(dtoa@n+7)^0,w,c
  7483  0015B8  A4D8               	btfss	status,2,c
  7484  0015BA  EFE1  F00A         	goto	u2431
  7485  0015BE  EFE3  F00A         	goto	u2430
  7486  0015C2                     u2431:
  7487  0015C2  EF4B  F00A         	goto	l3121
  7488  0015C6                     u2430:
  7489  0015C6  BE37               	btfsc	(dtoa@p+1)^0,7,c
  7490  0015C8  EFF0  F00A         	goto	u2440
  7491  0015CC  5037               	movf	(dtoa@p+1)^0,w,c
  7492  0015CE  E106               	bnz	u2441
  7493  0015D0  0436               	decf	dtoa@p^0,w,c
  7494  0015D2  B0D8               	btfsc	status,0,c
  7495  0015D4  EFEE  F00A         	goto	u2441
  7496  0015D8  EFF0  F00A         	goto	u2440
  7497  0015DC                     u2441:
  7498  0015DC  EF4B  F00A         	goto	l3121
  7499  0015E0                     u2440:
  7500  0015E0  BE39               	btfsc	(dtoa@w+1)^0,7,c
  7501  0015E2  EFFB  F00A         	goto	u2451
  7502  0015E6  5039               	movf	(dtoa@w+1)^0,w,c
  7503  0015E8  E108               	bnz	u2450
  7504  0015EA  0438               	decf	dtoa@w^0,w,c
  7505  0015EC  A0D8               	btfss	status,0,c
  7506  0015EE  EFFB  F00A         	goto	u2451
  7507  0015F2  EFFD  F00A         	goto	u2450
  7508  0015F6                     u2451:
  7509  0015F6  EF04  F00B         	goto	l3141
  7510  0015FA                     u2450:
  7511  0015FA  B255               	btfsc	_flags^0,1,c
  7512  0015FC  EF02  F00B         	goto	u2461
  7513  001600  EF04  F00B         	goto	u2460
  7514  001604                     u2461:
  7515  001604  EF4B  F00A         	goto	l3121
  7516  001608                     u2460:
  7517  001608                     l3141:
  7518                           
  7519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7520  001608  503A               	movf	dtoa@s^0,w,c
  7521  00160A  103B               	iorwf	(dtoa@s+1)^0,w,c
  7522  00160C  A4D8               	btfss	status,2,c
  7523  00160E  EF0B  F00B         	goto	u2471
  7524  001612  EF0D  F00B         	goto	u2470
  7525  001616                     u2471:
  7526  001616  EF14  F00B         	goto	l3145
  7527  00161A                     u2470:
  7528  00161A  A455               	btfss	_flags^0,2,c
  7529  00161C  EF12  F00B         	goto	u2481
  7530  001620  EF14  F00B         	goto	u2480
  7531  001624                     u2481:
  7532  001624  EF32  F00B         	goto	l3155
  7533  001628                     u2480:
  7534  001628                     l3145:
  7535                           
  7536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  7537  001628  0644               	decf	dtoa@i^0,f,c
  7538  00162A  A0D8               	btfss	status,0,c
  7539  00162C  0645               	decf	(dtoa@i+1)^0,f,c
  7540  00162E                     
  7541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7542  00162E  503A               	movf	dtoa@s^0,w,c
  7543  001630  103B               	iorwf	(dtoa@s+1)^0,w,c
  7544  001632  A4D8               	btfss	status,2,c
  7545  001634  EF1E  F00B         	goto	u2491
  7546  001638  EF20  F00B         	goto	u2490
  7547  00163C                     u2491:
  7548  00163C  EF26  F00B         	goto	l3151
  7549  001640                     u2490:
  7550  001640  0E00               	movlw	0
  7551  001642  6E35               	movwf	(_dtoa$2341+1)^0,c
  7552  001644  0E2B               	movlw	43
  7553  001646  6E34               	movwf	_dtoa$2341^0,c
  7554  001648  EF2A  F00B         	goto	l3153
  7555  00164C                     l3151:
  7556  00164C  0E00               	movlw	0
  7557  00164E  6E35               	movwf	(_dtoa$2341+1)^0,c
  7558  001650  0E2D               	movlw	45
  7559  001652  6E34               	movwf	_dtoa$2341^0,c
  7560  001654                     l3153:
  7561  001654  0E66               	movlw	low _dbuf
  7562  001656  2444               	addwf	dtoa@i^0,w,c
  7563  001658  6ED9               	movwf	fsr2l,c
  7564  00165A  0E00               	movlw	high _dbuf
  7565  00165C  2045               	addwfc	(dtoa@i+1)^0,w,c
  7566  00165E  6EDA               	movwf	fsr2h,c
  7567  001660  C034  FFDF         	movff	_dtoa$2341,indf2
  7568  001664                     l3155:
  7569                           
  7570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7571  001664  C022  F017         	movff	dtoa@fp,pad@fp
  7572  001668  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  7573  00166C  0E66               	movlw	low _dbuf
  7574  00166E  2444               	addwf	dtoa@i^0,w,c
  7575  001670  6E19               	movwf	pad@buf^0,c
  7576  001672  0E00               	movlw	high _dbuf
  7577  001674  2045               	addwfc	(dtoa@i+1)^0,w,c
  7578  001676  6E1A               	movwf	(pad@buf+1)^0,c
  7579  001678  C038  F01B         	movff	dtoa@w,pad@p
  7580  00167C  C039  F01C         	movff	dtoa@w+1,pad@p+1
  7581  001680  ECDC  F015         	call	_pad	;wreg free
  7582  001684  C017  F022         	movff	?_pad,?_dtoa
  7583  001688  C018  F023         	movff	?_pad+1,?_dtoa+1
  7584  00168C  0012               	return		;funcret
  7585  00168E                     __end_of_dtoa:
  7586                           	callstack 0
  7587                           
  7588 ;; *************** function _pad *****************
  7589 ;; Defined at:
  7590 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  7593 ;;		 -> sprintf@f(6), 
  7594 ;;  buf             2   24[COMRAM] PTR unsigned char 
  7595 ;;		 -> dbuf(32), 
  7596 ;;  p               2   26[COMRAM] int 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  w               2   31[COMRAM] int 
  7599 ;;  i               2   29[COMRAM] int 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  2   22[COMRAM] int 
  7602 ;; Registers used:
  7603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7609 ;;      Params:         6       0       0       0       0       0       0       0       0
  7610 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7611 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7612 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7613 ;;Total ram usage:       11 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    5
  7616 ;; This function calls:
  7617 ;;		_fputc
  7618 ;;		_fputs
  7619 ;;		_strlen
  7620 ;; This function is called by:
  7621 ;;		_dtoa
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text42
  7626  002BB8                     __ptext42:
  7627                           	callstack 0
  7628  002BB8                     _pad:
  7629                           	callstack 20
  7630  002BB8                     
  7631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7632  002BB8  A055               	btfss	_flags^0,0,c
  7633  002BBA  EFE1  F015         	goto	u2261
  7634  002BBE  EFE3  F015         	goto	u2260
  7635  002BC2                     u2261:
  7636  002BC2  EFED  F015         	goto	l3059
  7637  002BC6                     u2260:
  7638  002BC6                     
  7639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7640  002BC6  C019  F010         	movff	pad@buf,fputs@s
  7641  002BCA  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7642  002BCE  C017  F012         	movff	pad@fp,fputs@fp
  7643  002BD2  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7644  002BD6  EC09  F01B         	call	_fputs	;wreg free
  7645  002BDA                     l3059:
  7646                           
  7647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7648  002BDA  BE1C               	btfsc	(pad@p+1)^0,7,c
  7649  002BDC  EFF2  F015         	goto	u2271
  7650  002BE0  EFF4  F015         	goto	u2270
  7651  002BE4                     u2271:
  7652  002BE4  EFFA  F015         	goto	l3063
  7653  002BE8                     u2270:
  7654  002BE8  C01B  F020         	movff	pad@p,pad@w
  7655  002BEC  C01C  F021         	movff	pad@p+1,pad@w+1
  7656  002BF0  EFFE  F015         	goto	l1175
  7657  002BF4                     l3063:
  7658  002BF4  0E00               	movlw	0
  7659  002BF6  6E21               	movwf	(pad@w+1)^0,c
  7660  002BF8  0E00               	movlw	0
  7661  002BFA  6E20               	movwf	pad@w^0,c
  7662  002BFC                     l1175:
  7663                           
  7664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7665  002BFC  0E00               	movlw	0
  7666  002BFE  6E1F               	movwf	(pad@i+1)^0,c
  7667  002C00  0E00               	movlw	0
  7668  002C02  6E1E               	movwf	pad@i^0,c
  7669                           
  7670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7671  002C04  EF10  F016         	goto	l3069
  7672  002C08                     l3065:
  7673                           
  7674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7675  002C08  0E00               	movlw	0
  7676  002C0A  6E08               	movwf	(fputc@c+1)^0,c
  7677  002C0C  0E20               	movlw	32
  7678  002C0E  6E07               	movwf	fputc@c^0,c
  7679  002C10  C017  F009         	movff	pad@fp,fputc@fp
  7680  002C14  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  7681  002C18  EC77  F015         	call	_fputc	;wreg free
  7682  002C1C                     
  7683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7684  002C1C  4A1E               	infsnz	pad@i^0,f,c
  7685  002C1E  2A1F               	incf	(pad@i+1)^0,f,c
  7686  002C20                     l3069:
  7687                           
  7688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7689  002C20  5020               	movf	pad@w^0,w,c
  7690  002C22  5C1E               	subwf	pad@i^0,w,c
  7691  002C24  501F               	movf	(pad@i+1)^0,w,c
  7692  002C26  0A80               	xorlw	128
  7693  002C28  6E1D               	movwf	??_pad^0,c
  7694  002C2A  5021               	movf	(pad@w+1)^0,w,c
  7695  002C2C  0A80               	xorlw	128
  7696  002C2E  581D               	subwfb	??_pad^0,w,c
  7697  002C30  A0D8               	btfss	status,0,c
  7698  002C32  EF1D  F016         	goto	u2281
  7699  002C36  EF1F  F016         	goto	u2280
  7700  002C3A                     u2281:
  7701  002C3A  EF04  F016         	goto	l3065
  7702  002C3E                     u2280:
  7703  002C3E                     
  7704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7705  002C3E  B055               	btfsc	_flags^0,0,c
  7706  002C40  EF24  F016         	goto	u2291
  7707  002C44  EF26  F016         	goto	u2290
  7708  002C48                     u2291:
  7709  002C48  EF30  F016         	goto	l3073
  7710  002C4C                     u2290:
  7711  002C4C                     
  7712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7713  002C4C  C019  F010         	movff	pad@buf,fputs@s
  7714  002C50  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7715  002C54  C017  F012         	movff	pad@fp,fputs@fp
  7716  002C58  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7717  002C5C  EC09  F01B         	call	_fputs	;wreg free
  7718  002C60                     l3073:
  7719                           
  7720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7721  002C60  C019  F007         	movff	pad@buf,strlen@s
  7722  002C64  C01A  F008         	movff	pad@buf+1,strlen@s+1
  7723  002C68  EC85  F01B         	call	_strlen	;wreg free
  7724  002C6C  5020               	movf	pad@w^0,w,c
  7725  002C6E  2407               	addwf	?_strlen^0,w,c
  7726  002C70  6E17               	movwf	?_pad^0,c
  7727  002C72  5021               	movf	(pad@w+1)^0,w,c
  7728  002C74  2008               	addwfc	(?_strlen+1)^0,w,c
  7729  002C76  6E18               	movwf	(?_pad+1)^0,c
  7730  002C78  0012               	return		;funcret
  7731  002C7A                     __end_of_pad:
  7732                           	callstack 0
  7733                           
  7734 ;; *************** function _strlen *****************
  7735 ;; Defined at:
  7736 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7739 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  a               2    8[COMRAM] PTR const unsigned char 
  7742 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  2    6[COMRAM] unsigned int 
  7745 ;; Registers used:
  7746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7752 ;;      Params:         2       0       0       0       0       0       0       0       0
  7753 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7755 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7756 ;;Total ram usage:        4 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:    2
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_sendData
  7763 ;;		_pad
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text43
  7768  00370A                     __ptext43:
  7769                           	callstack 0
  7770  00370A                     _strlen:
  7771                           	callstack 22
  7772  00370A  C007  F009         	movff	strlen@s,strlen@a
  7773  00370E  C008  F00A         	movff	strlen@s+1,strlen@a+1
  7774  003712  EF8D  F01B         	goto	l2955
  7775  003716                     l2953:
  7776  003716  4A07               	infsnz	strlen@s^0,f,c
  7777  003718  2A08               	incf	(strlen@s+1)^0,f,c
  7778  00371A                     l2955:
  7779  00371A  C007  FFD9         	movff	strlen@s,fsr2l
  7780  00371E  C008  FFDA         	movff	strlen@s+1,fsr2h
  7781  003722  50DF               	movf	indf2,w,c
  7782  003724  A4D8               	btfss	status,2,c
  7783  003726  EF97  F01B         	goto	u2111
  7784  00372A  EF99  F01B         	goto	u2110
  7785  00372E                     u2111:
  7786  00372E  EF8B  F01B         	goto	l2953
  7787  003732                     u2110:
  7788  003732  5009               	movf	strlen@a^0,w,c
  7789  003734  5C07               	subwf	strlen@s^0,w,c
  7790  003736  6E07               	movwf	?_strlen^0,c
  7791  003738  500A               	movf	(strlen@a+1)^0,w,c
  7792  00373A  5808               	subwfb	(strlen@s+1)^0,w,c
  7793  00373C  6E08               	movwf	(?_strlen+1)^0,c
  7794  00373E  0012               	return		;funcret
  7795  003740                     __end_of_strlen:
  7796                           	callstack 0
  7797                           
  7798 ;; *************** function _fputs *****************
  7799 ;; Defined at:
  7800 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7803 ;;		 -> dbuf(32), 
  7804 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7805 ;;		 -> sprintf@f(6), 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  i               2   20[COMRAM] int 
  7808 ;;  c               1   19[COMRAM] unsigned char 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  2   15[COMRAM] int 
  7811 ;; Registers used:
  7812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7818 ;;      Params:         4       0       0       0       0       0       0       0       0
  7819 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7821 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7822 ;;Total ram usage:        7 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    4
  7825 ;; This function calls:
  7826 ;;		_fputc
  7827 ;; This function is called by:
  7828 ;;		_pad
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text44
  7833  003612                     __ptext44:
  7834                           	callstack 0
  7835  003612                     _fputs:
  7836                           	callstack 20
  7837  003612  0E00               	movlw	0
  7838  003614  6E16               	movwf	(fputs@i+1)^0,c
  7839  003616  0E00               	movlw	0
  7840  003618  6E15               	movwf	fputs@i^0,c
  7841  00361A  EF1A  F01B         	goto	l2967
  7842  00361E                     l2963:
  7843  00361E  C014  F007         	movff	fputs@c,fputc@c
  7844  003622  6A08               	clrf	(fputc@c+1)^0,c
  7845  003624  C012  F009         	movff	fputs@fp,fputc@fp
  7846  003628  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  7847  00362C  EC77  F015         	call	_fputc	;wreg free
  7848  003630  4A15               	infsnz	fputs@i^0,f,c
  7849  003632  2A16               	incf	(fputs@i+1)^0,f,c
  7850  003634                     l2967:
  7851  003634  5015               	movf	fputs@i^0,w,c
  7852  003636  2410               	addwf	fputs@s^0,w,c
  7853  003638  6ED9               	movwf	fsr2l,c
  7854  00363A  5016               	movf	(fputs@i+1)^0,w,c
  7855  00363C  2011               	addwfc	(fputs@s+1)^0,w,c
  7856  00363E  6EDA               	movwf	fsr2h,c
  7857  003640  50DF               	movf	indf2,w,c
  7858  003642  6E14               	movwf	fputs@c^0,c
  7859  003644  5014               	movf	fputs@c^0,w,c
  7860  003646  A4D8               	btfss	status,2,c
  7861  003648  EF28  F01B         	goto	u2121
  7862  00364C  EF2A  F01B         	goto	u2120
  7863  003650                     u2121:
  7864  003650  EF0F  F01B         	goto	l2963
  7865  003654                     u2120:
  7866  003654  0012               	return		;funcret
  7867  003656                     __end_of_fputs:
  7868                           	callstack 0
  7869                           
  7870 ;; *************** function _fputc *****************
  7871 ;; Defined at:
  7872 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  c               2    6[COMRAM] int 
  7875 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  7876 ;;		 -> sprintf@f(6), 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;		None
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  2    6[COMRAM] int 
  7881 ;; Registers used:
  7882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7888 ;;      Params:         4       0       0       0       0       0       0       0       0
  7889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7890 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7891 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7892 ;;Total ram usage:        9 bytes
  7893 ;; Hardware stack levels used:    1
  7894 ;; Hardware stack levels required when called:    3
  7895 ;; This function calls:
  7896 ;;		_putch
  7897 ;; This function is called by:
  7898 ;;		_pad
  7899 ;;		_vfpfcnvrt
  7900 ;;		_fputs
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           	psect	text45
  7905  002AEE                     __ptext45:
  7906                           	callstack 0
  7907  002AEE                     _fputc:
  7908                           	callstack 23
  7909  002AEE  5009               	movf	fputc@fp^0,w,c
  7910  002AF0  100A               	iorwf	(fputc@fp+1)^0,w,c
  7911  002AF2  B4D8               	btfsc	status,2,c
  7912  002AF4  EF7E  F015         	goto	u2071
  7913  002AF8  EF80  F015         	goto	u2070
  7914  002AFC                     u2071:
  7915  002AFC  EF89  F015         	goto	l2941
  7916  002B00                     u2070:
  7917  002B00  5009               	movf	fputc@fp^0,w,c
  7918  002B02  100A               	iorwf	(fputc@fp+1)^0,w,c
  7919  002B04  A4D8               	btfss	status,2,c
  7920  002B06  EF87  F015         	goto	u2081
  7921  002B0A  EF89  F015         	goto	u2080
  7922  002B0E                     u2081:
  7923  002B0E  EF8E  F015         	goto	l2943
  7924  002B12                     u2080:
  7925  002B12                     l2941:
  7926  002B12  5007               	movf	fputc@c^0,w,c
  7927  002B14  EC2D  F01C         	call	_putch
  7928  002B18  EFDB  F015         	goto	l1306
  7929  002B1C                     l2943:
  7930  002B1C  EE20 F004          	lfsr	2,4
  7931  002B20  5009               	movf	fputc@fp^0,w,c
  7932  002B22  26D9               	addwf	fsr2l,f,c
  7933  002B24  500A               	movf	(fputc@fp+1)^0,w,c
  7934  002B26  22DA               	addwfc	fsr2h,f,c
  7935  002B28  50DE               	movf	postinc2,w,c
  7936  002B2A  10DE               	iorwf	postinc2,w,c
  7937  002B2C  B4D8               	btfsc	status,2,c
  7938  002B2E  EF9B  F015         	goto	u2091
  7939  002B32  EF9D  F015         	goto	u2090
  7940  002B36                     u2091:
  7941  002B36  EFB8  F015         	goto	l2947
  7942  002B3A                     u2090:
  7943  002B3A  EE20 F004          	lfsr	2,4
  7944  002B3E  5009               	movf	fputc@fp^0,w,c
  7945  002B40  26D9               	addwf	fsr2l,f,c
  7946  002B42  500A               	movf	(fputc@fp+1)^0,w,c
  7947  002B44  22DA               	addwfc	fsr2h,f,c
  7948  002B46  EE10 F002          	lfsr	1,2
  7949  002B4A  5009               	movf	fputc@fp^0,w,c
  7950  002B4C  26E1               	addwf	fsr1l,f,c
  7951  002B4E  500A               	movf	(fputc@fp+1)^0,w,c
  7952  002B50  22E2               	addwfc	fsr1h,f,c
  7953  002B52  50DE               	movf	postinc2,w,c
  7954  002B54  5CE6               	subwf	postinc1,w,c
  7955  002B56  50E6               	movf	postinc1,w,c
  7956  002B58  0A80               	xorlw	128
  7957  002B5A  6E0F               	movwf	(??_fputc+4)^0,c
  7958  002B5C  50DE               	movf	postinc2,w,c
  7959  002B5E  0A80               	xorlw	128
  7960  002B60  580F               	subwfb	(??_fputc+4)^0,w,c
  7961  002B62  B0D8               	btfsc	status,0,c
  7962  002B64  EFB6  F015         	goto	u2101
  7963  002B68  EFB8  F015         	goto	u2100
  7964  002B6C                     u2101:
  7965  002B6C  EFDB  F015         	goto	l1306
  7966  002B70                     u2100:
  7967  002B70                     l2947:
  7968  002B70  EE20 F002          	lfsr	2,2
  7969  002B74  5009               	movf	fputc@fp^0,w,c
  7970  002B76  26D9               	addwf	fsr2l,f,c
  7971  002B78  500A               	movf	(fputc@fp+1)^0,w,c
  7972  002B7A  22DA               	addwfc	fsr2h,f,c
  7973  002B7C  CFDE F00B          	movff	postinc2,??_fputc
  7974  002B80  CFDD F00C          	movff	postdec2,??_fputc+1
  7975  002B84  C009  FFD9         	movff	fputc@fp,fsr2l
  7976  002B88  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  7977  002B8C  CFDE F00D          	movff	postinc2,??_fputc+2
  7978  002B90  CFDD F00E          	movff	postdec2,??_fputc+3
  7979  002B94  500B               	movf	??_fputc^0,w,c
  7980  002B96  240D               	addwf	(??_fputc+2)^0,w,c
  7981  002B98  6ED9               	movwf	fsr2l,c
  7982  002B9A  500C               	movf	(??_fputc+1)^0,w,c
  7983  002B9C  200E               	addwfc	(??_fputc+3)^0,w,c
  7984  002B9E  6EDA               	movwf	fsr2h,c
  7985  002BA0  C007  FFDF         	movff	fputc@c,indf2
  7986  002BA4  EE20 F002          	lfsr	2,2
  7987  002BA8  5009               	movf	fputc@fp^0,w,c
  7988  002BAA  26D9               	addwf	fsr2l,f,c
  7989  002BAC  500A               	movf	(fputc@fp+1)^0,w,c
  7990  002BAE  22DA               	addwfc	fsr2h,f,c
  7991  002BB0  2ADE               	incf	postinc2,f,c
  7992  002BB2  0E00               	movlw	0
  7993  002BB4  22DD               	addwfc	postdec2,f,c
  7994  002BB6                     l1306:
  7995  002BB6  0012               	return		;funcret
  7996  002BB8                     __end_of_fputc:
  7997                           	callstack 0
  7998                           
  7999 ;; *************** function _putch *****************
  8000 ;; Defined at:
  8001 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;  c               1    wreg     unsigned char 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  c               1    0[COMRAM] unsigned char 
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  1    wreg      void 
  8008 ;; Registers used:
  8009 ;;		wreg
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8015 ;;      Params:         0       0       0       0       0       0       0       0       0
  8016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8018 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8019 ;;Total ram usage:        0 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:    2
  8022 ;; This function calls:
  8023 ;;		Nothing
  8024 ;; This function is called by:
  8025 ;;		_fputc
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           	psect	text46
  8030  00385A                     __ptext46:
  8031                           	callstack 0
  8032  00385A                     _putch:
  8033                           	callstack 23
  8034  00385A  0012               	return		;funcret
  8035  00385C                     __end_of_putch:
  8036                           	callstack 0
  8037                           
  8038 ;; *************** function _abs *****************
  8039 ;; Defined at:
  8040 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  a               2   24[COMRAM] int 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;		None
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  2   24[COMRAM] int 
  8047 ;; Registers used:
  8048 ;;		wreg, status,2, status,0
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8054 ;;      Params:         2       0       0       0       0       0       0       0       0
  8055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8056 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8057 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8058 ;;Total ram usage:        4 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; Hardware stack levels required when called:    2
  8061 ;; This function calls:
  8062 ;;		Nothing
  8063 ;; This function is called by:
  8064 ;;		_dtoa
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           	psect	text47
  8069  003656                     __ptext47:
  8070                           	callstack 0
  8071  003656                     _abs:
  8072                           	callstack 23
  8073  003656  BE1A               	btfsc	(abs@a+1)^0,7,c
  8074  003658  EF38  F01B         	goto	u2300
  8075  00365C  501A               	movf	(abs@a+1)^0,w,c
  8076  00365E  E106               	bnz	u2301
  8077  003660  0419               	decf	abs@a^0,w,c
  8078  003662  B0D8               	btfsc	status,0,c
  8079  003664  EF36  F01B         	goto	u2301
  8080  003668  EF38  F01B         	goto	u2300
  8081  00366C                     u2301:
  8082  00366C  EF46  F01B         	goto	l1246
  8083  003670                     u2300:
  8084  003670  C019  F01B         	movff	abs@a,??_abs
  8085  003674  C01A  F01C         	movff	abs@a+1,??_abs+1
  8086  003678  1E1B               	comf	??_abs^0,f,c
  8087  00367A  1E1C               	comf	(??_abs+1)^0,f,c
  8088  00367C  4A1B               	infsnz	??_abs^0,f,c
  8089  00367E  2A1C               	incf	(??_abs+1)^0,f,c
  8090  003680  C01B  F019         	movff	??_abs,?_abs
  8091  003684  C01C  F01A         	movff	??_abs+1,?_abs+1
  8092  003688  EF4A  F01B         	goto	l1249
  8093  00368C                     l1246:
  8094  00368C  C019  F019         	movff	abs@a,?_abs
  8095  003690  C01A  F01A         	movff	abs@a+1,?_abs+1
  8096  003694                     l1249:
  8097  003694  0012               	return		;funcret
  8098  003696                     __end_of_abs:
  8099                           	callstack 0
  8100                           
  8101 ;; *************** function ___aomod *****************
  8102 ;; Defined at:
  8103 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;  dividend        8    6[COMRAM] long long 
  8106 ;;  divisor         8   14[COMRAM] long long 
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  sign            1   23[COMRAM] unsigned char 
  8109 ;;  counter         1   22[COMRAM] unsigned char 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  8    6[COMRAM] long long 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8119 ;;      Params:        16       0       0       0       0       0       0       0       0
  8120 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8122 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8123 ;;Total ram usage:       18 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; Hardware stack levels required when called:    2
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_dtoa
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text48
  8134  002250                     __ptext48:
  8135                           	callstack 0
  8136  002250                     ___aomod:
  8137                           	callstack 23
  8138  002250  0E00               	movlw	0
  8139  002252  6E18               	movwf	___aomod@sign^0,c
  8140  002254  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  8141  002256  EF31  F011         	goto	u2200
  8142  00225A  EF2F  F011         	goto	u2201
  8143  00225E                     u2201:
  8144  00225E  EF43  F011         	goto	l3027
  8145  002262                     u2200:
  8146  002262  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8147  002264  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8148  002266  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8149  002268  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8150  00226A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8151  00226C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8152  00226E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8153  002270  6C07               	negf	___aomod@dividend^0,c
  8154  002272  0E00               	movlw	0
  8155  002274  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8156  002276  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8157  002278  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8158  00227A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8159  00227C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8160  00227E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8161  002280  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8162  002282  0E01               	movlw	1
  8163  002284  6E18               	movwf	___aomod@sign^0,c
  8164  002286                     l3027:
  8165  002286  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  8166  002288  EF4A  F011         	goto	u2210
  8167  00228C  EF48  F011         	goto	u2211
  8168  002290                     u2211:
  8169  002290  EF5A  F011         	goto	l3031
  8170  002294                     u2210:
  8171  002294  1E16               	comf	(___aomod@divisor+7)^0,f,c
  8172  002296  1E15               	comf	(___aomod@divisor+6)^0,f,c
  8173  002298  1E14               	comf	(___aomod@divisor+5)^0,f,c
  8174  00229A  1E13               	comf	(___aomod@divisor+4)^0,f,c
  8175  00229C  1E12               	comf	(___aomod@divisor+3)^0,f,c
  8176  00229E  1E11               	comf	(___aomod@divisor+2)^0,f,c
  8177  0022A0  1E10               	comf	(___aomod@divisor+1)^0,f,c
  8178  0022A2  6C0F               	negf	___aomod@divisor^0,c
  8179  0022A4  0E00               	movlw	0
  8180  0022A6  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  8181  0022A8  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  8182  0022AA  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  8183  0022AC  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  8184  0022AE  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  8185  0022B0  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  8186  0022B2  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  8187  0022B4                     l3031:
  8188  0022B4  500F               	movf	___aomod@divisor^0,w,c
  8189  0022B6  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  8190  0022B8  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  8191  0022BA  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  8192  0022BC  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  8193  0022BE  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  8194  0022C0  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  8195  0022C2  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  8196  0022C4  B4D8               	btfsc	status,2,c
  8197  0022C6  EF67  F011         	goto	u2221
  8198  0022CA  EF69  F011         	goto	u2220
  8199  0022CE                     u2221:
  8200  0022CE  EFB1  F011         	goto	l3047
  8201  0022D2                     u2220:
  8202  0022D2  0E01               	movlw	1
  8203  0022D4  6E17               	movwf	___aomod@counter^0,c
  8204  0022D6  EF77  F011         	goto	l3037
  8205  0022DA                     l3035:
  8206  0022DA  90D8               	bcf	status,0,c
  8207  0022DC  360F               	rlcf	___aomod@divisor^0,f,c
  8208  0022DE  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  8209  0022E0  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  8210  0022E2  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  8211  0022E4  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  8212  0022E6  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  8213  0022E8  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  8214  0022EA  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  8215  0022EC  2A17               	incf	___aomod@counter^0,f,c
  8216  0022EE                     l3037:
  8217  0022EE  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  8218  0022F0  EF7C  F011         	goto	u2231
  8219  0022F4  EF7E  F011         	goto	u2230
  8220  0022F8                     u2231:
  8221  0022F8  EF6D  F011         	goto	l3035
  8222  0022FC                     u2230:
  8223  0022FC                     l3039:
  8224  0022FC  500F               	movf	___aomod@divisor^0,w,c
  8225  0022FE  5C07               	subwf	___aomod@dividend^0,w,c
  8226  002300  5010               	movf	(___aomod@divisor+1)^0,w,c
  8227  002302  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  8228  002304  5011               	movf	(___aomod@divisor+2)^0,w,c
  8229  002306  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  8230  002308  5012               	movf	(___aomod@divisor+3)^0,w,c
  8231  00230A  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  8232  00230C  5013               	movf	(___aomod@divisor+4)^0,w,c
  8233  00230E  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  8234  002310  5014               	movf	(___aomod@divisor+5)^0,w,c
  8235  002312  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  8236  002314  5015               	movf	(___aomod@divisor+6)^0,w,c
  8237  002316  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  8238  002318  5016               	movf	(___aomod@divisor+7)^0,w,c
  8239  00231A  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  8240  00231C  A0D8               	btfss	status,0,c
  8241  00231E  EF93  F011         	goto	u2241
  8242  002322  EF95  F011         	goto	u2240
  8243  002326                     u2241:
  8244  002326  EFA5  F011         	goto	l3043
  8245  00232A                     u2240:
  8246  00232A  500F               	movf	___aomod@divisor^0,w,c
  8247  00232C  5E07               	subwf	___aomod@dividend^0,f,c
  8248  00232E  5010               	movf	(___aomod@divisor+1)^0,w,c
  8249  002330  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  8250  002332  5011               	movf	(___aomod@divisor+2)^0,w,c
  8251  002334  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  8252  002336  5012               	movf	(___aomod@divisor+3)^0,w,c
  8253  002338  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  8254  00233A  5013               	movf	(___aomod@divisor+4)^0,w,c
  8255  00233C  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  8256  00233E  5014               	movf	(___aomod@divisor+5)^0,w,c
  8257  002340  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  8258  002342  5015               	movf	(___aomod@divisor+6)^0,w,c
  8259  002344  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  8260  002346  5016               	movf	(___aomod@divisor+7)^0,w,c
  8261  002348  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  8262  00234A                     l3043:
  8263  00234A  90D8               	bcf	status,0,c
  8264  00234C  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  8265  00234E  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  8266  002350  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  8267  002352  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  8268  002354  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  8269  002356  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  8270  002358  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  8271  00235A  320F               	rrcf	___aomod@divisor^0,f,c
  8272  00235C  2E17               	decfsz	___aomod@counter^0,f,c
  8273  00235E  EF7E  F011         	goto	l3039
  8274  002362                     l3047:
  8275  002362  5018               	movf	___aomod@sign^0,w,c
  8276  002364  B4D8               	btfsc	status,2,c
  8277  002366  EFB7  F011         	goto	u2251
  8278  00236A  EFB9  F011         	goto	u2250
  8279  00236E                     u2251:
  8280  00236E  EFC9  F011         	goto	l3051
  8281  002372                     u2250:
  8282  002372  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8283  002374  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8284  002376  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8285  002378  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8286  00237A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8287  00237C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8288  00237E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8289  002380  6C07               	negf	___aomod@dividend^0,c
  8290  002382  0E00               	movlw	0
  8291  002384  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8292  002386  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8293  002388  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8294  00238A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8295  00238C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8296  00238E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8297  002390  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8298  002392                     l3051:
  8299  002392  C007  F007         	movff	___aomod@dividend,?___aomod
  8300  002396  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  8301  00239A  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  8302  00239E  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  8303  0023A2  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  8304  0023A6  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  8305  0023AA  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  8306  0023AE  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  8307  0023B2  0012               	return		;funcret
  8308  0023B4                     __end_of___aomod:
  8309                           	callstack 0
  8310                           
  8311 ;; *************** function ___aodiv *****************
  8312 ;; Defined at:
  8313 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  dividend        8    6[COMRAM] long long 
  8316 ;;  divisor         8   14[COMRAM] long long 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  quotient        8   24[COMRAM] long long 
  8319 ;;  sign            1   23[COMRAM] unsigned char 
  8320 ;;  counter         1   22[COMRAM] unsigned char 
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  8    6[COMRAM] long long 
  8323 ;; Registers used:
  8324 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8330 ;;      Params:        16       0       0       0       0       0       0       0       0
  8331 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8333 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8334 ;;Total ram usage:       26 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:    2
  8337 ;; This function calls:
  8338 ;;		Nothing
  8339 ;; This function is called by:
  8340 ;;		_dtoa
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text49
  8345  001F52                     __ptext49:
  8346                           	callstack 0
  8347  001F52                     ___aodiv:
  8348                           	callstack 23
  8349  001F52  0E00               	movlw	0
  8350  001F54  6E18               	movwf	___aodiv@sign^0,c
  8351  001F56  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  8352  001F58  EFB2  F00F         	goto	u2130
  8353  001F5C  EFB0  F00F         	goto	u2131
  8354  001F60                     u2131:
  8355  001F60  EFC4  F00F         	goto	l2983
  8356  001F64                     u2130:
  8357  001F64  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  8358  001F66  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  8359  001F68  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  8360  001F6A  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  8361  001F6C  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  8362  001F6E  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  8363  001F70  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  8364  001F72  6C0F               	negf	___aodiv@divisor^0,c
  8365  001F74  0E00               	movlw	0
  8366  001F76  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  8367  001F78  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  8368  001F7A  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  8369  001F7C  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  8370  001F7E  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  8371  001F80  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  8372  001F82  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  8373  001F84  0E01               	movlw	1
  8374  001F86  6E18               	movwf	___aodiv@sign^0,c
  8375  001F88                     l2983:
  8376  001F88  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  8377  001F8A  EFCB  F00F         	goto	u2140
  8378  001F8E  EFC9  F00F         	goto	u2141
  8379  001F92                     u2141:
  8380  001F92  EFDD  F00F         	goto	l2989
  8381  001F96                     u2140:
  8382  001F96  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  8383  001F98  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  8384  001F9A  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  8385  001F9C  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  8386  001F9E  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  8387  001FA0  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  8388  001FA2  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  8389  001FA4  6C07               	negf	___aodiv@dividend^0,c
  8390  001FA6  0E00               	movlw	0
  8391  001FA8  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  8392  001FAA  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  8393  001FAC  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  8394  001FAE  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  8395  001FB0  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  8396  001FB2  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  8397  001FB4  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  8398  001FB6  0E01               	movlw	1
  8399  001FB8  1A18               	xorwf	___aodiv@sign^0,f,c
  8400  001FBA                     l2989:
  8401  001FBA  EE20  F019         	lfsr	2,___aodiv@quotient
  8402  001FBE  0E07               	movlw	7
  8403  001FC0                     u2151:
  8404  001FC0  6ADE               	clrf	postinc2,c
  8405  001FC2  06E8               	decf	wreg,f,c
  8406  001FC4  E2FD               	bc	u2151
  8407  001FC6  500F               	movf	___aodiv@divisor^0,w,c
  8408  001FC8  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  8409  001FCA  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  8410  001FCC  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  8411  001FCE  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  8412  001FD0  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  8413  001FD2  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  8414  001FD4  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  8415  001FD6  B4D8               	btfsc	status,2,c
  8416  001FD8  EFF0  F00F         	goto	u2161
  8417  001FDC  EFF2  F00F         	goto	u2160
  8418  001FE0                     u2161:
  8419  001FE0  EF44  F010         	goto	l3011
  8420  001FE4                     u2160:
  8421  001FE4  0E01               	movlw	1
  8422  001FE6  6E17               	movwf	___aodiv@counter^0,c
  8423  001FE8  EF00  F010         	goto	l2997
  8424  001FEC                     l2995:
  8425  001FEC  90D8               	bcf	status,0,c
  8426  001FEE  360F               	rlcf	___aodiv@divisor^0,f,c
  8427  001FF0  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  8428  001FF2  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  8429  001FF4  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  8430  001FF6  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  8431  001FF8  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  8432  001FFA  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  8433  001FFC  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  8434  001FFE  2A17               	incf	___aodiv@counter^0,f,c
  8435  002000                     l2997:
  8436  002000  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  8437  002002  EF05  F010         	goto	u2171
  8438  002006  EF07  F010         	goto	u2170
  8439  00200A                     u2171:
  8440  00200A  EFF6  F00F         	goto	l2995
  8441  00200E                     u2170:
  8442  00200E                     l2999:
  8443  00200E  90D8               	bcf	status,0,c
  8444  002010  3619               	rlcf	___aodiv@quotient^0,f,c
  8445  002012  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  8446  002014  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  8447  002016  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  8448  002018  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  8449  00201A  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  8450  00201C  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  8451  00201E  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  8452  002020  500F               	movf	___aodiv@divisor^0,w,c
  8453  002022  5C07               	subwf	___aodiv@dividend^0,w,c
  8454  002024  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8455  002026  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  8456  002028  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8457  00202A  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  8458  00202C  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8459  00202E  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  8460  002030  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8461  002032  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  8462  002034  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8463  002036  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  8464  002038  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8465  00203A  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  8466  00203C  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8467  00203E  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  8468  002040  A0D8               	btfss	status,0,c
  8469  002042  EF25  F010         	goto	u2181
  8470  002046  EF27  F010         	goto	u2180
  8471  00204A                     u2181:
  8472  00204A  EF38  F010         	goto	l3007
  8473  00204E                     u2180:
  8474  00204E  500F               	movf	___aodiv@divisor^0,w,c
  8475  002050  5E07               	subwf	___aodiv@dividend^0,f,c
  8476  002052  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8477  002054  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  8478  002056  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8479  002058  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  8480  00205A  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8481  00205C  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  8482  00205E  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8483  002060  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  8484  002062  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8485  002064  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  8486  002066  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8487  002068  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  8488  00206A  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8489  00206C  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  8490  00206E  8019               	bsf	___aodiv@quotient^0,0,c
  8491  002070                     l3007:
  8492  002070  90D8               	bcf	status,0,c
  8493  002072  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  8494  002074  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  8495  002076  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  8496  002078  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  8497  00207A  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  8498  00207C  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  8499  00207E  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  8500  002080  320F               	rrcf	___aodiv@divisor^0,f,c
  8501  002082  2E17               	decfsz	___aodiv@counter^0,f,c
  8502  002084  EF07  F010         	goto	l2999
  8503  002088                     l3011:
  8504  002088  5018               	movf	___aodiv@sign^0,w,c
  8505  00208A  B4D8               	btfsc	status,2,c
  8506  00208C  EF4A  F010         	goto	u2191
  8507  002090  EF4C  F010         	goto	u2190
  8508  002094                     u2191:
  8509  002094  EF5C  F010         	goto	l3015
  8510  002098                     u2190:
  8511  002098  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  8512  00209A  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  8513  00209C  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  8514  00209E  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  8515  0020A0  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  8516  0020A2  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  8517  0020A4  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  8518  0020A6  6C19               	negf	___aodiv@quotient^0,c
  8519  0020A8  0E00               	movlw	0
  8520  0020AA  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  8521  0020AC  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  8522  0020AE  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  8523  0020B0  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  8524  0020B2  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  8525  0020B4  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  8526  0020B6  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  8527  0020B8                     l3015:
  8528  0020B8  C019  F007         	movff	___aodiv@quotient,?___aodiv
  8529  0020BC  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  8530  0020C0  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  8531  0020C4  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  8532  0020C8  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  8533  0020CC  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  8534  0020D0  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  8535  0020D4  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  8536  0020D8  0012               	return		;funcret
  8537  0020DA                     __end_of___aodiv:
  8538                           	callstack 0
  8539                           
  8540 ;; *************** function _atoi *****************
  8541 ;; Defined at:
  8542 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8545 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  8546 ;;		 -> STR_1(14), 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;  n               2   26[COMRAM] int 
  8549 ;;  neg             2   19[COMRAM] int 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  2   13[COMRAM] int 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8559 ;;      Params:         2       0       0       0       0       0       0       0       0
  8560 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8561 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8562 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8563 ;;Total ram usage:       15 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:    3
  8566 ;; This function calls:
  8567 ;;		___wmul
  8568 ;;		_isdigit
  8569 ;;		_isspace
  8570 ;; This function is called by:
  8571 ;;		_vfpfcnvrt
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text50
  8576  001DC2                     __ptext50:
  8577                           	callstack 0
  8578  001DC2                     _atoi:
  8579                           	callstack 23
  8580  001DC2  0E00               	movlw	0
  8581  001DC4  6E1C               	movwf	(atoi@n+1)^0,c
  8582  001DC6  0E00               	movlw	0
  8583  001DC8  6E1B               	movwf	atoi@n^0,c
  8584  001DCA  0E00               	movlw	0
  8585  001DCC  6E15               	movwf	(atoi@neg+1)^0,c
  8586  001DCE  0E00               	movlw	0
  8587  001DD0  6E14               	movwf	atoi@neg^0,c
  8588  001DD2  EFED  F00E         	goto	l3163
  8589  001DD6                     l3161:
  8590  001DD6  4A0E               	infsnz	atoi@s^0,f,c
  8591  001DD8  2A0F               	incf	(atoi@s+1)^0,f,c
  8592  001DDA                     l3163:
  8593  001DDA  0E01               	movlw	1
  8594  001DDC  6E1A               	movwf	_atoi$2377^0,c
  8595  001DDE  C00E  FFF6         	movff	atoi@s,tblptrl
  8596  001DE2  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8597  001DE6                     	if	0	;tblptru may be non-zero
  8598  001DE6                     	endif
  8599  001DE6                     	if	0	;tblptru may be non-zero
  8600  001DE6                     	endif
  8601  001DE6  0008               	tblrd		*
  8602  001DE8  50F5               	movf	tablat,w,c
  8603  001DEA  0A20               	xorlw	32
  8604  001DEC  B4D8               	btfsc	status,2,c
  8605  001DEE  EFFB  F00E         	goto	u2501
  8606  001DF2  EFFD  F00E         	goto	u2500
  8607  001DF6                     u2501:
  8608  001DF6  EF1A  F00F         	goto	l3171
  8609  001DFA                     u2500:
  8610  001DFA  0EF7               	movlw	247
  8611  001DFC  6E10               	movwf	??_atoi^0,c
  8612  001DFE  0EFF               	movlw	255
  8613  001E00  6E11               	movwf	(??_atoi+1)^0,c
  8614  001E02  C00E  FFF6         	movff	atoi@s,tblptrl
  8615  001E06  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8616  001E0A                     	if	0	;tblptru may be non-zero
  8617  001E0A                     	endif
  8618  001E0A                     	if	0	;tblptru may be non-zero
  8619  001E0A                     	endif
  8620  001E0A  0008               	tblrd		*
  8621  001E0C  50F5               	movf	tablat,w,c
  8622  001E0E  6E12               	movwf	(??_atoi+2)^0,c
  8623  001E10  6A13               	clrf	(??_atoi+3)^0,c
  8624  001E12  5010               	movf	??_atoi^0,w,c
  8625  001E14  2612               	addwf	(??_atoi+2)^0,f,c
  8626  001E16  5011               	movf	(??_atoi+1)^0,w,c
  8627  001E18  2213               	addwfc	(??_atoi+3)^0,f,c
  8628  001E1A  5013               	movf	(??_atoi+3)^0,w,c
  8629  001E1C  E109               	bnz	u2510
  8630  001E1E  0E05               	movlw	5
  8631  001E20  5C12               	subwf	(??_atoi+2)^0,w,c
  8632  001E22  A0D8               	btfss	status,0,c
  8633  001E24  EF16  F00F         	goto	u2511
  8634  001E28  EF18  F00F         	goto	u2510
  8635  001E2C                     u2511:
  8636  001E2C  EF1A  F00F         	goto	l3171
  8637  001E30                     u2510:
  8638  001E30  0E00               	movlw	0
  8639  001E32  6E1A               	movwf	_atoi$2377^0,c
  8640  001E34                     l3171:
  8641  001E34  C01A  F016         	movff	_atoi$2377,_atoi$2376
  8642  001E38  6A17               	clrf	(_atoi$2376+1)^0,c
  8643  001E3A  5016               	movf	_atoi$2376^0,w,c
  8644  001E3C  1017               	iorwf	(_atoi$2376+1)^0,w,c
  8645  001E3E  A4D8               	btfss	status,2,c
  8646  001E40  EF24  F00F         	goto	u2521
  8647  001E44  EF26  F00F         	goto	u2520
  8648  001E48                     u2521:
  8649  001E48  EFEB  F00E         	goto	l3161
  8650  001E4C                     u2520:
  8651  001E4C  EF30  F00F         	goto	l3181
  8652  001E50                     l3177:
  8653  001E50  0E00               	movlw	0
  8654  001E52  6E15               	movwf	(atoi@neg+1)^0,c
  8655  001E54  0E01               	movlw	1
  8656  001E56  6E14               	movwf	atoi@neg^0,c
  8657  001E58                     l3179:
  8658  001E58  4A0E               	infsnz	atoi@s^0,f,c
  8659  001E5A  2A0F               	incf	(atoi@s+1)^0,f,c
  8660  001E5C  EF65  F00F         	goto	l3187
  8661  001E60                     l3181:
  8662  001E60  C00E  FFF6         	movff	atoi@s,tblptrl
  8663  001E64  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8664  001E68                     	if	0	;tblptru may be non-zero
  8665  001E68                     	endif
  8666  001E68                     	if	0	;tblptru may be non-zero
  8667  001E68                     	endif
  8668  001E68  0008               	tblrd		*
  8669  001E6A  50F5               	movf	tablat,w,c
  8670  001E6C  6E10               	movwf	??_atoi^0,c
  8671  001E6E  6A11               	clrf	(??_atoi+1)^0,c
  8672                           
  8673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8674                           ; Switch size 1, requested type "simple"
  8675                           ; Number of cases is 1, Range of values is 0 to 0
  8676                           ; switch strategies available:
  8677                           ; Name         Instructions Cycles
  8678                           ; simple_byte            4     3 (average)
  8679                           ;	Chosen strategy is simple_byte
  8680  001E70  5011               	movf	(??_atoi+1)^0,w,c
  8681  001E72  0A00               	xorlw	0	; case 0
  8682  001E74  B4D8               	btfsc	status,2,c
  8683  001E76  EF3F  F00F         	goto	l5027
  8684  001E7A  EF65  F00F         	goto	l3187
  8685  001E7E                     l5027:
  8686                           
  8687                           ; Switch size 1, requested type "simple"
  8688                           ; Number of cases is 2, Range of values is 43 to 45
  8689                           ; switch strategies available:
  8690                           ; Name         Instructions Cycles
  8691                           ; simple_byte            7     4 (average)
  8692                           ;	Chosen strategy is simple_byte
  8693  001E7E  5010               	movf	??_atoi^0,w,c
  8694  001E80  0A2B               	xorlw	43	; case 43
  8695  001E82  B4D8               	btfsc	status,2,c
  8696  001E84  EF2C  F00F         	goto	l3179
  8697  001E88  0A06               	xorlw	6	; case 45
  8698  001E8A  B4D8               	btfsc	status,2,c
  8699  001E8C  EF28  F00F         	goto	l3177
  8700  001E90  EF65  F00F         	goto	l3187
  8701  001E94                     l3183:
  8702  001E94  C01B  F007         	movff	atoi@n,___wmul@multiplier
  8703  001E98  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  8704  001E9C  0E00               	movlw	0
  8705  001E9E  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  8706  001EA0  0E0A               	movlw	10
  8707  001EA2  6E09               	movwf	___wmul@multiplicand^0,c
  8708  001EA4  ECE6  F01B         	call	___wmul	;wreg free
  8709  001EA8  C00E  FFF6         	movff	atoi@s,tblptrl
  8710  001EAC  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8711  001EB0                     	if	0	;tblptru may be non-zero
  8712  001EB0                     	endif
  8713  001EB0                     	if	0	;tblptru may be non-zero
  8714  001EB0                     	endif
  8715  001EB0  0008               	tblrd		*
  8716  001EB2  50F5               	movf	tablat,w,c
  8717  001EB4  5E07               	subwf	?___wmul^0,f,c
  8718  001EB6  0E00               	movlw	0
  8719  001EB8  5A08               	subwfb	(?___wmul+1)^0,f,c
  8720  001EBA  0E30               	movlw	48
  8721  001EBC  2407               	addwf	?___wmul^0,w,c
  8722  001EBE  6E1B               	movwf	atoi@n^0,c
  8723  001EC0  0E00               	movlw	0
  8724  001EC2  2008               	addwfc	(?___wmul+1)^0,w,c
  8725  001EC4  6E1C               	movwf	(atoi@n+1)^0,c
  8726  001EC6  EF2C  F00F         	goto	l3179
  8727  001ECA                     l3187:
  8728  001ECA  0ED0               	movlw	208
  8729  001ECC  6E10               	movwf	??_atoi^0,c
  8730  001ECE  0EFF               	movlw	255
  8731  001ED0  6E11               	movwf	(??_atoi+1)^0,c
  8732  001ED2  C00E  FFF6         	movff	atoi@s,tblptrl
  8733  001ED6  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8734  001EDA                     	if	0	;tblptru may be non-zero
  8735  001EDA                     	endif
  8736  001EDA                     	if	0	;tblptru may be non-zero
  8737  001EDA                     	endif
  8738  001EDA  0008               	tblrd		*
  8739  001EDC  50F5               	movf	tablat,w,c
  8740  001EDE  6E12               	movwf	(??_atoi+2)^0,c
  8741  001EE0  6A13               	clrf	(??_atoi+3)^0,c
  8742  001EE2  5010               	movf	??_atoi^0,w,c
  8743  001EE4  2612               	addwf	(??_atoi+2)^0,f,c
  8744  001EE6  5011               	movf	(??_atoi+1)^0,w,c
  8745  001EE8  2213               	addwfc	(??_atoi+3)^0,f,c
  8746  001EEA  5013               	movf	(??_atoi+3)^0,w,c
  8747  001EEC  E10A               	bnz	u2530
  8748  001EEE  0E0A               	movlw	10
  8749  001EF0  5C12               	subwf	(??_atoi+2)^0,w,c
  8750  001EF2  A0D8               	btfss	status,0,c
  8751  001EF4  EF7E  F00F         	goto	u2531
  8752  001EF8  EF81  F00F         	goto	u2530
  8753  001EFC                     u2531:
  8754  001EFC  0E01               	movlw	1
  8755  001EFE  EF82  F00F         	goto	u2540
  8756  001F02                     u2530:
  8757  001F02  0E00               	movlw	0
  8758  001F04                     u2540:
  8759  001F04  6E18               	movwf	_atoi$2378^0,c
  8760  001F06  6A19               	clrf	(_atoi$2378+1)^0,c
  8761  001F08  5018               	movf	_atoi$2378^0,w,c
  8762  001F0A  1019               	iorwf	(_atoi$2378+1)^0,w,c
  8763  001F0C  A4D8               	btfss	status,2,c
  8764  001F0E  EF8B  F00F         	goto	u2551
  8765  001F12  EF8D  F00F         	goto	u2550
  8766  001F16                     u2551:
  8767  001F16  EF4A  F00F         	goto	l3183
  8768  001F1A                     u2550:
  8769  001F1A  5014               	movf	atoi@neg^0,w,c
  8770  001F1C  1015               	iorwf	(atoi@neg+1)^0,w,c
  8771  001F1E  A4D8               	btfss	status,2,c
  8772  001F20  EF94  F00F         	goto	u2561
  8773  001F24  EF96  F00F         	goto	u2560
  8774  001F28                     u2561:
  8775  001F28  EFA4  F00F         	goto	l1277
  8776  001F2C                     u2560:
  8777  001F2C  C01B  F010         	movff	atoi@n,??_atoi
  8778  001F30  C01C  F011         	movff	atoi@n+1,??_atoi+1
  8779  001F34  1E10               	comf	??_atoi^0,f,c
  8780  001F36  1E11               	comf	(??_atoi+1)^0,f,c
  8781  001F38  4A10               	infsnz	??_atoi^0,f,c
  8782  001F3A  2A11               	incf	(??_atoi+1)^0,f,c
  8783  001F3C  C010  F00E         	movff	??_atoi,?_atoi
  8784  001F40  C011  F00F         	movff	??_atoi+1,?_atoi+1
  8785  001F44  EFA8  F00F         	goto	l1280
  8786  001F48                     l1277:
  8787  001F48  C01B  F00E         	movff	atoi@n,?_atoi
  8788  001F4C  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  8789  001F50                     l1280:
  8790  001F50  0012               	return		;funcret
  8791  001F52                     __end_of_atoi:
  8792                           	callstack 0
  8793                           
  8794 ;; *************** function _isspace *****************
  8795 ;; Defined at:
  8796 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  c               2    6[COMRAM] int 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  2    6[COMRAM] int 
  8803 ;; Registers used:
  8804 ;;		wreg, status,2, status,0
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8810 ;;      Params:         2       0       0       0       0       0       0       0       0
  8811 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8812 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8813 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8814 ;;Total ram usage:        7 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    2
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_atoi
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text51
  8825  003458                     __ptext51:
  8826                           	callstack 0
  8827  003458                     _isspace:
  8828                           	callstack 23
  8829  003458  0E01               	movlw	1
  8830  00345A  6E0D               	movwf	_isspace$2394^0,c
  8831  00345C  0E20               	movlw	32
  8832  00345E  1807               	xorwf	isspace@c^0,w,c
  8833  003460  1008               	iorwf	(isspace@c+1)^0,w,c
  8834  003462  B4D8               	btfsc	status,2,c
  8835  003464  EF36  F01A         	goto	u2331
  8836  003468  EF38  F01A         	goto	u2330
  8837  00346C                     u2331:
  8838  00346C  EF51  F01A         	goto	l3093
  8839  003470                     u2330:
  8840  003470  0EF7               	movlw	247
  8841  003472  6E09               	movwf	??_isspace^0,c
  8842  003474  0EFF               	movlw	255
  8843  003476  6E0A               	movwf	(??_isspace+1)^0,c
  8844  003478  C007  F00B         	movff	isspace@c,??_isspace+2
  8845  00347C  C008  F00C         	movff	isspace@c+1,??_isspace+3
  8846  003480  5009               	movf	??_isspace^0,w,c
  8847  003482  260B               	addwf	(??_isspace+2)^0,f,c
  8848  003484  500A               	movf	(??_isspace+1)^0,w,c
  8849  003486  220C               	addwfc	(??_isspace+3)^0,f,c
  8850  003488  500C               	movf	(??_isspace+3)^0,w,c
  8851  00348A  E109               	bnz	u2340
  8852  00348C  0E05               	movlw	5
  8853  00348E  5C0B               	subwf	(??_isspace+2)^0,w,c
  8854  003490  A0D8               	btfss	status,0,c
  8855  003492  EF4D  F01A         	goto	u2341
  8856  003496  EF4F  F01A         	goto	u2340
  8857  00349A                     u2341:
  8858  00349A  EF51  F01A         	goto	l3093
  8859  00349E                     u2340:
  8860  00349E  0E00               	movlw	0
  8861  0034A0  6E0D               	movwf	_isspace$2394^0,c
  8862  0034A2                     l3093:
  8863  0034A2  C00D  F007         	movff	_isspace$2394,?_isspace
  8864  0034A6  6A08               	clrf	(?_isspace+1)^0,c
  8865  0034A8  0012               	return		;funcret
  8866  0034AA                     __end_of_isspace:
  8867                           	callstack 0
  8868                           
  8869 ;; *************** function _isdigit *****************
  8870 ;; Defined at:
  8871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  c               2    6[COMRAM] int 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;		None
  8876 ;; Return value:  Size  Location     Type
  8877 ;;                  2    6[COMRAM] int 
  8878 ;; Registers used:
  8879 ;;		wreg, status,2, status,0
  8880 ;; Tracked objects:
  8881 ;;		On entry : 0/0
  8882 ;;		On exit  : 0/0
  8883 ;;		Unchanged: 0/0
  8884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8885 ;;      Params:         2       0       0       0       0       0       0       0       0
  8886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8887 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8888 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8889 ;;Total ram usage:        6 bytes
  8890 ;; Hardware stack levels used:    1
  8891 ;; Hardware stack levels required when called:    2
  8892 ;; This function calls:
  8893 ;;		Nothing
  8894 ;; This function is called by:
  8895 ;;		_vfpfcnvrt
  8896 ;;		_atoi
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           	psect	text52
  8901  0036D2                     __ptext52:
  8902                           	callstack 0
  8903  0036D2                     _isdigit:
  8904                           	callstack 24
  8905  0036D2  0ED0               	movlw	208
  8906  0036D4  6E09               	movwf	??_isdigit^0,c
  8907  0036D6  0EFF               	movlw	255
  8908  0036D8  6E0A               	movwf	(??_isdigit+1)^0,c
  8909  0036DA  C007  F00B         	movff	isdigit@c,??_isdigit+2
  8910  0036DE  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  8911  0036E2  5009               	movf	??_isdigit^0,w,c
  8912  0036E4  260B               	addwf	(??_isdigit+2)^0,f,c
  8913  0036E6  500A               	movf	(??_isdigit+1)^0,w,c
  8914  0036E8  220C               	addwfc	(??_isdigit+3)^0,f,c
  8915  0036EA  500C               	movf	(??_isdigit+3)^0,w,c
  8916  0036EC  E10A               	bnz	u2310
  8917  0036EE  0E0A               	movlw	10
  8918  0036F0  5C0B               	subwf	(??_isdigit+2)^0,w,c
  8919  0036F2  A0D8               	btfss	status,0,c
  8920  0036F4  EF7E  F01B         	goto	u2311
  8921  0036F8  EF81  F01B         	goto	u2310
  8922  0036FC                     u2311:
  8923  0036FC  0E01               	movlw	1
  8924  0036FE  EF82  F01B         	goto	u2320
  8925  003702                     u2310:
  8926  003702  0E00               	movlw	0
  8927  003704                     u2320:
  8928  003704  6E07               	movwf	?_isdigit^0,c
  8929  003706  6A08               	clrf	(?_isdigit+1)^0,c
  8930  003708  0012               	return		;funcret
  8931  00370A                     __end_of_isdigit:
  8932                           	callstack 0
  8933                           
  8934 ;; *************** function ___wmul *****************
  8935 ;; Defined at:
  8936 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  multiplier      2    6[COMRAM] unsigned int 
  8939 ;;  multiplicand    2    8[COMRAM] unsigned int 
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;  product         2   10[COMRAM] unsigned int 
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  2    6[COMRAM] unsigned int 
  8944 ;; Registers used:
  8945 ;;		wreg, status,2, status,0, prodl, prodh
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8951 ;;      Params:         4       0       0       0       0       0       0       0       0
  8952 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8954 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8955 ;;Total ram usage:        6 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; Hardware stack levels required when called:    2
  8958 ;; This function calls:
  8959 ;;		Nothing
  8960 ;; This function is called by:
  8961 ;;		_appSubGetData
  8962 ;;		_atoi
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text53
  8967  0037CC                     __ptext53:
  8968                           	callstack 0
  8969  0037CC                     ___wmul:
  8970                           	callstack 23
  8971  0037CC  5007               	movf	___wmul@multiplier^0,w,c
  8972  0037CE  0209               	mulwf	___wmul@multiplicand^0,c
  8973  0037D0  CFF3 F00B          	movff	prodl,___wmul@product
  8974  0037D4  CFF4 F00C          	movff	prodh,___wmul@product+1
  8975  0037D8  5007               	movf	___wmul@multiplier^0,w,c
  8976  0037DA  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  8977  0037DC  50F3               	movf	243,w,c
  8978  0037DE  260C               	addwf	(___wmul@product+1)^0,f,c
  8979  0037E0  5008               	movf	(___wmul@multiplier+1)^0,w,c
  8980  0037E2  0209               	mulwf	___wmul@multiplicand^0,c
  8981  0037E4  50F3               	movf	243,w,c
  8982  0037E6  260C               	addwf	(___wmul@product+1)^0,f,c
  8983  0037E8  C00B  F007         	movff	___wmul@product,?___wmul
  8984  0037EC  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  8985  0037F0  0012               	return		;funcret
  8986  0037F2                     __end_of___wmul:
  8987                           	callstack 0
  8988                           
  8989 ;; *************** function _memset *****************
  8990 ;; Defined at:
  8991 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  dest            2    6[COMRAM] PTR void 
  8994 ;;		 -> puerto(16), datos(25), 
  8995 ;;  c               2    8[COMRAM] int 
  8996 ;;  n               2   10[COMRAM] unsigned int 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  s               2   16[COMRAM] PTR unsigned char 
  8999 ;;		 -> puerto(16), datos(25), 
  9000 ;;  k               2   14[COMRAM] unsigned int 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  2    6[COMRAM] PTR void 
  9003 ;; Registers used:
  9004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9010 ;;      Params:         6       0       0       0       0       0       0       0       0
  9011 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9012 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9013 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9014 ;;Total ram usage:       12 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:    2
  9017 ;; This function calls:
  9018 ;;		Nothing
  9019 ;; This function is called by:
  9020 ;;		_appADC
  9021 ;;		_appBat
  9022 ;;		_appElemts
  9023 ;;		_appSubGetData
  9024 ;;		_sendinformation
  9025 ;;		_readUART
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text54
  9030  0020DA                     __ptext54:
  9031                           	callstack 0
  9032  0020DA                     _memset:
  9033                           	callstack 27
  9034  0020DA  C007  F011         	movff	memset@dest,memset@s
  9035  0020DE  C008  F012         	movff	memset@dest+1,memset@s+1
  9036  0020E2  500B               	movf	memset@n^0,w,c
  9037  0020E4  100C               	iorwf	(memset@n+1)^0,w,c
  9038  0020E6  A4D8               	btfss	status,2,c
  9039  0020E8  EF78  F010         	goto	u2831
  9040  0020EC  EF7A  F010         	goto	u2830
  9041  0020F0                     u2831:
  9042  0020F0  EF7C  F010         	goto	l3403
  9043  0020F4                     u2830:
  9044  0020F4  EF27  F011         	goto	l1131
  9045  0020F8                     l3403:
  9046  0020F8  C011  FFD9         	movff	memset@s,fsr2l
  9047  0020FC  C012  FFDA         	movff	memset@s+1,fsr2h
  9048  002100  C009  FFDF         	movff	memset@c,indf2
  9049  002104  500B               	movf	memset@n^0,w,c
  9050  002106  2411               	addwf	memset@s^0,w,c
  9051  002108  6E0D               	movwf	??_memset^0,c
  9052  00210A  500C               	movf	(memset@n+1)^0,w,c
  9053  00210C  2012               	addwfc	(memset@s+1)^0,w,c
  9054  00210E  6E0E               	movwf	(??_memset+1)^0,c
  9055  002110  0EFF               	movlw	255
  9056  002112  240D               	addwf	??_memset^0,w,c
  9057  002114  6ED9               	movwf	fsr2l,c
  9058  002116  0EFF               	movlw	255
  9059  002118  200E               	addwfc	(??_memset+1)^0,w,c
  9060  00211A  6EDA               	movwf	fsr2h,c
  9061  00211C  C009  FFDF         	movff	memset@c,indf2
  9062  002120  500C               	movf	(memset@n+1)^0,w,c
  9063  002122  E107               	bnz	u2841
  9064  002124  0E03               	movlw	3
  9065  002126  5C0B               	subwf	memset@n^0,w,c
  9066  002128  B0D8               	btfsc	status,0,c
  9067  00212A  EF99  F010         	goto	u2841
  9068  00212E  EF9B  F010         	goto	u2840
  9069  002132                     u2841:
  9070  002132  EF9D  F010         	goto	l3409
  9071  002136                     u2840:
  9072  002136  EF27  F011         	goto	l1131
  9073  00213A                     l3409:
  9074  00213A  EE20 F001          	lfsr	2,1
  9075  00213E  5011               	movf	memset@s^0,w,c
  9076  002140  26D9               	addwf	fsr2l,f,c
  9077  002142  5012               	movf	(memset@s+1)^0,w,c
  9078  002144  22DA               	addwfc	fsr2h,f,c
  9079  002146  C009  FFDF         	movff	memset@c,indf2
  9080  00214A  EE20 F002          	lfsr	2,2
  9081  00214E  5011               	movf	memset@s^0,w,c
  9082  002150  26D9               	addwf	fsr2l,f,c
  9083  002152  5012               	movf	(memset@s+1)^0,w,c
  9084  002154  22DA               	addwfc	fsr2h,f,c
  9085  002156  C009  FFDF         	movff	memset@c,indf2
  9086  00215A  500B               	movf	memset@n^0,w,c
  9087  00215C  2411               	addwf	memset@s^0,w,c
  9088  00215E  6E0D               	movwf	??_memset^0,c
  9089  002160  500C               	movf	(memset@n+1)^0,w,c
  9090  002162  2012               	addwfc	(memset@s+1)^0,w,c
  9091  002164  6E0E               	movwf	(??_memset+1)^0,c
  9092  002166  0EFE               	movlw	254
  9093  002168  240D               	addwf	??_memset^0,w,c
  9094  00216A  6ED9               	movwf	fsr2l,c
  9095  00216C  0EFF               	movlw	255
  9096  00216E  200E               	addwfc	(??_memset+1)^0,w,c
  9097  002170  6EDA               	movwf	fsr2h,c
  9098  002172  C009  FFDF         	movff	memset@c,indf2
  9099  002176  500B               	movf	memset@n^0,w,c
  9100  002178  2411               	addwf	memset@s^0,w,c
  9101  00217A  6E0D               	movwf	??_memset^0,c
  9102  00217C  500C               	movf	(memset@n+1)^0,w,c
  9103  00217E  2012               	addwfc	(memset@s+1)^0,w,c
  9104  002180  6E0E               	movwf	(??_memset+1)^0,c
  9105  002182  0EFD               	movlw	253
  9106  002184  240D               	addwf	??_memset^0,w,c
  9107  002186  6ED9               	movwf	fsr2l,c
  9108  002188  0EFF               	movlw	255
  9109  00218A  200E               	addwfc	(??_memset+1)^0,w,c
  9110  00218C  6EDA               	movwf	fsr2h,c
  9111  00218E  C009  FFDF         	movff	memset@c,indf2
  9112  002192  500C               	movf	(memset@n+1)^0,w,c
  9113  002194  E107               	bnz	u2851
  9114  002196  0E07               	movlw	7
  9115  002198  5C0B               	subwf	memset@n^0,w,c
  9116  00219A  B0D8               	btfsc	status,0,c
  9117  00219C  EFD2  F010         	goto	u2851
  9118  0021A0  EFD4  F010         	goto	u2850
  9119  0021A4                     u2851:
  9120  0021A4  EFD6  F010         	goto	l3415
  9121  0021A8                     u2850:
  9122  0021A8  EF27  F011         	goto	l1131
  9123  0021AC                     l3415:
  9124  0021AC  EE20 F003          	lfsr	2,3
  9125  0021B0  5011               	movf	memset@s^0,w,c
  9126  0021B2  26D9               	addwf	fsr2l,f,c
  9127  0021B4  5012               	movf	(memset@s+1)^0,w,c
  9128  0021B6  22DA               	addwfc	fsr2h,f,c
  9129  0021B8  C009  FFDF         	movff	memset@c,indf2
  9130  0021BC  500B               	movf	memset@n^0,w,c
  9131  0021BE  2411               	addwf	memset@s^0,w,c
  9132  0021C0  6E0D               	movwf	??_memset^0,c
  9133  0021C2  500C               	movf	(memset@n+1)^0,w,c
  9134  0021C4  2012               	addwfc	(memset@s+1)^0,w,c
  9135  0021C6  6E0E               	movwf	(??_memset+1)^0,c
  9136  0021C8  0EFC               	movlw	252
  9137  0021CA  240D               	addwf	??_memset^0,w,c
  9138  0021CC  6ED9               	movwf	fsr2l,c
  9139  0021CE  0EFF               	movlw	255
  9140  0021D0  200E               	addwfc	(??_memset+1)^0,w,c
  9141  0021D2  6EDA               	movwf	fsr2h,c
  9142  0021D4  C009  FFDF         	movff	memset@c,indf2
  9143  0021D8  500C               	movf	(memset@n+1)^0,w,c
  9144  0021DA  E107               	bnz	u2861
  9145  0021DC  0E09               	movlw	9
  9146  0021DE  5C0B               	subwf	memset@n^0,w,c
  9147  0021E0  B0D8               	btfsc	status,0,c
  9148  0021E2  EFF5  F010         	goto	u2861
  9149  0021E6  EFF7  F010         	goto	u2860
  9150  0021EA                     u2861:
  9151  0021EA  EFF9  F010         	goto	l3421
  9152  0021EE                     u2860:
  9153  0021EE  EF27  F011         	goto	l1131
  9154  0021F2                     l3421:
  9155  0021F2  C011  F00D         	movff	memset@s,??_memset
  9156  0021F6  C012  F00E         	movff	memset@s+1,??_memset+1
  9157  0021FA  1E0D               	comf	??_memset^0,f,c
  9158  0021FC  1E0E               	comf	(??_memset+1)^0,f,c
  9159  0021FE  4A0D               	infsnz	??_memset^0,f,c
  9160  002200  2A0E               	incf	(??_memset+1)^0,f,c
  9161  002202  0E03               	movlw	3
  9162  002204  140D               	andwf	??_memset^0,w,c
  9163  002206  6E0F               	movwf	memset@k^0,c
  9164  002208  6A10               	clrf	(memset@k+1)^0,c
  9165  00220A  500F               	movf	memset@k^0,w,c
  9166  00220C  2611               	addwf	memset@s^0,f,c
  9167  00220E  5010               	movf	(memset@k+1)^0,w,c
  9168  002210  2212               	addwfc	(memset@s+1)^0,f,c
  9169  002212  500F               	movf	memset@k^0,w,c
  9170  002214  5E0B               	subwf	memset@n^0,f,c
  9171  002216  5010               	movf	(memset@k+1)^0,w,c
  9172  002218  5A0C               	subwfb	(memset@n+1)^0,f,c
  9173  00221A  0EFC               	movlw	252
  9174  00221C  160B               	andwf	memset@n^0,f,c
  9175  00221E  0EFF               	movlw	255
  9176  002220  160C               	andwf	(memset@n+1)^0,f,c
  9177  002222  EF1E  F011         	goto	l3429
  9178  002226                     l3423:
  9179  002226  C011  FFD9         	movff	memset@s,fsr2l
  9180  00222A  C012  FFDA         	movff	memset@s+1,fsr2h
  9181  00222E  C009  FFDF         	movff	memset@c,indf2
  9182  002232  060B               	decf	memset@n^0,f,c
  9183  002234  A0D8               	btfss	status,0,c
  9184  002236  060C               	decf	(memset@n+1)^0,f,c
  9185  002238  4A11               	infsnz	memset@s^0,f,c
  9186  00223A  2A12               	incf	(memset@s+1)^0,f,c
  9187  00223C                     l3429:
  9188  00223C  500B               	movf	memset@n^0,w,c
  9189  00223E  100C               	iorwf	(memset@n+1)^0,w,c
  9190  002240  A4D8               	btfss	status,2,c
  9191  002242  EF25  F011         	goto	u2871
  9192  002246  EF27  F011         	goto	u2870
  9193  00224A                     u2871:
  9194  00224A  EF13  F011         	goto	l3423
  9195  00224E                     u2870:
  9196  00224E                     l1131:
  9197  00224E  0012               	return		;funcret
  9198  002250                     __end_of_memset:
  9199                           	callstack 0
  9200                           
  9201 ;; *************** function _Lcd_Out *****************
  9202 ;; Defined at:
  9203 ;;		line 95 in file "flex_lcd.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  y               1    wreg     unsigned char 
  9206 ;;  x               1    9[COMRAM] unsigned char 
  9207 ;;  buffer          2   10[COMRAM] PTR const char 
  9208 ;;		 -> STR_10(13), STR_9(17), STR_8(12), STR_6(14), 
  9209 ;;		 -> STR_4(6), STR_3(12), datos.display(16), datos(25), 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  y               1   14[COMRAM] unsigned char 
  9212 ;;  data            1   15[COMRAM] unsigned char 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      void 
  9215 ;; Registers used:
  9216 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9222 ;;      Params:         3       0       0       0       0       0       0       0       0
  9223 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9224 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9225 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9226 ;;Total ram usage:        7 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; Hardware stack levels required when called:    3
  9229 ;; This function calls:
  9230 ;;		_Lcd_Chr_CP
  9231 ;;		_Lcd_Cmd
  9232 ;; This function is called by:
  9233 ;;		_appADC
  9234 ;;		_appBat
  9235 ;;		_appLCD_Init
  9236 ;;		_appElemts
  9237 ;;		_appSubGetData
  9238 ;;		_warning
  9239 ;;		_confirmacion
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text55
  9244  002A22                     __ptext55:
  9245                           	callstack 0
  9246  002A22                     _Lcd_Out:
  9247                           	callstack 26
  9248                           
  9249                           ;incstack = 0
  9250                           ;Lcd_Out@y stored from wreg
  9251  002A22  6E0F               	movwf	Lcd_Out@y^0,c
  9252  002A24                     
  9253                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  9254  002A24  EF28  F015         	goto	l3455
  9255  002A28                     l3445:
  9256                           
  9257                           ;flex_lcd.c: 101:             data = 128 + x;
  9258  002A28  500A               	movf	Lcd_Out@x^0,w,c
  9259  002A2A  0F80               	addlw	128
  9260  002A2C  6E10               	movwf	Lcd_Out@data^0,c
  9261                           
  9262                           ;flex_lcd.c: 102:             break;
  9263  002A2E  EF45  F015         	goto	l3457
  9264  002A32                     l3447:
  9265                           
  9266                           ;flex_lcd.c: 104:             data = 192 + x;
  9267  002A32  500A               	movf	Lcd_Out@x^0,w,c
  9268  002A34  0FC0               	addlw	192
  9269  002A36  6E10               	movwf	Lcd_Out@data^0,c
  9270                           
  9271                           ;flex_lcd.c: 105:             break;
  9272  002A38  EF45  F015         	goto	l3457
  9273  002A3C                     l3449:
  9274                           
  9275                           ;flex_lcd.c: 107:             data = 148 + x;
  9276  002A3C  500A               	movf	Lcd_Out@x^0,w,c
  9277  002A3E  0F94               	addlw	148
  9278  002A40  6E10               	movwf	Lcd_Out@data^0,c
  9279                           
  9280                           ;flex_lcd.c: 108:             break;
  9281  002A42  EF45  F015         	goto	l3457
  9282  002A46                     l3451:
  9283                           
  9284                           ;flex_lcd.c: 110:             data = 212 + x;
  9285  002A46  500A               	movf	Lcd_Out@x^0,w,c
  9286  002A48  0FD4               	addlw	212
  9287  002A4A  6E10               	movwf	Lcd_Out@data^0,c
  9288                           
  9289                           ;flex_lcd.c: 111:             break;
  9290  002A4C  EF45  F015         	goto	l3457
  9291  002A50                     l3455:
  9292  002A50  500F               	movf	Lcd_Out@y^0,w,c
  9293  002A52  6E0D               	movwf	??_Lcd_Out^0,c
  9294  002A54  6A0E               	clrf	(??_Lcd_Out+1)^0,c
  9295                           
  9296                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9297                           ; Switch size 1, requested type "simple"
  9298                           ; Number of cases is 1, Range of values is 0 to 0
  9299                           ; switch strategies available:
  9300                           ; Name         Instructions Cycles
  9301                           ; simple_byte            4     3 (average)
  9302                           ;	Chosen strategy is simple_byte
  9303  002A56  500E               	movf	(??_Lcd_Out+1)^0,w,c
  9304  002A58  0A00               	xorlw	0	; case 0
  9305  002A5A  B4D8               	btfsc	status,2,c
  9306  002A5C  EF32  F015         	goto	l5029
  9307  002A60  EF45  F015         	goto	l3457
  9308  002A64                     l5029:
  9309                           
  9310                           ; Switch size 1, requested type "simple"
  9311                           ; Number of cases is 4, Range of values is 1 to 4
  9312                           ; switch strategies available:
  9313                           ; Name         Instructions Cycles
  9314                           ; simple_byte           13     7 (average)
  9315                           ;	Chosen strategy is simple_byte
  9316  002A64  500D               	movf	??_Lcd_Out^0,w,c
  9317  002A66  0A01               	xorlw	1	; case 1
  9318  002A68  B4D8               	btfsc	status,2,c
  9319  002A6A  EF14  F015         	goto	l3445
  9320  002A6E  0A03               	xorlw	3	; case 2
  9321  002A70  B4D8               	btfsc	status,2,c
  9322  002A72  EF19  F015         	goto	l3447
  9323  002A76  0A01               	xorlw	1	; case 3
  9324  002A78  B4D8               	btfsc	status,2,c
  9325  002A7A  EF1E  F015         	goto	l3449
  9326  002A7E  0A07               	xorlw	7	; case 4
  9327  002A80  B4D8               	btfsc	status,2,c
  9328  002A82  EF23  F015         	goto	l3451
  9329  002A86  EF45  F015         	goto	l3457
  9330  002A8A                     l3457:
  9331                           
  9332                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  9333  002A8A  5010               	movf	Lcd_Out@data^0,w,c
  9334  002A8C  EC81  F012         	call	_Lcd_Cmd
  9335                           
  9336                           ;flex_lcd.c: 116:     while(*buffer)
  9337  002A90  EF5E  F015         	goto	l3463
  9338  002A94                     l3459:
  9339                           
  9340                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  9341  002A94  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9342  002A98  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9343  002A9C  6AF8               	clrf	tblptru,c
  9344  002A9E  0E07               	movlw	(high __ramtop+-1)
  9345  002AA0  64F7               	cpfsgt	tblptrh,c
  9346  002AA2  D003               	bra	u2887
  9347  002AA4  0008               	tblrd		*
  9348  002AA6  50F5               	movf	tablat,w,c
  9349  002AA8  D005               	bra	u2880
  9350  002AAA                     u2887:
  9351  002AAA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9352  002AAE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9353  002AB2  50E7               	movf	indf1,w,c
  9354  002AB4                     u2880:
  9355  002AB4  ECDA  F011         	call	_Lcd_Chr_CP
  9356  002AB8                     
  9357                           ;flex_lcd.c: 119:         buffer++;
  9358  002AB8  4A0B               	infsnz	Lcd_Out@buffer^0,f,c
  9359  002ABA  2A0C               	incf	(Lcd_Out@buffer+1)^0,f,c
  9360  002ABC                     l3463:
  9361                           
  9362                           ;flex_lcd.c: 116:     while(*buffer)
  9363  002ABC  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9364  002AC0  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9365  002AC4  6AF8               	clrf	tblptru,c
  9366  002AC6  0E07               	movlw	(high __ramtop+-1)
  9367  002AC8  64F7               	cpfsgt	tblptrh,c
  9368  002ACA  D003               	bra	u2897
  9369  002ACC  0008               	tblrd		*
  9370  002ACE  50F5               	movf	tablat,w,c
  9371  002AD0  D005               	bra	u2890
  9372  002AD2                     u2897:
  9373  002AD2  CFF6 FFE1          	movff	tblptrl,fsr1l
  9374  002AD6  CFF7 FFE2          	movff	tblptrh,fsr1h
  9375  002ADA  50E7               	movf	indf1,w,c
  9376  002ADC                     u2890:
  9377  002ADC  0900               	iorlw	0
  9378  002ADE  A4D8               	btfss	status,2,c
  9379  002AE0  EF74  F015         	goto	u2901
  9380  002AE4  EF76  F015         	goto	u2900
  9381  002AE8                     u2901:
  9382  002AE8  EF4A  F015         	goto	l3459
  9383  002AEC                     u2900:
  9384  002AEC  0012               	return		;funcret
  9385  002AEE                     __end_of_Lcd_Out:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function _Lcd_Cmd *****************
  9389 ;; Defined at:
  9390 ;;		line 175 in file "flex_lcd.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  data            1    wreg     unsigned char 
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;  data            1    8[COMRAM] unsigned char 
  9395 ;; Return value:  Size  Location     Type
  9396 ;;                  1    wreg      void 
  9397 ;; Registers used:
  9398 ;;		wreg, status,2, status,0
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9404 ;;      Params:         0       0       0       0       0       0       0       0       0
  9405 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9406 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9407 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9408 ;;Total ram usage:        3 bytes
  9409 ;; Hardware stack levels used:    1
  9410 ;; Hardware stack levels required when called:    2
  9411 ;; This function calls:
  9412 ;;		Nothing
  9413 ;; This function is called by:
  9414 ;;		_Lcd_Init
  9415 ;;		_Lcd_Out
  9416 ;;		_appLCD_Init
  9417 ;;		_appGetElements
  9418 ;;		_warning
  9419 ;;		_confirmacion
  9420 ;;		_readUART
  9421 ;;		_Lcd_Out2
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           	psect	text56
  9426  002502                     __ptext56:
  9427                           	callstack 0
  9428  002502                     _Lcd_Cmd:
  9429                           	callstack 26
  9430                           
  9431                           ;incstack = 0
  9432                           ;Lcd_Cmd@data stored from wreg
  9433  002502  6E09               	movwf	Lcd_Cmd@data^0,c
  9434  002504                     
  9435                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  9436  002504  968C               	bcf	140,3,c	;volatile
  9437  002506  948C               	bcf	140,2,c	;volatile
  9438  002508                     
  9439                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9440  002508  6A07               	clrf	??_Lcd_Cmd^0,c
  9441  00250A  AE09               	btfss	Lcd_Cmd@data^0,7,c
  9442  00250C  D001               	bra	u2685
  9443  00250E  2A07               	incf	??_Lcd_Cmd^0,f,c
  9444  002510                     u2685:
  9445  002510  0E01               	movlw	1
  9446  002512  1607               	andwf	??_Lcd_Cmd^0,f,c
  9447  002514  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9448  002516  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9449  002518  508C               	movf	140,w,c	;volatile
  9450  00251A  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9451  00251C  0B7F               	andlw	-129
  9452  00251E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9453  002520  6E8C               	movwf	140,c	;volatile
  9454                           
  9455                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9456  002522  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9457  002526  0E06               	movlw	6
  9458  002528  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9459  00252A                     u2695:
  9460  00252A  90D8               	bcf	status,0,c
  9461  00252C  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9462  00252E  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9463  002530  EF95  F012         	goto	u2695
  9464  002534  0E01               	movlw	1
  9465  002536  1607               	andwf	??_Lcd_Cmd^0,f,c
  9466  002538  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9467  00253A  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9468  00253C  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9469  00253E  508C               	movf	140,w,c	;volatile
  9470  002540  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9471  002542  0BBF               	andlw	-65
  9472  002544  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9473  002546  6E8C               	movwf	140,c	;volatile
  9474                           
  9475                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9476  002548  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9477  00254C  0E05               	movlw	5
  9478  00254E  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9479  002550                     u2705:
  9480  002550  90D8               	bcf	status,0,c
  9481  002552  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9482  002554  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9483  002556  EFA8  F012         	goto	u2705
  9484  00255A  0E01               	movlw	1
  9485  00255C  1607               	andwf	??_Lcd_Cmd^0,f,c
  9486  00255E  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9487  002560  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9488  002562  508C               	movf	140,w,c	;volatile
  9489  002564  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9490  002566  0BDF               	andlw	-33
  9491  002568  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9492  00256A  6E8C               	movwf	140,c	;volatile
  9493                           
  9494                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9495  00256C  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9496  002570  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9497  002572  0E0F               	movlw	15
  9498  002574  1607               	andwf	??_Lcd_Cmd^0,f,c
  9499  002576  0E01               	movlw	1
  9500  002578  1607               	andwf	??_Lcd_Cmd^0,f,c
  9501  00257A  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9502  00257C  508C               	movf	140,w,c	;volatile
  9503  00257E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9504  002580  0BEF               	andlw	-17
  9505  002582  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9506  002584  6E8C               	movwf	140,c	;volatile
  9507  002586                     
  9508                           ;flex_lcd.c: 182:     _delay(10);
  9509  002586  0E03               	movlw	3
  9510  002588                     u4667:
  9511  002588  2EE8               	decfsz	wreg,f,c
  9512  00258A  D7FE               	bra	u4667
  9513  00258C  F000               	nop	
  9514  00258E                     
  9515                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  9516  00258E  868C               	bsf	140,3,c	;volatile
  9517  002590                     
  9518                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9519  002590  0E05               	movlw	5
  9520  002592                     u4677:
  9521  002592  2EE8               	decfsz	wreg,f,c
  9522  002594  D7FE               	bra	u4677
  9523  002596                     
  9524                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  9525  002596  968C               	bcf	140,3,c	;volatile
  9526                           
  9527                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9528  002598  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9529  00259C  90D8               	bcf	status,0,c
  9530  00259E  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9531  0025A0  90D8               	bcf	status,0,c
  9532  0025A2  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9533  0025A4  90D8               	bcf	status,0,c
  9534  0025A6  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9535  0025A8  0E01               	movlw	1
  9536  0025AA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9537  0025AC  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9538  0025AE  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9539  0025B0  508C               	movf	140,w,c	;volatile
  9540  0025B2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9541  0025B4  0B7F               	andlw	-129
  9542  0025B6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9543  0025B8  6E8C               	movwf	140,c	;volatile
  9544                           
  9545                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9546  0025BA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9547  0025BE  90D8               	bcf	status,0,c
  9548  0025C0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9549  0025C2  90D8               	bcf	status,0,c
  9550  0025C4  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9551  0025C6  0E01               	movlw	1
  9552  0025C8  1607               	andwf	??_Lcd_Cmd^0,f,c
  9553  0025CA  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9554  0025CC  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9555  0025CE  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9556  0025D0  508C               	movf	140,w,c	;volatile
  9557  0025D2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9558  0025D4  0BBF               	andlw	-65
  9559  0025D6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9560  0025D8  6E8C               	movwf	140,c	;volatile
  9561                           
  9562                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9563  0025DA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9564  0025DE  90D8               	bcf	status,0,c
  9565  0025E0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9566  0025E2  0E01               	movlw	1
  9567  0025E4  1607               	andwf	??_Lcd_Cmd^0,f,c
  9568  0025E6  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9569  0025E8  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9570  0025EA  508C               	movf	140,w,c	;volatile
  9571  0025EC  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9572  0025EE  0BDF               	andlw	-33
  9573  0025F0  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9574  0025F2  6E8C               	movwf	140,c	;volatile
  9575                           
  9576                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  9577  0025F4  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9578  0025F8  0E01               	movlw	1
  9579  0025FA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9580  0025FC  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9581  0025FE  508C               	movf	140,w,c	;volatile
  9582  002600  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9583  002602  0BEF               	andlw	-17
  9584  002604  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9585  002606  6E8C               	movwf	140,c	;volatile
  9586  002608                     
  9587                           ;flex_lcd.c: 190:     _delay(10);
  9588  002608  0E03               	movlw	3
  9589  00260A                     u4687:
  9590  00260A  2EE8               	decfsz	wreg,f,c
  9591  00260C  D7FE               	bra	u4687
  9592  00260E  F000               	nop	
  9593  002610                     
  9594                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  9595  002610  868C               	bsf	140,3,c	;volatile
  9596  002612                     
  9597                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9598  002612  0E05               	movlw	5
  9599  002614                     u4697:
  9600  002614  2EE8               	decfsz	wreg,f,c
  9601  002616  D7FE               	bra	u4697
  9602  002618                     
  9603                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  9604  002618  968C               	bcf	140,3,c	;volatile
  9605  00261A                     
  9606                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9607  00261A  0E16               	movlw	22
  9608  00261C  6E07               	movwf	??_Lcd_Cmd^0,c
  9609  00261E  0E6C               	movlw	108
  9610  002620                     u4707:
  9611  002620  2EE8               	decfsz	wreg,f,c
  9612  002622  D7FE               	bra	u4707
  9613  002624  2E07               	decfsz	??_Lcd_Cmd^0,f,c
  9614  002626  D7FC               	bra	u4707
  9615  002628  D000               	nop2	
  9616  00262A  0012               	return		;funcret
  9617  00262C                     __end_of_Lcd_Cmd:
  9618                           	callstack 0
  9619                           
  9620 ;; *************** function _Lcd_Chr_CP *****************
  9621 ;; Defined at:
  9622 ;;		line 151 in file "flex_lcd.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  data            1    wreg     char 
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;  data            1    8[COMRAM] char 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  1    wreg      void 
  9629 ;; Registers used:
  9630 ;;		wreg, status,2, status,0
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9636 ;;      Params:         0       0       0       0       0       0       0       0       0
  9637 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9638 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9639 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9640 ;;Total ram usage:        3 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; Hardware stack levels required when called:    2
  9643 ;; This function calls:
  9644 ;;		Nothing
  9645 ;; This function is called by:
  9646 ;;		_Lcd_Out
  9647 ;;		_Lcd_Out2
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text57
  9652  0023B4                     __ptext57:
  9653                           	callstack 0
  9654  0023B4                     _Lcd_Chr_CP:
  9655                           	callstack 26
  9656                           
  9657                           ;incstack = 0
  9658                           ;Lcd_Chr_CP@data stored from wreg
  9659  0023B4  6E09               	movwf	Lcd_Chr_CP@data^0,c
  9660  0023B6                     
  9661                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  9662  0023B6  968C               	bcf	140,3,c	;volatile
  9663                           
  9664                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  9665  0023B8  848C               	bsf	140,2,c	;volatile
  9666  0023BA                     
  9667                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9668  0023BA  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9669  0023BE  0E07               	movlw	7
  9670  0023C0  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9671  0023C2                     u2715:
  9672  0023C2  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9673  0023C4  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9674  0023C6  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9675  0023C8  EFE1  F011         	goto	u2715
  9676  0023CC  0E01               	movlw	1
  9677  0023CE  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9678  0023D0  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9679  0023D2  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9680  0023D4  508C               	movf	140,w,c	;volatile
  9681  0023D6  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9682  0023D8  0B7F               	andlw	-129
  9683  0023DA  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9684  0023DC  6E8C               	movwf	140,c	;volatile
  9685                           
  9686                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9687  0023DE  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9688  0023E2  0E06               	movlw	6
  9689  0023E4  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9690  0023E6                     u2725:
  9691  0023E6  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9692  0023E8  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9693  0023EA  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9694  0023EC  EFF3  F011         	goto	u2725
  9695  0023F0  0E01               	movlw	1
  9696  0023F2  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9697  0023F4  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9698  0023F6  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9699  0023F8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9700  0023FA  508C               	movf	140,w,c	;volatile
  9701  0023FC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9702  0023FE  0BBF               	andlw	-65
  9703  002400  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9704  002402  6E8C               	movwf	140,c	;volatile
  9705                           
  9706                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9707  002404  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9708  002408  0E05               	movlw	5
  9709  00240A  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9710  00240C                     u2735:
  9711  00240C  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9712  00240E  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9713  002410  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9714  002412  EF06  F012         	goto	u2735
  9715  002416  0E01               	movlw	1
  9716  002418  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9717  00241A  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9718  00241C  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9719  00241E  508C               	movf	140,w,c	;volatile
  9720  002420  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9721  002422  0BDF               	andlw	-33
  9722  002424  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9723  002426  6E8C               	movwf	140,c	;volatile
  9724                           
  9725                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9726  002428  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9727  00242C  0E04               	movlw	4
  9728  00242E  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9729  002430                     u2745:
  9730  002430  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9731  002432  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9732  002434  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9733  002436  EF18  F012         	goto	u2745
  9734  00243A  0E01               	movlw	1
  9735  00243C  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9736  00243E  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9737  002440  508C               	movf	140,w,c	;volatile
  9738  002442  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9739  002444  0BEF               	andlw	-17
  9740  002446  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9741  002448  6E8C               	movwf	140,c	;volatile
  9742  00244A                     
  9743                           ;flex_lcd.c: 159:     _delay(10);
  9744  00244A  0E03               	movlw	3
  9745  00244C                     u4717:
  9746  00244C  2EE8               	decfsz	wreg,f,c
  9747  00244E  D7FE               	bra	u4717
  9748  002450  F000               	nop	
  9749  002452                     
  9750                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  9751  002452  868C               	bsf	140,3,c	;volatile
  9752  002454                     
  9753                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9754  002454  0E05               	movlw	5
  9755  002456                     u4727:
  9756  002456  2EE8               	decfsz	wreg,f,c
  9757  002458  D7FE               	bra	u4727
  9758  00245A                     
  9759                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  9760  00245A  968C               	bcf	140,3,c	;volatile
  9761                           
  9762                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9763  00245C  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9764  002460  0E03               	movlw	3
  9765  002462  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9766  002464                     u2755:
  9767  002464  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9768  002466  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9769  002468  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9770  00246A  EF32  F012         	goto	u2755
  9771  00246E  0E01               	movlw	1
  9772  002470  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9773  002472  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9774  002474  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9775  002476  508C               	movf	140,w,c	;volatile
  9776  002478  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9777  00247A  0B7F               	andlw	-129
  9778  00247C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9779  00247E  6E8C               	movwf	140,c	;volatile
  9780                           
  9781                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9782  002480  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9783  002484  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9784  002486  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9785  002488  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9786  00248A  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9787  00248C  0E01               	movlw	1
  9788  00248E  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9789  002490  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9790  002492  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9791  002494  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9792  002496  508C               	movf	140,w,c	;volatile
  9793  002498  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9794  00249A  0BBF               	andlw	-65
  9795  00249C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9796  00249E  6E8C               	movwf	140,c	;volatile
  9797                           
  9798                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9799  0024A0  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9800  0024A4  0E01               	movlw	1
  9801  0024A6  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9802  0024A8                     u2765:
  9803  0024A8  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9804  0024AA  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9805  0024AC  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9806  0024AE  EF54  F012         	goto	u2765
  9807  0024B2  0E01               	movlw	1
  9808  0024B4  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9809  0024B6  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9810  0024B8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9811  0024BA  508C               	movf	140,w,c	;volatile
  9812  0024BC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9813  0024BE  0BDF               	andlw	-33
  9814  0024C0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9815  0024C2  6E8C               	movwf	140,c	;volatile
  9816                           
  9817                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  9818  0024C4  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9819  0024C8  0E01               	movlw	1
  9820  0024CA  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9821  0024CC  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9822  0024CE  508C               	movf	140,w,c	;volatile
  9823  0024D0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9824  0024D2  0BEF               	andlw	-17
  9825  0024D4  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9826  0024D6  6E8C               	movwf	140,c	;volatile
  9827  0024D8                     
  9828                           ;flex_lcd.c: 167:     _delay(10);
  9829  0024D8  0E03               	movlw	3
  9830  0024DA                     u4737:
  9831  0024DA  2EE8               	decfsz	wreg,f,c
  9832  0024DC  D7FE               	bra	u4737
  9833  0024DE  F000               	nop	
  9834  0024E0                     
  9835                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  9836  0024E0  868C               	bsf	140,3,c	;volatile
  9837  0024E2                     
  9838                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9839  0024E2  0E05               	movlw	5
  9840  0024E4                     u4747:
  9841  0024E4  2EE8               	decfsz	wreg,f,c
  9842  0024E6  D7FE               	bra	u4747
  9843  0024E8                     
  9844                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  9845  0024E8  968C               	bcf	140,3,c	;volatile
  9846  0024EA                     
  9847                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9848  0024EA  0E05               	movlw	5
  9849  0024EC                     u4757:
  9850  0024EC  2EE8               	decfsz	wreg,f,c
  9851  0024EE  D7FE               	bra	u4757
  9852  0024F0                     
  9853                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9854  0024F0  0E16               	movlw	22
  9855  0024F2  6E07               	movwf	??_Lcd_Chr_CP^0,c
  9856  0024F4  0E6C               	movlw	108
  9857  0024F6                     u4767:
  9858  0024F6  2EE8               	decfsz	wreg,f,c
  9859  0024F8  D7FE               	bra	u4767
  9860  0024FA  2E07               	decfsz	??_Lcd_Chr_CP^0,f,c
  9861  0024FC  D7FC               	bra	u4767
  9862  0024FE  D000               	nop2	
  9863  002500  0012               	return		;funcret
  9864  002502                     __end_of_Lcd_Chr_CP:
  9865                           	callstack 0
  9866                           
  9867 ;; *************** function _isrL *****************
  9868 ;; Defined at:
  9869 ;;		line 27 in file "main.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;		None
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		wreg, status,2, status,0
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9885 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9886 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9887 ;;Total ram usage:        3 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:    1
  9890 ;; This function calls:
  9891 ;;		Nothing
  9892 ;; This function is called by:
  9893 ;;		Interrupt level 1
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	intcodelo
  9898  000018                     __pintcodelo:
  9899                           	callstack 0
  9900  000018                     _isrL:
  9901                           	callstack 19
  9902                           
  9903                           ;incstack = 0
  9904  000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9905  00001A  CFD8 F004          	movff	status,??_isrL
  9906  00001E  CFE8 F005          	movff	wreg,??_isrL+1
  9907  000022  CFE0 F006          	movff	bsr,??_isrL+2
  9908  000026                     
  9909                           ;main.c: 29:     static uint16_t bloqueo = 0;;main.c: 30:     if(TMR3IE && TMR3IF)
  9910  000026  A2A0               	btfss	4000,1,c	;volatile
  9911  000028  EF18  F000         	goto	i1u437_21
  9912  00002C  EF1A  F000         	goto	i1u437_20
  9913  000030                     i1u437_21:
  9914  000030  EF70  F000         	goto	i1l103
  9915  000034                     i1u437_20:
  9916  000034  A2A1               	btfss	4001,1,c	;volatile
  9917  000036  EF1F  F000         	goto	i1u438_21
  9918  00003A  EF21  F000         	goto	i1u438_20
  9919  00003E                     i1u438_21:
  9920  00003E  EF70  F000         	goto	i1l103
  9921  000042                     i1u438_20:
  9922  000042                     
  9923                           ;main.c: 31:     {;main.c: 32:         datos.counter++;
  9924  000042  0100               	movlb	0	; () banked
  9925  000044  2BC2               	incf	_datos& (0+255),f,b
  9926                           
  9927                           ;main.c: 33:         bloqueo++;
  9928  000046  4B64               	infsnz	isrL@bloqueo& (0+255),f,b
  9929  000048  2B65               	incf	(isrL@bloqueo+1)& (0+255),f,b
  9930  00004A                     
  9931                           ; BSR set to: 0
  9932                           ;main.c: 34:         if((datos.counter == 2) && (datos.state == 0 || datos.state == 2))
  9933  00004A  0E02               	movlw	2
  9934  00004C  19C2               	xorwf	_datos& (0+255),w,b
  9935  00004E  A4D8               	btfss	status,2,c
  9936  000050  EF2C  F000         	goto	i1u439_21
  9937  000054  EF2E  F000         	goto	i1u439_20
  9938  000058                     i1u439_21:
  9939  000058  EF47  F000         	goto	i1l4853
  9940  00005C                     i1u439_20:
  9941  00005C                     
  9942                           ; BSR set to: 0
  9943  00005C  51C5               	movf	(_datos+3)& (0+255),w,b
  9944  00005E  B4D8               	btfsc	status,2,c
  9945  000060  EF34  F000         	goto	i1u440_21
  9946  000064  EF36  F000         	goto	i1u440_20
  9947  000068                     i1u440_21:
  9948  000068  EF3F  F000         	goto	i1l4849
  9949  00006C                     i1u440_20:
  9950  00006C                     
  9951                           ; BSR set to: 0
  9952  00006C  0E02               	movlw	2
  9953  00006E  19C5               	xorwf	(_datos+3)& (0+255),w,b
  9954  000070  A4D8               	btfss	status,2,c
  9955  000072  EF3D  F000         	goto	i1u441_21
  9956  000076  EF3F  F000         	goto	i1u441_20
  9957  00007A                     i1u441_21:
  9958  00007A  EF47  F000         	goto	i1l4853
  9959  00007E                     i1u441_20:
  9960  00007E                     i1l4849:
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;main.c: 35:         {;main.c: 36:             datos.counter = 0;
  9964  00007E  0E00               	movlw	0
  9965  000080  6FC2               	movwf	_datos& (0+255),b
  9966  000082                     
  9967                           ; BSR set to: 0
  9968                           ;main.c: 37:             datos.nextFunc = appStateRecolectData;
  9969  000082  0E8E               	movlw	low _appStateRecolectData
  9970  000084  6FD9               	movwf	(_datos+23)& (0+255),b
  9971  000086  0E30               	movlw	high _appStateRecolectData
  9972  000088  6FDA               	movwf	(_datos+24)& (0+255),b
  9973                           
  9974                           ;main.c: 38:         }
  9975  00008A  EF6B  F000         	goto	i1l4863
  9976  00008E                     i1l4853:
  9977                           
  9978                           ; BSR set to: 0
  9979  00008E  0EE8               	movlw	232
  9980  000090  1964               	xorwf	isrL@bloqueo& (0+255),w,b
  9981  000092  E107               	bnz	i1u442_21
  9982  000094  0E03               	movlw	3
  9983  000096  1965               	xorwf	(isrL@bloqueo+1)& (0+255),w,b
  9984  000098  A4D8               	btfss	status,2,c
  9985  00009A  EF51  F000         	goto	i1u442_21
  9986  00009E  EF53  F000         	goto	i1u442_20
  9987  0000A2                     i1u442_21:
  9988  0000A2  EF5F  F000         	goto	i1l4859
  9989  0000A6                     i1u442_20:
  9990  0000A6                     
  9991                           ; BSR set to: 0
  9992                           ;main.c: 40:         {;main.c: 41:             bloqueo = 0;
  9993  0000A6  0E00               	movlw	0
  9994  0000A8  6F65               	movwf	(isrL@bloqueo+1)& (0+255),b
  9995  0000AA  0E00               	movlw	0
  9996  0000AC  6F64               	movwf	isrL@bloqueo& (0+255),b
  9997                           
  9998                           ;main.c: 42:             datos.state = 8;
  9999  0000AE  0E08               	movlw	8
 10000  0000B0  6FC5               	movwf	(_datos+3)& (0+255),b
 10001  0000B2                     
 10002                           ; BSR set to: 0
 10003                           ;main.c: 43:             datos.nextFunc = confirmacion;
 10004  0000B2  0EF4               	movlw	low _confirmacion
 10005  0000B4  6FD9               	movwf	(_datos+23)& (0+255),b
 10006  0000B6  0E34               	movlw	high _confirmacion
 10007  0000B8  6FDA               	movwf	(_datos+24)& (0+255),b
 10008                           
 10009                           ;main.c: 44:         }
 10010  0000BA  EF6B  F000         	goto	i1l4863
 10011  0000BE                     i1l4859:
 10012                           
 10013                           ; BSR set to: 0
 10014  0000BE  05C5               	decf	(_datos+3)& (0+255),w,b
 10015  0000C0  A4D8               	btfss	status,2,c
 10016  0000C2  EF65  F000         	goto	i1u443_21
 10017  0000C6  EF67  F000         	goto	i1u443_20
 10018  0000CA                     i1u443_21:
 10019  0000CA  EF6B  F000         	goto	i1l4863
 10020  0000CE                     i1u443_20:
 10021  0000CE                     
 10022                           ; BSR set to: 0
 10023                           ;main.c: 46:         {;main.c: 47:             datos.nextFunc = appGetElements;
 10024  0000CE  0EA6               	movlw	low _appGetElements
 10025  0000D0  6FD9               	movwf	(_datos+23)& (0+255),b
 10026  0000D2  0E31               	movlw	high _appGetElements
 10027  0000D4  6FDA               	movwf	(_datos+24)& (0+255),b
 10028  0000D6                     i1l4863:
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;main.c: 49:         TMR3 = 20536;
 10032  0000D6  0E50               	movlw	80
 10033  0000D8  6EB3               	movwf	179,c	;volatile
 10034  0000DA  0E38               	movlw	56
 10035  0000DC  6EB2               	movwf	178,c	;volatile
 10036  0000DE                     
 10037                           ; BSR set to: 0
 10038                           ;main.c: 50:         TMR3IF = 0;
 10039  0000DE  92A1               	bcf	4001,1,c	;volatile
 10040  0000E0                     i1l103:
 10041  0000E0  C006  FFE0         	movff	??_isrL+2,bsr
 10042  0000E4  C005  FFE8         	movff	??_isrL+1,wreg
 10043  0000E8  C004  FFD8         	movff	??_isrL,status
 10044  0000EC  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10045  0000EE  0010               	retfie	
 10046  0000F0                     __end_of_isrL:
 10047                           	callstack 0
 10048                           
 10049 ;; *************** function _isrH *****************
 10050 ;; Defined at:
 10051 ;;		line 54 in file "main.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;		None
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;		None
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10065 ;;      Params:         0       0       0       0       0       0       0       0       0
 10066 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10067 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10068 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10069 ;;Total ram usage:        3 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		Interrupt level 2
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	intcode
 10079  000008                     __pintcode:
 10080                           	callstack 0
 10081  000008                     _isrH:
 10082                           	callstack 19
 10083                           
 10084                           ;incstack = 0
 10085  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10086  00000A  EDA6  F017         	call	int_func,f	;refresh shadow registers
 10087  00000E                     
 10088                           	psect	intcode_body
 10089  002F4C                     __pintcode_body:
 10090                           	callstack 19
 10091  002F4C                     int_func:
 10092                           	callstack 19
 10093  002F4C  0006               	pop		; remove dummy address from shadow register refresh
 10094  002F4E  CFD9 F002          	movff	fsr2l,??_isrH+1
 10095  002F52  CFDA F003          	movff	fsr2h,??_isrH+2
 10096  002F56                     
 10097                           ;main.c: 56:     static uint8_t counter = 0;;main.c: 57:     if(TMR0IE && TMR0IF)
 10098  002F56  AAF2               	btfss	4082,5,c	;volatile
 10099  002F58  EFB0  F017         	goto	i2u444_41
 10100  002F5C  EFB2  F017         	goto	i2u444_40
 10101  002F60                     i2u444_41:
 10102  002F60  EFC1  F017         	goto	i2l4877
 10103  002F64                     i2u444_40:
 10104  002F64  A4F2               	btfss	4082,2,c	;volatile
 10105  002F66  EFB7  F017         	goto	i2u445_41
 10106  002F6A  EFB9  F017         	goto	i2u445_40
 10107  002F6E                     i2u445_41:
 10108  002F6E  EFC1  F017         	goto	i2l4877
 10109  002F72                     i2u445_40:
 10110  002F72                     
 10111                           ;main.c: 58:     {;main.c: 59:         TMR0IF = 0;
 10112  002F72  94F2               	bcf	4082,2,c	;volatile
 10113  002F74                     
 10114                           ;main.c: 60:         datos.state = 10;
 10115  002F74  0E0A               	movlw	10
 10116  002F76  0100               	movlb	0	; () banked
 10117  002F78  6FC5               	movwf	(_datos+3)& (0+255),b
 10118  002F7A                     
 10119                           ; BSR set to: 0
 10120                           ;main.c: 61:         datos.nextFunc = warning;
 10121  002F7A  0E16               	movlw	low _warning
 10122  002F7C  6FD9               	movwf	(_datos+23)& (0+255),b
 10123  002F7E  0E32               	movlw	high _warning
 10124  002F80  6FDA               	movwf	(_datos+24)& (0+255),b
 10125  002F82                     i2l4877:
 10126                           
 10127                           ;main.c: 63:     if(RCIF && RCIE)
 10128  002F82  AA9E               	btfss	3998,5,c	;volatile
 10129  002F84  EFC6  F017         	goto	i2u446_41
 10130  002F88  EFC8  F017         	goto	i2u446_40
 10131  002F8C                     i2u446_41:
 10132  002F8C  EFF2  F017         	goto	i2l114
 10133  002F90                     i2u446_40:
 10134  002F90  AA9D               	btfss	3997,5,c	;volatile
 10135  002F92  EFCD  F017         	goto	i2u447_41
 10136  002F96  EFCF  F017         	goto	i2u447_40
 10137  002F9A                     i2u447_41:
 10138  002F9A  EFF2  F017         	goto	i2l114
 10139  002F9E                     i2u447_40:
 10140  002F9E                     
 10141                           ;main.c: 64:     {;main.c: 65:         puerto[counter] = RCREG;
 10142  002F9E  0E86               	movlw	low _puerto
 10143  002FA0  2457               	addwf	isrH@counter^0,w,c
 10144  002FA2  6ED9               	movwf	fsr2l,c
 10145  002FA4  6ADA               	clrf	fsr2h,c
 10146  002FA6  0E00               	movlw	high _puerto
 10147  002FA8  22DA               	addwfc	fsr2h,f,c
 10148  002FAA  CFAE FFDF          	movff	4014,indf2	;volatile
 10149                           
 10150                           ;main.c: 66:         if(puerto[counter] != '@')
 10151  002FAE  0E86               	movlw	low _puerto
 10152  002FB0  2457               	addwf	isrH@counter^0,w,c
 10153  002FB2  6ED9               	movwf	fsr2l,c
 10154  002FB4  6ADA               	clrf	fsr2h,c
 10155  002FB6  0E00               	movlw	high _puerto
 10156  002FB8  22DA               	addwfc	fsr2h,f,c
 10157  002FBA  0E40               	movlw	64
 10158  002FBC  18DE               	xorwf	postinc2,w,c
 10159  002FBE  B4D8               	btfsc	status,2,c
 10160  002FC0  EFE4  F017         	goto	i2u448_41
 10161  002FC4  EFE6  F017         	goto	i2u448_40
 10162  002FC8                     i2u448_41:
 10163  002FC8  EFE9  F017         	goto	i2l4885
 10164  002FCC                     i2u448_40:
 10165  002FCC                     
 10166                           ;main.c: 67:         {;main.c: 68:             counter ++;
 10167  002FCC  2A57               	incf	isrH@counter^0,f,c
 10168                           
 10169                           ;main.c: 69:         }
 10170  002FCE  EFF2  F017         	goto	i2l114
 10171  002FD2                     i2l4885:
 10172                           
 10173                           ;main.c: 71:         {;main.c: 72:             datos.state = 4;
 10174  002FD2  0E04               	movlw	4
 10175  002FD4  0100               	movlb	0	; () banked
 10176  002FD6  6FC5               	movwf	(_datos+3)& (0+255),b
 10177  002FD8                     
 10178                           ; BSR set to: 0
 10179                           ;main.c: 73:             datos.nextFunc = readUART;
 10180  002FD8  0E4E               	movlw	low _readUART
 10181  002FDA  6FD9               	movwf	(_datos+23)& (0+255),b
 10182  002FDC  0E29               	movlw	high _readUART
 10183  002FDE  6FDA               	movwf	(_datos+24)& (0+255),b
 10184  002FE0                     
 10185                           ; BSR set to: 0
 10186                           ;main.c: 74:             counter = 0;
 10187  002FE0  0E00               	movlw	0
 10188  002FE2  6E57               	movwf	isrH@counter^0,c
 10189  002FE4                     i2l114:
 10190  002FE4  C003  FFDA         	movff	??_isrH+2,fsr2h
 10191  002FE8  C002  FFD9         	movff	??_isrH+1,fsr2l
 10192  002FEC  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10193  002FEE  0011               	retfie		f
 10194  002FF0                     __end_of_isrH:
 10195                           	callstack 0
 10196                           
 10197                           	psect	rparam
 10198  0000                     
 10199                           	psect	temp
 10200  000058                     btemp:
 10201                           	callstack 0
 10202  000058                     	ds	1
 10203  0000                     int$flags	set	btemp
 10204  0000                     wtemp8	set	btemp+1
 10205  0000                     ttemp5	set	btemp+1
 10206  0000                     ttemp6	set	btemp+4
 10207  0000                     ttemp7	set	btemp+8
 10208                           
 10209                           	psect	idloc
 10210                           
 10211                           ;Config register IDLOC0 @ 0x200000
 10212                           ;	unspecified, using default values
 10213  200000                     	org	2097152
 10214  200000  FF                 	db	255
 10215                           
 10216                           ;Config register IDLOC1 @ 0x200001
 10217                           ;	unspecified, using default values
 10218  200001                     	org	2097153
 10219  200001  FF                 	db	255
 10220                           
 10221                           ;Config register IDLOC2 @ 0x200002
 10222                           ;	unspecified, using default values
 10223  200002                     	org	2097154
 10224  200002  FF                 	db	255
 10225                           
 10226                           ;Config register IDLOC3 @ 0x200003
 10227                           ;	unspecified, using default values
 10228  200003                     	org	2097155
 10229  200003  FF                 	db	255
 10230                           
 10231                           ;Config register IDLOC4 @ 0x200004
 10232                           ;	unspecified, using default values
 10233  200004                     	org	2097156
 10234  200004  FF                 	db	255
 10235                           
 10236                           ;Config register IDLOC5 @ 0x200005
 10237                           ;	unspecified, using default values
 10238  200005                     	org	2097157
 10239  200005  FF                 	db	255
 10240                           
 10241                           ;Config register IDLOC6 @ 0x200006
 10242                           ;	unspecified, using default values
 10243  200006                     	org	2097158
 10244  200006  FF                 	db	255
 10245                           
 10246                           ;Config register IDLOC7 @ 0x200007
 10247                           ;	unspecified, using default values
 10248  200007                     	org	2097159
 10249  200007  FF                 	db	255
 10250                           
 10251                           	psect	config
 10252                           
 10253                           ;Config register CONFIG1L @ 0x300000
 10254                           ;	PLL Prescaler Selection bits
 10255                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10256                           ;	System Clock Postscaler Selection bits
 10257                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10258                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10259                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10260  300000                     	org	3145728
 10261  300000  00                 	db	0
 10262                           
 10263                           ;Config register CONFIG1H @ 0x300001
 10264                           ;	Oscillator Selection bits
 10265                           ;	FOSC = HS, HS oscillator (HS)
 10266                           ;	Fail-Safe Clock Monitor Enable bit
 10267                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10268                           ;	Internal/External Oscillator Switchover bit
 10269                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10270  300001                     	org	3145729
 10271  300001  0C                 	db	12
 10272                           
 10273                           ;Config register CONFIG2L @ 0x300002
 10274                           ;	Power-up Timer Enable bit
 10275                           ;	PWRT = OFF, PWRT disabled
 10276                           ;	Brown-out Reset Enable bits
 10277                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10278                           ;	Brown-out Reset Voltage bits
 10279                           ;	BORV = 3, Minimum setting 2.05V
 10280                           ;	USB Voltage Regulator Enable bit
 10281                           ;	VREGEN = OFF, USB voltage regulator disabled
 10282  300002                     	org	3145730
 10283  300002  19                 	db	25
 10284                           
 10285                           ;Config register CONFIG2H @ 0x300003
 10286                           ;	Watchdog Timer Enable bit
 10287                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10288                           ;	Watchdog Timer Postscale Select bits
 10289                           ;	WDTPS = 32768, 1:32768
 10290  300003                     	org	3145731
 10291  300003  1E                 	db	30
 10292                           
 10293                           ; Padding undefined space
 10294  300004                     	org	3145732
 10295  300004  FF                 	db	255
 10296                           
 10297                           ;Config register CONFIG3H @ 0x300005
 10298                           ;	CCP2 MUX bit
 10299                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10300                           ;	PORTB A/D Enable bit
 10301                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10302                           ;	Low-Power Timer 1 Oscillator Enable bit
 10303                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10304                           ;	MCLR Pin Enable bit
 10305                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10306  300005                     	org	3145733
 10307  300005  81                 	db	129
 10308                           
 10309                           ;Config register CONFIG4L @ 0x300006
 10310                           ;	Stack Full/Underflow Reset Enable bit
 10311                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10312                           ;	Single-Supply ICSP Enable bit
 10313                           ;	LVP = OFF, Single-Supply ICSP disabled
 10314                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10315                           ;	ICPRT = OFF, ICPORT disabled
 10316                           ;	Extended Instruction Set Enable bit
 10317                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10318                           ;	Background Debugger Enable bit
 10319                           ;	DEBUG = 0x1, unprogrammed default
 10320  300006                     	org	3145734
 10321  300006  81                 	db	129
 10322                           
 10323                           ; Padding undefined space
 10324  300007                     	org	3145735
 10325  300007  FF                 	db	255
 10326                           
 10327                           ;Config register CONFIG5L @ 0x300008
 10328                           ;	Code Protection bit
 10329                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10330                           ;	Code Protection bit
 10331                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10332                           ;	Code Protection bit
 10333                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10334                           ;	Code Protection bit
 10335                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10336  300008                     	org	3145736
 10337  300008  0F                 	db	15
 10338                           
 10339                           ;Config register CONFIG5H @ 0x300009
 10340                           ;	Boot Block Code Protection bit
 10341                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10342                           ;	Data EEPROM Code Protection bit
 10343                           ;	CPD = OFF, Data EEPROM is not code-protected
 10344  300009                     	org	3145737
 10345  300009  C0                 	db	192
 10346                           
 10347                           ;Config register CONFIG6L @ 0x30000A
 10348                           ;	Write Protection bit
 10349                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10350                           ;	Write Protection bit
 10351                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10352                           ;	Write Protection bit
 10353                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10354                           ;	Write Protection bit
 10355                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10356  30000A                     	org	3145738
 10357  30000A  0F                 	db	15
 10358                           
 10359                           ;Config register CONFIG6H @ 0x30000B
 10360                           ;	Configuration Register Write Protection bit
 10361                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10362                           ;	Boot Block Write Protection bit
 10363                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10364                           ;	Data EEPROM Write Protection bit
 10365                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10366  30000B                     	org	3145739
 10367  30000B  E0                 	db	224
 10368                           
 10369                           ;Config register CONFIG7L @ 0x30000C
 10370                           ;	Table Read Protection bit
 10371                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10372                           ;	Table Read Protection bit
 10373                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10374                           ;	Table Read Protection bit
 10375                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10376                           ;	Table Read Protection bit
 10377                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10378  30000C                     	org	3145740
 10379  30000C  0F                 	db	15
 10380                           
 10381                           ;Config register CONFIG7H @ 0x30000D
 10382                           ;	Boot Block Table Read Protection bit
 10383                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10384  30000D                     	org	3145741
 10385  30000D  40                 	db	64
 10386                           tosu	equ	0xFFF
 10387                           tosh	equ	0xFFE
 10388                           tosl	equ	0xFFD
 10389                           stkptr	equ	0xFFC
 10390                           pclatu	equ	0xFFB
 10391                           pclath	equ	0xFFA
 10392                           pcl	equ	0xFF9
 10393                           tblptru	equ	0xFF8
 10394                           tblptrh	equ	0xFF7
 10395                           tblptrl	equ	0xFF6
 10396                           tablat	equ	0xFF5
 10397                           prodh	equ	0xFF4
 10398                           prodl	equ	0xFF3
 10399                           indf0	equ	0xFEF
 10400                           postinc0	equ	0xFEE
 10401                           postdec0	equ	0xFED
 10402                           preinc0	equ	0xFEC
 10403                           plusw0	equ	0xFEB
 10404                           fsr0h	equ	0xFEA
 10405                           fsr0l	equ	0xFE9
 10406                           wreg	equ	0xFE8
 10407                           indf1	equ	0xFE7
 10408                           postinc1	equ	0xFE6
 10409                           postdec1	equ	0xFE5
 10410                           preinc1	equ	0xFE4
 10411                           plusw1	equ	0xFE3
 10412                           fsr1h	equ	0xFE2
 10413                           fsr1l	equ	0xFE1
 10414                           bsr	equ	0xFE0
 10415                           indf2	equ	0xFDF
 10416                           postinc2	equ	0xFDE
 10417                           postdec2	equ	0xFDD
 10418                           preinc2	equ	0xFDC
 10419                           plusw2	equ	0xFDB
 10420                           fsr2h	equ	0xFDA
 10421                           fsr2l	equ	0xFD9
 10422                           status	equ	0xFD8

Data Sizes:
    Strings     125
    Constant    0
    Data        25
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      87
    BANK0           160     44     123
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    appSubGiveElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2262_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memcmp@vr	PTR const void  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@vl	PTR const void  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    sendData@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    sendData@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_10(CODE[13]), STR_9(CODE[17]), STR_8(CODE[12]), STR_6(CODE[14]), 
		 -> STR_4(CODE[6]), STR_3(CODE[12]), datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    S196_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _warning->_Lcd_Out
    _sendData->_strlen
    _readUART->_memset
    _confirmacion->_Lcd_Out
    _appBat->___fltol
    _appADC->___fltol
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_setServo
    _appInit->_uart_Init
    _uart_Init->___lldiv
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _appSubGiveElemts->_setServo
    _setServo->_setServoAngle
    _sprintf->___fltol
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _sendinformation->_appBat
    _appStateRecolectData->_appBat
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    ___awmod->___fltol
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  155139
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
                       _confirmacion *
                           _readUART *
                    _sendinformation *
                            _warning *
 ---------------------------------------------------------------------------------
 (1) _warning                                              2     2      0    3439
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
                       _appTimerStop
                           _setServo
 ---------------------------------------------------------------------------------
 (1) _sendinformation                                      0     0      0   67164
                             _appADC
                             _appBat
                          _appElemts
                      _appTimerStart
                             _memset
                           _sendData
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendData                                             5     3      2     636
                                             10 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _readUART                                             2     2      0    3356
                                             18 COMRAM     2     2      0
                            _Lcd_Cmd
                             _memcmp
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              11     5      6     637
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _confirmacion                                         2     2      0    2229
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   55659
                             _appADC
                             _appBat
                     _appCounterStop
                          _appElemts
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            2     0      2   14405
                                             36 BANK0      2     0      2
                            _Lcd_Out
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appCounterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   19745
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20299
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                             10 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     817
                                             74 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             49 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     613
                                              2 BANK0      6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0    1736
                           _setServo
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    4308
                            _adcInit
                     _appCounterInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                          _servoInit
                           _setServo
                          _uart_Init
 ---------------------------------------------------------------------------------
 (2) _uart_Init                                            4     0      4     412
                                             19 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              6 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _servoInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2544
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              9 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appCounterInit                                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   17248
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                   _appSubGiveElemts
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGiveElemts                                     2     0      2    1286
                                             14 COMRAM     2     0      2
                    _appCounterStart
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _setServo                                             4     2      2    1210
                                             10 COMRAM     4     2      2
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (3) _setServoAngle                                        4     3      1     208
                                              6 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _appCounterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   15786
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    9536
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8324
                                             79 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    7794
                                             69 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4434
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2785
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1396
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     555
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2543
                                              6 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    2053
                                              9 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appSubGiveElemts
       _appCounterStart
       _setServo
         _setServoAngle
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appCounterInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _servoInit
     _setServo
       _setServoAngle
     _uart_Init
       ___lldiv
   _appStateInitial *
     _setServo
       _setServoAngle
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appCounterStop
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _setServo
       _setServoAngle
   _confirmacion *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
   _readUART *
     _Lcd_Cmd
     _memcmp
     _memset
   _sendinformation *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appTimerStart
     _memset
     _sendData
       _strlen
     _sprintf
       ___awmod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _warning *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
     _appTimerStop
     _setServo
       _setServoAngle

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      7B       5       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      57       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D2      20        0.0%
DATA                 0      0      D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jun 03 18:59:44 2021

                  fp__readUART 000E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                  ?_confirmacion 0001                             l30 36BA  
                           l32 36C8                             l33 36D0                             l42 1A5E  
                           l27 3586                             l39 1DC0                             bsr 000FE0  
          ___wmul@multiplicand 0009                            l141 1876                            l240 2640  
                          l241 2646                            l250 26F0                            l154 2C9A  
                          l234 3822                            l155 2CE6                            l252 26F6  
                          l156 2D38                            l253 26FC                            l261 37CA  
                          l254 2742                            l238 263A                            l270 3850  
                          l255 2746                            l247 2734                            l191 31A4  
                          l352 3848                            l264 37A0                            l360 34D4  
                          l185 2500                            l169 2AEC                            l273 3840  
                          l441 334A                            l282 32E8                            l434 2A20  
                          l267 3854                            l363 34F2                            l188 262A  
                          l444 37F0                            l276 3858                            l428 3404  
                          l373 294C                            l349 35CC                            l357 3120  
                          l438 32F2                            l382 3282                            l366 3214  
                          l471 2F3A                            l279 384C                            l391 2DF4  
                          l376 3836                            l571 23B2                            l388 353C  
                          l741 284E                            l558 20D8                            l478 2F4A  
                          l688 2EA6                adcInit@ADC_PINs 0008                            _PR2 000FCB  
                          _abs 3656                            _pad 2BB8                   ___awmod@sign 009D  
                          tosl 000FFD                            wreg 000FE8                   ___flmul@aexp 002A  
                 ___flmul@bexp 002B                   ___flmul@sign 0025                   ___flmul@temp 0030  
                 ___flmul@prod 002C                   ___fltol@exp1 0097                           l1102 1C12  
                         l1031 0E66                           l1040 0F4E                           l1113 1BAA  
                         l1026 1042                           l1106 1B4E                           l1131 224E  
                         ?_abs 0019                           l1220 1136                           l1028 0EA2  
                         l1037 0EE8                           l1206 168C                           l1062 0CA8  
                         l1039 0F60                           l1127 308C                           l1144 3456  
                         l3001 2020                           l1241 33A4                           l1065 0B3A  
                         l1306 2BB6                           l1314 3654                           l1242 33AC  
                         l1058 0944                           l3003 204E                           l3011 2088  
                         l1323 373E                           l1235 13AE                           l1075 0C6A  
                         l1067 0BB2                           l1180 2C78                           l1068 0BA0  
                         l3013 2098                           l3005 206E                           l3021 2254  
                         l1317 385A                           l3101 13F8                           l1246 368C  
                         l3015 20B8                           l3007 2070                           l3031 22B4  
                         l3023 2262                           l1175 2BFC                           l3111 145E  
                         l3103 1418                           l1280 1F50                           l3009 2082  
                         l3041 232A                           l3033 22D2                           l3025 2282  
                         l1249 3694                           l3121 1496                           l3113 1470  
                         l3105 1426                           l3201 1044                           l4001 1AF0  
                         l1178 2C3E                           l1186 144E                           l1283 3708  
                         l1291 34A8                           l3051 2392                           l3043 234A  
                         l3035 22DA                           l3027 2286                           l3019 2250  
                         l3123 149C                           l3131 158E                           l3115 147E  
                         l3107 1428                           l3211 1098                           l3203 1068  
                         l4011 1B44                           l4003 1AF8                           l1099 1AB6  
                         l1188 1456                           l1277 1F48                           l3045 235C  
                         l3037 22EE                           l3029 2294                           l3061 2BE8  
                         l3133 15A8                           l3141 1608                           l3125 151E  
                         l3117 1484                           l3109 1442                           l3213 109A  
                         l3205 1076                           l4101 381A                           l4021 1BBA  
                         l4013 1B80                           l4005 1B04                           l3311 2590  
                         l3303 2504                           l3039 22FC                           l3047 2362  
                         l3071 2C4C                           l3063 2BF4                           l3055 2BB8  
                         l3151 164C                           l3143 161A                           l3135 15C6  
                         l3127 1524                           l3119 148C                           l3231 10C4  
                         l3223 10B8                           l3215 10AC                           l3207 1088  
                         l4111 377A                           l4103 381C                           l4031 1C02  
                         l4023 1BBE                           l4015 1B8C                           l4007 1B36  
                         l3321 2618                           l3313 2596                           l3305 2508  
                         l3081 36D2                           l3161 1DD6                           l3049 2372  
                         l3073 2C60                           l3065 2C08                           l3057 2BC6  
                         l3153 1654                           l3145 1628                           l3137 15E0  
                         l3129 152A                           l3241 1146                           l3209 108C  
                         l4201 3828                           l4041 356C                           l4121 378E  
                         l4113 377E                           l4105 381E                           l4025 1BE2  
                         l4017 1B9A                           l4009 1B38                           l3331 2452  
                         l3323 261A                           l3315 2608                           l3307 2586  
                         l3411 2192                           l3403 20F8                           l3091 349E  
                         l3171 1E34                           l3163 1DDA                           l3067 2C1C  
                         l3059 2BDA                           l3147 162E                           l3155 1664  
                         l3139 15FA                           l3251 11DC                           l3243 116A  
                         l3235 10D0                           l3227 10BE                           l3219 10B2  
                         l4051 3584                           l4043 3570                           l4035 3540  
                         l4131 3798                           l4123 3790                           l4115 3788  
                         l4107 3820                           l4027 1BF2                           l4019 1BB8  
                         l4211 2FF0                           l4203 32EA                           l3341 24E2  
                         l3333 2454                           l3325 23B6                           l3317 2610  
                         l3309 258E                           l3421 21F2                           l3405 2104  
                         l3093 34A2                           l3085 3458                           l3181 1E60  
                         l3165 1DDE                           l3077 3656                           l3069 2C20  
                         l3149 1640                           l3261 1268                           l3253 11EA  
                         l3245 11A0                           l3237 1124                           l3501 1748  
                         l5021 2660                           l4141 384E                           l4045 3578  
                         l4037 3550                           l4133 379A                           l4125 3792  
                         l4117 378A                           l4109 3774                           l4029 1C00  
                         l4221 305E                           l4213 3004                           l4205 3300  
                         l4301 3238                           l3343 24E8                           l3335 245A  
                         l3327 23BA                           l3319 2612                           l3423 2226  
                         l3415 21AC                           l3087 345C                           l3191 1F08  
                         l3183 1E94                           l3175 1E3A                           l3167 1DFA  
                         l3159 1DC2                           l3079 3670                           l3271 1330  
                         l3263 128C                           l3247 11AE                           l3239 1144  
                         l3511 1788                           l3503 1754                           l5023 2716  
                         l3351 2632                           l4047 3580                           l4039 355C  
                         l4143 3838                           l4135 379C                           l4127 3794  
                         l4119 378C                           l4231 3590                           l4223 306A  
                         l4215 3012                           l4207 331C                           l4303 324A  
                         l4311 34F4                           l3345 24EA                           l3337 24D8  
                         l3329 244A                           l3425 2232                           l3417 21D8  
                         l3409 213A                           l3089 3470                           l3193 1F1A  
                         l3177 1E50                           l3169 1E30                           l3097 13B0  
                         l3281 136C                           l3273 133E                           l3265 12D4  
                         l3257 1232                           l3249 11BC                           l5025 10F6  
                         l3521 17C0                           l3513 178C                           l3505 1762  
                         l3361 2690                           l3353 2634                           l4049 3582  
                         l4153 3842                           l3601 2D2C                           l4081 3122  
                         l4137 379E                           l4129 3796                           l4161 33F4  
                         l4241 35BE                           l4233 3596                           l4145 384A  
                         l4217 3024                           l4209 331E                           l4305 325C  
                         l4313 3506                           l3347 24F0                           l3339 24E0  
                         l3451 2A46                           l3443 2A24                           l3427 2238  
                         l3195 1F2C                           l5027 1E7E                           l3187 1ECA  
                         l3179 1E58                           l3099 13D0                           l3275 1352  
                         l3259 1244                           l3531 17F8                           l3523 17CE  
                         l3515 179A                           l3507 176E                           l3371 26EA  
                         l3363 26A2                           l3611 37AC                           l4139 3852  
                         l3603 2D2C                           l4091 318C                           l4083 3132  
                         l4171 33FE                           l4163 33F6                           l4155 33AE  
                         l4235 359A                           l4227 3588                           l4219 304C  
                         l4307 326A                           l4315 351A                           l3461 2AB8  
                         l5029 2A64                           l3445 2A28                           l3429 223C  
                         l3269 130C                           l3285 1378                           l3541 183A  
                         l3533 1806                           l3525 17DA                           l3517 17A6  
                         l3509 177C                           l3365 26B4                           l3357 264C  
                         l3349 262E                           l3613 37B6                           l3605 2D32  
                         l4085 314A                           l4093 380C                           l3621 2EB8  
                         l4173 3400                           l4165 33F8                           l4157 33B4  
                         l4237 35A6                           l4229 358C                           l3701 0DFA  
                         l4309 327E                           l4317 3520                           l3463 2ABC  
                         l3447 2A32                           l3455 2A50                           l3287 139C  
                         l3279 135E                           l3543 1846                           l3535 1812  
                         l3527 17E8                           l3519 17B4                           l3471 169A  
                         l3375 2702                           l3367 26C8                           l3359 267E  
                         l3615 37B8                           l3607 2D32                           l3551 2C7A  
                         l4087 315C                           l4095 3814                           l3631 2EFA  
                         l3623 2ECE                           l4175 3402                           l4167 33FA  
                         l4159 33F2                           l4239 35AA                           l3711 0E42  
                         l3703 0E0A                           l4319 3538                           l4271 34E2  
                         l3449 2A3C                           l3457 2A8A                           l4601 3444  
                         l3545 1854                           l3537 1820                           l3529 17F4  
                         l3481 16CE                           l3473 169E                           l3617 3856  
                         l3369 26DA                           l3609 37A4                           l3561 2CB2  
                         l3553 2C86                           l4089 316E                           l4097 3816  
                         l3633 2F18                           l3625 2ED6                           l4169 33FC  
                         l3721 0E90                           l3713 0E56                           l3705 0E1A  
                         l3641 0CAA                           l3801 08FC                           l3393 3698  
                         l4273 34F0                           l4265 34AA                           l3459 2A94  
                         l3539 182C                           l3491 1710                           l3483 16DC  
                         l3475 16B0                           l3547 1860                           l3571 2CC0  
                         l3563 2CB8                           l3555 2C96                           l4099 3818  
                         l3635 2F28                           l3627 2EE2                           l3619 2EA8  
                         l4611 2E12                           l3731 0ED8                           l3723 0EA0  
                         l3715 0E64                           l3707 0E2A                           l3651 0CE6  
                         l3643 0CB6                           l3811 0934                           l3803 08FE  
                         l3395 36AA                           l4267 34B6                           l2941 2B12  
                         l3549 1864                           l3493 171C                           l3485 16E8  
                         l3477 16B4                           l3469 168E                           l3581 2D06  
                         l3573 2CC2                           l3565 2CBA                           l3637 2F2A  
                         l3629 2EF0                           l4621 2E46                           l4613 2E16  
                         l4605 2DF6                           l3741 0F18                           l3733 0EE6  
                         l3725 0EB2                           l3717 0E70                           l3709 0E32  
                         l3661 0D16                           l3653 0CF6                           l3645 0CC4  
                         l3901 0C8E                           l3821 0984                           l3813 0954  
                         l3805 090E                           l3397 36B8                           l4701 1878  
                         l4269 34C8                           ?_pad 0017                           l3399 20DA  
                         l2943 2B1C                           l2951 370A                           l3495 1720  
                         l3487 16F6                           l3479 16C2                           l4199 3824  
                         l3591 2D20                           l3583 2D08                           l3575 2CD4  
                         l3567 2CBC                           l3639 2F34                           l4631 2E80  
                         l4623 2E4E                           l4615 2E24                           l4607 2DFC  
                         l3751 0F8A                           l3743 0F46                           l3727 0EC8  
                         l3735 0EF8                           l3719 0E8E                           l3671 0D4C  
                         l3663 0D1C                           l3655 0CF8                           l3647 0CC6  
                         l3903 0C94                           l3831 09D4                           l3823 098E  
                         l3815 0964                           l3807 091E                           l4711 1A46  
                         l4703 18B6                           l4295 3216                           l2945 2B3A  
                         l2937 2AEE                           l2961 3612                           l2953 3716  
                         l3497 172E                           l3489 1702                           l4721 285E  
                         l3593 2D20                           l3585 2D0A                           l3577 2CFE  
                         l3569 2CBE                           l4625 2E5C                           l4633 2E86  
                         l4617 2E2C                           l4609 2E0A                           l3761 1002  
                         l3753 0FB4                           l3737 0F06                           l3729 0ECE  
                         l3681 0D8C                           l3673 0D5C                           l3665 0D2A  
                         l3649 0CD6                           l3657 0D00                           l3905 0C98  
                         l3841 0A16                           l3833 09E0                           l3825 09A4  
                         l3809 092E                           l4641 2748                           l4705 1934  
                         l4713 3284                           l4297 321A                           l4801 2DE6  
                         l2971 37E8                           l2947 2B70                           l2939 2B00  
                         l2963 361E                           l2955 371A                           l3499 173A  
                         l4731 28C2                           l4723 287E                           l3595 2D20  
                         l3587 2D0C                           l3579 2D04                           l4635 2E96  
                         l4627 2E72                           l4619 2E3E                           l3771 1038  
                         l3763 101E                           l3747 0F70                           l3755 0FB8  
                         l3739 0F0A                           l3683 0D9C                           l3691 0DBC  
                         l3675 0D5E                           l3667 0D2C                           l3659 0D10  
                         l3851 0A78                           l3843 0A26                           l3835 09EE  
                         l3827 09B0                           l3819 0978                           l4651 27A0  
                         l4643 2760                           l4707 1982                           l4715 32A6  
                         l4299 3220                           l4811 299E                           l4803 2DEC  
                         l2981 1F84                           l2965 3630                           l2957 3732  
                         l4733 28EC                           l4725 2894                           l3597 2D26  
                         l3589 2D0E                           l4637 2E9E                           l4629 2E7A  
                         l3765 1022                           l3757 0FD2                           l3749 0F7C  
                         l3693 0DCC                           l3685 0DA4                           l3669 0D3C  
                         l3677 0D66                           l3861 0B20                           l3853 0A94  
                         l3845 0A40                           l3837 09FA                           l3829 09C8  
                         l3781 088C                           l4653 27B0                           l4709 1A1A  
                         l4717 32D0                           l4741 308E                           l4821 2A12  
                         l4813 29AA                           l4805 294E                           l2991 1FC6  
                         l2983 1F88                           l2975 1F52                           l2967 3634  
                         l4591 3388                           l4735 290C                           l4727 28A0  
                         l4719 2850                           l3599 2D26                           l3767 1030  
                         l3759 0FE8                           l3695 0DCC                           l3687 0DA8  
                         l3679 0D76                           l3871 0B5C                           l3863 0B2A  
                         l3855 0ABE                           l3847 0A50                           l3839 0A0A  
                         l3791 08CC                           l3783 089A                           l4663 27DA  
                         l4655 27B4                           l4647 2774                           l4751 30EE  
                         l4743 30B8                           l4823 2A18                           l4815 29D8  
                         l4807 297C                           l4831 3748                           l2969 37CC  
                         l2993 1FE4                           l2985 1F96                           l2977 1F56  
                         l4585 334C                           l4593 3406                           l4729 28B2  
                         l4737 2924                           l3769 1036                           l3881 0BCE  
                         l3873 0B6A                           l3865 0B38                           l3857 0AF4  
                         l3849 0A6C                           l3793 08D2                           l3785 089C  
                         l4681 283E                           l4673 2802                           l4665 27E4  
                         l4657 27C2                           l4649 279E                           l4753 30F2  
                         l4745 30CC                           l4761 3116                           l4817 29DE  
                         l4809 2998                           l4833 374A                           l4825 3740  
                         l2995 1FEC                           l2987 1FB6                           l2979 1F64  
                         l4587 3354                           l4595 3418                           l4739 2938  
                         l3699 0DE0                           l3891 0C38                           l3883 0BDC  
                         l3875 0B98                           l3867 0B4A                           l3859 0B02  
                         l3795 08E2                           l3787 08AC                           l3779 0880  
                         l4675 280E                           l4667 27EE                           l4691 1CB6  
                         l4755 30F8                           l4747 30CE                           l4771 31CE  
                         l4763 31A6                           l4819 29F6                           l4835 374E  
                         l4827 3744                           l2997 2000                           l2989 1FBA  
                         l4589 3362                           l4597 3420                           l3893 0C52  
                         l3885 0C06                           l3869 0B58                           l3797 08E8  
                         l3789 08BC                           l4677 281E                           l4693 1D40  
                         l4685 1C14                           l4757 3106                           l4749 30E6  
                         l4781 3210                           l4773 31DC                           l4765 31AC  
                         l4829 3746                           l2999 200E                           l4599 3428  
                         l3895 0C6E                           l3879 0BC2                           l3887 0C0A  
                         l3799 08EE                           l4679 282E                           l3991 1A72  
                         l4695 1D88                           l4687 1C36                           l4759 3108  
                         l4775 31E2                           l4767 31B0                           l4791 2D7C  
                         l4783 2D3A                           l3897 0C7E                           l3889 0C24  
                         l3993 1A80                           l4697 1D8E                           l4689 1C5E  
                         l4777 31FA                           l4769 31B6                           l4793 2D88  
                         l4785 2D48                           l3899 0C8C                           l3995 1AC6  
                         l4699 1DBE                           l4779 3206                           l4795 2DA4  
                         l4787 2D54                           l3997 1ADC                           l3989 1A62  
                         l4797 2DC6                           l4789 2D6E                           l4799 2DCA  
                         STR_1 0820                           STR_2 086A                           STR_3 0854  
                         STR_4 0873                           STR_5 0879                           STR_6 0812  
                         STR_7 087B                           STR_8 0848                           STR_9 0801  
                         u2100 2B70                           u2101 2B6C                           u2110 3732  
                         u2111 372E                           u2200 2262                           u2120 3654  
                         u3000 179A                           u2201 225E                           u2121 3650  
                         u3001 1796                           u2130 1F64                           u2210 2294  
                         u3010 17B4                           u2131 1F60                           u2211 2290  
                         u3011 17B0                           u2140 1F96                           u2220 22D2  
                         u2300 3670                           u3020 17CE                           u3100 37CA  
                         u2141 1F92                           u2221 22CE                           u2301 366C  
                         u3021 17CA                           u3101 37C6                           u2310 3702  
                         u2230 22FC                           u2070 2B00                           u3030 17E8  
                         u3110 2ECE                           u2311 36FC                           u2151 1FC0  
                         u2231 22F8                           u2071 2AFC                           u3031 17E4  
                         u3111 2ECA                           u2320 3704                           u2160 1FE4  
                         u2240 232A                           u2080 2B12                           u2400 1470  
                         u3040 1806                           u3120 2EF0                           u3200 0D8C  
                         u2161 1FE0                           u2241 2326                           u2081 2B0E  
                         u2401 146C                           u3041 1802                           u3121 2EEC  
                         u3201 0D88                           u2330 3470                           u2170 200E  
                         u2250 2372                           u2090 2B3A                           u2410 147E  
                         u3050 1820                           u3130 2F18                           u3210 0DCC  
                         u2331 346C                           u2171 200A                           u2251 236E  
                         u2091 2B36                           u2411 147A                           u3051 181C  
                         u3131 2F14                           u3211 0DC8                           u2340 349E  
                         u2500 1DFA                           u2180 204E                           u2260 2BC6  
                         u2420 15A8                           u3060 183A                           u3300 0F46  
                         u3220 0E42                           u3140 0CC4                           u2341 349A  
                         u2501 1DF6                           u2181 204A                           u2261 2BC2  
                         u2421 15A4                           u3061 1836                           u3301 0F42  
                         u3221 0E3E                           u3141 0CC0                           u2510 1E30  
                         u2190 2098                           u2270 2BE8                           u2430 15C6  
                         u2350 13E0                           u3070 1854                           u3310 0F5C  
                         u3230 0E64                           u3150 0CD6                           u2511 1E2C  
                         u2191 2094                           u2271 2BE4                           u2431 15C2  
                         u2351 13DA                           u3071 1850                           u3311 0F58  
                         u3231 0E60                           u3151 0CD2                           u2520 1E4C  
                         u2280 2C3E                           u2440 15E0                           u2360 13E2  
                         u2600 116A                           u3080 1876                           u3320 0F70  
                         u3240 0E8E                           u3160 0CE6                           u3400 08FC  
                         u4200 2760                           u2521 1E48                           u2281 2C3A  
                         u2441 15DC                           u2601 1166                           u3081 1872  
                         u3321 0F6C                           u3241 0E8A                           u3161 0CE2  
                         u3401 08F8                           u4201 275C                           u2530 1F02  
                         u2290 2C4C                           u2450 15FA                           u2370 13F8  
                         u2610 11AE                           u4130 33A4                           u3090 2CE6  
                         u3330 0F8A                           u3250 0EB2                           u3170 0D2A  
                         u3410 090E                           u4210 2794                           u2531 1EFC  
                         u2291 2C48                           u2451 15F6                           u2371 13F4  
                         u2611 11AA                           u4131 33A0                           u3091 2CE2  
                         u3331 0F86                           u3251 0EAE                           u3171 0D26  
                         u3411 090A                           u2540 1F04                           u2460 1608  
                         u2380 1426                           u2620 122A                           u4300 28C2  
                         u4140 2E0A                           u3340 0FD2                           u3260 0EC8  
                         u3180 0D3C                           u3500 0BAE                           u3420 091E  
                         u4220 27C2                           u2461 1604                           u2381 1422  
                         u2621 1224                           u4301 28BE                           u4141 2E06  
                         u3341 0FCE                           u3261 0EC4                           u3181 0D38  
                         u3501 0BAA                           u3421 091A                           u4221 27BE  
                         u2550 1F1A                           u2470 161A                           u2390 1442  
                         u2630 122C                           u4310 2938                           u4150 2E24  
                         u3350 1002                           u3270 0EE6                           u3190 0D4C  
                         u3510 0BC2                           u3430 0954                           u4230 27D6  
                         u2551 1F16                           u2471 1616                           u2391 143E  
                         u4311 2934                           u4151 2E20                           u3351 0FFE  
                         u3271 0EE2                           u3191 0D48                           u3511 0BBE  
                         u3431 0950                           u4231 27D2                           u4215 278A  
                         u2560 1F2C                           u2480 1628                           u2640 1244  
                         u2800 2742                           u4160 2E3E                           u3360 1030  
                         u3280 0F06                           u3520 0BDC                           u3440 0964  
                         u4240 27FE                           u4320 30CC                           u2705 2550  
                         u2561 1F28                           u2481 1624                           u2641 1240  
                         u2801 273E                           u4161 2E3A                           u3361 102C  
                         u3281 0F02                           u3521 0BD8                           u3441 0960  
                         u4241 27FA                           u4321 30C8                           u2490 1640  
                         u2650 1268                           u2570 1068                           u4170 2E5C  
                         u3290 0F18                           u3530 0C24                           u3450 0ADE  
                         u3370 089A                           u4250 281E                           u4330 30E6  
                         u2715 23C2                           u2491 163C                           u2651 1264  
                         u2571 1064                           u4171 2E58                           u3291 0F14  
                         u3531 0C20                           u3371 0896                           u4251 281A  
                         u4331 30E2                           u2900 2AEC                           u2660 128C  
                         u2580 1136                           u4180 2E72                           u3540 0C52  
                         u3460 0B38                           u3380 08AC                           u4260 282E  
                         u3700 1A80                           u2820 36C8                           u4340 297C  
                         u2725 23E6                           u2901 2AE8                           u2661 1288  
                         u2581 1132                           u4181 2E6E                           u3541 0C4E  
                         u3461 0B34                           u3381 08A8                           u4261 282A  
                         u3701 1A7C                           u2821 36C4                           u4341 2978  
                         u2830 20F4                           u2670 1330                           u2590 1144  
                         u2910 16B0                           u4190 2E96                           u3550 0C8C  
                         u3470 0B58                           u3390 08BC                           u3710 1ADC  
                         u4270 1D88                           u4350 29D8                           u2735 240C  
                         u2831 20F0                           u2671 132C                           u2591 1140  
                         u2911 16AC                           u4191 2E92                           u3551 0C88  
                         u3471 0B54                           u3455 0AD4                           u3391 08B8  
                         u3711 1AD8                           u4271 1D84                           u4351 29D4  
                         u2840 2136                           u2920 16C2                           u3480 0B6A  
                         u3720 1B32                           u4280 1DBE                           u2745 2430  
                         u2841 2132                           u2921 16BE                           u3481 0B66  
                         u3721 1B2E                           u4281 1DBA                           u2850 21A8  
                         u2930 16DC                           u4290 28B2                           u2770 2690  
                         u3490 0B98                           u3730 1B7C                           u2755 2464  
                         u2851 21A4                           u2931 16D8                           u4291 28AE  
                         u2771 268C                           u3491 0B94                           u3731 1B78  
                         u4507 31C2                           u2860 21EE                           u2940 16F6  
                         u2780 26B4                           u3820 33E8                           u3740 1B9A  
                         u3900 305E                           u2765 24A8                           u2685 2510  
                         u2861 21EA                           u2941 16F2                           u2781 26B0  
                         u3741 1B96                           u3901 305A                           u4517 31EE  
                         u2870 224E                           u2950 1710                           u2790 26DA  
                         u3750 1BAA                           u2695 252A                           u2871 224A  
                         u2951 170C                           u2791 26D6                           u4607 2CCA  
                         u3751 1BA6                           u4527 352A                           u2880 2AB4  
                         u2960 172E                           u3760 1BB8                           u4368 3758  
                         u2961 172A                           u4617 2D00                           u3825 33DE  
                         u3761 1BB4                           u4537 322A                           u4369 376C  
                         u2890 2ADC                           u2970 1748                           u3770 1BF2  
                         u3690 1A72                           u3930 34C8                           u4707 2620  
                         u2971 1744                           u4627 2D16                           u3771 1BEE  
                         u3691 1A6E                           u4547 36B0                           u3931 34C4  
                         _RCIE 007CED                           u2980 1762                           u3780 1C00  
                         u3860 3300                           u3940 34E2                           _RCIF 007CF5  
                         u4717 244C                           u2981 175E                           u4637 2696  
                         u4557 313C                           u3781 1BFC                           u3861 32FC  
                         u3941 34DE                           u2990 177C                           u3790 3550  
                         u3870 334A                           u3950 327E                           u4727 2456  
                         u2887 2AAA                           u2991 1778                           u4647 26BA  
                         u3791 354C                           u4567 3178                           u3871 3346  
                         u3951 327A                           u3880 3024                           u3960 351A  
                         u4737 24DA                           u2897 2AD2                           u4657 26E0  
                         u4577 3196                           u3881 3020                           u3961 3516  
                         u4497 29E8                           u3890 304C                           u4747 24E4  
                         u4667 2588                           u4587 2C8C                           u3891 3048  
                         u4757 24EC                           u4677 2592                           u4597 2CB4  
                         u4767 24F6                           u4687 260A                           u4697 2614  
                         _TMR0 000FD6                           _TMR2 000FCC                           _TMR3 000FB2  
                         abs@a 0019                           _dbuf 0066                           _atoi 1DC2  
                         _main 3740                           _dtoa 13B0                           _isrH 0008  
                         _isrL 0018                           _prec 0053                           _nout 0060  
                         pad@i 001E                           pad@p 001B                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 0020                           fsr2l 000FD9  
                         btemp 0058                           prodh 000FF4                           prodl 000FF3  
                         start 00F0                ___fldiv@new_exp 0043   __end_of_appStateRecolectData 3122  
              __end_of_Lcd_Cmd 262C                __end_of_Lcd_Out 2AEE                   ___param_bank 000000  
                   _Lcd_Chr_CP 23B4           __size_of_appLCD_Init 0084                 ??_confirmacion 0011  
      __size_of_appCounterInit 000A                          ??_abs 001B                          ??_pad 001D  
      __size_of_appCounterStop 0004                 setServo@pulsos 000B                  ___fltol@sign1 0096  
              __end_of___aodiv 20DA                          ?_atoi 000E                          ?_main 0001  
                        ?_dtoa 0022                __end_of___aomod 23B4                          ?_isrH 0001  
                        ?_isrL 0001                __end_of_adcInit 3588                __end_of___fldiv 1044  
                        _ADRES 000FC3                          STR_10 083B                          STR_11 0839  
                        STR_12 082E                          STR_13 082E                          STR_14 0860  
                        STR_15 0860                __end_of___awmod 2EA8                __end_of___flmul 0CAA  
              __end_of___fltol 2850                __end_of___lldiv 2F4C                          i1l103 00E0  
                        i2l114 2FE4        __end_of_appStateInitial 34F4                          _RCREG 000FAE  
                 vfpfcnvrt@fmt 0048                          _SPBRG 000FAF                          _PORTB 000F81  
                        _TRISB 000F93                          _TXREG 000FAD                __end_of_appInit 35CE  
        appSubGetData@cantidad 00BC                          _datos 00C2                          _flags 0055  
                        _fputc 2AEE                          _fputs 3612                __end_of_isdigit 370A  
                        atoi@n 001B                          pad@fp 0017                          atoi@s 000E  
                        _width 0062                          _putch 385A                          dtoa@d 0024  
                        dtoa@i 0044                          dtoa@n 003C                          dtoa@p 0036  
                        dtoa@s 003A                          dtoa@w 0038                __end_of_teclado 1878  
              __end_of_isspace 34AA                          pclath 000FFA                          tablat 000FF5  
              __end_of_warning 3284                          ttemp5 0059                          ttemp6 005C  
                        ttemp7 0060                          status 000FD8                          wtemp8 0059  
              __end_of_sprintf 3458           __end_of_appTimerInit 37A2           __end_of_appTimerStop 3852  
             __end_of_Lcd_Init 2D3A                    isrH@counter 0057                __initialization 35CE  
                 __end_of_atoi 1F52                   __end_of_main 3774                   __end_of_dtoa 168E  
                 __end_of_isrH 2FF0                   __end_of_isrL 00F0                    isrL@bloqueo 0064  
                       ??_atoi 0010                         ??_main 0053                         ??_dtoa 002C  
                       ??_isrH 0001                         ??_isrL 0004       __size_of_appCounterStart 0004  
                __activetblptr 000002                 _appGetElements 31A6          __end_of_setServoAngle 2748  
                       ?_fputc 0007                         ?_fputs 0010          __size_of_appISRConfig 0008  
                       ?_putch 0001                         i1l4841 0042                         i1l4851 0082  
                       i1l4843 004A                         i1l4861 00CE                         i1l4845 005C  
                       i1l4853 008E                         i1l4837 0026                         i1l4855 00A6  
                       i1l4863 00D6                         i1l4847 006C                         i1l4839 0034  
                       i1l4865 00DE                         i1l4857 00B2                         i1l4849 007E  
                       i1l4859 00BE                         i2l4871 2F72                         i2l4881 2F9E  
                       i2l4873 2F74                         i2l4883 2FCC                         i2l4875 2F7A  
                       i2l4867 2F56                         i2l4885 2FD2                         i2l4869 2F64  
                       i2l4877 2F82                         i2l4887 2FD8                         i2l4879 2F90  
                       i2l4889 2FE0                      ??_Lcd_Cmd 0007                  vfpfcnvrt@done 009E  
                       _TMR0IE 007F95                         _TMR0IF 007F92                         _TMR3IE 007D01  
                       _TMR3IF 007D09                      ??_Lcd_Out 000D               __end_of___xxtofl 1C14  
                 vfprintf@cfmt 0050              ?_appSubGiveElemts 000F                    ?_Lcd_Chr_CP 0001  
                       _appADC 1C14                      ??___aodiv 0017                      ??___aomod 0017  
                       ___wmul 37CC                      ??_adcInit 0007                      ??___fldiv 003A  
                    ??___awmod 0053                      ??___flmul 0021                         _appBat 1878  
                    ??___fltol 004F                      ??___lldiv 000F               __end_of_readUART 2A22  
           ??_appSubGiveElemts 0011                         _memcmp 2FF0                         _memset 20DA  
                       clear_0 35F4                ___awmod@divisor 009A                      ??_appInit 0018  
       __end_of_appGetElements 3216                ___awmod@counter 009C                         pad@buf 0019  
                       _puerto 0086               __end_of_sendData 334C                         dtoa@fp 0022  
                       _strlen 370A               __end_of_setServo 37CC                   _appISRConfig 3842  
                       fputc@c 0007               ?_appStateInitial 0001                         fputs@c 0014  
                       fputs@i 0015                         fputs@s 0010                      ??_isdigit 0009  
                    ??_teclado 0009                   __mediumconst 0000                      ??_isspace 0009  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         _appStateRecolectData 308E              adcGetValue@PinADC 000A                         putch@c 0001  
        __end_of_appSubGetData 294E                      ??_warning 0011               __end_of_vfprintf 33AE  
                    ??_sprintf 0053           __end_of_confirmacion 353E                   ___xxtofl@arg 0015  
                 ___xxtofl@exp 0014             setServoAngle@angle 000A                   ___xxtofl@val 000B  
                   __accesstop 0060        __end_of__initialization 3604          __end_of_appTimerStart 3856  
                ___rparam_used 000001                     ___fltol@f1 004B                 __pcstackCOMRAM 0001  
                 __pidataBANK0 37F2                 _appCounterInit 3838                 _appCounterStop 384A  
                __end_of_fputc 2BB8                  __end_of_fputs 3656                  __end_of_putch 385C  
           __size_of_appElemts 0066                ?_appGetElements 0001                  ??_adcGetValue 0009  
        ?_appStateRecolectData 0001                      ?_Lcd_Init 0001              ??_appCounterStart 0007  
                      ??_fputc 000B                        ??_fputs 0014            __size_of_Lcd_Chr_CP 014E  
                      ??_putch 0007          __size_of_appTimerInit 002E                     __pbssBANK0 0060  
             setServoAngle@pin 0007          __size_of_appTimerStop 0004       __size_of_sendinformation 00BC  
       __end_of_appCounterInit 3842             fp__sendinformation 000E         __end_of_appCounterStop 384E  
                      ?_appADC 00BA                        ?___wmul 0007                        ?_appBat 00BA  
                      ?_memcmp 0007                        ?_memset 0007                     appADC@data 00BA  
           __size_of_uart_Init 0058                        ?_strlen 0007             __size_of_servoInit 0018  
                 _appTimerInit 3774                      ?___xxtofl 000B                   _appTimerStop 384E  
           __size_of_vfpfcnvrt 036C                     ??_Lcd_Init 000A            __end_of_adcGetValue 36D2  
                    ?_readUART 0001              __end_of_appElemts 32EA                        _Lcd_Cmd 2502  
                  setServo@pin 000C                        _Lcd_Out 2A22        appSubGetData@data_Inout 00BA  
                    ?_sendData 000B                  ??_appLCD_Init 0011                        __Hparam 0000  
                    ?_setServo 000B                        __Lparam 0000                ?_appCounterInit 0007  
              ?_appCounterStop 0001                        ___aodiv 1F52                        ___aomod 2250  
                      _adcInit 353E                        ___fldiv 0CAA                        ___awmod 2DF6  
                      ___flmul 0880                        ___fltol 2748                __size_of_appADC 01AE  
                      ___lldiv 2EA8                __size_of___wmul 0026                __size_of_appBat 01E8  
                    ?_vfprintf 00A2                     appBat@data 00BA                   __psmallconst 0800  
                      __pcinit 35CE                __size_of_memcmp 009E                __size_of_memset 0176  
                      _appInit 3588                        __ramtop 0800                        __ptext0 3740  
                      __ptext1 2D3A                        __ptext2 34AA                        __ptext3 294E  
                      __ptext4 31A6                        __ptext5 308E                        __ptext6 34F4  
                      __ptext7 3216                        __ptext8 32EA                        __ptext9 2FF0  
                    _T0CONbits 000FD5                __size_of_strlen 0036                      _T2CONbits 000FCA  
                 __size_of_abs 0040                   __size_of_pad 00C2         ??_appStateRecolectData 0053  
                      _isdigit 36D2                     ??___xxtofl 000F                      _T3CONbits 000FB1  
             ___awmod@dividend 0098          __size_of_confirmacion 004A                        _teclado 168E  
                      _isspace 3458                        _warning 3216                        atoi@neg 0014  
                      _sprintf 3406                 __pintcode_body 2F4C           end_of_initialization 3604  
                      memcmp@l 000E                        memcmp@n 000B                     ??_readUART 0013  
                      memcmp@r 0010                        fputc@fp 0009                        memset@c 0009  
                      memset@k 000F                        memset@n 000B                        memset@s 0011  
                __Lmediumconst 0000                        int_func 2F4C                        fputs@fp 0012  
            __end_of_uart_Init 3406                     ??_sendData 000D                ___lldiv@divisor 000B  
            __end_of_servoInit 3824                     ??_setServo 000D                ___lldiv@counter 0013  
         appCounterInit@reload 0007              __end_of_vfpfcnvrt 13B0                      Lcd_Init@i 000B  
                    _RCSTAbits 000FAB                   ??_Lcd_Chr_CP 0007                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     ??_vfprintf 0050                  appElemts@data 00BA  
                 _confirmacion 34F4            __end_of_appLCD_Init 31A6                        strlen@a 0009  
                      strlen@s 0007              ??_sendinformation 0053                      _PORTAbits 000F80  
                    _PORTBbits 000F81                    _adcGetValue 3696                  ___xxtofl@sign 0013  
                    _TRISAbits 000F92                      _TRISCbits 000F94                      _TRISDbits 000F95  
    __size_of_appSubGiveElemts 0014                      _TRISEbits 000F96                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E             __end_of_Lcd_Chr_CP 2502                     fp__warning 000E  
                  ___flmul@grs 0026                      _TXSTAbits 000FAC         __size_of_setServoAngle 011C  
                setServo@angle 000D               ??_appGetElements 00BF                 __end_of_appADC 1DC2  
                  vfpfcnvrt@ap 004A                    vfpfcnvrt@fp 0046                    vfpfcnvrt@ll 0096  
               __end_of___wmul 37F2                 __end_of_appBat 1A60                    _BAUDCONbits 000FB8  
              _appCounterStart 3856                 __end_of_memcmp 308E                 __end_of_memset 2250  
               __end_of_strlen 3740            start_initialization 35CE                    __end_of_abs 3696  
                  __end_of_pad 2C7A                  Lcd_Out@buffer 000B       __size_of_appStateInitial 004A  
            __size_of_Lcd_Init 00C0             fp__appStateInitial 000E                    _appLCD_Init 3122  
                  vfprintf@fmt 00A4                       ??_appADC 0053                       ??___wmul 000B  
                     ??_appBat 00BC                    _appBat$2656 00BE         __size_of_appSubGetData 00FE  
                  __pdataBANK0 00C2                       ??_memcmp 000D                       ??_memset 000D  
                   memset@dest 0007                       ??_strlen 0009                   sendData@data 000B  
                    ___fldiv@a 0036                      ___fldiv@b 0032         __size_of_appTimerStart 0004  
                    ___flmul@a 001D                      ___flmul@b 0019                    __pbssCOMRAM 0053  
                __pcstackBANK0 0096               ___aodiv@dividend 0007                  _setServoAngle 262C  
            __size_of___xxtofl 01B4        fp__appStateRecolectData 000E                       ?_Lcd_Cmd 0001  
             ??_appCounterInit 0009                       ?_Lcd_Out 000A               ??_appCounterStop 0007  
                    _atoi$2376 0016                      _atoi$2377 001A                      _atoi$2378 0018  
            __size_of_readUART 00D4                      _appElemts 3284                      _dtoa$2341 0034  
      __end_of_appCounterStart 385A              __size_of_sendData 0062                      __pintcode 0008  
                     ?___aodiv 0007                       ?___aomod 0007              __size_of_setServo 002A  
                     ?_adcInit 0001                       ?___fldiv 0032               ___aodiv@quotient 0019  
                     ?___awmod 0098                       ?___flmul 0019                       ?___fltol 004B  
                     ?___lldiv 0007                    __pintcodelo 0018                       ?_appInit 0001  
            __size_of_vfprintf 0062                    __smallconst 0800                       ?_isdigit 0007  
                 teclado@valor 0007                       ?_teclado 0007                 ?_setServoAngle 0007  
                     ?_isspace 0007               _appSubGiveElemts 3824                       ?_warning 0001  
                     ?_sprintf 00A8                  _appSubGetData 2850                 __size_of_fputc 00CA  
               __size_of_fputs 0044                 __size_of_putch 0002                 ___wmul@product 000B  
                     _LATAbits 000F89                       _LATCbits 000F8B                       _LATDbits 000F8C  
                     _LATEbits 000F8D                  _appTimerStart 3852                       _IPR1bits 000F9F  
                     _IPR2bits 000FA2                       _PIE1bits 000F9D                       _PIE2bits 000FA0  
              _sendinformation 2D3A              ??_appStateInitial 000F                     ?_appElemts 00BA  
                     i1u440_20 006C                       i1u440_21 0068                       i1u441_20 007E  
                     i1u441_21 007A                       i1u442_20 00A6                       i1u442_21 00A2  
                     i1u443_20 00CE                       i1u443_21 00CA                       i1u437_20 0034  
                     i1u437_21 0030                       i1u438_20 0042                       i1u438_21 003E  
                     i1u439_20 005C                       i1u439_21 0058                       _PIR1bits 000F9E  
                     _PIR2bits 000FA1                       i2u444_40 2F64                       i2u444_41 2F60  
                     i2u445_40 2F72                       i2u445_41 2F6E                       i2u446_40 2F90  
                     i2u446_41 2F8C                       i2u447_40 2F9E                       i2u447_41 2F9A  
                     i2u448_40 2FCC                       i2u448_41 2FC8                       _GO_nDONE 007E11  
                    _uart_Init 33AE                       _RCONbits 000FD0                       Lcd_Out@x 000A  
                     Lcd_Out@y 000F                      _servoInit 380C                      _vfpfcnvrt 1044  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0007                  ?_appISRConfig 0001                   ?_adcGetValue 0007  
__size_of_appStateRecolectData 0094                   _isspace$2394 000D                       _Lcd_Init 2C7A  
               ?_appSubGetData 00BA                    _INTCON2bits 000FF1                      copy_data0 35E2  
               ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A               __size_of_Lcd_Out 00CC  
                     __Hrparam 0000                  uart_Init@baud 0014                     vfprintf@ap 00A6  
                     __Lrparam 0000                     vfprintf@fp 00A2               ?_appCounterStart 0001  
                   ?_uart_Init 0014                     ?_servoInit 0001               __size_of___aodiv 0188  
             __size_of___aomod 0164               __size_of_adcInit 004A               __size_of___fldiv 039A  
             __size_of___awmod 00B2               __size_of___flmul 042A               __size_of___fltol 0108  
                appADC@lm35val 00BC               __size_of___lldiv 00A4                     ?_vfpfcnvrt 0046  
              ___aodiv@divisor 000F                 ??_appISRConfig 0007                ___aodiv@counter 0017  
             __size_of_appInit 0046                ??_setServoAngle 0008                     sprintf@fmt 00AA  
                    sendData@i 000F                       ___xxtofl 1A60               __size_of_isdigit 0038  
               Lcd_Chr_CP@data 0009               __size_of_teclado 01EA               __size_of_isspace 0052  
                     __ptext10 3284                       __ptext11 384A                       __ptext20 3588  
                     __ptext12 1878                       __ptext21 33AE                       __ptext13 1C14  
                     __ptext30 384E                       __ptext22 2EA8                       __ptext14 3696  
                     __ptext31 3852                       __ptext23 380C                       __ptext15 1A60  
                     __ptext40 1044                       __ptext32 3824                       __ptext24 3774  
                     __ptext16 2748                       __ptext41 13B0                       __ptext33 37A2  
                     __ptext25 3122                       __ptext17 0880                       __ptext50 1DC2  
                     __ptext42 2BB8                       __ptext34 262C                       __ptext26 2C7A  
                     __ptext18 0CAA                       __ptext51 3458                       __ptext43 370A  
                     __ptext35 3856                       __ptext27 3842                       __ptext19 2DF6  
                     __ptext52 36D2                       __ptext44 3612                       __ptext36 2850  
                     __ptext28 3838                       __ptext53 37CC                       __ptext45 2AEE  
                     __ptext37 168E                       __ptext29 353E                       __ptext54 20DA  
                     __ptext46 385A                       __ptext38 3406                       __ptext55 2A22  
                     __ptext47 3656                       __ptext39 334C                       __ptext56 2502  
                     __ptext48 2250                       __ptext57 23B4                       __ptext49 1F52  
             __size_of_warning 006E        __end_of_sendinformation 2DF6               __size_of_sprintf 0052  
                    setServo@i 000E                       _readUART 294E                    Lcd_Cmd@data 0009  
                __size_of_atoi 0190                  __size_of_main 0034                  __size_of_dtoa 02DE  
                __size_of_isrH 2FE8                  __size_of_isrL 00D8                       _sendData 32EA  
                  ??_appElemts 0053                   ?_appLCD_Init 0001                       _setServo 37A2  
                     int$flags 0058                       _vfprintf 334C               ___aomod@dividend 0007  
           appSubGetData@inout 00BE                  ?_appTimerInit 0001                    Lcd_Out@data 0010  
               _vfpfcnvrt$2356 00A0                  ?_appTimerStop 0001                     _INTCONbits 000FF2  
              ??_appSubGetData 0053                       memcmp@vl 0007                       memcmp@vr 0009  
                     isdigit@c 0007                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 00B2                ??_appTimerStart 0007                       isspace@c 0007  
             ___lldiv@dividend 0007           appSubGiveElemts@data 000F                fp__confirmacion 000E  
     __end_of_appSubGiveElemts 3838                    ??_uart_Init 0018                    ??_servoInit 0007  
              ___aomod@divisor 000F                    ??_vfpfcnvrt 004C                ___aomod@counter 0017  
               ??_appTimerInit 0007                       sprintf@f 00B4                       sprintf@s 00A8  
               ??_appTimerStop 0007               ___lldiv@quotient 000F        __size_of_appGetElements 0070  
            fp__appGetElements 000E           __size_of_adcGetValue 003C                _appStateInitial 34AA  
             ?_sendinformation 0001                   ___aodiv@sign 0018           __end_of_appISRConfig 384A  
                 ___aomod@sign 0018  
