

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jun 03 17:06:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 12/02/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  0037F2                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _datos
   120  0037F2  00                 	db	0
   121  0037F3  0000               	dw	0
   122  0037F5  08                 	db	8
   123  0037F6  0000               	dw	0
   124  0037F8  00                 	db	0
   125  0037F9  00                 	db	0
   126  0037FA  00                 	db	0
   127  0037FB  00                 	db	0
   128  0037FC  00                 	db	0
   129  0037FD  00                 	db	0
   130  0037FE  00                 	db	0
   131  0037FF  00                 	db	0
   132  003800  00                 	db	0
   133  003801  00                 	db	0
   134  003802  00                 	db	0
   135  003803  00                 	db	0
   136  003804  00                 	db	0
   137  003805  00                 	db	0
   138  003806  00                 	db	0
   139  003807  00                 	db	0
   140  003808  00                 	db	0
   141  003809  F4                 	db	low _confirmacion
   142  00380A  34                 	db	high _confirmacion
   143  0000                     _TMR0	set	4054
   144  0000                     _TMR3	set	4018
   145  0000                     _ADRES	set	4035
   146  0000                     _TXREG	set	4013
   147  0000                     _IPR1bits	set	3999
   148  0000                     _PIE1bits	set	3997
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _TXSTAbits	set	4012
   151  0000                     _SPBRG	set	4015
   152  0000                     _BAUDCONbits	set	4024
   153  0000                     _PORTAbits	set	3968
   154  0000                     _LATAbits	set	3977
   155  0000                     _RCONbits	set	4048
   156  0000                     _PIE2bits	set	4000
   157  0000                     _IPR2bits	set	4002
   158  0000                     _PIR2bits	set	4001
   159  0000                     _INTCONbits	set	4082
   160  0000                     _T0CONbits	set	4053
   161  0000                     _T3CONbits	set	4017
   162  0000                     _LATEbits	set	3981
   163  0000                     _PIR1bits	set	3998
   164  0000                     _PR2	set	4043
   165  0000                     _TMR2	set	4044
   166  0000                     _TRISEbits	set	3990
   167  0000                     _T2CONbits	set	4042
   168  0000                     _LATDbits	set	3980
   169  0000                     _TRISDbits	set	3989
   170  0000                     _PORTBbits	set	3969
   171  0000                     _PORTB	set	3969
   172  0000                     _RCREG	set	4014
   173  0000                     _TRISAbits	set	3986
   174  0000                     _INTCON2bits	set	4081
   175  0000                     _TRISB	set	3987
   176  0000                     _LATCbits	set	3979
   177  0000                     _TRISCbits	set	3988
   178  0000                     _ADCON0bits	set	4034
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON1bits	set	4033
   181  0000                     _RCIE	set	31981
   182  0000                     _RCIF	set	31989
   183  0000                     _TMR0IF	set	32658
   184  0000                     _TMR0IE	set	32661
   185  0000                     _TMR3IF	set	32009
   186  0000                     _TMR3IE	set	32001
   187  0000                     _GO_nDONE	set	32273
   188                           
   189                           	psect	smallconst
   190  000800                     __psmallconst:
   191                           	callstack 0
   192  000800  00                 	db	0
   193  000801                     STR_9:
   194  000801  52                 	db	82	;'R'
   195  000802  65                 	db	101	;'e'
   196  000803  63                 	db	99	;'c'
   197  000804  61                 	db	97	;'a'
   198  000805  72                 	db	114	;'r'
   199  000806  67                 	db	103	;'g'
   200  000807  61                 	db	97	;'a'
   201  000808  20                 	db	32
   202  000809  50                 	db	80	;'P'
   203  00080A  6F                 	db	111	;'o'
   204  00080B  72                 	db	114	;'r'
   205  00080C  66                 	db	102	;'f'
   206  00080D  61                 	db	97	;'a'
   207  00080E  76                 	db	118	;'v'
   208  00080F  6F                 	db	111	;'o'
   209  000810  72                 	db	114	;'r'
   210  000811  00                 	db	0
   211  000812                     STR_6:
   212  000812  43                 	db	67	;'C'
   213  000813  20                 	db	32
   214  000814  64                 	db	100	;'d'
   215  000815  65                 	db	101	;'e'
   216  000816  20                 	db	32
   217  000817  76                 	db	118	;'v'
   218  000818  61                 	db	97	;'a'
   219  000819  63                 	db	99	;'c'
   220  00081A  75                 	db	117	;'u'
   221  00081B  6E                 	db	110	;'n'
   222  00081C  61                 	db	97	;'a'
   223  00081D  73                 	db	115	;'s'
   224  00081E  3A                 	db	58	;':'
   225  00081F  00                 	db	0
   226  000820                     STR_1:
   227  000820  54                 	db	84	;'T'
   228  000821  3A                 	db	58	;':'
   229  000822  25                 	db	37
   230  000823  30                 	db	48	;'0'
   231  000824  32                 	db	50	;'2'
   232  000825  64                 	db	100	;'d'
   233  000826  2E                 	db	46
   234  000827  25                 	db	37
   235  000828  30                 	db	48	;'0'
   236  000829  32                 	db	50	;'2'
   237  00082A  64                 	db	100	;'d'
   238  00082B  20                 	db	32
   239  00082C  43                 	db	67	;'C'
   240  00082D  00                 	db	0
   241  00082E                     STR_12:
   242  00082E  49                 	db	73	;'I'
   243  00082F  6E                 	db	110	;'n'
   244  000830  66                 	db	102	;'f'
   245  000831  6F                 	db	111	;'o'
   246  000832  72                 	db	114	;'r'
   247  000833  6D                 	db	109	;'m'
   248  000834  61                 	db	97	;'a'
   249  000835  63                 	db	99	;'c'
   250  000836  69                 	db	105	;'i'
   251  000837  6F                 	db	111	;'o'
   252  000838  6E                 	db	110	;'n'
   253  000839  40                 	db	64	;'@'
   254  00083A  00                 	db	0
   255  00083B                     STR_10:
   256  00083B  43                 	db	67	;'C'
   257  00083C  6F                 	db	111	;'o'
   258  00083D  6E                 	db	110	;'n'
   259  00083E  66                 	db	102	;'f'
   260  00083F  69                 	db	105	;'i'
   261  000840  72                 	db	114	;'r'
   262  000841  6D                 	db	109	;'m'
   263  000842  61                 	db	97	;'a'
   264  000843  63                 	db	99	;'c'
   265  000844  69                 	db	105	;'i'
   266  000845  6F                 	db	111	;'o'
   267  000846  6E                 	db	110	;'n'
   268  000847  00                 	db	0
   269  000848                     STR_8:
   270  000848  53                 	db	83	;'S'
   271  000849  69                 	db	105	;'i'
   272  00084A  6E                 	db	110	;'n'
   273  00084B  20                 	db	32
   274  00084C  76                 	db	118	;'v'
   275  00084D  61                 	db	97	;'a'
   276  00084E  63                 	db	99	;'c'
   277  00084F  75                 	db	117	;'u'
   278  000850  6E                 	db	110	;'n'
   279  000851  61                 	db	97	;'a'
   280  000852  73                 	db	115	;'s'
   281  000853  00                 	db	0
   282  000854                     STR_3:
   283  000854  42                 	db	66	;'B'
   284  000855  69                 	db	105	;'i'
   285  000856  65                 	db	101	;'e'
   286  000857  6E                 	db	110	;'n'
   287  000858  76                 	db	118	;'v'
   288  000859  65                 	db	101	;'e'
   289  00085A  6E                 	db	110	;'n'
   290  00085B  69                 	db	105	;'i'
   291  00085C  64                 	db	100	;'d'
   292  00085D  6F                 	db	111	;'o'
   293  00085E  73                 	db	115	;'s'
   294  00085F  00                 	db	0
   295  000860                     STR_14:
   296  000860  41                 	db	65	;'A'
   297  000861  63                 	db	99	;'c'
   298  000862  74                 	db	116	;'t'
   299  000863  69                 	db	105	;'i'
   300  000864  76                 	db	118	;'v'
   301  000865  61                 	db	97	;'a'
   302  000866  64                 	db	100	;'d'
   303  000867  6F                 	db	111	;'o'
   304  000868  40                 	db	64	;'@'
   305  000869  00                 	db	0
   306  00086A                     STR_2:
   307  00086A  42                 	db	66	;'B'
   308  00086B  61                 	db	97	;'a'
   309  00086C  74                 	db	116	;'t'
   310  00086D  3A                 	db	58	;':'
   311  00086E  25                 	db	37
   312  00086F  30                 	db	48	;'0'
   313  000870  32                 	db	50	;'2'
   314  000871  64                 	db	100	;'d'
   315  000872  00                 	db	0
   316  000873                     STR_4:
   317  000873  53                 	db	83	;'S'
   318  000874  49                 	db	73	;'I'
   319  000875  43                 	db	67	;'C'
   320  000876  43                 	db	67	;'C'
   321  000877  56                 	db	86	;'V'
   322  000878  00                 	db	0
   323  000879                     STR_5:
   324  000879  23                 	db	35
   325  00087A  3A                 	db	58	;':'
   326  00087B  25                 	db	37
   327  00087C  64                 	db	100	;'d'
   328  00087D  00                 	db	0
   329  00087E  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334  0035CE                     __pcinit:
   335                           	callstack 0
   336  0035CE                     start_initialization:
   337                           	callstack 0
   338  0035CE                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK0 (25 bytes)
   342                           ; load TBLPTR registers with __pidataBANK0
   343  0035CE  0EF2               	movlw	low __pidataBANK0
   344  0035D0  6EF6               	movwf	tblptrl,c
   345  0035D2  0E37               	movlw	high __pidataBANK0
   346  0035D4  6EF7               	movwf	tblptrh,c
   347  0035D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   348  0035D8  6EF8               	movwf	tblptru,c
   349  0035DA  EE00  F0C0         	lfsr	0,__pdataBANK0
   350  0035DE  EE10 F019          	lfsr	1,25
   351  0035E2                     copy_data0:
   352  0035E2  0009               	tblrd		*+
   353  0035E4  CFF5 FFEE          	movff	tablat,postinc0
   354  0035E8  50E5               	movf	postdec1,w,c
   355  0035EA  50E1               	movf	fsr1l,w,c
   356  0035EC  E1FA               	bnz	copy_data0
   357                           
   358                           ; Clear objects allocated to BANK0 (52 bytes)
   359  0035EE  EE00  F060         	lfsr	0,__pbssBANK0
   360  0035F2  0E34               	movlw	52
   361  0035F4                     clear_0:
   362  0035F4  6AEE               	clrf	postinc0,c
   363  0035F6  06E8               	decf	wreg,f,c
   364  0035F8  E1FD               	bnz	clear_0
   365                           
   366                           ; Clear objects allocated to COMRAM (5 bytes)
   367  0035FA  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   368  0035FC  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   369  0035FE  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   370  003600  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   371  003602  6A53               	clrf	__pbssCOMRAM& (0+255),c
   372  003604                     end_of_initialization:
   373                           	callstack 0
   374  003604                     __end_of__initialization:
   375                           	callstack 0
   376  003604  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   377  003606  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   378  003608  0E00               	movlw	low (__Lmediumconst shr (0+16))
   379  00360A  6EF8               	movwf	tblptru,c
   380  00360C  0100               	movlb	0
   381  00360E  EFA0  F01B         	goto	_main	;jump to C main() function
   382                           
   383                           	psect	bssCOMRAM
   384  000053                     __pbssCOMRAM:
   385                           	callstack 0
   386  000053                     _prec:
   387                           	callstack 0
   388  000053                     	ds	2
   389  000055                     _flags:
   390                           	callstack 0
   391  000055                     	ds	2
   392  000057                     isrH@counter:
   393                           	callstack 0
   394  000057                     	ds	1
   395                           
   396                           	psect	bssBANK0
   397  000060                     __pbssBANK0:
   398                           	callstack 0
   399  000060                     _nout:
   400                           	callstack 0
   401  000060                     	ds	2
   402  000062                     _width:
   403                           	callstack 0
   404  000062                     	ds	2
   405  000064                     _dbuf:
   406                           	callstack 0
   407  000064                     	ds	32
   408  000084                     _puerto:
   409                           	callstack 0
   410  000084                     	ds	16
   411                           
   412                           	psect	dataBANK0
   413  0000C0                     __pdataBANK0:
   414                           	callstack 0
   415  0000C0                     _datos:
   416                           	callstack 0
   417  0000C0                     	ds	25
   418                           
   419                           	psect	cstackBANK0
   420  000094                     __pcstackBANK0:
   421                           	callstack 0
   422  000094                     ___fltol@sign1:
   423                           	callstack 0
   424  000094                     vfpfcnvrt@ll:
   425                           	callstack 0
   426                           
   427                           ; 8 bytes @ 0x0
   428  000094                     	ds	1
   429  000095                     ___fltol@exp1:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x1
   433  000095                     	ds	1
   434  000096                     ?___awmod:
   435                           	callstack 0
   436  000096                     ___awmod@dividend:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2
   440  000096                     	ds	2
   441  000098                     ___awmod@divisor:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x4
   445  000098                     	ds	2
   446  00009A                     ___awmod@counter:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x6
   450  00009A                     	ds	1
   451  00009B                     ___awmod@sign:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x7
   455  00009B                     	ds	1
   456  00009C                     vfpfcnvrt@done:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x8
   460  00009C                     	ds	2
   461  00009E                     _vfpfcnvrt$2355:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xA
   465  00009E                     	ds	2
   466  0000A0                     ?_vfprintf:
   467                           	callstack 0
   468  0000A0                     vfprintf@fp:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xC
   472  0000A0                     	ds	2
   473  0000A2                     vfprintf@fmt:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xE
   477  0000A2                     	ds	2
   478  0000A4                     vfprintf@ap:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x10
   482  0000A4                     	ds	2
   483  0000A6                     ?_sprintf:
   484                           	callstack 0
   485  0000A6                     sprintf@s:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x12
   489  0000A6                     	ds	2
   490  0000A8                     sprintf@fmt:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x14
   494  0000A8                     	ds	8
   495  0000B0                     sprintf@ap:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1C
   499  0000B0                     	ds	2
   500  0000B2                     sprintf@f:
   501                           	callstack 0
   502                           
   503                           ; 6 bytes @ 0x1E
   504  0000B2                     	ds	6
   505  0000B8                     appADC@data:
   506                           	callstack 0
   507  0000B8                     appBat@data:
   508                           	callstack 0
   509  0000B8                     appElemts@data:
   510                           	callstack 0
   511  0000B8                     appSubGetData@data_Inout:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x24
   515  0000B8                     	ds	2
   516  0000BA                     ??_appBat:
   517  0000BA                     appSubGetData@cantidad:
   518                           	callstack 0
   519  0000BA                     appADC@lm35val:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x26
   523  0000BA                     	ds	2
   524  0000BC                     appSubGetData@inout:
   525                           	callstack 0
   526  0000BC                     _appBat$2655:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x28
   530  0000BC                     	ds	1
   531  0000BD                     ??_appGetElements:
   532                           
   533                           ; 1 bytes @ 0x29
   534  0000BD                     	ds	3
   535                           
   536                           	psect	cstackCOMRAM
   537  000001                     __pcstackCOMRAM:
   538                           	callstack 0
   539  000001                     ??_isrH:
   540  000001                     
   541                           ; 1 bytes @ 0x0
   542  000001                     	ds	3
   543  000004                     ??_isrL:
   544                           
   545                           ; 1 bytes @ 0x3
   546  000004                     	ds	3
   547  000007                     ??_Lcd_Cmd:
   548  000007                     ??_Lcd_Chr_CP:
   549  000007                     ??_adcInit:
   550  000007                     ?_memcmp:
   551                           	callstack 0
   552  000007                     ?_strlen:
   553                           	callstack 0
   554  000007                     ?_isdigit:
   555                           	callstack 0
   556  000007                     ?_isspace:
   557                           	callstack 0
   558  000007                     ?_adcGetValue:
   559                           	callstack 0
   560  000007                     ?___wmul:
   561                           	callstack 0
   562  000007                     ?___lldiv:
   563                           	callstack 0
   564  000007                     ?___aodiv:
   565                           	callstack 0
   566  000007                     ?___aomod:
   567                           	callstack 0
   568  000007                     setServoAngle@pin:
   569                           	callstack 0
   570  000007                     teclado@valor:
   571                           	callstack 0
   572  000007                     appCounterInit@reload:
   573                           	callstack 0
   574  000007                     ___wmul@multiplier:
   575                           	callstack 0
   576  000007                     memcmp@vl:
   577                           	callstack 0
   578  000007                     memset@dest:
   579                           	callstack 0
   580  000007                     isdigit@c:
   581                           	callstack 0
   582  000007                     isspace@c:
   583                           	callstack 0
   584  000007                     fputc@c:
   585                           	callstack 0
   586  000007                     strlen@s:
   587                           	callstack 0
   588  000007                     ___lldiv@dividend:
   589                           	callstack 0
   590  000007                     ___aodiv@dividend:
   591                           	callstack 0
   592  000007                     ___aomod@dividend:
   593                           	callstack 0
   594                           
   595                           ; 8 bytes @ 0x6
   596  000007                     	ds	1
   597  000008                     ??_setServoAngle:
   598  000008                     adcInit@ADC_PINs:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x7
   602  000008                     	ds	1
   603  000009                     ??_isdigit:
   604  000009                     ??_isspace:
   605  000009                     ??_adcGetValue:
   606  000009                     Lcd_Chr_CP@data:
   607                           	callstack 0
   608  000009                     Lcd_Cmd@data:
   609                           	callstack 0
   610  000009                     ___wmul@multiplicand:
   611                           	callstack 0
   612  000009                     memcmp@vr:
   613                           	callstack 0
   614  000009                     memset@c:
   615                           	callstack 0
   616  000009                     fputc@fp:
   617                           	callstack 0
   618  000009                     strlen@a:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x8
   622  000009                     	ds	1
   623  00000A                     ??_Lcd_Init:
   624  00000A                     adcGetValue@PinADC:
   625                           	callstack 0
   626  00000A                     Lcd_Out@x:
   627                           	callstack 0
   628  00000A                     setServoAngle@angle:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x9
   632  00000A                     	ds	1
   633  00000B                     ??_fputc:
   634  00000B                     ?___xxtofl:
   635                           	callstack 0
   636  00000B                     Lcd_Init@i:
   637                           	callstack 0
   638  00000B                     setServo@pulsos:
   639                           	callstack 0
   640  00000B                     Lcd_Out@buffer:
   641                           	callstack 0
   642  00000B                     sendData@data:
   643                           	callstack 0
   644  00000B                     ___wmul@product:
   645                           	callstack 0
   646  00000B                     memcmp@n:
   647                           	callstack 0
   648  00000B                     memset@n:
   649                           	callstack 0
   650  00000B                     ___lldiv@divisor:
   651                           	callstack 0
   652  00000B                     ___xxtofl@val:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0xA
   656  00000B                     	ds	1
   657  00000C                     setServo@pin:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0xB
   661  00000C                     	ds	1
   662  00000D                     ??_memset:
   663  00000D                     ??_Lcd_Out:
   664  00000D                     ??_sendData:
   665  00000D                     ??_memcmp:
   666  00000D                     setServo@angle:
   667                           	callstack 0
   668  00000D                     _isspace$2393:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xC
   672  00000D                     	ds	1
   673  00000E                     ?_atoi:
   674                           	callstack 0
   675  00000E                     setServo@i:
   676                           	callstack 0
   677  00000E                     memcmp@l:
   678                           	callstack 0
   679  00000E                     atoi@s:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xD
   683  00000E                     	ds	1
   684  00000F                     ??___xxtofl:
   685  00000F                     Lcd_Out@y:
   686                           	callstack 0
   687  00000F                     sendData@i:
   688                           	callstack 0
   689  00000F                     appSubGiveElemts@data:
   690                           	callstack 0
   691  00000F                     memset@k:
   692                           	callstack 0
   693  00000F                     ___lldiv@quotient:
   694                           	callstack 0
   695  00000F                     ___aodiv@divisor:
   696                           	callstack 0
   697  00000F                     ___aomod@divisor:
   698                           	callstack 0
   699                           
   700                           ; 8 bytes @ 0xE
   701  00000F                     	ds	1
   702  000010                     ??_atoi:
   703  000010                     Lcd_Out@data:
   704                           	callstack 0
   705  000010                     memcmp@r:
   706                           	callstack 0
   707  000010                     fputs@s:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0xF
   711  000010                     	ds	1
   712  000011                     ??_confirmacion:
   713  000011                     ??_warning:
   714  000011                     ??_appLCD_Init:
   715  000011                     memset@s:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x10
   719  000011                     	ds	1
   720  000012                     fputs@fp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x11
   724  000012                     	ds	1
   725  000013                     ??_readUART:
   726  000013                     ___lldiv@counter:
   727                           	callstack 0
   728  000013                     ___xxtofl@sign:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x12
   732  000013                     	ds	1
   733  000014                     ___xxtofl@exp:
   734                           	callstack 0
   735  000014                     fputs@c:
   736                           	callstack 0
   737  000014                     atoi@neg:
   738                           	callstack 0
   739  000014                     uart_Init@baud:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x13
   743  000014                     	ds	1
   744  000015                     fputs@i:
   745                           	callstack 0
   746  000015                     ___xxtofl@arg:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x14
   750  000015                     	ds	1
   751  000016                     _atoi$2375:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x15
   755  000016                     	ds	1
   756  000017                     ?_pad:
   757                           	callstack 0
   758  000017                     ___aodiv@counter:
   759                           	callstack 0
   760  000017                     ___aomod@counter:
   761                           	callstack 0
   762  000017                     pad@fp:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x16
   766  000017                     	ds	1
   767  000018                     ___aodiv@sign:
   768                           	callstack 0
   769  000018                     ___aomod@sign:
   770                           	callstack 0
   771  000018                     _atoi$2377:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x17
   775  000018                     	ds	1
   776  000019                     ?_abs:
   777                           	callstack 0
   778  000019                     ?___flmul:
   779                           	callstack 0
   780  000019                     pad@buf:
   781                           	callstack 0
   782  000019                     abs@a:
   783                           	callstack 0
   784  000019                     ___flmul@b:
   785                           	callstack 0
   786  000019                     ___aodiv@quotient:
   787                           	callstack 0
   788                           
   789                           ; 8 bytes @ 0x18
   790  000019                     	ds	1
   791  00001A                     _atoi$2376:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x19
   795  00001A                     	ds	1
   796  00001B                     ??_abs:
   797  00001B                     pad@p:
   798                           	callstack 0
   799  00001B                     atoi@n:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x1A
   803  00001B                     	ds	2
   804  00001D                     ??_pad:
   805  00001D                     ___flmul@a:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x1C
   809  00001D                     	ds	1
   810  00001E                     pad@i:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x1D
   814  00001E                     	ds	2
   815  000020                     pad@w:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x1F
   819  000020                     	ds	1
   820  000021                     ??___flmul:
   821                           
   822                           ; 1 bytes @ 0x20
   823  000021                     	ds	1
   824  000022                     ?_dtoa:
   825                           	callstack 0
   826  000022                     dtoa@fp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x21
   830  000022                     	ds	2
   831  000024                     dtoa@d:
   832                           	callstack 0
   833                           
   834                           ; 8 bytes @ 0x23
   835  000024                     	ds	1
   836  000025                     ___flmul@sign:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x24
   840  000025                     	ds	1
   841  000026                     ___flmul@grs:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x25
   845  000026                     	ds	4
   846  00002A                     ___flmul@aexp:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x29
   850  00002A                     	ds	1
   851  00002B                     ___flmul@bexp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x2A
   855  00002B                     	ds	1
   856  00002C                     ??_dtoa:
   857  00002C                     ___flmul@prod:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x2B
   861  00002C                     	ds	4
   862  000030                     ___flmul@temp:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x2F
   866  000030                     	ds	2
   867  000032                     ?___fldiv:
   868                           	callstack 0
   869  000032                     ___fldiv@b:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x31
   873  000032                     	ds	2
   874  000034                     _dtoa$2340:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x33
   878  000034                     	ds	2
   879  000036                     dtoa@p:
   880                           	callstack 0
   881  000036                     ___fldiv@a:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x35
   885  000036                     	ds	2
   886  000038                     dtoa@w:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x37
   890  000038                     	ds	2
   891  00003A                     ??___fldiv:
   892  00003A                     dtoa@s:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x39
   896  00003A                     	ds	2
   897  00003C                     dtoa@n:
   898                           	callstack 0
   899                           
   900                           ; 8 bytes @ 0x3B
   901  00003C                     	ds	2
   902  00003E                     ___fldiv@rem:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x3D
   906  00003E                     	ds	4
   907  000042                     ___fldiv@sign:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x41
   911  000042                     	ds	1
   912  000043                     ___fldiv@new_exp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x42
   916  000043                     	ds	1
   917  000044                     dtoa@i:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x43
   921  000044                     	ds	1
   922  000045                     ___fldiv@grs:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x44
   926  000045                     	ds	1
   927  000046                     ?_vfpfcnvrt:
   928                           	callstack 0
   929  000046                     vfpfcnvrt@fp:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x45
   933  000046                     	ds	2
   934  000048                     vfpfcnvrt@fmt:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x47
   938  000048                     	ds	1
   939  000049                     ___fldiv@bexp:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x48
   943  000049                     	ds	1
   944  00004A                     ___fldiv@aexp:
   945                           	callstack 0
   946  00004A                     vfpfcnvrt@ap:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x49
   950  00004A                     	ds	1
   951  00004B                     ?___fltol:
   952                           	callstack 0
   953  00004B                     ___fltol@f1:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x4A
   957  00004B                     	ds	1
   958  00004C                     ??_vfpfcnvrt:
   959                           
   960                           ; 1 bytes @ 0x4B
   961  00004C                     	ds	3
   962  00004F                     ??___fltol:
   963                           
   964                           ; 1 bytes @ 0x4E
   965  00004F                     	ds	1
   966  000050                     vfprintf@cfmt:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x4F
   970  000050                     	ds	3
   971  000053                     
   972                           ; 1 bytes @ 0x52
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   975 ;;
   976 ;; *************** function _main *****************
   977 ;; Defined at:
   978 ;;		line 13 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         0       0       0       0       0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels required when called:   12
   998 ;; This function calls:
   999 ;;		_appGetElements
  1000 ;;		_appInit
  1001 ;;		_appStateInitial
  1002 ;;		_appStateRecolectData
  1003 ;;		_confirmacion
  1004 ;;		_readUART
  1005 ;;		_sendinformation
  1006 ;;		_warning
  1007 ;; This function is called by:
  1008 ;;		Startup code after reset
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text0
  1013  003740                     __ptext0:
  1014                           	callstack 0
  1015  003740                     _main:
  1016                           	callstack 19
  1017  003740                     
  1018                           ;main.c: 15:     TRISB = 0xF0;
  1019  003740  0EF0               	movlw	240
  1020  003742  6E93               	movwf	147,c	;volatile
  1021  003744                     
  1022                           ;main.c: 16:     INTCON2bits.RBPU = 0;
  1023  003744  9EF1               	bcf	241,7,c	;volatile
  1024  003746                     
  1025                           ;main.c: 17:     TRISAbits.TRISA2 = 0;
  1026  003746  9492               	bcf	146,2,c	;volatile
  1027  003748                     
  1028                           ;main.c: 18:     TRISAbits.TRISA5 = 0;
  1029  003748  9A92               	bcf	146,5,c	;volatile
  1030  00374A                     
  1031                           ;main.c: 19:     appInit();
  1032  00374A  ECC4  F01A         	call	_appInit	;wreg free
  1033  00374E                     l4823:
  1034                           
  1035                           ;main.c: 21:     {;main.c: 24:         datos.nextFunc();
  1036  00374E  EE20  F0D7         	lfsr	2,_datos+23
  1037  003752  D802               	call	u4348
  1038  003754  EFB6  F01B         	goto	u4349
  1039  003758                     u4348:
  1040  003758  0005               	push	
  1041  00375A  6EFA               	movwf	pclath,c
  1042  00375C  50DE               	movf	postinc2,w,c
  1043  00375E  6EFD               	movwf	tosl,c
  1044  003760  50DE               	movf	postinc2,w,c
  1045  003762  6EFE               	movwf	tosh,c
  1046  003764  50F8               	movf	tblptru,w,c
  1047  003766  6EFF               	movwf	tosu,c
  1048  003768  50FA               	movf	pclath,w,c
  1049  00376A  0012               	return		;indir
  1050  00376C                     u4349:
  1051  00376C  EFA7  F01B         	goto	l4823
  1052  003770  EF5E  F000         	goto	start
  1053  003774                     __end_of_main:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _sendinformation *****************
  1057 ;; Defined at:
  1058 ;;		line 131 in file "app.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:   11
  1079 ;; This function calls:
  1080 ;;		_appADC
  1081 ;;		_appBat
  1082 ;;		_appElemts
  1083 ;;		_appTimerStart
  1084 ;;		_memset
  1085 ;;		_sendData
  1086 ;;		_sprintf
  1087 ;; This function is called by:
  1088 ;;		_readUART
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text1
  1094  002D3A                     __ptext1:
  1095                           	callstack 0
  1096  002D3A                     _sendinformation:
  1097                           	callstack 19
  1098  002D3A                     
  1099                           ;app.c: 133:     appADC(&datos);
  1100  002D3A  0EC0               	movlw	low _datos
  1101  002D3C  0100               	movlb	0	; () banked
  1102  002D3E  6FB8               	movwf	appADC@data& (0+255),b
  1103  002D40  0E00               	movlw	high _datos
  1104  002D42  6FB9               	movwf	(appADC@data+1)& (0+255),b
  1105  002D44  EC0A  F00E         	call	_appADC	;wreg free
  1106  002D48                     
  1107                           ;app.c: 134:     sendData(&datos);
  1108  002D48  0EC0               	movlw	low _datos
  1109  002D4A  6E0B               	movwf	sendData@data^0,c
  1110  002D4C  0E00               	movlw	high _datos
  1111  002D4E  6E0C               	movwf	(sendData@data+1)^0,c
  1112  002D50  EC75  F019         	call	_sendData	;wreg free
  1113  002D54                     
  1114                           ;app.c: 135:     appBat(&datos);
  1115  002D54  0EC0               	movlw	low _datos
  1116  002D56  0100               	movlb	0	; () banked
  1117  002D58  6FB8               	movwf	appBat@data& (0+255),b
  1118  002D5A  0E00               	movlw	high _datos
  1119  002D5C  6FB9               	movwf	(appBat@data+1)& (0+255),b
  1120  002D5E  EC3C  F00C         	call	_appBat	;wreg free
  1121                           
  1122                           ;app.c: 136:     sendData(&datos);
  1123  002D62  0EC0               	movlw	low _datos
  1124  002D64  6E0B               	movwf	sendData@data^0,c
  1125  002D66  0E00               	movlw	high _datos
  1126  002D68  6E0C               	movwf	(sendData@data+1)^0,c
  1127  002D6A  EC75  F019         	call	_sendData	;wreg free
  1128  002D6E                     
  1129                           ;app.c: 137:     appElemts(&datos);
  1130  002D6E  0EC0               	movlw	low _datos
  1131  002D70  0100               	movlb	0	; () banked
  1132  002D72  6FB8               	movwf	appElemts@data& (0+255),b
  1133  002D74  0E00               	movlw	high _datos
  1134  002D76  6FB9               	movwf	(appElemts@data+1)& (0+255),b
  1135  002D78  EC42  F019         	call	_appElemts	;wreg free
  1136  002D7C                     
  1137                           ;app.c: 138:     sendData(&datos);
  1138  002D7C  0EC0               	movlw	low _datos
  1139  002D7E  6E0B               	movwf	sendData@data^0,c
  1140  002D80  0E00               	movlw	high _datos
  1141  002D82  6E0C               	movwf	(sendData@data+1)^0,c
  1142  002D84  EC75  F019         	call	_sendData	;wreg free
  1143  002D88                     
  1144                           ;app.c: 139:     memset(datos.display,0,sizeof(datos.display));
  1145  002D88  0EC7               	movlw	low (_datos+7)
  1146  002D8A  6E07               	movwf	memset@dest^0,c
  1147  002D8C  0E00               	movlw	high (_datos+7)
  1148  002D8E  6E08               	movwf	(memset@dest+1)^0,c
  1149  002D90  0E00               	movlw	0
  1150  002D92  6E0A               	movwf	(memset@c+1)^0,c
  1151  002D94  0E00               	movlw	0
  1152  002D96  6E09               	movwf	memset@c^0,c
  1153  002D98  0E00               	movlw	0
  1154  002D9A  6E0C               	movwf	(memset@n+1)^0,c
  1155  002D9C  0E10               	movlw	16
  1156  002D9E  6E0B               	movwf	memset@n^0,c
  1157  002DA0  EC6D  F010         	call	_memset	;wreg free
  1158  002DA4                     
  1159                           ;app.c: 140:     sprintf((char *)datos.display,"@");
  1160  002DA4  0EC7               	movlw	low (_datos+7)
  1161  002DA6  0100               	movlb	0	; () banked
  1162  002DA8  6FA6               	movwf	sprintf@s& (0+255),b
  1163  002DAA  0E00               	movlw	high (_datos+7)
  1164  002DAC  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  1165  002DAE  0E39               	movlw	low (STR_12+11)
  1166  002DB0  6FA8               	movwf	sprintf@fmt& (0+255),b
  1167  002DB2  0E08               	movlw	high (STR_12+11)
  1168  002DB4  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  1169  002DB6  EC03  F01A         	call	_sprintf	;wreg free
  1170                           
  1171                           ;app.c: 141:     sendData(&datos);
  1172  002DBA  0EC0               	movlw	low _datos
  1173  002DBC  6E0B               	movwf	sendData@data^0,c
  1174  002DBE  0E00               	movlw	high _datos
  1175  002DC0  6E0C               	movwf	(sendData@data+1)^0,c
  1176  002DC2  EC75  F019         	call	_sendData	;wreg free
  1177  002DC6                     
  1178                           ;app.c: 143:     appTimerStart();
  1179  002DC6  EC1C  F01C         	call	_appTimerStart	;wreg free
  1180  002DCA                     
  1181                           ;app.c: 144:     memset(datos.display,0,sizeof(datos.display));
  1182  002DCA  0EC7               	movlw	low (_datos+7)
  1183  002DCC  6E07               	movwf	memset@dest^0,c
  1184  002DCE  0E00               	movlw	high (_datos+7)
  1185  002DD0  6E08               	movwf	(memset@dest+1)^0,c
  1186  002DD2  0E00               	movlw	0
  1187  002DD4  6E0A               	movwf	(memset@c+1)^0,c
  1188  002DD6  0E00               	movlw	0
  1189  002DD8  6E09               	movwf	memset@c^0,c
  1190  002DDA  0E00               	movlw	0
  1191  002DDC  6E0C               	movwf	(memset@n+1)^0,c
  1192  002DDE  0E10               	movlw	16
  1193  002DE0  6E0B               	movwf	memset@n^0,c
  1194  002DE2  EC6D  F010         	call	_memset	;wreg free
  1195  002DE6                     
  1196                           ;app.c: 145:     datos.state = 0;
  1197  002DE6  0E00               	movlw	0
  1198  002DE8  0100               	movlb	0	; () banked
  1199  002DEA  6FC3               	movwf	(_datos+3)& (0+255),b
  1200  002DEC                     
  1201                           ; BSR set to: 0
  1202                           ;app.c: 146:     datos.nextFunc = appStateInitial;
  1203  002DEC  0EAA               	movlw	low _appStateInitial
  1204  002DEE  6FD7               	movwf	(_datos+23)& (0+255),b
  1205  002DF0  0E34               	movlw	high _appStateInitial
  1206  002DF2  6FD8               	movwf	(_datos+24)& (0+255),b
  1207  002DF4                     
  1208                           ; BSR set to: 0
  1209  002DF4  0012               	return		;funcret
  1210  002DF6                     __end_of_sendinformation:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _appStateInitial *****************
  1214 ;; Defined at:
  1215 ;;		line 56 in file "app.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    4
  1236 ;; This function calls:
  1237 ;;		_setServo
  1238 ;;		_teclado
  1239 ;; This function is called by:
  1240 ;;		_appStateRecolectData
  1241 ;;		_appGetElements
  1242 ;;		_sendinformation
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text2
  1248  0034AA                     __ptext2:
  1249                           	callstack 0
  1250  0034AA                     _appStateInitial:
  1251                           	callstack 26
  1252  0034AA                     
  1253                           ;app.c: 59:     teclado(&datos.character);
  1254  0034AA  0EC6               	movlw	low (_datos+6)
  1255  0034AC  6E07               	movwf	teclado@valor^0,c
  1256  0034AE  0E00               	movlw	high (_datos+6)
  1257  0034B0  6E08               	movwf	(teclado@valor+1)^0,c
  1258  0034B2  EC47  F00B         	call	_teclado	;wreg free
  1259  0034B6                     
  1260                           ;app.c: 60:     if(datos.character != 0)
  1261  0034B6  0100               	movlb	0	; () banked
  1262  0034B8  51C6               	movf	(_datos+6)& (0+255),w,b
  1263  0034BA  B4D8               	btfsc	status,2,c
  1264  0034BC  EF62  F01A         	goto	u3921
  1265  0034C0  EF64  F01A         	goto	u3920
  1266  0034C4                     u3921:
  1267  0034C4  EF6A  F01A         	goto	l356
  1268  0034C8                     u3920:
  1269  0034C8                     
  1270                           ; BSR set to: 0
  1271                           ;app.c: 61:     {;app.c: 62:         datos.state = 1;
  1272  0034C8  0E01               	movlw	1
  1273  0034CA  6FC3               	movwf	(_datos+3)& (0+255),b
  1274                           
  1275                           ;app.c: 63:         datos.character = 0;
  1276  0034CC  0E00               	movlw	0
  1277  0034CE  6FC6               	movwf	(_datos+6)& (0+255),b
  1278                           
  1279                           ;app.c: 64:     }
  1280  0034D0  EF79  F01A         	goto	l359
  1281  0034D4                     l356:
  1282                           
  1283                           ; BSR set to: 0
  1284  0034D4  A680               	btfss	128,3,c	;volatile
  1285  0034D6  EF6F  F01A         	goto	u3931
  1286  0034DA  EF71  F01A         	goto	u3930
  1287  0034DE                     u3931:
  1288  0034DE  EF79  F01A         	goto	l359
  1289  0034E2                     u3930:
  1290  0034E2                     
  1291                           ; BSR set to: 0
  1292                           ;app.c: 66:     {;app.c: 67:         setServo(33,10,0);
  1293  0034E2  0E0A               	movlw	10
  1294  0034E4  6E0B               	movwf	setServo@pulsos^0,c
  1295  0034E6  0E00               	movlw	0
  1296  0034E8  6E0C               	movwf	setServo@pin^0,c
  1297  0034EA  0E21               	movlw	33
  1298  0034EC  ECD1  F01B         	call	_setServo
  1299  0034F0                     
  1300                           ;app.c: 68:         TMR3IF = 1;
  1301  0034F0  82A1               	bsf	4001,1,c	;volatile
  1302  0034F2                     l359:
  1303  0034F2  0012               	return		;funcret
  1304  0034F4                     __end_of_appStateInitial:
  1305                           	callstack 0
  1306                           
  1307 ;; *************** function _readUART *****************
  1308 ;; Defined at:
  1309 ;;		line 39 in file "UART.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1323 ;;      Params:         0       0       0       0       0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1325 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1326 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1327 ;;Total ram usage:        2 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    3
  1330 ;; This function calls:
  1331 ;;		_Lcd_Cmd
  1332 ;;		_memcmp
  1333 ;;		_memset
  1334 ;; This function is called by:
  1335 ;;		_isrH
  1336 ;;		_main
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text3
  1341  00294E                     __ptext3:
  1342                           	callstack 0
  1343  00294E                     _readUART:
  1344                           	callstack 27
  1345  00294E                     
  1346                           ;UART.c: 41:     if(!memcmp(puerto,"Informacion@",12))
  1347  00294E  0E84               	movlw	low _puerto
  1348  002950  6E07               	movwf	memcmp@vl^0,c
  1349  002952  0E00               	movlw	high _puerto
  1350  002954  6E08               	movwf	(memcmp@vl+1)^0,c
  1351  002956  0E2E               	movlw	low STR_12
  1352  002958  6E09               	movwf	memcmp@vr^0,c
  1353  00295A  0E08               	movlw	high STR_12
  1354  00295C  6E0A               	movwf	(memcmp@vr+1)^0,c
  1355  00295E  0E00               	movlw	0
  1356  002960  6E0C               	movwf	(memcmp@n+1)^0,c
  1357  002962  0E0C               	movlw	12
  1358  002964  6E0B               	movwf	memcmp@n^0,c
  1359  002966  ECF8  F017         	call	_memcmp	;wreg free
  1360  00296A  5007               	movf	?_memcmp^0,w,c
  1361  00296C  1008               	iorwf	(?_memcmp+1)^0,w,c
  1362  00296E  A4D8               	btfss	status,2,c
  1363  002970  EFBC  F014         	goto	u4321
  1364  002974  EFBE  F014         	goto	u4320
  1365  002978                     u4321:
  1366  002978  EFD5  F014         	goto	l4801
  1367  00297C                     u4320:
  1368  00297C                     
  1369                           ;UART.c: 42:     {;UART.c: 43:         memset(puerto,0,sizeof(puerto));
  1370  00297C  0E84               	movlw	low _puerto
  1371  00297E  6E07               	movwf	memset@dest^0,c
  1372  002980  0E00               	movlw	high _puerto
  1373  002982  6E08               	movwf	(memset@dest+1)^0,c
  1374  002984  0E00               	movlw	0
  1375  002986  6E0A               	movwf	(memset@c+1)^0,c
  1376  002988  0E00               	movlw	0
  1377  00298A  6E09               	movwf	memset@c^0,c
  1378  00298C  0E00               	movlw	0
  1379  00298E  6E0C               	movwf	(memset@n+1)^0,c
  1380  002990  0E08               	movlw	8
  1381  002992  6E0B               	movwf	memset@n^0,c
  1382  002994  EC6D  F010         	call	_memset	;wreg free
  1383  002998                     
  1384                           ;UART.c: 44:         datos.state = 0;
  1385  002998  0E00               	movlw	0
  1386  00299A  0100               	movlb	0	; () banked
  1387  00299C  6FC3               	movwf	(_datos+3)& (0+255),b
  1388  00299E                     
  1389                           ; BSR set to: 0
  1390                           ;UART.c: 45:         datos.nextFunc = sendinformation;
  1391  00299E  0E3A               	movlw	low _sendinformation
  1392  0029A0  6FD7               	movwf	(_datos+23)& (0+255),b
  1393  0029A2  0E2D               	movlw	high _sendinformation
  1394  0029A4  6FD8               	movwf	(_datos+24)& (0+255),b
  1395                           
  1396                           ;UART.c: 46:     }
  1397  0029A6  EF10  F015         	goto	l430
  1398  0029AA                     l4801:
  1399  0029AA  0E84               	movlw	low _puerto
  1400  0029AC  6E07               	movwf	memcmp@vl^0,c
  1401  0029AE  0E00               	movlw	high _puerto
  1402  0029B0  6E08               	movwf	(memcmp@vl+1)^0,c
  1403  0029B2  0E60               	movlw	low STR_14
  1404  0029B4  6E09               	movwf	memcmp@vr^0,c
  1405  0029B6  0E08               	movlw	high STR_14
  1406  0029B8  6E0A               	movwf	(memcmp@vr+1)^0,c
  1407  0029BA  0E00               	movlw	0
  1408  0029BC  6E0C               	movwf	(memcmp@n+1)^0,c
  1409  0029BE  0E09               	movlw	9
  1410  0029C0  6E0B               	movwf	memcmp@n^0,c
  1411  0029C2  ECF8  F017         	call	_memcmp	;wreg free
  1412  0029C6  5007               	movf	?_memcmp^0,w,c
  1413  0029C8  1008               	iorwf	(?_memcmp+1)^0,w,c
  1414  0029CA  A4D8               	btfss	status,2,c
  1415  0029CC  EFEA  F014         	goto	u4331
  1416  0029D0  EFEC  F014         	goto	u4330
  1417  0029D4                     u4331:
  1418  0029D4  EF10  F015         	goto	l430
  1419  0029D8                     u4330:
  1420  0029D8                     
  1421                           ;UART.c: 48:     {;UART.c: 49:         (Lcd_Cmd(1),_delay((unsigned long)((100)*(1200000
      +                          0/4000.0))));
  1422  0029D8  0E01               	movlw	1
  1423  0029DA  EC81  F012         	call	_Lcd_Cmd
  1424  0029DE  0E02               	movlw	2
  1425  0029E0  6E14               	movwf	(??_readUART+1)^0,c
  1426  0029E2  0E86               	movlw	134
  1427  0029E4  6E13               	movwf	??_readUART^0,c
  1428  0029E6  0E99               	movlw	153
  1429  0029E8                     u4467:
  1430  0029E8  2EE8               	decfsz	wreg,f,c
  1431  0029EA  D7FE               	bra	u4467
  1432  0029EC  2E13               	decfsz	??_readUART^0,f,c
  1433  0029EE  D7FC               	bra	u4467
  1434  0029F0  2E14               	decfsz	(??_readUART+1)^0,f,c
  1435  0029F2  D7FA               	bra	u4467
  1436  0029F4  F000               	nop	
  1437  0029F6                     
  1438                           ;UART.c: 50:         memset(puerto,0,sizeof(puerto));
  1439  0029F6  0E84               	movlw	low _puerto
  1440  0029F8  6E07               	movwf	memset@dest^0,c
  1441  0029FA  0E00               	movlw	high _puerto
  1442  0029FC  6E08               	movwf	(memset@dest+1)^0,c
  1443  0029FE  0E00               	movlw	0
  1444  002A00  6E0A               	movwf	(memset@c+1)^0,c
  1445  002A02  0E00               	movlw	0
  1446  002A04  6E09               	movwf	memset@c^0,c
  1447  002A06  0E00               	movlw	0
  1448  002A08  6E0C               	movwf	(memset@n+1)^0,c
  1449  002A0A  0E08               	movlw	8
  1450  002A0C  6E0B               	movwf	memset@n^0,c
  1451  002A0E  EC6D  F010         	call	_memset	;wreg free
  1452  002A12                     
  1453                           ;UART.c: 51:         datos.state = 0;
  1454  002A12  0E00               	movlw	0
  1455  002A14  0100               	movlb	0	; () banked
  1456  002A16  6FC3               	movwf	(_datos+3)& (0+255),b
  1457  002A18                     
  1458                           ; BSR set to: 0
  1459                           ;UART.c: 52:         datos.nextFunc = appStateRecolectData;
  1460  002A18  0E8E               	movlw	low _appStateRecolectData
  1461  002A1A  6FD7               	movwf	(_datos+23)& (0+255),b
  1462  002A1C  0E30               	movlw	high _appStateRecolectData
  1463  002A1E  6FD8               	movwf	(_datos+24)& (0+255),b
  1464  002A20                     l430:
  1465  002A20  0012               	return		;funcret
  1466  002A22                     __end_of_readUART:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _appGetElements *****************
  1470 ;; Defined at:
  1471 ;;		line 72 in file "app.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1487 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1488 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1489 ;;Total ram usage:        2 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:   11
  1492 ;; This function calls:
  1493 ;;		_Lcd_Cmd
  1494 ;;		_appSubGetData
  1495 ;;		_appSubGiveElemts
  1496 ;;		_appTimerStart
  1497 ;;		_appTimerStop
  1498 ;; This function is called by:
  1499 ;;		_isrL
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text4
  1505  0031A6                     __ptext4:
  1506                           	callstack 0
  1507  0031A6                     _appGetElements:
  1508                           	callstack 19
  1509  0031A6                     
  1510                           ;app.c: 74:     datos.state = 2;
  1511  0031A6  0E02               	movlw	2
  1512  0031A8  0100               	movlb	0	; () banked
  1513  0031AA  6FC3               	movwf	(_datos+3)& (0+255),b
  1514  0031AC                     
  1515                           ; BSR set to: 0
  1516                           ;app.c: 75:     appTimerStop();
  1517  0031AC  EC2D  F01C         	call	_appTimerStop	;wreg free
  1518  0031B0                     
  1519                           ;app.c: 76:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1520  0031B0  0E01               	movlw	1
  1521  0031B2  EC81  F012         	call	_Lcd_Cmd
  1522  0031B6  0E02               	movlw	2
  1523  0031B8  0100               	movlb	0	; () banked
  1524  0031BA  6FBE               	movwf	(??_appGetElements+1)& (0+255),b
  1525  0031BC  0E86               	movlw	134
  1526  0031BE  6FBD               	movwf	??_appGetElements& (0+255),b
  1527  0031C0  0E99               	movlw	153
  1528  0031C2                     u4477:
  1529  0031C2  2EE8               	decfsz	wreg,f,c
  1530  0031C4  D7FE               	bra	u4477
  1531  0031C6  2FBD               	decfsz	??_appGetElements& (0+255),f,b
  1532  0031C8  D7FC               	bra	u4477
  1533  0031CA  2FBE               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1534  0031CC  D7FA               	bra	u4477
  1535  0031CE                     
  1536                           ;app.c: 77:     appSubGetData(&datos);
  1537  0031CE  0EC0               	movlw	low _datos
  1538  0031D0  0100               	movlb	0	; () banked
  1539  0031D2  6FB8               	movwf	appSubGetData@data_Inout& (0+255),b
  1540  0031D4  0E00               	movlw	high _datos
  1541  0031D6  6FB9               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1542  0031D8  EC28  F014         	call	_appSubGetData	;wreg free
  1543  0031DC                     
  1544                           ;app.c: 78:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1545  0031DC  0E01               	movlw	1
  1546  0031DE  EC81  F012         	call	_Lcd_Cmd
  1547  0031E2  0E02               	movlw	2
  1548  0031E4  0100               	movlb	0	; () banked
  1549  0031E6  6FBE               	movwf	(??_appGetElements+1)& (0+255),b
  1550  0031E8  0E86               	movlw	134
  1551  0031EA  6FBD               	movwf	??_appGetElements& (0+255),b
  1552  0031EC  0E99               	movlw	153
  1553  0031EE                     u4487:
  1554  0031EE  2EE8               	decfsz	wreg,f,c
  1555  0031F0  D7FE               	bra	u4487
  1556  0031F2  2FBD               	decfsz	??_appGetElements& (0+255),f,b
  1557  0031F4  D7FC               	bra	u4487
  1558  0031F6  2FBE               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1559  0031F8  D7FA               	bra	u4487
  1560  0031FA                     
  1561                           ;app.c: 79:     appSubGiveElemts(&datos);
  1562  0031FA  0EC0               	movlw	low _datos
  1563  0031FC  6E0F               	movwf	appSubGiveElemts@data^0,c
  1564  0031FE  0E00               	movlw	high _datos
  1565  003200  6E10               	movwf	(appSubGiveElemts@data+1)^0,c
  1566  003202  EC12  F01C         	call	_appSubGiveElemts	;wreg free
  1567  003206                     
  1568                           ;app.c: 80:     datos.nextFunc = appStateInitial;
  1569  003206  0EAA               	movlw	low _appStateInitial
  1570  003208  0100               	movlb	0	; () banked
  1571  00320A  6FD7               	movwf	(_datos+23)& (0+255),b
  1572  00320C  0E34               	movlw	high _appStateInitial
  1573  00320E  6FD8               	movwf	(_datos+24)& (0+255),b
  1574  003210                     
  1575                           ; BSR set to: 0
  1576                           ;app.c: 81:     appTimerStart();
  1577  003210  EC1C  F01C         	call	_appTimerStart	;wreg free
  1578  003214  0012               	return		;funcret
  1579  003216                     __end_of_appGetElements:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _appStateRecolectData *****************
  1583 ;; Defined at:
  1584 ;;		line 35 in file "app.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1598 ;;      Params:         0       0       0       0       0       0       0       0       0
  1599 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1601 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1602 ;;Total ram usage:        0 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:   11
  1605 ;; This function calls:
  1606 ;;		_appADC
  1607 ;;		_appBat
  1608 ;;		_appCounterStop
  1609 ;;		_appElemts
  1610 ;;		_setServo
  1611 ;; This function is called by:
  1612 ;;		_isrL
  1613 ;;		_readUART
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text5
  1619  00308E                     __ptext5:
  1620                           	callstack 0
  1621  00308E                     _appStateRecolectData:
  1622                           	callstack 19
  1623  00308E                     
  1624                           ;app.c: 37:     appADC(&datos);
  1625  00308E  0EC0               	movlw	low _datos
  1626  003090  0100               	movlb	0	; () banked
  1627  003092  6FB8               	movwf	appADC@data& (0+255),b
  1628  003094  0E00               	movlw	high _datos
  1629  003096  6FB9               	movwf	(appADC@data+1)& (0+255),b
  1630  003098  EC0A  F00E         	call	_appADC	;wreg free
  1631                           
  1632                           ;app.c: 38:     appBat(&datos);
  1633  00309C  0EC0               	movlw	low _datos
  1634  00309E  0100               	movlb	0	; () banked
  1635  0030A0  6FB8               	movwf	appBat@data& (0+255),b
  1636  0030A2  0E00               	movlw	high _datos
  1637  0030A4  6FB9               	movwf	(appBat@data+1)& (0+255),b
  1638  0030A6  EC3C  F00C         	call	_appBat	;wreg free
  1639                           
  1640                           ;app.c: 40:     appElemts(&datos);
  1641  0030AA  0EC0               	movlw	low _datos
  1642  0030AC  0100               	movlb	0	; () banked
  1643  0030AE  6FB8               	movwf	appElemts@data& (0+255),b
  1644  0030B0  0E00               	movlw	high _datos
  1645  0030B2  6FB9               	movwf	(appElemts@data+1)& (0+255),b
  1646  0030B4  EC42  F019         	call	_appElemts	;wreg free
  1647  0030B8                     
  1648                           ;app.c: 41:     if(datos.state == 2)
  1649  0030B8  0E02               	movlw	2
  1650  0030BA  0100               	movlb	0	; () banked
  1651  0030BC  19C3               	xorwf	(_datos+3)& (0+255),w,b
  1652  0030BE  A4D8               	btfss	status,2,c
  1653  0030C0  EF64  F018         	goto	u4301
  1654  0030C4  EF66  F018         	goto	u4300
  1655  0030C8                     u4301:
  1656  0030C8  EF8B  F018         	goto	l4749
  1657  0030CC                     u4300:
  1658  0030CC                     
  1659                           ; BSR set to: 0
  1660                           ;app.c: 42:     {;app.c: 43:         LATAbits.LA5 = 1;
  1661  0030CC  8A89               	bsf	137,5,c	;volatile
  1662  0030CE                     
  1663                           ; BSR set to: 0
  1664                           ;app.c: 44:         if(datos.elements == TMR0)
  1665  0030CE  50D6               	movf	214,w,c	;volatile
  1666  0030D0  19C1               	xorwf	(_datos+1)& (0+255),w,b
  1667  0030D2  E107               	bnz	u4311
  1668  0030D4  50D7               	movf	215,w,c	;volatile
  1669  0030D6  19C2               	xorwf	(_datos+2)& (0+255),w,b
  1670  0030D8  A4D8               	btfss	status,2,c
  1671  0030DA  EF71  F018         	goto	u4311
  1672  0030DE  EF73  F018         	goto	u4310
  1673  0030E2                     u4311:
  1674  0030E2  EF8B  F018         	goto	l4749
  1675  0030E6                     u4310:
  1676  0030E6                     
  1677                           ; BSR set to: 0
  1678                           ;app.c: 45:         {;app.c: 46:             datos.elements = (int16_t)TMR0;
  1679  0030E6  CFD6 F0C1          	movff	4054,_datos+1	;volatile
  1680  0030EA  CFD7 F0C2          	movff	4055,_datos+2	;volatile
  1681  0030EE                     
  1682                           ; BSR set to: 0
  1683                           ;app.c: 47:             appCounterStop();
  1684  0030EE  EC2B  F01C         	call	_appCounterStop	;wreg free
  1685  0030F2                     
  1686                           ;app.c: 48:             datos.state = 0;
  1687  0030F2  0E00               	movlw	0
  1688  0030F4  0100               	movlb	0	; () banked
  1689  0030F6  6FC3               	movwf	(_datos+3)& (0+255),b
  1690  0030F8                     
  1691                           ; BSR set to: 0
  1692                           ;app.c: 49:             setServo(33,10,2);
  1693  0030F8  0E0A               	movlw	10
  1694  0030FA  6E0B               	movwf	setServo@pulsos^0,c
  1695  0030FC  0E02               	movlw	2
  1696  0030FE  6E0C               	movwf	setServo@pin^0,c
  1697  003100  0E21               	movlw	33
  1698  003102  ECD1  F01B         	call	_setServo
  1699  003106                     
  1700                           ;app.c: 50:             LATAbits.LA5 = 0;
  1701  003106  9A89               	bcf	137,5,c	;volatile
  1702  003108                     
  1703                           ;app.c: 51:             setServo(45,10,0);
  1704  003108  0E0A               	movlw	10
  1705  00310A  6E0B               	movwf	setServo@pulsos^0,c
  1706  00310C  0E00               	movlw	0
  1707  00310E  6E0C               	movwf	setServo@pin^0,c
  1708  003110  0E2D               	movlw	45
  1709  003112  ECD1  F01B         	call	_setServo
  1710  003116                     l4749:
  1711                           
  1712                           ;app.c: 54:     datos.nextFunc = appStateInitial;
  1713  003116  0EAA               	movlw	low _appStateInitial
  1714  003118  0100               	movlb	0	; () banked
  1715  00311A  6FD7               	movwf	(_datos+23)& (0+255),b
  1716  00311C  0E34               	movlw	high _appStateInitial
  1717  00311E  6FD8               	movwf	(_datos+24)& (0+255),b
  1718  003120                     
  1719                           ; BSR set to: 0
  1720  003120  0012               	return		;funcret
  1721  003122                     __end_of_appStateRecolectData:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function _confirmacion *****************
  1725 ;; Defined at:
  1726 ;;		line 123 in file "app.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1742 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1743 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1744 ;;Total ram usage:        2 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    4
  1747 ;; This function calls:
  1748 ;;		_Lcd_Cmd
  1749 ;;		_Lcd_Out
  1750 ;;		_appTimerStart
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text6
  1757  0034F4                     __ptext6:
  1758                           	callstack 0
  1759  0034F4                     _confirmacion:
  1760                           	callstack 26
  1761  0034F4                     
  1762                           ;app.c: 125:     Lcd_Out(1,0, (const int8_t*)"Confirmacion");
  1763  0034F4  0E00               	movlw	0
  1764  0034F6  6E0A               	movwf	Lcd_Out@x^0,c
  1765  0034F8  0E3B               	movlw	low STR_10
  1766  0034FA  6E0B               	movwf	Lcd_Out@buffer^0,c
  1767  0034FC  0E08               	movlw	high STR_10
  1768  0034FE  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1769  003500  0E01               	movlw	1
  1770  003502  EC11  F015         	call	_Lcd_Out
  1771  003506                     l4307:
  1772  003506  0E08               	movlw	8
  1773  003508  0100               	movlb	0	; () banked
  1774  00350A  19C3               	xorwf	(_datos+3)& (0+255),w,b
  1775  00350C  B4D8               	btfsc	status,2,c
  1776  00350E  EF8B  F01A         	goto	u3951
  1777  003512  EF8D  F01A         	goto	u3950
  1778  003516                     u3951:
  1779  003516  EF83  F01A         	goto	l4307
  1780  00351A                     u3950:
  1781  00351A                     
  1782                           ; BSR set to: 0
  1783                           ;app.c: 127:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1784  00351A  0E01               	movlw	1
  1785  00351C  EC81  F012         	call	_Lcd_Cmd
  1786  003520  0E02               	movlw	2
  1787  003522  6E12               	movwf	(??_confirmacion+1)^0,c
  1788  003524  0E86               	movlw	134
  1789  003526  6E11               	movwf	??_confirmacion^0,c
  1790  003528  0E99               	movlw	153
  1791  00352A                     u4497:
  1792  00352A  2EE8               	decfsz	wreg,f,c
  1793  00352C  D7FE               	bra	u4497
  1794  00352E  2E11               	decfsz	??_confirmacion^0,f,c
  1795  003530  D7FC               	bra	u4497
  1796  003532  2E12               	decfsz	(??_confirmacion+1)^0,f,c
  1797  003534  D7FA               	bra	u4497
  1798  003536  F000               	nop	
  1799  003538                     
  1800                           ;app.c: 128:     appTimerStart();
  1801  003538  EC1C  F01C         	call	_appTimerStart	;wreg free
  1802  00353C  0012               	return		;funcret
  1803  00353E                     __end_of_confirmacion:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _warning *****************
  1807 ;; Defined at:
  1808 ;;		line 112 in file "app.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1824 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1825 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1826 ;;Total ram usage:        2 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    4
  1829 ;; This function calls:
  1830 ;;		_Lcd_Cmd
  1831 ;;		_Lcd_Out
  1832 ;;		_appTimerStart
  1833 ;;		_appTimerStop
  1834 ;;		_setServo
  1835 ;; This function is called by:
  1836 ;;		_isrH
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text7
  1842  003216                     __ptext7:
  1843                           	callstack 0
  1844  003216                     _warning:
  1845                           	callstack 26
  1846  003216                     
  1847                           ;app.c: 114:     appTimerStop();
  1848  003216  EC2D  F01C         	call	_appTimerStop	;wreg free
  1849  00321A                     
  1850                           ;app.c: 115:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1851  00321A  0E01               	movlw	1
  1852  00321C  EC81  F012         	call	_Lcd_Cmd
  1853  003220  0E02               	movlw	2
  1854  003222  6E12               	movwf	(??_warning+1)^0,c
  1855  003224  0E86               	movlw	134
  1856  003226  6E11               	movwf	??_warning^0,c
  1857  003228  0E99               	movlw	153
  1858  00322A                     u4507:
  1859  00322A  2EE8               	decfsz	wreg,f,c
  1860  00322C  D7FE               	bra	u4507
  1861  00322E  2E11               	decfsz	??_warning^0,f,c
  1862  003230  D7FC               	bra	u4507
  1863  003232  2E12               	decfsz	(??_warning+1)^0,f,c
  1864  003234  D7FA               	bra	u4507
  1865  003236  F000               	nop	
  1866  003238                     
  1867                           ;app.c: 116:     Lcd_Out(1,0, (const int8_t*)"Sin vacunas");
  1868  003238  0E00               	movlw	0
  1869  00323A  6E0A               	movwf	Lcd_Out@x^0,c
  1870  00323C  0E48               	movlw	low STR_8
  1871  00323E  6E0B               	movwf	Lcd_Out@buffer^0,c
  1872  003240  0E08               	movlw	high STR_8
  1873  003242  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1874  003244  0E01               	movlw	1
  1875  003246  EC11  F015         	call	_Lcd_Out
  1876  00324A                     
  1877                           ;app.c: 117:     Lcd_Out(2,0, (const int8_t*)"Recarga Porfavor");
  1878  00324A  0E00               	movlw	0
  1879  00324C  6E0A               	movwf	Lcd_Out@x^0,c
  1880  00324E  0E01               	movlw	low STR_9
  1881  003250  6E0B               	movwf	Lcd_Out@buffer^0,c
  1882  003252  0E08               	movlw	high STR_9
  1883  003254  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1884  003256  0E02               	movlw	2
  1885  003258  EC11  F015         	call	_Lcd_Out
  1886  00325C                     
  1887                           ;app.c: 118:     setServo(45,10,1);
  1888  00325C  0E0A               	movlw	10
  1889  00325E  6E0B               	movwf	setServo@pulsos^0,c
  1890  003260  0E01               	movlw	1
  1891  003262  6E0C               	movwf	setServo@pin^0,c
  1892  003264  0E2D               	movlw	45
  1893  003266  ECD1  F01B         	call	_setServo
  1894  00326A                     l4301:
  1895  00326A  0E0A               	movlw	10
  1896  00326C  0100               	movlb	0	; () banked
  1897  00326E  19C3               	xorwf	(_datos+3)& (0+255),w,b
  1898  003270  B4D8               	btfsc	status,2,c
  1899  003272  EF3D  F019         	goto	u3941
  1900  003276  EF3F  F019         	goto	u3940
  1901  00327A                     u3941:
  1902  00327A  EF35  F019         	goto	l4301
  1903  00327E                     u3940:
  1904  00327E                     
  1905                           ; BSR set to: 0
  1906                           ;app.c: 120:     appTimerStart();
  1907  00327E  EC1C  F01C         	call	_appTimerStart	;wreg free
  1908  003282  0012               	return		;funcret
  1909  003284                     __end_of_warning:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _sendData *****************
  1913 ;; Defined at:
  1914 ;;		line 56 in file "UART.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  data            2   10[COMRAM] PTR struct _state
  1917 ;;		 -> datos(25), 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  i               1   14[COMRAM] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1929 ;;      Params:         2       0       0       0       0       0       0       0       0
  1930 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1931 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1932 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1933 ;;Total ram usage:        5 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    3
  1936 ;; This function calls:
  1937 ;;		_strlen
  1938 ;; This function is called by:
  1939 ;;		_sendinformation
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text8
  1944  0032EA                     __ptext8:
  1945                           	callstack 0
  1946  0032EA                     _sendData:
  1947                           	callstack 26
  1948  0032EA                     
  1949                           ;UART.c: 56: void sendData(StateMachine *data);UART.c: 57: {;UART.c: 58:     for(uint8_t
      +                           i = 0; i < strlen((const char *)data->display);)
  1950  0032EA  0E00               	movlw	0
  1951  0032EC  6E0F               	movwf	sendData@i^0,c
  1952  0032EE  EF8F  F019         	goto	l4203
  1953  0032F2                     l434:
  1954                           
  1955                           ;UART.c: 59:         {;UART.c: 60:             if(TXSTAbits.TRMT == 1)
  1956  0032F2  A2AC               	btfss	172,1,c	;volatile
  1957  0032F4  EF7E  F019         	goto	u3851
  1958  0032F8  EF80  F019         	goto	u3850
  1959  0032FC                     u3851:
  1960  0032FC  EF8F  F019         	goto	l4203
  1961  003300                     u3850:
  1962  003300                     
  1963                           ;UART.c: 61:             {;UART.c: 62:                 TXREG = data->display[i];
  1964  003300  500F               	movf	sendData@i^0,w,c
  1965  003302  240B               	addwf	sendData@data^0,w,c
  1966  003304  6E0D               	movwf	??_sendData^0,c
  1967  003306  0E00               	movlw	0
  1968  003308  200C               	addwfc	(sendData@data+1)^0,w,c
  1969  00330A  6E0E               	movwf	(??_sendData+1)^0,c
  1970  00330C  0E07               	movlw	7
  1971  00330E  240D               	addwf	??_sendData^0,w,c
  1972  003310  6ED9               	movwf	fsr2l,c
  1973  003312  0E00               	movlw	0
  1974  003314  200E               	addwfc	(??_sendData+1)^0,w,c
  1975  003316  6EDA               	movwf	fsr2h,c
  1976  003318  50DF               	movf	indf2,w,c
  1977  00331A  6EAD               	movwf	173,c	;volatile
  1978  00331C                     
  1979                           ;UART.c: 63:                 i++;
  1980  00331C  2A0F               	incf	sendData@i^0,f,c
  1981  00331E                     l4203:
  1982  00331E  0E07               	movlw	7
  1983  003320  240B               	addwf	sendData@data^0,w,c
  1984  003322  6E07               	movwf	strlen@s^0,c
  1985  003324  0E00               	movlw	0
  1986  003326  200C               	addwfc	(sendData@data+1)^0,w,c
  1987  003328  6E08               	movwf	(strlen@s+1)^0,c
  1988  00332A  EC85  F01B         	call	_strlen	;wreg free
  1989  00332E  500F               	movf	sendData@i^0,w,c
  1990  003330  6E0D               	movwf	??_sendData^0,c
  1991  003332  6A0E               	clrf	(??_sendData+1)^0,c
  1992  003334  5007               	movf	?_strlen^0,w,c
  1993  003336  5C0D               	subwf	??_sendData^0,w,c
  1994  003338  5008               	movf	(?_strlen+1)^0,w,c
  1995  00333A  580E               	subwfb	(??_sendData+1)^0,w,c
  1996  00333C  A0D8               	btfss	status,0,c
  1997  00333E  EFA3  F019         	goto	u3861
  1998  003342  EFA5  F019         	goto	u3860
  1999  003346                     u3861:
  2000  003346  EF79  F019         	goto	l434
  2001  00334A                     u3860:
  2002  00334A  0012               	return		;funcret
  2003  00334C                     __end_of_sendData:
  2004                           	callstack 0
  2005                           
  2006 ;; *************** function _memcmp *****************
  2007 ;; Defined at:
  2008 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memcmp.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  vl              2    6[COMRAM] PTR const void 
  2011 ;;		 -> puerto(16), 
  2012 ;;  vr              2    8[COMRAM] PTR const void 
  2013 ;;		 -> STR_15(10), STR_13(13), 
  2014 ;;  n               2   10[COMRAM] unsigned int 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  r               2   15[COMRAM] PTR const unsigned char 
  2017 ;;		 -> STR_15(10), STR_13(13), 
  2018 ;;  l               2   13[COMRAM] PTR const unsigned char 
  2019 ;;		 -> puerto(16), 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    6[COMRAM] int 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2029 ;;      Params:         6       0       0       0       0       0       0       0       0
  2030 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2031 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2032 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2033 ;;Total ram usage:       11 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    2
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_readUART
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text9
  2044  002FF0                     __ptext9:
  2045                           	callstack 0
  2046  002FF0                     _memcmp:
  2047                           	callstack 27
  2048  002FF0  C007  F00E         	movff	memcmp@vl,memcmp@l
  2049  002FF4  C008  F00F         	movff	memcmp@vl+1,memcmp@l+1
  2050  002FF8  C009  F010         	movff	memcmp@vr,memcmp@r
  2051  002FFC  C00A  F011         	movff	memcmp@vr+1,memcmp@r+1
  2052  003000  EF09  F018         	goto	l4209
  2053  003004                     l4207:
  2054  003004  060B               	decf	memcmp@n^0,f,c
  2055  003006  A0D8               	btfss	status,0,c
  2056  003008  060C               	decf	(memcmp@n+1)^0,f,c
  2057  00300A  4A0E               	infsnz	memcmp@l^0,f,c
  2058  00300C  2A0F               	incf	(memcmp@l+1)^0,f,c
  2059  00300E  4A10               	infsnz	memcmp@r^0,f,c
  2060  003010  2A11               	incf	(memcmp@r+1)^0,f,c
  2061  003012                     l4209:
  2062  003012  500B               	movf	memcmp@n^0,w,c
  2063  003014  100C               	iorwf	(memcmp@n+1)^0,w,c
  2064  003016  B4D8               	btfsc	status,2,c
  2065  003018  EF10  F018         	goto	u3871
  2066  00301C  EF12  F018         	goto	u3870
  2067  003020                     u3871:
  2068  003020  EF26  F018         	goto	l4213
  2069  003024                     u3870:
  2070  003024  C00E  FFD9         	movff	memcmp@l,fsr2l
  2071  003028  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2072  00302C  50DF               	movf	indf2,w,c
  2073  00302E  6E0D               	movwf	??_memcmp^0,c
  2074  003030  C010  FFF6         	movff	memcmp@r,tblptrl
  2075  003034  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2076  003038                     	if	0	;tblptru may be non-zero
  2077  003038                     	endif
  2078  003038                     	if	0	;tblptru may be non-zero
  2079  003038                     	endif
  2080  003038  0008               	tblrd		*
  2081  00303A  50F5               	movf	tablat,w,c
  2082  00303C  180D               	xorwf	??_memcmp^0,w,c
  2083  00303E  B4D8               	btfsc	status,2,c
  2084  003040  EF24  F018         	goto	u3881
  2085  003044  EF26  F018         	goto	u3880
  2086  003048                     u3881:
  2087  003048  EF02  F018         	goto	l4207
  2088  00304C                     u3880:
  2089  00304C                     l4213:
  2090  00304C  500B               	movf	memcmp@n^0,w,c
  2091  00304E  100C               	iorwf	(memcmp@n+1)^0,w,c
  2092  003050  A4D8               	btfss	status,2,c
  2093  003052  EF2D  F018         	goto	u3891
  2094  003056  EF2F  F018         	goto	u3890
  2095  00305A                     u3891:
  2096  00305A  EF35  F018         	goto	l4217
  2097  00305E                     u3890:
  2098  00305E  0E00               	movlw	0
  2099  003060  6E08               	movwf	(?_memcmp+1)^0,c
  2100  003062  0E00               	movlw	0
  2101  003064  6E07               	movwf	?_memcmp^0,c
  2102  003066  EF46  F018         	goto	l1123
  2103  00306A                     l4217:
  2104  00306A  C00E  FFD9         	movff	memcmp@l,fsr2l
  2105  00306E  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2106  003072  50DF               	movf	indf2,w,c
  2107  003074  6E0D               	movwf	??_memcmp^0,c
  2108  003076  C010  FFF6         	movff	memcmp@r,tblptrl
  2109  00307A  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2110  00307E                     	if	0	;tblptru may be non-zero
  2111  00307E                     	endif
  2112  00307E                     	if	0	;tblptru may be non-zero
  2113  00307E                     	endif
  2114  00307E  0008               	tblrd		*
  2115  003080  50F5               	movf	tablat,w,c
  2116  003082  5C0D               	subwf	??_memcmp^0,w,c
  2117  003084  6E07               	movwf	?_memcmp^0,c
  2118  003086  6A08               	clrf	(?_memcmp+1)^0,c
  2119  003088  A0D8               	btfss	status,0,c
  2120  00308A  0608               	decf	(?_memcmp+1)^0,f,c
  2121  00308C                     l1123:
  2122  00308C  0012               	return		;funcret
  2123  00308E                     __end_of_memcmp:
  2124                           	callstack 0
  2125                           
  2126 ;; *************** function _appElemts *****************
  2127 ;; Defined at:
  2128 ;;		line 154 in file "servo.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  data            2   36[BANK0 ] PTR struct _state
  2131 ;;		 -> datos(25), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2143 ;;      Params:         0       2       0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2146 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2147 ;;Total ram usage:        2 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:   10
  2150 ;; This function calls:
  2151 ;;		_Lcd_Out
  2152 ;;		_memset
  2153 ;;		_sprintf
  2154 ;; This function is called by:
  2155 ;;		_appStateRecolectData
  2156 ;;		_sendinformation
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text10
  2161  003284                     __ptext10:
  2162                           	callstack 0
  2163  003284                     _appElemts:
  2164                           	callstack 19
  2165  003284                     
  2166                           ;servo.c: 154: void appElemts(StateMachine *data);servo.c: 155: {;servo.c: 157:     mems
      +                          et(data->display,0,sizeof(data->display));
  2167  003284  0E07               	movlw	7
  2168  003286  0100               	movlb	0	; () banked
  2169  003288  25B8               	addwf	appElemts@data& (0+255),w,b
  2170  00328A  6E07               	movwf	memset@dest^0,c
  2171  00328C  0E00               	movlw	0
  2172  00328E  21B9               	addwfc	(appElemts@data+1)& (0+255),w,b
  2173  003290  6E08               	movwf	(memset@dest+1)^0,c
  2174  003292  0E00               	movlw	0
  2175  003294  6E0A               	movwf	(memset@c+1)^0,c
  2176  003296  0E00               	movlw	0
  2177  003298  6E09               	movwf	memset@c^0,c
  2178  00329A  0E00               	movlw	0
  2179  00329C  6E0C               	movwf	(memset@n+1)^0,c
  2180  00329E  0E10               	movlw	16
  2181  0032A0  6E0B               	movwf	memset@n^0,c
  2182  0032A2  EC6D  F010         	call	_memset	;wreg free
  2183  0032A6                     
  2184                           ;servo.c: 158:     sprintf((char *)data->display,"#:%d",(256 - (TMR0)));
  2185  0032A6  0E07               	movlw	7
  2186  0032A8  0100               	movlb	0	; () banked
  2187  0032AA  25B8               	addwf	appElemts@data& (0+255),w,b
  2188  0032AC  6FA6               	movwf	sprintf@s& (0+255),b
  2189  0032AE  0E00               	movlw	0
  2190  0032B0  21B9               	addwfc	(appElemts@data+1)& (0+255),w,b
  2191  0032B2  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2192  0032B4  0E79               	movlw	low STR_5
  2193  0032B6  6FA8               	movwf	sprintf@fmt& (0+255),b
  2194  0032B8  0E08               	movlw	high STR_5
  2195  0032BA  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  2196  0032BC  50D6               	movf	214,w,c	;volatile
  2197  0032BE  0800               	sublw	0
  2198  0032C0  6FAA               	movwf	(?_sprintf+4)& (0+255),b
  2199  0032C2  50D7               	movf	215,w,c	;volatile
  2200  0032C4  A0D8               	btfss	status,0,c
  2201  0032C6  2AE8               	incf	wreg,f,c
  2202  0032C8  0801               	sublw	1
  2203  0032CA  6FAB               	movwf	(?_sprintf+5)& (0+255),b
  2204  0032CC  EC03  F01A         	call	_sprintf	;wreg free
  2205  0032D0                     
  2206                           ;servo.c: 159:     Lcd_Out(2,10, (int8_t*)data->display);
  2207  0032D0  0E0A               	movlw	10
  2208  0032D2  6E0A               	movwf	Lcd_Out@x^0,c
  2209  0032D4  0E07               	movlw	7
  2210  0032D6  0100               	movlb	0	; () banked
  2211  0032D8  25B8               	addwf	appElemts@data& (0+255),w,b
  2212  0032DA  6E0B               	movwf	Lcd_Out@buffer^0,c
  2213  0032DC  0E00               	movlw	0
  2214  0032DE  21B9               	addwfc	(appElemts@data+1)& (0+255),w,b
  2215  0032E0  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2216  0032E2  0E02               	movlw	2
  2217  0032E4  EC11  F015         	call	_Lcd_Out
  2218  0032E8  0012               	return		;funcret
  2219  0032EA                     __end_of_appElemts:
  2220                           	callstack 0
  2221                           
  2222 ;; *************** function _appCounterStop *****************
  2223 ;; Defined at:
  2224 ;;		line 148 in file "servo.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		None
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2238 ;;      Params:         0       0       0       0       0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2241 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    2
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_appStateRecolectData
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text11
  2253  003856                     __ptext11:
  2254                           	callstack 0
  2255  003856                     _appCounterStop:
  2256                           	callstack 27
  2257  003856                     
  2258                           ;servo.c: 150:     T0CONbits.TMR0ON = 0;
  2259  003856  9ED5               	bcf	213,7,c	;volatile
  2260  003858  0012               	return		;funcret
  2261  00385A                     __end_of_appCounterStop:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _appBat *****************
  2265 ;; Defined at:
  2266 ;;		line 73 in file "adc.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  data            2   36[BANK0 ] PTR struct _state
  2269 ;;		 -> datos(25), 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2281 ;;      Params:         0       2       0       0       0       0       0       0       0
  2282 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2283 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2284 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2285 ;;Total ram usage:        8 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:   10
  2288 ;; This function calls:
  2289 ;;		_Lcd_Out
  2290 ;;		___fldiv
  2291 ;;		___flmul
  2292 ;;		___fltol
  2293 ;;		___xxtofl
  2294 ;;		_adcGetValue
  2295 ;;		_memset
  2296 ;;		_sprintf
  2297 ;; This function is called by:
  2298 ;;		_appStateRecolectData
  2299 ;;		_sendinformation
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text12
  2304  001878                     __ptext12:
  2305                           	callstack 0
  2306  001878                     _appBat:
  2307                           	callstack 19
  2308  001878                     
  2309                           ;adc.c: 73: void appBat(StateMachine *data);adc.c: 74: {;adc.c: 75:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2310  001878  0E07               	movlw	7
  2311  00187A  0100               	movlb	0	; () banked
  2312  00187C  25B8               	addwf	appBat@data& (0+255),w,b
  2313  00187E  6E07               	movwf	memset@dest^0,c
  2314  001880  0E00               	movlw	0
  2315  001882  21B9               	addwfc	(appBat@data+1)& (0+255),w,b
  2316  001884  6E08               	movwf	(memset@dest+1)^0,c
  2317  001886  0E00               	movlw	0
  2318  001888  6E0A               	movwf	(memset@c+1)^0,c
  2319  00188A  0E00               	movlw	0
  2320  00188C  6E09               	movwf	memset@c^0,c
  2321  00188E  0E00               	movlw	0
  2322  001890  6E0C               	movwf	(memset@n+1)^0,c
  2323  001892  0E10               	movlw	16
  2324  001894  6E0B               	movwf	memset@n^0,c
  2325  001896  EC6D  F010         	call	_memset	;wreg free
  2326                           
  2327                           ;adc.c: 80:     data->bat = adcGetValue(1);
  2328  00189A  0E01               	movlw	1
  2329  00189C  EC4B  F01B         	call	_adcGetValue
  2330  0018A0  0100               	movlb	0	; () banked
  2331  0018A2  EE20 F004          	lfsr	2,4
  2332  0018A6  51B8               	movf	appBat@data& (0+255),w,b
  2333  0018A8  26D9               	addwf	fsr2l,f,c
  2334  0018AA  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2335  0018AC  22DA               	addwfc	fsr2h,f,c
  2336  0018AE  C007  FFDE         	movff	?_adcGetValue,postinc2
  2337  0018B2  C008  FFDD         	movff	?_adcGetValue+1,postdec2
  2338  0018B6                     
  2339                           ; BSR set to: 0
  2340                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2341  0018B6  0E00               	movlw	0
  2342  0018B8  6E36               	movwf	___fldiv@a^0,c
  2343  0018BA  0E00               	movlw	0
  2344  0018BC  6E37               	movwf	(___fldiv@a+1)^0,c
  2345  0018BE  0E80               	movlw	128
  2346  0018C0  6E38               	movwf	(___fldiv@a+2)^0,c
  2347  0018C2  0E44               	movlw	68
  2348  0018C4  6E39               	movwf	(___fldiv@a+3)^0,c
  2349  0018C6  0E00               	movlw	0
  2350  0018C8  6E1D               	movwf	___flmul@a^0,c
  2351  0018CA  0E00               	movlw	0
  2352  0018CC  6E1E               	movwf	(___flmul@a+1)^0,c
  2353  0018CE  0EA0               	movlw	160
  2354  0018D0  6E1F               	movwf	(___flmul@a+2)^0,c
  2355  0018D2  0E40               	movlw	64
  2356  0018D4  6E20               	movwf	(___flmul@a+3)^0,c
  2357  0018D6  EE20 F004          	lfsr	2,4
  2358  0018DA  51B8               	movf	appBat@data& (0+255),w,b
  2359  0018DC  26D9               	addwf	fsr2l,f,c
  2360  0018DE  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2361  0018E0  22DA               	addwfc	fsr2h,f,c
  2362  0018E2  CFDE F0BA          	movff	postinc2,??_appBat
  2363  0018E6  CFDD F0BB          	movff	postdec2,??_appBat+1
  2364  0018EA  C0BA  F00B         	movff	??_appBat,___xxtofl@val
  2365  0018EE  C0BB  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2366  0018F2  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2367  0018F4  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2368  0018F6  0E00               	movlw	0
  2369  0018F8  EC30  F00D         	call	___xxtofl
  2370  0018FC  C00B  F019         	movff	?___xxtofl,___flmul@b
  2371  001900  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2372  001904  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2373  001908  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2374  00190C  EC40  F004         	call	___flmul	;wreg free
  2375  001910  C019  F032         	movff	?___flmul,___fldiv@b
  2376  001914  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2377  001918  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2378  00191C  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2379  001920  EC55  F006         	call	___fldiv	;wreg free
  2380  001924  C032  F0BC         	movff	?___fldiv,_appBat$2655
  2381  001928  C033  F0BD         	movff	?___fldiv+1,_appBat$2655+1
  2382  00192C  C034  F0BE         	movff	?___fldiv+2,_appBat$2655+2
  2383  001930  C035  F0BF         	movff	?___fldiv+3,_appBat$2655+3
  2384  001934                     
  2385                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2386  001934  0E00               	movlw	0
  2387  001936  6E1D               	movwf	___flmul@a^0,c
  2388  001938  0E00               	movlw	0
  2389  00193A  6E1E               	movwf	(___flmul@a+1)^0,c
  2390  00193C  0EC8               	movlw	200
  2391  00193E  6E1F               	movwf	(___flmul@a+2)^0,c
  2392  001940  0E42               	movlw	66
  2393  001942  6E20               	movwf	(___flmul@a+3)^0,c
  2394  001944  C0BC  F019         	movff	_appBat$2655,___flmul@b
  2395  001948  C0BD  F01A         	movff	_appBat$2655+1,___flmul@b+1
  2396  00194C  C0BE  F01B         	movff	_appBat$2655+2,___flmul@b+2
  2397  001950  C0BF  F01C         	movff	_appBat$2655+3,___flmul@b+3
  2398  001954  EC40  F004         	call	___flmul	;wreg free
  2399  001958  C019  F04B         	movff	?___flmul,___fltol@f1
  2400  00195C  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2401  001960  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2402  001964  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2403  001968  ECA4  F013         	call	___fltol	;wreg free
  2404  00196C  0100               	movlb	0	; () banked
  2405  00196E  EE20 F004          	lfsr	2,4
  2406  001972  51B8               	movf	appBat@data& (0+255),w,b
  2407  001974  26D9               	addwf	fsr2l,f,c
  2408  001976  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2409  001978  22DA               	addwfc	fsr2h,f,c
  2410  00197A  C04B  FFDE         	movff	?___fltol,postinc2
  2411  00197E  C04C  FFDD         	movff	?___fltol+1,postdec2
  2412  001982                     
  2413                           ; BSR set to: 0
  2414                           ;adc.c: 82:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  2415  001982  0E00               	movlw	0
  2416  001984  6E36               	movwf	___fldiv@a^0,c
  2417  001986  0E00               	movlw	0
  2418  001988  6E37               	movwf	(___fldiv@a+1)^0,c
  2419  00198A  0EFA               	movlw	250
  2420  00198C  6E38               	movwf	(___fldiv@a+2)^0,c
  2421  00198E  0E43               	movlw	67
  2422  001990  6E39               	movwf	(___fldiv@a+3)^0,c
  2423  001992  0E00               	movlw	0
  2424  001994  6E1D               	movwf	___flmul@a^0,c
  2425  001996  0E00               	movlw	0
  2426  001998  6E1E               	movwf	(___flmul@a+1)^0,c
  2427  00199A  0EC8               	movlw	200
  2428  00199C  6E1F               	movwf	(___flmul@a+2)^0,c
  2429  00199E  0E42               	movlw	66
  2430  0019A0  6E20               	movwf	(___flmul@a+3)^0,c
  2431  0019A2  EE20 F004          	lfsr	2,4
  2432  0019A6  51B8               	movf	appBat@data& (0+255),w,b
  2433  0019A8  26D9               	addwf	fsr2l,f,c
  2434  0019AA  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2435  0019AC  22DA               	addwfc	fsr2h,f,c
  2436  0019AE  CFDE F0BA          	movff	postinc2,??_appBat
  2437  0019B2  CFDD F0BB          	movff	postdec2,??_appBat+1
  2438  0019B6  C0BA  F00B         	movff	??_appBat,___xxtofl@val
  2439  0019BA  C0BB  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2440  0019BE  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2441  0019C0  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2442  0019C2  0E00               	movlw	0
  2443  0019C4  EC30  F00D         	call	___xxtofl
  2444  0019C8  C00B  F019         	movff	?___xxtofl,___flmul@b
  2445  0019CC  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2446  0019D0  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2447  0019D4  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2448  0019D8  EC40  F004         	call	___flmul	;wreg free
  2449  0019DC  C019  F032         	movff	?___flmul,___fldiv@b
  2450  0019E0  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2451  0019E4  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2452  0019E8  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2453  0019EC  EC55  F006         	call	___fldiv	;wreg free
  2454  0019F0  C032  F04B         	movff	?___fldiv,___fltol@f1
  2455  0019F4  C033  F04C         	movff	?___fldiv+1,___fltol@f1+1
  2456  0019F8  C034  F04D         	movff	?___fldiv+2,___fltol@f1+2
  2457  0019FC  C035  F04E         	movff	?___fldiv+3,___fltol@f1+3
  2458  001A00  ECA4  F013         	call	___fltol	;wreg free
  2459  001A04  0100               	movlb	0	; () banked
  2460  001A06  EE20 F004          	lfsr	2,4
  2461  001A0A  51B8               	movf	appBat@data& (0+255),w,b
  2462  001A0C  26D9               	addwf	fsr2l,f,c
  2463  001A0E  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2464  001A10  22DA               	addwfc	fsr2h,f,c
  2465  001A12  C04B  FFDE         	movff	?___fltol,postinc2
  2466  001A16  C04C  FFDD         	movff	?___fltol+1,postdec2
  2467  001A1A                     
  2468                           ; BSR set to: 0
  2469                           ;adc.c: 83:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  2470  001A1A  0E07               	movlw	7
  2471  001A1C  25B8               	addwf	appBat@data& (0+255),w,b
  2472  001A1E  6FA6               	movwf	sprintf@s& (0+255),b
  2473  001A20  0E00               	movlw	0
  2474  001A22  21B9               	addwfc	(appBat@data+1)& (0+255),w,b
  2475  001A24  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2476  001A26  0E6A               	movlw	low STR_2
  2477  001A28  6FA8               	movwf	sprintf@fmt& (0+255),b
  2478  001A2A  0E08               	movlw	high STR_2
  2479  001A2C  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  2480  001A2E  EE20 F004          	lfsr	2,4
  2481  001A32  51B8               	movf	appBat@data& (0+255),w,b
  2482  001A34  26D9               	addwf	fsr2l,f,c
  2483  001A36  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2484  001A38  22DA               	addwfc	fsr2h,f,c
  2485  001A3A  CFDE F0AA          	movff	postinc2,?_sprintf+4
  2486  001A3E  CFDD F0AB          	movff	postdec2,?_sprintf+5
  2487  001A42  EC03  F01A         	call	_sprintf	;wreg free
  2488  001A46                     
  2489                           ;adc.c: 84:     Lcd_Out(2,0, (int8_t*)data->display);
  2490  001A46  0E00               	movlw	0
  2491  001A48  6E0A               	movwf	Lcd_Out@x^0,c
  2492  001A4A  0E07               	movlw	7
  2493  001A4C  0100               	movlb	0	; () banked
  2494  001A4E  25B8               	addwf	appBat@data& (0+255),w,b
  2495  001A50  6E0B               	movwf	Lcd_Out@buffer^0,c
  2496  001A52  0E00               	movlw	0
  2497  001A54  21B9               	addwfc	(appBat@data+1)& (0+255),w,b
  2498  001A56  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2499  001A58  0E02               	movlw	2
  2500  001A5A  EC11  F015         	call	_Lcd_Out
  2501  001A5E  0012               	return		;funcret
  2502  001A60                     __end_of_appBat:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _appADC *****************
  2506 ;; Defined at:
  2507 ;;		line 55 in file "adc.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  data            2   36[BANK0 ] PTR struct _state
  2510 ;;		 -> datos(25), 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  lm35val         4   38[BANK0 ] float 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2522 ;;      Params:         0       2       0       0       0       0       0       0       0
  2523 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2525 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2526 ;;Total ram usage:        6 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:   10
  2529 ;; This function calls:
  2530 ;;		_Lcd_Out
  2531 ;;		___awmod
  2532 ;;		___fldiv
  2533 ;;		___flmul
  2534 ;;		___fltol
  2535 ;;		___xxtofl
  2536 ;;		_adcGetValue
  2537 ;;		_memset
  2538 ;;		_sprintf
  2539 ;; This function is called by:
  2540 ;;		_appStateRecolectData
  2541 ;;		_sendinformation
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text13
  2546  001C14                     __ptext13:
  2547                           	callstack 0
  2548  001C14                     _appADC:
  2549                           	callstack 19
  2550  001C14                     
  2551                           ;adc.c: 55: void appADC(StateMachine *data);adc.c: 56: {;adc.c: 57:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2552  001C14  0E07               	movlw	7
  2553  001C16  0100               	movlb	0	; () banked
  2554  001C18  25B8               	addwf	appADC@data& (0+255),w,b
  2555  001C1A  6E07               	movwf	memset@dest^0,c
  2556  001C1C  0E00               	movlw	0
  2557  001C1E  21B9               	addwfc	(appADC@data+1)& (0+255),w,b
  2558  001C20  6E08               	movwf	(memset@dest+1)^0,c
  2559  001C22  0E00               	movlw	0
  2560  001C24  6E0A               	movwf	(memset@c+1)^0,c
  2561  001C26  0E00               	movlw	0
  2562  001C28  6E09               	movwf	memset@c^0,c
  2563  001C2A  0E00               	movlw	0
  2564  001C2C  6E0C               	movwf	(memset@n+1)^0,c
  2565  001C2E  0E10               	movlw	16
  2566  001C30  6E0B               	movwf	memset@n^0,c
  2567  001C32  EC6D  F010         	call	_memset	;wreg free
  2568  001C36                     
  2569                           ;adc.c: 58:     float lm35val = adcGetValue(0);
  2570  001C36  0E00               	movlw	0
  2571  001C38  EC4B  F01B         	call	_adcGetValue
  2572  001C3C  C007  F00B         	movff	?_adcGetValue,___xxtofl@val
  2573  001C40  C008  F00C         	movff	?_adcGetValue+1,___xxtofl@val+1
  2574  001C44  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2575  001C46  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2576  001C48  0E00               	movlw	0
  2577  001C4A  EC30  F00D         	call	___xxtofl
  2578  001C4E  C00B  F0BA         	movff	?___xxtofl,appADC@lm35val
  2579  001C52  C00C  F0BB         	movff	?___xxtofl+1,appADC@lm35val+1
  2580  001C56  C00D  F0BC         	movff	?___xxtofl+2,appADC@lm35val+2
  2581  001C5A  C00E  F0BD         	movff	?___xxtofl+3,appADC@lm35val+3
  2582  001C5E                     
  2583                           ;adc.c: 59:     lm35val = (float)((lm35val*4.88)/10.0);
  2584  001C5E  0EF6               	movlw	246
  2585  001C60  6E1D               	movwf	___flmul@a^0,c
  2586  001C62  0E28               	movlw	40
  2587  001C64  6E1E               	movwf	(___flmul@a+1)^0,c
  2588  001C66  0E9C               	movlw	156
  2589  001C68  6E1F               	movwf	(___flmul@a+2)^0,c
  2590  001C6A  0E40               	movlw	64
  2591  001C6C  6E20               	movwf	(___flmul@a+3)^0,c
  2592  001C6E  C0BA  F019         	movff	appADC@lm35val,___flmul@b
  2593  001C72  C0BB  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2594  001C76  C0BC  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2595  001C7A  C0BD  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2596  001C7E  EC40  F004         	call	___flmul	;wreg free
  2597  001C82  C019  F032         	movff	?___flmul,___fldiv@b
  2598  001C86  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2599  001C8A  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2600  001C8E  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2601  001C92  0E00               	movlw	0
  2602  001C94  6E36               	movwf	___fldiv@a^0,c
  2603  001C96  0E00               	movlw	0
  2604  001C98  6E37               	movwf	(___fldiv@a+1)^0,c
  2605  001C9A  0E20               	movlw	32
  2606  001C9C  6E38               	movwf	(___fldiv@a+2)^0,c
  2607  001C9E  0E41               	movlw	65
  2608  001CA0  6E39               	movwf	(___fldiv@a+3)^0,c
  2609  001CA2  EC55  F006         	call	___fldiv	;wreg free
  2610  001CA6  C032  F0BA         	movff	?___fldiv,appADC@lm35val
  2611  001CAA  C033  F0BB         	movff	?___fldiv+1,appADC@lm35val+1
  2612  001CAE  C034  F0BC         	movff	?___fldiv+2,appADC@lm35val+2
  2613  001CB2  C035  F0BD         	movff	?___fldiv+3,appADC@lm35val+3
  2614  001CB6                     
  2615                           ;adc.c: 61:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  2616  001CB6  0E07               	movlw	7
  2617  001CB8  0100               	movlb	0	; () banked
  2618  001CBA  25B8               	addwf	appADC@data& (0+255),w,b
  2619  001CBC  6FA6               	movwf	sprintf@s& (0+255),b
  2620  001CBE  0E00               	movlw	0
  2621  001CC0  21B9               	addwfc	(appADC@data+1)& (0+255),w,b
  2622  001CC2  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2623  001CC4  0E20               	movlw	low STR_1
  2624  001CC6  6FA8               	movwf	sprintf@fmt& (0+255),b
  2625  001CC8  0E08               	movlw	high STR_1
  2626  001CCA  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  2627  001CCC  C0BA  F04B         	movff	appADC@lm35val,___fltol@f1
  2628  001CD0  C0BB  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2629  001CD4  C0BC  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2630  001CD8  C0BD  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2631  001CDC  ECA4  F013         	call	___fltol	;wreg free
  2632  001CE0  504B               	movf	?___fltol^0,w,c
  2633  001CE2  0100               	movlb	0	; () banked
  2634  001CE4  6FAA               	movwf	(?_sprintf+4)& (0+255),b
  2635  001CE6  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  2636  001CE8  0E00               	movlw	0
  2637  001CEA  6E1D               	movwf	___flmul@a^0,c
  2638  001CEC  0E00               	movlw	0
  2639  001CEE  6E1E               	movwf	(___flmul@a+1)^0,c
  2640  001CF0  0EC8               	movlw	200
  2641  001CF2  6E1F               	movwf	(___flmul@a+2)^0,c
  2642  001CF4  0E42               	movlw	66
  2643  001CF6  6E20               	movwf	(___flmul@a+3)^0,c
  2644  001CF8  C0BA  F019         	movff	appADC@lm35val,___flmul@b
  2645  001CFC  C0BB  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2646  001D00  C0BC  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2647  001D04  C0BD  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2648  001D08  EC40  F004         	call	___flmul	;wreg free
  2649  001D0C  C019  F04B         	movff	?___flmul,___fltol@f1
  2650  001D10  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2651  001D14  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2652  001D18  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2653  001D1C  ECA4  F013         	call	___fltol	;wreg free
  2654  001D20  504B               	movf	?___fltol^0,w,c
  2655  001D22  0100               	movlb	0	; () banked
  2656  001D24  6F96               	movwf	___awmod@dividend& (0+255),b
  2657  001D26  6B97               	clrf	(___awmod@dividend+1)& (0+255),b
  2658  001D28  0E00               	movlw	0
  2659  001D2A  6F99               	movwf	(___awmod@divisor+1)& (0+255),b
  2660  001D2C  0E64               	movlw	100
  2661  001D2E  6F98               	movwf	___awmod@divisor& (0+255),b
  2662  001D30  ECFB  F016         	call	___awmod	;wreg free
  2663  001D34  0100               	movlb	0	; () banked
  2664  001D36  5196               	movf	?___awmod& (0+255),w,b
  2665  001D38  6FAC               	movwf	(?_sprintf+6)& (0+255),b
  2666  001D3A  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  2667  001D3C  EC03  F01A         	call	_sprintf	;wreg free
  2668  001D40                     
  2669                           ;adc.c: 62:     Lcd_Out(1,0, (int8_t*)data->display);
  2670  001D40  0E00               	movlw	0
  2671  001D42  6E0A               	movwf	Lcd_Out@x^0,c
  2672  001D44  0E07               	movlw	7
  2673  001D46  0100               	movlb	0	; () banked
  2674  001D48  25B8               	addwf	appADC@data& (0+255),w,b
  2675  001D4A  6E0B               	movwf	Lcd_Out@buffer^0,c
  2676  001D4C  0E00               	movlw	0
  2677  001D4E  21B9               	addwfc	(appADC@data+1)& (0+255),w,b
  2678  001D50  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2679  001D52  0E01               	movlw	1
  2680  001D54  EC11  F015         	call	_Lcd_Out
  2681                           
  2682                           ;adc.c: 63:     if(((int)lm35val < 2))
  2683  001D58  C0BA  F04B         	movff	appADC@lm35val,___fltol@f1
  2684  001D5C  C0BB  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2685  001D60  C0BC  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2686  001D64  C0BD  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2687  001D68  ECA4  F013         	call	___fltol	;wreg free
  2688  001D6C  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2689  001D6E  EFC4  F00E         	goto	u4250
  2690  001D72  504C               	movf	(?___fltol+1)^0,w,c
  2691  001D74  E107               	bnz	u4251
  2692  001D76  0E02               	movlw	2
  2693  001D78  5C4B               	subwf	?___fltol^0,w,c
  2694  001D7A  B0D8               	btfsc	status,0,c
  2695  001D7C  EFC2  F00E         	goto	u4251
  2696  001D80  EFC4  F00E         	goto	u4250
  2697  001D84                     u4251:
  2698  001D84  EFC7  F00E         	goto	l4685
  2699  001D88                     u4250:
  2700  001D88                     
  2701                           ;adc.c: 64:     {;adc.c: 65:         LATCbits.LATC1 = 0;
  2702  001D88  928B               	bcf	139,1,c	;volatile
  2703                           
  2704                           ;adc.c: 66:     }
  2705  001D8A  EFE0  F00E         	goto	l39
  2706  001D8E                     l4685:
  2707  001D8E  C0BA  F04B         	movff	appADC@lm35val,___fltol@f1
  2708  001D92  C0BB  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2709  001D96  C0BC  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2710  001D9A  C0BD  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2711  001D9E  ECA4  F013         	call	___fltol	;wreg free
  2712  001DA2  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2713  001DA4  EFDD  F00E         	goto	u4261
  2714  001DA8  504C               	movf	(?___fltol+1)^0,w,c
  2715  001DAA  E109               	bnz	u4260
  2716  001DAC  0E07               	movlw	7
  2717  001DAE  5C4B               	subwf	?___fltol^0,w,c
  2718  001DB0  A0D8               	btfss	status,0,c
  2719  001DB2  EFDD  F00E         	goto	u4261
  2720  001DB6  EFDF  F00E         	goto	u4260
  2721  001DBA                     u4261:
  2722  001DBA  EFE0  F00E         	goto	l39
  2723  001DBE                     u4260:
  2724  001DBE                     
  2725                           ;adc.c: 68:     {;adc.c: 69:         LATCbits.LATC1 = 1;
  2726  001DBE  828B               	bsf	139,1,c	;volatile
  2727  001DC0                     l39:
  2728  001DC0  0012               	return		;funcret
  2729  001DC2                     __end_of_appADC:
  2730                           	callstack 0
  2731                           
  2732 ;; *************** function _adcGetValue *****************
  2733 ;; Defined at:
  2734 ;;		line 44 in file "adc.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  PinADC          1    wreg     unsigned char 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  PinADC          1    9[COMRAM] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  2    6[COMRAM] unsigned short 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2748 ;;      Params:         2       0       0       0       0       0       0       0       0
  2749 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2750 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2751 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2752 ;;Total ram usage:        4 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    2
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_appADC
  2759 ;;		_appBat
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text14
  2764  003696                     __ptext14:
  2765                           	callstack 0
  2766  003696                     _adcGetValue:
  2767                           	callstack 26
  2768                           
  2769                           ;incstack = 0
  2770                           ;adcGetValue@PinADC stored from wreg
  2771  003696  6E0A               	movwf	adcGetValue@PinADC^0,c
  2772  003698                     
  2773                           ;adc.c: 44: uint16_t adcGetValue(uint8_t PinADC);adc.c: 45: {;adc.c: 46:     ADCON0bits.
      +                          CHS = PinADC;
  2774  003698  C00A  F009         	movff	adcGetValue@PinADC,??_adcGetValue
  2775  00369C  4609               	rlncf	??_adcGetValue^0,f,c
  2776  00369E  4609               	rlncf	??_adcGetValue^0,f,c
  2777  0036A0  50C2               	movf	194,w,c	;volatile
  2778  0036A2  1809               	xorwf	??_adcGetValue^0,w,c
  2779  0036A4  0BC3               	andlw	-61
  2780  0036A6  1809               	xorwf	??_adcGetValue^0,w,c
  2781  0036A8  6EC2               	movwf	194,c	;volatile
  2782  0036AA                     
  2783                           ;adc.c: 47:     _delay((unsigned long)((2)*(12000000/4000.0)));
  2784  0036AA  0E08               	movlw	8
  2785  0036AC  6E09               	movwf	??_adcGetValue^0,c
  2786  0036AE  0ECA               	movlw	202
  2787  0036B0                     u4517:
  2788  0036B0  2EE8               	decfsz	wreg,f,c
  2789  0036B2  D7FE               	bra	u4517
  2790  0036B4  2E09               	decfsz	??_adcGetValue^0,f,c
  2791  0036B6  D7FC               	bra	u4517
  2792  0036B8                     
  2793                           ;adc.c: 48:     GO_nDONE = 1;
  2794  0036B8  82C2               	bsf	4034,1,c	;volatile
  2795  0036BA                     l30:
  2796                           
  2797                           ;adc.c: 49:     while(ADCON0bits.GO_DONE)
  2798  0036BA  B2C2               	btfsc	194,1,c	;volatile
  2799  0036BC  EF62  F01B         	goto	u2811
  2800  0036C0  EF64  F01B         	goto	u2810
  2801  0036C4                     u2811:
  2802  0036C4  EF5D  F01B         	goto	l30
  2803  0036C8                     u2810:
  2804  0036C8                     
  2805                           ;adc.c: 52:     return ADRES;
  2806  0036C8  CFC3 F007          	movff	4035,?_adcGetValue	;volatile
  2807  0036CC  CFC4 F008          	movff	4036,?_adcGetValue+1	;volatile
  2808  0036D0  0012               	return		;funcret
  2809  0036D2                     __end_of_adcGetValue:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function ___xxtofl *****************
  2813 ;; Defined at:
  2814 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  sign            1    wreg     unsigned char 
  2817 ;;  val             4   10[COMRAM] long 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  sign            1   18[COMRAM] unsigned char 
  2820 ;;  arg             4   20[COMRAM] unsigned long 
  2821 ;;  exp             1   19[COMRAM] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  4   10[COMRAM] unsigned char 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2831 ;;      Params:         4       0       0       0       0       0       0       0       0
  2832 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2833 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2834 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2835 ;;Total ram usage:       14 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    2
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_appADC
  2842 ;;		_appBat
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text15
  2847  001A60                     __ptext15:
  2848                           	callstack 0
  2849  001A60                     ___xxtofl:
  2850                           	callstack 26
  2851                           
  2852                           ;incstack = 0
  2853                           ;___xxtofl@sign stored from wreg
  2854  001A60  6E13               	movwf	___xxtofl@sign^0,c
  2855  001A62  5013               	movf	___xxtofl@sign^0,w,c
  2856  001A64  B4D8               	btfsc	status,2,c
  2857  001A66  EF37  F00D         	goto	u3681
  2858  001A6A  EF39  F00D         	goto	u3680
  2859  001A6E                     u3681:
  2860  001A6E  EF5B  F00D         	goto	l1095
  2861  001A72                     u3680:
  2862  001A72  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  2863  001A74  EF40  F00D         	goto	u3690
  2864  001A78  EF3E  F00D         	goto	u3691
  2865  001A7C                     u3691:
  2866  001A7C  EF5B  F00D         	goto	l1095
  2867  001A80                     u3690:
  2868  001A80  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  2869  001A84  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  2870  001A88  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  2871  001A8C  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  2872  001A90  1E0F               	comf	??___xxtofl^0,f,c
  2873  001A92  1E10               	comf	(??___xxtofl+1)^0,f,c
  2874  001A94  1E11               	comf	(??___xxtofl+2)^0,f,c
  2875  001A96  1E12               	comf	(??___xxtofl+3)^0,f,c
  2876  001A98  2A0F               	incf	??___xxtofl^0,f,c
  2877  001A9A  0E00               	movlw	0
  2878  001A9C  2210               	addwfc	(??___xxtofl+1)^0,f,c
  2879  001A9E  2211               	addwfc	(??___xxtofl+2)^0,f,c
  2880  001AA0  2212               	addwfc	(??___xxtofl+3)^0,f,c
  2881  001AA2  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  2882  001AA6  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  2883  001AAA  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  2884  001AAE  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  2885  001AB2  EF63  F00D         	goto	l3987
  2886  001AB6                     l1095:
  2887  001AB6  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  2888  001ABA  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2889  001ABE  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2890  001AC2  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2891  001AC6                     l3987:
  2892  001AC6  500B               	movf	___xxtofl@val^0,w,c
  2893  001AC8  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  2894  001ACA  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  2895  001ACC  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  2896  001ACE  A4D8               	btfss	status,2,c
  2897  001AD0  EF6C  F00D         	goto	u3701
  2898  001AD4  EF6E  F00D         	goto	u3700
  2899  001AD8                     u3701:
  2900  001AD8  EF78  F00D         	goto	l3993
  2901  001ADC                     u3700:
  2902  001ADC  0E00               	movlw	0
  2903  001ADE  6E0B               	movwf	?___xxtofl^0,c
  2904  001AE0  0E00               	movlw	0
  2905  001AE2  6E0C               	movwf	(?___xxtofl+1)^0,c
  2906  001AE4  0E00               	movlw	0
  2907  001AE6  6E0D               	movwf	(?___xxtofl+2)^0,c
  2908  001AE8  0E00               	movlw	0
  2909  001AEA  6E0E               	movwf	(?___xxtofl+3)^0,c
  2910  001AEC  EF09  F00E         	goto	l1098
  2911  001AF0                     l3993:
  2912  001AF0  0E96               	movlw	150
  2913  001AF2  6E14               	movwf	___xxtofl@exp^0,c
  2914  001AF4  EF82  F00D         	goto	l3997
  2915  001AF8                     l3995:
  2916  001AF8  2A14               	incf	___xxtofl@exp^0,f,c
  2917  001AFA  90D8               	bcf	status,0,c
  2918  001AFC  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2919  001AFE  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2920  001B00  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2921  001B02  3215               	rrcf	___xxtofl@arg^0,f,c
  2922  001B04                     l3997:
  2923  001B04  0E00               	movlw	0
  2924  001B06  1415               	andwf	___xxtofl@arg^0,w,c
  2925  001B08  6E0F               	movwf	??___xxtofl^0,c
  2926  001B0A  0E00               	movlw	0
  2927  001B0C  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2928  001B0E  6E10               	movwf	(??___xxtofl+1)^0,c
  2929  001B10  0E00               	movlw	0
  2930  001B12  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2931  001B14  6E11               	movwf	(??___xxtofl+2)^0,c
  2932  001B16  0EFE               	movlw	254
  2933  001B18  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2934  001B1A  6E12               	movwf	(??___xxtofl+3)^0,c
  2935  001B1C  500F               	movf	??___xxtofl^0,w,c
  2936  001B1E  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2937  001B20  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2938  001B22  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2939  001B24  A4D8               	btfss	status,2,c
  2940  001B26  EF97  F00D         	goto	u3711
  2941  001B2A  EF99  F00D         	goto	u3710
  2942  001B2E                     u3711:
  2943  001B2E  EF7C  F00D         	goto	l3995
  2944  001B32                     u3710:
  2945  001B32  EFA7  F00D         	goto	l1102
  2946  001B36                     l3999:
  2947  001B36  2A14               	incf	___xxtofl@exp^0,f,c
  2948  001B38  0E01               	movlw	1
  2949  001B3A  2615               	addwf	___xxtofl@arg^0,f,c
  2950  001B3C  0E00               	movlw	0
  2951  001B3E  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  2952  001B40  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  2953  001B42  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  2954  001B44  90D8               	bcf	status,0,c
  2955  001B46  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2956  001B48  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2957  001B4A  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2958  001B4C  3215               	rrcf	___xxtofl@arg^0,f,c
  2959  001B4E                     l1102:
  2960  001B4E  0E00               	movlw	0
  2961  001B50  1415               	andwf	___xxtofl@arg^0,w,c
  2962  001B52  6E0F               	movwf	??___xxtofl^0,c
  2963  001B54  0E00               	movlw	0
  2964  001B56  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2965  001B58  6E10               	movwf	(??___xxtofl+1)^0,c
  2966  001B5A  0E00               	movlw	0
  2967  001B5C  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2968  001B5E  6E11               	movwf	(??___xxtofl+2)^0,c
  2969  001B60  0EFF               	movlw	255
  2970  001B62  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2971  001B64  6E12               	movwf	(??___xxtofl+3)^0,c
  2972  001B66  500F               	movf	??___xxtofl^0,w,c
  2973  001B68  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2974  001B6A  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2975  001B6C  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2976  001B6E  A4D8               	btfss	status,2,c
  2977  001B70  EFBC  F00D         	goto	u3721
  2978  001B74  EFBE  F00D         	goto	u3720
  2979  001B78                     u3721:
  2980  001B78  EF9B  F00D         	goto	l3999
  2981  001B7C                     u3720:
  2982  001B7C  EFC6  F00D         	goto	l4007
  2983  001B80                     l4005:
  2984  001B80  0614               	decf	___xxtofl@exp^0,f,c
  2985  001B82  90D8               	bcf	status,0,c
  2986  001B84  3615               	rlcf	___xxtofl@arg^0,f,c
  2987  001B86  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  2988  001B88  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  2989  001B8A  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  2990  001B8C                     l4007:
  2991  001B8C  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  2992  001B8E  EFCB  F00D         	goto	u3731
  2993  001B92  EFCD  F00D         	goto	u3730
  2994  001B96                     u3731:
  2995  001B96  EFD5  F00D         	goto	l1109
  2996  001B9A                     u3730:
  2997  001B9A  0E02               	movlw	2
  2998  001B9C  6014               	cpfslt	___xxtofl@exp^0,c
  2999  001B9E  EFD3  F00D         	goto	u3741
  3000  001BA2  EFD5  F00D         	goto	u3740
  3001  001BA6                     u3741:
  3002  001BA6  EFC0  F00D         	goto	l4005
  3003  001BAA                     u3740:
  3004  001BAA                     l1109:
  3005  001BAA  B014               	btfsc	___xxtofl@exp^0,0,c
  3006  001BAC  EFDA  F00D         	goto	u3751
  3007  001BB0  EFDC  F00D         	goto	u3750
  3008  001BB4                     u3751:
  3009  001BB4  EFDD  F00D         	goto	l4013
  3010  001BB8                     u3750:
  3011  001BB8  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  3012  001BBA                     l4013:
  3013  001BBA  90D8               	bcf	status,0,c
  3014  001BBC  3214               	rrcf	___xxtofl@exp^0,f,c
  3015  001BBE  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  3016  001BC2  6A10               	clrf	(??___xxtofl+1)^0,c
  3017  001BC4  6A11               	clrf	(??___xxtofl+2)^0,c
  3018  001BC6  6A12               	clrf	(??___xxtofl+3)^0,c
  3019  001BC8  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  3020  001BCC  6A11               	clrf	(??___xxtofl+2)^0,c
  3021  001BCE  6A10               	clrf	(??___xxtofl+1)^0,c
  3022  001BD0  6A0F               	clrf	??___xxtofl^0,c
  3023  001BD2  500F               	movf	??___xxtofl^0,w,c
  3024  001BD4  1215               	iorwf	___xxtofl@arg^0,f,c
  3025  001BD6  5010               	movf	(??___xxtofl+1)^0,w,c
  3026  001BD8  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  3027  001BDA  5011               	movf	(??___xxtofl+2)^0,w,c
  3028  001BDC  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  3029  001BDE  5012               	movf	(??___xxtofl+3)^0,w,c
  3030  001BE0  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  3031  001BE2  5013               	movf	___xxtofl@sign^0,w,c
  3032  001BE4  B4D8               	btfsc	status,2,c
  3033  001BE6  EFF7  F00D         	goto	u3761
  3034  001BEA  EFF9  F00D         	goto	u3760
  3035  001BEE                     u3761:
  3036  001BEE  EF01  F00E         	goto	l4023
  3037  001BF2                     u3760:
  3038  001BF2  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  3039  001BF4  EF00  F00E         	goto	u3770
  3040  001BF8  EFFE  F00D         	goto	u3771
  3041  001BFC                     u3771:
  3042  001BFC  EF01  F00E         	goto	l4023
  3043  001C00                     u3770:
  3044  001C00  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  3045  001C02                     l4023:
  3046  001C02  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  3047  001C06  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  3048  001C0A  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  3049  001C0E  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  3050  001C12                     l1098:
  3051  001C12  0012               	return		;funcret
  3052  001C14                     __end_of___xxtofl:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function ___fltol *****************
  3056 ;; Defined at:
  3057 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  f1              4   74[COMRAM] unsigned char 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  exp1            1    1[BANK0 ] unsigned char 
  3062 ;;  sign1           1    0[BANK0 ] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  4   74[COMRAM] long 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3072 ;;      Params:         4       0       0       0       0       0       0       0       0
  3073 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3074 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3075 ;;      Totals:         8       2       0       0       0       0       0       0       0
  3076 ;;Total ram usage:       10 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    2
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_appADC
  3083 ;;		_appBat
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text16
  3088  002748                     __ptext16:
  3089                           	callstack 0
  3090  002748                     ___fltol:
  3091                           	callstack 26
  3092  002748  344D               	rlcf	(___fltol@f1+2)^0,w,c
  3093  00274A  344E               	rlcf	(___fltol@f1+3)^0,w,c
  3094  00274C  0100               	movlb	0	; () banked
  3095  00274E  6F95               	movwf	___fltol@exp1& (0+255),b
  3096  002750  5195               	movf	___fltol@exp1& (0+255),w,b
  3097  002752  A4D8               	btfss	status,2,c
  3098  002754  EFAE  F013         	goto	u4181
  3099  002758  EFB0  F013         	goto	u4180
  3100  00275C                     u4181:
  3101  00275C  EFBA  F013         	goto	l4635
  3102  002760                     u4180:
  3103  002760                     l4631:
  3104                           
  3105                           ; BSR set to: 0
  3106  002760  0E00               	movlw	0
  3107  002762  6E4B               	movwf	?___fltol^0,c
  3108  002764  0E00               	movlw	0
  3109  002766  6E4C               	movwf	(?___fltol+1)^0,c
  3110  002768  0E00               	movlw	0
  3111  00276A  6E4D               	movwf	(?___fltol+2)^0,c
  3112  00276C  0E00               	movlw	0
  3113  00276E  6E4E               	movwf	(?___fltol+3)^0,c
  3114  002770  EF27  F014         	goto	l737
  3115  002774                     l4635:
  3116                           
  3117                           ; BSR set to: 0
  3118  002774  C04B  F04F         	movff	___fltol@f1,??___fltol
  3119  002778  C04C  F050         	movff	___fltol@f1+1,??___fltol+1
  3120  00277C  C04D  F051         	movff	___fltol@f1+2,??___fltol+2
  3121  002780  C04E  F052         	movff	___fltol@f1+3,??___fltol+3
  3122  002784  0E20               	movlw	32
  3123  002786  EFCA  F013         	goto	u4190
  3124  00278A                     u4195:
  3125  00278A  90D8               	bcf	status,0,c
  3126  00278C  3252               	rrcf	(??___fltol+3)^0,f,c
  3127  00278E  3251               	rrcf	(??___fltol+2)^0,f,c
  3128  002790  3250               	rrcf	(??___fltol+1)^0,f,c
  3129  002792  324F               	rrcf	??___fltol^0,f,c
  3130  002794                     u4190:
  3131  002794  2EE8               	decfsz	wreg,f,c
  3132  002796  EFC5  F013         	goto	u4195
  3133  00279A  504F               	movf	??___fltol^0,w,c
  3134  00279C  6F94               	movwf	___fltol@sign1& (0+255),b
  3135  00279E                     
  3136                           ; BSR set to: 0
  3137  00279E  8E4D               	bsf	(___fltol@f1+2)^0,7,c
  3138  0027A0                     
  3139                           ; BSR set to: 0
  3140  0027A0  0EFF               	movlw	255
  3141  0027A2  164B               	andwf	___fltol@f1^0,f,c
  3142  0027A4  0EFF               	movlw	255
  3143  0027A6  164C               	andwf	(___fltol@f1+1)^0,f,c
  3144  0027A8  0EFF               	movlw	255
  3145  0027AA  164D               	andwf	(___fltol@f1+2)^0,f,c
  3146  0027AC  0E00               	movlw	0
  3147  0027AE  164E               	andwf	(___fltol@f1+3)^0,f,c
  3148  0027B0                     
  3149                           ; BSR set to: 0
  3150  0027B0  0E96               	movlw	150
  3151  0027B2  5F95               	subwf	___fltol@exp1& (0+255),f,b
  3152  0027B4                     
  3153                           ; BSR set to: 0
  3154  0027B4  BF95               	btfsc	___fltol@exp1& (0+255),7,b
  3155  0027B6  EFE1  F013         	goto	u4200
  3156  0027BA  EFDF  F013         	goto	u4201
  3157  0027BE                     u4201:
  3158  0027BE  EFF7  F013         	goto	l4655
  3159  0027C2                     u4200:
  3160  0027C2                     
  3161                           ; BSR set to: 0
  3162  0027C2  5195               	movf	___fltol@exp1& (0+255),w,b
  3163  0027C4  0A80               	xorlw	128
  3164  0027C6  0F97               	addlw	151
  3165  0027C8  B0D8               	btfsc	status,0,c
  3166  0027CA  EFE9  F013         	goto	u4211
  3167  0027CE  EFEB  F013         	goto	u4210
  3168  0027D2                     u4211:
  3169  0027D2  EFED  F013         	goto	l4651
  3170  0027D6                     u4210:
  3171  0027D6  EFB0  F013         	goto	l4631
  3172  0027DA                     l4651:
  3173                           
  3174                           ; BSR set to: 0
  3175  0027DA  90D8               	bcf	status,0,c
  3176  0027DC  324E               	rrcf	(___fltol@f1+3)^0,f,c
  3177  0027DE  324D               	rrcf	(___fltol@f1+2)^0,f,c
  3178  0027E0  324C               	rrcf	(___fltol@f1+1)^0,f,c
  3179  0027E2  324B               	rrcf	___fltol@f1^0,f,c
  3180  0027E4                     
  3181                           ; BSR set to: 0
  3182  0027E4  3F95               	incfsz	___fltol@exp1& (0+255),f,b
  3183  0027E6  EFED  F013         	goto	l4651
  3184  0027EA  EF0F  F014         	goto	l4665
  3185  0027EE                     l4655:
  3186                           
  3187                           ; BSR set to: 0
  3188  0027EE  0E1F               	movlw	31
  3189  0027F0  6595               	cpfsgt	___fltol@exp1& (0+255),b
  3190  0027F2  EFFD  F013         	goto	u4221
  3191  0027F6  EFFF  F013         	goto	u4220
  3192  0027FA                     u4221:
  3193  0027FA  EF07  F014         	goto	l4663
  3194  0027FE                     u4220:
  3195  0027FE  EFB0  F013         	goto	l4631
  3196  002802                     l4661:
  3197                           
  3198                           ; BSR set to: 0
  3199  002802  90D8               	bcf	status,0,c
  3200  002804  364B               	rlcf	___fltol@f1^0,f,c
  3201  002806  364C               	rlcf	(___fltol@f1+1)^0,f,c
  3202  002808  364D               	rlcf	(___fltol@f1+2)^0,f,c
  3203  00280A  364E               	rlcf	(___fltol@f1+3)^0,f,c
  3204  00280C  0795               	decf	___fltol@exp1& (0+255),f,b
  3205  00280E                     l4663:
  3206                           
  3207                           ; BSR set to: 0
  3208  00280E  5195               	movf	___fltol@exp1& (0+255),w,b
  3209  002810  A4D8               	btfss	status,2,c
  3210  002812  EF0D  F014         	goto	u4231
  3211  002816  EF0F  F014         	goto	u4230
  3212  00281A                     u4231:
  3213  00281A  EF01  F014         	goto	l4661
  3214  00281E                     u4230:
  3215  00281E                     l4665:
  3216                           
  3217                           ; BSR set to: 0
  3218  00281E  5194               	movf	___fltol@sign1& (0+255),w,b
  3219  002820  B4D8               	btfsc	status,2,c
  3220  002822  EF15  F014         	goto	u4241
  3221  002826  EF17  F014         	goto	u4240
  3222  00282A                     u4241:
  3223  00282A  EF1F  F014         	goto	l4669
  3224  00282E                     u4240:
  3225  00282E                     
  3226                           ; BSR set to: 0
  3227  00282E  1E4E               	comf	(___fltol@f1+3)^0,f,c
  3228  002830  1E4D               	comf	(___fltol@f1+2)^0,f,c
  3229  002832  1E4C               	comf	(___fltol@f1+1)^0,f,c
  3230  002834  6C4B               	negf	___fltol@f1^0,c
  3231  002836  0E00               	movlw	0
  3232  002838  224C               	addwfc	(___fltol@f1+1)^0,f,c
  3233  00283A  224D               	addwfc	(___fltol@f1+2)^0,f,c
  3234  00283C  224E               	addwfc	(___fltol@f1+3)^0,f,c
  3235  00283E                     l4669:
  3236                           
  3237                           ; BSR set to: 0
  3238  00283E  C04B  F04B         	movff	___fltol@f1,?___fltol
  3239  002842  C04C  F04C         	movff	___fltol@f1+1,?___fltol+1
  3240  002846  C04D  F04D         	movff	___fltol@f1+2,?___fltol+2
  3241  00284A  C04E  F04E         	movff	___fltol@f1+3,?___fltol+3
  3242  00284E                     l737:
  3243                           
  3244                           ; BSR set to: 0
  3245  00284E  0012               	return		;funcret
  3246  002850                     __end_of___fltol:
  3247                           	callstack 0
  3248                           
  3249 ;; *************** function ___flmul *****************
  3250 ;; Defined at:
  3251 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  b               4   24[COMRAM] long 
  3254 ;;  a               4   28[COMRAM] long 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  prod            4   43[COMRAM] struct .
  3257 ;;  grs             4   37[COMRAM] unsigned long 
  3258 ;;  temp            2   47[COMRAM] struct .
  3259 ;;  bexp            1   42[COMRAM] unsigned char 
  3260 ;;  aexp            1   41[COMRAM] unsigned char 
  3261 ;;  sign            1   36[COMRAM] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  4   24[COMRAM] unsigned char 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0, prodl, prodh
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3271 ;;      Params:         8       0       0       0       0       0       0       0       0
  3272 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3273 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3274 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3275 ;;Total ram usage:       25 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    2
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_appADC
  3282 ;;		_appBat
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text17
  3287  000880                     __ptext17:
  3288                           	callstack 0
  3289  000880                     ___flmul:
  3290                           	callstack 26
  3291  000880  501C               	movf	(___flmul@b+3)^0,w,c
  3292  000882  0B80               	andlw	128
  3293  000884  6E25               	movwf	___flmul@sign^0,c
  3294  000886  501C               	movf	(___flmul@b+3)^0,w,c
  3295  000888  241C               	addwf	(___flmul@b+3)^0,w,c
  3296  00088A  6E2B               	movwf	___flmul@bexp^0,c
  3297  00088C  AE1B               	btfss	(___flmul@b+2)^0,7,c
  3298  00088E  EF4B  F004         	goto	u3361
  3299  000892  EF4D  F004         	goto	u3360
  3300  000896                     u3361:
  3301  000896  EF4E  F004         	goto	l3777
  3302  00089A                     u3360:
  3303  00089A  802B               	bsf	___flmul@bexp^0,0,c
  3304  00089C                     l3777:
  3305  00089C  502B               	movf	___flmul@bexp^0,w,c
  3306  00089E  B4D8               	btfsc	status,2,c
  3307  0008A0  EF54  F004         	goto	u3371
  3308  0008A4  EF56  F004         	goto	u3370
  3309  0008A8                     u3371:
  3310  0008A8  EF69  F004         	goto	l3785
  3311  0008AC                     u3370:
  3312  0008AC  282B               	incf	___flmul@bexp^0,w,c
  3313  0008AE  A4D8               	btfss	status,2,c
  3314  0008B0  EF5C  F004         	goto	u3381
  3315  0008B4  EF5E  F004         	goto	u3380
  3316  0008B8                     u3381:
  3317  0008B8  EF66  F004         	goto	l3783
  3318  0008BC                     u3380:
  3319  0008BC  0E00               	movlw	0
  3320  0008BE  6E19               	movwf	___flmul@b^0,c
  3321  0008C0  0E00               	movlw	0
  3322  0008C2  6E1A               	movwf	(___flmul@b+1)^0,c
  3323  0008C4  0E00               	movlw	0
  3324  0008C6  6E1B               	movwf	(___flmul@b+2)^0,c
  3325  0008C8  0E00               	movlw	0
  3326  0008CA  6E1C               	movwf	(___flmul@b+3)^0,c
  3327  0008CC                     l3783:
  3328  0008CC  8E1B               	bsf	(___flmul@b+2)^0,7,c
  3329  0008CE  EF71  F004         	goto	l3787
  3330  0008D2                     l3785:
  3331  0008D2  0E00               	movlw	0
  3332  0008D4  6E19               	movwf	___flmul@b^0,c
  3333  0008D6  0E00               	movlw	0
  3334  0008D8  6E1A               	movwf	(___flmul@b+1)^0,c
  3335  0008DA  0E00               	movlw	0
  3336  0008DC  6E1B               	movwf	(___flmul@b+2)^0,c
  3337  0008DE  0E00               	movlw	0
  3338  0008E0  6E1C               	movwf	(___flmul@b+3)^0,c
  3339  0008E2                     l3787:
  3340  0008E2  5020               	movf	(___flmul@a+3)^0,w,c
  3341  0008E4  0B80               	andlw	128
  3342  0008E6  1A25               	xorwf	___flmul@sign^0,f,c
  3343  0008E8  5020               	movf	(___flmul@a+3)^0,w,c
  3344  0008EA  2420               	addwf	(___flmul@a+3)^0,w,c
  3345  0008EC  6E2A               	movwf	___flmul@aexp^0,c
  3346  0008EE  AE1F               	btfss	(___flmul@a+2)^0,7,c
  3347  0008F0  EF7C  F004         	goto	u3391
  3348  0008F4  EF7E  F004         	goto	u3390
  3349  0008F8                     u3391:
  3350  0008F8  EF7F  F004         	goto	l3795
  3351  0008FC                     u3390:
  3352  0008FC  802A               	bsf	___flmul@aexp^0,0,c
  3353  0008FE                     l3795:
  3354  0008FE  502A               	movf	___flmul@aexp^0,w,c
  3355  000900  B4D8               	btfsc	status,2,c
  3356  000902  EF85  F004         	goto	u3401
  3357  000906  EF87  F004         	goto	u3400
  3358  00090A                     u3401:
  3359  00090A  EF9A  F004         	goto	l3803
  3360  00090E                     u3400:
  3361  00090E  282A               	incf	___flmul@aexp^0,w,c
  3362  000910  A4D8               	btfss	status,2,c
  3363  000912  EF8D  F004         	goto	u3411
  3364  000916  EF8F  F004         	goto	u3410
  3365  00091A                     u3411:
  3366  00091A  EF97  F004         	goto	l3801
  3367  00091E                     u3410:
  3368  00091E  0E00               	movlw	0
  3369  000920  6E1D               	movwf	___flmul@a^0,c
  3370  000922  0E00               	movlw	0
  3371  000924  6E1E               	movwf	(___flmul@a+1)^0,c
  3372  000926  0E00               	movlw	0
  3373  000928  6E1F               	movwf	(___flmul@a+2)^0,c
  3374  00092A  0E00               	movlw	0
  3375  00092C  6E20               	movwf	(___flmul@a+3)^0,c
  3376  00092E                     l3801:
  3377  00092E  8E1F               	bsf	(___flmul@a+2)^0,7,c
  3378  000930  EFA2  F004         	goto	l1054
  3379  000934                     l3803:
  3380  000934  0E00               	movlw	0
  3381  000936  6E1D               	movwf	___flmul@a^0,c
  3382  000938  0E00               	movlw	0
  3383  00093A  6E1E               	movwf	(___flmul@a+1)^0,c
  3384  00093C  0E00               	movlw	0
  3385  00093E  6E1F               	movwf	(___flmul@a+2)^0,c
  3386  000940  0E00               	movlw	0
  3387  000942  6E20               	movwf	(___flmul@a+3)^0,c
  3388  000944                     l1054:
  3389  000944  502A               	movf	___flmul@aexp^0,w,c
  3390  000946  B4D8               	btfsc	status,2,c
  3391  000948  EFA8  F004         	goto	u3421
  3392  00094C  EFAA  F004         	goto	u3420
  3393  000950                     u3421:
  3394  000950  EFB2  F004         	goto	l3807
  3395  000954                     u3420:
  3396  000954  502B               	movf	___flmul@bexp^0,w,c
  3397  000956  A4D8               	btfss	status,2,c
  3398  000958  EFB0  F004         	goto	u3431
  3399  00095C  EFB2  F004         	goto	u3430
  3400  000960                     u3431:
  3401  000960  EFBC  F004         	goto	l3811
  3402  000964                     u3430:
  3403  000964                     l3807:
  3404  000964  0E00               	movlw	0
  3405  000966  6E19               	movwf	?___flmul^0,c
  3406  000968  0E00               	movlw	0
  3407  00096A  6E1A               	movwf	(?___flmul+1)^0,c
  3408  00096C  0E00               	movlw	0
  3409  00096E  6E1B               	movwf	(?___flmul+2)^0,c
  3410  000970  0E00               	movlw	0
  3411  000972  6E1C               	movwf	(?___flmul+3)^0,c
  3412  000974  EF54  F006         	goto	l1058
  3413  000978                     l3811:
  3414  000978  501F               	movf	(___flmul@a+2)^0,w,c
  3415  00097A  0219               	mulwf	___flmul@b^0,c
  3416  00097C  CFF3 F030          	movff	prodl,___flmul@temp
  3417  000980  CFF4 F031          	movff	prodh,___flmul@temp+1
  3418  000984  5030               	movf	___flmul@temp^0,w,c
  3419  000986  6E26               	movwf	___flmul@grs^0,c
  3420  000988  6A27               	clrf	(___flmul@grs+1)^0,c
  3421  00098A  6A28               	clrf	(___flmul@grs+2)^0,c
  3422  00098C  6A29               	clrf	(___flmul@grs+3)^0,c
  3423  00098E  5031               	movf	(___flmul@temp+1)^0,w,c
  3424  000990  6E2C               	movwf	___flmul@prod^0,c
  3425  000992  6A2D               	clrf	(___flmul@prod+1)^0,c
  3426  000994  6A2E               	clrf	(___flmul@prod+2)^0,c
  3427  000996  6A2F               	clrf	(___flmul@prod+3)^0,c
  3428  000998  501E               	movf	(___flmul@a+1)^0,w,c
  3429  00099A  021A               	mulwf	(___flmul@b+1)^0,c
  3430  00099C  CFF3 F030          	movff	prodl,___flmul@temp
  3431  0009A0  CFF4 F031          	movff	prodh,___flmul@temp+1
  3432  0009A4  5030               	movf	___flmul@temp^0,w,c
  3433  0009A6  2626               	addwf	___flmul@grs^0,f,c
  3434  0009A8  0E00               	movlw	0
  3435  0009AA  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3436  0009AC  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3437  0009AE  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3438  0009B0  5031               	movf	(___flmul@temp+1)^0,w,c
  3439  0009B2  262C               	addwf	___flmul@prod^0,f,c
  3440  0009B4  0E00               	movlw	0
  3441  0009B6  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3442  0009B8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3443  0009BA  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3444  0009BC  501D               	movf	___flmul@a^0,w,c
  3445  0009BE  021B               	mulwf	(___flmul@b+2)^0,c
  3446  0009C0  CFF3 F030          	movff	prodl,___flmul@temp
  3447  0009C4  CFF4 F031          	movff	prodh,___flmul@temp+1
  3448  0009C8  5030               	movf	___flmul@temp^0,w,c
  3449  0009CA  2626               	addwf	___flmul@grs^0,f,c
  3450  0009CC  0E00               	movlw	0
  3451  0009CE  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3452  0009D0  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3453  0009D2  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3454  0009D4  5031               	movf	(___flmul@temp+1)^0,w,c
  3455  0009D6  262C               	addwf	___flmul@prod^0,f,c
  3456  0009D8  0E00               	movlw	0
  3457  0009DA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3458  0009DC  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3459  0009DE  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3460  0009E0  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3461  0009E4  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3462  0009E8  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3463  0009EC  6A26               	clrf	___flmul@grs^0,c
  3464  0009EE  501D               	movf	___flmul@a^0,w,c
  3465  0009F0  021A               	mulwf	(___flmul@b+1)^0,c
  3466  0009F2  CFF3 F030          	movff	prodl,___flmul@temp
  3467  0009F6  CFF4 F031          	movff	prodh,___flmul@temp+1
  3468  0009FA  5030               	movf	___flmul@temp^0,w,c
  3469  0009FC  2626               	addwf	___flmul@grs^0,f,c
  3470  0009FE  5031               	movf	(___flmul@temp+1)^0,w,c
  3471  000A00  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3472  000A02  0E00               	movlw	0
  3473  000A04  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3474  000A06  0E00               	movlw	0
  3475  000A08  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3476  000A0A  501E               	movf	(___flmul@a+1)^0,w,c
  3477  000A0C  0219               	mulwf	___flmul@b^0,c
  3478  000A0E  CFF3 F030          	movff	prodl,___flmul@temp
  3479  000A12  CFF4 F031          	movff	prodh,___flmul@temp+1
  3480  000A16  5030               	movf	___flmul@temp^0,w,c
  3481  000A18  2626               	addwf	___flmul@grs^0,f,c
  3482  000A1A  5031               	movf	(___flmul@temp+1)^0,w,c
  3483  000A1C  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3484  000A1E  0E00               	movlw	0
  3485  000A20  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3486  000A22  0E00               	movlw	0
  3487  000A24  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3488  000A26  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3489  000A2A  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3490  000A2E  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3491  000A32  6A26               	clrf	___flmul@grs^0,c
  3492  000A34  501D               	movf	___flmul@a^0,w,c
  3493  000A36  0219               	mulwf	___flmul@b^0,c
  3494  000A38  CFF3 F030          	movff	prodl,___flmul@temp
  3495  000A3C  CFF4 F031          	movff	prodh,___flmul@temp+1
  3496  000A40  5030               	movf	___flmul@temp^0,w,c
  3497  000A42  2626               	addwf	___flmul@grs^0,f,c
  3498  000A44  5031               	movf	(___flmul@temp+1)^0,w,c
  3499  000A46  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3500  000A48  0E00               	movlw	0
  3501  000A4A  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3502  000A4C  0E00               	movlw	0
  3503  000A4E  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3504  000A50  501F               	movf	(___flmul@a+2)^0,w,c
  3505  000A52  021A               	mulwf	(___flmul@b+1)^0,c
  3506  000A54  CFF3 F030          	movff	prodl,___flmul@temp
  3507  000A58  CFF4 F031          	movff	prodh,___flmul@temp+1
  3508  000A5C  5030               	movf	___flmul@temp^0,w,c
  3509  000A5E  262C               	addwf	___flmul@prod^0,f,c
  3510  000A60  5031               	movf	(___flmul@temp+1)^0,w,c
  3511  000A62  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3512  000A64  0E00               	movlw	0
  3513  000A66  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3514  000A68  0E00               	movlw	0
  3515  000A6A  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3516  000A6C  501E               	movf	(___flmul@a+1)^0,w,c
  3517  000A6E  021B               	mulwf	(___flmul@b+2)^0,c
  3518  000A70  CFF3 F030          	movff	prodl,___flmul@temp
  3519  000A74  CFF4 F031          	movff	prodh,___flmul@temp+1
  3520  000A78  5030               	movf	___flmul@temp^0,w,c
  3521  000A7A  262C               	addwf	___flmul@prod^0,f,c
  3522  000A7C  5031               	movf	(___flmul@temp+1)^0,w,c
  3523  000A7E  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3524  000A80  0E00               	movlw	0
  3525  000A82  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3526  000A84  0E00               	movlw	0
  3527  000A86  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3528  000A88  501F               	movf	(___flmul@a+2)^0,w,c
  3529  000A8A  021B               	mulwf	(___flmul@b+2)^0,c
  3530  000A8C  CFF3 F030          	movff	prodl,___flmul@temp
  3531  000A90  CFF4 F031          	movff	prodh,___flmul@temp+1
  3532  000A94  5030               	movf	___flmul@temp^0,w,c
  3533  000A96  6E21               	movwf	??___flmul^0,c
  3534  000A98  5031               	movf	(___flmul@temp+1)^0,w,c
  3535  000A9A  6E22               	movwf	(??___flmul+1)^0,c
  3536  000A9C  6A23               	clrf	(??___flmul+2)^0,c
  3537  000A9E  6A24               	clrf	(??___flmul+3)^0,c
  3538  000AA0  C023  F024         	movff	??___flmul+2,??___flmul+3
  3539  000AA4  C022  F023         	movff	??___flmul+1,??___flmul+2
  3540  000AA8  C021  F022         	movff	??___flmul,??___flmul+1
  3541  000AAC  6A21               	clrf	??___flmul^0,c
  3542  000AAE  5021               	movf	??___flmul^0,w,c
  3543  000AB0  262C               	addwf	___flmul@prod^0,f,c
  3544  000AB2  5022               	movf	(??___flmul+1)^0,w,c
  3545  000AB4  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3546  000AB6  5023               	movf	(??___flmul+2)^0,w,c
  3547  000AB8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3548  000ABA  5024               	movf	(??___flmul+3)^0,w,c
  3549  000ABC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3550  000ABE  C026  F021         	movff	___flmul@grs,??___flmul
  3551  000AC2  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  3552  000AC6  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  3553  000ACA  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  3554  000ACE  0E19               	movlw	25
  3555  000AD0  EF6F  F005         	goto	u3440
  3556  000AD4                     u3445:
  3557  000AD4  90D8               	bcf	status,0,c
  3558  000AD6  3224               	rrcf	(??___flmul+3)^0,f,c
  3559  000AD8  3223               	rrcf	(??___flmul+2)^0,f,c
  3560  000ADA  3222               	rrcf	(??___flmul+1)^0,f,c
  3561  000ADC  3221               	rrcf	??___flmul^0,f,c
  3562  000ADE                     u3440:
  3563  000ADE  2EE8               	decfsz	wreg,f,c
  3564  000AE0  EF6A  F005         	goto	u3445
  3565  000AE4  5021               	movf	??___flmul^0,w,c
  3566  000AE6  262C               	addwf	___flmul@prod^0,f,c
  3567  000AE8  5022               	movf	(??___flmul+1)^0,w,c
  3568  000AEA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3569  000AEC  5023               	movf	(??___flmul+2)^0,w,c
  3570  000AEE  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3571  000AF0  5024               	movf	(??___flmul+3)^0,w,c
  3572  000AF2  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3573  000AF4  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3574  000AF8  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3575  000AFC  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3576  000B00  6A26               	clrf	___flmul@grs^0,c
  3577  000B02  502A               	movf	___flmul@aexp^0,w,c
  3578  000B04  C02B  F021         	movff	___flmul@bexp,??___flmul
  3579  000B08  6A22               	clrf	(??___flmul+1)^0,c
  3580  000B0A  2621               	addwf	??___flmul^0,f,c
  3581  000B0C  0E00               	movlw	0
  3582  000B0E  2222               	addwfc	(??___flmul+1)^0,f,c
  3583  000B10  0E82               	movlw	130
  3584  000B12  2421               	addwf	??___flmul^0,w,c
  3585  000B14  6E30               	movwf	___flmul@temp^0,c
  3586  000B16  0EFF               	movlw	255
  3587  000B18  2022               	addwfc	(??___flmul+1)^0,w,c
  3588  000B1A  6E31               	movwf	(___flmul@temp+1)^0,c
  3589  000B1C  EFA5  F005         	goto	l3859
  3590  000B20                     l3853:
  3591  000B20  90D8               	bcf	status,0,c
  3592  000B22  362C               	rlcf	___flmul@prod^0,f,c
  3593  000B24  362D               	rlcf	(___flmul@prod+1)^0,f,c
  3594  000B26  362E               	rlcf	(___flmul@prod+2)^0,f,c
  3595  000B28  362F               	rlcf	(___flmul@prod+3)^0,f,c
  3596  000B2A  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3597  000B2C  EF9A  F005         	goto	u3451
  3598  000B30  EF9C  F005         	goto	u3450
  3599  000B34                     u3451:
  3600  000B34  EF9D  F005         	goto	l1061
  3601  000B38                     u3450:
  3602  000B38  802C               	bsf	___flmul@prod^0,0,c
  3603  000B3A                     l1061:
  3604  000B3A  90D8               	bcf	status,0,c
  3605  000B3C  3626               	rlcf	___flmul@grs^0,f,c
  3606  000B3E  3627               	rlcf	(___flmul@grs+1)^0,f,c
  3607  000B40  3628               	rlcf	(___flmul@grs+2)^0,f,c
  3608  000B42  3629               	rlcf	(___flmul@grs+3)^0,f,c
  3609  000B44  0630               	decf	___flmul@temp^0,f,c
  3610  000B46  A0D8               	btfss	status,0,c
  3611  000B48  0631               	decf	(___flmul@temp+1)^0,f,c
  3612  000B4A                     l3859:
  3613  000B4A  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  3614  000B4C  EFAA  F005         	goto	u3461
  3615  000B50  EFAC  F005         	goto	u3460
  3616  000B54                     u3461:
  3617  000B54  EF90  F005         	goto	l3853
  3618  000B58                     u3460:
  3619  000B58  0E00               	movlw	0
  3620  000B5A  6E2A               	movwf	___flmul@aexp^0,c
  3621  000B5C  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3622  000B5E  EFB3  F005         	goto	u3471
  3623  000B62  EFB5  F005         	goto	u3470
  3624  000B66                     u3471:
  3625  000B66  EFD9  F005         	goto	l1063
  3626  000B6A                     u3470:
  3627  000B6A  0EFF               	movlw	255
  3628  000B6C  1426               	andwf	___flmul@grs^0,w,c
  3629  000B6E  6E21               	movwf	??___flmul^0,c
  3630  000B70  0EFF               	movlw	255
  3631  000B72  1427               	andwf	(___flmul@grs+1)^0,w,c
  3632  000B74  6E22               	movwf	(??___flmul+1)^0,c
  3633  000B76  0EFF               	movlw	255
  3634  000B78  1428               	andwf	(___flmul@grs+2)^0,w,c
  3635  000B7A  6E23               	movwf	(??___flmul+2)^0,c
  3636  000B7C  0E7F               	movlw	127
  3637  000B7E  1429               	andwf	(___flmul@grs+3)^0,w,c
  3638  000B80  6E24               	movwf	(??___flmul+3)^0,c
  3639  000B82  5021               	movf	??___flmul^0,w,c
  3640  000B84  1022               	iorwf	(??___flmul+1)^0,w,c
  3641  000B86  1023               	iorwf	(??___flmul+2)^0,w,c
  3642  000B88  1024               	iorwf	(??___flmul+3)^0,w,c
  3643  000B8A  B4D8               	btfsc	status,2,c
  3644  000B8C  EFCA  F005         	goto	u3481
  3645  000B90  EFCC  F005         	goto	u3480
  3646  000B94                     u3481:
  3647  000B94  EFD0  F005         	goto	l1064
  3648  000B98                     u3480:
  3649  000B98                     l3867:
  3650  000B98  0E01               	movlw	1
  3651  000B9A  6E2A               	movwf	___flmul@aexp^0,c
  3652  000B9C  EFD9  F005         	goto	l1063
  3653  000BA0                     l1064:
  3654  000BA0  A02C               	btfss	___flmul@prod^0,0,c
  3655  000BA2  EFD5  F005         	goto	u3491
  3656  000BA6  EFD7  F005         	goto	u3490
  3657  000BAA                     u3491:
  3658  000BAA  EFD9  F005         	goto	l1063
  3659  000BAE                     u3490:
  3660  000BAE  EFCC  F005         	goto	l3867
  3661  000BB2                     l1063:
  3662  000BB2  502A               	movf	___flmul@aexp^0,w,c
  3663  000BB4  B4D8               	btfsc	status,2,c
  3664  000BB6  EFDF  F005         	goto	u3501
  3665  000BBA  EFE1  F005         	goto	u3500
  3666  000BBE                     u3501:
  3667  000BBE  EF05  F006         	goto	l3879
  3668  000BC2                     u3500:
  3669  000BC2  0E01               	movlw	1
  3670  000BC4  262C               	addwf	___flmul@prod^0,f,c
  3671  000BC6  0E00               	movlw	0
  3672  000BC8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3673  000BCA  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3674  000BCC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3675  000BCE  A02F               	btfss	(___flmul@prod+3)^0,0,c
  3676  000BD0  EFEC  F005         	goto	u3511
  3677  000BD4  EFEE  F005         	goto	u3510
  3678  000BD8                     u3511:
  3679  000BD8  EF05  F006         	goto	l3879
  3680  000BDC                     u3510:
  3681  000BDC  C02C  F021         	movff	___flmul@prod,??___flmul
  3682  000BE0  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  3683  000BE4  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  3684  000BE8  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  3685  000BEC  3424               	rlcf	(??___flmul+3)^0,w,c
  3686  000BEE  3224               	rrcf	(??___flmul+3)^0,f,c
  3687  000BF0  3223               	rrcf	(??___flmul+2)^0,f,c
  3688  000BF2  3222               	rrcf	(??___flmul+1)^0,f,c
  3689  000BF4  3221               	rrcf	??___flmul^0,f,c
  3690  000BF6  C021  F02C         	movff	??___flmul,___flmul@prod
  3691  000BFA  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  3692  000BFE  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  3693  000C02  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  3694  000C06  4A30               	infsnz	___flmul@temp^0,f,c
  3695  000C08  2A31               	incf	(___flmul@temp+1)^0,f,c
  3696  000C0A                     l3879:
  3697  000C0A  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3698  000C0C  EF10  F006         	goto	u3521
  3699  000C10  5031               	movf	(___flmul@temp+1)^0,w,c
  3700  000C12  E108               	bnz	u3520
  3701  000C14  2830               	incf	___flmul@temp^0,w,c
  3702  000C16  A0D8               	btfss	status,0,c
  3703  000C18  EF10  F006         	goto	u3521
  3704  000C1C  EF12  F006         	goto	u3520
  3705  000C20                     u3521:
  3706  000C20  EF1C  F006         	goto	l3883
  3707  000C24                     u3520:
  3708  000C24  0E00               	movlw	0
  3709  000C26  6E2C               	movwf	___flmul@prod^0,c
  3710  000C28  0E00               	movlw	0
  3711  000C2A  6E2D               	movwf	(___flmul@prod+1)^0,c
  3712  000C2C  0E80               	movlw	128
  3713  000C2E  6E2E               	movwf	(___flmul@prod+2)^0,c
  3714  000C30  0E7F               	movlw	127
  3715  000C32  6E2F               	movwf	(___flmul@prod+3)^0,c
  3716  000C34  EF4A  F006         	goto	l3895
  3717  000C38                     l3883:
  3718  000C38  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3719  000C3A  EF29  F006         	goto	u3530
  3720  000C3E  5031               	movf	(___flmul@temp+1)^0,w,c
  3721  000C40  E106               	bnz	u3531
  3722  000C42  0430               	decf	___flmul@temp^0,w,c
  3723  000C44  B0D8               	btfsc	status,0,c
  3724  000C46  EF27  F006         	goto	u3531
  3725  000C4A  EF29  F006         	goto	u3530
  3726  000C4E                     u3531:
  3727  000C4E  EF35  F006         	goto	l1071
  3728  000C52                     u3530:
  3729  000C52  0E00               	movlw	0
  3730  000C54  6E2C               	movwf	___flmul@prod^0,c
  3731  000C56  0E00               	movlw	0
  3732  000C58  6E2D               	movwf	(___flmul@prod+1)^0,c
  3733  000C5A  0E00               	movlw	0
  3734  000C5C  6E2E               	movwf	(___flmul@prod+2)^0,c
  3735  000C5E  0E00               	movlw	0
  3736  000C60  6E2F               	movwf	(___flmul@prod+3)^0,c
  3737  000C62  0E00               	movlw	0
  3738  000C64  6E25               	movwf	___flmul@sign^0,c
  3739  000C66  EF4A  F006         	goto	l3895
  3740  000C6A                     l1071:
  3741  000C6A  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  3742  000C6E  0EFF               	movlw	255
  3743  000C70  162C               	andwf	___flmul@prod^0,f,c
  3744  000C72  0EFF               	movlw	255
  3745  000C74  162D               	andwf	(___flmul@prod+1)^0,f,c
  3746  000C76  0E7F               	movlw	127
  3747  000C78  162E               	andwf	(___flmul@prod+2)^0,f,c
  3748  000C7A  0E00               	movlw	0
  3749  000C7C  162F               	andwf	(___flmul@prod+3)^0,f,c
  3750  000C7E  A02B               	btfss	___flmul@bexp^0,0,c
  3751  000C80  EF44  F006         	goto	u3541
  3752  000C84  EF46  F006         	goto	u3540
  3753  000C88                     u3541:
  3754  000C88  EF47  F006         	goto	l3893
  3755  000C8C                     u3540:
  3756  000C8C  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  3757  000C8E                     l3893:
  3758  000C8E  90D8               	bcf	status,0,c
  3759  000C90  302B               	rrcf	___flmul@bexp^0,w,c
  3760  000C92  6E2F               	movwf	(___flmul@prod+3)^0,c
  3761  000C94                     l3895:
  3762  000C94  5025               	movf	___flmul@sign^0,w,c
  3763  000C96  122F               	iorwf	(___flmul@prod+3)^0,f,c
  3764  000C98  C02C  F019         	movff	___flmul@prod,?___flmul
  3765  000C9C  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  3766  000CA0  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  3767  000CA4  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  3768  000CA8                     l1058:
  3769  000CA8  0012               	return		;funcret
  3770  000CAA                     __end_of___flmul:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function ___fldiv *****************
  3774 ;; Defined at:
  3775 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  b               4   49[COMRAM] unsigned char 
  3778 ;;  a               4   53[COMRAM] unsigned char 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  grs             4   68[COMRAM] unsigned long 
  3781 ;;  rem             4   61[COMRAM] unsigned long 
  3782 ;;  new_exp         2   66[COMRAM] short 
  3783 ;;  aexp            1   73[COMRAM] unsigned char 
  3784 ;;  bexp            1   72[COMRAM] unsigned char 
  3785 ;;  sign            1   65[COMRAM] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  4   49[COMRAM] unsigned char 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3795 ;;      Params:         8       0       0       0       0       0       0       0       0
  3796 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3797 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3798 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3799 ;;Total ram usage:       25 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    2
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_appADC
  3806 ;;		_appBat
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text18
  3811  000CAA                     __ptext18:
  3812                           	callstack 0
  3813  000CAA                     ___fldiv:
  3814                           	callstack 26
  3815  000CAA  5035               	movf	(___fldiv@b+3)^0,w,c
  3816  000CAC  0B80               	andlw	128
  3817  000CAE  6E42               	movwf	___fldiv@sign^0,c
  3818  000CB0  5035               	movf	(___fldiv@b+3)^0,w,c
  3819  000CB2  2435               	addwf	(___fldiv@b+3)^0,w,c
  3820  000CB4  6E49               	movwf	___fldiv@bexp^0,c
  3821  000CB6  AE34               	btfss	(___fldiv@b+2)^0,7,c
  3822  000CB8  EF60  F006         	goto	u3131
  3823  000CBC  EF62  F006         	goto	u3130
  3824  000CC0                     u3131:
  3825  000CC0  EF63  F006         	goto	l3639
  3826  000CC4                     u3130:
  3827  000CC4  8049               	bsf	___fldiv@bexp^0,0,c
  3828  000CC6                     l3639:
  3829  000CC6  5049               	movf	___fldiv@bexp^0,w,c
  3830  000CC8  B4D8               	btfsc	status,2,c
  3831  000CCA  EF69  F006         	goto	u3141
  3832  000CCE  EF6B  F006         	goto	u3140
  3833  000CD2                     u3141:
  3834  000CD2  EF80  F006         	goto	l3649
  3835  000CD6                     u3140:
  3836  000CD6  2849               	incf	___fldiv@bexp^0,w,c
  3837  000CD8  A4D8               	btfss	status,2,c
  3838  000CDA  EF71  F006         	goto	u3151
  3839  000CDE  EF73  F006         	goto	u3150
  3840  000CE2                     u3151:
  3841  000CE2  EF7B  F006         	goto	l3645
  3842  000CE6                     u3150:
  3843  000CE6  0E00               	movlw	0
  3844  000CE8  6E32               	movwf	___fldiv@b^0,c
  3845  000CEA  0E00               	movlw	0
  3846  000CEC  6E33               	movwf	(___fldiv@b+1)^0,c
  3847  000CEE  0E00               	movlw	0
  3848  000CF0  6E34               	movwf	(___fldiv@b+2)^0,c
  3849  000CF2  0E00               	movlw	0
  3850  000CF4  6E35               	movwf	(___fldiv@b+3)^0,c
  3851  000CF6                     l3645:
  3852  000CF6  8E34               	bsf	(___fldiv@b+2)^0,7,c
  3853  000CF8  0E00               	movlw	0
  3854  000CFA  6E35               	movwf	(___fldiv@b+3)^0,c
  3855  000CFC  EF88  F006         	goto	l3651
  3856  000D00                     l3649:
  3857  000D00  0E00               	movlw	0
  3858  000D02  6E32               	movwf	___fldiv@b^0,c
  3859  000D04  0E00               	movlw	0
  3860  000D06  6E33               	movwf	(___fldiv@b+1)^0,c
  3861  000D08  0E00               	movlw	0
  3862  000D0A  6E34               	movwf	(___fldiv@b+2)^0,c
  3863  000D0C  0E00               	movlw	0
  3864  000D0E  6E35               	movwf	(___fldiv@b+3)^0,c
  3865  000D10                     l3651:
  3866  000D10  5039               	movf	(___fldiv@a+3)^0,w,c
  3867  000D12  0B80               	andlw	128
  3868  000D14  1A42               	xorwf	___fldiv@sign^0,f,c
  3869  000D16  5039               	movf	(___fldiv@a+3)^0,w,c
  3870  000D18  2439               	addwf	(___fldiv@a+3)^0,w,c
  3871  000D1A  6E4A               	movwf	___fldiv@aexp^0,c
  3872  000D1C  AE38               	btfss	(___fldiv@a+2)^0,7,c
  3873  000D1E  EF93  F006         	goto	u3161
  3874  000D22  EF95  F006         	goto	u3160
  3875  000D26                     u3161:
  3876  000D26  EF96  F006         	goto	l3659
  3877  000D2A                     u3160:
  3878  000D2A  804A               	bsf	___fldiv@aexp^0,0,c
  3879  000D2C                     l3659:
  3880  000D2C  504A               	movf	___fldiv@aexp^0,w,c
  3881  000D2E  B4D8               	btfsc	status,2,c
  3882  000D30  EF9C  F006         	goto	u3171
  3883  000D34  EF9E  F006         	goto	u3170
  3884  000D38                     u3171:
  3885  000D38  EFB3  F006         	goto	l3669
  3886  000D3C                     u3170:
  3887  000D3C  284A               	incf	___fldiv@aexp^0,w,c
  3888  000D3E  A4D8               	btfss	status,2,c
  3889  000D40  EFA4  F006         	goto	u3181
  3890  000D44  EFA6  F006         	goto	u3180
  3891  000D48                     u3181:
  3892  000D48  EFAE  F006         	goto	l3665
  3893  000D4C                     u3180:
  3894  000D4C  0E00               	movlw	0
  3895  000D4E  6E36               	movwf	___fldiv@a^0,c
  3896  000D50  0E00               	movlw	0
  3897  000D52  6E37               	movwf	(___fldiv@a+1)^0,c
  3898  000D54  0E00               	movlw	0
  3899  000D56  6E38               	movwf	(___fldiv@a+2)^0,c
  3900  000D58  0E00               	movlw	0
  3901  000D5A  6E39               	movwf	(___fldiv@a+3)^0,c
  3902  000D5C                     l3665:
  3903  000D5C  8E38               	bsf	(___fldiv@a+2)^0,7,c
  3904  000D5E  0E00               	movlw	0
  3905  000D60  6E39               	movwf	(___fldiv@a+3)^0,c
  3906  000D62  EFBB  F006         	goto	l3671
  3907  000D66                     l3669:
  3908  000D66  0E00               	movlw	0
  3909  000D68  6E36               	movwf	___fldiv@a^0,c
  3910  000D6A  0E00               	movlw	0
  3911  000D6C  6E37               	movwf	(___fldiv@a+1)^0,c
  3912  000D6E  0E00               	movlw	0
  3913  000D70  6E38               	movwf	(___fldiv@a+2)^0,c
  3914  000D72  0E00               	movlw	0
  3915  000D74  6E39               	movwf	(___fldiv@a+3)^0,c
  3916  000D76                     l3671:
  3917  000D76  5036               	movf	___fldiv@a^0,w,c
  3918  000D78  1037               	iorwf	(___fldiv@a+1)^0,w,c
  3919  000D7A  1038               	iorwf	(___fldiv@a+2)^0,w,c
  3920  000D7C  1039               	iorwf	(___fldiv@a+3)^0,w,c
  3921  000D7E  A4D8               	btfss	status,2,c
  3922  000D80  EFC4  F006         	goto	u3191
  3923  000D84  EFC6  F006         	goto	u3190
  3924  000D88                     u3191:
  3925  000D88  EFDE  F006         	goto	l3683
  3926  000D8C                     u3190:
  3927  000D8C  0E00               	movlw	0
  3928  000D8E  6E32               	movwf	___fldiv@b^0,c
  3929  000D90  0E00               	movlw	0
  3930  000D92  6E33               	movwf	(___fldiv@b+1)^0,c
  3931  000D94  0E00               	movlw	0
  3932  000D96  6E34               	movwf	(___fldiv@b+2)^0,c
  3933  000D98  0E00               	movlw	0
  3934  000D9A  6E35               	movwf	(___fldiv@b+3)^0,c
  3935  000D9C  0E80               	movlw	128
  3936  000D9E  1234               	iorwf	(___fldiv@b+2)^0,f,c
  3937  000DA0  0E7F               	movlw	127
  3938  000DA2  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3939  000DA4                     l3677:
  3940  000DA4  5042               	movf	___fldiv@sign^0,w,c
  3941  000DA6  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3942  000DA8  C032  F032         	movff	___fldiv@b,?___fldiv
  3943  000DAC  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  3944  000DB0  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  3945  000DB4  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  3946  000DB8  EF21  F008         	goto	l1022
  3947  000DBC                     l3683:
  3948  000DBC  5049               	movf	___fldiv@bexp^0,w,c
  3949  000DBE  A4D8               	btfss	status,2,c
  3950  000DC0  EFE4  F006         	goto	u3201
  3951  000DC4  EFE6  F006         	goto	u3200
  3952  000DC8                     u3201:
  3953  000DC8  EFF0  F006         	goto	l3691
  3954  000DCC                     u3200:
  3955  000DCC  0E00               	movlw	0
  3956  000DCE  6E32               	movwf	?___fldiv^0,c
  3957  000DD0  0E00               	movlw	0
  3958  000DD2  6E33               	movwf	(?___fldiv+1)^0,c
  3959  000DD4  0E00               	movlw	0
  3960  000DD6  6E34               	movwf	(?___fldiv+2)^0,c
  3961  000DD8  0E00               	movlw	0
  3962  000DDA  6E35               	movwf	(?___fldiv+3)^0,c
  3963  000DDC  EF21  F008         	goto	l1022
  3964  000DE0                     l3691:
  3965  000DE0  504A               	movf	___fldiv@aexp^0,w,c
  3966  000DE2  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  3967  000DE6  6A3B               	clrf	(??___fldiv+1)^0,c
  3968  000DE8  5E3A               	subwf	??___fldiv^0,f,c
  3969  000DEA  0E00               	movlw	0
  3970  000DEC  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  3971  000DEE  0E7F               	movlw	127
  3972  000DF0  243A               	addwf	??___fldiv^0,w,c
  3973  000DF2  6E43               	movwf	___fldiv@new_exp^0,c
  3974  000DF4  0E00               	movlw	0
  3975  000DF6  203B               	addwfc	(??___fldiv+1)^0,w,c
  3976  000DF8  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  3977  000DFA  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  3978  000DFE  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  3979  000E02  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  3980  000E06  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  3981  000E0A  0E00               	movlw	0
  3982  000E0C  6E32               	movwf	___fldiv@b^0,c
  3983  000E0E  0E00               	movlw	0
  3984  000E10  6E33               	movwf	(___fldiv@b+1)^0,c
  3985  000E12  0E00               	movlw	0
  3986  000E14  6E34               	movwf	(___fldiv@b+2)^0,c
  3987  000E16  0E00               	movlw	0
  3988  000E18  6E35               	movwf	(___fldiv@b+3)^0,c
  3989  000E1A  0E00               	movlw	0
  3990  000E1C  6E45               	movwf	___fldiv@grs^0,c
  3991  000E1E  0E00               	movlw	0
  3992  000E20  6E46               	movwf	(___fldiv@grs+1)^0,c
  3993  000E22  0E00               	movlw	0
  3994  000E24  6E47               	movwf	(___fldiv@grs+2)^0,c
  3995  000E26  0E00               	movlw	0
  3996  000E28  6E48               	movwf	(___fldiv@grs+3)^0,c
  3997  000E2A  0E00               	movlw	0
  3998  000E2C  6E4A               	movwf	___fldiv@aexp^0,c
  3999  000E2E  EF51  F007         	goto	l1024
  4000  000E32                     l3701:
  4001  000E32  504A               	movf	___fldiv@aexp^0,w,c
  4002  000E34  B4D8               	btfsc	status,2,c
  4003  000E36  EF1F  F007         	goto	u3211
  4004  000E3A  EF21  F007         	goto	u3210
  4005  000E3E                     u3211:
  4006  000E3E  EF38  F007         	goto	l3709
  4007  000E42                     u3210:
  4008  000E42  90D8               	bcf	status,0,c
  4009  000E44  363E               	rlcf	___fldiv@rem^0,f,c
  4010  000E46  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  4011  000E48  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  4012  000E4A  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  4013  000E4C  90D8               	bcf	status,0,c
  4014  000E4E  3632               	rlcf	___fldiv@b^0,f,c
  4015  000E50  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4016  000E52  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4017  000E54  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4018  000E56  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4019  000E58  EF30  F007         	goto	u3221
  4020  000E5C  EF32  F007         	goto	u3220
  4021  000E60                     u3221:
  4022  000E60  EF33  F007         	goto	l1027
  4023  000E64                     u3220:
  4024  000E64  8032               	bsf	___fldiv@b^0,0,c
  4025  000E66                     l1027:
  4026  000E66  90D8               	bcf	status,0,c
  4027  000E68  3645               	rlcf	___fldiv@grs^0,f,c
  4028  000E6A  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4029  000E6C  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4030  000E6E  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4031  000E70                     l3709:
  4032  000E70  5036               	movf	___fldiv@a^0,w,c
  4033  000E72  5C3E               	subwf	___fldiv@rem^0,w,c
  4034  000E74  5037               	movf	(___fldiv@a+1)^0,w,c
  4035  000E76  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  4036  000E78  5038               	movf	(___fldiv@a+2)^0,w,c
  4037  000E7A  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  4038  000E7C  5039               	movf	(___fldiv@a+3)^0,w,c
  4039  000E7E  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  4040  000E80  A0D8               	btfss	status,0,c
  4041  000E82  EF45  F007         	goto	u3231
  4042  000E86  EF47  F007         	goto	u3230
  4043  000E8A                     u3231:
  4044  000E8A  EF50  F007         	goto	l3715
  4045  000E8E                     u3230:
  4046  000E8E  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  4047  000E90  5036               	movf	___fldiv@a^0,w,c
  4048  000E92  5E3E               	subwf	___fldiv@rem^0,f,c
  4049  000E94  5037               	movf	(___fldiv@a+1)^0,w,c
  4050  000E96  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  4051  000E98  5038               	movf	(___fldiv@a+2)^0,w,c
  4052  000E9A  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  4053  000E9C  5039               	movf	(___fldiv@a+3)^0,w,c
  4054  000E9E  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  4055  000EA0                     l3715:
  4056  000EA0  2A4A               	incf	___fldiv@aexp^0,f,c
  4057  000EA2                     l1024:
  4058  000EA2  0E19               	movlw	25
  4059  000EA4  644A               	cpfsgt	___fldiv@aexp^0,c
  4060  000EA6  EF57  F007         	goto	u3241
  4061  000EAA  EF59  F007         	goto	u3240
  4062  000EAE                     u3241:
  4063  000EAE  EF19  F007         	goto	l3701
  4064  000EB2                     u3240:
  4065  000EB2  503E               	movf	___fldiv@rem^0,w,c
  4066  000EB4  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  4067  000EB6  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  4068  000EB8  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  4069  000EBA  B4D8               	btfsc	status,2,c
  4070  000EBC  EF62  F007         	goto	u3251
  4071  000EC0  EF64  F007         	goto	u3250
  4072  000EC4                     u3251:
  4073  000EC4  EF7C  F007         	goto	l3727
  4074  000EC8                     u3250:
  4075  000EC8  8045               	bsf	___fldiv@grs^0,0,c
  4076  000ECA  EF7C  F007         	goto	l3727
  4077  000ECE                     l3721:
  4078  000ECE  90D8               	bcf	status,0,c
  4079  000ED0  3632               	rlcf	___fldiv@b^0,f,c
  4080  000ED2  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4081  000ED4  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4082  000ED6  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4083  000ED8  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4084  000EDA  EF71  F007         	goto	u3261
  4085  000EDE  EF73  F007         	goto	u3260
  4086  000EE2                     u3261:
  4087  000EE2  EF74  F007         	goto	l1033
  4088  000EE6                     u3260:
  4089  000EE6  8032               	bsf	___fldiv@b^0,0,c
  4090  000EE8                     l1033:
  4091  000EE8  90D8               	bcf	status,0,c
  4092  000EEA  3645               	rlcf	___fldiv@grs^0,f,c
  4093  000EEC  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4094  000EEE  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4095  000EF0  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4096  000EF2  0643               	decf	___fldiv@new_exp^0,f,c
  4097  000EF4  A0D8               	btfss	status,0,c
  4098  000EF6  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  4099  000EF8                     l3727:
  4100  000EF8  AE34               	btfss	(___fldiv@b+2)^0,7,c
  4101  000EFA  EF81  F007         	goto	u3271
  4102  000EFE  EF83  F007         	goto	u3270
  4103  000F02                     u3271:
  4104  000F02  EF67  F007         	goto	l3721
  4105  000F06                     u3270:
  4106  000F06  0E00               	movlw	0
  4107  000F08  6E4A               	movwf	___fldiv@aexp^0,c
  4108  000F0A  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4109  000F0C  EF8A  F007         	goto	u3281
  4110  000F10  EF8C  F007         	goto	u3280
  4111  000F14                     u3281:
  4112  000F14  EFB0  F007         	goto	l1035
  4113  000F18                     u3280:
  4114  000F18  0EFF               	movlw	255
  4115  000F1A  1445               	andwf	___fldiv@grs^0,w,c
  4116  000F1C  6E3A               	movwf	??___fldiv^0,c
  4117  000F1E  0EFF               	movlw	255
  4118  000F20  1446               	andwf	(___fldiv@grs+1)^0,w,c
  4119  000F22  6E3B               	movwf	(??___fldiv+1)^0,c
  4120  000F24  0EFF               	movlw	255
  4121  000F26  1447               	andwf	(___fldiv@grs+2)^0,w,c
  4122  000F28  6E3C               	movwf	(??___fldiv+2)^0,c
  4123  000F2A  0E7F               	movlw	127
  4124  000F2C  1448               	andwf	(___fldiv@grs+3)^0,w,c
  4125  000F2E  6E3D               	movwf	(??___fldiv+3)^0,c
  4126  000F30  503A               	movf	??___fldiv^0,w,c
  4127  000F32  103B               	iorwf	(??___fldiv+1)^0,w,c
  4128  000F34  103C               	iorwf	(??___fldiv+2)^0,w,c
  4129  000F36  103D               	iorwf	(??___fldiv+3)^0,w,c
  4130  000F38  B4D8               	btfsc	status,2,c
  4131  000F3A  EFA1  F007         	goto	u3291
  4132  000F3E  EFA3  F007         	goto	u3290
  4133  000F42                     u3291:
  4134  000F42  EFA7  F007         	goto	l1036
  4135  000F46                     u3290:
  4136  000F46                     l3735:
  4137  000F46  0E01               	movlw	1
  4138  000F48  6E4A               	movwf	___fldiv@aexp^0,c
  4139  000F4A  EFB0  F007         	goto	l1035
  4140  000F4E                     l1036:
  4141  000F4E  A032               	btfss	___fldiv@b^0,0,c
  4142  000F50  EFAC  F007         	goto	u3301
  4143  000F54  EFAE  F007         	goto	u3300
  4144  000F58                     u3301:
  4145  000F58  EFB0  F007         	goto	l1035
  4146  000F5C                     u3300:
  4147  000F5C  EFA3  F007         	goto	l3735
  4148  000F60                     l1035:
  4149  000F60  504A               	movf	___fldiv@aexp^0,w,c
  4150  000F62  B4D8               	btfsc	status,2,c
  4151  000F64  EFB6  F007         	goto	u3311
  4152  000F68  EFB8  F007         	goto	u3310
  4153  000F6C                     u3311:
  4154  000F6C  EFDC  F007         	goto	l3747
  4155  000F70                     u3310:
  4156  000F70  0E01               	movlw	1
  4157  000F72  2632               	addwf	___fldiv@b^0,f,c
  4158  000F74  0E00               	movlw	0
  4159  000F76  2233               	addwfc	(___fldiv@b+1)^0,f,c
  4160  000F78  2234               	addwfc	(___fldiv@b+2)^0,f,c
  4161  000F7A  2235               	addwfc	(___fldiv@b+3)^0,f,c
  4162  000F7C  A035               	btfss	(___fldiv@b+3)^0,0,c
  4163  000F7E  EFC3  F007         	goto	u3321
  4164  000F82  EFC5  F007         	goto	u3320
  4165  000F86                     u3321:
  4166  000F86  EFDC  F007         	goto	l3747
  4167  000F8A                     u3320:
  4168  000F8A  C032  F03A         	movff	___fldiv@b,??___fldiv
  4169  000F8E  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  4170  000F92  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  4171  000F96  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  4172  000F9A  343D               	rlcf	(??___fldiv+3)^0,w,c
  4173  000F9C  323D               	rrcf	(??___fldiv+3)^0,f,c
  4174  000F9E  323C               	rrcf	(??___fldiv+2)^0,f,c
  4175  000FA0  323B               	rrcf	(??___fldiv+1)^0,f,c
  4176  000FA2  323A               	rrcf	??___fldiv^0,f,c
  4177  000FA4  C03A  F032         	movff	??___fldiv,___fldiv@b
  4178  000FA8  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  4179  000FAC  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  4180  000FB0  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  4181  000FB4  4A43               	infsnz	___fldiv@new_exp^0,f,c
  4182  000FB6  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  4183  000FB8                     l3747:
  4184  000FB8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4185  000FBA  EFE7  F007         	goto	u3331
  4186  000FBE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4187  000FC0  E108               	bnz	u3330
  4188  000FC2  2843               	incf	___fldiv@new_exp^0,w,c
  4189  000FC4  A0D8               	btfss	status,0,c
  4190  000FC6  EFE7  F007         	goto	u3331
  4191  000FCA  EFE9  F007         	goto	u3330
  4192  000FCE                     u3331:
  4193  000FCE  EFF4  F007         	goto	l3751
  4194  000FD2                     u3330:
  4195  000FD2  0E00               	movlw	0
  4196  000FD4  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4197  000FD6  6843               	setf	___fldiv@new_exp^0,c
  4198  000FD8  0E00               	movlw	0
  4199  000FDA  6E32               	movwf	___fldiv@b^0,c
  4200  000FDC  0E00               	movlw	0
  4201  000FDE  6E33               	movwf	(___fldiv@b+1)^0,c
  4202  000FE0  0E00               	movlw	0
  4203  000FE2  6E34               	movwf	(___fldiv@b+2)^0,c
  4204  000FE4  0E00               	movlw	0
  4205  000FE6  6E35               	movwf	(___fldiv@b+3)^0,c
  4206  000FE8                     l3751:
  4207  000FE8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4208  000FEA  EF01  F008         	goto	u3340
  4209  000FEE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4210  000FF0  E106               	bnz	u3341
  4211  000FF2  0443               	decf	___fldiv@new_exp^0,w,c
  4212  000FF4  B0D8               	btfsc	status,0,c
  4213  000FF6  EFFF  F007         	goto	u3341
  4214  000FFA  EF01  F008         	goto	u3340
  4215  000FFE                     u3341:
  4216  000FFE  EF0F  F008         	goto	l3755
  4217  001002                     u3340:
  4218  001002  0E00               	movlw	0
  4219  001004  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4220  001006  0E00               	movlw	0
  4221  001008  6E43               	movwf	___fldiv@new_exp^0,c
  4222  00100A  0E00               	movlw	0
  4223  00100C  6E32               	movwf	___fldiv@b^0,c
  4224  00100E  0E00               	movlw	0
  4225  001010  6E33               	movwf	(___fldiv@b+1)^0,c
  4226  001012  0E00               	movlw	0
  4227  001014  6E34               	movwf	(___fldiv@b+2)^0,c
  4228  001016  0E00               	movlw	0
  4229  001018  6E35               	movwf	(___fldiv@b+3)^0,c
  4230  00101A  0E00               	movlw	0
  4231  00101C  6E42               	movwf	___fldiv@sign^0,c
  4232  00101E                     l3755:
  4233  00101E  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  4234  001022  A049               	btfss	___fldiv@bexp^0,0,c
  4235  001024  EF16  F008         	goto	u3351
  4236  001028  EF18  F008         	goto	u3350
  4237  00102C                     u3351:
  4238  00102C  EF1B  F008         	goto	l3761
  4239  001030                     u3350:
  4240  001030  8E34               	bsf	(___fldiv@b+2)^0,7,c
  4241  001032  EF1C  F008         	goto	l3763
  4242  001036                     l3761:
  4243  001036  9E34               	bcf	(___fldiv@b+2)^0,7,c
  4244  001038                     l3763:
  4245  001038  90D8               	bcf	status,0,c
  4246  00103A  3049               	rrcf	___fldiv@bexp^0,w,c
  4247  00103C  6E35               	movwf	(___fldiv@b+3)^0,c
  4248  00103E  EFD2  F006         	goto	l3677
  4249  001042                     l1022:
  4250  001042  0012               	return		;funcret
  4251  001044                     __end_of___fldiv:
  4252                           	callstack 0
  4253                           
  4254 ;; *************** function ___awmod *****************
  4255 ;; Defined at:
  4256 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  dividend        2    2[BANK0 ] int 
  4259 ;;  divisor         2    4[BANK0 ] int 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  sign            1    7[BANK0 ] unsigned char 
  4262 ;;  counter         1    6[BANK0 ] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  2    2[BANK0 ] int 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4272 ;;      Params:         0       4       0       0       0       0       0       0       0
  4273 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4275 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4276 ;;Total ram usage:        6 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    2
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_appADC
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text19
  4287  002DF6                     __ptext19:
  4288                           	callstack 0
  4289  002DF6                     ___awmod:
  4290                           	callstack 26
  4291  002DF6  0E00               	movlw	0
  4292  002DF8  0100               	movlb	0	; () banked
  4293  002DFA  6F9B               	movwf	___awmod@sign& (0+255),b
  4294  002DFC                     
  4295                           ; BSR set to: 0
  4296  002DFC  BF97               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4297  002DFE  EF05  F017         	goto	u4120
  4298  002E02  EF03  F017         	goto	u4121
  4299  002E06                     u4121:
  4300  002E06  EF0B  F017         	goto	l4601
  4301  002E0A                     u4120:
  4302  002E0A                     
  4303                           ; BSR set to: 0
  4304  002E0A  6D96               	negf	___awmod@dividend& (0+255),b
  4305  002E0C  1F97               	comf	(___awmod@dividend+1)& (0+255),f,b
  4306  002E0E  B0D8               	btfsc	status,0,c
  4307  002E10  2B97               	incf	(___awmod@dividend+1)& (0+255),f,b
  4308  002E12                     
  4309                           ; BSR set to: 0
  4310  002E12  0E01               	movlw	1
  4311  002E14  6F9B               	movwf	___awmod@sign& (0+255),b
  4312  002E16                     l4601:
  4313                           
  4314                           ; BSR set to: 0
  4315  002E16  BF99               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4316  002E18  EF12  F017         	goto	u4130
  4317  002E1C  EF10  F017         	goto	u4131
  4318  002E20                     u4131:
  4319  002E20  EF16  F017         	goto	l4605
  4320  002E24                     u4130:
  4321  002E24                     
  4322                           ; BSR set to: 0
  4323  002E24  6D98               	negf	___awmod@divisor& (0+255),b
  4324  002E26  1F99               	comf	(___awmod@divisor+1)& (0+255),f,b
  4325  002E28  B0D8               	btfsc	status,0,c
  4326  002E2A  2B99               	incf	(___awmod@divisor+1)& (0+255),f,b
  4327  002E2C                     l4605:
  4328                           
  4329                           ; BSR set to: 0
  4330  002E2C  5198               	movf	___awmod@divisor& (0+255),w,b
  4331  002E2E  1199               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4332  002E30  B4D8               	btfsc	status,2,c
  4333  002E32  EF1D  F017         	goto	u4141
  4334  002E36  EF1F  F017         	goto	u4140
  4335  002E3A                     u4141:
  4336  002E3A  EF43  F017         	goto	l4621
  4337  002E3E                     u4140:
  4338  002E3E                     
  4339                           ; BSR set to: 0
  4340  002E3E  0E01               	movlw	1
  4341  002E40  6F9A               	movwf	___awmod@counter& (0+255),b
  4342  002E42  EF27  F017         	goto	l4611
  4343  002E46                     l4609:
  4344                           
  4345                           ; BSR set to: 0
  4346  002E46  90D8               	bcf	status,0,c
  4347  002E48  3798               	rlcf	___awmod@divisor& (0+255),f,b
  4348  002E4A  3799               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4349  002E4C  2B9A               	incf	___awmod@counter& (0+255),f,b
  4350  002E4E                     l4611:
  4351                           
  4352                           ; BSR set to: 0
  4353  002E4E  AF99               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4354  002E50  EF2C  F017         	goto	u4151
  4355  002E54  EF2E  F017         	goto	u4150
  4356  002E58                     u4151:
  4357  002E58  EF23  F017         	goto	l4609
  4358  002E5C                     u4150:
  4359  002E5C                     l4613:
  4360                           
  4361                           ; BSR set to: 0
  4362  002E5C  5198               	movf	___awmod@divisor& (0+255),w,b
  4363  002E5E  5D96               	subwf	___awmod@dividend& (0+255),w,b
  4364  002E60  5199               	movf	(___awmod@divisor+1)& (0+255),w,b
  4365  002E62  5997               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4366  002E64  A0D8               	btfss	status,0,c
  4367  002E66  EF37  F017         	goto	u4161
  4368  002E6A  EF39  F017         	goto	u4160
  4369  002E6E                     u4161:
  4370  002E6E  EF3D  F017         	goto	l4617
  4371  002E72                     u4160:
  4372  002E72                     
  4373                           ; BSR set to: 0
  4374  002E72  5198               	movf	___awmod@divisor& (0+255),w,b
  4375  002E74  5F96               	subwf	___awmod@dividend& (0+255),f,b
  4376  002E76  5199               	movf	(___awmod@divisor+1)& (0+255),w,b
  4377  002E78  5B97               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4378  002E7A                     l4617:
  4379                           
  4380                           ; BSR set to: 0
  4381  002E7A  90D8               	bcf	status,0,c
  4382  002E7C  3399               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4383  002E7E  3398               	rrcf	___awmod@divisor& (0+255),f,b
  4384  002E80                     
  4385                           ; BSR set to: 0
  4386  002E80  2F9A               	decfsz	___awmod@counter& (0+255),f,b
  4387  002E82  EF2E  F017         	goto	l4613
  4388  002E86                     l4621:
  4389                           
  4390                           ; BSR set to: 0
  4391  002E86  519B               	movf	___awmod@sign& (0+255),w,b
  4392  002E88  B4D8               	btfsc	status,2,c
  4393  002E8A  EF49  F017         	goto	u4171
  4394  002E8E  EF4B  F017         	goto	u4170
  4395  002E92                     u4171:
  4396  002E92  EF4F  F017         	goto	l4625
  4397  002E96                     u4170:
  4398  002E96                     
  4399                           ; BSR set to: 0
  4400  002E96  6D96               	negf	___awmod@dividend& (0+255),b
  4401  002E98  1F97               	comf	(___awmod@dividend+1)& (0+255),f,b
  4402  002E9A  B0D8               	btfsc	status,0,c
  4403  002E9C  2B97               	incf	(___awmod@dividend+1)& (0+255),f,b
  4404  002E9E                     l4625:
  4405                           
  4406                           ; BSR set to: 0
  4407  002E9E  C096  F096         	movff	___awmod@dividend,?___awmod
  4408  002EA2  C097  F097         	movff	___awmod@dividend+1,?___awmod+1
  4409  002EA6                     
  4410                           ; BSR set to: 0
  4411  002EA6  0012               	return		;funcret
  4412  002EA8                     __end_of___awmod:
  4413                           	callstack 0
  4414                           
  4415 ;; *************** function _appInit *****************
  4416 ;; Defined at:
  4417 ;;		line 12 in file "app.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4431 ;;      Params:         0       0       0       0       0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4434 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4435 ;;Total ram usage:        0 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    5
  4438 ;; This function calls:
  4439 ;;		_adcInit
  4440 ;;		_appCounterInit
  4441 ;;		_appISRConfig
  4442 ;;		_appLCD_Init
  4443 ;;		_appTimerInit
  4444 ;;		_servoInit
  4445 ;;		_setServo
  4446 ;;		_uart_Init
  4447 ;; This function is called by:
  4448 ;;		_main
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text20
  4453  003588                     __ptext20:
  4454                           	callstack 0
  4455  003588                     _appInit:
  4456                           	callstack 25
  4457  003588                     
  4458                           ;app.c: 14:     appISRConfig();
  4459  003588  EC27  F01C         	call	_appISRConfig	;wreg free
  4460  00358C                     
  4461                           ;app.c: 15:     appLCD_Init();
  4462  00358C  EC91  F018         	call	_appLCD_Init	;wreg free
  4463  003590                     
  4464                           ;app.c: 16:     adcInit(2);
  4465  003590  0E02               	movlw	2
  4466  003592  EC9F  F01A         	call	_adcInit
  4467  003596                     
  4468                           ;app.c: 17:     appTimerInit();
  4469  003596  ECBA  F01B         	call	_appTimerInit	;wreg free
  4470  00359A                     
  4471                           ;app.c: 18:     appCounterInit(0);
  4472  00359A  0E00               	movlw	0
  4473  00359C  6E08               	movwf	(appCounterInit@reload+1)^0,c
  4474  00359E  0E00               	movlw	0
  4475  0035A0  6E07               	movwf	appCounterInit@reload^0,c
  4476  0035A2  EC22  F01C         	call	_appCounterInit	;wreg free
  4477  0035A6                     
  4478                           ;app.c: 19:     servoInit();
  4479  0035A6  EC06  F01C         	call	_servoInit	;wreg free
  4480  0035AA                     
  4481                           ;app.c: 20:     uart_Init(9600);
  4482  0035AA  0E80               	movlw	128
  4483  0035AC  6E14               	movwf	uart_Init@baud^0,c
  4484  0035AE  0E25               	movlw	37
  4485  0035B0  6E15               	movwf	(uart_Init@baud+1)^0,c
  4486  0035B2  0E00               	movlw	0
  4487  0035B4  6E16               	movwf	(uart_Init@baud+2)^0,c
  4488  0035B6  0E00               	movlw	0
  4489  0035B8  6E17               	movwf	(uart_Init@baud+3)^0,c
  4490  0035BA  ECD7  F019         	call	_uart_Init	;wreg free
  4491  0035BE                     
  4492                           ;app.c: 21:     setServo(33,10,0);
  4493  0035BE  0E0A               	movlw	10
  4494  0035C0  6E0B               	movwf	setServo@pulsos^0,c
  4495  0035C2  0E00               	movlw	0
  4496  0035C4  6E0C               	movwf	setServo@pin^0,c
  4497  0035C6  0E21               	movlw	33
  4498  0035C8  ECD1  F01B         	call	_setServo
  4499  0035CC  0012               	return		;funcret
  4500  0035CE                     __end_of_appInit:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _uart_Init *****************
  4504 ;; Defined at:
  4505 ;;		line 18 in file "UART.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  baud            4   19[COMRAM] unsigned long 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4519 ;;      Params:         4       0       0       0       0       0       0       0       0
  4520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4522 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4523 ;;Total ram usage:        4 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:    3
  4526 ;; This function calls:
  4527 ;;		___lldiv
  4528 ;; This function is called by:
  4529 ;;		_appInit
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text21
  4534  0033AE                     __ptext21:
  4535                           	callstack 0
  4536  0033AE                     _uart_Init:
  4537                           	callstack 26
  4538  0033AE                     
  4539                           ;UART.c: 18: void uart_Init(uint32_t baud);UART.c: 19: {;UART.c: 20:     TRISCbits.RC6 =
      +                           0;
  4540  0033AE  9C94               	bcf	148,6,c	;volatile
  4541                           
  4542                           ;UART.c: 21:     TRISCbits.RC7 = 1;
  4543  0033B0  8E94               	bsf	148,7,c	;volatile
  4544                           
  4545                           ;UART.c: 23:     BAUDCONbits.BRG16 = 0;
  4546  0033B2  96B8               	bcf	184,3,c	;volatile
  4547  0033B4                     
  4548                           ;UART.c: 24:     SPBRG = (uint8_t)(((12000000/baud)/64)-1);
  4549  0033B4  0E00               	movlw	0
  4550  0033B6  6E07               	movwf	___lldiv@dividend^0,c
  4551  0033B8  0E1B               	movlw	27
  4552  0033BA  6E08               	movwf	(___lldiv@dividend+1)^0,c
  4553  0033BC  0EB7               	movlw	183
  4554  0033BE  6E09               	movwf	(___lldiv@dividend+2)^0,c
  4555  0033C0  0E00               	movlw	0
  4556  0033C2  6E0A               	movwf	(___lldiv@dividend+3)^0,c
  4557  0033C4  C014  F00B         	movff	uart_Init@baud,___lldiv@divisor
  4558  0033C8  C015  F00C         	movff	uart_Init@baud+1,___lldiv@divisor+1
  4559  0033CC  C016  F00D         	movff	uart_Init@baud+2,___lldiv@divisor+2
  4560  0033D0  C017  F00E         	movff	uart_Init@baud+3,___lldiv@divisor+3
  4561  0033D4  EC54  F017         	call	___lldiv	;wreg free
  4562  0033D8  0E07               	movlw	7
  4563  0033DA  EFF4  F019         	goto	u3810
  4564  0033DE                     u3815:
  4565  0033DE  90D8               	bcf	status,0,c
  4566  0033E0  320A               	rrcf	(?___lldiv+3)^0,f,c
  4567  0033E2  3209               	rrcf	(?___lldiv+2)^0,f,c
  4568  0033E4  3208               	rrcf	(?___lldiv+1)^0,f,c
  4569  0033E6  3207               	rrcf	?___lldiv^0,f,c
  4570  0033E8                     u3810:
  4571  0033E8  2EE8               	decfsz	wreg,f,c
  4572  0033EA  EFEF  F019         	goto	u3815
  4573  0033EE  0407               	decf	?___lldiv^0,w,c
  4574  0033F0  6EAF               	movwf	175,c	;volatile
  4575  0033F2                     
  4576                           ;UART.c: 26:     TXSTAbits.BRGH = 0;
  4577  0033F2  94AC               	bcf	172,2,c	;volatile
  4578  0033F4                     
  4579                           ;UART.c: 27:     TXSTAbits.SYNC = 0;
  4580  0033F4  98AC               	bcf	172,4,c	;volatile
  4581  0033F6                     
  4582                           ;UART.c: 28:     TXSTAbits.TX9 = 0;
  4583  0033F6  9CAC               	bcf	172,6,c	;volatile
  4584  0033F8                     
  4585                           ;UART.c: 29:     TXSTAbits.TXEN = 1;
  4586  0033F8  8AAC               	bsf	172,5,c	;volatile
  4587  0033FA                     
  4588                           ;UART.c: 31:     RCSTAbits.SPEN = 1;
  4589  0033FA  8EAB               	bsf	171,7,c	;volatile
  4590  0033FC                     
  4591                           ;UART.c: 32:     RCSTAbits.RC9 = 0;
  4592  0033FC  9CAB               	bcf	171,6,c	;volatile
  4593  0033FE                     
  4594                           ;UART.c: 33:     RCSTAbits.CREN = 1;
  4595  0033FE  88AB               	bsf	171,4,c	;volatile
  4596  003400                     
  4597                           ;UART.c: 35:     PIE1bits.RCIE = 1;
  4598  003400  8A9D               	bsf	157,5,c	;volatile
  4599  003402                     
  4600                           ;UART.c: 36:     IPR1bits.RCIP =1;
  4601  003402  8A9F               	bsf	159,5,c	;volatile
  4602  003404  0012               	return		;funcret
  4603  003406                     __end_of_uart_Init:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function ___lldiv *****************
  4607 ;; Defined at:
  4608 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  dividend        4    6[COMRAM] unsigned long 
  4611 ;;  divisor         4   10[COMRAM] unsigned long 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  quotient        4   14[COMRAM] unsigned long 
  4614 ;;  counter         1   18[COMRAM] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  4    6[COMRAM] unsigned long 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4624 ;;      Params:         8       0       0       0       0       0       0       0       0
  4625 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4627 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4628 ;;Total ram usage:       13 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    2
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_uart_Init
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text22
  4639  002EA8                     __ptext22:
  4640                           	callstack 0
  4641  002EA8                     ___lldiv:
  4642                           	callstack 26
  4643  002EA8  0E00               	movlw	0
  4644  002EAA  6E0F               	movwf	___lldiv@quotient^0,c
  4645  002EAC  0E00               	movlw	0
  4646  002EAE  6E10               	movwf	(___lldiv@quotient+1)^0,c
  4647  002EB0  0E00               	movlw	0
  4648  002EB2  6E11               	movwf	(___lldiv@quotient+2)^0,c
  4649  002EB4  0E00               	movlw	0
  4650  002EB6  6E12               	movwf	(___lldiv@quotient+3)^0,c
  4651  002EB8  500B               	movf	___lldiv@divisor^0,w,c
  4652  002EBA  100C               	iorwf	(___lldiv@divisor+1)^0,w,c
  4653  002EBC  100D               	iorwf	(___lldiv@divisor+2)^0,w,c
  4654  002EBE  100E               	iorwf	(___lldiv@divisor+3)^0,w,c
  4655  002EC0  B4D8               	btfsc	status,2,c
  4656  002EC2  EF65  F017         	goto	u3101
  4657  002EC6  EF67  F017         	goto	u3100
  4658  002ECA                     u3101:
  4659  002ECA  EF9D  F017         	goto	l467
  4660  002ECE                     u3100:
  4661  002ECE  0E01               	movlw	1
  4662  002ED0  6E13               	movwf	___lldiv@counter^0,c
  4663  002ED2  EF71  F017         	goto	l3619
  4664  002ED6                     l3617:
  4665  002ED6  90D8               	bcf	status,0,c
  4666  002ED8  360B               	rlcf	___lldiv@divisor^0,f,c
  4667  002EDA  360C               	rlcf	(___lldiv@divisor+1)^0,f,c
  4668  002EDC  360D               	rlcf	(___lldiv@divisor+2)^0,f,c
  4669  002EDE  360E               	rlcf	(___lldiv@divisor+3)^0,f,c
  4670  002EE0  2A13               	incf	___lldiv@counter^0,f,c
  4671  002EE2                     l3619:
  4672  002EE2  AE0E               	btfss	(___lldiv@divisor+3)^0,7,c
  4673  002EE4  EF76  F017         	goto	u3111
  4674  002EE8  EF78  F017         	goto	u3110
  4675  002EEC                     u3111:
  4676  002EEC  EF6B  F017         	goto	l3617
  4677  002EF0                     u3110:
  4678  002EF0                     l3621:
  4679  002EF0  90D8               	bcf	status,0,c
  4680  002EF2  360F               	rlcf	___lldiv@quotient^0,f,c
  4681  002EF4  3610               	rlcf	(___lldiv@quotient+1)^0,f,c
  4682  002EF6  3611               	rlcf	(___lldiv@quotient+2)^0,f,c
  4683  002EF8  3612               	rlcf	(___lldiv@quotient+3)^0,f,c
  4684  002EFA  500B               	movf	___lldiv@divisor^0,w,c
  4685  002EFC  5C07               	subwf	___lldiv@dividend^0,w,c
  4686  002EFE  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4687  002F00  5808               	subwfb	(___lldiv@dividend+1)^0,w,c
  4688  002F02  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4689  002F04  5809               	subwfb	(___lldiv@dividend+2)^0,w,c
  4690  002F06  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4691  002F08  580A               	subwfb	(___lldiv@dividend+3)^0,w,c
  4692  002F0A  A0D8               	btfss	status,0,c
  4693  002F0C  EF8A  F017         	goto	u3121
  4694  002F10  EF8C  F017         	goto	u3120
  4695  002F14                     u3121:
  4696  002F14  EF95  F017         	goto	l3629
  4697  002F18                     u3120:
  4698  002F18  500B               	movf	___lldiv@divisor^0,w,c
  4699  002F1A  5E07               	subwf	___lldiv@dividend^0,f,c
  4700  002F1C  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4701  002F1E  5A08               	subwfb	(___lldiv@dividend+1)^0,f,c
  4702  002F20  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4703  002F22  5A09               	subwfb	(___lldiv@dividend+2)^0,f,c
  4704  002F24  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4705  002F26  5A0A               	subwfb	(___lldiv@dividend+3)^0,f,c
  4706  002F28  800F               	bsf	___lldiv@quotient^0,0,c
  4707  002F2A                     l3629:
  4708  002F2A  90D8               	bcf	status,0,c
  4709  002F2C  320E               	rrcf	(___lldiv@divisor+3)^0,f,c
  4710  002F2E  320D               	rrcf	(___lldiv@divisor+2)^0,f,c
  4711  002F30  320C               	rrcf	(___lldiv@divisor+1)^0,f,c
  4712  002F32  320B               	rrcf	___lldiv@divisor^0,f,c
  4713  002F34  2E13               	decfsz	___lldiv@counter^0,f,c
  4714  002F36  EF78  F017         	goto	l3621
  4715  002F3A                     l467:
  4716  002F3A  C00F  F007         	movff	___lldiv@quotient,?___lldiv
  4717  002F3E  C010  F008         	movff	___lldiv@quotient+1,?___lldiv+1
  4718  002F42  C011  F009         	movff	___lldiv@quotient+2,?___lldiv+2
  4719  002F46  C012  F00A         	movff	___lldiv@quotient+3,?___lldiv+3
  4720  002F4A  0012               	return		;funcret
  4721  002F4C                     __end_of___lldiv:
  4722                           	callstack 0
  4723                           
  4724 ;; *************** function _servoInit *****************
  4725 ;; Defined at:
  4726 ;;		line 4 in file "servo.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4743 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    2
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_appInit
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text23
  4755  00380C                     __ptext23:
  4756                           	callstack 0
  4757  00380C                     _servoInit:
  4758                           	callstack 27
  4759  00380C                     
  4760                           ;servo.c: 10:     T2CONbits.T2CKPS = 0b10;
  4761  00380C  50CA               	movf	202,w,c	;volatile
  4762  00380E  0BFC               	andlw	-4
  4763  003810  0902               	iorlw	2
  4764  003812  6ECA               	movwf	202,c	;volatile
  4765  003814                     
  4766                           ;servo.c: 11:     T2CONbits.T2OUTPS0 = 1;
  4767  003814  86CA               	bsf	202,3,c	;volatile
  4768  003816                     
  4769                           ;servo.c: 12:     T2CONbits.T2OUTPS1 = 1;
  4770  003816  88CA               	bsf	202,4,c	;volatile
  4771  003818                     
  4772                           ;servo.c: 13:     T2CONbits.T2OUTPS2 = 1;
  4773  003818  8ACA               	bsf	202,5,c	;volatile
  4774  00381A                     
  4775                           ;servo.c: 14:     T2CONbits.T2OUTPS3 = 1;
  4776  00381A  8CCA               	bsf	202,6,c	;volatile
  4777  00381C                     
  4778                           ;servo.c: 15:     TRISEbits.TRISE0 = 0;
  4779  00381C  9096               	bcf	150,0,c	;volatile
  4780  00381E                     
  4781                           ;servo.c: 16:     TRISEbits.TRISE1 = 0;
  4782  00381E  9296               	bcf	150,1,c	;volatile
  4783  003820                     
  4784                           ;servo.c: 17:     TRISEbits.TRISE2 = 0;
  4785  003820  9496               	bcf	150,2,c	;volatile
  4786  003822  0012               	return		;funcret
  4787  003824                     __end_of_servoInit:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function _appTimerInit *****************
  4791 ;; Defined at:
  4792 ;;		line 85 in file "servo.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    2
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_appInit
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text24
  4821  003774                     __ptext24:
  4822                           	callstack 0
  4823  003774                     _appTimerInit:
  4824                           	callstack 27
  4825  003774                     
  4826                           ;servo.c: 90:     T3CONbits.TMR3ON = 0;
  4827  003774  90B1               	bcf	177,0,c	;volatile
  4828                           
  4829                           ;servo.c: 91:     T3CONbits.RD16 = 1;
  4830  003776  8EB1               	bsf	177,7,c	;volatile
  4831                           
  4832                           ;servo.c: 92:     T3CONbits.TMR3CS = 0;
  4833  003778  92B1               	bcf	177,1,c	;volatile
  4834  00377A                     
  4835                           ;servo.c: 93:     T3CONbits.T3CKPS = 0b11;
  4836  00377A  0E30               	movlw	48
  4837  00377C  12B1               	iorwf	177,f,c	;volatile
  4838  00377E                     
  4839                           ;servo.c: 94:     T3CONbits.T3NSYNC = 1;
  4840  00377E  84B1               	bsf	177,2,c	;volatile
  4841                           
  4842                           ;servo.c: 95:     TMR3 = 20536;
  4843  003780  0E50               	movlw	80
  4844  003782  6EB3               	movwf	179,c	;volatile
  4845  003784  0E38               	movlw	56
  4846  003786  6EB2               	movwf	178,c	;volatile
  4847  003788                     
  4848                           ;servo.c: 100:     T0CONbits.TMR0ON = 0;
  4849  003788  9ED5               	bcf	213,7,c	;volatile
  4850  00378A                     
  4851                           ;servo.c: 101:     T0CONbits.T08BIT = 1;
  4852  00378A  8CD5               	bsf	213,6,c	;volatile
  4853  00378C                     
  4854                           ;servo.c: 102:     T0CONbits.T0CS = 1;
  4855  00378C  8AD5               	bsf	213,5,c	;volatile
  4856  00378E                     
  4857                           ;servo.c: 103:     T0CONbits.T0SE = 0;
  4858  00378E  98D5               	bcf	213,4,c	;volatile
  4859  003790                     
  4860                           ;servo.c: 104:     T0CONbits.PSA = 1;
  4861  003790  86D5               	bsf	213,3,c	;volatile
  4862  003792                     
  4863                           ;servo.c: 106:     TRISAbits.TRISA4 = 1;
  4864  003792  8892               	bsf	146,4,c	;volatile
  4865  003794                     
  4866                           ;servo.c: 112:     INTCONbits.TMR0IE = 1;
  4867  003794  8AF2               	bsf	242,5,c	;volatile
  4868  003796                     
  4869                           ;servo.c: 113:     INTCONbits.TMR0IF = 0;
  4870  003796  94F2               	bcf	242,2,c	;volatile
  4871  003798                     
  4872                           ;servo.c: 114:     INTCON2bits.TMR0IP = 1;
  4873  003798  84F1               	bsf	241,2,c	;volatile
  4874  00379A                     
  4875                           ;servo.c: 120:     PIR2bits.TMR3IF = 0;
  4876  00379A  92A1               	bcf	161,1,c	;volatile
  4877  00379C                     
  4878                           ;servo.c: 121:     IPR2bits.TMR3IP = 0;
  4879  00379C  92A2               	bcf	162,1,c	;volatile
  4880  00379E                     
  4881                           ;servo.c: 122:     PIE2bits.TMR3IE = 1;
  4882  00379E  82A0               	bsf	160,1,c	;volatile
  4883  0037A0  0012               	return		;funcret
  4884  0037A2                     __end_of_appTimerInit:
  4885                           	callstack 0
  4886                           
  4887 ;; *************** function _appLCD_Init *****************
  4888 ;; Defined at:
  4889 ;;		line 197 in file "flex_lcd.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;		None
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      void 
  4896 ;; Registers used:
  4897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4903 ;;      Params:         0       0       0       0       0       0       0       0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4905 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4906 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4907 ;;Total ram usage:        2 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    4
  4910 ;; This function calls:
  4911 ;;		_Lcd_Cmd
  4912 ;;		_Lcd_Init
  4913 ;;		_Lcd_Out
  4914 ;; This function is called by:
  4915 ;;		_appInit
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text25
  4920  003122                     __ptext25:
  4921                           	callstack 0
  4922  003122                     _appLCD_Init:
  4923                           	callstack 25
  4924  003122                     
  4925                           ;flex_lcd.c: 199:     Lcd_Init();
  4926  003122  EC3D  F016         	call	_Lcd_Init	;wreg free
  4927                           
  4928                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  4929  003126  0E01               	movlw	1
  4930  003128  EC81  F012         	call	_Lcd_Cmd
  4931                           
  4932                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  4933  00312C  0E0C               	movlw	12
  4934  00312E  EC81  F012         	call	_Lcd_Cmd
  4935  003132                     
  4936                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  4937  003132  0E02               	movlw	2
  4938  003134  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4939  003136  0E86               	movlw	134
  4940  003138  6E11               	movwf	??_appLCD_Init^0,c
  4941  00313A  0E99               	movlw	153
  4942  00313C                     u4527:
  4943  00313C  2EE8               	decfsz	wreg,f,c
  4944  00313E  D7FE               	bra	u4527
  4945  003140  2E11               	decfsz	??_appLCD_Init^0,f,c
  4946  003142  D7FC               	bra	u4527
  4947  003144  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4948  003146  D7FA               	bra	u4527
  4949  003148  F000               	nop	
  4950  00314A                     
  4951                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  4952  00314A  0E03               	movlw	3
  4953  00314C  6E0A               	movwf	Lcd_Out@x^0,c
  4954  00314E  0E54               	movlw	low STR_3
  4955  003150  6E0B               	movwf	Lcd_Out@buffer^0,c
  4956  003152  0E08               	movlw	high STR_3
  4957  003154  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  4958  003156  0E01               	movlw	1
  4959  003158  EC11  F015         	call	_Lcd_Out
  4960  00315C                     
  4961                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  4962  00315C  0E06               	movlw	6
  4963  00315E  6E0A               	movwf	Lcd_Out@x^0,c
  4964  003160  0E73               	movlw	low STR_4
  4965  003162  6E0B               	movwf	Lcd_Out@buffer^0,c
  4966  003164  0E08               	movlw	high STR_4
  4967  003166  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  4968  003168  0E02               	movlw	2
  4969  00316A  EC11  F015         	call	_Lcd_Out
  4970  00316E                     
  4971                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  4972  00316E  0E1F               	movlw	31
  4973  003170  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4974  003172  0E71               	movlw	113
  4975  003174  6E11               	movwf	??_appLCD_Init^0,c
  4976  003176  0E1E               	movlw	30
  4977  003178                     u4537:
  4978  003178  2EE8               	decfsz	wreg,f,c
  4979  00317A  D7FE               	bra	u4537
  4980  00317C  2E11               	decfsz	??_appLCD_Init^0,f,c
  4981  00317E  D7FC               	bra	u4537
  4982  003180  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4983  003182  D7FA               	bra	u4537
  4984  003184  D000               	nop2	
  4985                           
  4986                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  4987  003186  0E01               	movlw	1
  4988  003188  EC81  F012         	call	_Lcd_Cmd
  4989  00318C  0E02               	movlw	2
  4990  00318E  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4991  003190  0E86               	movlw	134
  4992  003192  6E11               	movwf	??_appLCD_Init^0,c
  4993  003194  0E99               	movlw	153
  4994  003196                     u4547:
  4995  003196  2EE8               	decfsz	wreg,f,c
  4996  003198  D7FE               	bra	u4547
  4997  00319A  2E11               	decfsz	??_appLCD_Init^0,f,c
  4998  00319C  D7FC               	bra	u4547
  4999  00319E  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  5000  0031A0  D7FA               	bra	u4547
  5001  0031A2  F000               	nop	
  5002  0031A4  0012               	return		;funcret
  5003  0031A6                     __end_of_appLCD_Init:
  5004                           	callstack 0
  5005                           
  5006 ;; *************** function _Lcd_Init *****************
  5007 ;; Defined at:
  5008 ;;		line 31 in file "flex_lcd.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  i               1   10[COMRAM] unsigned char 
  5013 ;;  data            1    0        unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5023 ;;      Params:         0       0       0       0       0       0       0       0       0
  5024 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5025 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5026 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5027 ;;Total ram usage:        3 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    3
  5030 ;; This function calls:
  5031 ;;		_Lcd_Cmd
  5032 ;; This function is called by:
  5033 ;;		_appLCD_Init
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text26
  5038  002C7A                     __ptext26:
  5039                           	callstack 0
  5040  002C7A                     _Lcd_Init:
  5041                           	callstack 25
  5042  002C7A                     
  5043                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  5044  002C7A  9E95               	bcf	149,7,c	;volatile
  5045                           
  5046                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  5047  002C7C  9C95               	bcf	149,6,c	;volatile
  5048                           
  5049                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  5050  002C7E  9A95               	bcf	149,5,c	;volatile
  5051                           
  5052                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  5053  002C80  9895               	bcf	149,4,c	;volatile
  5054                           
  5055                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  5056  002C82  9695               	bcf	149,3,c	;volatile
  5057                           
  5058                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  5059  002C84  9495               	bcf	149,2,c	;volatile
  5060  002C86                     
  5061                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  5062  002C86  0E85               	movlw	133
  5063  002C88  6E0A               	movwf	??_Lcd_Init^0,c
  5064  002C8A  0E76               	movlw	118
  5065  002C8C                     u4557:
  5066  002C8C  2EE8               	decfsz	wreg,f,c
  5067  002C8E  D7FE               	bra	u4557
  5068  002C90  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5069  002C92  D7FC               	bra	u4557
  5070  002C94  D000               	nop2	
  5071  002C96                     
  5072                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  5073  002C96  0E00               	movlw	0
  5074  002C98  6E0B               	movwf	Lcd_Init@i^0,c
  5075  002C9A                     l150:
  5076                           
  5077                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  5078  002C9A  9E8C               	bcf	140,7,c	;volatile
  5079                           
  5080                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  5081  002C9C  9C8C               	bcf	140,6,c	;volatile
  5082                           
  5083                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  5084  002C9E  8A8C               	bsf	140,5,c	;volatile
  5085                           
  5086                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  5087  002CA0  888C               	bsf	140,4,c	;volatile
  5088                           
  5089                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  5090  002CA2  968C               	bcf	140,3,c	;volatile
  5091                           
  5092                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  5093  002CA4  948C               	bcf	140,2,c	;volatile
  5094                           
  5095                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  5096  002CA6  9E8C               	bcf	140,7,c	;volatile
  5097                           
  5098                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  5099  002CA8  9C8C               	bcf	140,6,c	;volatile
  5100                           
  5101                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  5102  002CAA  8A8C               	bsf	140,5,c	;volatile
  5103                           
  5104                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  5105  002CAC  888C               	bsf	140,4,c	;volatile
  5106                           
  5107                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  5108  002CAE  868C               	bsf	140,3,c	;volatile
  5109                           
  5110                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  5111  002CB0  948C               	bcf	140,2,c	;volatile
  5112  002CB2                     
  5113                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  5114  002CB2  0E05               	movlw	5
  5115  002CB4                     u4567:
  5116  002CB4  2EE8               	decfsz	wreg,f,c
  5117  002CB6  D7FE               	bra	u4567
  5118  002CB8                     
  5119                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  5120  002CB8  9E8C               	bcf	140,7,c	;volatile
  5121  002CBA                     
  5122                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  5123  002CBA  9C8C               	bcf	140,6,c	;volatile
  5124  002CBC                     
  5125                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  5126  002CBC  8A8C               	bsf	140,5,c	;volatile
  5127  002CBE                     
  5128                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  5129  002CBE  888C               	bsf	140,4,c	;volatile
  5130  002CC0                     
  5131                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  5132  002CC0  968C               	bcf	140,3,c	;volatile
  5133  002CC2                     
  5134                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  5135  002CC2  948C               	bcf	140,2,c	;volatile
  5136                           
  5137                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5138  002CC4  0E16               	movlw	22
  5139  002CC6  6E0A               	movwf	??_Lcd_Init^0,c
  5140  002CC8  0E6C               	movlw	108
  5141  002CCA                     u4577:
  5142  002CCA  2EE8               	decfsz	wreg,f,c
  5143  002CCC  D7FE               	bra	u4577
  5144  002CCE  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5145  002CD0  D7FC               	bra	u4577
  5146  002CD2  D000               	nop2	
  5147  002CD4                     
  5148                           ;flex_lcd.c: 61:     }
  5149  002CD4  2A0B               	incf	Lcd_Init@i^0,f,c
  5150  002CD6  0E03               	movlw	3
  5151  002CD8  640B               	cpfsgt	Lcd_Init@i^0,c
  5152  002CDA  EF71  F016         	goto	u3081
  5153  002CDE  EF73  F016         	goto	u3080
  5154  002CE2                     u3081:
  5155  002CE2  EF4D  F016         	goto	l150
  5156  002CE6                     u3080:
  5157  002CE6                     
  5158                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  5159  002CE6  9E8C               	bcf	140,7,c	;volatile
  5160                           
  5161                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  5162  002CE8  9C8C               	bcf	140,6,c	;volatile
  5163                           
  5164                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  5165  002CEA  8A8C               	bsf	140,5,c	;volatile
  5166                           
  5167                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  5168  002CEC  988C               	bcf	140,4,c	;volatile
  5169                           
  5170                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  5171  002CEE  968C               	bcf	140,3,c	;volatile
  5172                           
  5173                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  5174  002CF0  948C               	bcf	140,2,c	;volatile
  5175                           
  5176                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  5177  002CF2  9E8C               	bcf	140,7,c	;volatile
  5178                           
  5179                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  5180  002CF4  9C8C               	bcf	140,6,c	;volatile
  5181                           
  5182                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  5183  002CF6  8A8C               	bsf	140,5,c	;volatile
  5184                           
  5185                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  5186  002CF8  988C               	bcf	140,4,c	;volatile
  5187                           
  5188                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  5189  002CFA  868C               	bsf	140,3,c	;volatile
  5190                           
  5191                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  5192  002CFC  948C               	bcf	140,2,c	;volatile
  5193  002CFE                     
  5194                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  5195  002CFE  0E05               	movlw	5
  5196  002D00                     u4587:
  5197  002D00  2EE8               	decfsz	wreg,f,c
  5198  002D02  D7FE               	bra	u4587
  5199  002D04                     
  5200                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  5201  002D04  9E8C               	bcf	140,7,c	;volatile
  5202  002D06                     
  5203                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  5204  002D06  9C8C               	bcf	140,6,c	;volatile
  5205  002D08                     
  5206                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  5207  002D08  8A8C               	bsf	140,5,c	;volatile
  5208  002D0A                     
  5209                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  5210  002D0A  988C               	bcf	140,4,c	;volatile
  5211  002D0C                     
  5212                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  5213  002D0C  968C               	bcf	140,3,c	;volatile
  5214  002D0E                     
  5215                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  5216  002D0E  948C               	bcf	140,2,c	;volatile
  5217                           
  5218                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5219  002D10  0E16               	movlw	22
  5220  002D12  6E0A               	movwf	??_Lcd_Init^0,c
  5221  002D14  0E6C               	movlw	108
  5222  002D16                     u4597:
  5223  002D16  2EE8               	decfsz	wreg,f,c
  5224  002D18  D7FE               	bra	u4597
  5225  002D1A  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5226  002D1C  D7FC               	bra	u4597
  5227  002D1E  D000               	nop2	
  5228  002D20                     
  5229                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  5230  002D20  0E28               	movlw	40
  5231  002D22  EC81  F012         	call	_Lcd_Cmd
  5232  002D26                     
  5233                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  5234  002D26  0E10               	movlw	16
  5235  002D28  EC81  F012         	call	_Lcd_Cmd
  5236  002D2C                     
  5237                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  5238  002D2C  0E01               	movlw	1
  5239  002D2E  EC81  F012         	call	_Lcd_Cmd
  5240  002D32                     
  5241                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  5242  002D32  0E0F               	movlw	15
  5243  002D34  EC81  F012         	call	_Lcd_Cmd
  5244  002D38  0012               	return		;funcret
  5245  002D3A                     __end_of_Lcd_Init:
  5246                           	callstack 0
  5247                           
  5248 ;; *************** function _appISRConfig *****************
  5249 ;; Defined at:
  5250 ;;		line 25 in file "app.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		None
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    2
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_appInit
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text27
  5279  00384E                     __ptext27:
  5280                           	callstack 0
  5281  00384E                     _appISRConfig:
  5282                           	callstack 27
  5283  00384E                     
  5284                           ;app.c: 30:     RCONbits.IPEN = 1;
  5285  00384E  8ED0               	bsf	208,7,c	;volatile
  5286                           
  5287                           ;app.c: 31:     INTCONbits.GIE_GIEH = 1;
  5288  003850  8EF2               	bsf	242,7,c	;volatile
  5289                           
  5290                           ;app.c: 32:     INTCONbits.PEIE_GIEL = 1;
  5291  003852  8CF2               	bsf	242,6,c	;volatile
  5292  003854  0012               	return		;funcret
  5293  003856                     __end_of_appISRConfig:
  5294                           	callstack 0
  5295                           
  5296 ;; *************** function _appCounterInit *****************
  5297 ;; Defined at:
  5298 ;;		line 136 in file "servo.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  reload          2    6[COMRAM] unsigned short 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1    wreg      void 
  5305 ;; Registers used:
  5306 ;;		None
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5312 ;;      Params:         2       0       0       0       0       0       0       0       0
  5313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5315 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5316 ;;Total ram usage:        2 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    2
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_appInit
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text28
  5327  003844                     __ptext28:
  5328                           	callstack 0
  5329  003844                     _appCounterInit:
  5330                           	callstack 27
  5331  003844                     
  5332                           ;servo.c: 136: void appCounterInit(uint16_t reload);servo.c: 137: {;servo.c: 139:     TM
      +                          R0 = reload;
  5333  003844  C007  FFD6         	movff	appCounterInit@reload,4054	;volatile
  5334  003848  C008  FFD7         	movff	appCounterInit@reload+1,4055	;volatile
  5335  00384C  0012               	return		;funcret
  5336  00384E                     __end_of_appCounterInit:
  5337                           	callstack 0
  5338                           
  5339 ;; *************** function _adcInit *****************
  5340 ;; Defined at:
  5341 ;;		line 10 in file "adc.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  ADC_PINs        1    wreg     unsigned char 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  ADC_PINs        1    7[COMRAM] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5355 ;;      Params:         0       0       0       0       0       0       0       0       0
  5356 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5357 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5358 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5359 ;;Total ram usage:        2 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    2
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_appInit
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text29
  5370  00353E                     __ptext29:
  5371                           	callstack 0
  5372  00353E                     _adcInit:
  5373                           	callstack 27
  5374                           
  5375                           ;incstack = 0
  5376                           ;adcInit@ADC_PINs stored from wreg
  5377  00353E  6E08               	movwf	adcInit@ADC_PINs^0,c
  5378  003540                     
  5379                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  5380  003540  5008               	movf	adcInit@ADC_PINs^0,w,c
  5381  003542  A4D8               	btfss	status,2,c
  5382  003544  EFA6  F01A         	goto	u3781
  5383  003548  EFA8  F01A         	goto	u3780
  5384  00354C                     u3781:
  5385  00354C  EFAE  F01A         	goto	l4031
  5386  003550                     u3780:
  5387  003550                     
  5388                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  5389  003550  50C1               	movf	193,w,c	;volatile
  5390  003552  0BF0               	andlw	-16
  5391  003554  090E               	iorlw	14
  5392  003556  6EC1               	movwf	193,c	;volatile
  5393                           
  5394                           ;adc.c: 16:     }
  5395  003558  EFB6  F01A         	goto	l4033
  5396  00355C                     l4031:
  5397                           
  5398                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  5399  00355C  5008               	movf	adcInit@ADC_PINs^0,w,c
  5400  00355E  080F               	sublw	15
  5401  003560  6E07               	movwf	??_adcInit^0,c
  5402  003562  50C1               	movf	193,w,c	;volatile
  5403  003564  1807               	xorwf	??_adcInit^0,w,c
  5404  003566  0BF0               	andlw	-16
  5405  003568  1807               	xorwf	??_adcInit^0,w,c
  5406  00356A  6EC1               	movwf	193,c	;volatile
  5407  00356C                     l4033:
  5408                           
  5409                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  5410  00356C  0ECF               	movlw	-49
  5411  00356E  16C1               	andwf	193,f,c	;volatile
  5412  003570                     
  5413                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  5414  003570  50C0               	movf	192,w,c	;volatile
  5415  003572  0BC7               	andlw	-57
  5416  003574  0910               	iorlw	16
  5417  003576  6EC0               	movwf	192,c	;volatile
  5418  003578                     
  5419                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  5420  003578  50C0               	movf	192,w,c	;volatile
  5421  00357A  0BF8               	andlw	-8
  5422  00357C  0903               	iorlw	3
  5423  00357E  6EC0               	movwf	192,c	;volatile
  5424  003580                     
  5425                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  5426  003580  8EC0               	bsf	192,7,c	;volatile
  5427  003582                     
  5428                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  5429  003582  80C2               	bsf	194,0,c	;volatile
  5430  003584                     
  5431                           ;adc.c: 41:     TRISCbits.TRISC1 = 0;
  5432  003584  9294               	bcf	148,1,c	;volatile
  5433  003586  0012               	return		;funcret
  5434  003588                     __end_of_adcInit:
  5435                           	callstack 0
  5436                           
  5437 ;; *************** function _appTimerStop *****************
  5438 ;; Defined at:
  5439 ;;		line 131 in file "servo.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;		None
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      void 
  5446 ;; Registers used:
  5447 ;;		None
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5456 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5457 ;;Total ram usage:        0 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    2
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_appGetElements
  5464 ;;		_warning
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text30
  5469  00385A                     __ptext30:
  5470                           	callstack 0
  5471  00385A                     _appTimerStop:
  5472                           	callstack 27
  5473  00385A                     
  5474                           ;servo.c: 133:     T3CONbits.TMR3ON = 0;
  5475  00385A  90B1               	bcf	177,0,c	;volatile
  5476  00385C  0012               	return		;funcret
  5477  00385E                     __end_of_appTimerStop:
  5478                           	callstack 0
  5479                           
  5480 ;; *************** function _appTimerStart *****************
  5481 ;; Defined at:
  5482 ;;		line 124 in file "servo.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    2
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_appGetElements
  5507 ;;		_warning
  5508 ;;		_confirmacion
  5509 ;;		_sendinformation
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           	psect	text31
  5514  003838                     __ptext31:
  5515                           	callstack 0
  5516  003838                     _appTimerStart:
  5517                           	callstack 27
  5518  003838                     
  5519                           ;servo.c: 127:     TMR3 = 20536;
  5520  003838  0E50               	movlw	80
  5521  00383A  6EB3               	movwf	179,c	;volatile
  5522  00383C  0E38               	movlw	56
  5523  00383E  6EB2               	movwf	178,c	;volatile
  5524  003840                     
  5525                           ;servo.c: 128:     T3CONbits.TMR3ON = 1;
  5526  003840  80B1               	bsf	177,0,c	;volatile
  5527  003842  0012               	return		;funcret
  5528  003844                     __end_of_appTimerStart:
  5529                           	callstack 0
  5530                           
  5531 ;; *************** function _appSubGiveElemts *****************
  5532 ;; Defined at:
  5533 ;;		line 106 in file "app.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  data            2   14[COMRAM] PTR struct _state
  5536 ;;		 -> datos(25), 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5548 ;;      Params:         2       0       0       0       0       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5551 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5552 ;;Total ram usage:        2 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    4
  5555 ;; This function calls:
  5556 ;;		_appCounterStart
  5557 ;;		_setServo
  5558 ;; This function is called by:
  5559 ;;		_appGetElements
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text32
  5564  003824                     __ptext32:
  5565                           	callstack 0
  5566  003824                     _appSubGiveElemts:
  5567                           	callstack 25
  5568  003824                     
  5569                           ;app.c: 106: void appSubGiveElemts(StateMachine *data);app.c: 107: {;app.c: 108:     app
      +                          CounterStart();
  5570  003824  EC2F  F01C         	call	_appCounterStart	;wreg free
  5571  003828                     
  5572                           ;app.c: 109:     setServo(39,10,2);
  5573  003828  0E0A               	movlw	10
  5574  00382A  6E0B               	movwf	setServo@pulsos^0,c
  5575  00382C  0E02               	movlw	2
  5576  00382E  6E0C               	movwf	setServo@pin^0,c
  5577  003830  0E27               	movlw	39
  5578  003832  ECD1  F01B         	call	_setServo
  5579  003836  0012               	return		;funcret
  5580  003838                     __end_of_appSubGiveElemts:
  5581                           	callstack 0
  5582                           
  5583 ;; *************** function _setServo *****************
  5584 ;; Defined at:
  5585 ;;		line 77 in file "servo.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;  angle           1    wreg     unsigned char 
  5588 ;;  pulsos          1   10[COMRAM] unsigned char 
  5589 ;;  pin             1   11[COMRAM] unsigned char 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  angle           1   12[COMRAM] unsigned char 
  5592 ;;  i               1   13[COMRAM] unsigned char 
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      void 
  5595 ;; Registers used:
  5596 ;;		wreg, status,2, status,0, cstack
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5602 ;;      Params:         2       0       0       0       0       0       0       0       0
  5603 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5605 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5606 ;;Total ram usage:        4 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; Hardware stack levels required when called:    3
  5609 ;; This function calls:
  5610 ;;		_setServoAngle
  5611 ;; This function is called by:
  5612 ;;		_appInit
  5613 ;;		_appStateRecolectData
  5614 ;;		_appStateInitial
  5615 ;;		_appSubGiveElemts
  5616 ;;		_warning
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           	psect	text33
  5621  0037A2                     __ptext33:
  5622                           	callstack 0
  5623  0037A2                     _setServo:
  5624                           	callstack 26
  5625                           
  5626                           ;incstack = 0
  5627                           ;setServo@angle stored from wreg
  5628  0037A2  6E0D               	movwf	setServo@angle^0,c
  5629  0037A4                     
  5630                           ;servo.c: 77: void setServo(uint8_t angle, uint8_t pulsos, uint8_t pin);servo.c: 78: {;s
      +                          ervo.c: 79:     for(uint8_t i = 0; i < pulsos; i++)
  5631  0037A4  0E00               	movlw	0
  5632  0037A6  6E0E               	movwf	setServo@i^0,c
  5633  0037A8  EFDC  F01B         	goto	l3607
  5634  0037AC                     l3603:
  5635                           
  5636                           ;servo.c: 80:     {;servo.c: 81:         setServoAngle(angle, pin);
  5637  0037AC  C00C  F007         	movff	setServo@pin,setServoAngle@pin
  5638  0037B0  500D               	movf	setServo@angle^0,w,c
  5639  0037B2  EC16  F013         	call	_setServoAngle
  5640  0037B6                     
  5641                           ;servo.c: 82:     }
  5642  0037B6  2A0E               	incf	setServo@i^0,f,c
  5643  0037B8                     l3607:
  5644  0037B8  500B               	movf	setServo@pulsos^0,w,c
  5645  0037BA  5C0E               	subwf	setServo@i^0,w,c
  5646  0037BC  A0D8               	btfss	status,0,c
  5647  0037BE  EFE3  F01B         	goto	u3091
  5648  0037C2  EFE5  F01B         	goto	u3090
  5649  0037C6                     u3091:
  5650  0037C6  EFD6  F01B         	goto	l3603
  5651  0037CA                     u3090:
  5652  0037CA  0012               	return		;funcret
  5653  0037CC                     __end_of_setServo:
  5654                           	callstack 0
  5655                           
  5656 ;; *************** function _setServoAngle *****************
  5657 ;; Defined at:
  5658 ;;		line 20 in file "servo.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  angle           1    wreg     unsigned char 
  5661 ;;  pin             1    6[COMRAM] unsigned char 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  angle           1    9[COMRAM] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      void 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5673 ;;      Params:         1       0       0       0       0       0       0       0       0
  5674 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5675 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5676 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5677 ;;Total ram usage:        4 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    2
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_setServo
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text34
  5688  00262C                     __ptext34:
  5689                           	callstack 0
  5690  00262C                     _setServoAngle:
  5691                           	callstack 26
  5692                           
  5693                           ;incstack = 0
  5694                           ;setServoAngle@angle stored from wreg
  5695  00262C  6E0A               	movwf	setServoAngle@angle^0,c
  5696  00262E                     
  5697                           ;servo.c: 20: void setServoAngle(uint8_t angle, uint8_t pin);servo.c: 21: {;servo.c: 23:
      +                               TMR2 = angle;
  5698  00262E  C00A  FFCC         	movff	setServoAngle@angle,4044	;volatile
  5699  002632                     
  5700                           ;servo.c: 24:     PR2 = 255;
  5701  002632  68CB               	setf	203,c	;volatile
  5702  002634                     
  5703                           ;servo.c: 26:     PIR1bits.TMR2IF = 0;
  5704  002634  929E               	bcf	158,1,c	;volatile
  5705                           
  5706                           ;servo.c: 28:     switch(pin)
  5707  002636  EF26  F013         	goto	l3349
  5708  00263A                     l234:
  5709                           
  5710                           ;servo.c: 31:             LATEbits.LATE0 = 1;
  5711  00263A  808D               	bsf	141,0,c	;volatile
  5712                           
  5713                           ;servo.c: 32:             break;
  5714  00263C  EF3F  F013         	goto	l3351
  5715  002640                     l236:
  5716                           
  5717                           ;servo.c: 34:             LATEbits.LATE1 = 1;
  5718  002640  828D               	bsf	141,1,c	;volatile
  5719                           
  5720                           ;servo.c: 35:             break;
  5721  002642  EF3F  F013         	goto	l3351
  5722  002646                     l237:
  5723                           
  5724                           ;servo.c: 37:             LATEbits.LATE2 = 1;
  5725  002646  848D               	bsf	141,2,c	;volatile
  5726                           
  5727                           ;servo.c: 38:             break;
  5728  002648  EF3F  F013         	goto	l3351
  5729  00264C                     l3349:
  5730  00264C  5007               	movf	setServoAngle@pin^0,w,c
  5731  00264E  6E08               	movwf	??_setServoAngle^0,c
  5732  002650  6A09               	clrf	(??_setServoAngle+1)^0,c
  5733                           
  5734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5735                           ; Switch size 1, requested type "simple"
  5736                           ; Number of cases is 1, Range of values is 0 to 0
  5737                           ; switch strategies available:
  5738                           ; Name         Instructions Cycles
  5739                           ; simple_byte            4     3 (average)
  5740                           ;	Chosen strategy is simple_byte
  5741  002652  5009               	movf	(??_setServoAngle+1)^0,w,c
  5742  002654  0A00               	xorlw	0	; case 0
  5743  002656  B4D8               	btfsc	status,2,c
  5744  002658  EF30  F013         	goto	l5003
  5745  00265C  EF3F  F013         	goto	l3351
  5746  002660                     l5003:
  5747                           
  5748                           ; Switch size 1, requested type "simple"
  5749                           ; Number of cases is 3, Range of values is 0 to 2
  5750                           ; switch strategies available:
  5751                           ; Name         Instructions Cycles
  5752                           ; simple_byte           10     6 (average)
  5753                           ;	Chosen strategy is simple_byte
  5754  002660  5008               	movf	??_setServoAngle^0,w,c
  5755  002662  0A00               	xorlw	0	; case 0
  5756  002664  B4D8               	btfsc	status,2,c
  5757  002666  EF1D  F013         	goto	l234
  5758  00266A  0A01               	xorlw	1	; case 1
  5759  00266C  B4D8               	btfsc	status,2,c
  5760  00266E  EF20  F013         	goto	l236
  5761  002672  0A03               	xorlw	3	; case 2
  5762  002674  B4D8               	btfsc	status,2,c
  5763  002676  EF23  F013         	goto	l237
  5764  00267A  EF3F  F013         	goto	l3351
  5765  00267E                     l3351:
  5766                           
  5767                           ;servo.c: 41:     if(angle == 45)
  5768  00267E  0E2D               	movlw	45
  5769  002680  180A               	xorwf	setServoAngle@angle^0,w,c
  5770  002682  A4D8               	btfss	status,2,c
  5771  002684  EF46  F013         	goto	u2761
  5772  002688  EF48  F013         	goto	u2760
  5773  00268C                     u2761:
  5774  00268C  EF51  F013         	goto	l3355
  5775  002690                     u2760:
  5776  002690                     
  5777                           ;servo.c: 42:     {;servo.c: 43:         _delay((unsigned long)((2000)*(12000000/4000000
      +                          .0)));
  5778  002690  0E08               	movlw	8
  5779  002692  6E08               	movwf	??_setServoAngle^0,c
  5780  002694  0ECA               	movlw	202
  5781  002696                     u4607:
  5782  002696  2EE8               	decfsz	wreg,f,c
  5783  002698  D7FE               	bra	u4607
  5784  00269A  2E08               	decfsz	??_setServoAngle^0,f,c
  5785  00269C  D7FC               	bra	u4607
  5786                           
  5787                           ;servo.c: 44:     }
  5788  00269E  EF75  F013         	goto	l3363
  5789  0026A2                     l3355:
  5790  0026A2  0E21               	movlw	33
  5791  0026A4  180A               	xorwf	setServoAngle@angle^0,w,c
  5792  0026A6  A4D8               	btfss	status,2,c
  5793  0026A8  EF58  F013         	goto	u2771
  5794  0026AC  EF5A  F013         	goto	u2770
  5795  0026B0                     u2771:
  5796  0026B0  EF64  F013         	goto	l3359
  5797  0026B4                     u2770:
  5798  0026B4                     
  5799                           ;servo.c: 46:     {;servo.c: 47:         _delay((unsigned long)((1000)*(12000000/4000000
      +                          .0)));
  5800  0026B4  0E04               	movlw	4
  5801  0026B6  6E08               	movwf	??_setServoAngle^0,c
  5802  0026B8  0EE4               	movlw	228
  5803  0026BA                     u4617:
  5804  0026BA  2EE8               	decfsz	wreg,f,c
  5805  0026BC  D7FE               	bra	u4617
  5806  0026BE  2E08               	decfsz	??_setServoAngle^0,f,c
  5807  0026C0  D7FC               	bra	u4617
  5808  0026C2  D000               	nop2	
  5809                           
  5810                           ;servo.c: 48:     }
  5811  0026C4  EF75  F013         	goto	l3363
  5812  0026C8                     l3359:
  5813  0026C8  0E27               	movlw	39
  5814  0026CA  180A               	xorwf	setServoAngle@angle^0,w,c
  5815  0026CC  A4D8               	btfss	status,2,c
  5816  0026CE  EF6B  F013         	goto	u2781
  5817  0026D2  EF6D  F013         	goto	u2780
  5818  0026D6                     u2781:
  5819  0026D6  EF75  F013         	goto	l3363
  5820  0026DA                     u2780:
  5821  0026DA                     
  5822                           ;servo.c: 50:     {;servo.c: 51:         _delay((unsigned long)((1500)*(12000000/4000000
      +                          .0)));
  5823  0026DA  0E06               	movlw	6
  5824  0026DC  6E08               	movwf	??_setServoAngle^0,c
  5825  0026DE  0ED7               	movlw	215
  5826  0026E0                     u4627:
  5827  0026E0  2EE8               	decfsz	wreg,f,c
  5828  0026E2  D7FE               	bra	u4627
  5829  0026E4  2E08               	decfsz	??_setServoAngle^0,f,c
  5830  0026E6  D7FC               	bra	u4627
  5831  0026E8  F000               	nop	
  5832  0026EA                     l3363:
  5833                           
  5834                           ;servo.c: 54:     T2CONbits.TMR2ON = 1;
  5835  0026EA  84CA               	bsf	202,2,c	;volatile
  5836                           
  5837                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5838  0026EC  EF9A  F013         	goto	l243
  5839  0026F0                     l246:
  5840                           
  5841                           ;servo.c: 60:                 LATEbits.LATE0 = 0;
  5842  0026F0  908D               	bcf	141,0,c	;volatile
  5843                           
  5844                           ;servo.c: 61:                 break;
  5845  0026F2  EF9A  F013         	goto	l243
  5846  0026F6                     l248:
  5847                           
  5848                           ;servo.c: 63:                 LATEbits.LATE1 = 0;
  5849  0026F6  928D               	bcf	141,1,c	;volatile
  5850                           
  5851                           ;servo.c: 64:                 break;
  5852  0026F8  EF9A  F013         	goto	l243
  5853  0026FC                     l249:
  5854                           
  5855                           ;servo.c: 66:                 LATEbits.LATE2 = 0;
  5856  0026FC  948D               	bcf	141,2,c	;volatile
  5857                           
  5858                           ;servo.c: 67:                 break;
  5859  0026FE  EF9A  F013         	goto	l243
  5860  002702                     l3367:
  5861  002702  5007               	movf	setServoAngle@pin^0,w,c
  5862  002704  6E08               	movwf	??_setServoAngle^0,c
  5863  002706  6A09               	clrf	(??_setServoAngle+1)^0,c
  5864                           
  5865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5866                           ; Switch size 1, requested type "simple"
  5867                           ; Number of cases is 1, Range of values is 0 to 0
  5868                           ; switch strategies available:
  5869                           ; Name         Instructions Cycles
  5870                           ; simple_byte            4     3 (average)
  5871                           ;	Chosen strategy is simple_byte
  5872  002708  5009               	movf	(??_setServoAngle+1)^0,w,c
  5873  00270A  0A00               	xorlw	0	; case 0
  5874  00270C  B4D8               	btfsc	status,2,c
  5875  00270E  EF8B  F013         	goto	l5005
  5876  002712  EF9A  F013         	goto	l243
  5877  002716                     l5005:
  5878                           
  5879                           ; Switch size 1, requested type "simple"
  5880                           ; Number of cases is 3, Range of values is 0 to 2
  5881                           ; switch strategies available:
  5882                           ; Name         Instructions Cycles
  5883                           ; simple_byte           10     6 (average)
  5884                           ;	Chosen strategy is simple_byte
  5885  002716  5008               	movf	??_setServoAngle^0,w,c
  5886  002718  0A00               	xorlw	0	; case 0
  5887  00271A  B4D8               	btfsc	status,2,c
  5888  00271C  EF78  F013         	goto	l246
  5889  002720  0A01               	xorlw	1	; case 1
  5890  002722  B4D8               	btfsc	status,2,c
  5891  002724  EF7B  F013         	goto	l248
  5892  002728  0A03               	xorlw	3	; case 2
  5893  00272A  B4D8               	btfsc	status,2,c
  5894  00272C  EF7E  F013         	goto	l249
  5895  002730  EF9A  F013         	goto	l243
  5896  002734                     l243:
  5897                           
  5898                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5899  002734  A29E               	btfss	158,1,c	;volatile
  5900  002736  EF9F  F013         	goto	u2791
  5901  00273A  EFA1  F013         	goto	u2790
  5902  00273E                     u2791:
  5903  00273E  EF81  F013         	goto	l3367
  5904  002742                     u2790:
  5905  002742                     
  5906                           ;servo.c: 71:     T2CONbits.TMR2ON = 0;
  5907  002742  94CA               	bcf	202,2,c	;volatile
  5908                           
  5909                           ;servo.c: 72:     PIR1bits.TMR2IF = 0;
  5910  002744  929E               	bcf	158,1,c	;volatile
  5911  002746  0012               	return		;funcret
  5912  002748                     __end_of_setServoAngle:
  5913                           	callstack 0
  5914                           
  5915 ;; *************** function _appCounterStart *****************
  5916 ;; Defined at:
  5917 ;;		line 142 in file "servo.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;		None
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;		None
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      void 
  5924 ;; Registers used:
  5925 ;;		None
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5931 ;;      Params:         0       0       0       0       0       0       0       0       0
  5932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5934 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5935 ;;Total ram usage:        0 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    2
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_appSubGiveElemts
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text35
  5946  00385E                     __ptext35:
  5947                           	callstack 0
  5948  00385E                     _appCounterStart:
  5949                           	callstack 26
  5950  00385E                     
  5951                           ;servo.c: 145:     T0CONbits.TMR0ON = 1;
  5952  00385E  8ED5               	bsf	213,7,c	;volatile
  5953  003860  0012               	return		;funcret
  5954  003862                     __end_of_appCounterStart:
  5955                           	callstack 0
  5956                           
  5957 ;; *************** function _appSubGetData *****************
  5958 ;; Defined at:
  5959 ;;		line 86 in file "app.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  5962 ;;		 -> datos(25), 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  cantidad        2   38[BANK0 ] unsigned short 
  5965 ;;  inout           1   40[BANK0 ] unsigned char 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5975 ;;      Params:         0       2       0       0       0       0       0       0       0
  5976 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5978 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5979 ;;Total ram usage:        5 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:   10
  5982 ;; This function calls:
  5983 ;;		_Lcd_Out
  5984 ;;		___wmul
  5985 ;;		_memset
  5986 ;;		_sprintf
  5987 ;;		_teclado
  5988 ;; This function is called by:
  5989 ;;		_appGetElements
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text36
  5994  002850                     __ptext36:
  5995                           	callstack 0
  5996  002850                     _appSubGetData:
  5997                           	callstack 19
  5998  002850                     
  5999                           ;app.c: 86: void appSubGetData(StateMachine *data_Inout);app.c: 87: {;app.c: 88:     uin
      +                          t16_t cantidad = 0;
  6000  002850  0E00               	movlw	0
  6001  002852  0100               	movlb	0	; () banked
  6002  002854  6FBB               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  6003  002856  0E00               	movlw	0
  6004  002858  6FBA               	movwf	appSubGetData@cantidad& (0+255),b
  6005                           
  6006                           ;app.c: 89:     uint8_t inout = 0;
  6007  00285A  0E00               	movlw	0
  6008  00285C  6FBC               	movwf	appSubGetData@inout& (0+255),b
  6009  00285E                     
  6010                           ; BSR set to: 0
  6011                           ;app.c: 90:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  6012  00285E  0E07               	movlw	7
  6013  002860  25B8               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6014  002862  6E07               	movwf	memset@dest^0,c
  6015  002864  0E00               	movlw	0
  6016  002866  21B9               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6017  002868  6E08               	movwf	(memset@dest+1)^0,c
  6018  00286A  0E00               	movlw	0
  6019  00286C  6E0A               	movwf	(memset@c+1)^0,c
  6020  00286E  0E00               	movlw	0
  6021  002870  6E09               	movwf	memset@c^0,c
  6022  002872  0E00               	movlw	0
  6023  002874  6E0C               	movwf	(memset@n+1)^0,c
  6024  002876  0E10               	movlw	16
  6025  002878  6E0B               	movwf	memset@n^0,c
  6026  00287A  EC6D  F010         	call	_memset	;wreg free
  6027  00287E                     
  6028                           ;app.c: 91:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  6029  00287E  0E00               	movlw	0
  6030  002880  6E0A               	movwf	Lcd_Out@x^0,c
  6031  002882  0E12               	movlw	low STR_6
  6032  002884  6E0B               	movwf	Lcd_Out@buffer^0,c
  6033  002886  0E08               	movlw	high STR_6
  6034  002888  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6035  00288A  0E01               	movlw	1
  6036  00288C  EC11  F015         	call	_Lcd_Out
  6037                           
  6038                           ;app.c: 92:     while(inout != '*')
  6039  002890  EF92  F014         	goto	l4725
  6040  002894                     l4713:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;app.c: 93:     {;app.c: 94:         teclado(&inout);
  6044  002894  0EBC               	movlw	low appSubGetData@inout
  6045  002896  6E07               	movwf	teclado@valor^0,c
  6046  002898  0E00               	movlw	high appSubGetData@inout
  6047  00289A  6E08               	movwf	(teclado@valor+1)^0,c
  6048  00289C  EC47  F00B         	call	_teclado	;wreg free
  6049  0028A0                     
  6050                           ;app.c: 96:         if((inout >= '0') && (inout <= '9'))
  6051  0028A0  0E2F               	movlw	47
  6052  0028A2  0100               	movlb	0	; () banked
  6053  0028A4  65BC               	cpfsgt	appSubGetData@inout& (0+255),b
  6054  0028A6  EF57  F014         	goto	u4271
  6055  0028AA  EF59  F014         	goto	u4270
  6056  0028AE                     u4271:
  6057  0028AE  EF76  F014         	goto	l4721
  6058  0028B2                     u4270:
  6059  0028B2                     
  6060                           ; BSR set to: 0
  6061  0028B2  0E3A               	movlw	58
  6062  0028B4  61BC               	cpfslt	appSubGetData@inout& (0+255),b
  6063  0028B6  EF5F  F014         	goto	u4281
  6064  0028BA  EF61  F014         	goto	u4280
  6065  0028BE                     u4281:
  6066  0028BE  EF76  F014         	goto	l4721
  6067  0028C2                     u4280:
  6068  0028C2                     
  6069                           ; BSR set to: 0
  6070                           ;app.c: 97:         {;app.c: 98:             cantidad = (cantidad*10)+(inout - 48);
  6071  0028C2  C0BA  F007         	movff	appSubGetData@cantidad,___wmul@multiplier
  6072  0028C6  C0BB  F008         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  6073  0028CA  0E00               	movlw	0
  6074  0028CC  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  6075  0028CE  0E0A               	movlw	10
  6076  0028D0  6E09               	movwf	___wmul@multiplicand^0,c
  6077  0028D2  ECE6  F01B         	call	___wmul	;wreg free
  6078  0028D6  0100               	movlb	0	; () banked
  6079  0028D8  51BC               	movf	appSubGetData@inout& (0+255),w,b
  6080  0028DA  2607               	addwf	?___wmul^0,f,c
  6081  0028DC  0E00               	movlw	0
  6082  0028DE  2208               	addwfc	(?___wmul+1)^0,f,c
  6083  0028E0  0ED0               	movlw	208
  6084  0028E2  2407               	addwf	?___wmul^0,w,c
  6085  0028E4  6FBA               	movwf	appSubGetData@cantidad& (0+255),b
  6086  0028E6  0EFF               	movlw	255
  6087  0028E8  2008               	addwfc	(?___wmul+1)^0,w,c
  6088  0028EA  6FBB               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  6089  0028EC                     l4721:
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;app.c: 100:         sprintf((char *)data_Inout->display,"%d",cantidad);
  6093  0028EC  0E07               	movlw	7
  6094  0028EE  25B8               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6095  0028F0  6FA6               	movwf	sprintf@s& (0+255),b
  6096  0028F2  0E00               	movlw	0
  6097  0028F4  21B9               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6098  0028F6  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6099  0028F8  0E7B               	movlw	low (STR_5+2)
  6100  0028FA  6FA8               	movwf	sprintf@fmt& (0+255),b
  6101  0028FC  0E08               	movlw	high (STR_5+2)
  6102  0028FE  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6103  002900  C0BA  F0AA         	movff	appSubGetData@cantidad,?_sprintf+4
  6104  002904  C0BB  F0AB         	movff	appSubGetData@cantidad+1,?_sprintf+5
  6105  002908  EC03  F01A         	call	_sprintf	;wreg free
  6106  00290C                     
  6107                           ;app.c: 101:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  6108  00290C  0E00               	movlw	0
  6109  00290E  6E0A               	movwf	Lcd_Out@x^0,c
  6110  002910  0E07               	movlw	7
  6111  002912  0100               	movlb	0	; () banked
  6112  002914  25B8               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6113  002916  6E0B               	movwf	Lcd_Out@buffer^0,c
  6114  002918  0E00               	movlw	0
  6115  00291A  21B9               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6116  00291C  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6117  00291E  0E02               	movlw	2
  6118  002920  EC11  F015         	call	_Lcd_Out
  6119  002924                     l4725:
  6120                           
  6121                           ;app.c: 92:     while(inout != '*')
  6122  002924  0E2A               	movlw	42
  6123  002926  0100               	movlb	0	; () banked
  6124  002928  19BC               	xorwf	appSubGetData@inout& (0+255),w,b
  6125  00292A  A4D8               	btfss	status,2,c
  6126  00292C  EF9A  F014         	goto	u4291
  6127  002930  EF9C  F014         	goto	u4290
  6128  002934                     u4291:
  6129  002934  EF4A  F014         	goto	l4713
  6130  002938                     u4290:
  6131  002938                     
  6132                           ; BSR set to: 0
  6133                           ;app.c: 103:     data_Inout->elements += (int16_t)cantidad;
  6134  002938  EE20 F001          	lfsr	2,1
  6135  00293C  51B8               	movf	appSubGetData@data_Inout& (0+255),w,b
  6136  00293E  26D9               	addwf	fsr2l,f,c
  6137  002940  51B9               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  6138  002942  22DA               	addwfc	fsr2h,f,c
  6139  002944  51BA               	movf	appSubGetData@cantidad& (0+255),w,b
  6140  002946  26DE               	addwf	postinc2,f,c
  6141  002948  51BB               	movf	(appSubGetData@cantidad+1)& (0+255),w,b
  6142  00294A  22DD               	addwfc	postdec2,f,c
  6143  00294C                     
  6144                           ; BSR set to: 0
  6145  00294C  0012               	return		;funcret
  6146  00294E                     __end_of_appSubGetData:
  6147                           	callstack 0
  6148                           
  6149 ;; *************** function _teclado *****************
  6150 ;; Defined at:
  6151 ;;		line 10 in file "teclado.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  valor           2    6[COMRAM] PTR unsigned char 
  6154 ;;		 -> appSubGetData@inout(1), datos(25), 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6166 ;;      Params:         2       0       0       0       0       0       0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6169 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6170 ;;Total ram usage:        2 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:    2
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_appStateInitial
  6177 ;;		_appSubGetData
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text37
  6182  00168E                     __ptext37:
  6183                           	callstack 0
  6184  00168E                     _teclado:
  6185                           	callstack 27
  6186  00168E                     
  6187                           ;teclado.c: 11:     *valor = 0;
  6188  00168E  C007  FFD9         	movff	teclado@valor,fsr2l
  6189  001692  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6190  001696  0E00               	movlw	0
  6191  001698  6EDF               	movwf	indf2,c
  6192  00169A                     
  6193                           ;teclado.c: 12:     PORTB=0xF0;
  6194  00169A  0EF0               	movlw	240
  6195  00169C  6E81               	movwf	129,c	;volatile
  6196  00169E                     
  6197                           ;teclado.c: 13:     if(PORTB != 0xF0){
  6198  00169E  0EF0               	movlw	240
  6199  0016A0  1881               	xorwf	129,w,c	;volatile
  6200  0016A2  B4D8               	btfsc	status,2,c
  6201  0016A4  EF56  F00B         	goto	u2901
  6202  0016A8  EF58  F00B         	goto	u2900
  6203  0016AC                     u2901:
  6204  0016AC  EF30  F00C         	goto	l3539
  6205  0016B0                     u2900:
  6206  0016B0                     
  6207                           ;teclado.c: 14:         PORTB=0xFE;
  6208  0016B0  0EFE               	movlw	254
  6209  0016B2  6E81               	movwf	129,c	;volatile
  6210  0016B4                     
  6211                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  6212  0016B4  B881               	btfsc	129,4,c	;volatile
  6213  0016B6  EF5F  F00B         	goto	u2911
  6214  0016BA  EF61  F00B         	goto	u2910
  6215  0016BE                     u2911:
  6216  0016BE  EF67  F00B         	goto	l3473
  6217  0016C2                     u2910:
  6218  0016C2  C007  FFD9         	movff	teclado@valor,fsr2l
  6219  0016C6  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6220  0016CA  0E2A               	movlw	42
  6221  0016CC  6EDF               	movwf	indf2,c
  6222  0016CE                     l3473:
  6223                           
  6224                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  6225  0016CE  BA81               	btfsc	129,5,c	;volatile
  6226  0016D0  EF6C  F00B         	goto	u2921
  6227  0016D4  EF6E  F00B         	goto	u2920
  6228  0016D8                     u2921:
  6229  0016D8  EF74  F00B         	goto	l3477
  6230  0016DC                     u2920:
  6231  0016DC  C007  FFD9         	movff	teclado@valor,fsr2l
  6232  0016E0  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6233  0016E4  0E30               	movlw	48
  6234  0016E6  6EDF               	movwf	indf2,c
  6235  0016E8                     l3477:
  6236                           
  6237                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  6238  0016E8  BC81               	btfsc	129,6,c	;volatile
  6239  0016EA  EF79  F00B         	goto	u2931
  6240  0016EE  EF7B  F00B         	goto	u2930
  6241  0016F2                     u2931:
  6242  0016F2  EF81  F00B         	goto	l3481
  6243  0016F6                     u2930:
  6244  0016F6  C007  FFD9         	movff	teclado@valor,fsr2l
  6245  0016FA  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6246  0016FE  0E23               	movlw	35
  6247  001700  6EDF               	movwf	indf2,c
  6248  001702                     l3481:
  6249                           
  6250                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  6251  001702  BE81               	btfsc	129,7,c	;volatile
  6252  001704  EF86  F00B         	goto	u2941
  6253  001708  EF88  F00B         	goto	u2940
  6254  00170C                     u2941:
  6255  00170C  EF8E  F00B         	goto	l3485
  6256  001710                     u2940:
  6257  001710  C007  FFD9         	movff	teclado@valor,fsr2l
  6258  001714  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6259  001718  0E44               	movlw	68
  6260  00171A  6EDF               	movwf	indf2,c
  6261  00171C                     l3485:
  6262                           
  6263                           ;teclado.c: 19:         PORTB=0xFD;
  6264  00171C  0EFD               	movlw	253
  6265  00171E  6E81               	movwf	129,c	;volatile
  6266  001720                     
  6267                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  6268  001720  B881               	btfsc	129,4,c	;volatile
  6269  001722  EF95  F00B         	goto	u2951
  6270  001726  EF97  F00B         	goto	u2950
  6271  00172A                     u2951:
  6272  00172A  EF9D  F00B         	goto	l3491
  6273  00172E                     u2950:
  6274  00172E  C007  FFD9         	movff	teclado@valor,fsr2l
  6275  001732  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6276  001736  0E37               	movlw	55
  6277  001738  6EDF               	movwf	indf2,c
  6278  00173A                     l3491:
  6279                           
  6280                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  6281  00173A  BA81               	btfsc	129,5,c	;volatile
  6282  00173C  EFA2  F00B         	goto	u2961
  6283  001740  EFA4  F00B         	goto	u2960
  6284  001744                     u2961:
  6285  001744  EFAA  F00B         	goto	l3495
  6286  001748                     u2960:
  6287  001748  C007  FFD9         	movff	teclado@valor,fsr2l
  6288  00174C  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6289  001750  0E38               	movlw	56
  6290  001752  6EDF               	movwf	indf2,c
  6291  001754                     l3495:
  6292                           
  6293                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  6294  001754  BC81               	btfsc	129,6,c	;volatile
  6295  001756  EFAF  F00B         	goto	u2971
  6296  00175A  EFB1  F00B         	goto	u2970
  6297  00175E                     u2971:
  6298  00175E  EFB7  F00B         	goto	l3499
  6299  001762                     u2970:
  6300  001762  C007  FFD9         	movff	teclado@valor,fsr2l
  6301  001766  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6302  00176A  0E39               	movlw	57
  6303  00176C  6EDF               	movwf	indf2,c
  6304  00176E                     l3499:
  6305                           
  6306                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  6307  00176E  BE81               	btfsc	129,7,c	;volatile
  6308  001770  EFBC  F00B         	goto	u2981
  6309  001774  EFBE  F00B         	goto	u2980
  6310  001778                     u2981:
  6311  001778  EFC4  F00B         	goto	l3503
  6312  00177C                     u2980:
  6313  00177C  C007  FFD9         	movff	teclado@valor,fsr2l
  6314  001780  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6315  001784  0E43               	movlw	67
  6316  001786  6EDF               	movwf	indf2,c
  6317  001788                     l3503:
  6318                           
  6319                           ;teclado.c: 24:         PORTB=0xFB;
  6320  001788  0EFB               	movlw	251
  6321  00178A  6E81               	movwf	129,c	;volatile
  6322  00178C                     
  6323                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  6324  00178C  B881               	btfsc	129,4,c	;volatile
  6325  00178E  EFCB  F00B         	goto	u2991
  6326  001792  EFCD  F00B         	goto	u2990
  6327  001796                     u2991:
  6328  001796  EFD3  F00B         	goto	l3509
  6329  00179A                     u2990:
  6330  00179A  C007  FFD9         	movff	teclado@valor,fsr2l
  6331  00179E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6332  0017A2  0E34               	movlw	52
  6333  0017A4  6EDF               	movwf	indf2,c
  6334  0017A6                     l3509:
  6335                           
  6336                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  6337  0017A6  BA81               	btfsc	129,5,c	;volatile
  6338  0017A8  EFD8  F00B         	goto	u3001
  6339  0017AC  EFDA  F00B         	goto	u3000
  6340  0017B0                     u3001:
  6341  0017B0  EFE0  F00B         	goto	l3513
  6342  0017B4                     u3000:
  6343  0017B4  C007  FFD9         	movff	teclado@valor,fsr2l
  6344  0017B8  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6345  0017BC  0E35               	movlw	53
  6346  0017BE  6EDF               	movwf	indf2,c
  6347  0017C0                     l3513:
  6348                           
  6349                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  6350  0017C0  BC81               	btfsc	129,6,c	;volatile
  6351  0017C2  EFE5  F00B         	goto	u3011
  6352  0017C6  EFE7  F00B         	goto	u3010
  6353  0017CA                     u3011:
  6354  0017CA  EFED  F00B         	goto	l3517
  6355  0017CE                     u3010:
  6356  0017CE  C007  FFD9         	movff	teclado@valor,fsr2l
  6357  0017D2  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6358  0017D6  0E36               	movlw	54
  6359  0017D8  6EDF               	movwf	indf2,c
  6360  0017DA                     l3517:
  6361                           
  6362                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  6363  0017DA  BE81               	btfsc	129,7,c	;volatile
  6364  0017DC  EFF2  F00B         	goto	u3021
  6365  0017E0  EFF4  F00B         	goto	u3020
  6366  0017E4                     u3021:
  6367  0017E4  EFFA  F00B         	goto	l3521
  6368  0017E8                     u3020:
  6369  0017E8  C007  FFD9         	movff	teclado@valor,fsr2l
  6370  0017EC  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6371  0017F0  0E42               	movlw	66
  6372  0017F2  6EDF               	movwf	indf2,c
  6373  0017F4                     l3521:
  6374                           
  6375                           ;teclado.c: 29:         PORTB=0xF7;
  6376  0017F4  0EF7               	movlw	247
  6377  0017F6  6E81               	movwf	129,c	;volatile
  6378  0017F8                     
  6379                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  6380  0017F8  B881               	btfsc	129,4,c	;volatile
  6381  0017FA  EF01  F00C         	goto	u3031
  6382  0017FE  EF03  F00C         	goto	u3030
  6383  001802                     u3031:
  6384  001802  EF09  F00C         	goto	l3527
  6385  001806                     u3030:
  6386  001806  C007  FFD9         	movff	teclado@valor,fsr2l
  6387  00180A  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6388  00180E  0E31               	movlw	49
  6389  001810  6EDF               	movwf	indf2,c
  6390  001812                     l3527:
  6391                           
  6392                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  6393  001812  BA81               	btfsc	129,5,c	;volatile
  6394  001814  EF0E  F00C         	goto	u3041
  6395  001818  EF10  F00C         	goto	u3040
  6396  00181C                     u3041:
  6397  00181C  EF16  F00C         	goto	l3531
  6398  001820                     u3040:
  6399  001820  C007  FFD9         	movff	teclado@valor,fsr2l
  6400  001824  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6401  001828  0E32               	movlw	50
  6402  00182A  6EDF               	movwf	indf2,c
  6403  00182C                     l3531:
  6404                           
  6405                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  6406  00182C  BC81               	btfsc	129,6,c	;volatile
  6407  00182E  EF1B  F00C         	goto	u3051
  6408  001832  EF1D  F00C         	goto	u3050
  6409  001836                     u3051:
  6410  001836  EF23  F00C         	goto	l3535
  6411  00183A                     u3050:
  6412  00183A  C007  FFD9         	movff	teclado@valor,fsr2l
  6413  00183E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6414  001842  0E33               	movlw	51
  6415  001844  6EDF               	movwf	indf2,c
  6416  001846                     l3535:
  6417                           
  6418                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  6419  001846  BE81               	btfsc	129,7,c	;volatile
  6420  001848  EF28  F00C         	goto	u3061
  6421  00184C  EF2A  F00C         	goto	u3060
  6422  001850                     u3061:
  6423  001850  EF30  F00C         	goto	l3539
  6424  001854                     u3060:
  6425  001854  C007  FFD9         	movff	teclado@valor,fsr2l
  6426  001858  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6427  00185C  0E41               	movlw	65
  6428  00185E  6EDF               	movwf	indf2,c
  6429  001860                     l3539:
  6430                           
  6431                           ;teclado.c: 35:     PORTB = 0xF0;
  6432  001860  0EF0               	movlw	240
  6433  001862  6E81               	movwf	129,c	;volatile
  6434  001864                     l3541:
  6435  001864  0EF0               	movlw	240
  6436  001866  1881               	xorwf	129,w,c	;volatile
  6437  001868  A4D8               	btfss	status,2,c
  6438  00186A  EF39  F00C         	goto	u3071
  6439  00186E  EF3B  F00C         	goto	u3070
  6440  001872                     u3071:
  6441  001872  EF32  F00C         	goto	l3541
  6442  001876                     u3070:
  6443  001876  0012               	return		;funcret
  6444  001878                     __end_of_teclado:
  6445                           	callstack 0
  6446                           
  6447 ;; *************** function _sprintf *****************
  6448 ;; Defined at:
  6449 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  s               2   18[BANK0 ] PTR unsigned char 
  6452 ;;		 -> datos(25), 
  6453 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  6454 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6455 ;;		 -> STR_1(14), 
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;  f               6   30[BANK0 ] struct _IO_FILE
  6458 ;;  ap              2   28[BANK0 ] PTR void [1]
  6459 ;;		 -> ?_sprintf(2), 
  6460 ;;  ret             2    0        int 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  2   18[BANK0 ] int 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6470 ;;      Params:         0       8       0       0       0       0       0       0       0
  6471 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6473 ;;      Totals:         0      18       0       0       0       0       0       0       0
  6474 ;;Total ram usage:       18 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    9
  6477 ;; This function calls:
  6478 ;;		_vfprintf
  6479 ;; This function is called by:
  6480 ;;		_appADC
  6481 ;;		_appBat
  6482 ;;		_appElemts
  6483 ;;		_appSubGetData
  6484 ;;		_sendinformation
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text38
  6489  003406                     __ptext38:
  6490                           	callstack 0
  6491  003406                     _sprintf:
  6492                           	callstack 20
  6493  003406  0EAA               	movlw	low (?_sprintf+4)
  6494  003408  0100               	movlb	0	; () banked
  6495  00340A  6FB0               	movwf	sprintf@ap& (0+255),b
  6496  00340C  0E00               	movlw	high (?_sprintf+4)
  6497  00340E  6FB1               	movwf	(sprintf@ap+1)& (0+255),b
  6498  003410  C0A6  F0B2         	movff	sprintf@s,sprintf@f
  6499  003414  C0A7  F0B3         	movff	sprintf@s+1,sprintf@f+1
  6500  003418                     
  6501                           ; BSR set to: 0
  6502  003418  0E00               	movlw	0
  6503  00341A  6FB5               	movwf	(sprintf@f+3)& (0+255),b
  6504  00341C  0E00               	movlw	0
  6505  00341E  6FB4               	movwf	(sprintf@f+2)& (0+255),b
  6506  003420                     
  6507                           ; BSR set to: 0
  6508  003420  0E00               	movlw	0
  6509  003422  6FB7               	movwf	(sprintf@f+5)& (0+255),b
  6510  003424  0E00               	movlw	0
  6511  003426  6FB6               	movwf	(sprintf@f+4)& (0+255),b
  6512  003428                     
  6513                           ; BSR set to: 0
  6514  003428  0EB2               	movlw	low sprintf@f
  6515  00342A  6FA0               	movwf	vfprintf@fp& (0+255),b
  6516  00342C  0E00               	movlw	high sprintf@f
  6517  00342E  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
  6518  003430  C0A8  F0A2         	movff	sprintf@fmt,vfprintf@fmt
  6519  003434  C0A9  F0A3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6520  003438  0EB0               	movlw	low sprintf@ap
  6521  00343A  6FA4               	movwf	vfprintf@ap& (0+255),b
  6522  00343C  0E00               	movlw	high sprintf@ap
  6523  00343E  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
  6524  003440  ECA6  F019         	call	_vfprintf	;wreg free
  6525  003444  0100               	movlb	0	; () banked
  6526  003446  51B4               	movf	(sprintf@f+2)& (0+255),w,b
  6527  003448  25A6               	addwf	sprintf@s& (0+255),w,b
  6528  00344A  6ED9               	movwf	fsr2l,c
  6529  00344C  51B5               	movf	(sprintf@f+3)& (0+255),w,b
  6530  00344E  21A7               	addwfc	(sprintf@s+1)& (0+255),w,b
  6531  003450  6EDA               	movwf	fsr2h,c
  6532  003452  0E00               	movlw	0
  6533  003454  6EDF               	movwf	indf2,c
  6534  003456                     
  6535                           ; BSR set to: 0
  6536  003456  0012               	return		;funcret
  6537  003458                     __end_of_sprintf:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function _vfprintf *****************
  6541 ;; Defined at:
  6542 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  6545 ;;		 -> sprintf@f(6), 
  6546 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  6547 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6548 ;;		 -> STR_1(14), 
  6549 ;;  ap              2   16[BANK0 ] PTR PTR void 
  6550 ;;		 -> sprintf@ap(2), 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  6553 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6554 ;;		 -> STR_1(14), 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  2   12[BANK0 ] int 
  6557 ;; Registers used:
  6558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6564 ;;      Params:         0       6       0       0       0       0       0       0       0
  6565 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6567 ;;      Totals:         2       6       0       0       0       0       0       0       0
  6568 ;;Total ram usage:        8 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:    8
  6571 ;; This function calls:
  6572 ;;		_vfpfcnvrt
  6573 ;; This function is called by:
  6574 ;;		_sprintf
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text39
  6579  00334C                     __ptext39:
  6580                           	callstack 0
  6581  00334C                     _vfprintf:
  6582                           	callstack 20
  6583  00334C                     
  6584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6585  00334C  C0A2  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  6586  003350  C0A3  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6587  003354                     
  6588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6589  003354  0E00               	movlw	0
  6590  003356  0100               	movlb	0	; () banked
  6591  003358  6F61               	movwf	(_nout+1)& (0+255),b
  6592  00335A  0E00               	movlw	0
  6593  00335C  6F60               	movwf	_nout& (0+255),b
  6594                           
  6595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6596  00335E  EFC4  F019         	goto	l4579
  6597  003362                     l4577:
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6601  003362  C0A0  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  6602  003366  C0A1  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6603  00336A  0E50               	movlw	low vfprintf@cfmt
  6604  00336C  6E48               	movwf	vfpfcnvrt@fmt^0,c
  6605  00336E  0E00               	movlw	high vfprintf@cfmt
  6606  003370  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6607  003372  C0A4  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  6608  003376  C0A5  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6609  00337A  EC22  F008         	call	_vfpfcnvrt	;wreg free
  6610  00337E  5046               	movf	?_vfpfcnvrt^0,w,c
  6611  003380  0100               	movlb	0	; () banked
  6612  003382  2760               	addwf	_nout& (0+255),f,b
  6613  003384  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  6614  003386  2361               	addwfc	(_nout+1)& (0+255),f,b
  6615  003388                     l4579:
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6619  003388  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  6620  00338C  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6621  003390                     	if	0	;tblptru may be non-zero
  6622  003390                     	endif
  6623  003390                     	if	0	;tblptru may be non-zero
  6624  003390                     	endif
  6625  003390  0008               	tblrd		*
  6626  003392  50F5               	movf	tablat,w,c
  6627  003394  0900               	iorlw	0
  6628  003396  A4D8               	btfss	status,2,c
  6629  003398  EFD0  F019         	goto	u4111
  6630  00339C  EFD2  F019         	goto	u4110
  6631  0033A0                     u4111:
  6632  0033A0  EFB1  F019         	goto	l4577
  6633  0033A4                     u4110:
  6634  0033A4                     
  6635                           ; BSR set to: 0
  6636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6637  0033A4  C060  F0A0         	movff	_nout,?_vfprintf
  6638  0033A8  C061  F0A1         	movff	_nout+1,?_vfprintf+1
  6639  0033AC                     
  6640                           ; BSR set to: 0
  6641  0033AC  0012               	return		;funcret
  6642  0033AE                     __end_of_vfprintf:
  6643                           	callstack 0
  6644                           
  6645 ;; *************** function _vfpfcnvrt *****************
  6646 ;; Defined at:
  6647 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  6650 ;;		 -> sprintf@f(6), 
  6651 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  6652 ;;		 -> vfprintf@cfmt(2), 
  6653 ;;  ap              2   73[COMRAM] PTR PTR void 
  6654 ;;		 -> sprintf@ap(2), 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  ll              8    0[BANK0 ] long long 
  6657 ;;  llu             8    0        unsigned long long 
  6658 ;;  f               4    0        unsigned long long 
  6659 ;;  vp              3    0        PTR void 
  6660 ;;  ct              3    0        unsigned char [3]
  6661 ;;  cp              3    0        PTR unsigned char 
  6662 ;;  done            2    8[BANK0 ] int 
  6663 ;;  i               2    0        int 
  6664 ;;  c               1    0        unsigned char 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  2   69[COMRAM] int 
  6667 ;; Registers used:
  6668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6674 ;;      Params:         6       0       0       0       0       0       0       0       0
  6675 ;;      Locals:         0      12       0       0       0       0       0       0       0
  6676 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6677 ;;      Totals:        10      12       0       0       0       0       0       0       0
  6678 ;;Total ram usage:       22 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:    7
  6681 ;; This function calls:
  6682 ;;		_atoi
  6683 ;;		_dtoa
  6684 ;;		_fputc
  6685 ;;		_isdigit
  6686 ;; This function is called by:
  6687 ;;		_vfprintf
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text40
  6692  001044                     __ptext40:
  6693                           	callstack 0
  6694  001044                     _vfpfcnvrt:
  6695                           	callstack 20
  6696  001044                     
  6697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6698  001044  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6699  001048  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6700  00104C  CFDE FFF6          	movff	postinc2,tblptrl
  6701  001050  CFDD FFF7          	movff	postdec2,tblptrh
  6702  001054                     	if	0	;tblptru may be non-zero
  6703  001054                     	endif
  6704  001054                     	if	0	;tblptru may be non-zero
  6705  001054                     	endif
  6706  001054  0008               	tblrd		*
  6707  001056  50F5               	movf	tablat,w,c
  6708  001058  0A25               	xorlw	37
  6709  00105A  A4D8               	btfss	status,2,c
  6710  00105C  EF32  F008         	goto	u2561
  6711  001060  EF34  F008         	goto	u2560
  6712  001064                     u2561:
  6713  001064  EFBC  F009         	goto	l3277
  6714  001068                     u2560:
  6715  001068                     
  6716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6717  001068  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6718  00106C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6719  001070  2ADE               	incf	postinc2,f,c
  6720  001072  0E00               	movlw	0
  6721  001074  22DD               	addwfc	postdec2,f,c
  6722  001076                     
  6723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6724  001076  0E00               	movlw	0
  6725  001078  0100               	movlb	0	; () banked
  6726  00107A  6F63               	movwf	(_width+1)& (0+255),b
  6727  00107C  0E00               	movlw	0
  6728  00107E  6F62               	movwf	_width& (0+255),b
  6729  001080  C062  F055         	movff	_width,_flags
  6730  001084  C063  F056         	movff	_width+1,_flags+1
  6731  001088                     
  6732                           ; BSR set to: 0
  6733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6734  001088  6853               	setf	_prec^0,c
  6735  00108A  6854               	setf	(_prec+1)^0,c
  6736  00108C                     
  6737                           ; BSR set to: 0
  6738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  6739  00108C  0E00               	movlw	0
  6740  00108E  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6741  001090  0E00               	movlw	0
  6742  001092  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  6743                           
  6744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6745  001094  EF92  F008         	goto	l3229
  6746  001098                     l3203:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  6750  001098  8055               	bsf	_flags^0,0,c
  6751  00109A                     l3205:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  6755  00109A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6756  00109E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6757  0010A2  2ADE               	incf	postinc2,f,c
  6758  0010A4  0E00               	movlw	0
  6759  0010A6  22DD               	addwfc	postdec2,f,c
  6760                           
  6761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  6762  0010A8  EF92  F008         	goto	l3229
  6763  0010AC                     l3207:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  6767  0010AC  8255               	bsf	_flags^0,1,c
  6768  0010AE  EF4D  F008         	goto	l3205
  6769  0010B2                     l3211:
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  6773  0010B2  8455               	bsf	_flags^0,2,c
  6774  0010B4  EF4D  F008         	goto	l3205
  6775  0010B8                     l3215:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  6779  0010B8  8655               	bsf	_flags^0,3,c
  6780  0010BA  EF4D  F008         	goto	l3205
  6781  0010BE                     l3219:
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  6785  0010BE  8855               	bsf	_flags^0,4,c
  6786  0010C0  EF4D  F008         	goto	l3205
  6787  0010C4                     l3223:
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  6791  0010C4  0E00               	movlw	0
  6792  0010C6  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6793  0010C8  0E01               	movlw	1
  6794  0010CA  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  6795                           
  6796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  6797  0010CC  EF92  F008         	goto	l3229
  6798  0010D0                     l3227:
  6799                           
  6800                           ; BSR set to: 0
  6801  0010D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6802  0010D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6803  0010D8  CFDE FFF6          	movff	postinc2,tblptrl
  6804  0010DC  CFDD FFF7          	movff	postdec2,tblptrh
  6805  0010E0                     	if	0	;tblptru may be non-zero
  6806  0010E0                     	endif
  6807  0010E0                     	if	0	;tblptru may be non-zero
  6808  0010E0                     	endif
  6809  0010E0  0008               	tblrd		*
  6810  0010E2  50F5               	movf	tablat,w,c
  6811  0010E4  6E4C               	movwf	??_vfpfcnvrt^0,c
  6812  0010E6  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  6813                           
  6814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6815                           ; Switch size 1, requested type "simple"
  6816                           ; Number of cases is 1, Range of values is 0 to 0
  6817                           ; switch strategies available:
  6818                           ; Name         Instructions Cycles
  6819                           ; simple_byte            4     3 (average)
  6820                           ;	Chosen strategy is simple_byte
  6821  0010E8  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  6822  0010EA  0A00               	xorlw	0	; case 0
  6823  0010EC  B4D8               	btfsc	status,2,c
  6824  0010EE  EF7B  F008         	goto	l5007
  6825  0010F2  EF62  F008         	goto	l3223
  6826  0010F6                     l5007:
  6827                           
  6828                           ; BSR set to: 0
  6829                           ; Switch size 1, requested type "simple"
  6830                           ; Number of cases is 5, Range of values is 32 to 48
  6831                           ; switch strategies available:
  6832                           ; Name         Instructions Cycles
  6833                           ; simple_byte           16     9 (average)
  6834                           ;	Chosen strategy is simple_byte
  6835  0010F6  504C               	movf	??_vfpfcnvrt^0,w,c
  6836  0010F8  0A20               	xorlw	32	; case 32
  6837  0010FA  B4D8               	btfsc	status,2,c
  6838  0010FC  EF5C  F008         	goto	l3215
  6839  001100  0A03               	xorlw	3	; case 35
  6840  001102  B4D8               	btfsc	status,2,c
  6841  001104  EF5F  F008         	goto	l3219
  6842  001108  0A08               	xorlw	8	; case 43
  6843  00110A  B4D8               	btfsc	status,2,c
  6844  00110C  EF59  F008         	goto	l3211
  6845  001110  0A06               	xorlw	6	; case 45
  6846  001112  B4D8               	btfsc	status,2,c
  6847  001114  EF4C  F008         	goto	l3203
  6848  001118  0A1D               	xorlw	29	; case 48
  6849  00111A  B4D8               	btfsc	status,2,c
  6850  00111C  EF56  F008         	goto	l3207
  6851  001120  EF62  F008         	goto	l3223
  6852  001124                     l3229:
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6856  001124  519C               	movf	vfpfcnvrt@done& (0+255),w,b
  6857  001126  119D               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6858  001128  B4D8               	btfsc	status,2,c
  6859  00112A  EF99  F008         	goto	u2571
  6860  00112E  EF9B  F008         	goto	u2570
  6861  001132                     u2571:
  6862  001132  EF68  F008         	goto	l3227
  6863  001136                     u2570:
  6864  001136                     
  6865                           ; BSR set to: 0
  6866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  6867  001136  A055               	btfss	_flags^0,0,c
  6868  001138  EFA0  F008         	goto	u2581
  6869  00113C  EFA2  F008         	goto	u2580
  6870  001140                     u2581:
  6871  001140  EFA3  F008         	goto	l3233
  6872  001144                     u2580:
  6873  001144                     
  6874                           ; BSR set to: 0
  6875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  6876  001144  9255               	bcf	_flags^0,1,c
  6877  001146                     l3233:
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  6881  001146  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6882  00114A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6883  00114E  CFDE FFF6          	movff	postinc2,tblptrl
  6884  001152  CFDD FFF7          	movff	postdec2,tblptrh
  6885  001156                     	if	0	;tblptru may be non-zero
  6886  001156                     	endif
  6887  001156                     	if	0	;tblptru may be non-zero
  6888  001156                     	endif
  6889  001156  0008               	tblrd		*
  6890  001158  50F5               	movf	tablat,w,c
  6891  00115A  0A2A               	xorlw	42
  6892  00115C  A4D8               	btfss	status,2,c
  6893  00115E  EFB3  F008         	goto	u2591
  6894  001162  EFB5  F008         	goto	u2590
  6895  001166                     u2591:
  6896  001166  EFDE  F008         	goto	l3241
  6897  00116A                     u2590:
  6898  00116A                     
  6899                           ; BSR set to: 0
  6900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6901  00116A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6902  00116E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6903  001172  2ADE               	incf	postinc2,f,c
  6904  001174  0E00               	movlw	0
  6905  001176  22DD               	addwfc	postdec2,f,c
  6906                           
  6907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6908  001178  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6909  00117C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6910  001180  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6911  001184  0E02               	movlw	2
  6912  001186  26DE               	addwf	postinc2,f,c
  6913  001188  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6914  00118C  0E00               	movlw	0
  6915  00118E  22DD               	addwfc	postdec2,f,c
  6916  001190  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6917  001194  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6918  001198  CFDE F062          	movff	postinc2,_width
  6919  00119C  CFDD F063          	movff	postdec2,_width+1
  6920  0011A0                     
  6921                           ; BSR set to: 0
  6922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6923  0011A0  BF63               	btfsc	(_width+1)& (0+255),7,b
  6924  0011A2  EFD7  F008         	goto	u2600
  6925  0011A6  EFD5  F008         	goto	u2601
  6926  0011AA                     u2601:
  6927  0011AA  EF22  F009         	goto	l3251
  6928  0011AE                     u2600:
  6929  0011AE                     
  6930                           ; BSR set to: 0
  6931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6932  0011AE  8055               	bsf	_flags^0,0,c
  6933                           
  6934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6935  0011B0  6D62               	negf	_width& (0+255),b
  6936  0011B2  1F63               	comf	(_width+1)& (0+255),f,b
  6937  0011B4  B0D8               	btfsc	status,0,c
  6938  0011B6  2B63               	incf	(_width+1)& (0+255),f,b
  6939  0011B8  EF22  F009         	goto	l3251
  6940  0011BC                     l3241:
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6944  0011BC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6945  0011C0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6946  0011C4  CFDE F00E          	movff	postinc2,atoi@s
  6947  0011C8  CFDD F00F          	movff	postdec2,atoi@s+1
  6948  0011CC  ECE1  F00E         	call	_atoi	;wreg free
  6949  0011D0  C00E  F062         	movff	?_atoi,_width
  6950  0011D4  C00F  F063         	movff	?_atoi+1,_width+1
  6951                           
  6952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6953  0011D8  EFF5  F008         	goto	l3245
  6954  0011DC                     l3243:
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6958  0011DC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6959  0011E0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6960  0011E4  2ADE               	incf	postinc2,f,c
  6961  0011E6  0E00               	movlw	0
  6962  0011E8  22DD               	addwfc	postdec2,f,c
  6963  0011EA                     l3245:
  6964  0011EA  0ED0               	movlw	208
  6965  0011EC  6E4C               	movwf	??_vfpfcnvrt^0,c
  6966  0011EE  0EFF               	movlw	255
  6967  0011F0  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  6968  0011F2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6969  0011F6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6970  0011FA  CFDE FFF6          	movff	postinc2,tblptrl
  6971  0011FE  CFDD FFF7          	movff	postdec2,tblptrh
  6972  001202                     	if	0	;tblptru may be non-zero
  6973  001202                     	endif
  6974  001202                     	if	0	;tblptru may be non-zero
  6975  001202                     	endif
  6976  001202  0008               	tblrd		*
  6977  001204  50F5               	movf	tablat,w,c
  6978  001206  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  6979  001208  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  6980  00120A  504C               	movf	??_vfpfcnvrt^0,w,c
  6981  00120C  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  6982  00120E  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  6983  001210  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  6984  001212  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  6985  001214  E10A               	bnz	u2610
  6986  001216  0E0A               	movlw	10
  6987  001218  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  6988  00121A  A0D8               	btfss	status,0,c
  6989  00121C  EF12  F009         	goto	u2611
  6990  001220  EF15  F009         	goto	u2610
  6991  001224                     u2611:
  6992  001224  0E01               	movlw	1
  6993  001226  EF16  F009         	goto	u2620
  6994  00122A                     u2610:
  6995  00122A  0E00               	movlw	0
  6996  00122C                     u2620:
  6997  00122C  0100               	movlb	0	; () banked
  6998  00122E  6F9E               	movwf	_vfpfcnvrt$2355& (0+255),b
  6999  001230  6B9F               	clrf	(_vfpfcnvrt$2355+1)& (0+255),b
  7000  001232                     
  7001                           ; BSR set to: 0
  7002  001232  519E               	movf	_vfpfcnvrt$2355& (0+255),w,b
  7003  001234  119F               	iorwf	(_vfpfcnvrt$2355+1)& (0+255),w,b
  7004  001236  A4D8               	btfss	status,2,c
  7005  001238  EF20  F009         	goto	u2631
  7006  00123C  EF22  F009         	goto	u2630
  7007  001240                     u2631:
  7008  001240  EFEE  F008         	goto	l3243
  7009  001244                     u2630:
  7010  001244                     l3251:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7014  001244  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7015  001248  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7016  00124C  CFDE FFF6          	movff	postinc2,tblptrl
  7017  001250  CFDD FFF7          	movff	postdec2,tblptrh
  7018  001254                     	if	0	;tblptru may be non-zero
  7019  001254                     	endif
  7020  001254                     	if	0	;tblptru may be non-zero
  7021  001254                     	endif
  7022  001254  0008               	tblrd		*
  7023  001256  50F5               	movf	tablat,w,c
  7024  001258  0A64               	xorlw	100
  7025  00125A  B4D8               	btfsc	status,2,c
  7026  00125C  EF32  F009         	goto	u2641
  7027  001260  EF34  F009         	goto	u2640
  7028  001264                     u2641:
  7029  001264  EF46  F009         	goto	l3255
  7030  001268                     u2640:
  7031  001268                     
  7032                           ; BSR set to: 0
  7033  001268  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7034  00126C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7035  001270  CFDE FFF6          	movff	postinc2,tblptrl
  7036  001274  CFDD FFF7          	movff	postdec2,tblptrh
  7037  001278                     	if	0	;tblptru may be non-zero
  7038  001278                     	endif
  7039  001278                     	if	0	;tblptru may be non-zero
  7040  001278                     	endif
  7041  001278  0008               	tblrd		*
  7042  00127A  50F5               	movf	tablat,w,c
  7043  00127C  0A69               	xorlw	105
  7044  00127E  A4D8               	btfss	status,2,c
  7045  001280  EF44  F009         	goto	u2651
  7046  001284  EF46  F009         	goto	u2650
  7047  001288                     u2651:
  7048  001288  EF86  F009         	goto	l3261
  7049  00128C                     u2650:
  7050  00128C                     l3255:
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7054  00128C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7055  001290  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7056  001294  2ADE               	incf	postinc2,f,c
  7057  001296  0E00               	movlw	0
  7058  001298  22DD               	addwfc	postdec2,f,c
  7059                           
  7060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7061  00129A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7062  00129E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7063  0012A2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  7064  0012A6  0E02               	movlw	2
  7065  0012A8  26DE               	addwf	postinc2,f,c
  7066  0012AA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  7067  0012AE  0E00               	movlw	0
  7068  0012B0  22DD               	addwfc	postdec2,f,c
  7069  0012B2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7070  0012B6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7071  0012BA  CFDE F094          	movff	postinc2,vfpfcnvrt@ll
  7072  0012BE  CFDD F095          	movff	postdec2,vfpfcnvrt@ll+1
  7073  0012C2  0E00               	movlw	0
  7074  0012C4  BF95               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7075  0012C6  0EFF               	movlw	-1
  7076  0012C8  6F96               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7077  0012CA  6F97               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7078  0012CC  6F98               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7079  0012CE  6F99               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7080  0012D0  6F9A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7081  0012D2  6F9B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7082  0012D4                     
  7083                           ; BSR set to: 0
  7084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7085  0012D4  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  7086  0012D8  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7087  0012DC  C094  F024         	movff	vfpfcnvrt@ll,dtoa@d
  7088  0012E0  C095  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7089  0012E4  C096  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7090  0012E8  C097  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7091  0012EC  C098  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7092  0012F0  C099  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7093  0012F4  C09A  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7094  0012F8  C09B  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7095  0012FC  ECD8  F009         	call	_dtoa	;wreg free
  7096  001300  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  7097  001304  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7098  001308  EFD7  F009         	goto	l1231
  7099  00130C                     l3261:
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7103  00130C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7104  001310  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7105  001314  CFDE FFF6          	movff	postinc2,tblptrl
  7106  001318  CFDD FFF7          	movff	postdec2,tblptrh
  7107  00131C                     	if	0	;tblptru may be non-zero
  7108  00131C                     	endif
  7109  00131C                     	if	0	;tblptru may be non-zero
  7110  00131C                     	endif
  7111  00131C  0008               	tblrd		*
  7112  00131E  50F5               	movf	tablat,w,c
  7113  001320  0A25               	xorlw	37
  7114  001322  A4D8               	btfss	status,2,c
  7115  001324  EF96  F009         	goto	u2661
  7116  001328  EF98  F009         	goto	u2660
  7117  00132C                     u2661:
  7118  00132C  EFAF  F009         	goto	l3271
  7119  001330                     u2660:
  7120  001330                     
  7121                           ; BSR set to: 0
  7122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7123  001330  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7124  001334  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7125  001338  2ADE               	incf	postinc2,f,c
  7126  00133A  0E00               	movlw	0
  7127  00133C  22DD               	addwfc	postdec2,f,c
  7128  00133E                     
  7129                           ; BSR set to: 0
  7130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7131  00133E  0E00               	movlw	0
  7132  001340  6E08               	movwf	(fputc@c+1)^0,c
  7133  001342  0E25               	movlw	37
  7134  001344  6E07               	movwf	fputc@c^0,c
  7135  001346  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7136  00134A  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7137  00134E  EC77  F015         	call	_fputc	;wreg free
  7138  001352                     l3267:
  7139                           
  7140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7141  001352  0E00               	movlw	0
  7142  001354  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7143  001356  0E01               	movlw	1
  7144  001358  6E46               	movwf	?_vfpfcnvrt^0,c
  7145  00135A  EFD7  F009         	goto	l1231
  7146  00135E                     l3271:
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7150  00135E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7151  001362  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7152  001366  2ADE               	incf	postinc2,f,c
  7153  001368  0E00               	movlw	0
  7154  00136A  22DD               	addwfc	postdec2,f,c
  7155  00136C                     
  7156                           ; BSR set to: 0
  7157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7158  00136C  0E00               	movlw	0
  7159  00136E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7160  001370  0E00               	movlw	0
  7161  001372  6E46               	movwf	?_vfpfcnvrt^0,c
  7162  001374  EFD7  F009         	goto	l1231
  7163  001378                     l3277:
  7164                           
  7165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7166  001378  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7167  00137C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7168  001380  CFDE FFF6          	movff	postinc2,tblptrl
  7169  001384  CFDD FFF7          	movff	postdec2,tblptrh
  7170  001388                     	if	0	;tblptru may be non-zero
  7171  001388                     	endif
  7172  001388                     	if	0	;tblptru may be non-zero
  7173  001388                     	endif
  7174  001388  0008               	tblrd		*
  7175  00138A  50F5               	movf	tablat,w,c
  7176  00138C  6E07               	movwf	fputc@c^0,c
  7177  00138E  6A08               	clrf	(fputc@c+1)^0,c
  7178  001390  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7179  001394  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7180  001398  EC77  F015         	call	_fputc	;wreg free
  7181  00139C                     
  7182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7183  00139C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7184  0013A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7185  0013A4  2ADE               	incf	postinc2,f,c
  7186  0013A6  0E00               	movlw	0
  7187  0013A8  22DD               	addwfc	postdec2,f,c
  7188  0013AA  EFA9  F009         	goto	l3267
  7189  0013AE                     l1231:
  7190  0013AE  0012               	return		;funcret
  7191  0013B0                     __end_of_vfpfcnvrt:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function _dtoa *****************
  7195 ;; Defined at:
  7196 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  7199 ;;		 -> sprintf@f(6), 
  7200 ;;  d               8   35[COMRAM] long long 
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  n               8   59[COMRAM] long long 
  7203 ;;  i               2   67[COMRAM] int 
  7204 ;;  s               2   57[COMRAM] int 
  7205 ;;  w               2   55[COMRAM] int 
  7206 ;;  p               2   53[COMRAM] int 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  2   33[COMRAM] int 
  7209 ;; Registers used:
  7210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7216 ;;      Params:        10       0       0       0       0       0       0       0       0
  7217 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7218 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7219 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7220 ;;Total ram usage:       36 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    6
  7223 ;; This function calls:
  7224 ;;		___aodiv
  7225 ;;		___aomod
  7226 ;;		_abs
  7227 ;;		_pad
  7228 ;; This function is called by:
  7229 ;;		_vfpfcnvrt
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text41
  7234  0013B0                     __ptext41:
  7235                           	callstack 0
  7236  0013B0                     _dtoa:
  7237                           	callstack 20
  7238  0013B0                     
  7239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7240  0013B0  C024  F03C         	movff	dtoa@d,dtoa@n
  7241  0013B4  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  7242  0013B8  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  7243  0013BC  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  7244  0013C0  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  7245  0013C4  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  7246  0013C8  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  7247  0013CC  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  7248  0013D0                     
  7249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7250  0013D0  BE43               	btfsc	(dtoa@n+7)^0,7,c
  7251  0013D2  EFED  F009         	goto	u2341
  7252  0013D6  EFF0  F009         	goto	u2340
  7253  0013DA                     u2341:
  7254  0013DA  0E01               	movlw	1
  7255  0013DC  EFF1  F009         	goto	u2350
  7256  0013E0                     u2340:
  7257  0013E0  0E00               	movlw	0
  7258  0013E2                     u2350:
  7259  0013E2  6E3A               	movwf	dtoa@s^0,c
  7260  0013E4  6A3B               	clrf	(dtoa@s+1)^0,c
  7261                           
  7262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7263  0013E6  503A               	movf	dtoa@s^0,w,c
  7264  0013E8  103B               	iorwf	(dtoa@s+1)^0,w,c
  7265  0013EA  B4D8               	btfsc	status,2,c
  7266  0013EC  EFFA  F009         	goto	u2361
  7267  0013F0  EFFC  F009         	goto	u2360
  7268  0013F4                     u2361:
  7269  0013F4  EF0C  F00A         	goto	l3095
  7270  0013F8                     u2360:
  7271  0013F8                     
  7272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7273  0013F8  1E43               	comf	(dtoa@n+7)^0,f,c
  7274  0013FA  1E42               	comf	(dtoa@n+6)^0,f,c
  7275  0013FC  1E41               	comf	(dtoa@n+5)^0,f,c
  7276  0013FE  1E40               	comf	(dtoa@n+4)^0,f,c
  7277  001400  1E3F               	comf	(dtoa@n+3)^0,f,c
  7278  001402  1E3E               	comf	(dtoa@n+2)^0,f,c
  7279  001404  1E3D               	comf	(dtoa@n+1)^0,f,c
  7280  001406  6C3C               	negf	dtoa@n^0,c
  7281  001408  0E00               	movlw	0
  7282  00140A  223D               	addwfc	(dtoa@n+1)^0,f,c
  7283  00140C  223E               	addwfc	(dtoa@n+2)^0,f,c
  7284  00140E  223F               	addwfc	(dtoa@n+3)^0,f,c
  7285  001410  2240               	addwfc	(dtoa@n+4)^0,f,c
  7286  001412  2241               	addwfc	(dtoa@n+5)^0,f,c
  7287  001414  2242               	addwfc	(dtoa@n+6)^0,f,c
  7288  001416  2243               	addwfc	(dtoa@n+7)^0,f,c
  7289  001418                     l3095:
  7290                           
  7291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7292  001418  BE54               	btfsc	(_prec+1)^0,7,c
  7293  00141A  EF11  F00A         	goto	u2371
  7294  00141E  EF13  F00A         	goto	u2370
  7295  001422                     u2371:
  7296  001422  EF14  F00A         	goto	l3099
  7297  001426                     u2370:
  7298  001426                     
  7299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7300  001426  9255               	bcf	_flags^0,1,c
  7301  001428                     l3099:
  7302                           
  7303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7304  001428  BE54               	btfsc	(_prec+1)^0,7,c
  7305  00142A  EF21  F00A         	goto	u2380
  7306  00142E  5054               	movf	(_prec+1)^0,w,c
  7307  001430  E106               	bnz	u2381
  7308  001432  0453               	decf	_prec^0,w,c
  7309  001434  B0D8               	btfsc	status,0,c
  7310  001436  EF1F  F00A         	goto	u2381
  7311  00143A  EF21  F00A         	goto	u2380
  7312  00143E                     u2381:
  7313  00143E  EF27  F00A         	goto	l1182
  7314  001442                     u2380:
  7315  001442  0E00               	movlw	0
  7316  001444  6E37               	movwf	(dtoa@p+1)^0,c
  7317  001446  0E01               	movlw	1
  7318  001448  6E36               	movwf	dtoa@p^0,c
  7319  00144A  EF2B  F00A         	goto	l1184
  7320  00144E                     l1182:
  7321  00144E  C053  F036         	movff	_prec,dtoa@p
  7322  001452  C054  F037         	movff	_prec+1,dtoa@p+1
  7323  001456                     l1184:
  7324                           
  7325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7326  001456  C062  F038         	movff	_width,dtoa@w
  7327  00145A  C063  F039         	movff	_width+1,dtoa@w+1
  7328  00145E                     
  7329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7330  00145E  503A               	movf	dtoa@s^0,w,c
  7331  001460  103B               	iorwf	(dtoa@s+1)^0,w,c
  7332  001462  A4D8               	btfss	status,2,c
  7333  001464  EF36  F00A         	goto	u2391
  7334  001468  EF38  F00A         	goto	u2390
  7335  00146C                     u2391:
  7336  00146C  EF3F  F00A         	goto	l3107
  7337  001470                     u2390:
  7338  001470  A455               	btfss	_flags^0,2,c
  7339  001472  EF3D  F00A         	goto	u2401
  7340  001476  EF3F  F00A         	goto	u2400
  7341  00147A                     u2401:
  7342  00147A  EF42  F00A         	goto	l3109
  7343  00147E                     u2400:
  7344  00147E                     l3107:
  7345                           
  7346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  7347  00147E  0638               	decf	dtoa@w^0,f,c
  7348  001480  A0D8               	btfss	status,0,c
  7349  001482  0639               	decf	(dtoa@w+1)^0,f,c
  7350  001484                     l3109:
  7351                           
  7352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7353  001484  0E00               	movlw	0
  7354  001486  6E45               	movwf	(dtoa@i+1)^0,c
  7355  001488  0E1F               	movlw	31
  7356  00148A  6E44               	movwf	dtoa@i^0,c
  7357  00148C                     
  7358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7359  00148C  0E00               	movlw	0
  7360  00148E  0100               	movlb	0	; () banked
  7361  001490  6F83               	movwf	(_dbuf+31)& (0+255),b
  7362                           
  7363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7364  001492  EFC7  F00A         	goto	l3123
  7365  001496                     l3113:
  7366                           
  7367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  7368  001496  0644               	decf	dtoa@i^0,f,c
  7369  001498  A0D8               	btfss	status,0,c
  7370  00149A  0645               	decf	(dtoa@i+1)^0,f,c
  7371  00149C                     
  7372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7373  00149C  0E64               	movlw	low _dbuf
  7374  00149E  2444               	addwf	dtoa@i^0,w,c
  7375  0014A0  6ED9               	movwf	fsr2l,c
  7376  0014A2  0E00               	movlw	high _dbuf
  7377  0014A4  2045               	addwfc	(dtoa@i+1)^0,w,c
  7378  0014A6  6EDA               	movwf	fsr2h,c
  7379  0014A8  C03C  F007         	movff	dtoa@n,___aomod@dividend
  7380  0014AC  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  7381  0014B0  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  7382  0014B4  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  7383  0014B8  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  7384  0014BC  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  7385  0014C0  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  7386  0014C4  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  7387  0014C8  0E0A               	movlw	10
  7388  0014CA  6E0F               	movwf	___aomod@divisor^0,c
  7389  0014CC  0E00               	movlw	0
  7390  0014CE  6E10               	movwf	(___aomod@divisor+1)^0,c
  7391  0014D0  0E00               	movlw	0
  7392  0014D2  6E11               	movwf	(___aomod@divisor+2)^0,c
  7393  0014D4  0E00               	movlw	0
  7394  0014D6  6E12               	movwf	(___aomod@divisor+3)^0,c
  7395  0014D8  0E00               	movlw	0
  7396  0014DA  6E13               	movwf	(___aomod@divisor+4)^0,c
  7397  0014DC  0E00               	movlw	0
  7398  0014DE  6E14               	movwf	(___aomod@divisor+5)^0,c
  7399  0014E0  0E00               	movlw	0
  7400  0014E2  6E15               	movwf	(___aomod@divisor+6)^0,c
  7401  0014E4  0E00               	movlw	0
  7402  0014E6  6E16               	movwf	(___aomod@divisor+7)^0,c
  7403  0014E8  EC28  F011         	call	___aomod	;wreg free
  7404  0014EC  C007  F02C         	movff	?___aomod,??_dtoa
  7405  0014F0  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  7406  0014F4  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  7407  0014F8  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  7408  0014FC  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  7409  001500  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  7410  001504  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  7411  001508  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  7412  00150C  C02C  F019         	movff	??_dtoa,abs@a
  7413  001510  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  7414  001514  EC2B  F01B         	call	_abs	;wreg free
  7415  001518  5019               	movf	?_abs^0,w,c
  7416  00151A  0F30               	addlw	48
  7417  00151C  6EDF               	movwf	indf2,c
  7418  00151E                     
  7419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  7420  00151E  0636               	decf	dtoa@p^0,f,c
  7421  001520  A0D8               	btfss	status,0,c
  7422  001522  0637               	decf	(dtoa@p+1)^0,f,c
  7423  001524                     
  7424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  7425  001524  0638               	decf	dtoa@w^0,f,c
  7426  001526  A0D8               	btfss	status,0,c
  7427  001528  0639               	decf	(dtoa@w+1)^0,f,c
  7428  00152A                     
  7429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7430  00152A  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  7431  00152E  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  7432  001532  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  7433  001536  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  7434  00153A  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  7435  00153E  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  7436  001542  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  7437  001546  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  7438  00154A  0E0A               	movlw	10
  7439  00154C  6E0F               	movwf	___aodiv@divisor^0,c
  7440  00154E  0E00               	movlw	0
  7441  001550  6E10               	movwf	(___aodiv@divisor+1)^0,c
  7442  001552  0E00               	movlw	0
  7443  001554  6E11               	movwf	(___aodiv@divisor+2)^0,c
  7444  001556  0E00               	movlw	0
  7445  001558  6E12               	movwf	(___aodiv@divisor+3)^0,c
  7446  00155A  0E00               	movlw	0
  7447  00155C  6E13               	movwf	(___aodiv@divisor+4)^0,c
  7448  00155E  0E00               	movlw	0
  7449  001560  6E14               	movwf	(___aodiv@divisor+5)^0,c
  7450  001562  0E00               	movlw	0
  7451  001564  6E15               	movwf	(___aodiv@divisor+6)^0,c
  7452  001566  0E00               	movlw	0
  7453  001568  6E16               	movwf	(___aodiv@divisor+7)^0,c
  7454  00156A  ECA9  F00F         	call	___aodiv	;wreg free
  7455  00156E  C007  F03C         	movff	?___aodiv,dtoa@n
  7456  001572  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  7457  001576  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  7458  00157A  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  7459  00157E  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  7460  001582  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  7461  001586  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  7462  00158A  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  7463  00158E                     l3123:
  7464                           
  7465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7466  00158E  BE45               	btfsc	(dtoa@i+1)^0,7,c
  7467  001590  EFD2  F00A         	goto	u2411
  7468  001594  5045               	movf	(dtoa@i+1)^0,w,c
  7469  001596  E108               	bnz	u2410
  7470  001598  0444               	decf	dtoa@i^0,w,c
  7471  00159A  A0D8               	btfss	status,0,c
  7472  00159C  EFD2  F00A         	goto	u2411
  7473  0015A0  EFD4  F00A         	goto	u2410
  7474  0015A4                     u2411:
  7475  0015A4  EF04  F00B         	goto	l3133
  7476  0015A8                     u2410:
  7477  0015A8  503C               	movf	dtoa@n^0,w,c
  7478  0015AA  103D               	iorwf	(dtoa@n+1)^0,w,c
  7479  0015AC  103E               	iorwf	(dtoa@n+2)^0,w,c
  7480  0015AE  103F               	iorwf	(dtoa@n+3)^0,w,c
  7481  0015B0  1040               	iorwf	(dtoa@n+4)^0,w,c
  7482  0015B2  1041               	iorwf	(dtoa@n+5)^0,w,c
  7483  0015B4  1042               	iorwf	(dtoa@n+6)^0,w,c
  7484  0015B6  1043               	iorwf	(dtoa@n+7)^0,w,c
  7485  0015B8  A4D8               	btfss	status,2,c
  7486  0015BA  EFE1  F00A         	goto	u2421
  7487  0015BE  EFE3  F00A         	goto	u2420
  7488  0015C2                     u2421:
  7489  0015C2  EF4B  F00A         	goto	l3113
  7490  0015C6                     u2420:
  7491  0015C6  BE37               	btfsc	(dtoa@p+1)^0,7,c
  7492  0015C8  EFF0  F00A         	goto	u2430
  7493  0015CC  5037               	movf	(dtoa@p+1)^0,w,c
  7494  0015CE  E106               	bnz	u2431
  7495  0015D0  0436               	decf	dtoa@p^0,w,c
  7496  0015D2  B0D8               	btfsc	status,0,c
  7497  0015D4  EFEE  F00A         	goto	u2431
  7498  0015D8  EFF0  F00A         	goto	u2430
  7499  0015DC                     u2431:
  7500  0015DC  EF4B  F00A         	goto	l3113
  7501  0015E0                     u2430:
  7502  0015E0  BE39               	btfsc	(dtoa@w+1)^0,7,c
  7503  0015E2  EFFB  F00A         	goto	u2441
  7504  0015E6  5039               	movf	(dtoa@w+1)^0,w,c
  7505  0015E8  E108               	bnz	u2440
  7506  0015EA  0438               	decf	dtoa@w^0,w,c
  7507  0015EC  A0D8               	btfss	status,0,c
  7508  0015EE  EFFB  F00A         	goto	u2441
  7509  0015F2  EFFD  F00A         	goto	u2440
  7510  0015F6                     u2441:
  7511  0015F6  EF04  F00B         	goto	l3133
  7512  0015FA                     u2440:
  7513  0015FA  B255               	btfsc	_flags^0,1,c
  7514  0015FC  EF02  F00B         	goto	u2451
  7515  001600  EF04  F00B         	goto	u2450
  7516  001604                     u2451:
  7517  001604  EF4B  F00A         	goto	l3113
  7518  001608                     u2450:
  7519  001608                     l3133:
  7520                           
  7521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7522  001608  503A               	movf	dtoa@s^0,w,c
  7523  00160A  103B               	iorwf	(dtoa@s+1)^0,w,c
  7524  00160C  A4D8               	btfss	status,2,c
  7525  00160E  EF0B  F00B         	goto	u2461
  7526  001612  EF0D  F00B         	goto	u2460
  7527  001616                     u2461:
  7528  001616  EF14  F00B         	goto	l3137
  7529  00161A                     u2460:
  7530  00161A  A455               	btfss	_flags^0,2,c
  7531  00161C  EF12  F00B         	goto	u2471
  7532  001620  EF14  F00B         	goto	u2470
  7533  001624                     u2471:
  7534  001624  EF32  F00B         	goto	l3147
  7535  001628                     u2470:
  7536  001628                     l3137:
  7537                           
  7538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  7539  001628  0644               	decf	dtoa@i^0,f,c
  7540  00162A  A0D8               	btfss	status,0,c
  7541  00162C  0645               	decf	(dtoa@i+1)^0,f,c
  7542  00162E                     
  7543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7544  00162E  503A               	movf	dtoa@s^0,w,c
  7545  001630  103B               	iorwf	(dtoa@s+1)^0,w,c
  7546  001632  A4D8               	btfss	status,2,c
  7547  001634  EF1E  F00B         	goto	u2481
  7548  001638  EF20  F00B         	goto	u2480
  7549  00163C                     u2481:
  7550  00163C  EF26  F00B         	goto	l3143
  7551  001640                     u2480:
  7552  001640  0E00               	movlw	0
  7553  001642  6E35               	movwf	(_dtoa$2340+1)^0,c
  7554  001644  0E2B               	movlw	43
  7555  001646  6E34               	movwf	_dtoa$2340^0,c
  7556  001648  EF2A  F00B         	goto	l3145
  7557  00164C                     l3143:
  7558  00164C  0E00               	movlw	0
  7559  00164E  6E35               	movwf	(_dtoa$2340+1)^0,c
  7560  001650  0E2D               	movlw	45
  7561  001652  6E34               	movwf	_dtoa$2340^0,c
  7562  001654                     l3145:
  7563  001654  0E64               	movlw	low _dbuf
  7564  001656  2444               	addwf	dtoa@i^0,w,c
  7565  001658  6ED9               	movwf	fsr2l,c
  7566  00165A  0E00               	movlw	high _dbuf
  7567  00165C  2045               	addwfc	(dtoa@i+1)^0,w,c
  7568  00165E  6EDA               	movwf	fsr2h,c
  7569  001660  C034  FFDF         	movff	_dtoa$2340,indf2
  7570  001664                     l3147:
  7571                           
  7572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7573  001664  C022  F017         	movff	dtoa@fp,pad@fp
  7574  001668  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  7575  00166C  0E64               	movlw	low _dbuf
  7576  00166E  2444               	addwf	dtoa@i^0,w,c
  7577  001670  6E19               	movwf	pad@buf^0,c
  7578  001672  0E00               	movlw	high _dbuf
  7579  001674  2045               	addwfc	(dtoa@i+1)^0,w,c
  7580  001676  6E1A               	movwf	(pad@buf+1)^0,c
  7581  001678  C038  F01B         	movff	dtoa@w,pad@p
  7582  00167C  C039  F01C         	movff	dtoa@w+1,pad@p+1
  7583  001680  ECDC  F015         	call	_pad	;wreg free
  7584  001684  C017  F022         	movff	?_pad,?_dtoa
  7585  001688  C018  F023         	movff	?_pad+1,?_dtoa+1
  7586  00168C  0012               	return		;funcret
  7587  00168E                     __end_of_dtoa:
  7588                           	callstack 0
  7589                           
  7590 ;; *************** function _pad *****************
  7591 ;; Defined at:
  7592 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  7595 ;;		 -> sprintf@f(6), 
  7596 ;;  buf             2   24[COMRAM] PTR unsigned char 
  7597 ;;		 -> dbuf(32), 
  7598 ;;  p               2   26[COMRAM] int 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  w               2   31[COMRAM] int 
  7601 ;;  i               2   29[COMRAM] int 
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  2   22[COMRAM] int 
  7604 ;; Registers used:
  7605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7611 ;;      Params:         6       0       0       0       0       0       0       0       0
  7612 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7613 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7614 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7615 ;;Total ram usage:       11 bytes
  7616 ;; Hardware stack levels used:    1
  7617 ;; Hardware stack levels required when called:    5
  7618 ;; This function calls:
  7619 ;;		_fputc
  7620 ;;		_fputs
  7621 ;;		_strlen
  7622 ;; This function is called by:
  7623 ;;		_dtoa
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text42
  7628  002BB8                     __ptext42:
  7629                           	callstack 0
  7630  002BB8                     _pad:
  7631                           	callstack 20
  7632  002BB8                     
  7633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7634  002BB8  A055               	btfss	_flags^0,0,c
  7635  002BBA  EFE1  F015         	goto	u2251
  7636  002BBE  EFE3  F015         	goto	u2250
  7637  002BC2                     u2251:
  7638  002BC2  EFED  F015         	goto	l3051
  7639  002BC6                     u2250:
  7640  002BC6                     
  7641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7642  002BC6  C019  F010         	movff	pad@buf,fputs@s
  7643  002BCA  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7644  002BCE  C017  F012         	movff	pad@fp,fputs@fp
  7645  002BD2  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7646  002BD6  EC09  F01B         	call	_fputs	;wreg free
  7647  002BDA                     l3051:
  7648                           
  7649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7650  002BDA  BE1C               	btfsc	(pad@p+1)^0,7,c
  7651  002BDC  EFF2  F015         	goto	u2261
  7652  002BE0  EFF4  F015         	goto	u2260
  7653  002BE4                     u2261:
  7654  002BE4  EFFA  F015         	goto	l3055
  7655  002BE8                     u2260:
  7656  002BE8  C01B  F020         	movff	pad@p,pad@w
  7657  002BEC  C01C  F021         	movff	pad@p+1,pad@w+1
  7658  002BF0  EFFE  F015         	goto	l1171
  7659  002BF4                     l3055:
  7660  002BF4  0E00               	movlw	0
  7661  002BF6  6E21               	movwf	(pad@w+1)^0,c
  7662  002BF8  0E00               	movlw	0
  7663  002BFA  6E20               	movwf	pad@w^0,c
  7664  002BFC                     l1171:
  7665                           
  7666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7667  002BFC  0E00               	movlw	0
  7668  002BFE  6E1F               	movwf	(pad@i+1)^0,c
  7669  002C00  0E00               	movlw	0
  7670  002C02  6E1E               	movwf	pad@i^0,c
  7671                           
  7672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7673  002C04  EF10  F016         	goto	l3061
  7674  002C08                     l3057:
  7675                           
  7676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7677  002C08  0E00               	movlw	0
  7678  002C0A  6E08               	movwf	(fputc@c+1)^0,c
  7679  002C0C  0E20               	movlw	32
  7680  002C0E  6E07               	movwf	fputc@c^0,c
  7681  002C10  C017  F009         	movff	pad@fp,fputc@fp
  7682  002C14  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  7683  002C18  EC77  F015         	call	_fputc	;wreg free
  7684  002C1C                     
  7685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7686  002C1C  4A1E               	infsnz	pad@i^0,f,c
  7687  002C1E  2A1F               	incf	(pad@i+1)^0,f,c
  7688  002C20                     l3061:
  7689                           
  7690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7691  002C20  5020               	movf	pad@w^0,w,c
  7692  002C22  5C1E               	subwf	pad@i^0,w,c
  7693  002C24  501F               	movf	(pad@i+1)^0,w,c
  7694  002C26  0A80               	xorlw	128
  7695  002C28  6E1D               	movwf	??_pad^0,c
  7696  002C2A  5021               	movf	(pad@w+1)^0,w,c
  7697  002C2C  0A80               	xorlw	128
  7698  002C2E  581D               	subwfb	??_pad^0,w,c
  7699  002C30  A0D8               	btfss	status,0,c
  7700  002C32  EF1D  F016         	goto	u2271
  7701  002C36  EF1F  F016         	goto	u2270
  7702  002C3A                     u2271:
  7703  002C3A  EF04  F016         	goto	l3057
  7704  002C3E                     u2270:
  7705  002C3E                     
  7706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7707  002C3E  B055               	btfsc	_flags^0,0,c
  7708  002C40  EF24  F016         	goto	u2281
  7709  002C44  EF26  F016         	goto	u2280
  7710  002C48                     u2281:
  7711  002C48  EF30  F016         	goto	l3065
  7712  002C4C                     u2280:
  7713  002C4C                     
  7714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7715  002C4C  C019  F010         	movff	pad@buf,fputs@s
  7716  002C50  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7717  002C54  C017  F012         	movff	pad@fp,fputs@fp
  7718  002C58  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7719  002C5C  EC09  F01B         	call	_fputs	;wreg free
  7720  002C60                     l3065:
  7721                           
  7722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7723  002C60  C019  F007         	movff	pad@buf,strlen@s
  7724  002C64  C01A  F008         	movff	pad@buf+1,strlen@s+1
  7725  002C68  EC85  F01B         	call	_strlen	;wreg free
  7726  002C6C  5020               	movf	pad@w^0,w,c
  7727  002C6E  2407               	addwf	?_strlen^0,w,c
  7728  002C70  6E17               	movwf	?_pad^0,c
  7729  002C72  5021               	movf	(pad@w+1)^0,w,c
  7730  002C74  2008               	addwfc	(?_strlen+1)^0,w,c
  7731  002C76  6E18               	movwf	(?_pad+1)^0,c
  7732  002C78  0012               	return		;funcret
  7733  002C7A                     __end_of_pad:
  7734                           	callstack 0
  7735                           
  7736 ;; *************** function _strlen *****************
  7737 ;; Defined at:
  7738 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7741 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  a               2    8[COMRAM] PTR const unsigned char 
  7744 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  2    6[COMRAM] unsigned int 
  7747 ;; Registers used:
  7748 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7754 ;;      Params:         2       0       0       0       0       0       0       0       0
  7755 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7757 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7758 ;;Total ram usage:        4 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    2
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_sendData
  7765 ;;		_pad
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text43
  7770  00370A                     __ptext43:
  7771                           	callstack 0
  7772  00370A                     _strlen:
  7773                           	callstack 22
  7774  00370A  C007  F009         	movff	strlen@s,strlen@a
  7775  00370E  C008  F00A         	movff	strlen@s+1,strlen@a+1
  7776  003712  EF8D  F01B         	goto	l2947
  7777  003716                     l2945:
  7778  003716  4A07               	infsnz	strlen@s^0,f,c
  7779  003718  2A08               	incf	(strlen@s+1)^0,f,c
  7780  00371A                     l2947:
  7781  00371A  C007  FFD9         	movff	strlen@s,fsr2l
  7782  00371E  C008  FFDA         	movff	strlen@s+1,fsr2h
  7783  003722  50DF               	movf	indf2,w,c
  7784  003724  A4D8               	btfss	status,2,c
  7785  003726  EF97  F01B         	goto	u2101
  7786  00372A  EF99  F01B         	goto	u2100
  7787  00372E                     u2101:
  7788  00372E  EF8B  F01B         	goto	l2945
  7789  003732                     u2100:
  7790  003732  5009               	movf	strlen@a^0,w,c
  7791  003734  5C07               	subwf	strlen@s^0,w,c
  7792  003736  6E07               	movwf	?_strlen^0,c
  7793  003738  500A               	movf	(strlen@a+1)^0,w,c
  7794  00373A  5808               	subwfb	(strlen@s+1)^0,w,c
  7795  00373C  6E08               	movwf	(?_strlen+1)^0,c
  7796  00373E  0012               	return		;funcret
  7797  003740                     __end_of_strlen:
  7798                           	callstack 0
  7799                           
  7800 ;; *************** function _fputs *****************
  7801 ;; Defined at:
  7802 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7805 ;;		 -> dbuf(32), 
  7806 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7807 ;;		 -> sprintf@f(6), 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  i               2   20[COMRAM] int 
  7810 ;;  c               1   19[COMRAM] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  2   15[COMRAM] int 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7820 ;;      Params:         4       0       0       0       0       0       0       0       0
  7821 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7823 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7824 ;;Total ram usage:        7 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    4
  7827 ;; This function calls:
  7828 ;;		_fputc
  7829 ;; This function is called by:
  7830 ;;		_pad
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text44
  7835  003612                     __ptext44:
  7836                           	callstack 0
  7837  003612                     _fputs:
  7838                           	callstack 20
  7839  003612  0E00               	movlw	0
  7840  003614  6E16               	movwf	(fputs@i+1)^0,c
  7841  003616  0E00               	movlw	0
  7842  003618  6E15               	movwf	fputs@i^0,c
  7843  00361A  EF1A  F01B         	goto	l2959
  7844  00361E                     l2955:
  7845  00361E  C014  F007         	movff	fputs@c,fputc@c
  7846  003622  6A08               	clrf	(fputc@c+1)^0,c
  7847  003624  C012  F009         	movff	fputs@fp,fputc@fp
  7848  003628  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  7849  00362C  EC77  F015         	call	_fputc	;wreg free
  7850  003630  4A15               	infsnz	fputs@i^0,f,c
  7851  003632  2A16               	incf	(fputs@i+1)^0,f,c
  7852  003634                     l2959:
  7853  003634  5015               	movf	fputs@i^0,w,c
  7854  003636  2410               	addwf	fputs@s^0,w,c
  7855  003638  6ED9               	movwf	fsr2l,c
  7856  00363A  5016               	movf	(fputs@i+1)^0,w,c
  7857  00363C  2011               	addwfc	(fputs@s+1)^0,w,c
  7858  00363E  6EDA               	movwf	fsr2h,c
  7859  003640  50DF               	movf	indf2,w,c
  7860  003642  6E14               	movwf	fputs@c^0,c
  7861  003644  5014               	movf	fputs@c^0,w,c
  7862  003646  A4D8               	btfss	status,2,c
  7863  003648  EF28  F01B         	goto	u2111
  7864  00364C  EF2A  F01B         	goto	u2110
  7865  003650                     u2111:
  7866  003650  EF0F  F01B         	goto	l2955
  7867  003654                     u2110:
  7868  003654  0012               	return		;funcret
  7869  003656                     __end_of_fputs:
  7870                           	callstack 0
  7871                           
  7872 ;; *************** function _fputc *****************
  7873 ;; Defined at:
  7874 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  c               2    6[COMRAM] int 
  7877 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  7878 ;;		 -> sprintf@f(6), 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  2    6[COMRAM] int 
  7883 ;; Registers used:
  7884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7890 ;;      Params:         4       0       0       0       0       0       0       0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7892 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7893 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7894 ;;Total ram usage:        9 bytes
  7895 ;; Hardware stack levels used:    1
  7896 ;; Hardware stack levels required when called:    3
  7897 ;; This function calls:
  7898 ;;		_putch
  7899 ;; This function is called by:
  7900 ;;		_pad
  7901 ;;		_vfpfcnvrt
  7902 ;;		_fputs
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           
  7906                           	psect	text45
  7907  002AEE                     __ptext45:
  7908                           	callstack 0
  7909  002AEE                     _fputc:
  7910                           	callstack 23
  7911  002AEE  5009               	movf	fputc@fp^0,w,c
  7912  002AF0  100A               	iorwf	(fputc@fp+1)^0,w,c
  7913  002AF2  B4D8               	btfsc	status,2,c
  7914  002AF4  EF7E  F015         	goto	u2061
  7915  002AF8  EF80  F015         	goto	u2060
  7916  002AFC                     u2061:
  7917  002AFC  EF89  F015         	goto	l2933
  7918  002B00                     u2060:
  7919  002B00  5009               	movf	fputc@fp^0,w,c
  7920  002B02  100A               	iorwf	(fputc@fp+1)^0,w,c
  7921  002B04  A4D8               	btfss	status,2,c
  7922  002B06  EF87  F015         	goto	u2071
  7923  002B0A  EF89  F015         	goto	u2070
  7924  002B0E                     u2071:
  7925  002B0E  EF8E  F015         	goto	l2935
  7926  002B12                     u2070:
  7927  002B12                     l2933:
  7928  002B12  5007               	movf	fputc@c^0,w,c
  7929  002B14  EC31  F01C         	call	_putch
  7930  002B18  EFDB  F015         	goto	l1302
  7931  002B1C                     l2935:
  7932  002B1C  EE20 F004          	lfsr	2,4
  7933  002B20  5009               	movf	fputc@fp^0,w,c
  7934  002B22  26D9               	addwf	fsr2l,f,c
  7935  002B24  500A               	movf	(fputc@fp+1)^0,w,c
  7936  002B26  22DA               	addwfc	fsr2h,f,c
  7937  002B28  50DE               	movf	postinc2,w,c
  7938  002B2A  10DE               	iorwf	postinc2,w,c
  7939  002B2C  B4D8               	btfsc	status,2,c
  7940  002B2E  EF9B  F015         	goto	u2081
  7941  002B32  EF9D  F015         	goto	u2080
  7942  002B36                     u2081:
  7943  002B36  EFB8  F015         	goto	l2939
  7944  002B3A                     u2080:
  7945  002B3A  EE20 F004          	lfsr	2,4
  7946  002B3E  5009               	movf	fputc@fp^0,w,c
  7947  002B40  26D9               	addwf	fsr2l,f,c
  7948  002B42  500A               	movf	(fputc@fp+1)^0,w,c
  7949  002B44  22DA               	addwfc	fsr2h,f,c
  7950  002B46  EE10 F002          	lfsr	1,2
  7951  002B4A  5009               	movf	fputc@fp^0,w,c
  7952  002B4C  26E1               	addwf	fsr1l,f,c
  7953  002B4E  500A               	movf	(fputc@fp+1)^0,w,c
  7954  002B50  22E2               	addwfc	fsr1h,f,c
  7955  002B52  50DE               	movf	postinc2,w,c
  7956  002B54  5CE6               	subwf	postinc1,w,c
  7957  002B56  50E6               	movf	postinc1,w,c
  7958  002B58  0A80               	xorlw	128
  7959  002B5A  6E0F               	movwf	(??_fputc+4)^0,c
  7960  002B5C  50DE               	movf	postinc2,w,c
  7961  002B5E  0A80               	xorlw	128
  7962  002B60  580F               	subwfb	(??_fputc+4)^0,w,c
  7963  002B62  B0D8               	btfsc	status,0,c
  7964  002B64  EFB6  F015         	goto	u2091
  7965  002B68  EFB8  F015         	goto	u2090
  7966  002B6C                     u2091:
  7967  002B6C  EFDB  F015         	goto	l1302
  7968  002B70                     u2090:
  7969  002B70                     l2939:
  7970  002B70  EE20 F002          	lfsr	2,2
  7971  002B74  5009               	movf	fputc@fp^0,w,c
  7972  002B76  26D9               	addwf	fsr2l,f,c
  7973  002B78  500A               	movf	(fputc@fp+1)^0,w,c
  7974  002B7A  22DA               	addwfc	fsr2h,f,c
  7975  002B7C  CFDE F00B          	movff	postinc2,??_fputc
  7976  002B80  CFDD F00C          	movff	postdec2,??_fputc+1
  7977  002B84  C009  FFD9         	movff	fputc@fp,fsr2l
  7978  002B88  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  7979  002B8C  CFDE F00D          	movff	postinc2,??_fputc+2
  7980  002B90  CFDD F00E          	movff	postdec2,??_fputc+3
  7981  002B94  500B               	movf	??_fputc^0,w,c
  7982  002B96  240D               	addwf	(??_fputc+2)^0,w,c
  7983  002B98  6ED9               	movwf	fsr2l,c
  7984  002B9A  500C               	movf	(??_fputc+1)^0,w,c
  7985  002B9C  200E               	addwfc	(??_fputc+3)^0,w,c
  7986  002B9E  6EDA               	movwf	fsr2h,c
  7987  002BA0  C007  FFDF         	movff	fputc@c,indf2
  7988  002BA4  EE20 F002          	lfsr	2,2
  7989  002BA8  5009               	movf	fputc@fp^0,w,c
  7990  002BAA  26D9               	addwf	fsr2l,f,c
  7991  002BAC  500A               	movf	(fputc@fp+1)^0,w,c
  7992  002BAE  22DA               	addwfc	fsr2h,f,c
  7993  002BB0  2ADE               	incf	postinc2,f,c
  7994  002BB2  0E00               	movlw	0
  7995  002BB4  22DD               	addwfc	postdec2,f,c
  7996  002BB6                     l1302:
  7997  002BB6  0012               	return		;funcret
  7998  002BB8                     __end_of_fputc:
  7999                           	callstack 0
  8000                           
  8001 ;; *************** function _putch *****************
  8002 ;; Defined at:
  8003 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  c               1    wreg     unsigned char 
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;  c               1    0[COMRAM] unsigned char 
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      void 
  8010 ;; Registers used:
  8011 ;;		wreg
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0
  8018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8021 ;;Total ram usage:        0 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:    2
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_fputc
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text46
  8032  003862                     __ptext46:
  8033                           	callstack 0
  8034  003862                     _putch:
  8035                           	callstack 23
  8036  003862  0012               	return		;funcret
  8037  003864                     __end_of_putch:
  8038                           	callstack 0
  8039                           
  8040 ;; *************** function _abs *****************
  8041 ;; Defined at:
  8042 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  a               2   24[COMRAM] int 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  2   24[COMRAM] int 
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8056 ;;      Params:         2       0       0       0       0       0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8058 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8059 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8060 ;;Total ram usage:        4 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    2
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_dtoa
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text47
  8071  003656                     __ptext47:
  8072                           	callstack 0
  8073  003656                     _abs:
  8074                           	callstack 23
  8075  003656  BE1A               	btfsc	(abs@a+1)^0,7,c
  8076  003658  EF38  F01B         	goto	u2290
  8077  00365C  501A               	movf	(abs@a+1)^0,w,c
  8078  00365E  E106               	bnz	u2291
  8079  003660  0419               	decf	abs@a^0,w,c
  8080  003662  B0D8               	btfsc	status,0,c
  8081  003664  EF36  F01B         	goto	u2291
  8082  003668  EF38  F01B         	goto	u2290
  8083  00366C                     u2291:
  8084  00366C  EF46  F01B         	goto	l1242
  8085  003670                     u2290:
  8086  003670  C019  F01B         	movff	abs@a,??_abs
  8087  003674  C01A  F01C         	movff	abs@a+1,??_abs+1
  8088  003678  1E1B               	comf	??_abs^0,f,c
  8089  00367A  1E1C               	comf	(??_abs+1)^0,f,c
  8090  00367C  4A1B               	infsnz	??_abs^0,f,c
  8091  00367E  2A1C               	incf	(??_abs+1)^0,f,c
  8092  003680  C01B  F019         	movff	??_abs,?_abs
  8093  003684  C01C  F01A         	movff	??_abs+1,?_abs+1
  8094  003688  EF4A  F01B         	goto	l1245
  8095  00368C                     l1242:
  8096  00368C  C019  F019         	movff	abs@a,?_abs
  8097  003690  C01A  F01A         	movff	abs@a+1,?_abs+1
  8098  003694                     l1245:
  8099  003694  0012               	return		;funcret
  8100  003696                     __end_of_abs:
  8101                           	callstack 0
  8102                           
  8103 ;; *************** function ___aomod *****************
  8104 ;; Defined at:
  8105 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  dividend        8    6[COMRAM] long long 
  8108 ;;  divisor         8   14[COMRAM] long long 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  sign            1   23[COMRAM] unsigned char 
  8111 ;;  counter         1   22[COMRAM] unsigned char 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  8    6[COMRAM] long long 
  8114 ;; Registers used:
  8115 ;;		wreg, status,2, status,0
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8121 ;;      Params:        16       0       0       0       0       0       0       0       0
  8122 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8124 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8125 ;;Total ram usage:       18 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:    2
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_dtoa
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text48
  8136  002250                     __ptext48:
  8137                           	callstack 0
  8138  002250                     ___aomod:
  8139                           	callstack 23
  8140  002250  0E00               	movlw	0
  8141  002252  6E18               	movwf	___aomod@sign^0,c
  8142  002254  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  8143  002256  EF31  F011         	goto	u2190
  8144  00225A  EF2F  F011         	goto	u2191
  8145  00225E                     u2191:
  8146  00225E  EF43  F011         	goto	l3019
  8147  002262                     u2190:
  8148  002262  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8149  002264  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8150  002266  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8151  002268  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8152  00226A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8153  00226C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8154  00226E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8155  002270  6C07               	negf	___aomod@dividend^0,c
  8156  002272  0E00               	movlw	0
  8157  002274  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8158  002276  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8159  002278  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8160  00227A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8161  00227C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8162  00227E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8163  002280  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8164  002282  0E01               	movlw	1
  8165  002284  6E18               	movwf	___aomod@sign^0,c
  8166  002286                     l3019:
  8167  002286  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  8168  002288  EF4A  F011         	goto	u2200
  8169  00228C  EF48  F011         	goto	u2201
  8170  002290                     u2201:
  8171  002290  EF5A  F011         	goto	l3023
  8172  002294                     u2200:
  8173  002294  1E16               	comf	(___aomod@divisor+7)^0,f,c
  8174  002296  1E15               	comf	(___aomod@divisor+6)^0,f,c
  8175  002298  1E14               	comf	(___aomod@divisor+5)^0,f,c
  8176  00229A  1E13               	comf	(___aomod@divisor+4)^0,f,c
  8177  00229C  1E12               	comf	(___aomod@divisor+3)^0,f,c
  8178  00229E  1E11               	comf	(___aomod@divisor+2)^0,f,c
  8179  0022A0  1E10               	comf	(___aomod@divisor+1)^0,f,c
  8180  0022A2  6C0F               	negf	___aomod@divisor^0,c
  8181  0022A4  0E00               	movlw	0
  8182  0022A6  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  8183  0022A8  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  8184  0022AA  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  8185  0022AC  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  8186  0022AE  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  8187  0022B0  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  8188  0022B2  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  8189  0022B4                     l3023:
  8190  0022B4  500F               	movf	___aomod@divisor^0,w,c
  8191  0022B6  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  8192  0022B8  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  8193  0022BA  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  8194  0022BC  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  8195  0022BE  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  8196  0022C0  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  8197  0022C2  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  8198  0022C4  B4D8               	btfsc	status,2,c
  8199  0022C6  EF67  F011         	goto	u2211
  8200  0022CA  EF69  F011         	goto	u2210
  8201  0022CE                     u2211:
  8202  0022CE  EFB1  F011         	goto	l3039
  8203  0022D2                     u2210:
  8204  0022D2  0E01               	movlw	1
  8205  0022D4  6E17               	movwf	___aomod@counter^0,c
  8206  0022D6  EF77  F011         	goto	l3029
  8207  0022DA                     l3027:
  8208  0022DA  90D8               	bcf	status,0,c
  8209  0022DC  360F               	rlcf	___aomod@divisor^0,f,c
  8210  0022DE  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  8211  0022E0  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  8212  0022E2  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  8213  0022E4  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  8214  0022E6  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  8215  0022E8  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  8216  0022EA  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  8217  0022EC  2A17               	incf	___aomod@counter^0,f,c
  8218  0022EE                     l3029:
  8219  0022EE  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  8220  0022F0  EF7C  F011         	goto	u2221
  8221  0022F4  EF7E  F011         	goto	u2220
  8222  0022F8                     u2221:
  8223  0022F8  EF6D  F011         	goto	l3027
  8224  0022FC                     u2220:
  8225  0022FC                     l3031:
  8226  0022FC  500F               	movf	___aomod@divisor^0,w,c
  8227  0022FE  5C07               	subwf	___aomod@dividend^0,w,c
  8228  002300  5010               	movf	(___aomod@divisor+1)^0,w,c
  8229  002302  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  8230  002304  5011               	movf	(___aomod@divisor+2)^0,w,c
  8231  002306  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  8232  002308  5012               	movf	(___aomod@divisor+3)^0,w,c
  8233  00230A  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  8234  00230C  5013               	movf	(___aomod@divisor+4)^0,w,c
  8235  00230E  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  8236  002310  5014               	movf	(___aomod@divisor+5)^0,w,c
  8237  002312  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  8238  002314  5015               	movf	(___aomod@divisor+6)^0,w,c
  8239  002316  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  8240  002318  5016               	movf	(___aomod@divisor+7)^0,w,c
  8241  00231A  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  8242  00231C  A0D8               	btfss	status,0,c
  8243  00231E  EF93  F011         	goto	u2231
  8244  002322  EF95  F011         	goto	u2230
  8245  002326                     u2231:
  8246  002326  EFA5  F011         	goto	l3035
  8247  00232A                     u2230:
  8248  00232A  500F               	movf	___aomod@divisor^0,w,c
  8249  00232C  5E07               	subwf	___aomod@dividend^0,f,c
  8250  00232E  5010               	movf	(___aomod@divisor+1)^0,w,c
  8251  002330  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  8252  002332  5011               	movf	(___aomod@divisor+2)^0,w,c
  8253  002334  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  8254  002336  5012               	movf	(___aomod@divisor+3)^0,w,c
  8255  002338  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  8256  00233A  5013               	movf	(___aomod@divisor+4)^0,w,c
  8257  00233C  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  8258  00233E  5014               	movf	(___aomod@divisor+5)^0,w,c
  8259  002340  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  8260  002342  5015               	movf	(___aomod@divisor+6)^0,w,c
  8261  002344  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  8262  002346  5016               	movf	(___aomod@divisor+7)^0,w,c
  8263  002348  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  8264  00234A                     l3035:
  8265  00234A  90D8               	bcf	status,0,c
  8266  00234C  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  8267  00234E  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  8268  002350  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  8269  002352  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  8270  002354  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  8271  002356  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  8272  002358  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  8273  00235A  320F               	rrcf	___aomod@divisor^0,f,c
  8274  00235C  2E17               	decfsz	___aomod@counter^0,f,c
  8275  00235E  EF7E  F011         	goto	l3031
  8276  002362                     l3039:
  8277  002362  5018               	movf	___aomod@sign^0,w,c
  8278  002364  B4D8               	btfsc	status,2,c
  8279  002366  EFB7  F011         	goto	u2241
  8280  00236A  EFB9  F011         	goto	u2240
  8281  00236E                     u2241:
  8282  00236E  EFC9  F011         	goto	l3043
  8283  002372                     u2240:
  8284  002372  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8285  002374  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8286  002376  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8287  002378  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8288  00237A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8289  00237C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8290  00237E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8291  002380  6C07               	negf	___aomod@dividend^0,c
  8292  002382  0E00               	movlw	0
  8293  002384  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8294  002386  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8295  002388  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8296  00238A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8297  00238C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8298  00238E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8299  002390  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8300  002392                     l3043:
  8301  002392  C007  F007         	movff	___aomod@dividend,?___aomod
  8302  002396  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  8303  00239A  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  8304  00239E  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  8305  0023A2  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  8306  0023A6  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  8307  0023AA  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  8308  0023AE  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  8309  0023B2  0012               	return		;funcret
  8310  0023B4                     __end_of___aomod:
  8311                           	callstack 0
  8312                           
  8313 ;; *************** function ___aodiv *****************
  8314 ;; Defined at:
  8315 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  dividend        8    6[COMRAM] long long 
  8318 ;;  divisor         8   14[COMRAM] long long 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  quotient        8   24[COMRAM] long long 
  8321 ;;  sign            1   23[COMRAM] unsigned char 
  8322 ;;  counter         1   22[COMRAM] unsigned char 
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  8    6[COMRAM] long long 
  8325 ;; Registers used:
  8326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8332 ;;      Params:        16       0       0       0       0       0       0       0       0
  8333 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8335 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8336 ;;Total ram usage:       26 bytes
  8337 ;; Hardware stack levels used:    1
  8338 ;; Hardware stack levels required when called:    2
  8339 ;; This function calls:
  8340 ;;		Nothing
  8341 ;; This function is called by:
  8342 ;;		_dtoa
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text49
  8347  001F52                     __ptext49:
  8348                           	callstack 0
  8349  001F52                     ___aodiv:
  8350                           	callstack 23
  8351  001F52  0E00               	movlw	0
  8352  001F54  6E18               	movwf	___aodiv@sign^0,c
  8353  001F56  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  8354  001F58  EFB2  F00F         	goto	u2120
  8355  001F5C  EFB0  F00F         	goto	u2121
  8356  001F60                     u2121:
  8357  001F60  EFC4  F00F         	goto	l2975
  8358  001F64                     u2120:
  8359  001F64  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  8360  001F66  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  8361  001F68  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  8362  001F6A  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  8363  001F6C  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  8364  001F6E  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  8365  001F70  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  8366  001F72  6C0F               	negf	___aodiv@divisor^0,c
  8367  001F74  0E00               	movlw	0
  8368  001F76  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  8369  001F78  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  8370  001F7A  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  8371  001F7C  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  8372  001F7E  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  8373  001F80  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  8374  001F82  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  8375  001F84  0E01               	movlw	1
  8376  001F86  6E18               	movwf	___aodiv@sign^0,c
  8377  001F88                     l2975:
  8378  001F88  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  8379  001F8A  EFCB  F00F         	goto	u2130
  8380  001F8E  EFC9  F00F         	goto	u2131
  8381  001F92                     u2131:
  8382  001F92  EFDD  F00F         	goto	l2981
  8383  001F96                     u2130:
  8384  001F96  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  8385  001F98  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  8386  001F9A  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  8387  001F9C  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  8388  001F9E  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  8389  001FA0  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  8390  001FA2  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  8391  001FA4  6C07               	negf	___aodiv@dividend^0,c
  8392  001FA6  0E00               	movlw	0
  8393  001FA8  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  8394  001FAA  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  8395  001FAC  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  8396  001FAE  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  8397  001FB0  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  8398  001FB2  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  8399  001FB4  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  8400  001FB6  0E01               	movlw	1
  8401  001FB8  1A18               	xorwf	___aodiv@sign^0,f,c
  8402  001FBA                     l2981:
  8403  001FBA  EE20  F019         	lfsr	2,___aodiv@quotient
  8404  001FBE  0E07               	movlw	7
  8405  001FC0                     u2141:
  8406  001FC0  6ADE               	clrf	postinc2,c
  8407  001FC2  06E8               	decf	wreg,f,c
  8408  001FC4  E2FD               	bc	u2141
  8409  001FC6  500F               	movf	___aodiv@divisor^0,w,c
  8410  001FC8  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  8411  001FCA  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  8412  001FCC  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  8413  001FCE  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  8414  001FD0  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  8415  001FD2  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  8416  001FD4  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  8417  001FD6  B4D8               	btfsc	status,2,c
  8418  001FD8  EFF0  F00F         	goto	u2151
  8419  001FDC  EFF2  F00F         	goto	u2150
  8420  001FE0                     u2151:
  8421  001FE0  EF44  F010         	goto	l3003
  8422  001FE4                     u2150:
  8423  001FE4  0E01               	movlw	1
  8424  001FE6  6E17               	movwf	___aodiv@counter^0,c
  8425  001FE8  EF00  F010         	goto	l2989
  8426  001FEC                     l2987:
  8427  001FEC  90D8               	bcf	status,0,c
  8428  001FEE  360F               	rlcf	___aodiv@divisor^0,f,c
  8429  001FF0  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  8430  001FF2  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  8431  001FF4  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  8432  001FF6  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  8433  001FF8  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  8434  001FFA  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  8435  001FFC  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  8436  001FFE  2A17               	incf	___aodiv@counter^0,f,c
  8437  002000                     l2989:
  8438  002000  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  8439  002002  EF05  F010         	goto	u2161
  8440  002006  EF07  F010         	goto	u2160
  8441  00200A                     u2161:
  8442  00200A  EFF6  F00F         	goto	l2987
  8443  00200E                     u2160:
  8444  00200E                     l2991:
  8445  00200E  90D8               	bcf	status,0,c
  8446  002010  3619               	rlcf	___aodiv@quotient^0,f,c
  8447  002012  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  8448  002014  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  8449  002016  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  8450  002018  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  8451  00201A  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  8452  00201C  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  8453  00201E  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  8454  002020  500F               	movf	___aodiv@divisor^0,w,c
  8455  002022  5C07               	subwf	___aodiv@dividend^0,w,c
  8456  002024  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8457  002026  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  8458  002028  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8459  00202A  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  8460  00202C  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8461  00202E  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  8462  002030  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8463  002032  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  8464  002034  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8465  002036  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  8466  002038  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8467  00203A  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  8468  00203C  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8469  00203E  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  8470  002040  A0D8               	btfss	status,0,c
  8471  002042  EF25  F010         	goto	u2171
  8472  002046  EF27  F010         	goto	u2170
  8473  00204A                     u2171:
  8474  00204A  EF38  F010         	goto	l2999
  8475  00204E                     u2170:
  8476  00204E  500F               	movf	___aodiv@divisor^0,w,c
  8477  002050  5E07               	subwf	___aodiv@dividend^0,f,c
  8478  002052  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8479  002054  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  8480  002056  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8481  002058  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  8482  00205A  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8483  00205C  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  8484  00205E  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8485  002060  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  8486  002062  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8487  002064  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  8488  002066  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8489  002068  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  8490  00206A  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8491  00206C  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  8492  00206E  8019               	bsf	___aodiv@quotient^0,0,c
  8493  002070                     l2999:
  8494  002070  90D8               	bcf	status,0,c
  8495  002072  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  8496  002074  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  8497  002076  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  8498  002078  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  8499  00207A  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  8500  00207C  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  8501  00207E  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  8502  002080  320F               	rrcf	___aodiv@divisor^0,f,c
  8503  002082  2E17               	decfsz	___aodiv@counter^0,f,c
  8504  002084  EF07  F010         	goto	l2991
  8505  002088                     l3003:
  8506  002088  5018               	movf	___aodiv@sign^0,w,c
  8507  00208A  B4D8               	btfsc	status,2,c
  8508  00208C  EF4A  F010         	goto	u2181
  8509  002090  EF4C  F010         	goto	u2180
  8510  002094                     u2181:
  8511  002094  EF5C  F010         	goto	l3007
  8512  002098                     u2180:
  8513  002098  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  8514  00209A  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  8515  00209C  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  8516  00209E  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  8517  0020A0  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  8518  0020A2  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  8519  0020A4  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  8520  0020A6  6C19               	negf	___aodiv@quotient^0,c
  8521  0020A8  0E00               	movlw	0
  8522  0020AA  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  8523  0020AC  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  8524  0020AE  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  8525  0020B0  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  8526  0020B2  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  8527  0020B4  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  8528  0020B6  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  8529  0020B8                     l3007:
  8530  0020B8  C019  F007         	movff	___aodiv@quotient,?___aodiv
  8531  0020BC  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  8532  0020C0  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  8533  0020C4  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  8534  0020C8  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  8535  0020CC  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  8536  0020D0  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  8537  0020D4  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  8538  0020D8  0012               	return		;funcret
  8539  0020DA                     __end_of___aodiv:
  8540                           	callstack 0
  8541                           
  8542 ;; *************** function _atoi *****************
  8543 ;; Defined at:
  8544 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8547 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  8548 ;;		 -> STR_1(14), 
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;  n               2   26[COMRAM] int 
  8551 ;;  neg             2   19[COMRAM] int 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  2   13[COMRAM] int 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8561 ;;      Params:         2       0       0       0       0       0       0       0       0
  8562 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8563 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8564 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8565 ;;Total ram usage:       15 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    3
  8568 ;; This function calls:
  8569 ;;		___wmul
  8570 ;;		_isdigit
  8571 ;;		_isspace
  8572 ;; This function is called by:
  8573 ;;		_vfpfcnvrt
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text50
  8578  001DC2                     __ptext50:
  8579                           	callstack 0
  8580  001DC2                     _atoi:
  8581                           	callstack 23
  8582  001DC2  0E00               	movlw	0
  8583  001DC4  6E1C               	movwf	(atoi@n+1)^0,c
  8584  001DC6  0E00               	movlw	0
  8585  001DC8  6E1B               	movwf	atoi@n^0,c
  8586  001DCA  0E00               	movlw	0
  8587  001DCC  6E15               	movwf	(atoi@neg+1)^0,c
  8588  001DCE  0E00               	movlw	0
  8589  001DD0  6E14               	movwf	atoi@neg^0,c
  8590  001DD2  EFED  F00E         	goto	l3155
  8591  001DD6                     l3153:
  8592  001DD6  4A0E               	infsnz	atoi@s^0,f,c
  8593  001DD8  2A0F               	incf	(atoi@s+1)^0,f,c
  8594  001DDA                     l3155:
  8595  001DDA  0E01               	movlw	1
  8596  001DDC  6E1A               	movwf	_atoi$2376^0,c
  8597  001DDE  C00E  FFF6         	movff	atoi@s,tblptrl
  8598  001DE2  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8599  001DE6                     	if	0	;tblptru may be non-zero
  8600  001DE6                     	endif
  8601  001DE6                     	if	0	;tblptru may be non-zero
  8602  001DE6                     	endif
  8603  001DE6  0008               	tblrd		*
  8604  001DE8  50F5               	movf	tablat,w,c
  8605  001DEA  0A20               	xorlw	32
  8606  001DEC  B4D8               	btfsc	status,2,c
  8607  001DEE  EFFB  F00E         	goto	u2491
  8608  001DF2  EFFD  F00E         	goto	u2490
  8609  001DF6                     u2491:
  8610  001DF6  EF1A  F00F         	goto	l3163
  8611  001DFA                     u2490:
  8612  001DFA  0EF7               	movlw	247
  8613  001DFC  6E10               	movwf	??_atoi^0,c
  8614  001DFE  0EFF               	movlw	255
  8615  001E00  6E11               	movwf	(??_atoi+1)^0,c
  8616  001E02  C00E  FFF6         	movff	atoi@s,tblptrl
  8617  001E06  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8618  001E0A                     	if	0	;tblptru may be non-zero
  8619  001E0A                     	endif
  8620  001E0A                     	if	0	;tblptru may be non-zero
  8621  001E0A                     	endif
  8622  001E0A  0008               	tblrd		*
  8623  001E0C  50F5               	movf	tablat,w,c
  8624  001E0E  6E12               	movwf	(??_atoi+2)^0,c
  8625  001E10  6A13               	clrf	(??_atoi+3)^0,c
  8626  001E12  5010               	movf	??_atoi^0,w,c
  8627  001E14  2612               	addwf	(??_atoi+2)^0,f,c
  8628  001E16  5011               	movf	(??_atoi+1)^0,w,c
  8629  001E18  2213               	addwfc	(??_atoi+3)^0,f,c
  8630  001E1A  5013               	movf	(??_atoi+3)^0,w,c
  8631  001E1C  E109               	bnz	u2500
  8632  001E1E  0E05               	movlw	5
  8633  001E20  5C12               	subwf	(??_atoi+2)^0,w,c
  8634  001E22  A0D8               	btfss	status,0,c
  8635  001E24  EF16  F00F         	goto	u2501
  8636  001E28  EF18  F00F         	goto	u2500
  8637  001E2C                     u2501:
  8638  001E2C  EF1A  F00F         	goto	l3163
  8639  001E30                     u2500:
  8640  001E30  0E00               	movlw	0
  8641  001E32  6E1A               	movwf	_atoi$2376^0,c
  8642  001E34                     l3163:
  8643  001E34  C01A  F016         	movff	_atoi$2376,_atoi$2375
  8644  001E38  6A17               	clrf	(_atoi$2375+1)^0,c
  8645  001E3A  5016               	movf	_atoi$2375^0,w,c
  8646  001E3C  1017               	iorwf	(_atoi$2375+1)^0,w,c
  8647  001E3E  A4D8               	btfss	status,2,c
  8648  001E40  EF24  F00F         	goto	u2511
  8649  001E44  EF26  F00F         	goto	u2510
  8650  001E48                     u2511:
  8651  001E48  EFEB  F00E         	goto	l3153
  8652  001E4C                     u2510:
  8653  001E4C  EF30  F00F         	goto	l3173
  8654  001E50                     l3169:
  8655  001E50  0E00               	movlw	0
  8656  001E52  6E15               	movwf	(atoi@neg+1)^0,c
  8657  001E54  0E01               	movlw	1
  8658  001E56  6E14               	movwf	atoi@neg^0,c
  8659  001E58                     l3171:
  8660  001E58  4A0E               	infsnz	atoi@s^0,f,c
  8661  001E5A  2A0F               	incf	(atoi@s+1)^0,f,c
  8662  001E5C  EF65  F00F         	goto	l3179
  8663  001E60                     l3173:
  8664  001E60  C00E  FFF6         	movff	atoi@s,tblptrl
  8665  001E64  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8666  001E68                     	if	0	;tblptru may be non-zero
  8667  001E68                     	endif
  8668  001E68                     	if	0	;tblptru may be non-zero
  8669  001E68                     	endif
  8670  001E68  0008               	tblrd		*
  8671  001E6A  50F5               	movf	tablat,w,c
  8672  001E6C  6E10               	movwf	??_atoi^0,c
  8673  001E6E  6A11               	clrf	(??_atoi+1)^0,c
  8674                           
  8675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8676                           ; Switch size 1, requested type "simple"
  8677                           ; Number of cases is 1, Range of values is 0 to 0
  8678                           ; switch strategies available:
  8679                           ; Name         Instructions Cycles
  8680                           ; simple_byte            4     3 (average)
  8681                           ;	Chosen strategy is simple_byte
  8682  001E70  5011               	movf	(??_atoi+1)^0,w,c
  8683  001E72  0A00               	xorlw	0	; case 0
  8684  001E74  B4D8               	btfsc	status,2,c
  8685  001E76  EF3F  F00F         	goto	l5009
  8686  001E7A  EF65  F00F         	goto	l3179
  8687  001E7E                     l5009:
  8688                           
  8689                           ; Switch size 1, requested type "simple"
  8690                           ; Number of cases is 2, Range of values is 43 to 45
  8691                           ; switch strategies available:
  8692                           ; Name         Instructions Cycles
  8693                           ; simple_byte            7     4 (average)
  8694                           ;	Chosen strategy is simple_byte
  8695  001E7E  5010               	movf	??_atoi^0,w,c
  8696  001E80  0A2B               	xorlw	43	; case 43
  8697  001E82  B4D8               	btfsc	status,2,c
  8698  001E84  EF2C  F00F         	goto	l3171
  8699  001E88  0A06               	xorlw	6	; case 45
  8700  001E8A  B4D8               	btfsc	status,2,c
  8701  001E8C  EF28  F00F         	goto	l3169
  8702  001E90  EF65  F00F         	goto	l3179
  8703  001E94                     l3175:
  8704  001E94  C01B  F007         	movff	atoi@n,___wmul@multiplier
  8705  001E98  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  8706  001E9C  0E00               	movlw	0
  8707  001E9E  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  8708  001EA0  0E0A               	movlw	10
  8709  001EA2  6E09               	movwf	___wmul@multiplicand^0,c
  8710  001EA4  ECE6  F01B         	call	___wmul	;wreg free
  8711  001EA8  C00E  FFF6         	movff	atoi@s,tblptrl
  8712  001EAC  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8713  001EB0                     	if	0	;tblptru may be non-zero
  8714  001EB0                     	endif
  8715  001EB0                     	if	0	;tblptru may be non-zero
  8716  001EB0                     	endif
  8717  001EB0  0008               	tblrd		*
  8718  001EB2  50F5               	movf	tablat,w,c
  8719  001EB4  5E07               	subwf	?___wmul^0,f,c
  8720  001EB6  0E00               	movlw	0
  8721  001EB8  5A08               	subwfb	(?___wmul+1)^0,f,c
  8722  001EBA  0E30               	movlw	48
  8723  001EBC  2407               	addwf	?___wmul^0,w,c
  8724  001EBE  6E1B               	movwf	atoi@n^0,c
  8725  001EC0  0E00               	movlw	0
  8726  001EC2  2008               	addwfc	(?___wmul+1)^0,w,c
  8727  001EC4  6E1C               	movwf	(atoi@n+1)^0,c
  8728  001EC6  EF2C  F00F         	goto	l3171
  8729  001ECA                     l3179:
  8730  001ECA  0ED0               	movlw	208
  8731  001ECC  6E10               	movwf	??_atoi^0,c
  8732  001ECE  0EFF               	movlw	255
  8733  001ED0  6E11               	movwf	(??_atoi+1)^0,c
  8734  001ED2  C00E  FFF6         	movff	atoi@s,tblptrl
  8735  001ED6  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8736  001EDA                     	if	0	;tblptru may be non-zero
  8737  001EDA                     	endif
  8738  001EDA                     	if	0	;tblptru may be non-zero
  8739  001EDA                     	endif
  8740  001EDA  0008               	tblrd		*
  8741  001EDC  50F5               	movf	tablat,w,c
  8742  001EDE  6E12               	movwf	(??_atoi+2)^0,c
  8743  001EE0  6A13               	clrf	(??_atoi+3)^0,c
  8744  001EE2  5010               	movf	??_atoi^0,w,c
  8745  001EE4  2612               	addwf	(??_atoi+2)^0,f,c
  8746  001EE6  5011               	movf	(??_atoi+1)^0,w,c
  8747  001EE8  2213               	addwfc	(??_atoi+3)^0,f,c
  8748  001EEA  5013               	movf	(??_atoi+3)^0,w,c
  8749  001EEC  E10A               	bnz	u2520
  8750  001EEE  0E0A               	movlw	10
  8751  001EF0  5C12               	subwf	(??_atoi+2)^0,w,c
  8752  001EF2  A0D8               	btfss	status,0,c
  8753  001EF4  EF7E  F00F         	goto	u2521
  8754  001EF8  EF81  F00F         	goto	u2520
  8755  001EFC                     u2521:
  8756  001EFC  0E01               	movlw	1
  8757  001EFE  EF82  F00F         	goto	u2530
  8758  001F02                     u2520:
  8759  001F02  0E00               	movlw	0
  8760  001F04                     u2530:
  8761  001F04  6E18               	movwf	_atoi$2377^0,c
  8762  001F06  6A19               	clrf	(_atoi$2377+1)^0,c
  8763  001F08  5018               	movf	_atoi$2377^0,w,c
  8764  001F0A  1019               	iorwf	(_atoi$2377+1)^0,w,c
  8765  001F0C  A4D8               	btfss	status,2,c
  8766  001F0E  EF8B  F00F         	goto	u2541
  8767  001F12  EF8D  F00F         	goto	u2540
  8768  001F16                     u2541:
  8769  001F16  EF4A  F00F         	goto	l3175
  8770  001F1A                     u2540:
  8771  001F1A  5014               	movf	atoi@neg^0,w,c
  8772  001F1C  1015               	iorwf	(atoi@neg+1)^0,w,c
  8773  001F1E  A4D8               	btfss	status,2,c
  8774  001F20  EF94  F00F         	goto	u2551
  8775  001F24  EF96  F00F         	goto	u2550
  8776  001F28                     u2551:
  8777  001F28  EFA4  F00F         	goto	l1273
  8778  001F2C                     u2550:
  8779  001F2C  C01B  F010         	movff	atoi@n,??_atoi
  8780  001F30  C01C  F011         	movff	atoi@n+1,??_atoi+1
  8781  001F34  1E10               	comf	??_atoi^0,f,c
  8782  001F36  1E11               	comf	(??_atoi+1)^0,f,c
  8783  001F38  4A10               	infsnz	??_atoi^0,f,c
  8784  001F3A  2A11               	incf	(??_atoi+1)^0,f,c
  8785  001F3C  C010  F00E         	movff	??_atoi,?_atoi
  8786  001F40  C011  F00F         	movff	??_atoi+1,?_atoi+1
  8787  001F44  EFA8  F00F         	goto	l1276
  8788  001F48                     l1273:
  8789  001F48  C01B  F00E         	movff	atoi@n,?_atoi
  8790  001F4C  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  8791  001F50                     l1276:
  8792  001F50  0012               	return		;funcret
  8793  001F52                     __end_of_atoi:
  8794                           	callstack 0
  8795                           
  8796 ;; *************** function _isspace *****************
  8797 ;; Defined at:
  8798 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  c               2    6[COMRAM] int 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  2    6[COMRAM] int 
  8805 ;; Registers used:
  8806 ;;		wreg, status,2, status,0
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8812 ;;      Params:         2       0       0       0       0       0       0       0       0
  8813 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8814 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8815 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8816 ;;Total ram usage:        7 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    2
  8819 ;; This function calls:
  8820 ;;		Nothing
  8821 ;; This function is called by:
  8822 ;;		_atoi
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text51
  8827  003458                     __ptext51:
  8828                           	callstack 0
  8829  003458                     _isspace:
  8830                           	callstack 23
  8831  003458  0E01               	movlw	1
  8832  00345A  6E0D               	movwf	_isspace$2393^0,c
  8833  00345C  0E20               	movlw	32
  8834  00345E  1807               	xorwf	isspace@c^0,w,c
  8835  003460  1008               	iorwf	(isspace@c+1)^0,w,c
  8836  003462  B4D8               	btfsc	status,2,c
  8837  003464  EF36  F01A         	goto	u2321
  8838  003468  EF38  F01A         	goto	u2320
  8839  00346C                     u2321:
  8840  00346C  EF51  F01A         	goto	l3085
  8841  003470                     u2320:
  8842  003470  0EF7               	movlw	247
  8843  003472  6E09               	movwf	??_isspace^0,c
  8844  003474  0EFF               	movlw	255
  8845  003476  6E0A               	movwf	(??_isspace+1)^0,c
  8846  003478  C007  F00B         	movff	isspace@c,??_isspace+2
  8847  00347C  C008  F00C         	movff	isspace@c+1,??_isspace+3
  8848  003480  5009               	movf	??_isspace^0,w,c
  8849  003482  260B               	addwf	(??_isspace+2)^0,f,c
  8850  003484  500A               	movf	(??_isspace+1)^0,w,c
  8851  003486  220C               	addwfc	(??_isspace+3)^0,f,c
  8852  003488  500C               	movf	(??_isspace+3)^0,w,c
  8853  00348A  E109               	bnz	u2330
  8854  00348C  0E05               	movlw	5
  8855  00348E  5C0B               	subwf	(??_isspace+2)^0,w,c
  8856  003490  A0D8               	btfss	status,0,c
  8857  003492  EF4D  F01A         	goto	u2331
  8858  003496  EF4F  F01A         	goto	u2330
  8859  00349A                     u2331:
  8860  00349A  EF51  F01A         	goto	l3085
  8861  00349E                     u2330:
  8862  00349E  0E00               	movlw	0
  8863  0034A0  6E0D               	movwf	_isspace$2393^0,c
  8864  0034A2                     l3085:
  8865  0034A2  C00D  F007         	movff	_isspace$2393,?_isspace
  8866  0034A6  6A08               	clrf	(?_isspace+1)^0,c
  8867  0034A8  0012               	return		;funcret
  8868  0034AA                     __end_of_isspace:
  8869                           	callstack 0
  8870                           
  8871 ;; *************** function _isdigit *****************
  8872 ;; Defined at:
  8873 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  c               2    6[COMRAM] int 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;		None
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  2    6[COMRAM] int 
  8880 ;; Registers used:
  8881 ;;		wreg, status,2, status,0
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8887 ;;      Params:         2       0       0       0       0       0       0       0       0
  8888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8889 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8890 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8891 ;;Total ram usage:        6 bytes
  8892 ;; Hardware stack levels used:    1
  8893 ;; Hardware stack levels required when called:    2
  8894 ;; This function calls:
  8895 ;;		Nothing
  8896 ;; This function is called by:
  8897 ;;		_vfpfcnvrt
  8898 ;;		_atoi
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text52
  8903  0036D2                     __ptext52:
  8904                           	callstack 0
  8905  0036D2                     _isdigit:
  8906                           	callstack 24
  8907  0036D2  0ED0               	movlw	208
  8908  0036D4  6E09               	movwf	??_isdigit^0,c
  8909  0036D6  0EFF               	movlw	255
  8910  0036D8  6E0A               	movwf	(??_isdigit+1)^0,c
  8911  0036DA  C007  F00B         	movff	isdigit@c,??_isdigit+2
  8912  0036DE  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  8913  0036E2  5009               	movf	??_isdigit^0,w,c
  8914  0036E4  260B               	addwf	(??_isdigit+2)^0,f,c
  8915  0036E6  500A               	movf	(??_isdigit+1)^0,w,c
  8916  0036E8  220C               	addwfc	(??_isdigit+3)^0,f,c
  8917  0036EA  500C               	movf	(??_isdigit+3)^0,w,c
  8918  0036EC  E10A               	bnz	u2300
  8919  0036EE  0E0A               	movlw	10
  8920  0036F0  5C0B               	subwf	(??_isdigit+2)^0,w,c
  8921  0036F2  A0D8               	btfss	status,0,c
  8922  0036F4  EF7E  F01B         	goto	u2301
  8923  0036F8  EF81  F01B         	goto	u2300
  8924  0036FC                     u2301:
  8925  0036FC  0E01               	movlw	1
  8926  0036FE  EF82  F01B         	goto	u2310
  8927  003702                     u2300:
  8928  003702  0E00               	movlw	0
  8929  003704                     u2310:
  8930  003704  6E07               	movwf	?_isdigit^0,c
  8931  003706  6A08               	clrf	(?_isdigit+1)^0,c
  8932  003708  0012               	return		;funcret
  8933  00370A                     __end_of_isdigit:
  8934                           	callstack 0
  8935                           
  8936 ;; *************** function ___wmul *****************
  8937 ;; Defined at:
  8938 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;  multiplier      2    6[COMRAM] unsigned int 
  8941 ;;  multiplicand    2    8[COMRAM] unsigned int 
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;  product         2   10[COMRAM] unsigned int 
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  2    6[COMRAM] unsigned int 
  8946 ;; Registers used:
  8947 ;;		wreg, status,2, status,0, prodl, prodh
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8953 ;;      Params:         4       0       0       0       0       0       0       0       0
  8954 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8956 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8957 ;;Total ram usage:        6 bytes
  8958 ;; Hardware stack levels used:    1
  8959 ;; Hardware stack levels required when called:    2
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_appSubGetData
  8964 ;;		_atoi
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	text53
  8969  0037CC                     __ptext53:
  8970                           	callstack 0
  8971  0037CC                     ___wmul:
  8972                           	callstack 23
  8973  0037CC  5007               	movf	___wmul@multiplier^0,w,c
  8974  0037CE  0209               	mulwf	___wmul@multiplicand^0,c
  8975  0037D0  CFF3 F00B          	movff	prodl,___wmul@product
  8976  0037D4  CFF4 F00C          	movff	prodh,___wmul@product+1
  8977  0037D8  5007               	movf	___wmul@multiplier^0,w,c
  8978  0037DA  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  8979  0037DC  50F3               	movf	243,w,c
  8980  0037DE  260C               	addwf	(___wmul@product+1)^0,f,c
  8981  0037E0  5008               	movf	(___wmul@multiplier+1)^0,w,c
  8982  0037E2  0209               	mulwf	___wmul@multiplicand^0,c
  8983  0037E4  50F3               	movf	243,w,c
  8984  0037E6  260C               	addwf	(___wmul@product+1)^0,f,c
  8985  0037E8  C00B  F007         	movff	___wmul@product,?___wmul
  8986  0037EC  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  8987  0037F0  0012               	return		;funcret
  8988  0037F2                     __end_of___wmul:
  8989                           	callstack 0
  8990                           
  8991 ;; *************** function _memset *****************
  8992 ;; Defined at:
  8993 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;  dest            2    6[COMRAM] PTR void 
  8996 ;;		 -> puerto(16), datos(25), 
  8997 ;;  c               2    8[COMRAM] int 
  8998 ;;  n               2   10[COMRAM] unsigned int 
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;  s               2   16[COMRAM] PTR unsigned char 
  9001 ;;		 -> puerto(16), datos(25), 
  9002 ;;  k               2   14[COMRAM] unsigned int 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  2    6[COMRAM] PTR void 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9012 ;;      Params:         6       0       0       0       0       0       0       0       0
  9013 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9014 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9015 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9016 ;;Total ram usage:       12 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:    2
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_appADC
  9023 ;;		_appBat
  9024 ;;		_appElemts
  9025 ;;		_appSubGetData
  9026 ;;		_sendinformation
  9027 ;;		_readUART
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text54
  9032  0020DA                     __ptext54:
  9033                           	callstack 0
  9034  0020DA                     _memset:
  9035                           	callstack 27
  9036  0020DA  C007  F011         	movff	memset@dest,memset@s
  9037  0020DE  C008  F012         	movff	memset@dest+1,memset@s+1
  9038  0020E2  500B               	movf	memset@n^0,w,c
  9039  0020E4  100C               	iorwf	(memset@n+1)^0,w,c
  9040  0020E6  A4D8               	btfss	status,2,c
  9041  0020E8  EF78  F010         	goto	u2821
  9042  0020EC  EF7A  F010         	goto	u2820
  9043  0020F0                     u2821:
  9044  0020F0  EF7C  F010         	goto	l3395
  9045  0020F4                     u2820:
  9046  0020F4  EF27  F011         	goto	l1127
  9047  0020F8                     l3395:
  9048  0020F8  C011  FFD9         	movff	memset@s,fsr2l
  9049  0020FC  C012  FFDA         	movff	memset@s+1,fsr2h
  9050  002100  C009  FFDF         	movff	memset@c,indf2
  9051  002104  500B               	movf	memset@n^0,w,c
  9052  002106  2411               	addwf	memset@s^0,w,c
  9053  002108  6E0D               	movwf	??_memset^0,c
  9054  00210A  500C               	movf	(memset@n+1)^0,w,c
  9055  00210C  2012               	addwfc	(memset@s+1)^0,w,c
  9056  00210E  6E0E               	movwf	(??_memset+1)^0,c
  9057  002110  0EFF               	movlw	255
  9058  002112  240D               	addwf	??_memset^0,w,c
  9059  002114  6ED9               	movwf	fsr2l,c
  9060  002116  0EFF               	movlw	255
  9061  002118  200E               	addwfc	(??_memset+1)^0,w,c
  9062  00211A  6EDA               	movwf	fsr2h,c
  9063  00211C  C009  FFDF         	movff	memset@c,indf2
  9064  002120  500C               	movf	(memset@n+1)^0,w,c
  9065  002122  E107               	bnz	u2831
  9066  002124  0E03               	movlw	3
  9067  002126  5C0B               	subwf	memset@n^0,w,c
  9068  002128  B0D8               	btfsc	status,0,c
  9069  00212A  EF99  F010         	goto	u2831
  9070  00212E  EF9B  F010         	goto	u2830
  9071  002132                     u2831:
  9072  002132  EF9D  F010         	goto	l3401
  9073  002136                     u2830:
  9074  002136  EF27  F011         	goto	l1127
  9075  00213A                     l3401:
  9076  00213A  EE20 F001          	lfsr	2,1
  9077  00213E  5011               	movf	memset@s^0,w,c
  9078  002140  26D9               	addwf	fsr2l,f,c
  9079  002142  5012               	movf	(memset@s+1)^0,w,c
  9080  002144  22DA               	addwfc	fsr2h,f,c
  9081  002146  C009  FFDF         	movff	memset@c,indf2
  9082  00214A  EE20 F002          	lfsr	2,2
  9083  00214E  5011               	movf	memset@s^0,w,c
  9084  002150  26D9               	addwf	fsr2l,f,c
  9085  002152  5012               	movf	(memset@s+1)^0,w,c
  9086  002154  22DA               	addwfc	fsr2h,f,c
  9087  002156  C009  FFDF         	movff	memset@c,indf2
  9088  00215A  500B               	movf	memset@n^0,w,c
  9089  00215C  2411               	addwf	memset@s^0,w,c
  9090  00215E  6E0D               	movwf	??_memset^0,c
  9091  002160  500C               	movf	(memset@n+1)^0,w,c
  9092  002162  2012               	addwfc	(memset@s+1)^0,w,c
  9093  002164  6E0E               	movwf	(??_memset+1)^0,c
  9094  002166  0EFE               	movlw	254
  9095  002168  240D               	addwf	??_memset^0,w,c
  9096  00216A  6ED9               	movwf	fsr2l,c
  9097  00216C  0EFF               	movlw	255
  9098  00216E  200E               	addwfc	(??_memset+1)^0,w,c
  9099  002170  6EDA               	movwf	fsr2h,c
  9100  002172  C009  FFDF         	movff	memset@c,indf2
  9101  002176  500B               	movf	memset@n^0,w,c
  9102  002178  2411               	addwf	memset@s^0,w,c
  9103  00217A  6E0D               	movwf	??_memset^0,c
  9104  00217C  500C               	movf	(memset@n+1)^0,w,c
  9105  00217E  2012               	addwfc	(memset@s+1)^0,w,c
  9106  002180  6E0E               	movwf	(??_memset+1)^0,c
  9107  002182  0EFD               	movlw	253
  9108  002184  240D               	addwf	??_memset^0,w,c
  9109  002186  6ED9               	movwf	fsr2l,c
  9110  002188  0EFF               	movlw	255
  9111  00218A  200E               	addwfc	(??_memset+1)^0,w,c
  9112  00218C  6EDA               	movwf	fsr2h,c
  9113  00218E  C009  FFDF         	movff	memset@c,indf2
  9114  002192  500C               	movf	(memset@n+1)^0,w,c
  9115  002194  E107               	bnz	u2841
  9116  002196  0E07               	movlw	7
  9117  002198  5C0B               	subwf	memset@n^0,w,c
  9118  00219A  B0D8               	btfsc	status,0,c
  9119  00219C  EFD2  F010         	goto	u2841
  9120  0021A0  EFD4  F010         	goto	u2840
  9121  0021A4                     u2841:
  9122  0021A4  EFD6  F010         	goto	l3407
  9123  0021A8                     u2840:
  9124  0021A8  EF27  F011         	goto	l1127
  9125  0021AC                     l3407:
  9126  0021AC  EE20 F003          	lfsr	2,3
  9127  0021B0  5011               	movf	memset@s^0,w,c
  9128  0021B2  26D9               	addwf	fsr2l,f,c
  9129  0021B4  5012               	movf	(memset@s+1)^0,w,c
  9130  0021B6  22DA               	addwfc	fsr2h,f,c
  9131  0021B8  C009  FFDF         	movff	memset@c,indf2
  9132  0021BC  500B               	movf	memset@n^0,w,c
  9133  0021BE  2411               	addwf	memset@s^0,w,c
  9134  0021C0  6E0D               	movwf	??_memset^0,c
  9135  0021C2  500C               	movf	(memset@n+1)^0,w,c
  9136  0021C4  2012               	addwfc	(memset@s+1)^0,w,c
  9137  0021C6  6E0E               	movwf	(??_memset+1)^0,c
  9138  0021C8  0EFC               	movlw	252
  9139  0021CA  240D               	addwf	??_memset^0,w,c
  9140  0021CC  6ED9               	movwf	fsr2l,c
  9141  0021CE  0EFF               	movlw	255
  9142  0021D0  200E               	addwfc	(??_memset+1)^0,w,c
  9143  0021D2  6EDA               	movwf	fsr2h,c
  9144  0021D4  C009  FFDF         	movff	memset@c,indf2
  9145  0021D8  500C               	movf	(memset@n+1)^0,w,c
  9146  0021DA  E107               	bnz	u2851
  9147  0021DC  0E09               	movlw	9
  9148  0021DE  5C0B               	subwf	memset@n^0,w,c
  9149  0021E0  B0D8               	btfsc	status,0,c
  9150  0021E2  EFF5  F010         	goto	u2851
  9151  0021E6  EFF7  F010         	goto	u2850
  9152  0021EA                     u2851:
  9153  0021EA  EFF9  F010         	goto	l3413
  9154  0021EE                     u2850:
  9155  0021EE  EF27  F011         	goto	l1127
  9156  0021F2                     l3413:
  9157  0021F2  C011  F00D         	movff	memset@s,??_memset
  9158  0021F6  C012  F00E         	movff	memset@s+1,??_memset+1
  9159  0021FA  1E0D               	comf	??_memset^0,f,c
  9160  0021FC  1E0E               	comf	(??_memset+1)^0,f,c
  9161  0021FE  4A0D               	infsnz	??_memset^0,f,c
  9162  002200  2A0E               	incf	(??_memset+1)^0,f,c
  9163  002202  0E03               	movlw	3
  9164  002204  140D               	andwf	??_memset^0,w,c
  9165  002206  6E0F               	movwf	memset@k^0,c
  9166  002208  6A10               	clrf	(memset@k+1)^0,c
  9167  00220A  500F               	movf	memset@k^0,w,c
  9168  00220C  2611               	addwf	memset@s^0,f,c
  9169  00220E  5010               	movf	(memset@k+1)^0,w,c
  9170  002210  2212               	addwfc	(memset@s+1)^0,f,c
  9171  002212  500F               	movf	memset@k^0,w,c
  9172  002214  5E0B               	subwf	memset@n^0,f,c
  9173  002216  5010               	movf	(memset@k+1)^0,w,c
  9174  002218  5A0C               	subwfb	(memset@n+1)^0,f,c
  9175  00221A  0EFC               	movlw	252
  9176  00221C  160B               	andwf	memset@n^0,f,c
  9177  00221E  0EFF               	movlw	255
  9178  002220  160C               	andwf	(memset@n+1)^0,f,c
  9179  002222  EF1E  F011         	goto	l3421
  9180  002226                     l3415:
  9181  002226  C011  FFD9         	movff	memset@s,fsr2l
  9182  00222A  C012  FFDA         	movff	memset@s+1,fsr2h
  9183  00222E  C009  FFDF         	movff	memset@c,indf2
  9184  002232  060B               	decf	memset@n^0,f,c
  9185  002234  A0D8               	btfss	status,0,c
  9186  002236  060C               	decf	(memset@n+1)^0,f,c
  9187  002238  4A11               	infsnz	memset@s^0,f,c
  9188  00223A  2A12               	incf	(memset@s+1)^0,f,c
  9189  00223C                     l3421:
  9190  00223C  500B               	movf	memset@n^0,w,c
  9191  00223E  100C               	iorwf	(memset@n+1)^0,w,c
  9192  002240  A4D8               	btfss	status,2,c
  9193  002242  EF25  F011         	goto	u2861
  9194  002246  EF27  F011         	goto	u2860
  9195  00224A                     u2861:
  9196  00224A  EF13  F011         	goto	l3415
  9197  00224E                     u2860:
  9198  00224E                     l1127:
  9199  00224E  0012               	return		;funcret
  9200  002250                     __end_of_memset:
  9201                           	callstack 0
  9202                           
  9203 ;; *************** function _Lcd_Out *****************
  9204 ;; Defined at:
  9205 ;;		line 95 in file "flex_lcd.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;  y               1    wreg     unsigned char 
  9208 ;;  x               1    9[COMRAM] unsigned char 
  9209 ;;  buffer          2   10[COMRAM] PTR const char 
  9210 ;;		 -> STR_10(13), STR_9(17), STR_8(12), STR_6(14), 
  9211 ;;		 -> STR_4(6), STR_3(12), datos.display(16), datos(25), 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  y               1   14[COMRAM] unsigned char 
  9214 ;;  data            1   15[COMRAM] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9224 ;;      Params:         3       0       0       0       0       0       0       0       0
  9225 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9226 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9227 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9228 ;;Total ram usage:        7 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    3
  9231 ;; This function calls:
  9232 ;;		_Lcd_Chr_CP
  9233 ;;		_Lcd_Cmd
  9234 ;; This function is called by:
  9235 ;;		_appADC
  9236 ;;		_appBat
  9237 ;;		_appLCD_Init
  9238 ;;		_appElemts
  9239 ;;		_appSubGetData
  9240 ;;		_warning
  9241 ;;		_confirmacion
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           	psect	text55
  9246  002A22                     __ptext55:
  9247                           	callstack 0
  9248  002A22                     _Lcd_Out:
  9249                           	callstack 26
  9250                           
  9251                           ;incstack = 0
  9252                           ;Lcd_Out@y stored from wreg
  9253  002A22  6E0F               	movwf	Lcd_Out@y^0,c
  9254  002A24                     
  9255                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  9256  002A24  EF28  F015         	goto	l3447
  9257  002A28                     l3437:
  9258                           
  9259                           ;flex_lcd.c: 101:             data = 128 + x;
  9260  002A28  500A               	movf	Lcd_Out@x^0,w,c
  9261  002A2A  0F80               	addlw	128
  9262  002A2C  6E10               	movwf	Lcd_Out@data^0,c
  9263                           
  9264                           ;flex_lcd.c: 102:             break;
  9265  002A2E  EF45  F015         	goto	l3449
  9266  002A32                     l3439:
  9267                           
  9268                           ;flex_lcd.c: 104:             data = 192 + x;
  9269  002A32  500A               	movf	Lcd_Out@x^0,w,c
  9270  002A34  0FC0               	addlw	192
  9271  002A36  6E10               	movwf	Lcd_Out@data^0,c
  9272                           
  9273                           ;flex_lcd.c: 105:             break;
  9274  002A38  EF45  F015         	goto	l3449
  9275  002A3C                     l3441:
  9276                           
  9277                           ;flex_lcd.c: 107:             data = 148 + x;
  9278  002A3C  500A               	movf	Lcd_Out@x^0,w,c
  9279  002A3E  0F94               	addlw	148
  9280  002A40  6E10               	movwf	Lcd_Out@data^0,c
  9281                           
  9282                           ;flex_lcd.c: 108:             break;
  9283  002A42  EF45  F015         	goto	l3449
  9284  002A46                     l3443:
  9285                           
  9286                           ;flex_lcd.c: 110:             data = 212 + x;
  9287  002A46  500A               	movf	Lcd_Out@x^0,w,c
  9288  002A48  0FD4               	addlw	212
  9289  002A4A  6E10               	movwf	Lcd_Out@data^0,c
  9290                           
  9291                           ;flex_lcd.c: 111:             break;
  9292  002A4C  EF45  F015         	goto	l3449
  9293  002A50                     l3447:
  9294  002A50  500F               	movf	Lcd_Out@y^0,w,c
  9295  002A52  6E0D               	movwf	??_Lcd_Out^0,c
  9296  002A54  6A0E               	clrf	(??_Lcd_Out+1)^0,c
  9297                           
  9298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9299                           ; Switch size 1, requested type "simple"
  9300                           ; Number of cases is 1, Range of values is 0 to 0
  9301                           ; switch strategies available:
  9302                           ; Name         Instructions Cycles
  9303                           ; simple_byte            4     3 (average)
  9304                           ;	Chosen strategy is simple_byte
  9305  002A56  500E               	movf	(??_Lcd_Out+1)^0,w,c
  9306  002A58  0A00               	xorlw	0	; case 0
  9307  002A5A  B4D8               	btfsc	status,2,c
  9308  002A5C  EF32  F015         	goto	l5011
  9309  002A60  EF45  F015         	goto	l3449
  9310  002A64                     l5011:
  9311                           
  9312                           ; Switch size 1, requested type "simple"
  9313                           ; Number of cases is 4, Range of values is 1 to 4
  9314                           ; switch strategies available:
  9315                           ; Name         Instructions Cycles
  9316                           ; simple_byte           13     7 (average)
  9317                           ;	Chosen strategy is simple_byte
  9318  002A64  500D               	movf	??_Lcd_Out^0,w,c
  9319  002A66  0A01               	xorlw	1	; case 1
  9320  002A68  B4D8               	btfsc	status,2,c
  9321  002A6A  EF14  F015         	goto	l3437
  9322  002A6E  0A03               	xorlw	3	; case 2
  9323  002A70  B4D8               	btfsc	status,2,c
  9324  002A72  EF19  F015         	goto	l3439
  9325  002A76  0A01               	xorlw	1	; case 3
  9326  002A78  B4D8               	btfsc	status,2,c
  9327  002A7A  EF1E  F015         	goto	l3441
  9328  002A7E  0A07               	xorlw	7	; case 4
  9329  002A80  B4D8               	btfsc	status,2,c
  9330  002A82  EF23  F015         	goto	l3443
  9331  002A86  EF45  F015         	goto	l3449
  9332  002A8A                     l3449:
  9333                           
  9334                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  9335  002A8A  5010               	movf	Lcd_Out@data^0,w,c
  9336  002A8C  EC81  F012         	call	_Lcd_Cmd
  9337                           
  9338                           ;flex_lcd.c: 116:     while(*buffer)
  9339  002A90  EF5E  F015         	goto	l3455
  9340  002A94                     l3451:
  9341                           
  9342                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  9343  002A94  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9344  002A98  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9345  002A9C  6AF8               	clrf	tblptru,c
  9346  002A9E  0E07               	movlw	(high __ramtop+-1)
  9347  002AA0  64F7               	cpfsgt	tblptrh,c
  9348  002AA2  D003               	bra	u2877
  9349  002AA4  0008               	tblrd		*
  9350  002AA6  50F5               	movf	tablat,w,c
  9351  002AA8  D005               	bra	u2870
  9352  002AAA                     u2877:
  9353  002AAA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9354  002AAE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9355  002AB2  50E7               	movf	indf1,w,c
  9356  002AB4                     u2870:
  9357  002AB4  ECDA  F011         	call	_Lcd_Chr_CP
  9358  002AB8                     
  9359                           ;flex_lcd.c: 119:         buffer++;
  9360  002AB8  4A0B               	infsnz	Lcd_Out@buffer^0,f,c
  9361  002ABA  2A0C               	incf	(Lcd_Out@buffer+1)^0,f,c
  9362  002ABC                     l3455:
  9363                           
  9364                           ;flex_lcd.c: 116:     while(*buffer)
  9365  002ABC  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9366  002AC0  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9367  002AC4  6AF8               	clrf	tblptru,c
  9368  002AC6  0E07               	movlw	(high __ramtop+-1)
  9369  002AC8  64F7               	cpfsgt	tblptrh,c
  9370  002ACA  D003               	bra	u2887
  9371  002ACC  0008               	tblrd		*
  9372  002ACE  50F5               	movf	tablat,w,c
  9373  002AD0  D005               	bra	u2880
  9374  002AD2                     u2887:
  9375  002AD2  CFF6 FFE1          	movff	tblptrl,fsr1l
  9376  002AD6  CFF7 FFE2          	movff	tblptrh,fsr1h
  9377  002ADA  50E7               	movf	indf1,w,c
  9378  002ADC                     u2880:
  9379  002ADC  0900               	iorlw	0
  9380  002ADE  A4D8               	btfss	status,2,c
  9381  002AE0  EF74  F015         	goto	u2891
  9382  002AE4  EF76  F015         	goto	u2890
  9383  002AE8                     u2891:
  9384  002AE8  EF4A  F015         	goto	l3451
  9385  002AEC                     u2890:
  9386  002AEC  0012               	return		;funcret
  9387  002AEE                     __end_of_Lcd_Out:
  9388                           	callstack 0
  9389                           
  9390 ;; *************** function _Lcd_Cmd *****************
  9391 ;; Defined at:
  9392 ;;		line 175 in file "flex_lcd.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  data            1    wreg     unsigned char 
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;  data            1    8[COMRAM] unsigned char 
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		wreg, status,2, status,0
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9406 ;;      Params:         0       0       0       0       0       0       0       0       0
  9407 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9408 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9409 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9410 ;;Total ram usage:        3 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:    2
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_Lcd_Init
  9417 ;;		_Lcd_Out
  9418 ;;		_appLCD_Init
  9419 ;;		_appGetElements
  9420 ;;		_warning
  9421 ;;		_confirmacion
  9422 ;;		_readUART
  9423 ;;		_Lcd_Out2
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           	psect	text56
  9428  002502                     __ptext56:
  9429                           	callstack 0
  9430  002502                     _Lcd_Cmd:
  9431                           	callstack 26
  9432                           
  9433                           ;incstack = 0
  9434                           ;Lcd_Cmd@data stored from wreg
  9435  002502  6E09               	movwf	Lcd_Cmd@data^0,c
  9436  002504                     
  9437                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  9438  002504  968C               	bcf	140,3,c	;volatile
  9439  002506  948C               	bcf	140,2,c	;volatile
  9440  002508                     
  9441                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9442  002508  6A07               	clrf	??_Lcd_Cmd^0,c
  9443  00250A  AE09               	btfss	Lcd_Cmd@data^0,7,c
  9444  00250C  D001               	bra	u2675
  9445  00250E  2A07               	incf	??_Lcd_Cmd^0,f,c
  9446  002510                     u2675:
  9447  002510  0E01               	movlw	1
  9448  002512  1607               	andwf	??_Lcd_Cmd^0,f,c
  9449  002514  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9450  002516  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9451  002518  508C               	movf	140,w,c	;volatile
  9452  00251A  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9453  00251C  0B7F               	andlw	-129
  9454  00251E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9455  002520  6E8C               	movwf	140,c	;volatile
  9456                           
  9457                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9458  002522  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9459  002526  0E06               	movlw	6
  9460  002528  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9461  00252A                     u2685:
  9462  00252A  90D8               	bcf	status,0,c
  9463  00252C  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9464  00252E  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9465  002530  EF95  F012         	goto	u2685
  9466  002534  0E01               	movlw	1
  9467  002536  1607               	andwf	??_Lcd_Cmd^0,f,c
  9468  002538  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9469  00253A  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9470  00253C  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9471  00253E  508C               	movf	140,w,c	;volatile
  9472  002540  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9473  002542  0BBF               	andlw	-65
  9474  002544  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9475  002546  6E8C               	movwf	140,c	;volatile
  9476                           
  9477                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9478  002548  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9479  00254C  0E05               	movlw	5
  9480  00254E  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9481  002550                     u2695:
  9482  002550  90D8               	bcf	status,0,c
  9483  002552  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9484  002554  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9485  002556  EFA8  F012         	goto	u2695
  9486  00255A  0E01               	movlw	1
  9487  00255C  1607               	andwf	??_Lcd_Cmd^0,f,c
  9488  00255E  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9489  002560  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9490  002562  508C               	movf	140,w,c	;volatile
  9491  002564  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9492  002566  0BDF               	andlw	-33
  9493  002568  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9494  00256A  6E8C               	movwf	140,c	;volatile
  9495                           
  9496                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9497  00256C  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9498  002570  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9499  002572  0E0F               	movlw	15
  9500  002574  1607               	andwf	??_Lcd_Cmd^0,f,c
  9501  002576  0E01               	movlw	1
  9502  002578  1607               	andwf	??_Lcd_Cmd^0,f,c
  9503  00257A  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9504  00257C  508C               	movf	140,w,c	;volatile
  9505  00257E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9506  002580  0BEF               	andlw	-17
  9507  002582  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9508  002584  6E8C               	movwf	140,c	;volatile
  9509  002586                     
  9510                           ;flex_lcd.c: 182:     _delay(10);
  9511  002586  0E03               	movlw	3
  9512  002588                     u4637:
  9513  002588  2EE8               	decfsz	wreg,f,c
  9514  00258A  D7FE               	bra	u4637
  9515  00258C  F000               	nop	
  9516  00258E                     
  9517                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  9518  00258E  868C               	bsf	140,3,c	;volatile
  9519  002590                     
  9520                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9521  002590  0E05               	movlw	5
  9522  002592                     u4647:
  9523  002592  2EE8               	decfsz	wreg,f,c
  9524  002594  D7FE               	bra	u4647
  9525  002596                     
  9526                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  9527  002596  968C               	bcf	140,3,c	;volatile
  9528                           
  9529                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9530  002598  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9531  00259C  90D8               	bcf	status,0,c
  9532  00259E  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9533  0025A0  90D8               	bcf	status,0,c
  9534  0025A2  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9535  0025A4  90D8               	bcf	status,0,c
  9536  0025A6  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9537  0025A8  0E01               	movlw	1
  9538  0025AA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9539  0025AC  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9540  0025AE  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9541  0025B0  508C               	movf	140,w,c	;volatile
  9542  0025B2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9543  0025B4  0B7F               	andlw	-129
  9544  0025B6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9545  0025B8  6E8C               	movwf	140,c	;volatile
  9546                           
  9547                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9548  0025BA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9549  0025BE  90D8               	bcf	status,0,c
  9550  0025C0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9551  0025C2  90D8               	bcf	status,0,c
  9552  0025C4  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9553  0025C6  0E01               	movlw	1
  9554  0025C8  1607               	andwf	??_Lcd_Cmd^0,f,c
  9555  0025CA  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9556  0025CC  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9557  0025CE  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9558  0025D0  508C               	movf	140,w,c	;volatile
  9559  0025D2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9560  0025D4  0BBF               	andlw	-65
  9561  0025D6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9562  0025D8  6E8C               	movwf	140,c	;volatile
  9563                           
  9564                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9565  0025DA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9566  0025DE  90D8               	bcf	status,0,c
  9567  0025E0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9568  0025E2  0E01               	movlw	1
  9569  0025E4  1607               	andwf	??_Lcd_Cmd^0,f,c
  9570  0025E6  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9571  0025E8  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9572  0025EA  508C               	movf	140,w,c	;volatile
  9573  0025EC  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9574  0025EE  0BDF               	andlw	-33
  9575  0025F0  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9576  0025F2  6E8C               	movwf	140,c	;volatile
  9577                           
  9578                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  9579  0025F4  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9580  0025F8  0E01               	movlw	1
  9581  0025FA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9582  0025FC  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9583  0025FE  508C               	movf	140,w,c	;volatile
  9584  002600  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9585  002602  0BEF               	andlw	-17
  9586  002604  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9587  002606  6E8C               	movwf	140,c	;volatile
  9588  002608                     
  9589                           ;flex_lcd.c: 190:     _delay(10);
  9590  002608  0E03               	movlw	3
  9591  00260A                     u4657:
  9592  00260A  2EE8               	decfsz	wreg,f,c
  9593  00260C  D7FE               	bra	u4657
  9594  00260E  F000               	nop	
  9595  002610                     
  9596                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  9597  002610  868C               	bsf	140,3,c	;volatile
  9598  002612                     
  9599                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9600  002612  0E05               	movlw	5
  9601  002614                     u4667:
  9602  002614  2EE8               	decfsz	wreg,f,c
  9603  002616  D7FE               	bra	u4667
  9604  002618                     
  9605                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  9606  002618  968C               	bcf	140,3,c	;volatile
  9607  00261A                     
  9608                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9609  00261A  0E16               	movlw	22
  9610  00261C  6E07               	movwf	??_Lcd_Cmd^0,c
  9611  00261E  0E6C               	movlw	108
  9612  002620                     u4677:
  9613  002620  2EE8               	decfsz	wreg,f,c
  9614  002622  D7FE               	bra	u4677
  9615  002624  2E07               	decfsz	??_Lcd_Cmd^0,f,c
  9616  002626  D7FC               	bra	u4677
  9617  002628  D000               	nop2	
  9618  00262A  0012               	return		;funcret
  9619  00262C                     __end_of_Lcd_Cmd:
  9620                           	callstack 0
  9621                           
  9622 ;; *************** function _Lcd_Chr_CP *****************
  9623 ;; Defined at:
  9624 ;;		line 151 in file "flex_lcd.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;  data            1    wreg     char 
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;  data            1    8[COMRAM] char 
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  1    wreg      void 
  9631 ;; Registers used:
  9632 ;;		wreg, status,2, status,0
  9633 ;; Tracked objects:
  9634 ;;		On entry : 0/0
  9635 ;;		On exit  : 0/0
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9638 ;;      Params:         0       0       0       0       0       0       0       0       0
  9639 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9640 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9641 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9642 ;;Total ram usage:        3 bytes
  9643 ;; Hardware stack levels used:    1
  9644 ;; Hardware stack levels required when called:    2
  9645 ;; This function calls:
  9646 ;;		Nothing
  9647 ;; This function is called by:
  9648 ;;		_Lcd_Out
  9649 ;;		_Lcd_Out2
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           	psect	text57
  9654  0023B4                     __ptext57:
  9655                           	callstack 0
  9656  0023B4                     _Lcd_Chr_CP:
  9657                           	callstack 26
  9658                           
  9659                           ;incstack = 0
  9660                           ;Lcd_Chr_CP@data stored from wreg
  9661  0023B4  6E09               	movwf	Lcd_Chr_CP@data^0,c
  9662  0023B6                     
  9663                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  9664  0023B6  968C               	bcf	140,3,c	;volatile
  9665                           
  9666                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  9667  0023B8  848C               	bsf	140,2,c	;volatile
  9668  0023BA                     
  9669                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9670  0023BA  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9671  0023BE  0E07               	movlw	7
  9672  0023C0  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9673  0023C2                     u2705:
  9674  0023C2  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9675  0023C4  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9676  0023C6  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9677  0023C8  EFE1  F011         	goto	u2705
  9678  0023CC  0E01               	movlw	1
  9679  0023CE  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9680  0023D0  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9681  0023D2  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9682  0023D4  508C               	movf	140,w,c	;volatile
  9683  0023D6  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9684  0023D8  0B7F               	andlw	-129
  9685  0023DA  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9686  0023DC  6E8C               	movwf	140,c	;volatile
  9687                           
  9688                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9689  0023DE  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9690  0023E2  0E06               	movlw	6
  9691  0023E4  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9692  0023E6                     u2715:
  9693  0023E6  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9694  0023E8  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9695  0023EA  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9696  0023EC  EFF3  F011         	goto	u2715
  9697  0023F0  0E01               	movlw	1
  9698  0023F2  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9699  0023F4  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9700  0023F6  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9701  0023F8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9702  0023FA  508C               	movf	140,w,c	;volatile
  9703  0023FC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9704  0023FE  0BBF               	andlw	-65
  9705  002400  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9706  002402  6E8C               	movwf	140,c	;volatile
  9707                           
  9708                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9709  002404  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9710  002408  0E05               	movlw	5
  9711  00240A  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9712  00240C                     u2725:
  9713  00240C  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9714  00240E  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9715  002410  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9716  002412  EF06  F012         	goto	u2725
  9717  002416  0E01               	movlw	1
  9718  002418  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9719  00241A  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9720  00241C  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9721  00241E  508C               	movf	140,w,c	;volatile
  9722  002420  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9723  002422  0BDF               	andlw	-33
  9724  002424  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9725  002426  6E8C               	movwf	140,c	;volatile
  9726                           
  9727                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9728  002428  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9729  00242C  0E04               	movlw	4
  9730  00242E  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9731  002430                     u2735:
  9732  002430  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9733  002432  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9734  002434  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9735  002436  EF18  F012         	goto	u2735
  9736  00243A  0E01               	movlw	1
  9737  00243C  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9738  00243E  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9739  002440  508C               	movf	140,w,c	;volatile
  9740  002442  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9741  002444  0BEF               	andlw	-17
  9742  002446  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9743  002448  6E8C               	movwf	140,c	;volatile
  9744  00244A                     
  9745                           ;flex_lcd.c: 159:     _delay(10);
  9746  00244A  0E03               	movlw	3
  9747  00244C                     u4687:
  9748  00244C  2EE8               	decfsz	wreg,f,c
  9749  00244E  D7FE               	bra	u4687
  9750  002450  F000               	nop	
  9751  002452                     
  9752                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  9753  002452  868C               	bsf	140,3,c	;volatile
  9754  002454                     
  9755                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9756  002454  0E05               	movlw	5
  9757  002456                     u4697:
  9758  002456  2EE8               	decfsz	wreg,f,c
  9759  002458  D7FE               	bra	u4697
  9760  00245A                     
  9761                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  9762  00245A  968C               	bcf	140,3,c	;volatile
  9763                           
  9764                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9765  00245C  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9766  002460  0E03               	movlw	3
  9767  002462  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9768  002464                     u2745:
  9769  002464  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9770  002466  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9771  002468  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9772  00246A  EF32  F012         	goto	u2745
  9773  00246E  0E01               	movlw	1
  9774  002470  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9775  002472  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9776  002474  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9777  002476  508C               	movf	140,w,c	;volatile
  9778  002478  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9779  00247A  0B7F               	andlw	-129
  9780  00247C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9781  00247E  6E8C               	movwf	140,c	;volatile
  9782                           
  9783                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9784  002480  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9785  002484  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9786  002486  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9787  002488  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9788  00248A  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9789  00248C  0E01               	movlw	1
  9790  00248E  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9791  002490  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9792  002492  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9793  002494  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9794  002496  508C               	movf	140,w,c	;volatile
  9795  002498  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9796  00249A  0BBF               	andlw	-65
  9797  00249C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9798  00249E  6E8C               	movwf	140,c	;volatile
  9799                           
  9800                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9801  0024A0  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9802  0024A4  0E01               	movlw	1
  9803  0024A6  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9804  0024A8                     u2755:
  9805  0024A8  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9806  0024AA  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9807  0024AC  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9808  0024AE  EF54  F012         	goto	u2755
  9809  0024B2  0E01               	movlw	1
  9810  0024B4  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9811  0024B6  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9812  0024B8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9813  0024BA  508C               	movf	140,w,c	;volatile
  9814  0024BC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9815  0024BE  0BDF               	andlw	-33
  9816  0024C0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9817  0024C2  6E8C               	movwf	140,c	;volatile
  9818                           
  9819                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  9820  0024C4  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9821  0024C8  0E01               	movlw	1
  9822  0024CA  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9823  0024CC  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9824  0024CE  508C               	movf	140,w,c	;volatile
  9825  0024D0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9826  0024D2  0BEF               	andlw	-17
  9827  0024D4  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9828  0024D6  6E8C               	movwf	140,c	;volatile
  9829  0024D8                     
  9830                           ;flex_lcd.c: 167:     _delay(10);
  9831  0024D8  0E03               	movlw	3
  9832  0024DA                     u4707:
  9833  0024DA  2EE8               	decfsz	wreg,f,c
  9834  0024DC  D7FE               	bra	u4707
  9835  0024DE  F000               	nop	
  9836  0024E0                     
  9837                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  9838  0024E0  868C               	bsf	140,3,c	;volatile
  9839  0024E2                     
  9840                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9841  0024E2  0E05               	movlw	5
  9842  0024E4                     u4717:
  9843  0024E4  2EE8               	decfsz	wreg,f,c
  9844  0024E6  D7FE               	bra	u4717
  9845  0024E8                     
  9846                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  9847  0024E8  968C               	bcf	140,3,c	;volatile
  9848  0024EA                     
  9849                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9850  0024EA  0E05               	movlw	5
  9851  0024EC                     u4727:
  9852  0024EC  2EE8               	decfsz	wreg,f,c
  9853  0024EE  D7FE               	bra	u4727
  9854  0024F0                     
  9855                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9856  0024F0  0E16               	movlw	22
  9857  0024F2  6E07               	movwf	??_Lcd_Chr_CP^0,c
  9858  0024F4  0E6C               	movlw	108
  9859  0024F6                     u4737:
  9860  0024F6  2EE8               	decfsz	wreg,f,c
  9861  0024F8  D7FE               	bra	u4737
  9862  0024FA  2E07               	decfsz	??_Lcd_Chr_CP^0,f,c
  9863  0024FC  D7FC               	bra	u4737
  9864  0024FE  D000               	nop2	
  9865  002500  0012               	return		;funcret
  9866  002502                     __end_of_Lcd_Chr_CP:
  9867                           	callstack 0
  9868                           
  9869 ;; *************** function _isrL *****************
  9870 ;; Defined at:
  9871 ;;		line 31 in file "main.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;		None
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, status,2, status,0
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9885 ;;      Params:         0       0       0       0       0       0       0       0       0
  9886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9887 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9888 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9889 ;;Total ram usage:        3 bytes
  9890 ;; Hardware stack levels used:    1
  9891 ;; Hardware stack levels required when called:    1
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		Interrupt level 1
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           	psect	intcodelo
  9900  000018                     __pintcodelo:
  9901                           	callstack 0
  9902  000018                     _isrL:
  9903                           	callstack 19
  9904                           
  9905                           ;incstack = 0
  9906  000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9907  00001A  CFD8 F004          	movff	status,??_isrL
  9908  00001E  CFE8 F005          	movff	wreg,??_isrL+1
  9909  000022  CFE0 F006          	movff	bsr,??_isrL+2
  9910  000026                     
  9911                           ;main.c: 33:     if(TMR3IE && TMR3IF)
  9912  000026  A2A0               	btfss	4000,1,c	;volatile
  9913  000028  EF18  F000         	goto	i1u435_21
  9914  00002C  EF1A  F000         	goto	i1u435_20
  9915  000030                     i1u435_21:
  9916  000030  EF56  F000         	goto	i1l99
  9917  000034                     i1u435_20:
  9918  000034  A2A1               	btfss	4001,1,c	;volatile
  9919  000036  EF1F  F000         	goto	i1u436_21
  9920  00003A  EF21  F000         	goto	i1u436_20
  9921  00003E                     i1u436_21:
  9922  00003E  EF56  F000         	goto	i1l99
  9923  000042                     i1u436_20:
  9924  000042                     
  9925                           ;main.c: 34:     {;main.c: 35:         TMR3IF = 0;
  9926  000042  92A1               	bcf	4001,1,c	;volatile
  9927  000044                     
  9928                           ;main.c: 36:         datos.counter++;
  9929  000044  0100               	movlb	0	; () banked
  9930  000046  2BC0               	incf	_datos& (0+255),f,b
  9931  000048                     
  9932                           ; BSR set to: 0
  9933                           ;main.c: 37:         if((datos.counter == 2) && (datos.state == 0 || datos.state == 2))
  9934  000048  0E02               	movlw	2
  9935  00004A  19C0               	xorwf	_datos& (0+255),w,b
  9936  00004C  A4D8               	btfss	status,2,c
  9937  00004E  EF2B  F000         	goto	i1u437_21
  9938  000052  EF2D  F000         	goto	i1u437_20
  9939  000056                     i1u437_21:
  9940  000056  EF46  F000         	goto	i1l4843
  9941  00005A                     i1u437_20:
  9942  00005A                     
  9943                           ; BSR set to: 0
  9944  00005A  51C3               	movf	(_datos+3)& (0+255),w,b
  9945  00005C  B4D8               	btfsc	status,2,c
  9946  00005E  EF33  F000         	goto	i1u438_21
  9947  000062  EF35  F000         	goto	i1u438_20
  9948  000066                     i1u438_21:
  9949  000066  EF3E  F000         	goto	i1l4839
  9950  00006A                     i1u438_20:
  9951  00006A                     
  9952                           ; BSR set to: 0
  9953  00006A  0E02               	movlw	2
  9954  00006C  19C3               	xorwf	(_datos+3)& (0+255),w,b
  9955  00006E  A4D8               	btfss	status,2,c
  9956  000070  EF3C  F000         	goto	i1u439_21
  9957  000074  EF3E  F000         	goto	i1u439_20
  9958  000078                     i1u439_21:
  9959  000078  EF46  F000         	goto	i1l4843
  9960  00007C                     i1u439_20:
  9961  00007C                     i1l4839:
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;main.c: 38:         {;main.c: 39:             datos.counter = 0;
  9965  00007C  0E00               	movlw	0
  9966  00007E  6FC0               	movwf	_datos& (0+255),b
  9967  000080                     
  9968                           ; BSR set to: 0
  9969                           ;main.c: 40:             datos.nextFunc = appStateRecolectData;
  9970  000080  0E8E               	movlw	low _appStateRecolectData
  9971  000082  6FD7               	movwf	(_datos+23)& (0+255),b
  9972  000084  0E30               	movlw	high _appStateRecolectData
  9973  000086  6FD8               	movwf	(_datos+24)& (0+255),b
  9974                           
  9975                           ;main.c: 41:         }
  9976  000088  EF52  F000         	goto	i1l4847
  9977  00008C                     i1l4843:
  9978                           
  9979                           ; BSR set to: 0
  9980  00008C  05C3               	decf	(_datos+3)& (0+255),w,b
  9981  00008E  A4D8               	btfss	status,2,c
  9982  000090  EF4C  F000         	goto	i1u440_21
  9983  000094  EF4E  F000         	goto	i1u440_20
  9984  000098                     i1u440_21:
  9985  000098  EF52  F000         	goto	i1l4847
  9986  00009C                     i1u440_20:
  9987  00009C                     
  9988                           ; BSR set to: 0
  9989                           ;main.c: 43:         {;main.c: 44:             datos.nextFunc = appGetElements;
  9990  00009C  0EA6               	movlw	low _appGetElements
  9991  00009E  6FD7               	movwf	(_datos+23)& (0+255),b
  9992  0000A0  0E31               	movlw	high _appGetElements
  9993  0000A2  6FD8               	movwf	(_datos+24)& (0+255),b
  9994  0000A4                     i1l4847:
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;main.c: 46:         TMR3 = 20536;
  9998  0000A4  0E50               	movlw	80
  9999  0000A6  6EB3               	movwf	179,c	;volatile
 10000  0000A8  0E38               	movlw	56
 10001  0000AA  6EB2               	movwf	178,c	;volatile
 10002  0000AC                     i1l99:
 10003  0000AC  C006  FFE0         	movff	??_isrL+2,bsr
 10004  0000B0  C005  FFE8         	movff	??_isrL+1,wreg
 10005  0000B4  C004  FFD8         	movff	??_isrL,status
 10006  0000B8  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10007  0000BA  0010               	retfie	
 10008  0000BC                     __end_of_isrL:
 10009                           	callstack 0
 10010                           
 10011 ;; *************** function _isrH *****************
 10012 ;; Defined at:
 10013 ;;		line 49 in file "main.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;		None
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;		None
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      void 
 10020 ;; Registers used:
 10021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10027 ;;      Params:         0       0       0       0       0       0       0       0       0
 10028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10029 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10030 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10031 ;;Total ram usage:        3 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; This function calls:
 10034 ;;		Nothing
 10035 ;; This function is called by:
 10036 ;;		Interrupt level 2
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	intcode
 10041  000008                     __pintcode:
 10042                           	callstack 0
 10043  000008                     _isrH:
 10044                           	callstack 19
 10045                           
 10046                           ;incstack = 0
 10047  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10048  00000A  EDA6  F017         	call	int_func,f	;refresh shadow registers
 10049  00000E                     
 10050                           	psect	intcode_body
 10051  002F4C                     __pintcode_body:
 10052                           	callstack 19
 10053  002F4C                     int_func:
 10054                           	callstack 19
 10055  002F4C  0006               	pop		; remove dummy address from shadow register refresh
 10056  002F4E  CFD9 F002          	movff	fsr2l,??_isrH+1
 10057  002F52  CFDA F003          	movff	fsr2h,??_isrH+2
 10058  002F56                     
 10059                           ;main.c: 51:     static uint8_t counter = 0;;main.c: 52:     if(TMR0IE && TMR0IF)
 10060  002F56  AAF2               	btfss	4082,5,c	;volatile
 10061  002F58  EFB0  F017         	goto	i2u441_41
 10062  002F5C  EFB2  F017         	goto	i2u441_40
 10063  002F60                     i2u441_41:
 10064  002F60  EFC1  F017         	goto	i2l4859
 10065  002F64                     i2u441_40:
 10066  002F64  A4F2               	btfss	4082,2,c	;volatile
 10067  002F66  EFB7  F017         	goto	i2u442_41
 10068  002F6A  EFB9  F017         	goto	i2u442_40
 10069  002F6E                     i2u442_41:
 10070  002F6E  EFC1  F017         	goto	i2l4859
 10071  002F72                     i2u442_40:
 10072  002F72                     
 10073                           ;main.c: 53:     {;main.c: 54:         TMR0IF = 0;
 10074  002F72  94F2               	bcf	4082,2,c	;volatile
 10075  002F74                     
 10076                           ;main.c: 55:         datos.state = 10;
 10077  002F74  0E0A               	movlw	10
 10078  002F76  0100               	movlb	0	; () banked
 10079  002F78  6FC3               	movwf	(_datos+3)& (0+255),b
 10080  002F7A                     
 10081                           ; BSR set to: 0
 10082                           ;main.c: 56:         datos.nextFunc = warning;
 10083  002F7A  0E16               	movlw	low _warning
 10084  002F7C  6FD7               	movwf	(_datos+23)& (0+255),b
 10085  002F7E  0E32               	movlw	high _warning
 10086  002F80  6FD8               	movwf	(_datos+24)& (0+255),b
 10087  002F82                     i2l4859:
 10088                           
 10089                           ;main.c: 58:     if(RCIF && RCIE)
 10090  002F82  AA9E               	btfss	3998,5,c	;volatile
 10091  002F84  EFC6  F017         	goto	i2u443_41
 10092  002F88  EFC8  F017         	goto	i2u443_40
 10093  002F8C                     i2u443_41:
 10094  002F8C  EFF2  F017         	goto	i2l110
 10095  002F90                     i2u443_40:
 10096  002F90  AA9D               	btfss	3997,5,c	;volatile
 10097  002F92  EFCD  F017         	goto	i2u444_41
 10098  002F96  EFCF  F017         	goto	i2u444_40
 10099  002F9A                     i2u444_41:
 10100  002F9A  EFF2  F017         	goto	i2l110
 10101  002F9E                     i2u444_40:
 10102  002F9E                     
 10103                           ;main.c: 59:     {;main.c: 60:         puerto[counter] = RCREG;
 10104  002F9E  0E84               	movlw	low _puerto
 10105  002FA0  2457               	addwf	isrH@counter^0,w,c
 10106  002FA2  6ED9               	movwf	fsr2l,c
 10107  002FA4  6ADA               	clrf	fsr2h,c
 10108  002FA6  0E00               	movlw	high _puerto
 10109  002FA8  22DA               	addwfc	fsr2h,f,c
 10110  002FAA  CFAE FFDF          	movff	4014,indf2	;volatile
 10111                           
 10112                           ;main.c: 61:         if(puerto[counter] != '@')
 10113  002FAE  0E84               	movlw	low _puerto
 10114  002FB0  2457               	addwf	isrH@counter^0,w,c
 10115  002FB2  6ED9               	movwf	fsr2l,c
 10116  002FB4  6ADA               	clrf	fsr2h,c
 10117  002FB6  0E00               	movlw	high _puerto
 10118  002FB8  22DA               	addwfc	fsr2h,f,c
 10119  002FBA  0E40               	movlw	64
 10120  002FBC  18DE               	xorwf	postinc2,w,c
 10121  002FBE  B4D8               	btfsc	status,2,c
 10122  002FC0  EFE4  F017         	goto	i2u445_41
 10123  002FC4  EFE6  F017         	goto	i2u445_40
 10124  002FC8                     i2u445_41:
 10125  002FC8  EFE9  F017         	goto	i2l4867
 10126  002FCC                     i2u445_40:
 10127  002FCC                     
 10128                           ;main.c: 62:         {;main.c: 63:             counter ++;
 10129  002FCC  2A57               	incf	isrH@counter^0,f,c
 10130                           
 10131                           ;main.c: 64:         }
 10132  002FCE  EFF2  F017         	goto	i2l110
 10133  002FD2                     i2l4867:
 10134                           
 10135                           ;main.c: 66:         {;main.c: 67:             datos.state = 4;
 10136  002FD2  0E04               	movlw	4
 10137  002FD4  0100               	movlb	0	; () banked
 10138  002FD6  6FC3               	movwf	(_datos+3)& (0+255),b
 10139  002FD8                     
 10140                           ; BSR set to: 0
 10141                           ;main.c: 68:             datos.nextFunc = readUART;
 10142  002FD8  0E4E               	movlw	low _readUART
 10143  002FDA  6FD7               	movwf	(_datos+23)& (0+255),b
 10144  002FDC  0E29               	movlw	high _readUART
 10145  002FDE  6FD8               	movwf	(_datos+24)& (0+255),b
 10146  002FE0                     
 10147                           ; BSR set to: 0
 10148                           ;main.c: 69:             counter = 0;
 10149  002FE0  0E00               	movlw	0
 10150  002FE2  6E57               	movwf	isrH@counter^0,c
 10151  002FE4                     i2l110:
 10152  002FE4  C003  FFDA         	movff	??_isrH+2,fsr2h
 10153  002FE8  C002  FFD9         	movff	??_isrH+1,fsr2l
 10154  002FEC  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10155  002FEE  0011               	retfie		f
 10156  002FF0                     __end_of_isrH:
 10157                           	callstack 0
 10158                           
 10159                           	psect	rparam
 10160  0000                     
 10161                           	psect	temp
 10162  000058                     btemp:
 10163                           	callstack 0
 10164  000058                     	ds	1
 10165  0000                     int$flags	set	btemp
 10166  0000                     wtemp8	set	btemp+1
 10167  0000                     ttemp5	set	btemp+1
 10168  0000                     ttemp6	set	btemp+4
 10169  0000                     ttemp7	set	btemp+8
 10170                           
 10171                           	psect	idloc
 10172                           
 10173                           ;Config register IDLOC0 @ 0x200000
 10174                           ;	unspecified, using default values
 10175  200000                     	org	2097152
 10176  200000  FF                 	db	255
 10177                           
 10178                           ;Config register IDLOC1 @ 0x200001
 10179                           ;	unspecified, using default values
 10180  200001                     	org	2097153
 10181  200001  FF                 	db	255
 10182                           
 10183                           ;Config register IDLOC2 @ 0x200002
 10184                           ;	unspecified, using default values
 10185  200002                     	org	2097154
 10186  200002  FF                 	db	255
 10187                           
 10188                           ;Config register IDLOC3 @ 0x200003
 10189                           ;	unspecified, using default values
 10190  200003                     	org	2097155
 10191  200003  FF                 	db	255
 10192                           
 10193                           ;Config register IDLOC4 @ 0x200004
 10194                           ;	unspecified, using default values
 10195  200004                     	org	2097156
 10196  200004  FF                 	db	255
 10197                           
 10198                           ;Config register IDLOC5 @ 0x200005
 10199                           ;	unspecified, using default values
 10200  200005                     	org	2097157
 10201  200005  FF                 	db	255
 10202                           
 10203                           ;Config register IDLOC6 @ 0x200006
 10204                           ;	unspecified, using default values
 10205  200006                     	org	2097158
 10206  200006  FF                 	db	255
 10207                           
 10208                           ;Config register IDLOC7 @ 0x200007
 10209                           ;	unspecified, using default values
 10210  200007                     	org	2097159
 10211  200007  FF                 	db	255
 10212                           
 10213                           	psect	config
 10214                           
 10215                           ;Config register CONFIG1L @ 0x300000
 10216                           ;	PLL Prescaler Selection bits
 10217                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10218                           ;	System Clock Postscaler Selection bits
 10219                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10220                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10221                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10222  300000                     	org	3145728
 10223  300000  00                 	db	0
 10224                           
 10225                           ;Config register CONFIG1H @ 0x300001
 10226                           ;	Oscillator Selection bits
 10227                           ;	FOSC = HS, HS oscillator (HS)
 10228                           ;	Fail-Safe Clock Monitor Enable bit
 10229                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10230                           ;	Internal/External Oscillator Switchover bit
 10231                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10232  300001                     	org	3145729
 10233  300001  0C                 	db	12
 10234                           
 10235                           ;Config register CONFIG2L @ 0x300002
 10236                           ;	Power-up Timer Enable bit
 10237                           ;	PWRT = OFF, PWRT disabled
 10238                           ;	Brown-out Reset Enable bits
 10239                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10240                           ;	Brown-out Reset Voltage bits
 10241                           ;	BORV = 3, Minimum setting 2.05V
 10242                           ;	USB Voltage Regulator Enable bit
 10243                           ;	VREGEN = OFF, USB voltage regulator disabled
 10244  300002                     	org	3145730
 10245  300002  19                 	db	25
 10246                           
 10247                           ;Config register CONFIG2H @ 0x300003
 10248                           ;	Watchdog Timer Enable bit
 10249                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10250                           ;	Watchdog Timer Postscale Select bits
 10251                           ;	WDTPS = 32768, 1:32768
 10252  300003                     	org	3145731
 10253  300003  1E                 	db	30
 10254                           
 10255                           ; Padding undefined space
 10256  300004                     	org	3145732
 10257  300004  FF                 	db	255
 10258                           
 10259                           ;Config register CONFIG3H @ 0x300005
 10260                           ;	CCP2 MUX bit
 10261                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10262                           ;	PORTB A/D Enable bit
 10263                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10264                           ;	Low-Power Timer 1 Oscillator Enable bit
 10265                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10266                           ;	MCLR Pin Enable bit
 10267                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10268  300005                     	org	3145733
 10269  300005  81                 	db	129
 10270                           
 10271                           ;Config register CONFIG4L @ 0x300006
 10272                           ;	Stack Full/Underflow Reset Enable bit
 10273                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10274                           ;	Single-Supply ICSP Enable bit
 10275                           ;	LVP = OFF, Single-Supply ICSP disabled
 10276                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10277                           ;	ICPRT = OFF, ICPORT disabled
 10278                           ;	Extended Instruction Set Enable bit
 10279                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10280                           ;	Background Debugger Enable bit
 10281                           ;	DEBUG = 0x1, unprogrammed default
 10282  300006                     	org	3145734
 10283  300006  81                 	db	129
 10284                           
 10285                           ; Padding undefined space
 10286  300007                     	org	3145735
 10287  300007  FF                 	db	255
 10288                           
 10289                           ;Config register CONFIG5L @ 0x300008
 10290                           ;	Code Protection bit
 10291                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10292                           ;	Code Protection bit
 10293                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10294                           ;	Code Protection bit
 10295                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10296                           ;	Code Protection bit
 10297                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10298  300008                     	org	3145736
 10299  300008  0F                 	db	15
 10300                           
 10301                           ;Config register CONFIG5H @ 0x300009
 10302                           ;	Boot Block Code Protection bit
 10303                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10304                           ;	Data EEPROM Code Protection bit
 10305                           ;	CPD = OFF, Data EEPROM is not code-protected
 10306  300009                     	org	3145737
 10307  300009  C0                 	db	192
 10308                           
 10309                           ;Config register CONFIG6L @ 0x30000A
 10310                           ;	Write Protection bit
 10311                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10312                           ;	Write Protection bit
 10313                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10314                           ;	Write Protection bit
 10315                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10316                           ;	Write Protection bit
 10317                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10318  30000A                     	org	3145738
 10319  30000A  0F                 	db	15
 10320                           
 10321                           ;Config register CONFIG6H @ 0x30000B
 10322                           ;	Configuration Register Write Protection bit
 10323                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10324                           ;	Boot Block Write Protection bit
 10325                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10326                           ;	Data EEPROM Write Protection bit
 10327                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10328  30000B                     	org	3145739
 10329  30000B  E0                 	db	224
 10330                           
 10331                           ;Config register CONFIG7L @ 0x30000C
 10332                           ;	Table Read Protection bit
 10333                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10334                           ;	Table Read Protection bit
 10335                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10336                           ;	Table Read Protection bit
 10337                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10338                           ;	Table Read Protection bit
 10339                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10340  30000C                     	org	3145740
 10341  30000C  0F                 	db	15
 10342                           
 10343                           ;Config register CONFIG7H @ 0x30000D
 10344                           ;	Boot Block Table Read Protection bit
 10345                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10346  30000D                     	org	3145741
 10347  30000D  40                 	db	64
 10348                           tosu	equ	0xFFF
 10349                           tosh	equ	0xFFE
 10350                           tosl	equ	0xFFD
 10351                           stkptr	equ	0xFFC
 10352                           pclatu	equ	0xFFB
 10353                           pclath	equ	0xFFA
 10354                           pcl	equ	0xFF9
 10355                           tblptru	equ	0xFF8
 10356                           tblptrh	equ	0xFF7
 10357                           tblptrl	equ	0xFF6
 10358                           tablat	equ	0xFF5
 10359                           prodh	equ	0xFF4
 10360                           prodl	equ	0xFF3
 10361                           indf0	equ	0xFEF
 10362                           postinc0	equ	0xFEE
 10363                           postdec0	equ	0xFED
 10364                           preinc0	equ	0xFEC
 10365                           plusw0	equ	0xFEB
 10366                           fsr0h	equ	0xFEA
 10367                           fsr0l	equ	0xFE9
 10368                           wreg	equ	0xFE8
 10369                           indf1	equ	0xFE7
 10370                           postinc1	equ	0xFE6
 10371                           postdec1	equ	0xFE5
 10372                           preinc1	equ	0xFE4
 10373                           plusw1	equ	0xFE3
 10374                           fsr1h	equ	0xFE2
 10375                           fsr1l	equ	0xFE1
 10376                           bsr	equ	0xFE0
 10377                           indf2	equ	0xFDF
 10378                           postinc2	equ	0xFDE
 10379                           postdec2	equ	0xFDD
 10380                           preinc2	equ	0xFDC
 10381                           plusw2	equ	0xFDB
 10382                           fsr2h	equ	0xFDA
 10383                           fsr2l	equ	0xFD9
 10384                           status	equ	0xFD8

Data Sizes:
    Strings     125
    Constant    0
    Data        25
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      87
    BANK0           160     44     121
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    appSubGiveElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2261_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memcmp@vr	PTR const void  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@vl	PTR const void  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    sendData@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    sendData@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_10(CODE[13]), STR_9(CODE[17]), STR_8(CODE[12]), STR_6(CODE[14]), 
		 -> STR_4(CODE[6]), STR_3(CODE[12]), datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    S196_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _warning->_Lcd_Out
    _sendData->_strlen
    _readUART->_memset
    _confirmacion->_Lcd_Out
    _appBat->___fltol
    _appADC->___fltol
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_setServo
    _appInit->_uart_Init
    _uart_Init->___lldiv
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _appSubGiveElemts->_setServo
    _setServo->_setServoAngle
    _sprintf->___fltol
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _sendinformation->_appBat
    _appStateRecolectData->_appBat
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    ___awmod->___fltol
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  155139
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
                       _confirmacion *
                           _readUART *
                    _sendinformation *
                            _warning *
 ---------------------------------------------------------------------------------
 (1) _warning                                              2     2      0    3439
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
                       _appTimerStop
                           _setServo
 ---------------------------------------------------------------------------------
 (1) _sendinformation                                      0     0      0   67164
                             _appADC
                             _appBat
                          _appElemts
                      _appTimerStart
                             _memset
                           _sendData
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendData                                             5     3      2     636
                                             10 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _readUART                                             2     2      0    3356
                                             18 COMRAM     2     2      0
                            _Lcd_Cmd
                             _memcmp
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              11     5      6     637
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _confirmacion                                         2     2      0    2229
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   55659
                             _appADC
                             _appBat
                     _appCounterStop
                          _appElemts
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            2     0      2   14405
                                             36 BANK0      2     0      2
                            _Lcd_Out
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appCounterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   19745
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20299
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                             10 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     817
                                             74 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             49 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     613
                                              2 BANK0      6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0    1736
                           _setServo
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    4308
                            _adcInit
                     _appCounterInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                          _servoInit
                           _setServo
                          _uart_Init
 ---------------------------------------------------------------------------------
 (2) _uart_Init                                            4     0      4     412
                                             19 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              6 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _servoInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2544
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              9 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appCounterInit                                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   17248
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                   _appSubGiveElemts
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGiveElemts                                     2     0      2    1286
                                             14 COMRAM     2     0      2
                    _appCounterStart
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _setServo                                             4     2      2    1210
                                             10 COMRAM     4     2      2
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (3) _setServoAngle                                        4     3      1     208
                                              6 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _appCounterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   15786
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    9536
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8324
                                             79 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    7794
                                             69 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4434
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2785
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1396
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     555
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2543
                                              6 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    2053
                                              9 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appSubGiveElemts
       _appCounterStart
       _setServo
         _setServoAngle
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appCounterInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _servoInit
     _setServo
       _setServoAngle
     _uart_Init
       ___lldiv
   _appStateInitial *
     _setServo
       _setServoAngle
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appCounterStop
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _setServo
       _setServoAngle
   _confirmacion *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
   _readUART *
     _Lcd_Cmd
     _memcmp
     _memset
   _sendinformation *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appTimerStart
     _memset
     _sendData
       _strlen
     _sprintf
       ___awmod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _warning *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
     _appTimerStop
     _setServo
       _setServoAngle

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      57       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D0      20        0.0%
DATA                 0      0      D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jun 03 17:06:59 2021

                  fp__readUART 000E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                  ?_confirmacion 0001                             l30 36BA  
                           l32 36C8                             l33 36D0                             l42 1A5E  
                           l27 3586                             l39 1DC0                             bsr 000FE0  
          ___wmul@multiplicand 0009                            l150 2C9A                            l230 3822  
                          l151 2CE6                            l152 2D38                            l137 1876  
                          l250 2742                            l234 263A                            l251 2746  
                          l243 2734                            l236 2640                            l260 37A0  
                          l181 2500                            l165 2AEC                            l237 2646  
                          l246 26F0                            l430 2A20                            l263 3842  
                          l184 262A                            l440 37F0                            l272 3860  
                          l248 26F6                            l424 3404                            l249 26FC  
                          l257 37CA                            l345 35CC                            l353 3120  
                          l266 385C                            l434 32F2                            l362 3214  
                          l187 31A4                            l275 3858                            l372 3836  
                          l348 3854                            l356 34D4                            l269 384C  
                          l437 334A                            l278 32E8                            l359 34F2  
                          l384 353C                            l369 294C                            l554 20D8  
                          l474 2F4A                            l378 3282                            l467 2F3A  
                          l387 2DF4                            l567 23B2                            l737 284E  
                          l684 2EA6                adcInit@ADC_PINs 0008                            _PR2 000FCB  
                          _abs 3656                            _pad 2BB8                   ___awmod@sign 009B  
                          tosl 000FFD                            wreg 000FE8                   ___flmul@aexp 002A  
                 ___flmul@bexp 002B                   ___flmul@sign 0025                   ___flmul@temp 0030  
                 ___flmul@prod 002C                   ___fltol@exp1 0095                           l1022 1042  
                         l1102 1B4E                           l1024 0EA2                           l1033 0EE8  
                         l1202 168C                           l1035 0F60                           l1027 0E66  
                         l1123 308C                           ?_abs 0019                           l1140 3456  
                         l1036 0F4E                           l1061 0B3A                           l1109 1BAA  
                         l1302 2BB6                           l1310 3654                           l1054 0944  
                         l1127 224E                           l1231 13AE                           l1071 0C6A  
                         l1063 0BB2                           l1216 1136                           l1064 0BA0  
                         l3001 2082                           l1313 3862                           l1242 368C  
                         l1058 0CA8                           l3003 2088                           l3011 2250  
                         l1171 2BFC                           l3005 2098                           l3021 2294  
                         l3013 2254                           l1245 3694                           l3101 1442  
                         l1237 33A4                           l1174 2C3E                           l1182 144E  
                         l1238 33AC                           l3007 20B8                           l3031 22FC  
                         l3023 22B4                           l3015 2262                           l1319 373E  
                         l3111 148C                           l3103 145E                           l1095 1AB6  
                         l1176 2C78                           l1184 1456                           l1273 1F48  
                         l3041 2372                           l3033 232A                           l3025 22D2  
                         l3017 2282                           l3121 152A                           l3113 1496  
                         l3105 1470                           l3201 108C                           l4001 1B38  
                         l1098 1C12                           l3043 2392                           l3035 234A  
                         l3027 22DA                           l3019 2286                           l3051 2BDA  
                         l3131 15FA                           l3115 149C                           l3123 158E  
                         l3107 147E                           l3211 10B2                           l3203 1098  
                         l4011 1BB8                           l4003 1B44                           l1276 1F50  
                         l3301 258E                           l3037 235C                           l3029 22EE  
                         l3061 2C20                           l3053 2BE8                           l3141 1640  
                         l3125 15A8                           l3133 1608                           l3117 151E  
                         l3109 1484                           l3205 109A                           l4101 3774  
                         l4021 1C00                           l4013 1BBA                           l4005 1B80  
                         l3311 2612                           l3303 2590                           l1279 3708  
                         l1287 34A8                           l3151 1DC2                           l3039 2362  
                         l3071 3670                           l3063 2C4C                           l3055 2BF4  
                         l3047 2BB8                           l3143 164C                           l3135 161A  
                         l3127 15C6                           l3119 1524                           l3231 1144  
                         l3223 10C4                           l3215 10B8                           l3207 10AC  
                         l4031 355C                           l4111 378C                           l4103 377A  
                         l4023 1C02                           l4015 1BBE                           l4007 1B8C  
                         l3321 244A                           l3313 2618                           l3305 2596  
                         l3401 213A                           l3073 36D2                           l3081 3470  
                         l3161 1E30                           l3153 1DD6                           l3065 2C60  
                         l3057 2C08                           l3049 2BC6                           l3145 1654  
                         l3137 1628                           l3129 15E0                           l3241 11BC  
                         l3233 1146                           l4041 3582                           l4033 356C  
                         l4121 3796                           l4113 378E                           l4105 377E  
                         l4017 1BE2                           l4009 1B9A                           l4201 331C  
                         l3331 24E0                           l3323 2452                           l3315 261A  
                         l3307 2608                           l5011 2A64                           l3403 2192  
                         l3083 349E                           l3171 1E58                           l3163 1E34  
                         l3155 1DDA                           l3059 2C1C                           l3139 162E  
                         l3147 1664                           l3091 13D0                           l3243 11DC  
                         l3251 1244                           l3235 116A                           l3227 10D0  
                         l3219 10BE                           l5003 2660                           l4131 3838  
                         l4043 3584                           l4035 3570                           l4027 3540  
                         l4123 3798                           l4115 3790                           l4107 3788  
                         l4019 1BF2                           l4211 3024                           l4203 331E  
                         l3333 24E2                           l3325 2454                           l3317 23B6  
                         l3309 2610                           l3421 223C                           l3413 21F2  
                         l3085 34A2                           l3077 3458                           l3173 1E60  
                         l3157 1DDE                           l3069 3656                           l3093 13F8  
                         l3261 130C                           l3253 1268                           l3245 11EA  
                         l3237 11A0                           l3229 1124                           l3501 177C  
                         l5005 2716                           l3341 262E                           l4133 3840  
                         l4037 3578                           l4029 3550                           l4125 379A  
                         l4117 3792                           l4109 378A                           l4221 3588  
                         l4213 304C                           l4205 2FF0                           l4301 326A  
                         l3335 24E8                           l3327 245A                           l3319 23BA  
                         l3415 2226                           l3407 21AC                           l3079 345C  
                         l3183 1F08                           l3175 1E94                           l3167 1E3A  
                         l3159 1DFA                           l3095 1418                           l3263 1330  
                         l3271 135E                           l3255 128C                           l3239 11AE  
                         l5007 10F6                           l3511 17B4                           l3503 1788  
                         l3351 267E                           l3343 2632                           l4135 385A  
                         l4039 3580                           l4127 379C                           l4119 3794  
                         l4151 33B4                           l4231 35A6                           l4223 358C  
                         l4215 305E                           l4207 3004                           l4303 327E  
                         l4311 3520                           l3337 24EA                           l3329 24D8  
                         l3441 2A3C                           l3417 2232                           l3409 21D8  
                         l3185 1F1A                           l5009 1E7E                           l3169 1E50  
                         l3097 1426                           l3089 13B0                           l3273 136C  
                         l3265 133E                           l3257 12D4                           l3249 1232  
                         l3193 1044                           l3521 17F4                           l3513 17C0  
                         l3505 178C                           l3361 26DA                           l3353 2690  
                         l3345 2634                           l3601 37A4                           l4137 3844  
                         l4081 316E                           l4073 3122                           l4129 379E  
                         l4161 33FA                           l4153 33F2                           l4233 35AA  
                         l4225 3590                           l4217 306A                           l4209 3012  
                         l4313 3538                           l4305 34F4                           l3339 24F0  
                         l3451 2A94                           l3443 2A46                           l3435 2A24  
                         l3419 2238                           l3187 1F2C                           l3179 1ECA  
                         l3099 1428                           l3267 1352                           l3195 1068  
                         l3531 182C                           l3523 17F8                           l3515 17CE  
                         l3507 179A                           l3363 26EA                           l3355 26A2  
                         l3603 37AC                           l4147 384E                           l4083 318C  
                         l4075 3132                           l4091 3818                           l3611 2EA8  
                         l4163 33FC                           l4155 33F4                           l4235 35BE  
                         l4227 3596                           l4139 3856                           l4307 3506  
                         l3453 2AB8                           l3437 2A28                           l3197 1076  
                         l3277 1378                           l3541 1864                           l3533 183A  
                         l3525 1806                           l3517 17DA                           l3509 17A6  
                         l3461 168E                           l3357 26B4                           l3349 264C  
                         l3605 37B6                           l4077 314A                           l4093 381A  
                         l4085 380C                           l3621 2EF0                           l3613 2EB8  
                         l4165 33FE                           l4157 33F6                           l4149 33AE  
                         l4229 359A                           l3701 0E32                           l4309 351A  
                         l4261 34B6                           l3295 2504                           l3455 2ABC  
                         l3439 2A32                           l3447 2A50                           l3391 20DA  
                         l3279 139C                           l3199 1088                           l3535 1846  
                         l3527 1812                           l3519 17E8                           l3471 16C2  
                         l3463 169A                           l3367 2702                           l3359 26C8  
                         l3607 37B8                           l3543 2C7A                           l4079 315C  
                         l4095 381C                           l4087 3814                           l3631 2F34  
                         l3623 2EFA                           l3615 2ECE                           l4167 3400  
                         l4159 33F8                           l3711 0E8E                           l3703 0E42  
                         l4263 34C8                           l3297 2508                           l3449 2A8A  
                         l3537 1854                           l3529 1820                           l3481 1702  
                         l3473 16CE                           l3465 169E                           l3609 385E  
                         l4193 3824                           l3561 2CBE                           l3553 2CB2  
                         l3545 2C86                           l4097 381E                           l4089 3816  
                         l3625 2F18                           l3617 2ED6                           l4169 3402  
                         l4601 2E16                           l3721 0ECE                           l3713 0E90  
                         l3705 0E56                           l3641 0CD6                           l3633 0CAA  
                         l3801 092E                           l3385 3698                           l4265 34E2  
                         l3299 2586                           l3395 20F8                           l2931 2B00  
                         l3491 173A                           l3483 1710                           l3475 16DC  
                         l3467 16B0                           l3539 1860                           l4195 3828  
                         l3571 2D04                           l3563 2CC0                           l3555 2CB8  
                         l3547 2C96                           l4099 3820                           l3627 2F28  
                         l3619 2EE2                           l4611 2E4E                           l4603 2E24  
                         l3731 0F0A                           l3723 0ED8                           l3715 0EA0  
                         l3707 0E64                           l3651 0D10                           l3643 0CE6  
                         l3635 0CB6                           l3811 0978                           l3803 0934  
                         l3387 36AA                           l4291 321A                           l4267 34F0  
                         l4259 34AA                           l3397 2104                           l2933 2B12  
                         l3493 1748                           l3485 171C                           l3477 16E8  
                         l3469 16B4                           l3581 2D0E                           l3573 2D06  
                         l3565 2CC2                           l3557 2CBA                           l3629 2F2A  
                         l4613 2E5C                           l4621 2E86                           l4605 2E2C  
                         l3741 0F7C                           l3733 0F18                           l3725 0EE6  
                         l3717 0EB2                           l3709 0E70                           l3661 0D3C  
                         l3653 0D16                           l3645 0CF6                           l3637 0CC4  
                         l3821 09C8                           l3813 0984                           l3805 0954  
                         l3389 36B8                           l4701 3284                           l4197 32EA  
                         l4293 3220                           ?_pad 0017                           l2935 2B1C  
                         l2943 370A                           l3495 1754                           l3487 1720  
                         l3479 16F6                           l4711 287E                           l3591 2D26  
                         l3583 2D20                           l3575 2D08                           l3567 2CD4  
                         l3559 2CBC                           l4623 2E96                           l4615 2E72  
                         l4607 2E3E                           l3751 0FE8                           l3743 0F8A  
                         l3735 0F46                           l3719 0EC8                           l3727 0EF8  
                         l3671 0D76                           l3663 0D4C                           l3655 0D1C  
                         l3647 0CF8                           l3639 0CC6                           l3831 0A0A  
                         l3823 09D4                           l3815 098E                           l3807 0964  
                         l4631 2760                           l4703 32A6                           l4199 3300  
                         l4295 3238                           l2961 37CC                           l2937 2B3A  
                         l2929 2AEE                           l2953 3612                           l2945 3716  
                         l3497 1762                           l3489 172E                           l4721 28EC  
                         l4713 2894                           l3593 2D2C                           l3585 2D20  
                         l3577 2D0A                           l3569 2CFE                           l4625 2E9E  
                         l4617 2E7A                           l4609 2E46                           l3761 1036  
                         l3753 1002                           l3745 0FB4                           l3729 0F06  
                         l3673 0D8C                           l3665 0D5C                           l3657 0D2A  
                         l3649 0D00                           l3841 0A6C                           l3833 0A16  
                         l3825 09E0                           l3817 09A4                           l4641 27B0  
                         l4705 32D0                           l4297 324A                           l4289 3216  
                         l4801 29AA                           l2963 37E8                           l2971 1F64  
                         l2939 2B70                           l2955 361E                           l2947 371A  
                         l3499 176E                           l4723 290C                           l4715 28A0  
                         l4707 2850                           l3595 2D2C                           l3587 2D20  
                         l3579 2D0C                           l4619 2E80                           l3763 1038  
                         l3755 101E                           l3739 0F70                           l3747 0FB8  
                         l3691 0DE0                           l3675 0D9C                           l3683 0DBC  
                         l3667 0D5E                           l3659 0D2C                           l3851 0B02  
                         l3843 0A78                           l3835 0A26                           l3827 09EE  
                         l3819 09B0                           l3771 0880                           l4651 27DA  
                         l4643 27B4                           l4635 2774                           l4299 325C  
                         l4731 30B8                           l4811 2A18                           l4803 29D8  
                         l2981 1FBA                           l2973 1F84                           l2957 3630  
                         l2949 3732                           l4573 334C                           l4581 3406  
                         l4717 28B2                           l4725 2924                           l4709 285E  
                         l3597 2D32                           l3589 2D26                           l3757 1022  
                         l3749 0FD2                           l3693 0DFA                           l3685 0DCC  
                         l3677 0DA4                           l3669 0D66                           l3861 0B58  
                         l3853 0B20                           l3845 0A94                           l3837 0A40  
                         l3829 09FA                           l3781 08BC                           l3773 088C  
                         l4661 2802                           l4653 27E4                           l4645 27C2  
                         l4637 279E                           l4629 2748                           l4741 30F2  
                         l4733 30CC                           l4805 29DE                           l4821 374A  
                         l4813 3740                           l2991 200E                           l2983 1FC6  
                         l2975 1F88                           l2967 1F52                           l2959 3634  
                         l4575 3354                           l4583 3418                           l4727 2938  
                         l4719 28C2                           l3599 2D32                           l3759 1030  
                         l3695 0E0A                           l3687 0DCC                           l3679 0DA8  
                         l3871 0BC2                           l3863 0B5C                           l3855 0B2A  
                         l3847 0ABE                           l3839 0A50                           l3791 08EE  
                         l3783 08CC                           l3775 089A                           l4663 280E  
                         l4655 27EE                           l4639 27A0                           l4743 30F8  
                         l4735 30CE                           l4751 31A6                           l4807 29F6  
                         l4823 374E                           l4815 3744                           l2993 2020  
                         l2985 1FE4                           l2977 1F96                           l2969 1F56  
                         l4577 3362                           l4585 3420                           l4593 2DF6  
                         l3697 0E1A                           l3881 0C24                           l3873 0BCE  
                         l3865 0B6A                           l3857 0B38                           l3849 0AF4  
                         l3793 08FC                           l3785 08D2                           l3777 089C  
                         l4665 281E                           l4681 1D40                           l4673 1C14  
                         l4745 3106                           l4737 30E6                           l4729 308E  
                         l4761 31DC                           l4753 31AC                           l4809 2A12  
                         l4817 3746                           l2995 204E                           l2987 1FEC  
                         l2979 1FB6                           l4579 3388                           l4587 3428  
                         l4595 2DFC                           l3699 0E2A                           l3891 0C8C  
                         l3883 0C38                           l3875 0BDC                           l3867 0B98  
                         l3859 0B4A                           l3795 08FE                           l3787 08E2  
                         l3779 08AC                           l4667 282E                           l4683 1D88  
                         l4675 1C36                           l4691 18B6                           l4747 3108  
                         l4739 30EE                           l4763 31E2                           l4755 31B0  
                         l4771 2D3A                           l4819 3748                           l2997 206E  
                         l2989 2000                           l4589 3444                           l4597 2E0A  
                         l3893 0C8E                           l3885 0C52                           l3877 0C06  
                         l3797 090E                           l3789 08E8                           l4669 283E  
                         l3981 1A62                           l4685 1D8E                           l4677 1C5E  
                         l4693 1934                           l4749 3116                           l4765 31FA  
                         l4757 31B6                           l4781 2D88                           l4773 2D48  
                         l2999 2070                           l4599 2E12                           l3887 0C6E  
                         l3895 0C94                           l3879 0C0A                           l3799 091E  
                         l3983 1A72                           l4687 1DBE                           l4679 1CB6  
                         l4695 1982                           l4767 3206                           l4759 31CE  
                         l4791 2DEC                           l4783 2DA4                           l4775 2D54  
                         l3897 0C98                           l3889 0C7E                           l3993 1AF0  
                         l3985 1A80                           l4697 1A1A                           l4689 1878  
                         l4769 3210                           l4793 294E                           l4785 2DC6  
                         l4777 2D6E                           l3995 1AF8                           l3987 1AC6  
                         l4699 1A46                           l4795 297C                           l4787 2DCA  
                         l4779 2D7C                           l3997 1B04                           l3989 1ADC  
                         l4797 2998                           l4789 2DE6                           l3999 1B36  
                         l4799 299E                           STR_1 0820                           STR_2 086A  
                         STR_3 0854                           STR_4 0873                           STR_5 0879  
                         STR_6 0812                           STR_7 087B                           STR_8 0848  
                         STR_9 0801                           u2100 3732                           u2101 372E  
                         u2110 3654                           u2111 3650                           u2120 1F64  
                         u2200 2294                           u3000 17B4                           u2121 1F60  
                         u2201 2290                           u3001 17B0                           u2130 1F96  
                         u2210 22D2                           u3010 17CE                           u2131 1F92  
                         u2211 22CE                           u3011 17CA                           u2300 3702  
                         u2220 22FC                           u2060 2B00                           u3020 17E8  
                         u3100 2ECE                           u2301 36FC                           u2141 1FC0  
                         u2221 22F8                           u2061 2AFC                           u3021 17E4  
                         u3101 2ECA                           u2310 3704                           u2150 1FE4  
                         u2230 232A                           u2070 2B12                           u3030 1806  
                         u3110 2EF0                           u2151 1FE0                           u2231 2326  
                         u2071 2B0E                           u3031 1802                           u3111 2EEC  
                         u2320 3470                           u2160 200E                           u2240 2372  
                         u2080 2B3A                           u2400 147E                           u3040 1820  
                         u3120 2F18                           u3200 0DCC                           u2321 346C  
                         u2161 200A                           u2241 236E                           u2081 2B36  
                         u2401 147A                           u3041 181C                           u3121 2F14  
                         u3201 0DC8                           u2330 349E                           u2170 204E  
                         u2090 2B70                           u2250 2BC6                           u2410 15A8  
                         u3050 183A                           u3210 0E42                           u3130 0CC4  
                         u2331 349A                           u2171 204A                           u2091 2B6C  
                         u2251 2BC2                           u2411 15A4                           u3051 1836  
                         u3211 0E3E                           u3131 0CC0                           u2500 1E30  
                         u2180 2098                           u2260 2BE8                           u2420 15C6  
                         u2340 13E0                           u3060 1854                           u3300 0F5C  
                         u3220 0E64                           u3140 0CD6                           u2501 1E2C  
                         u2181 2094                           u2261 2BE4                           u2421 15C2  
                         u2341 13DA                           u3061 1850                           u3301 0F58  
                         u3221 0E60                           u3141 0CD2                           u2510 1E4C  
                         u2190 2262                           u2270 2C3E                           u2430 15E0  
                         u2350 13E2                           u4110 33A4                           u3070 1876  
                         u3310 0F70                           u3230 0E8E                           u3150 0CE6  
                         u2511 1E48                           u2191 225E                           u2271 2C3A  
                         u2431 15DC                           u4111 33A0                           u3071 1872  
                         u3311 0F6C                           u3231 0E8A                           u3151 0CE2  
                         u2520 1F02                           u2280 2C4C                           u2440 15FA  
                         u2360 13F8                           u2600 11AE                           u3080 2CE6  
                         u4120 2E0A                           u3320 0F8A                           u3240 0EB2  
                         u3160 0D2A                           u3400 090E                           u4200 27C2  
                         u2521 1EFC                           u2281 2C48                           u2441 15F6  
                         u2361 13F4                           u2601 11AA                           u3081 2CE2  
                         u4121 2E06                           u3321 0F86                           u3241 0EAE  
                         u3161 0D26                           u3401 090A                           u4201 27BE  
                         u2530 1F04                           u2290 3670                           u2450 1608  
                         u2370 1426                           u2610 122A                           u3090 37CA  
                         u4130 2E24                           u3330 0FD2                           u3250 0EC8  
                         u3170 0D3C                           u3410 091E                           u4210 27D6  
                         u2291 366C                           u2451 1604                           u2371 1422  
                         u2611 1224                           u3091 37C6                           u4131 2E20  
                         u3331 0FCE                           u3251 0EC4                           u3171 0D38  
                         u3411 091A                           u4211 27D2                           u2540 1F1A  
                         u2460 161A                           u2380 1442                           u2620 122C  
                         u4140 2E3E                           u3340 1002                           u3260 0EE6  
                         u3180 0D4C                           u3500 0BC2                           u3420 0954  
                         u4220 27FE                           u4300 30CC                           u2541 1F16  
                         u2461 1616                           u2381 143E                           u4141 2E3A  
                         u3341 0FFE                           u3261 0EE2                           u3181 0D48  
                         u3501 0BBE                           u3421 0950                           u4221 27FA  
                         u4301 30C8                           u2550 1F2C                           u2470 1628  
                         u2390 1470                           u2630 1244                           u4150 2E5C  
                         u3350 1030                           u3270 0F06                           u3190 0D8C  
                         u3510 0BDC                           u3430 0964                           u4230 281E  
                         u4310 30E6                           u2551 1F28                           u2471 1624  
                         u2391 146C                           u2631 1240                           u4151 2E58  
                         u3351 102C                           u3271 0F02                           u3191 0D88  
                         u3511 0BD8                           u3431 0960                           u4231 281A  
                         u4311 30E2                           u2480 1640                           u2640 1268  
                         u2560 1068                           u4160 2E72                           u3280 0F18  
                         u3520 0C24                           u3440 0ADE                           u3360 089A  
                         u4240 282E                           u4320 297C                           u2705 23C2  
                         u2481 163C                           u2641 1264                           u2561 1064  
                         u4161 2E6E                           u3281 0F14                           u3521 0C20  
                         u3361 0896                           u4241 282A                           u4321 2978  
                         u2490 1DFA                           u2650 128C                           u2570 1136  
                         u4170 2E96                           u3290 0F46                           u3530 0C52  
                         u3450 0B38                           u3370 08AC                           u2810 36C8  
                         u4250 1D88                           u4330 29D8                           u2715 23E6  
                         u2491 1DF6                           u2651 1288                           u2571 1132  
                         u4171 2E92                           u3291 0F42                           u3531 0C4E  
                         u3451 0B34                           u3371 08A8                           u2811 36C4  
                         u4251 1D84                           u4331 29D4                           u2820 20F4  
                         u2660 1330                           u2580 1144                           u2900 16B0  
                         u3540 0C8C                           u3460 0B58                           u3380 08BC  
                         u4180 2760                           u3700 1ADC                           u4260 1DBE  
                         u2725 240C                           u2821 20F0                           u2661 132C  
                         u2581 1140                           u2901 16AC                           u3541 0C88  
                         u3461 0B54                           u3445 0AD4                           u3381 08B8  
                         u4181 275C                           u3701 1AD8                           u4261 1DBA  
                         u2830 2136                           u2590 116A                           u2910 16C2  
                         u4270 28B2                           u3470 0B6A                           u3390 08FC  
                         u4190 2794                           u3710 1B32                           u2735 2430  
                         u2831 2132                           u2591 1166                           u2911 16BE  
                         u4271 28AE                           u3471 0B66                           u3391 08F8  
                         u3711 1B2E                           u2840 21A8                           u2920 16DC  
                         u4280 28C2                           u2760 2690                           u3480 0B98  
                         u3720 1B7C                           u2745 2464                           u2841 21A4  
                         u2921 16D8                           u4281 28BE                           u2761 268C  
                         u3481 0B94                           u3721 1B78                           u2850 21EE  
                         u2930 16F6                           u4290 2938                           u2770 26B4  
                         u3810 33E8                           u3490 0BAE                           u3730 1B9A  
                         u2755 24A8                           u2675 2510                           u2851 21EA  
                         u2931 16F2                           u4291 2934                           u2771 26B0  
                         u3491 0BAA                           u4195 278A                           u3731 1B96  
                         u4507 322A                           u2860 224E                           u2940 1710  
                         u2780 26DA                           u3740 1BAA                           u4348 3758  
                         u2685 252A                           u2861 224A                           u2941 170C  
                         u2781 26D6                           u3741 1BA6                           u4517 36B0  
                         u4349 376C                           u2870 2AB4                           u2950 172E  
                         u2790 2742                           u3750 1BB8                           u2695 2550  
                         u2951 172A                           u2791 273E                           u4607 2696  
                         u4527 313C                           u3815 33DE                           u3751 1BB4  
                         u2880 2ADC                           u2960 1748                           u3760 1BF2  
                         u3680 1A72                           u3920 34C8                           u2961 1744  
                         u4617 26BA                           u4537 3178                           u3761 1BEE  
                         u3681 1A6E                           u3921 34C4                           u2890 2AEC  
                         u2970 1762                           u3770 1C00                           u3690 1A80  
                         u3850 3300                           u3930 34E2                           u4707 24DA  
                         u2891 2AE8                           u2971 175E                           u4627 26E0  
                         u4547 3196                           u3771 1BFC                           u3691 1A7C  
                         u3851 32FC                           u4467 29E8                           u3931 34DE  
                         _RCIE 007CED                           u2980 177C                           u3780 3550  
                         u3860 334A                           u3940 327E                           _RCIF 007CF5  
                         u4717 24E4                           u4637 2588                           u2877 2AAA  
                         u2981 1778                           u3781 354C                           u4557 2C8C  
                         u3861 3346                           u3941 327A                           u4477 31C2  
                         u2990 179A                           u3870 3024                           u3950 351A  
                         u4727 24EC                           u4647 2592                           u2887 2AD2  
                         u2991 1796                           u4567 2CB4                           u3871 3020  
                         u3951 3516                           u4487 31EE                           u3880 304C  
                         u4737 24F6                           u4657 260A                           u4577 2CCA  
                         u3881 3048                           u4497 352A                           u3890 305E  
                         u4667 2614                           u4587 2D00                           u3891 305A  
                         u4677 2620                           u4597 2D16                           u4687 244C  
                         u4697 2456                           i1l99 00AC                           _TMR0 000FD6  
                         _TMR2 000FCC                           _TMR3 000FB2                           abs@a 0019  
                         _dbuf 0064                           _atoi 1DC2                           _main 3740  
                         _dtoa 13B0                           _isrH 0008                           _isrL 0018  
                         _prec 0053                           _nout 0060                           pad@i 001E  
                         pad@p 001B                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 0020                           fsr2l 000FD9                           btemp 0058  
                         prodh 000FF4                           prodl 000FF3                           start 00BC  
              ___fldiv@new_exp 0043   __end_of_appStateRecolectData 3122                __end_of_Lcd_Cmd 262C  
              __end_of_Lcd_Out 2AEE                   ___param_bank 000000                     _Lcd_Chr_CP 23B4  
         __size_of_appLCD_Init 0084                 ??_confirmacion 0011        __size_of_appCounterInit 000A  
                        ??_abs 001B                          ??_pad 001D        __size_of_appCounterStop 0004  
               setServo@pulsos 000B                  ___fltol@sign1 0094                __end_of___aodiv 20DA  
                        ?_atoi 000E                          ?_main 0001                          ?_dtoa 0022  
              __end_of___aomod 23B4                          ?_isrH 0001                          ?_isrL 0001  
              __end_of_adcInit 3588                __end_of___fldiv 1044                          _ADRES 000FC3  
                        STR_10 083B                          STR_11 0839                          STR_12 082E  
                        STR_13 082E                          STR_14 0860                          STR_15 0860  
              __end_of___awmod 2EA8                __end_of___flmul 0CAA                __end_of___fltol 2850  
              __end_of___lldiv 2F4C                          i2l110 2FE4        __end_of_appStateInitial 34F4  
                        _RCREG 000FAE                   vfpfcnvrt@fmt 0048                          _SPBRG 000FAF  
                        _PORTB 000F81                          _TRISB 000F93                          _TXREG 000FAD  
              __end_of_appInit 35CE          appSubGetData@cantidad 00BA                          _datos 00C0  
                        _flags 0055                          _fputc 2AEE                          _fputs 3612  
              __end_of_isdigit 370A                          atoi@n 001B                          pad@fp 0017  
                        atoi@s 000E                          _width 0062                          _putch 3862  
                        dtoa@d 0024                          dtoa@i 0044                          dtoa@n 003C  
                        dtoa@p 0036                          dtoa@s 003A                          dtoa@w 0038  
              __end_of_teclado 1878                __end_of_isspace 34AA                          pclath 000FFA  
                        tablat 000FF5                __end_of_warning 3284                          ttemp5 0059  
                        ttemp6 005C                          ttemp7 0060                          status 000FD8  
                        wtemp8 0059                __end_of_sprintf 3458           __end_of_appTimerInit 37A2  
         __end_of_appTimerStop 385E               __end_of_Lcd_Init 2D3A                    isrH@counter 0057  
              __initialization 35CE                   __end_of_atoi 1F52                   __end_of_main 3774  
                 __end_of_dtoa 168E                   __end_of_isrH 2FF0                   __end_of_isrL 00BC  
                       ??_atoi 0010                         ??_main 0053                         ??_dtoa 002C  
                       ??_isrH 0001                         ??_isrL 0004       __size_of_appCounterStart 0004  
                __activetblptr 000002                 _appGetElements 31A6          __end_of_setServoAngle 2748  
                       ?_fputc 0007                         ?_fputs 0010          __size_of_appISRConfig 0008  
                       ?_putch 0001                         i1l4831 0044                         i1l4841 0080  
                       i1l4833 0048                         i1l4825 0026                         i1l4835 005A  
                       i1l4843 008C                         i1l4827 0034                         i1l4845 009C  
                       i1l4837 006A                         i1l4829 0042                         i1l4847 00A4  
                       i1l4839 007C                         i2l4851 2F64                         i2l4861 2F90  
                       i2l4853 2F72                         i2l4871 2FE0                         i2l4863 2F9E  
                       i2l4855 2F74                         i2l4865 2FCC                         i2l4857 2F7A  
                       i2l4849 2F56                         i2l4867 2FD2                         i2l4859 2F82  
                       i2l4869 2FD8                      ??_Lcd_Cmd 0007                  vfpfcnvrt@done 009C  
                       _TMR0IE 007F95                         _TMR0IF 007F92                         _TMR3IE 007D01  
                       _TMR3IF 007D09                      ??_Lcd_Out 000D               __end_of___xxtofl 1C14  
                 vfprintf@cfmt 0050              ?_appSubGiveElemts 000F                    ?_Lcd_Chr_CP 0001  
                       _appADC 1C14                      ??___aodiv 0017                      ??___aomod 0017  
                       ___wmul 37CC                      ??_adcInit 0007                      ??___fldiv 003A  
                    ??___awmod 0053                      ??___flmul 0021                         _appBat 1878  
                    ??___fltol 004F                      ??___lldiv 000F               __end_of_readUART 2A22  
           ??_appSubGiveElemts 0011                         _memcmp 2FF0                         _memset 20DA  
                       clear_0 35F4                ___awmod@divisor 0098                      ??_appInit 0018  
       __end_of_appGetElements 3216                ___awmod@counter 009A                         pad@buf 0019  
                       _puerto 0084               __end_of_sendData 334C                         dtoa@fp 0022  
                       _strlen 370A               __end_of_setServo 37CC                   _appISRConfig 384E  
                       fputc@c 0007               ?_appStateInitial 0001                         fputs@c 0014  
                       fputs@i 0015                         fputs@s 0010                      ??_isdigit 0009  
                    ??_teclado 0009                   __mediumconst 0000                      ??_isspace 0009  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         _appStateRecolectData 308E              adcGetValue@PinADC 000A                         putch@c 0001  
        __end_of_appSubGetData 294E                      ??_warning 0011               __end_of_vfprintf 33AE  
                    ??_sprintf 0053           __end_of_confirmacion 353E                   ___xxtofl@arg 0015  
                 ___xxtofl@exp 0014             setServoAngle@angle 000A                   ___xxtofl@val 000B  
                   __accesstop 0060        __end_of__initialization 3604          __end_of_appTimerStart 3844  
                ___rparam_used 000001                     ___fltol@f1 004B                 __pcstackCOMRAM 0001  
                 __pidataBANK0 37F2                 _appCounterInit 3844                 _appCounterStop 3856  
                __end_of_fputc 2BB8                  __end_of_fputs 3656                  __end_of_putch 3864  
           __size_of_appElemts 0066                ?_appGetElements 0001                  ??_adcGetValue 0009  
        ?_appStateRecolectData 0001                      ?_Lcd_Init 0001              ??_appCounterStart 0007  
                      ??_fputc 000B                        ??_fputs 0014            __size_of_Lcd_Chr_CP 014E  
                      ??_putch 0007          __size_of_appTimerInit 002E                     __pbssBANK0 0060  
             setServoAngle@pin 0007          __size_of_appTimerStop 0004       __size_of_sendinformation 00BC  
       __end_of_appCounterInit 384E             fp__sendinformation 000E         __end_of_appCounterStop 385A  
                      ?_appADC 00B8                        ?___wmul 0007                        ?_appBat 00B8  
                      ?_memcmp 0007                        ?_memset 0007                     appADC@data 00B8  
           __size_of_uart_Init 0058                        ?_strlen 0007             __size_of_servoInit 0018  
                 _appTimerInit 3774                      ?___xxtofl 000B                   _appTimerStop 385A  
           __size_of_vfpfcnvrt 036C                     ??_Lcd_Init 000A            __end_of_adcGetValue 36D2  
                    ?_readUART 0001              __end_of_appElemts 32EA                        _Lcd_Cmd 2502  
                  setServo@pin 000C                        _Lcd_Out 2A22        appSubGetData@data_Inout 00B8  
                    ?_sendData 000B                  ??_appLCD_Init 0011                        __Hparam 0000  
                    ?_setServo 000B                        __Lparam 0000                ?_appCounterInit 0007  
              ?_appCounterStop 0001                        ___aodiv 1F52                        ___aomod 2250  
                      _adcInit 353E                        ___fldiv 0CAA                        ___awmod 2DF6  
                      ___flmul 0880                        ___fltol 2748                __size_of_appADC 01AE  
                      ___lldiv 2EA8                __size_of___wmul 0026                __size_of_appBat 01E8  
                    ?_vfprintf 00A0                     appBat@data 00B8                   __psmallconst 0800  
                      __pcinit 35CE                __size_of_memcmp 009E                __size_of_memset 0176  
                      _appInit 3588                        __ramtop 0800                        __ptext0 3740  
                      __ptext1 2D3A                        __ptext2 34AA                        __ptext3 294E  
                      __ptext4 31A6                        __ptext5 308E                        __ptext6 34F4  
                      __ptext7 3216                        __ptext8 32EA                        __ptext9 2FF0  
                    _T0CONbits 000FD5                __size_of_strlen 0036                      _T2CONbits 000FCA  
                 __size_of_abs 0040                   __size_of_pad 00C2         ??_appStateRecolectData 0053  
                      _isdigit 36D2                     ??___xxtofl 000F                      _T3CONbits 000FB1  
             ___awmod@dividend 0096          __size_of_confirmacion 004A                        _teclado 168E  
                      _isspace 3458                        _warning 3216                        atoi@neg 0014  
                      _sprintf 3406                 __pintcode_body 2F4C           end_of_initialization 3604  
                      memcmp@l 000E                        memcmp@n 000B                     ??_readUART 0013  
                      memcmp@r 0010                        fputc@fp 0009                        memset@c 0009  
                      memset@k 000F                        memset@n 000B                        memset@s 0011  
                __Lmediumconst 0000                        int_func 2F4C                        fputs@fp 0012  
            __end_of_uart_Init 3406                     ??_sendData 000D                ___lldiv@divisor 000B  
            __end_of_servoInit 3824                     ??_setServo 000D                ___lldiv@counter 0013  
         appCounterInit@reload 0007              __end_of_vfpfcnvrt 13B0                      Lcd_Init@i 000B  
                    _RCSTAbits 000FAB                   ??_Lcd_Chr_CP 0007                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     ??_vfprintf 0050                  appElemts@data 00B8  
                 _confirmacion 34F4            __end_of_appLCD_Init 31A6                        strlen@a 0009  
                      strlen@s 0007              ??_sendinformation 0053                      _PORTAbits 000F80  
                    _PORTBbits 000F81                    _adcGetValue 3696                  ___xxtofl@sign 0013  
                    _TRISAbits 000F92                      _TRISCbits 000F94                      _TRISDbits 000F95  
    __size_of_appSubGiveElemts 0014                      _TRISEbits 000F96                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E             __end_of_Lcd_Chr_CP 2502                     fp__warning 000E  
                  ___flmul@grs 0026                      _TXSTAbits 000FAC         __size_of_setServoAngle 011C  
                setServo@angle 000D               ??_appGetElements 00BD                 __end_of_appADC 1DC2  
                  vfpfcnvrt@ap 004A                    vfpfcnvrt@fp 0046                    vfpfcnvrt@ll 0094  
               __end_of___wmul 37F2                 __end_of_appBat 1A60                    _BAUDCONbits 000FB8  
              _appCounterStart 385E                 __end_of_memcmp 308E                 __end_of_memset 2250  
               __end_of_strlen 3740            start_initialization 35CE                    __end_of_abs 3696  
                  __end_of_pad 2C7A                  Lcd_Out@buffer 000B       __size_of_appStateInitial 004A  
            __size_of_Lcd_Init 00C0             fp__appStateInitial 000E                    _appLCD_Init 3122  
                  vfprintf@fmt 00A2                       ??_appADC 0053                       ??___wmul 000B  
                     ??_appBat 00BA                    _appBat$2655 00BC         __size_of_appSubGetData 00FE  
                  __pdataBANK0 00C0                       ??_memcmp 000D                       ??_memset 000D  
                   memset@dest 0007                       ??_strlen 0009                   sendData@data 000B  
                    ___fldiv@a 0036                      ___fldiv@b 0032         __size_of_appTimerStart 000C  
                    ___flmul@a 001D                      ___flmul@b 0019                    __pbssCOMRAM 0053  
                __pcstackBANK0 0094               ___aodiv@dividend 0007                  _setServoAngle 262C  
            __size_of___xxtofl 01B4        fp__appStateRecolectData 000E                       ?_Lcd_Cmd 0001  
             ??_appCounterInit 0009                       ?_Lcd_Out 000A               ??_appCounterStop 0007  
                    _atoi$2375 0016                      _atoi$2376 001A                      _atoi$2377 0018  
            __size_of_readUART 00D4                      _appElemts 3284                      _dtoa$2340 0034  
      __end_of_appCounterStart 3862              __size_of_sendData 0062                      __pintcode 0008  
                     ?___aodiv 0007                       ?___aomod 0007              __size_of_setServo 002A  
                     ?_adcInit 0001                       ?___fldiv 0032               ___aodiv@quotient 0019  
                     ?___awmod 0096                       ?___flmul 0019                       ?___fltol 004B  
                     ?___lldiv 0007                    __pintcodelo 0018                       ?_appInit 0001  
            __size_of_vfprintf 0062                    __smallconst 0800                       ?_isdigit 0007  
                 teclado@valor 0007                       ?_teclado 0007                 ?_setServoAngle 0007  
                     ?_isspace 0007               _appSubGiveElemts 3824                       ?_warning 0001  
                     ?_sprintf 00A6                  _appSubGetData 2850                 __size_of_fputc 00CA  
               __size_of_fputs 0044                 __size_of_putch 0002                 ___wmul@product 000B  
                     _LATAbits 000F89                       _LATCbits 000F8B                       _LATDbits 000F8C  
                     _LATEbits 000F8D                  _appTimerStart 3838                       _IPR1bits 000F9F  
                     _IPR2bits 000FA2                       _PIE1bits 000F9D                       _PIE2bits 000FA0  
              _sendinformation 2D3A              ??_appStateInitial 000F                     ?_appElemts 00B8  
                     i1u440_20 009C                       i1u440_21 0098                       i1u435_20 0034  
                     i1u435_21 0030                       i1u436_20 0042                       i1u436_21 003E  
                     i1u437_20 005A                       i1u437_21 0056                       i1u438_20 006A  
                     i1u438_21 0066                       i1u439_20 007C                       i1u439_21 0078  
                     i2u441_40 2F64                       i2u441_41 2F60                       _PIR1bits 000F9E  
                     i2u442_40 2F72                       i2u442_41 2F6E                       i2u443_40 2F90  
                     i2u443_41 2F8C                       _PIR2bits 000FA1                       i2u444_40 2F9E  
                     i2u444_41 2F9A                       i2u445_40 2FCC                       i2u445_41 2FC8  
                     _GO_nDONE 007E11                      _uart_Init 33AE                       _RCONbits 000FD0  
                     Lcd_Out@x 000A                       Lcd_Out@y 000F                      _servoInit 380C  
                    _vfpfcnvrt 1044                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0007                  ?_appISRConfig 0001  
                 ?_adcGetValue 0007  __size_of_appStateRecolectData 0094                   _isspace$2393 000D  
                     _Lcd_Init 2C7A                 ?_appSubGetData 00B8                    _INTCON2bits 000FF1  
                    copy_data0 35E2                 ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A  
             __size_of_Lcd_Out 00CC                       __Hrparam 0000                  uart_Init@baud 0014  
                   vfprintf@ap 00A4                       __Lrparam 0000                     vfprintf@fp 00A0  
             ?_appCounterStart 0001                     ?_uart_Init 0014                     ?_servoInit 0001  
             __size_of___aodiv 0188               __size_of___aomod 0164               __size_of_adcInit 004A  
             __size_of___fldiv 039A               __size_of___awmod 00B2               __size_of___flmul 042A  
             __size_of___fltol 0108                  appADC@lm35val 00BA               __size_of___lldiv 00A4  
                   ?_vfpfcnvrt 0046                ___aodiv@divisor 000F                 ??_appISRConfig 0007  
              ___aodiv@counter 0017               __size_of_appInit 0046                ??_setServoAngle 0008  
                   sprintf@fmt 00A8                      sendData@i 000F                       ___xxtofl 1A60  
             __size_of_isdigit 0038                 Lcd_Chr_CP@data 0009               __size_of_teclado 01EA  
             __size_of_isspace 0052                       __ptext10 3284                       __ptext11 3856  
                     __ptext20 3588                       __ptext12 1878                       __ptext21 33AE  
                     __ptext13 1C14                       __ptext30 385A                       __ptext22 2EA8  
                     __ptext14 3696                       __ptext31 3838                       __ptext23 380C  
                     __ptext15 1A60                       __ptext40 1044                       __ptext32 3824  
                     __ptext24 3774                       __ptext16 2748                       __ptext41 13B0  
                     __ptext33 37A2                       __ptext25 3122                       __ptext17 0880  
                     __ptext50 1DC2                       __ptext42 2BB8                       __ptext34 262C  
                     __ptext26 2C7A                       __ptext18 0CAA                       __ptext51 3458  
                     __ptext43 370A                       __ptext35 385E                       __ptext27 384E  
                     __ptext19 2DF6                       __ptext52 36D2                       __ptext44 3612  
                     __ptext36 2850                       __ptext28 3844                       __ptext53 37CC  
                     __ptext45 2AEE                       __ptext37 168E                       __ptext29 353E  
                     __ptext54 20DA                       __ptext46 3862                       __ptext38 3406  
                     __ptext55 2A22                       __ptext47 3656                       __ptext39 334C  
                     __ptext56 2502                       __ptext48 2250                       __ptext57 23B4  
                     __ptext49 1F52               __size_of_warning 006E        __end_of_sendinformation 2DF6  
             __size_of_sprintf 0052                      setServo@i 000E                       _readUART 294E  
                  Lcd_Cmd@data 0009                  __size_of_atoi 0190                  __size_of_main 0034  
                __size_of_dtoa 02DE                  __size_of_isrH 2FE8                  __size_of_isrL 00A4  
                     _sendData 32EA                    ??_appElemts 0053                   ?_appLCD_Init 0001  
                     _setServo 37A2                       int$flags 0058                       _vfprintf 334C  
             ___aomod@dividend 0007             appSubGetData@inout 00BC                  ?_appTimerInit 0001  
                  Lcd_Out@data 0010                 _vfpfcnvrt$2355 009E                  ?_appTimerStop 0001  
                   _INTCONbits 000FF2                ??_appSubGetData 0053                       memcmp@vl 0007  
                     memcmp@vr 0009                       isdigit@c 0007                       intlevel1 0000  
                     intlevel2 0000                      sprintf@ap 00B0                ??_appTimerStart 0007  
                     isspace@c 0007               ___lldiv@dividend 0007           appSubGiveElemts@data 000F  
              fp__confirmacion 000E       __end_of_appSubGiveElemts 3838                    ??_uart_Init 0018  
                  ??_servoInit 0007                ___aomod@divisor 000F                    ??_vfpfcnvrt 004C  
              ___aomod@counter 0017                 ??_appTimerInit 0007                       sprintf@f 00B2  
                     sprintf@s 00A6                 ??_appTimerStop 0007               ___lldiv@quotient 000F  
      __size_of_appGetElements 0070              fp__appGetElements 000E           __size_of_adcGetValue 003C  
              _appStateInitial 34AA               ?_sendinformation 0001                   ___aodiv@sign 0018  
         __end_of_appISRConfig 3856                   ___aomod@sign 0018  
