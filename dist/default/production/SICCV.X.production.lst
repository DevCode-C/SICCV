

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat May 29 20:09:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.20
    75                           ; Generated 12/02/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4550 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK1
   110  004574                     __pidataBANK1:
   111                           	callstack 0
   112                           
   113                           ;initializer for _datos
   114  004574  00                 	db	0
   115  004575  FF                 	db	255
   116  004576  00                 	db	0
   117  004577  0000               	dw	0
   118  004579  00                 	db	0
   119  00457A  00                 	db	0
   120  00457B  00                 	db	0
   121  00457C  00                 	db	0
   122  00457D  00                 	db	0
   123  00457E  00                 	db	0
   124  00457F  00                 	db	0
   125  004580  00                 	db	0
   126  004581  00                 	db	0
   127  004582  00                 	db	0
   128  004583  00                 	db	0
   129  004584  00                 	db	0
   130  004585  00                 	db	0
   131  004586  00                 	db	0
   132  004587  00                 	db	0
   133  004588  00                 	db	0
   134  004589  BA                 	db	low _appStateInitial
   135  00458A  45                 	db	high _appStateInitial
   136  0000                     _TMR3	set	4018
   137  0000                     _ADRES	set	4035
   138  0000                     _INTCONbits	set	4082
   139  0000                     _RCONbits	set	4048
   140  0000                     _PIE2bits	set	4000
   141  0000                     _IPR2bits	set	4002
   142  0000                     _PIR2bits	set	4001
   143  0000                     _T3CONbits	set	4017
   144  0000                     _PIR1bits	set	3998
   145  0000                     _PR2	set	4043
   146  0000                     _TMR2	set	4044
   147  0000                     _T2CONbits	set	4042
   148  0000                     _LATDbits	set	3980
   149  0000                     _TRISDbits	set	3989
   150  0000                     _PORTBbits	set	3969
   151  0000                     _PORTB	set	3969
   152  0000                     _LATBbits	set	3978
   153  0000                     _TRISBbits	set	3987
   154  0000                     _ADCON0bits	set	4034
   155  0000                     _ADCON2bits	set	4032
   156  0000                     _ADCON1bits	set	4033
   157  0000                     _TMR3IF	set	32009
   158  0000                     _TMR3IE	set	32001
   159  0000                     _GO_nDONE	set	32273
   160                           
   161                           	psect	smallconst
   162  000800                     __psmallconst:
   163                           	callstack 0
   164  000800  00                 	db	0
   165  000801                     STR_3:
   166  000801  42                 	db	66	;'B'
   167  000802  69                 	db	105	;'i'
   168  000803  65                 	db	101	;'e'
   169  000804  6E                 	db	110	;'n'
   170  000805  76                 	db	118	;'v'
   171  000806  65                 	db	101	;'e'
   172  000807  6E                 	db	110	;'n'
   173  000808  69                 	db	105	;'i'
   174  000809  64                 	db	100	;'d'
   175  00080A  6F                 	db	111	;'o'
   176  00080B  73                 	db	115	;'s'
   177  00080C  00                 	db	0
   178  00080D                     STR_1:
   179  00080D  54                 	db	84	;'T'
   180  00080E  3A                 	db	58	;':'
   181  00080F  25                 	db	37
   182  000810  30                 	db	48	;'0'
   183  000811  2E                 	db	46
   184  000812  31                 	db	49	;'1'
   185  000813  66                 	db	102	;'f'
   186  000814  20                 	db	32
   187  000815  43                 	db	67	;'C'
   188  000816  00                 	db	0
   189  000817                     STR_2:
   190  000817  42                 	db	66	;'B'
   191  000818  61                 	db	97	;'a'
   192  000819  74                 	db	116	;'t'
   193  00081A  3A                 	db	58	;':'
   194  00081B  25                 	db	37
   195  00081C  64                 	db	100	;'d'
   196  00081D  00                 	db	0
   197  00081E                     STR_4:
   198  00081E  53                 	db	83	;'S'
   199  00081F  49                 	db	73	;'I'
   200  000820  43                 	db	67	;'C'
   201  000821  43                 	db	67	;'C'
   202  000822  56                 	db	86	;'V'
   203  000823  00                 	db	0
   204  000824                     STR_5:
   205  000824  23                 	db	35
   206  000825  3A                 	db	58	;':'
   207  000826  25                 	db	37
   208  000827  64                 	db	100	;'d'
   209  000828  00                 	db	0
   210  000829                     STR_6:
   211  000829  49                 	db	73	;'I'
   212  00082A  4E                 	db	78	;'N'
   213  00082B  46                 	db	70	;'F'
   214  00082C  00                 	db	0
   215  00082D                     STR_10:
   216  00082D  4E                 	db	78	;'N'
   217  00082E  41                 	db	65	;'A'
   218  00082F  4E                 	db	78	;'N'
   219  000830  00                 	db	0
   220  000831                     STR_7:
   221  000831  69                 	db	105	;'i'
   222  000832  6E                 	db	110	;'n'
   223  000833  66                 	db	102	;'f'
   224  000834  00                 	db	0
   225  000835                     STR_11:
   226  000835  6E                 	db	110	;'n'
   227  000836  61                 	db	97	;'a'
   228  000837  6E                 	db	110	;'n'
   229  000838  00                 	db	0
   230  000839                     STR_14:
   231  000839  6C                 	db	108	;'l'
   232  00083A  66                 	db	102	;'f'
   233  00083B  00                 	db	0
   234  00083C  00                 	db	0	; dummy byte at the end
   235  0000                     
   236                           ; #config settings
   237                           
   238                           	psect	cinit
   239  004256                     __pcinit:
   240                           	callstack 0
   241  004256                     start_initialization:
   242                           	callstack 0
   243  004256                     __initialization:
   244                           	callstack 0
   245                           
   246                           ; Initialize objects allocated to BANK1 (23 bytes)
   247                           ; load TBLPTR registers with __pidataBANK1
   248  004256  0E74               	movlw	low __pidataBANK1
   249  004258  6EF6               	movwf	tblptrl,c
   250  00425A  0E45               	movlw	high __pidataBANK1
   251  00425C  6EF7               	movwf	tblptrh,c
   252  00425E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   253  004260  6EF8               	movwf	tblptru,c
   254  004262  EE01  F059         	lfsr	0,__pdataBANK1
   255  004266  EE10 F017          	lfsr	1,23
   256  00426A                     copy_data0:
   257  00426A  0009               	tblrd		*+
   258  00426C  CFF5 FFEE          	movff	tablat,postinc0
   259  004270  50E5               	movf	postdec1,w,c
   260  004272  50E1               	movf	fsr1l,w,c
   261  004274  E1FA               	bnz	copy_data0
   262                           
   263                           ; Clear objects allocated to BANK1 (89 bytes)
   264  004276  EE01  F000         	lfsr	0,__pbssBANK1
   265  00427A  0E59               	movlw	89
   266  00427C                     clear_0:
   267  00427C  6AEE               	clrf	postinc0,c
   268  00427E  06E8               	decf	wreg,f,c
   269  004280  E1FD               	bnz	clear_0
   270                           
   271                           ; Clear objects allocated to BANK0 (28 bytes)
   272  004282  EE00  F0DE         	lfsr	0,__pbssBANK0
   273  004286  0E1C               	movlw	28
   274  004288                     clear_1:
   275  004288  6AEE               	clrf	postinc0,c
   276  00428A  06E8               	decf	wreg,f,c
   277  00428C  E1FD               	bnz	clear_1
   278                           
   279                           ; Clear objects allocated to COMRAM (2 bytes)
   280  00428E  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   281  004290  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   282  004292                     end_of_initialization:
   283                           	callstack 0
   284  004292                     __end_of__initialization:
   285                           	callstack 0
   286  004292  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   287  004294  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   288  004296  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289  004298  6EF8               	movwf	tblptru,c
   290  00429A  0100               	movlb	0
   291  00429C  EF13  F020         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMRAM
   294  00005A                     __pbssCOMRAM:
   295                           	callstack 0
   296  00005A                     _flags:
   297                           	callstack 0
   298  00005A                     	ds	2
   299                           
   300                           	psect	bssBANK0
   301  0000DE                     __pbssBANK0:
   302                           	callstack 0
   303  0000DE                     	ds	8
   304  0000E6                     	ds	6
   305  0000EC                     floorf@F527:
   306                           	callstack 0
   307  0000EC                     	ds	4
   308  0000F0                     ___fpclassifyf@F465:
   309                           	callstack 0
   310  0000F0                     	ds	4
   311  0000F4                     _nout:
   312                           	callstack 0
   313  0000F4                     	ds	2
   314  0000F6                     _width:
   315                           	callstack 0
   316  0000F6                     	ds	2
   317  0000F8                     _prec:
   318                           	callstack 0
   319  0000F8                     	ds	2
   320                           
   321                           	psect	bssBANK1
   322  000100                     __pbssBANK1:
   323                           	callstack 0
   324  000100                     	ds	9
   325  000109                     _dbuf:
   326                           	callstack 0
   327  000109                     	ds	80
   328                           
   329                           	psect	dataBANK1
   330  000159                     __pdataBANK1:
   331                           	callstack 0
   332  000159                     _datos:
   333                           	callstack 0
   334  000159                     	ds	23
   335                           
   336                           	psect	cstackBANK0
   337  000060                     __pcstackBANK0:
   338                           	callstack 0
   339  000060                     _efgtoa$1627:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x0
   343  000060                     	ds	2
   344  000062                     _efgtoa$1628:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x2
   348  000062                     	ds	2
   349  000064                     _efgtoa$1632:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x4
   353  000064                     	ds	2
   354  000066                     _efgtoa$1636:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x6
   358  000066                     	ds	2
   359  000068                     _efgtoa$1637:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x8
   363  000068                     	ds	2
   364  00006A                     _efgtoa$1638:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0xA
   368  00006A                     	ds	2
   369  00006C                     efgtoa@t:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0xC
   373  00006C                     	ds	2
   374  00006E                     efgtoa@pp:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0xE
   378  00006E                     	ds	2
   379  000070                     efgtoa@ne:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x10
   383  000070                     	ds	2
   384  000072                     efgtoa@m:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x12
   388  000072                     	ds	2
   389  000074                     efgtoa@ou:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x14
   393  000074                     	ds	4
   394  000078                     efgtoa@d:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x18
   398  000078                     	ds	2
   399  00007A                     efgtoa@sign:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x1A
   403  00007A                     	ds	2
   404  00007C                     efgtoa@p:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x1C
   408  00007C                     	ds	2
   409  00007E                     efgtoa@w:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x1E
   413  00007E                     	ds	2
   414  000080                     efgtoa@nmode:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x20
   418  000080                     	ds	1
   419  000081                     efgtoa@mode:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x21
   423  000081                     	ds	1
   424  000082                     efgtoa@h:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x22
   428  000082                     	ds	4
   429  000086                     efgtoa@l:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x26
   433  000086                     	ds	4
   434  00008A                     efgtoa@i:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x2A
   438  00008A                     	ds	2
   439  00008C                     efgtoa@g:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x2C
   443  00008C                     	ds	4
   444  000090                     efgtoa@e:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x30
   448  000090                     	ds	2
   449  000092                     efgtoa@n:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x32
   453  000092                     	ds	2
   454  000094                     efgtoa@u:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x34
   458  000094                     	ds	4
   459  000098                     ?_vfpfcnvrt:
   460                           	callstack 0
   461  000098                     vfpfcnvrt@fp:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x38
   465  000098                     	ds	2
   466  00009A                     vfpfcnvrt@fmt:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x3A
   470  00009A                     	ds	2
   471  00009C                     vfpfcnvrt@ap:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x3C
   475  00009C                     	ds	2
   476  00009E                     vfpfcnvrt@ll:
   477                           	callstack 0
   478                           
   479                           ; 8 bytes @ 0x3E
   480  00009E                     	ds	8
   481  0000A6                     vfpfcnvrt@done:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x46
   485  0000A6                     	ds	2
   486  0000A8                     _vfpfcnvrt$1652:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x48
   490  0000A8                     	ds	2
   491  0000AA                     _vfpfcnvrt$1657:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x4A
   495  0000AA                     	ds	2
   496  0000AC                     vfpfcnvrt@ct:
   497                           	callstack 0
   498                           
   499                           ; 3 bytes @ 0x4C
   500  0000AC                     	ds	3
   501  0000AF                     vfpfcnvrt@f:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0x4F
   505  0000AF                     	ds	4
   506  0000B3                     vfpfcnvrt@c:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x53
   510  0000B3                     	ds	1
   511  0000B4                     ?_vfprintf:
   512                           	callstack 0
   513  0000B4                     vfprintf@fp:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x54
   517  0000B4                     	ds	2
   518  0000B6                     vfprintf@fmt:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x56
   522  0000B6                     	ds	2
   523  0000B8                     vfprintf@ap:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x58
   527  0000B8                     	ds	2
   528  0000BA                     vfprintf@cfmt:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x5A
   532  0000BA                     	ds	2
   533  0000BC                     ?_sprintf:
   534                           	callstack 0
   535  0000BC                     sprintf@s:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x5C
   539  0000BC                     	ds	2
   540  0000BE                     sprintf@fmt:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x5E
   544  0000BE                     	ds	8
   545  0000C6                     sprintf@ap:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x66
   549  0000C6                     	ds	2
   550  0000C8                     sprintf@f:
   551                           	callstack 0
   552                           
   553                           ; 6 bytes @ 0x68
   554  0000C8                     	ds	6
   555  0000CE                     appElemts@elements:
   556                           	callstack 0
   557  0000CE                     appBat@dataOut:
   558                           	callstack 0
   559  0000CE                     appADC@dataOut:
   560                           	callstack 0
   561                           
   562                           ; 9 bytes @ 0x6E
   563  0000CE                     	ds	2
   564  0000D0                     ??_appElemts:
   565                           
   566                           ; 1 bytes @ 0x70
   567  0000D0                     	ds	1
   568  0000D1                     appElemts@dataout:
   569                           	callstack 0
   570                           
   571                           ; 6 bytes @ 0x71
   572  0000D1                     	ds	5
   573  0000D6                     _appBat$2019:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x76
   577  0000D6                     	ds	1
   578  0000D7                     appADC@lm35val:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x77
   582  0000D7                     	ds	1
   583  0000D8                     appBat@bat:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x78
   587  0000D8                     	ds	4
   588  0000DC                     ??_main:
   589                           
   590                           ; 1 bytes @ 0x7C
   591  0000DC                     	ds	2
   592                           
   593                           	psect	cstackCOMRAM
   594  000001                     __pcstackCOMRAM:
   595                           	callstack 0
   596  000001                     ??_isrL:
   597  000001                     
   598                           ; 1 bytes @ 0x0
   599  000001                     	ds	3
   600  000004                     ??_Lcd_Cmd:
   601  000004                     ??_Lcd_Chr_CP:
   602  000004                     ??_adcInit:
   603  000004                     ?_strlen:
   604                           	callstack 0
   605  000004                     ?___fpclassifyf:
   606                           	callstack 0
   607  000004                     ?_isupper:
   608                           	callstack 0
   609  000004                     ?_isdigit:
   610                           	callstack 0
   611  000004                     ?_strncmp:
   612                           	callstack 0
   613  000004                     ?_isspace:
   614                           	callstack 0
   615  000004                     ?_adcGetValue:
   616                           	callstack 0
   617  000004                     ?___wmul:
   618                           	callstack 0
   619  000004                     ?___awdiv:
   620                           	callstack 0
   621  000004                     ?___awmod:
   622                           	callstack 0
   623  000004                     ?___fladd:
   624                           	callstack 0
   625  000004                     ?___flmul:
   626                           	callstack 0
   627  000004                     ?___flneg:
   628                           	callstack 0
   629  000004                     ?___aodiv:
   630                           	callstack 0
   631  000004                     ?___aomod:
   632                           	callstack 0
   633  000004                     ___wmul@multiplier:
   634                           	callstack 0
   635  000004                     ___awdiv@dividend:
   636                           	callstack 0
   637  000004                     ___awmod@dividend:
   638                           	callstack 0
   639  000004                     isdigit@c:
   640                           	callstack 0
   641  000004                     isspace@c:
   642                           	callstack 0
   643  000004                     isupper@c:
   644                           	callstack 0
   645  000004                     fputc@c:
   646                           	callstack 0
   647  000004                     strcpy@dest:
   648                           	callstack 0
   649  000004                     strlen@s:
   650                           	callstack 0
   651  000004                     strncmp@_l:
   652                           	callstack 0
   653  000004                     ___fleq@ff1:
   654                           	callstack 0
   655  000004                     ___flneg@f1:
   656                           	callstack 0
   657  000004                     ___fladd@b:
   658                           	callstack 0
   659  000004                     ___flmul@b:
   660                           	callstack 0
   661  000004                     ___fpclassifyf@x:
   662                           	callstack 0
   663  000004                     ___aodiv@dividend:
   664                           	callstack 0
   665  000004                     ___aomod@dividend:
   666                           	callstack 0
   667                           
   668                           ; 8 bytes @ 0x3
   669  000004                     	ds	1
   670  000005                     adcInit@ADC_PINs:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x4
   674  000005                     	ds	1
   675  000006                     ??_isupper:
   676  000006                     ??_isdigit:
   677  000006                     ??_isspace:
   678  000006                     ??_adcGetValue:
   679  000006                     Lcd_Chr_CP@data:
   680                           	callstack 0
   681  000006                     Lcd_Cmd@data:
   682                           	callstack 0
   683  000006                     ___wmul@multiplicand:
   684                           	callstack 0
   685  000006                     ___awdiv@divisor:
   686                           	callstack 0
   687  000006                     ___awmod@divisor:
   688                           	callstack 0
   689  000006                     fputc@fp:
   690                           	callstack 0
   691  000006                     strcpy@src:
   692                           	callstack 0
   693  000006                     strlen@a:
   694                           	callstack 0
   695  000006                     strncmp@_r:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x5
   699  000006                     	ds	1
   700  000007                     ??_Lcd_Init:
   701  000007                     adcGetValue@PinADC:
   702                           	callstack 0
   703  000007                     Lcd_Out@x:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x6
   707  000007                     	ds	1
   708  000008                     ??_fputc:
   709  000008                     ??___fpclassifyf:
   710  000008                     ??_strcpy:
   711  000008                     ?___xxtofl:
   712                           	callstack 0
   713  000008                     Lcd_Init@i:
   714                           	callstack 0
   715  000008                     ___awdiv@counter:
   716                           	callstack 0
   717  000008                     ___awmod@counter:
   718                           	callstack 0
   719  000008                     Lcd_Out@buffer:
   720                           	callstack 0
   721  000008                     ___wmul@product:
   722                           	callstack 0
   723  000008                     strncmp@n:
   724                           	callstack 0
   725  000008                     ___fleq@ff2:
   726                           	callstack 0
   727  000008                     ___fladd@a:
   728                           	callstack 0
   729  000008                     ___flmul@a:
   730                           	callstack 0
   731  000008                     ___xxtofl@val:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x7
   735  000008                     	ds	1
   736  000009                     ___awdiv@sign:
   737                           	callstack 0
   738  000009                     ___awmod@sign:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x8
   742  000009                     	ds	1
   743  00000A                     ??_Lcd_Out:
   744  00000A                     ??_strncmp:
   745  00000A                     ?_tolower:
   746                           	callstack 0
   747  00000A                     _isspace$1724:
   748                           	callstack 0
   749  00000A                     ___awdiv@quotient:
   750                           	callstack 0
   751  00000A                     strcpy@s:
   752                           	callstack 0
   753  00000A                     tolower@c:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x9
   757  00000A                     	ds	1
   758  00000B                     ?_atoi:
   759                           	callstack 0
   760  00000B                     atoi@s:
   761                           	callstack 0
   762  00000B                     strncmp@l:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0xA
   766  00000B                     	ds	1
   767  00000C                     ??___fladd:
   768  00000C                     ??___flmul:
   769  00000C                     ??_tolower:
   770  00000C                     ??___fleq:
   771  00000C                     ??___xxtofl:
   772  00000C                     Lcd_Out@y:
   773                           	callstack 0
   774  00000C                     ___fpclassifyf@e:
   775                           	callstack 0
   776  00000C                     strcpy@d:
   777                           	callstack 0
   778  00000C                     ___aodiv@divisor:
   779                           	callstack 0
   780  00000C                     ___aomod@divisor:
   781                           	callstack 0
   782                           
   783                           ; 8 bytes @ 0xB
   784  00000C                     	ds	1
   785  00000D                     ??_atoi:
   786  00000D                     Lcd_Out@data:
   787                           	callstack 0
   788  00000D                     fputs@s:
   789                           	callstack 0
   790  00000D                     strncmp@r:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0xC
   794  00000D                     	ds	1
   795  00000E                     ??_appLCD_Init:
   796  00000E                     ___fpclassifyf@u:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0xD
   800  00000E                     	ds	1
   801  00000F                     fputs@fp:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0xE
   805  00000F                     	ds	1
   806  000010                     ___fladd@signs:
   807                           	callstack 0
   808  000010                     ___flmul@sign:
   809                           	callstack 0
   810  000010                     ___xxtofl@sign:
   811                           	callstack 0
   812  000010                     _tolower$1788:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0xF
   816  000010                     	ds	1
   817  000011                     ___fladd@aexp:
   818                           	callstack 0
   819  000011                     ___xxtofl@exp:
   820                           	callstack 0
   821  000011                     fputs@c:
   822                           	callstack 0
   823  000011                     atoi@neg:
   824                           	callstack 0
   825  000011                     ___flmul@grs:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x10
   829  000011                     	ds	1
   830  000012                     ___fladd@bexp:
   831                           	callstack 0
   832  000012                     fputs@i:
   833                           	callstack 0
   834  000012                     ___xxtofl@arg:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x11
   838  000012                     	ds	1
   839  000013                     ___fladd@grs:
   840                           	callstack 0
   841  000013                     _atoi$1693:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x12
   845  000013                     	ds	1
   846  000014                     ?_pad:
   847                           	callstack 0
   848  000014                     ___aodiv@counter:
   849                           	callstack 0
   850  000014                     ___aomod@counter:
   851                           	callstack 0
   852  000014                     pad@fp:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x13
   856  000014                     	ds	1
   857  000015                     ___aodiv@sign:
   858                           	callstack 0
   859  000015                     ___aomod@sign:
   860                           	callstack 0
   861  000015                     ___flmul@aexp:
   862                           	callstack 0
   863  000015                     _atoi$1695:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x14
   867  000015                     	ds	1
   868  000016                     ?_abs:
   869                           	callstack 0
   870  000016                     ___flmul@bexp:
   871                           	callstack 0
   872  000016                     pad@buf:
   873                           	callstack 0
   874  000016                     abs@a:
   875                           	callstack 0
   876  000016                     ___aodiv@quotient:
   877                           	callstack 0
   878                           
   879                           ; 8 bytes @ 0x15
   880  000016                     	ds	1
   881  000017                     _atoi$1694:
   882                           	callstack 0
   883  000017                     ___flmul@prod:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x16
   887  000017                     	ds	1
   888  000018                     ??_abs:
   889  000018                     pad@p:
   890                           	callstack 0
   891  000018                     atoi@n:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x17
   895  000018                     	ds	2
   896  00001A                     ??_pad:
   897                           
   898                           ; 1 bytes @ 0x19
   899  00001A                     	ds	1
   900  00001B                     ___flmul@temp:
   901                           	callstack 0
   902  00001B                     pad@i:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x1A
   906  00001B                     	ds	2
   907  00001D                     ?___fldiv:
   908                           	callstack 0
   909  00001D                     ?___flsub:
   910                           	callstack 0
   911  00001D                     pad@w:
   912                           	callstack 0
   913  00001D                     ___flge@ff1:
   914                           	callstack 0
   915  00001D                     ___flsub@b:
   916                           	callstack 0
   917  00001D                     ___fldiv@b:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x1C
   921  00001D                     	ds	2
   922  00001F                     ?_dtoa:
   923                           	callstack 0
   924  00001F                     dtoa@fp:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x1E
   928  00001F                     	ds	2
   929  000021                     ___flge@ff2:
   930                           	callstack 0
   931  000021                     ___flsub@a:
   932                           	callstack 0
   933  000021                     ___fldiv@a:
   934                           	callstack 0
   935  000021                     dtoa@d:
   936                           	callstack 0
   937                           
   938                           ; 8 bytes @ 0x20
   939  000021                     	ds	4
   940  000025                     ??___fldiv:
   941  000025                     ??___flge:
   942                           
   943                           ; 1 bytes @ 0x24
   944  000025                     	ds	4
   945  000029                     ??_dtoa:
   946  000029                     ___fldiv@rem:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x28
   950  000029                     	ds	4
   951  00002D                     ___fldiv@sign:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x2C
   955  00002D                     	ds	1
   956  00002E                     ___fldiv@new_exp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x2D
   960  00002E                     	ds	2
   961  000030                     ___fldiv@grs:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x2F
   965  000030                     	ds	1
   966  000031                     _dtoa$1603:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x30
   970  000031                     	ds	2
   971  000033                     dtoa@p:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x32
   975  000033                     	ds	1
   976  000034                     ___fldiv@bexp:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x33
   980  000034                     	ds	1
   981  000035                     ___fldiv@aexp:
   982                           	callstack 0
   983  000035                     dtoa@w:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x34
   987  000035                     	ds	1
   988  000036                     ?_floorf:
   989                           	callstack 0
   990  000036                     ?___fltol:
   991                           	callstack 0
   992  000036                     ___fltol@f1:
   993                           	callstack 0
   994  000036                     floorf@x:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x35
   998  000036                     	ds	1
   999  000037                     dtoa@s:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x36
  1003  000037                     	ds	2
  1004  000039                     dtoa@n:
  1005                           	callstack 0
  1006                           
  1007                           ; 8 bytes @ 0x38
  1008  000039                     	ds	1
  1009  00003A                     ??_floorf:
  1010  00003A                     ??___fltol:
  1011                           
  1012                           ; 1 bytes @ 0x39
  1013  00003A                     	ds	4
  1014  00003E                     ___fltol@sign1:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x3D
  1018  00003E                     	ds	1
  1019  00003F                     ___fltol@exp1:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x3E
  1023  00003F                     	ds	1
  1024  000040                     floorf@m:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x3F
  1028  000040                     	ds	1
  1029  000041                     dtoa@i:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x40
  1033  000041                     	ds	3
  1034  000044                     floorf@e:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x43
  1038  000044                     	ds	2
  1039  000046                     floorf@u:
  1040                           	callstack 0
  1041                           
  1042                           ; 4 bytes @ 0x45
  1043  000046                     	ds	4
  1044  00004A                     ?_efgtoa:
  1045                           	callstack 0
  1046  00004A                     efgtoa@fp:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x49
  1050  00004A                     	ds	2
  1051  00004C                     efgtoa@f:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x4B
  1055  00004C                     	ds	4
  1056  000050                     efgtoa@c:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x4F
  1060  000050                     	ds	1
  1061  000051                     ??_efgtoa:
  1062                           
  1063                           ; 1 bytes @ 0x50
  1064  000051                     	ds	5
  1065  000056                     ??_vfpfcnvrt:
  1066                           
  1067                           ; 1 bytes @ 0x55
  1068  000056                     	ds	4
  1069  00005A                     
  1070                           ; 1 bytes @ 0x59
  1071 ;;
  1072 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1073 ;;
  1074 ;; *************** function _main *****************
  1075 ;; Defined at:
  1076 ;;		line 12 in file "main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1092 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1093 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1094 ;;Total ram usage:        2 bytes
  1095 ;; Hardware stack levels required when called:   12
  1096 ;; This function calls:
  1097 ;;		_appInit
  1098 ;;		_appStateInitial
  1099 ;;		_appStateRecolectData
  1100 ;; This function is called by:
  1101 ;;		Startup code after reset
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text0
  1106  004026                     __ptext0:
  1107                           	callstack 0
  1108  004026                     _main:
  1109                           	callstack 19
  1110  004026                     
  1111                           ;main.c: 14:     TRISBbits.TRISB3 = 0;
  1112  004026  9693               	bcf	147,3,c	;volatile
  1113                           
  1114                           ;main.c: 15:     LATBbits.LATB2 = 0;
  1115  004028  948A               	bcf	138,2,c	;volatile
  1116  00402A                     
  1117                           ;main.c: 16:     appInit();
  1118  00402A  ECAE  F022         	call	_appInit	;wreg free
  1119  00402E                     l5262:
  1120                           
  1121                           ;main.c: 18:     {;main.c: 20:         LATBbits.LATB3 = !LATBbits.LATB3;
  1122  00402E  A68A               	btfss	138,3,c	;volatile
  1123  004030  EF1C  F020         	goto	u6231
  1124  004034  EF21  F020         	goto	u6230
  1125  004038                     u6231:
  1126  004038  0100               	movlb	0	; () banked
  1127  00403A  6BDC               	clrf	??_main& (0+255),b
  1128  00403C  2BDC               	incf	??_main& (0+255),f,b
  1129  00403E  EF23  F020         	goto	u6248
  1130  004042                     u6230:
  1131  004042  0100               	movlb	0	; () banked
  1132  004044  6BDC               	clrf	??_main& (0+255),b
  1133  004046                     u6248:
  1134  004046  47DC               	rlncf	??_main& (0+255),f,b
  1135  004048  47DC               	rlncf	??_main& (0+255),f,b
  1136  00404A  47DC               	rlncf	??_main& (0+255),f,b
  1137  00404C  508A               	movf	138,w,c	;volatile
  1138  00404E  19DC               	xorwf	??_main& (0+255),w,b
  1139  004050  0BF7               	andlw	-9
  1140  004052  19DC               	xorwf	??_main& (0+255),w,b
  1141  004054  6E8A               	movwf	138,c	;volatile
  1142  004056                     
  1143                           ; BSR set to: 0
  1144                           ;main.c: 21:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1145  004056  0E02               	movlw	2
  1146  004058  0100               	movlb	0	; () banked
  1147  00405A  6FDD               	movwf	(??_main+1)& (0+255),b
  1148  00405C  0E86               	movlw	134
  1149  00405E  6FDC               	movwf	??_main& (0+255),b
  1150  004060  0E99               	movlw	153
  1151  004062                     u6297:
  1152  004062  2EE8               	decfsz	wreg,f,c
  1153  004064  D7FE               	bra	u6297
  1154  004066  2FDC               	decfsz	??_main& (0+255),f,b
  1155  004068  D7FC               	bra	u6297
  1156  00406A  2FDD               	decfsz	(??_main+1)& (0+255),f,b
  1157  00406C  D7FA               	bra	u6297
  1158  00406E                     
  1159                           ;main.c: 22:         datos.nextFunc();
  1160  00406E  EE21  F06E         	lfsr	2,_datos+21
  1161  004072  D802               	call	u6258
  1162  004074  EF46  F020         	goto	u6259
  1163  004078                     u6258:
  1164  004078  0005               	push	
  1165  00407A  6EFA               	movwf	pclath,c
  1166  00407C  50DE               	movf	postinc2,w,c
  1167  00407E  6EFD               	movwf	tosl,c
  1168  004080  50DE               	movf	postinc2,w,c
  1169  004082  6EFE               	movwf	tosh,c
  1170  004084  50F8               	movf	tblptru,w,c
  1171  004086  6EFF               	movwf	tosu,c
  1172  004088  50FA               	movf	pclath,w,c
  1173  00408A  0012               	return		;indir
  1174  00408C                     u6259:
  1175  00408C  EF17  F020         	goto	l5262
  1176  004090  EF3F  F000         	goto	start
  1177  004094                     __end_of_main:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _appStateInitial *****************
  1181 ;; Defined at:
  1182 ;;		line 28 in file "app.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		None
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1196 ;;      Params:         0       0       0       0       0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1199 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1200 ;;Total ram usage:        0 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    2
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_appStateRecolectData
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text1
  1212  0045BA                     __ptext1:
  1213                           	callstack 0
  1214  0045BA                     _appStateInitial:
  1215                           	callstack 28
  1216  0045BA  0012               	return		;funcret
  1217  0045BC                     __end_of_appStateInitial:
  1218                           	callstack 0
  1219                           
  1220 ;; *************** function _appStateRecolectData *****************
  1221 ;; Defined at:
  1222 ;;		line 21 in file "app.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1239 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:   11
  1243 ;; This function calls:
  1244 ;;		_appADC
  1245 ;;		_appBat
  1246 ;;		_appElemts
  1247 ;; This function is called by:
  1248 ;;		_isrL
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text2
  1254  00453A                     __ptext2:
  1255                           	callstack 0
  1256  00453A                     _appStateRecolectData:
  1257                           	callstack 19
  1258  00453A                     
  1259                           ;app.c: 23:     appADC();
  1260  00453A  EC9E  F01D         	call	_appADC	;wreg free
  1261                           
  1262                           ;app.c: 24:     appBat();
  1263  00453E  EC53  F01A         	call	_appBat	;wreg free
  1264                           
  1265                           ;app.c: 25:     appElemts(&datos.elements);
  1266  004542  0E5A               	movlw	low (_datos+1)
  1267  004544  0100               	movlb	0	; () banked
  1268  004546  6FCE               	movwf	appElemts@elements& (0+255),b
  1269  004548  0E01               	movlw	high (_datos+1)
  1270  00454A  6FCF               	movwf	(appElemts@elements+1)& (0+255),b
  1271  00454C  EC50  F021         	call	_appElemts	;wreg free
  1272  004550                     
  1273                           ;app.c: 26:     datos.nextFunc = appStateInitial;
  1274  004550  0EBA               	movlw	low _appStateInitial
  1275  004552  0101               	movlb	1	; () banked
  1276  004554  6F6E               	movwf	(_datos+21)& (0+255),b
  1277  004556  0E45               	movlw	high _appStateInitial
  1278  004558  6F6F               	movwf	(_datos+22)& (0+255),b
  1279  00455A                     
  1280                           ; BSR set to: 1
  1281  00455A  0012               	return		;funcret
  1282  00455C                     __end_of_appStateRecolectData:
  1283                           	callstack 0
  1284                           
  1285 ;; *************** function _appElemts *****************
  1286 ;; Defined at:
  1287 ;;		line 77 in file "servo.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  elements        2  110[BANK0 ] PTR const unsigned char 
  1290 ;;		 -> datos.elements(1), datos(23), 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  dataout         6  113[BANK0 ] unsigned char [6]
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1302 ;;      Params:         0       2       0       0       0       0       0       0       0
  1303 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1304 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1305 ;;      Totals:         0       9       0       0       0       0       0       0       0
  1306 ;;Total ram usage:        9 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:   10
  1309 ;; This function calls:
  1310 ;;		_Lcd_Out
  1311 ;;		_sprintf
  1312 ;; This function is called by:
  1313 ;;		_appStateRecolectData
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text3
  1318  0042A0                     __ptext3:
  1319                           	callstack 0
  1320  0042A0                     _appElemts:
  1321                           	callstack 19
  1322  0042A0                     
  1323                           ;servo.c: 77: void appElemts(const uint8_t * elements);servo.c: 78: {;servo.c: 79:     u
      +                          int8_t dataout[6] = {0};
  1324  0042A0  EE20  F0D1         	lfsr	2,appElemts@dataout
  1325  0042A4  0E05               	movlw	5
  1326  0042A6                     u6221:
  1327  0042A6  6ADE               	clrf	postinc2,c
  1328  0042A8  06E8               	decf	wreg,f,c
  1329  0042AA  E2FD               	bc	u6221
  1330  0042AC                     
  1331                           ;servo.c: 80:     sprintf((char *)dataout,"#:%d",*elements);
  1332  0042AC  0ED1               	movlw	low appElemts@dataout
  1333  0042AE  0100               	movlb	0	; () banked
  1334  0042B0  6FBC               	movwf	sprintf@s& (0+255),b
  1335  0042B2  0E00               	movlw	high appElemts@dataout
  1336  0042B4  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  1337  0042B6  0E24               	movlw	low STR_5
  1338  0042B8  6FBE               	movwf	sprintf@fmt& (0+255),b
  1339  0042BA  0E08               	movlw	high STR_5
  1340  0042BC  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  1341  0042BE  C0CE  FFD9         	movff	appElemts@elements,fsr2l
  1342  0042C2  C0CF  FFDA         	movff	appElemts@elements+1,fsr2h
  1343  0042C6  50DF               	movf	indf2,w,c
  1344  0042C8  6FD0               	movwf	??_appElemts& (0+255),b
  1345  0042CA  51D0               	movf	??_appElemts& (0+255),w,b
  1346  0042CC  6FC0               	movwf	(?_sprintf+4)& (0+255),b
  1347  0042CE  6BC1               	clrf	(?_sprintf+5)& (0+255),b
  1348  0042D0  ECD9  F020         	call	_sprintf	;wreg free
  1349  0042D4                     
  1350                           ;servo.c: 81:     Lcd_Out(2,8, (int8_t*)dataout);
  1351  0042D4  0E08               	movlw	8
  1352  0042D6  6E07               	movwf	Lcd_Out@x^0,c
  1353  0042D8  0ED1               	movlw	low appElemts@dataout
  1354  0042DA  6E08               	movwf	Lcd_Out@buffer^0,c
  1355  0042DC  0E00               	movlw	high appElemts@dataout
  1356  0042DE  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1357  0042E0  0E02               	movlw	2
  1358  0042E2  ECD3  F01C         	call	_Lcd_Out
  1359  0042E6  0012               	return		;funcret
  1360  0042E8                     __end_of_appElemts:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _appBat *****************
  1364 ;; Defined at:
  1365 ;;		line 61 in file "adc.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  dataOut         8  110[BANK0 ] unsigned char [8]
  1370 ;;  bat             4  120[BANK0 ] float 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0
  1381 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1383 ;;      Totals:         0      14       0       0       0       0       0       0       0
  1384 ;;Total ram usage:       14 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:   10
  1387 ;; This function calls:
  1388 ;;		_Lcd_Out
  1389 ;;		___fldiv
  1390 ;;		___flmul
  1391 ;;		___fltol
  1392 ;;		___xxtofl
  1393 ;;		_adcGetValue
  1394 ;;		_sprintf
  1395 ;; This function is called by:
  1396 ;;		_appStateRecolectData
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text4
  1401  0034A6                     __ptext4:
  1402                           	callstack 0
  1403  0034A6                     _appBat:
  1404                           	callstack 19
  1405  0034A6                     
  1406                           ;adc.c: 63:     uint8_t dataOut[8] = {0};
  1407  0034A6  EE20  F0CE         	lfsr	2,appBat@dataOut
  1408  0034AA  0E07               	movlw	7
  1409  0034AC                     u6211:
  1410  0034AC  6ADE               	clrf	postinc2,c
  1411  0034AE  06E8               	decf	wreg,f,c
  1412  0034B0  E2FD               	bc	u6211
  1413  0034B2                     
  1414                           ;adc.c: 64:     float bat = adcGetValue(1);
  1415  0034B2  0E01               	movlw	1
  1416  0034B4  ECFD  F021         	call	_adcGetValue
  1417  0034B8  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1418  0034BC  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1419  0034C0  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1420  0034C2  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1421  0034C4  0E00               	movlw	0
  1422  0034C6  ECFF  F015         	call	___xxtofl
  1423  0034CA  C008  F0D8         	movff	?___xxtofl,appBat@bat
  1424  0034CE  C009  F0D9         	movff	?___xxtofl+1,appBat@bat+1
  1425  0034D2  C00A  F0DA         	movff	?___xxtofl+2,appBat@bat+2
  1426  0034D6  C00B  F0DB         	movff	?___xxtofl+3,appBat@bat+3
  1427  0034DA                     
  1428                           ;adc.c: 65:     bat = (float)((bat*5.0)/1024.0);
  1429  0034DA  0E00               	movlw	0
  1430  0034DC  6E08               	movwf	___flmul@a^0,c
  1431  0034DE  0E00               	movlw	0
  1432  0034E0  6E09               	movwf	(___flmul@a+1)^0,c
  1433  0034E2  0EA0               	movlw	160
  1434  0034E4  6E0A               	movwf	(___flmul@a+2)^0,c
  1435  0034E6  0E40               	movlw	64
  1436  0034E8  6E0B               	movwf	(___flmul@a+3)^0,c
  1437  0034EA  C0D8  F004         	movff	appBat@bat,___flmul@b
  1438  0034EE  C0D9  F005         	movff	appBat@bat+1,___flmul@b+1
  1439  0034F2  C0DA  F006         	movff	appBat@bat+2,___flmul@b+2
  1440  0034F6  C0DB  F007         	movff	appBat@bat+3,___flmul@b+3
  1441  0034FA  ECA4  F00F         	call	___flmul	;wreg free
  1442  0034FE  C004  F01D         	movff	?___flmul,___fldiv@b
  1443  003502  C005  F01E         	movff	?___flmul+1,___fldiv@b+1
  1444  003506  C006  F01F         	movff	?___flmul+2,___fldiv@b+2
  1445  00350A  C007  F020         	movff	?___flmul+3,___fldiv@b+3
  1446  00350E  0E00               	movlw	0
  1447  003510  6E21               	movwf	___fldiv@a^0,c
  1448  003512  0E00               	movlw	0
  1449  003514  6E22               	movwf	(___fldiv@a+1)^0,c
  1450  003516  0E80               	movlw	128
  1451  003518  6E23               	movwf	(___fldiv@a+2)^0,c
  1452  00351A  0E44               	movlw	68
  1453  00351C  6E24               	movwf	(___fldiv@a+3)^0,c
  1454  00351E  ECB9  F011         	call	___fldiv	;wreg free
  1455  003522  C01D  F0D8         	movff	?___fldiv,appBat@bat
  1456  003526  C01E  F0D9         	movff	?___fldiv+1,appBat@bat+1
  1457  00352A  C01F  F0DA         	movff	?___fldiv+2,appBat@bat+2
  1458  00352E  C020  F0DB         	movff	?___fldiv+3,appBat@bat+3
  1459  003532                     
  1460                           ;adc.c: 66:     sprintf((char *)dataOut,"Bat:%d",(int)((bat*100)/5));
  1461  003532  0E00               	movlw	0
  1462  003534  6E21               	movwf	___fldiv@a^0,c
  1463  003536  0E00               	movlw	0
  1464  003538  6E22               	movwf	(___fldiv@a+1)^0,c
  1465  00353A  0EA0               	movlw	160
  1466  00353C  6E23               	movwf	(___fldiv@a+2)^0,c
  1467  00353E  0E40               	movlw	64
  1468  003540  6E24               	movwf	(___fldiv@a+3)^0,c
  1469  003542  0E00               	movlw	0
  1470  003544  6E08               	movwf	___flmul@a^0,c
  1471  003546  0E00               	movlw	0
  1472  003548  6E09               	movwf	(___flmul@a+1)^0,c
  1473  00354A  0EC8               	movlw	200
  1474  00354C  6E0A               	movwf	(___flmul@a+2)^0,c
  1475  00354E  0E42               	movlw	66
  1476  003550  6E0B               	movwf	(___flmul@a+3)^0,c
  1477  003552  C0D8  F004         	movff	appBat@bat,___flmul@b
  1478  003556  C0D9  F005         	movff	appBat@bat+1,___flmul@b+1
  1479  00355A  C0DA  F006         	movff	appBat@bat+2,___flmul@b+2
  1480  00355E  C0DB  F007         	movff	appBat@bat+3,___flmul@b+3
  1481  003562  ECA4  F00F         	call	___flmul	;wreg free
  1482  003566  C004  F01D         	movff	?___flmul,___fldiv@b
  1483  00356A  C005  F01E         	movff	?___flmul+1,___fldiv@b+1
  1484  00356E  C006  F01F         	movff	?___flmul+2,___fldiv@b+2
  1485  003572  C007  F020         	movff	?___flmul+3,___fldiv@b+3
  1486  003576  ECB9  F011         	call	___fldiv	;wreg free
  1487  00357A  C01D  F036         	movff	?___fldiv,___fltol@f1
  1488  00357E  C01E  F037         	movff	?___fldiv+1,___fltol@f1+1
  1489  003582  C01F  F038         	movff	?___fldiv+2,___fltol@f1+2
  1490  003586  C020  F039         	movff	?___fldiv+3,___fltol@f1+3
  1491  00358A  ECE4  F01A         	call	___fltol	;wreg free
  1492  00358E  C036  F0D6         	movff	?___fltol,_appBat$2019
  1493  003592  C037  F0D7         	movff	?___fltol+1,_appBat$2019+1
  1494  003596                     
  1495                           ;adc.c: 66:     sprintf((char *)dataOut,"Bat:%d",(int)((bat*100)/5));
  1496  003596  0ECE               	movlw	low appBat@dataOut
  1497  003598  0100               	movlb	0	; () banked
  1498  00359A  6FBC               	movwf	sprintf@s& (0+255),b
  1499  00359C  0E00               	movlw	high appBat@dataOut
  1500  00359E  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  1501  0035A0  0E17               	movlw	low STR_2
  1502  0035A2  6FBE               	movwf	sprintf@fmt& (0+255),b
  1503  0035A4  0E08               	movlw	high STR_2
  1504  0035A6  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  1505  0035A8  C0D6  F0C0         	movff	_appBat$2019,?_sprintf+4
  1506  0035AC  C0D7  F0C1         	movff	_appBat$2019+1,?_sprintf+5
  1507  0035B0  ECD9  F020         	call	_sprintf	;wreg free
  1508  0035B4                     
  1509                           ;adc.c: 67:     Lcd_Out(2,0, (int8_t*)dataOut);
  1510  0035B4  0E00               	movlw	0
  1511  0035B6  6E07               	movwf	Lcd_Out@x^0,c
  1512  0035B8  0ECE               	movlw	low appBat@dataOut
  1513  0035BA  6E08               	movwf	Lcd_Out@buffer^0,c
  1514  0035BC  0E00               	movlw	high appBat@dataOut
  1515  0035BE  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1516  0035C0  0E02               	movlw	2
  1517  0035C2  ECD3  F01C         	call	_Lcd_Out
  1518  0035C6  0012               	return		;funcret
  1519  0035C8                     __end_of_appBat:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _appADC *****************
  1523 ;; Defined at:
  1524 ;;		line 52 in file "adc.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  dataOut         9  110[BANK0 ] unsigned char [9]
  1529 ;;  lm35val         4  119[BANK0 ] float 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         0      13       0       0       0       0       0       0       0
  1543 ;;Total ram usage:       13 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:   10
  1546 ;; This function calls:
  1547 ;;		_Lcd_Out
  1548 ;;		___fldiv
  1549 ;;		___flmul
  1550 ;;		___xxtofl
  1551 ;;		_adcGetValue
  1552 ;;		_sprintf
  1553 ;; This function is called by:
  1554 ;;		_appStateRecolectData
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text5
  1559  003B3C                     __ptext5:
  1560                           	callstack 0
  1561  003B3C                     _appADC:
  1562                           	callstack 19
  1563  003B3C                     
  1564                           ;adc.c: 54:     uint8_t dataOut[9] = {0};
  1565  003B3C  EE20  F0CE         	lfsr	2,appADC@dataOut
  1566  003B40  0E08               	movlw	8
  1567  003B42                     u6201:
  1568  003B42  6ADE               	clrf	postinc2,c
  1569  003B44  06E8               	decf	wreg,f,c
  1570  003B46  E2FD               	bc	u6201
  1571  003B48                     
  1572                           ;adc.c: 55:     float lm35val = adcGetValue(0);
  1573  003B48  0E00               	movlw	0
  1574  003B4A  ECFD  F021         	call	_adcGetValue
  1575  003B4E  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1576  003B52  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1577  003B56  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1578  003B58  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1579  003B5A  0E00               	movlw	0
  1580  003B5C  ECFF  F015         	call	___xxtofl
  1581  003B60  C008  F0D7         	movff	?___xxtofl,appADC@lm35val
  1582  003B64  C009  F0D8         	movff	?___xxtofl+1,appADC@lm35val+1
  1583  003B68  C00A  F0D9         	movff	?___xxtofl+2,appADC@lm35val+2
  1584  003B6C  C00B  F0DA         	movff	?___xxtofl+3,appADC@lm35val+3
  1585  003B70                     
  1586                           ;adc.c: 56:     lm35val = (float)((lm35val*4.88)/10.0);
  1587  003B70  0EF6               	movlw	246
  1588  003B72  6E08               	movwf	___flmul@a^0,c
  1589  003B74  0E28               	movlw	40
  1590  003B76  6E09               	movwf	(___flmul@a+1)^0,c
  1591  003B78  0E9C               	movlw	156
  1592  003B7A  6E0A               	movwf	(___flmul@a+2)^0,c
  1593  003B7C  0E40               	movlw	64
  1594  003B7E  6E0B               	movwf	(___flmul@a+3)^0,c
  1595  003B80  C0D7  F004         	movff	appADC@lm35val,___flmul@b
  1596  003B84  C0D8  F005         	movff	appADC@lm35val+1,___flmul@b+1
  1597  003B88  C0D9  F006         	movff	appADC@lm35val+2,___flmul@b+2
  1598  003B8C  C0DA  F007         	movff	appADC@lm35val+3,___flmul@b+3
  1599  003B90  ECA4  F00F         	call	___flmul	;wreg free
  1600  003B94  C004  F01D         	movff	?___flmul,___fldiv@b
  1601  003B98  C005  F01E         	movff	?___flmul+1,___fldiv@b+1
  1602  003B9C  C006  F01F         	movff	?___flmul+2,___fldiv@b+2
  1603  003BA0  C007  F020         	movff	?___flmul+3,___fldiv@b+3
  1604  003BA4  0E00               	movlw	0
  1605  003BA6  6E21               	movwf	___fldiv@a^0,c
  1606  003BA8  0E00               	movlw	0
  1607  003BAA  6E22               	movwf	(___fldiv@a+1)^0,c
  1608  003BAC  0E20               	movlw	32
  1609  003BAE  6E23               	movwf	(___fldiv@a+2)^0,c
  1610  003BB0  0E41               	movlw	65
  1611  003BB2  6E24               	movwf	(___fldiv@a+3)^0,c
  1612  003BB4  ECB9  F011         	call	___fldiv	;wreg free
  1613  003BB8  C01D  F0D7         	movff	?___fldiv,appADC@lm35val
  1614  003BBC  C01E  F0D8         	movff	?___fldiv+1,appADC@lm35val+1
  1615  003BC0  C01F  F0D9         	movff	?___fldiv+2,appADC@lm35val+2
  1616  003BC4  C020  F0DA         	movff	?___fldiv+3,appADC@lm35val+3
  1617  003BC8                     
  1618                           ;adc.c: 57:     sprintf((char *)dataOut,"T:%0.1f C",lm35val);
  1619  003BC8  0ECE               	movlw	low appADC@dataOut
  1620  003BCA  0100               	movlb	0	; () banked
  1621  003BCC  6FBC               	movwf	sprintf@s& (0+255),b
  1622  003BCE  0E00               	movlw	high appADC@dataOut
  1623  003BD0  6FBD               	movwf	(sprintf@s+1)& (0+255),b
  1624  003BD2  0E0D               	movlw	low STR_1
  1625  003BD4  6FBE               	movwf	sprintf@fmt& (0+255),b
  1626  003BD6  0E08               	movlw	high STR_1
  1627  003BD8  6FBF               	movwf	(sprintf@fmt+1)& (0+255),b
  1628  003BDA  C0D7  F0C0         	movff	appADC@lm35val,?_sprintf+4
  1629  003BDE  C0D8  F0C1         	movff	appADC@lm35val+1,?_sprintf+5
  1630  003BE2  C0D9  F0C2         	movff	appADC@lm35val+2,?_sprintf+6
  1631  003BE6  C0DA  F0C3         	movff	appADC@lm35val+3,?_sprintf+7
  1632  003BEA  ECD9  F020         	call	_sprintf	;wreg free
  1633  003BEE                     
  1634                           ;adc.c: 58:     Lcd_Out(1,0, (int8_t*)dataOut);
  1635  003BEE  0E00               	movlw	0
  1636  003BF0  6E07               	movwf	Lcd_Out@x^0,c
  1637  003BF2  0ECE               	movlw	low appADC@dataOut
  1638  003BF4  6E08               	movwf	Lcd_Out@buffer^0,c
  1639  003BF6  0E00               	movlw	high appADC@dataOut
  1640  003BF8  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1641  003BFA  0E01               	movlw	1
  1642  003BFC  ECD3  F01C         	call	_Lcd_Out
  1643  003C00  0012               	return		;funcret
  1644  003C02                     __end_of_appADC:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _sprintf *****************
  1648 ;; Defined at:
  1649 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  s               2   92[BANK0 ] PTR unsigned char 
  1652 ;;		 -> appElemts@dataout(6), appBat@dataOut(8), appADC@dataOut(9), 
  1653 ;;  fmt             2   94[BANK0 ] PTR const unsigned char 
  1654 ;;		 -> STR_5(5), STR_2(7), STR_1(10), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  f               6  104[BANK0 ] struct _IO_FILE
  1657 ;;  ap              2  102[BANK0 ] PTR void [1]
  1658 ;;		 -> ?_sprintf(2), 
  1659 ;;  ret             2    0        int 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  2   92[BANK0 ] int 
  1662 ;; Registers used:
  1663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1669 ;;      Params:         0       8       0       0       0       0       0       0       0
  1670 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1672 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1673 ;;Total ram usage:       18 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    9
  1676 ;; This function calls:
  1677 ;;		_vfprintf
  1678 ;; This function is called by:
  1679 ;;		_appADC
  1680 ;;		_appBat
  1681 ;;		_appElemts
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text6
  1686  0041B2                     __ptext6:
  1687                           	callstack 0
  1688  0041B2                     _sprintf:
  1689                           	callstack 19
  1690  0041B2  0EC0               	movlw	low (?_sprintf+4)
  1691  0041B4  0100               	movlb	0	; () banked
  1692  0041B6  6FC6               	movwf	sprintf@ap& (0+255),b
  1693  0041B8  0E00               	movlw	high (?_sprintf+4)
  1694  0041BA  6FC7               	movwf	(sprintf@ap+1)& (0+255),b
  1695  0041BC  C0BC  F0C8         	movff	sprintf@s,sprintf@f
  1696  0041C0  C0BD  F0C9         	movff	sprintf@s+1,sprintf@f+1
  1697  0041C4                     
  1698                           ; BSR set to: 0
  1699  0041C4  0E00               	movlw	0
  1700  0041C6  6FCB               	movwf	(sprintf@f+3)& (0+255),b
  1701  0041C8  0E00               	movlw	0
  1702  0041CA  6FCA               	movwf	(sprintf@f+2)& (0+255),b
  1703  0041CC                     
  1704                           ; BSR set to: 0
  1705  0041CC  0E00               	movlw	0
  1706  0041CE  6FCD               	movwf	(sprintf@f+5)& (0+255),b
  1707  0041D0  0E00               	movlw	0
  1708  0041D2  6FCC               	movwf	(sprintf@f+4)& (0+255),b
  1709  0041D4                     
  1710                           ; BSR set to: 0
  1711  0041D4  0EC8               	movlw	low sprintf@f
  1712  0041D6  6FB4               	movwf	vfprintf@fp& (0+255),b
  1713  0041D8  0E00               	movlw	high sprintf@f
  1714  0041DA  6FB5               	movwf	(vfprintf@fp+1)& (0+255),b
  1715  0041DC  C0BE  F0B6         	movff	sprintf@fmt,vfprintf@fmt
  1716  0041E0  C0BF  F0B7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1717  0041E4  0EC6               	movlw	low sprintf@ap
  1718  0041E6  6FB8               	movwf	vfprintf@ap& (0+255),b
  1719  0041E8  0E00               	movlw	high sprintf@ap
  1720  0041EA  6FB9               	movwf	(vfprintf@ap+1)& (0+255),b
  1721  0041EC  EC4A  F020         	call	_vfprintf	;wreg free
  1722  0041F0  0100               	movlb	0	; () banked
  1723  0041F2  51CA               	movf	(sprintf@f+2)& (0+255),w,b
  1724  0041F4  25BC               	addwf	sprintf@s& (0+255),w,b
  1725  0041F6  6ED9               	movwf	fsr2l,c
  1726  0041F8  51CB               	movf	(sprintf@f+3)& (0+255),w,b
  1727  0041FA  21BD               	addwfc	(sprintf@s+1)& (0+255),w,b
  1728  0041FC  6EDA               	movwf	fsr2h,c
  1729  0041FE  0E00               	movlw	0
  1730  004200  6EDF               	movwf	indf2,c
  1731  004202                     
  1732                           ; BSR set to: 0
  1733  004202  0012               	return		;funcret
  1734  004204                     __end_of_sprintf:
  1735                           	callstack 0
  1736                           
  1737 ;; *************** function _vfprintf *****************
  1738 ;; Defined at:
  1739 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  1742 ;;		 -> sprintf@f(6), 
  1743 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  1744 ;;		 -> STR_5(5), STR_2(7), STR_1(10), 
  1745 ;;  ap              2   88[BANK0 ] PTR PTR void 
  1746 ;;		 -> sprintf@ap(2), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  cfmt            2   90[BANK0 ] PTR unsigned char 
  1749 ;;		 -> STR_5(5), STR_2(7), STR_1(10), 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  2   84[BANK0 ] int 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1759 ;;      Params:         0       6       0       0       0       0       0       0       0
  1760 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1762 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1763 ;;Total ram usage:        8 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    8
  1766 ;; This function calls:
  1767 ;;		_vfpfcnvrt
  1768 ;; This function is called by:
  1769 ;;		_sprintf
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text7
  1774  004094                     __ptext7:
  1775                           	callstack 0
  1776  004094                     _vfprintf:
  1777                           	callstack 19
  1778  004094                     
  1779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1780  004094  C0B6  F0BA         	movff	vfprintf@fmt,vfprintf@cfmt
  1781  004098  C0B7  F0BB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1782  00409C                     
  1783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1784  00409C  0E00               	movlw	0
  1785  00409E  0100               	movlb	0	; () banked
  1786  0040A0  6FF5               	movwf	(_nout+1)& (0+255),b
  1787  0040A2  0E00               	movlw	0
  1788  0040A4  6FF4               	movwf	_nout& (0+255),b
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1791  0040A6  EF68  F020         	goto	l5212
  1792  0040AA                     l5210:
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1796  0040AA  C0B4  F098         	movff	vfprintf@fp,vfpfcnvrt@fp
  1797  0040AE  C0B5  F099         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1798  0040B2  0EBA               	movlw	low vfprintf@cfmt
  1799  0040B4  6F9A               	movwf	vfpfcnvrt@fmt& (0+255),b
  1800  0040B6  0E00               	movlw	high vfprintf@cfmt
  1801  0040B8  6F9B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1802  0040BA  C0B8  F09C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1803  0040BE  C0B9  F09D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1804  0040C2  EC4C  F00A         	call	_vfpfcnvrt	;wreg free
  1805  0040C6  0100               	movlb	0	; () banked
  1806  0040C8  5198               	movf	?_vfpfcnvrt& (0+255),w,b
  1807  0040CA  27F4               	addwf	_nout& (0+255),f,b
  1808  0040CC  5199               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1809  0040CE  23F5               	addwfc	(_nout+1)& (0+255),f,b
  1810  0040D0                     l5212:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1814  0040D0  C0BA  FFF6         	movff	vfprintf@cfmt,tblptrl
  1815  0040D4  C0BB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1816  0040D8                     	if	0	;tblptru may be non-zero
  1817  0040D8                     	endif
  1818  0040D8                     	if	0	;tblptru may be non-zero
  1819  0040D8                     	endif
  1820  0040D8  0008               	tblrd		*
  1821  0040DA  50F5               	movf	tablat,w,c
  1822  0040DC  0900               	iorlw	0
  1823  0040DE  A4D8               	btfss	status,2,c
  1824  0040E0  EF74  F020         	goto	u6191
  1825  0040E4  EF76  F020         	goto	u6190
  1826  0040E8                     u6191:
  1827  0040E8  EF55  F020         	goto	l5210
  1828  0040EC                     u6190:
  1829  0040EC                     
  1830                           ; BSR set to: 0
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1832  0040EC  C0F4  F0B4         	movff	_nout,?_vfprintf
  1833  0040F0  C0F5  F0B5         	movff	_nout+1,?_vfprintf+1
  1834  0040F4                     
  1835                           ; BSR set to: 0
  1836  0040F4  0012               	return		;funcret
  1837  0040F6                     __end_of_vfprintf:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _vfpfcnvrt *****************
  1841 ;; Defined at:
  1842 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1845 ;;		 -> sprintf@f(6), 
  1846 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
  1847 ;;		 -> vfprintf@cfmt(2), 
  1848 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1849 ;;		 -> sprintf@ap(2), 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  ll              8   62[BANK0 ] long long 
  1852 ;;  llu             8    0        unsigned long long 
  1853 ;;  f               4   79[BANK0 ] unsigned long long 
  1854 ;;  ct              3   76[BANK0 ] unsigned char [3]
  1855 ;;  vp              3    0        PTR void 
  1856 ;;  cp              3    0        PTR unsigned char 
  1857 ;;  done            2   70[BANK0 ] int 
  1858 ;;  i               2    0        int 
  1859 ;;  c               1   83[BANK0 ] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2   56[BANK0 ] int 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1869 ;;      Params:         0       6       0       0       0       0       0       0       0
  1870 ;;      Locals:         0      22       0       0       0       0       0       0       0
  1871 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1872 ;;      Totals:         4      28       0       0       0       0       0       0       0
  1873 ;;Total ram usage:       32 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    7
  1876 ;; This function calls:
  1877 ;;		_atoi
  1878 ;;		_dtoa
  1879 ;;		_efgtoa
  1880 ;;		_fputc
  1881 ;;		_isdigit
  1882 ;;		_isupper
  1883 ;;		_strncmp
  1884 ;;		_tolower
  1885 ;; This function is called by:
  1886 ;;		_vfprintf
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text8
  1891  001498                     __ptext8:
  1892                           	callstack 0
  1893  001498                     _vfpfcnvrt:
  1894                           	callstack 19
  1895  001498                     
  1896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1897  001498  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1898  00149C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1899  0014A0  CFDE FFF6          	movff	postinc2,tblptrl
  1900  0014A4  CFDD FFF7          	movff	postdec2,tblptrh
  1901  0014A8                     	if	0	;tblptru may be non-zero
  1902  0014A8                     	endif
  1903  0014A8                     	if	0	;tblptru may be non-zero
  1904  0014A8                     	endif
  1905  0014A8  0008               	tblrd		*
  1906  0014AA  50F5               	movf	tablat,w,c
  1907  0014AC  0A25               	xorlw	37
  1908  0014AE  A4D8               	btfss	status,2,c
  1909  0014B0  EF5C  F00A         	goto	u6011
  1910  0014B4  EF5E  F00A         	goto	u6010
  1911  0014B8                     u6011:
  1912  0014B8  EF28  F00D         	goto	l5188
  1913  0014BC                     u6010:
  1914  0014BC                     
  1915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1916  0014BC  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1917  0014C0  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1918  0014C4  2ADE               	incf	postinc2,f,c
  1919  0014C6  0E00               	movlw	0
  1920  0014C8  22DD               	addwfc	postdec2,f,c
  1921  0014CA                     
  1922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1923  0014CA  0E00               	movlw	0
  1924  0014CC  0100               	movlb	0	; () banked
  1925  0014CE  6FF7               	movwf	(_width+1)& (0+255),b
  1926  0014D0  0E00               	movlw	0
  1927  0014D2  6FF6               	movwf	_width& (0+255),b
  1928  0014D4  C0F6  F05A         	movff	_width,_flags
  1929  0014D8  C0F7  F05B         	movff	_width+1,_flags+1
  1930  0014DC                     
  1931                           ; BSR set to: 0
  1932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1933  0014DC  69F8               	setf	_prec& (0+255),b
  1934  0014DE  69F9               	setf	(_prec+1)& (0+255),b
  1935  0014E0                     
  1936                           ; BSR set to: 0
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1938  0014E0  0E00               	movlw	0
  1939  0014E2  6FA7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1940  0014E4  0E00               	movlw	0
  1941  0014E6  6FA6               	movwf	vfpfcnvrt@done& (0+255),b
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1944  0014E8  EFBC  F00A         	goto	l5100
  1945  0014EC                     l5074:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1949  0014EC  805A               	bsf	_flags^0,0,c
  1950  0014EE                     l5076:
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1954  0014EE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1955  0014F2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1956  0014F6  2ADE               	incf	postinc2,f,c
  1957  0014F8  0E00               	movlw	0
  1958  0014FA  22DD               	addwfc	postdec2,f,c
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1961  0014FC  EFBC  F00A         	goto	l5100
  1962  001500                     l5078:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1966  001500  825A               	bsf	_flags^0,1,c
  1967  001502  EF77  F00A         	goto	l5076
  1968  001506                     l5082:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1972  001506  845A               	bsf	_flags^0,2,c
  1973  001508  EF77  F00A         	goto	l5076
  1974  00150C                     l5086:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1978  00150C  865A               	bsf	_flags^0,3,c
  1979  00150E  EF77  F00A         	goto	l5076
  1980  001512                     l5090:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1984  001512  885A               	bsf	_flags^0,4,c
  1985  001514  EF77  F00A         	goto	l5076
  1986  001518                     l5094:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1990  001518  0E00               	movlw	0
  1991  00151A  6FA7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1992  00151C  0E01               	movlw	1
  1993  00151E  6FA6               	movwf	vfpfcnvrt@done& (0+255),b
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1996  001520  EFBC  F00A         	goto	l5100
  1997  001524                     l5098:
  1998                           
  1999                           ; BSR set to: 0
  2000  001524  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2001  001528  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2002  00152C  CFDE FFF6          	movff	postinc2,tblptrl
  2003  001530  CFDD FFF7          	movff	postdec2,tblptrh
  2004  001534                     	if	0	;tblptru may be non-zero
  2005  001534                     	endif
  2006  001534                     	if	0	;tblptru may be non-zero
  2007  001534                     	endif
  2008  001534  0008               	tblrd		*
  2009  001536  50F5               	movf	tablat,w,c
  2010  001538  6E56               	movwf	??_vfpfcnvrt^0,c
  2011  00153A  6A57               	clrf	(??_vfpfcnvrt+1)^0,c
  2012                           
  2013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2014                           ; Switch size 1, requested type "simple"
  2015                           ; Number of cases is 1, Range of values is 0 to 0
  2016                           ; switch strategies available:
  2017                           ; Name         Instructions Cycles
  2018                           ; simple_byte            4     3 (average)
  2019                           ;	Chosen strategy is simple_byte
  2020  00153C  5057               	movf	(??_vfpfcnvrt+1)^0,w,c
  2021  00153E  0A00               	xorlw	0	; case 0
  2022  001540  B4D8               	btfsc	status,2,c
  2023  001542  EFA5  F00A         	goto	l5374
  2024  001546  EF8C  F00A         	goto	l5094
  2025  00154A                     l5374:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ; Switch size 1, requested type "simple"
  2029                           ; Number of cases is 5, Range of values is 32 to 48
  2030                           ; switch strategies available:
  2031                           ; Name         Instructions Cycles
  2032                           ; simple_byte           16     9 (average)
  2033                           ;	Chosen strategy is simple_byte
  2034  00154A  5056               	movf	??_vfpfcnvrt^0,w,c
  2035  00154C  0A20               	xorlw	32	; case 32
  2036  00154E  B4D8               	btfsc	status,2,c
  2037  001550  EF86  F00A         	goto	l5086
  2038  001554  0A03               	xorlw	3	; case 35
  2039  001556  B4D8               	btfsc	status,2,c
  2040  001558  EF89  F00A         	goto	l5090
  2041  00155C  0A08               	xorlw	8	; case 43
  2042  00155E  B4D8               	btfsc	status,2,c
  2043  001560  EF83  F00A         	goto	l5082
  2044  001564  0A06               	xorlw	6	; case 45
  2045  001566  B4D8               	btfsc	status,2,c
  2046  001568  EF76  F00A         	goto	l5074
  2047  00156C  0A1D               	xorlw	29	; case 48
  2048  00156E  B4D8               	btfsc	status,2,c
  2049  001570  EF80  F00A         	goto	l5078
  2050  001574  EF8C  F00A         	goto	l5094
  2051  001578                     l5100:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2055  001578  51A6               	movf	vfpfcnvrt@done& (0+255),w,b
  2056  00157A  11A7               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2057  00157C  B4D8               	btfsc	status,2,c
  2058  00157E  EFC3  F00A         	goto	u6021
  2059  001582  EFC5  F00A         	goto	u6020
  2060  001586                     u6021:
  2061  001586  EF92  F00A         	goto	l5098
  2062  00158A                     u6020:
  2063  00158A                     
  2064                           ; BSR set to: 0
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2066  00158A  A05A               	btfss	_flags^0,0,c
  2067  00158C  EFCA  F00A         	goto	u6031
  2068  001590  EFCC  F00A         	goto	u6030
  2069  001594                     u6031:
  2070  001594  EFCD  F00A         	goto	l5104
  2071  001598                     u6030:
  2072  001598                     
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2075  001598  925A               	bcf	_flags^0,1,c
  2076  00159A                     l5104:
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2080  00159A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2081  00159E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2082  0015A2  CFDE FFF6          	movff	postinc2,tblptrl
  2083  0015A6  CFDD FFF7          	movff	postdec2,tblptrh
  2084  0015AA                     	if	0	;tblptru may be non-zero
  2085  0015AA                     	endif
  2086  0015AA                     	if	0	;tblptru may be non-zero
  2087  0015AA                     	endif
  2088  0015AA  0008               	tblrd		*
  2089  0015AC  50F5               	movf	tablat,w,c
  2090  0015AE  0A2E               	xorlw	46
  2091  0015B0  A4D8               	btfss	status,2,c
  2092  0015B2  EFDD  F00A         	goto	u6041
  2093  0015B6  EFDF  F00A         	goto	u6040
  2094  0015BA                     u6041:
  2095  0015BA  EF5D  F00B         	goto	l5124
  2096  0015BE                     u6040:
  2097  0015BE                     
  2098                           ; BSR set to: 0
  2099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2100  0015BE  0E00               	movlw	0
  2101  0015C0  6FF9               	movwf	(_prec+1)& (0+255),b
  2102  0015C2  0E00               	movlw	0
  2103  0015C4  6FF8               	movwf	_prec& (0+255),b
  2104  0015C6                     
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2107  0015C6  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2108  0015CA  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2109  0015CE  2ADE               	incf	postinc2,f,c
  2110  0015D0  0E00               	movlw	0
  2111  0015D2  22DD               	addwfc	postdec2,f,c
  2112  0015D4                     
  2113                           ; BSR set to: 0
  2114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2115  0015D4  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2116  0015D8  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  0015DC  CFDE FFF6          	movff	postinc2,tblptrl
  2118  0015E0  CFDD FFF7          	movff	postdec2,tblptrh
  2119  0015E4                     	if	0	;tblptru may be non-zero
  2120  0015E4                     	endif
  2121  0015E4                     	if	0	;tblptru may be non-zero
  2122  0015E4                     	endif
  2123  0015E4  0008               	tblrd		*
  2124  0015E6  50F5               	movf	tablat,w,c
  2125  0015E8  0A2A               	xorlw	42
  2126  0015EA  A4D8               	btfss	status,2,c
  2127  0015EC  EFFA  F00A         	goto	u6051
  2128  0015F0  EFFC  F00A         	goto	u6050
  2129  0015F4                     u6051:
  2130  0015F4  EF19  F00B         	goto	l5114
  2131  0015F8                     u6050:
  2132  0015F8                     
  2133                           ; BSR set to: 0
  2134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2135  0015F8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2136  0015FC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2137  001600  2ADE               	incf	postinc2,f,c
  2138  001602  0E00               	movlw	0
  2139  001604  22DD               	addwfc	postdec2,f,c
  2140                           
  2141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2142  001606  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2143  00160A  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2144  00160E  CFDF F056          	movff	indf2,??_vfpfcnvrt
  2145  001612  0E02               	movlw	2
  2146  001614  26DE               	addwf	postinc2,f,c
  2147  001616  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  2148  00161A  0E00               	movlw	0
  2149  00161C  22DD               	addwfc	postdec2,f,c
  2150  00161E  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2151  001622  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2152  001626  CFDE F0F8          	movff	postinc2,_prec
  2153  00162A  CFDD F0F9          	movff	postdec2,_prec+1
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2156  00162E  EF5D  F00B         	goto	l5124
  2157  001632                     l5114:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2161  001632  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  001636  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  00163A  CFDE F00B          	movff	postinc2,atoi@s
  2164  00163E  CFDD F00C          	movff	postdec2,atoi@s+1
  2165  001642  ECD9  F016         	call	_atoi	;wreg free
  2166  001646  C00B  F0F8         	movff	?_atoi,_prec
  2167  00164A  C00C  F0F9         	movff	?_atoi+1,_prec+1
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2170  00164E  EF30  F00B         	goto	l5118
  2171  001652                     l5116:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2175  001652  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2176  001656  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2177  00165A  2ADE               	incf	postinc2,f,c
  2178  00165C  0E00               	movlw	0
  2179  00165E  22DD               	addwfc	postdec2,f,c
  2180  001660                     l5118:
  2181  001660  0ED0               	movlw	208
  2182  001662  6E56               	movwf	??_vfpfcnvrt^0,c
  2183  001664  0EFF               	movlw	255
  2184  001666  6E57               	movwf	(??_vfpfcnvrt+1)^0,c
  2185  001668  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2186  00166C  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2187  001670  CFDE FFF6          	movff	postinc2,tblptrl
  2188  001674  CFDD FFF7          	movff	postdec2,tblptrh
  2189  001678                     	if	0	;tblptru may be non-zero
  2190  001678                     	endif
  2191  001678                     	if	0	;tblptru may be non-zero
  2192  001678                     	endif
  2193  001678  0008               	tblrd		*
  2194  00167A  50F5               	movf	tablat,w,c
  2195  00167C  6E58               	movwf	(??_vfpfcnvrt+2)^0,c
  2196  00167E  6A59               	clrf	(??_vfpfcnvrt+3)^0,c
  2197  001680  5056               	movf	??_vfpfcnvrt^0,w,c
  2198  001682  2658               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2199  001684  5057               	movf	(??_vfpfcnvrt+1)^0,w,c
  2200  001686  2259               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2201  001688  5059               	movf	(??_vfpfcnvrt+3)^0,w,c
  2202  00168A  E10A               	bnz	u6060
  2203  00168C  0E0A               	movlw	10
  2204  00168E  5C58               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2205  001690  A0D8               	btfss	status,0,c
  2206  001692  EF4D  F00B         	goto	u6061
  2207  001696  EF50  F00B         	goto	u6060
  2208  00169A                     u6061:
  2209  00169A  0E01               	movlw	1
  2210  00169C  EF51  F00B         	goto	u6070
  2211  0016A0                     u6060:
  2212  0016A0  0E00               	movlw	0
  2213  0016A2                     u6070:
  2214  0016A2  0100               	movlb	0	; () banked
  2215  0016A4  6FA8               	movwf	_vfpfcnvrt$1652& (0+255),b
  2216  0016A6  6BA9               	clrf	(_vfpfcnvrt$1652+1)& (0+255),b
  2217  0016A8                     
  2218                           ; BSR set to: 0
  2219  0016A8  51A8               	movf	_vfpfcnvrt$1652& (0+255),w,b
  2220  0016AA  11A9               	iorwf	(_vfpfcnvrt$1652+1)& (0+255),w,b
  2221  0016AC  A4D8               	btfss	status,2,c
  2222  0016AE  EF5B  F00B         	goto	u6081
  2223  0016B2  EF5D  F00B         	goto	u6080
  2224  0016B6                     u6081:
  2225  0016B6  EF29  F00B         	goto	l5116
  2226  0016BA                     u6080:
  2227  0016BA                     l5124:
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2231  0016BA  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2232  0016BE  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2233  0016C2  CFDE FFF6          	movff	postinc2,tblptrl
  2234  0016C6  CFDD FFF7          	movff	postdec2,tblptrh
  2235  0016CA                     	if	0	;tblptru may be non-zero
  2236  0016CA                     	endif
  2237  0016CA                     	if	0	;tblptru may be non-zero
  2238  0016CA                     	endif
  2239  0016CA  0008               	tblrd		*
  2240  0016CC  50F5               	movf	tablat,w,c
  2241  0016CE  6E0A               	movwf	tolower@c^0,c
  2242  0016D0  6A0B               	clrf	(tolower@c+1)^0,c
  2243  0016D2  EC7B  F020         	call	_tolower	;wreg free
  2244  0016D6  500A               	movf	?_tolower^0,w,c
  2245  0016D8  0100               	movlb	0	; () banked
  2246  0016DA  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  2247  0016DC                     
  2248                           ; BSR set to: 0
  2249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2250  0016DC  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  2251  0016DE  B4D8               	btfsc	status,2,c
  2252  0016E0  EF74  F00B         	goto	u6091
  2253  0016E4  EF76  F00B         	goto	u6090
  2254  0016E8                     u6091:
  2255  0016E8  EFB0  F00B         	goto	l5134
  2256  0016EC                     u6090:
  2257  0016EC                     
  2258                           ; BSR set to: 0
  2259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2260  0016EC  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2261  0016F0  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2262  0016F4  CFDE F056          	movff	postinc2,??_vfpfcnvrt
  2263  0016F8  CFDD F057          	movff	postdec2,??_vfpfcnvrt+1
  2264  0016FC  0E01               	movlw	1
  2265  0016FE  2656               	addwf	??_vfpfcnvrt^0,f,c
  2266  001700  0E00               	movlw	0
  2267  001702  2257               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2268  001704  C056  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2269  001708  C057  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2270  00170C                     	if	0	;tblptru may be non-zero
  2271  00170C                     	endif
  2272  00170C                     	if	0	;tblptru may be non-zero
  2273  00170C                     	endif
  2274  00170C  0008               	tblrd		*
  2275  00170E  50F5               	movf	tablat,w,c
  2276  001710  6E0A               	movwf	tolower@c^0,c
  2277  001712  6A0B               	clrf	(tolower@c+1)^0,c
  2278  001714  EC7B  F020         	call	_tolower	;wreg free
  2279  001718  500A               	movf	?_tolower^0,w,c
  2280  00171A  0100               	movlb	0	; () banked
  2281  00171C  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2282  00171E                     
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2285  00171E  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2286  001720  B4D8               	btfsc	status,2,c
  2287  001722  EF95  F00B         	goto	u6101
  2288  001726  EF97  F00B         	goto	u6100
  2289  00172A                     u6101:
  2290  00172A  EFB0  F00B         	goto	l5134
  2291  00172E                     u6100:
  2292  00172E                     
  2293                           ; BSR set to: 0
  2294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2295  00172E  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2296  001732  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2297  001736  CFDE F056          	movff	postinc2,??_vfpfcnvrt
  2298  00173A  CFDD F057          	movff	postdec2,??_vfpfcnvrt+1
  2299  00173E  0E02               	movlw	2
  2300  001740  2656               	addwf	??_vfpfcnvrt^0,f,c
  2301  001742  0E00               	movlw	0
  2302  001744  2257               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2303  001746  C056  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2304  00174A  C057  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2305  00174E                     	if	0	;tblptru may be non-zero
  2306  00174E                     	endif
  2307  00174E                     	if	0	;tblptru may be non-zero
  2308  00174E                     	endif
  2309  00174E  0008               	tblrd		*
  2310  001750  50F5               	movf	tablat,w,c
  2311  001752  6E0A               	movwf	tolower@c^0,c
  2312  001754  6A0B               	clrf	(tolower@c+1)^0,c
  2313  001756  EC7B  F020         	call	_tolower	;wreg free
  2314  00175A  500A               	movf	?_tolower^0,w,c
  2315  00175C  0100               	movlb	0	; () banked
  2316  00175E  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2317  001760                     l5134:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2321  001760  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2322  001764  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2323  001768  CFDE FFF6          	movff	postinc2,tblptrl
  2324  00176C  CFDD FFF7          	movff	postdec2,tblptrh
  2325  001770                     	if	0	;tblptru may be non-zero
  2326  001770                     	endif
  2327  001770                     	if	0	;tblptru may be non-zero
  2328  001770                     	endif
  2329  001770  0008               	tblrd		*
  2330  001772  50F5               	movf	tablat,w,c
  2331  001774  0A64               	xorlw	100
  2332  001776  B4D8               	btfsc	status,2,c
  2333  001778  EFC0  F00B         	goto	u6111
  2334  00177C  EFC2  F00B         	goto	u6110
  2335  001780                     u6111:
  2336  001780  EFD4  F00B         	goto	l5138
  2337  001784                     u6110:
  2338  001784                     
  2339                           ; BSR set to: 0
  2340  001784  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341  001788  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342  00178C  CFDE FFF6          	movff	postinc2,tblptrl
  2343  001790  CFDD FFF7          	movff	postdec2,tblptrh
  2344  001794                     	if	0	;tblptru may be non-zero
  2345  001794                     	endif
  2346  001794                     	if	0	;tblptru may be non-zero
  2347  001794                     	endif
  2348  001794  0008               	tblrd		*
  2349  001796  50F5               	movf	tablat,w,c
  2350  001798  0A69               	xorlw	105
  2351  00179A  A4D8               	btfss	status,2,c
  2352  00179C  EFD2  F00B         	goto	u6121
  2353  0017A0  EFD4  F00B         	goto	u6120
  2354  0017A4                     u6121:
  2355  0017A4  EF14  F00C         	goto	l5144
  2356  0017A8                     u6120:
  2357  0017A8                     l5138:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2361  0017A8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2362  0017AC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2363  0017B0  2ADE               	incf	postinc2,f,c
  2364  0017B2  0E00               	movlw	0
  2365  0017B4  22DD               	addwfc	postdec2,f,c
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2368  0017B6  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2369  0017BA  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2370  0017BE  CFDF F056          	movff	indf2,??_vfpfcnvrt
  2371  0017C2  0E02               	movlw	2
  2372  0017C4  26DE               	addwf	postinc2,f,c
  2373  0017C6  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  2374  0017CA  0E00               	movlw	0
  2375  0017CC  22DD               	addwfc	postdec2,f,c
  2376  0017CE  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2377  0017D2  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2378  0017D6  CFDE F09E          	movff	postinc2,vfpfcnvrt@ll
  2379  0017DA  CFDD F09F          	movff	postdec2,vfpfcnvrt@ll+1
  2380  0017DE  0E00               	movlw	0
  2381  0017E0  BF9F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2382  0017E2  0EFF               	movlw	-1
  2383  0017E4  6FA0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2384  0017E6  6FA1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2385  0017E8  6FA2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2386  0017EA  6FA3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2387  0017EC  6FA4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2388  0017EE  6FA5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2389  0017F0                     
  2390                           ; BSR set to: 0
  2391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2392  0017F0  C098  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  2393  0017F4  C099  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2394  0017F8  C09E  F021         	movff	vfpfcnvrt@ll,dtoa@d
  2395  0017FC  C09F  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2396  001800  C0A0  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2397  001804  C0A1  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2398  001808  C0A2  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2399  00180C  C0A3  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2400  001810  C0A4  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2401  001814  C0A5  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2402  001818  EC86  F013         	call	_dtoa	;wreg free
  2403  00181C  C01F  F098         	movff	?_dtoa,?_vfpfcnvrt
  2404  001820  C020  F099         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2405  001824  EF43  F00D         	goto	l1130
  2406  001828                     l5144:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2410  001828  0E66               	movlw	102
  2411  00182A  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2412  00182C  A4D8               	btfss	status,2,c
  2413  00182E  EF1B  F00C         	goto	u6131
  2414  001832  EF1D  F00C         	goto	u6130
  2415  001836                     u6131:
  2416  001836  EF5D  F00C         	goto	l5156
  2417  00183A                     u6130:
  2418  00183A                     
  2419                           ; BSR set to: 0
  2420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2421  00183A  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2422  00183E  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2423  001842  CFDE FFF6          	movff	postinc2,tblptrl
  2424  001846  CFDD FFF7          	movff	postdec2,tblptrh
  2425  00184A                     	if	0	;tblptru may be non-zero
  2426  00184A                     	endif
  2427  00184A                     	if	0	;tblptru may be non-zero
  2428  00184A                     	endif
  2429  00184A  0008               	tblrd		*
  2430  00184C  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  2431  001850                     
  2432                           ; BSR set to: 0
  2433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2434  001850  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2435  001854  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2436  001858  2ADE               	incf	postinc2,f,c
  2437  00185A  0E00               	movlw	0
  2438  00185C  22DD               	addwfc	postdec2,f,c
  2439  00185E                     
  2440                           ; BSR set to: 0
  2441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2442  00185E  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2443  001862  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2444  001866  CFDF F056          	movff	indf2,??_vfpfcnvrt
  2445  00186A  0E04               	movlw	4
  2446  00186C  26DE               	addwf	postinc2,f,c
  2447  00186E  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  2448  001872  0E00               	movlw	0
  2449  001874  22DD               	addwfc	postdec2,f,c
  2450  001876  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2451  00187A  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2452  00187E  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f
  2453  001882  CFDE F0B0          	movff	postinc2,vfpfcnvrt@f+1
  2454  001886  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f+2
  2455  00188A  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+3
  2456  00188E                     l5152:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2460  00188E  C098  F04A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2461  001892  C099  F04B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2462  001896  C0AF  F04C         	movff	vfpfcnvrt@f,efgtoa@f
  2463  00189A  C0B0  F04D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2464  00189E  C0B1  F04E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2465  0018A2  C0B2  F04F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2466  0018A6  C0B3  F050         	movff	vfpfcnvrt@c,efgtoa@c
  2467  0018AA  EC1F  F004         	call	_efgtoa	;wreg free
  2468  0018AE  C04A  F098         	movff	?_efgtoa,?_vfpfcnvrt
  2469  0018B2  C04B  F099         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2470  0018B6  EF43  F00D         	goto	l1130
  2471  0018BA                     l5156:
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2475  0018BA  0EAC               	movlw	low vfpfcnvrt@ct
  2476  0018BC  6E04               	movwf	strncmp@_l^0,c
  2477  0018BE  0E00               	movlw	high vfpfcnvrt@ct
  2478  0018C0  6E05               	movwf	(strncmp@_l+1)^0,c
  2479  0018C2  0E39               	movlw	low STR_14
  2480  0018C4  6E06               	movwf	strncmp@_r^0,c
  2481  0018C6  0E08               	movlw	high STR_14
  2482  0018C8  6E07               	movwf	(strncmp@_r+1)^0,c
  2483  0018CA  0E00               	movlw	0
  2484  0018CC  6E09               	movwf	(strncmp@n+1)^0,c
  2485  0018CE  0E02               	movlw	2
  2486  0018D0  6E08               	movwf	strncmp@n^0,c
  2487  0018D2  EC68  F01C         	call	_strncmp	;wreg free
  2488  0018D6  5004               	movf	?_strncmp^0,w,c
  2489  0018D8  1005               	iorwf	(?_strncmp+1)^0,w,c
  2490  0018DA  A4D8               	btfss	status,2,c
  2491  0018DC  EF72  F00C         	goto	u6141
  2492  0018E0  EF74  F00C         	goto	u6140
  2493  0018E4                     u6141:
  2494  0018E4  EFF0  F00C         	goto	l5172
  2495  0018E8                     u6140:
  2496  0018E8                     
  2497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2498  0018E8  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2499  0018EC  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2500  0018F0  CFDE F056          	movff	postinc2,??_vfpfcnvrt
  2501  0018F4  CFDD F057          	movff	postdec2,??_vfpfcnvrt+1
  2502  0018F8  0E01               	movlw	1
  2503  0018FA  2656               	addwf	??_vfpfcnvrt^0,f,c
  2504  0018FC  0E00               	movlw	0
  2505  0018FE  2257               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2506  001900  C056  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2507  001904  C057  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2508  001908                     	if	0	;tblptru may be non-zero
  2509  001908                     	endif
  2510  001908                     	if	0	;tblptru may be non-zero
  2511  001908                     	endif
  2512  001908  0008               	tblrd		*
  2513  00190A  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  2514  00190E  0EBF               	movlw	191
  2515  001910  6E56               	movwf	??_vfpfcnvrt^0,c
  2516  001912  0EFF               	movlw	255
  2517  001914  6E57               	movwf	(??_vfpfcnvrt+1)^0,c
  2518  001916  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2519  00191A  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2520  00191E  CFDE FFF6          	movff	postinc2,tblptrl
  2521  001922  CFDD FFF7          	movff	postdec2,tblptrh
  2522  001926                     	if	0	;tblptru may be non-zero
  2523  001926                     	endif
  2524  001926                     	if	0	;tblptru may be non-zero
  2525  001926                     	endif
  2526  001926  0008               	tblrd		*
  2527  001928  50F5               	movf	tablat,w,c
  2528  00192A  6E58               	movwf	(??_vfpfcnvrt+2)^0,c
  2529  00192C  6A59               	clrf	(??_vfpfcnvrt+3)^0,c
  2530  00192E  5056               	movf	??_vfpfcnvrt^0,w,c
  2531  001930  2658               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2532  001932  5057               	movf	(??_vfpfcnvrt+1)^0,w,c
  2533  001934  2259               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2534  001936  5059               	movf	(??_vfpfcnvrt+3)^0,w,c
  2535  001938  E10A               	bnz	u6150
  2536  00193A  0E1A               	movlw	26
  2537  00193C  5C58               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2538  00193E  A0D8               	btfss	status,0,c
  2539  001940  EFA4  F00C         	goto	u6151
  2540  001944  EFA7  F00C         	goto	u6150
  2541  001948                     u6151:
  2542  001948  0E01               	movlw	1
  2543  00194A  EFA8  F00C         	goto	u6160
  2544  00194E                     u6150:
  2545  00194E  0E00               	movlw	0
  2546  001950                     u6160:
  2547  001950  0100               	movlb	0	; () banked
  2548  001952  6FAA               	movwf	_vfpfcnvrt$1657& (0+255),b
  2549  001954  6BAB               	clrf	(_vfpfcnvrt$1657+1)& (0+255),b
  2550  001956                     
  2551                           ; BSR set to: 0
  2552  001956  51AA               	movf	_vfpfcnvrt$1657& (0+255),w,b
  2553  001958  11AB               	iorwf	(_vfpfcnvrt$1657+1)& (0+255),w,b
  2554  00195A  B4D8               	btfsc	status,2,c
  2555  00195C  EFB2  F00C         	goto	u6171
  2556  001960  EFB4  F00C         	goto	u6170
  2557  001964                     u6171:
  2558  001964  EFCE  F00C         	goto	l5166
  2559  001968                     u6170:
  2560  001968                     
  2561                           ; BSR set to: 0
  2562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2563  001968  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2564  00196C  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2565  001970  CFDF F056          	movff	indf2,??_vfpfcnvrt
  2566  001974  0E04               	movlw	4
  2567  001976  26DE               	addwf	postinc2,f,c
  2568  001978  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  2569  00197C  0E00               	movlw	0
  2570  00197E  22DD               	addwfc	postdec2,f,c
  2571  001980  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2572  001984  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2573  001988  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f
  2574  00198C  CFDE F0B0          	movff	postinc2,vfpfcnvrt@f+1
  2575  001990  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f+2
  2576  001994  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+3
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2579  001998  EFE6  F00C         	goto	l1138
  2580  00199C                     l5166:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2584  00199C  C09C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2585  0019A0  C09D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2586  0019A4  CFDF F056          	movff	indf2,??_vfpfcnvrt
  2587  0019A8  0E04               	movlw	4
  2588  0019AA  26DE               	addwf	postinc2,f,c
  2589  0019AC  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  2590  0019B0  0E00               	movlw	0
  2591  0019B2  22DD               	addwfc	postdec2,f,c
  2592  0019B4  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2593  0019B8  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2594  0019BC  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f
  2595  0019C0  CFDE F0B0          	movff	postinc2,vfpfcnvrt@f+1
  2596  0019C4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f+2
  2597  0019C8  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+3
  2598  0019CC                     l1138:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2602  0019CC  0E02               	movlw	2
  2603  0019CE  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2604  0019D2  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2605  0019D6  26DE               	addwf	postinc2,f,c
  2606  0019D8  0E00               	movlw	0
  2607  0019DA  22DD               	addwfc	postdec2,f,c
  2608  0019DC  EF47  F00C         	goto	l5152
  2609  0019E0                     l5172:
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2612  0019E0  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2613  0019E4  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2614  0019E8  CFDE FFF6          	movff	postinc2,tblptrl
  2615  0019EC  CFDD FFF7          	movff	postdec2,tblptrh
  2616  0019F0                     	if	0	;tblptru may be non-zero
  2617  0019F0                     	endif
  2618  0019F0                     	if	0	;tblptru may be non-zero
  2619  0019F0                     	endif
  2620  0019F0  0008               	tblrd		*
  2621  0019F2  50F5               	movf	tablat,w,c
  2622  0019F4  0A25               	xorlw	37
  2623  0019F6  A4D8               	btfss	status,2,c
  2624  0019F8  EF00  F00D         	goto	u6181
  2625  0019FC  EF02  F00D         	goto	u6180
  2626  001A00                     u6181:
  2627  001A00  EF1A  F00D         	goto	l5182
  2628  001A04                     u6180:
  2629  001A04                     
  2630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2631  001A04  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2632  001A08  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2633  001A0C  2ADE               	incf	postinc2,f,c
  2634  001A0E  0E00               	movlw	0
  2635  001A10  22DD               	addwfc	postdec2,f,c
  2636  001A12                     
  2637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2638  001A12  0E00               	movlw	0
  2639  001A14  6E05               	movwf	(fputc@c+1)^0,c
  2640  001A16  0E25               	movlw	37
  2641  001A18  6E04               	movwf	fputc@c^0,c
  2642  001A1A  C098  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2643  001A1E  C099  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2644  001A22  EC39  F01D         	call	_fputc	;wreg free
  2645  001A26                     l5178:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2648  001A26  0E00               	movlw	0
  2649  001A28  0100               	movlb	0	; () banked
  2650  001A2A  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2651  001A2C  0E01               	movlw	1
  2652  001A2E  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  2653  001A30  EF43  F00D         	goto	l1130
  2654  001A34                     l5182:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2657  001A34  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2658  001A38  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2659  001A3C  2ADE               	incf	postinc2,f,c
  2660  001A3E  0E00               	movlw	0
  2661  001A40  22DD               	addwfc	postdec2,f,c
  2662  001A42                     
  2663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2664  001A42  0E00               	movlw	0
  2665  001A44  0100               	movlb	0	; () banked
  2666  001A46  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2667  001A48  0E00               	movlw	0
  2668  001A4A  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  2669  001A4C  EF43  F00D         	goto	l1130
  2670  001A50                     l5188:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2673  001A50  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2674  001A54  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2675  001A58  CFDE FFF6          	movff	postinc2,tblptrl
  2676  001A5C  CFDD FFF7          	movff	postdec2,tblptrh
  2677  001A60                     	if	0	;tblptru may be non-zero
  2678  001A60                     	endif
  2679  001A60                     	if	0	;tblptru may be non-zero
  2680  001A60                     	endif
  2681  001A60  0008               	tblrd		*
  2682  001A62  50F5               	movf	tablat,w,c
  2683  001A64  6E04               	movwf	fputc@c^0,c
  2684  001A66  6A05               	clrf	(fputc@c+1)^0,c
  2685  001A68  C098  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2686  001A6C  C099  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2687  001A70  EC39  F01D         	call	_fputc	;wreg free
  2688  001A74                     
  2689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2690  001A74  C09A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2691  001A78  C09B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2692  001A7C  2ADE               	incf	postinc2,f,c
  2693  001A7E  0E00               	movlw	0
  2694  001A80  22DD               	addwfc	postdec2,f,c
  2695  001A82  EF13  F00D         	goto	l5178
  2696  001A86                     l1130:
  2697  001A86  0012               	return		;funcret
  2698  001A88                     __end_of_vfpfcnvrt:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _strncmp *****************
  2702 ;; Defined at:
  2703 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  2706 ;;		 -> vfpfcnvrt@ct(3), 
  2707 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  2708 ;;		 -> STR_16(3), 
  2709 ;;  n               2    7[COMRAM] unsigned int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  r               2   12[COMRAM] PTR const unsigned char 
  2712 ;;		 -> STR_16(3), 
  2713 ;;  l               2   10[COMRAM] PTR const unsigned char 
  2714 ;;		 -> vfpfcnvrt@ct(3), 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2    3[COMRAM] int 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2724 ;;      Params:         6       0       0       0       0       0       0       0       0
  2725 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2726 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2727 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2728 ;;Total ram usage:       11 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    2
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_vfpfcnvrt
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text9
  2739  0038D0                     __ptext9:
  2740                           	callstack 0
  2741  0038D0                     _strncmp:
  2742                           	callstack 23
  2743  0038D0  C004  F00B         	movff	strncmp@_l,strncmp@l
  2744  0038D4  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  2745  0038D8  C006  F00D         	movff	strncmp@_r,strncmp@r
  2746  0038DC  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  2747  0038E0  0608               	decf	strncmp@n^0,f,c
  2748  0038E2  A0D8               	btfss	status,0,c
  2749  0038E4  0609               	decf	(strncmp@n+1)^0,f,c
  2750  0038E6  2808               	incf	strncmp@n^0,w,c
  2751  0038E8  E106               	bnz	u5421
  2752  0038EA  2809               	incf	(strncmp@n+1)^0,w,c
  2753  0038EC  A4D8               	btfss	status,2,c
  2754  0038EE  EF7B  F01C         	goto	u5421
  2755  0038F2  EF7D  F01C         	goto	u5420
  2756  0038F6                     u5421:
  2757  0038F6  EF8A  F01C         	goto	l4490
  2758  0038FA                     u5420:
  2759  0038FA  0E00               	movlw	0
  2760  0038FC  6E05               	movwf	(?_strncmp+1)^0,c
  2761  0038FE  0E00               	movlw	0
  2762  003900  6E04               	movwf	?_strncmp^0,c
  2763  003902  EFD2  F01C         	goto	l1266
  2764  003906                     l4488:
  2765  003906  4A0B               	infsnz	strncmp@l^0,f,c
  2766  003908  2A0C               	incf	(strncmp@l+1)^0,f,c
  2767  00390A  4A0D               	infsnz	strncmp@r^0,f,c
  2768  00390C  2A0E               	incf	(strncmp@r+1)^0,f,c
  2769  00390E  0608               	decf	strncmp@n^0,f,c
  2770  003910  A0D8               	btfss	status,0,c
  2771  003912  0609               	decf	(strncmp@n+1)^0,f,c
  2772  003914                     l4490:
  2773  003914  C00B  FFD9         	movff	strncmp@l,fsr2l
  2774  003918  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2775  00391C  50DF               	movf	indf2,w,c
  2776  00391E  B4D8               	btfsc	status,2,c
  2777  003920  EF94  F01C         	goto	u5431
  2778  003924  EF96  F01C         	goto	u5430
  2779  003928                     u5431:
  2780  003928  EFC1  F01C         	goto	l4498
  2781  00392C                     u5430:
  2782  00392C  C00D  FFF6         	movff	strncmp@r,tblptrl
  2783  003930  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2784  003934                     	if	0	;tblptru may be non-zero
  2785  003934                     	endif
  2786  003934                     	if	0	;tblptru may be non-zero
  2787  003934                     	endif
  2788  003934  0008               	tblrd		*
  2789  003936  50F5               	movf	tablat,w,c
  2790  003938  0900               	iorlw	0
  2791  00393A  B4D8               	btfsc	status,2,c
  2792  00393C  EFA2  F01C         	goto	u5441
  2793  003940  EFA4  F01C         	goto	u5440
  2794  003944                     u5441:
  2795  003944  EFC1  F01C         	goto	l4498
  2796  003948                     u5440:
  2797  003948  5008               	movf	strncmp@n^0,w,c
  2798  00394A  1009               	iorwf	(strncmp@n+1)^0,w,c
  2799  00394C  B4D8               	btfsc	status,2,c
  2800  00394E  EFAB  F01C         	goto	u5451
  2801  003952  EFAD  F01C         	goto	u5450
  2802  003956                     u5451:
  2803  003956  EFC1  F01C         	goto	l4498
  2804  00395A                     u5450:
  2805  00395A  C00B  FFD9         	movff	strncmp@l,fsr2l
  2806  00395E  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2807  003962  50DF               	movf	indf2,w,c
  2808  003964  6E0A               	movwf	??_strncmp^0,c
  2809  003966  C00D  FFF6         	movff	strncmp@r,tblptrl
  2810  00396A  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2811  00396E                     	if	0	;tblptru may be non-zero
  2812  00396E                     	endif
  2813  00396E                     	if	0	;tblptru may be non-zero
  2814  00396E                     	endif
  2815  00396E  0008               	tblrd		*
  2816  003970  50F5               	movf	tablat,w,c
  2817  003972  180A               	xorwf	??_strncmp^0,w,c
  2818  003974  B4D8               	btfsc	status,2,c
  2819  003976  EFBF  F01C         	goto	u5461
  2820  00397A  EFC1  F01C         	goto	u5460
  2821  00397E                     u5461:
  2822  00397E  EF83  F01C         	goto	l4488
  2823  003982                     u5460:
  2824  003982                     l4498:
  2825  003982  C00B  FFD9         	movff	strncmp@l,fsr2l
  2826  003986  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2827  00398A  50DF               	movf	indf2,w,c
  2828  00398C  6E0A               	movwf	??_strncmp^0,c
  2829  00398E  C00D  FFF6         	movff	strncmp@r,tblptrl
  2830  003992  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2831  003996                     	if	0	;tblptru may be non-zero
  2832  003996                     	endif
  2833  003996                     	if	0	;tblptru may be non-zero
  2834  003996                     	endif
  2835  003996  0008               	tblrd		*
  2836  003998  50F5               	movf	tablat,w,c
  2837  00399A  5C0A               	subwf	??_strncmp^0,w,c
  2838  00399C  6E04               	movwf	?_strncmp^0,c
  2839  00399E  6A05               	clrf	(?_strncmp+1)^0,c
  2840  0039A0  A0D8               	btfss	status,0,c
  2841  0039A2  0605               	decf	(?_strncmp+1)^0,f,c
  2842  0039A4                     l1266:
  2843  0039A4  0012               	return		;funcret
  2844  0039A6                     __end_of_strncmp:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _efgtoa *****************
  2848 ;; Defined at:
  2849 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  2852 ;;		 -> sprintf@f(6), 
  2853 ;;  f               4   75[COMRAM] PTR struct _IO_FILE
  2854 ;;  c               1   79[COMRAM] unsigned char 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  u               4   52[BANK0 ] unsigned char 
  2857 ;;  g               4   44[BANK0 ] unsigned char 
  2858 ;;  l               4   38[BANK0 ] unsigned char 
  2859 ;;  h               4   34[BANK0 ] unsigned char 
  2860 ;;  ou              4   20[BANK0 ] unsigned char 
  2861 ;;  n               2   50[BANK0 ] int 
  2862 ;;  e               2   48[BANK0 ] int 
  2863 ;;  i               2   42[BANK0 ] int 
  2864 ;;  w               2   30[BANK0 ] int 
  2865 ;;  p               2   28[BANK0 ] int 
  2866 ;;  sign            2   26[BANK0 ] int 
  2867 ;;  d               2   24[BANK0 ] int 
  2868 ;;  m               2   18[BANK0 ] int 
  2869 ;;  ne              2   16[BANK0 ] int 
  2870 ;;  pp              2   14[BANK0 ] int 
  2871 ;;  t               2   12[BANK0 ] int 
  2872 ;;  mode            1   33[BANK0 ] unsigned char 
  2873 ;;  nmode           1   32[BANK0 ] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2   73[COMRAM] int 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2883 ;;      Params:         7       0       0       0       0       0       0       0       0
  2884 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2885 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2886 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2887 ;;Total ram usage:       68 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    6
  2890 ;; This function calls:
  2891 ;;		___awdiv
  2892 ;;		___awmod
  2893 ;;		___fladd
  2894 ;;		___fldiv
  2895 ;;		___fleq
  2896 ;;		___flge
  2897 ;;		___flmul
  2898 ;;		___flneg
  2899 ;;		___flsub
  2900 ;;		___fltol
  2901 ;;		___fpclassifyf
  2902 ;;		_floorf
  2903 ;;		_isupper
  2904 ;;		_pad
  2905 ;;		_strcpy
  2906 ;;		_tolower
  2907 ;; This function is called by:
  2908 ;;		_vfpfcnvrt
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text10
  2913  00083E                     __ptext10:
  2914                           	callstack 0
  2915  00083E                     _efgtoa:
  2916                           	callstack 19
  2917  00083E                     
  2918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2919  00083E  0E00               	movlw	0
  2920  000840  0100               	movlb	0	; () banked
  2921  000842  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2922  000844  0E00               	movlw	0
  2923  000846  6F7A               	movwf	efgtoa@sign& (0+255),b
  2924  000848                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2927  000848  C04C  F08C         	movff	efgtoa@f,efgtoa@g
  2928  00084C  C04D  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2929  000850  C04E  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2930  000854  C04F  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2931  000858                     
  2932                           ; BSR set to: 0
  2933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2934  000858  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2935  00085A  EF33  F004         	goto	u4810
  2936  00085E  EF31  F004         	goto	u4811
  2937  000862                     u4811:
  2938  000862  EF49  F004         	goto	l4142
  2939  000866                     u4810:
  2940  000866                     
  2941                           ; BSR set to: 0
  2942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2943  000866  0E00               	movlw	0
  2944  000868  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2945  00086A  0E01               	movlw	1
  2946  00086C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2947  00086E                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2950  00086E  C08C  F004         	movff	efgtoa@g,___flneg@f1
  2951  000872  C08D  F005         	movff	efgtoa@g+1,___flneg@f1+1
  2952  000876  C08E  F006         	movff	efgtoa@g+2,___flneg@f1+2
  2953  00087A  C08F  F007         	movff	efgtoa@g+3,___flneg@f1+3
  2954  00087E  EC37  F022         	call	___flneg	;wreg free
  2955  000882  C004  F08C         	movff	?___flneg,efgtoa@g
  2956  000886  C005  F08D         	movff	?___flneg+1,efgtoa@g+1
  2957  00088A  C006  F08E         	movff	?___flneg+2,efgtoa@g+2
  2958  00088E  C007  F08F         	movff	?___flneg+3,efgtoa@g+3
  2959  000892                     l4142:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2962  000892  0E00               	movlw	0
  2963  000894  0100               	movlb	0	; () banked
  2964  000896  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2965  000898  0E00               	movlw	0
  2966  00089A  6F92               	movwf	efgtoa@n& (0+255),b
  2967  00089C                     
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2970  00089C  C0F6  F07E         	movff	_width,efgtoa@w
  2971  0008A0  C0F7  F07F         	movff	_width+1,efgtoa@w+1
  2972  0008A4                     
  2973                           ; BSR set to: 0
  2974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2975  0008A4  517A               	movf	efgtoa@sign& (0+255),w,b
  2976  0008A6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2977  0008A8  A4D8               	btfss	status,2,c
  2978  0008AA  EF59  F004         	goto	u4821
  2979  0008AE  EF5B  F004         	goto	u4820
  2980  0008B2                     u4821:
  2981  0008B2  EF62  F004         	goto	l4150
  2982  0008B6                     u4820:
  2983  0008B6                     
  2984                           ; BSR set to: 0
  2985  0008B6  A45A               	btfss	_flags^0,2,c
  2986  0008B8  EF60  F004         	goto	u4831
  2987  0008BC  EF62  F004         	goto	u4830
  2988  0008C0                     u4831:
  2989  0008C0  EF7C  F004         	goto	l4162
  2990  0008C4                     u4830:
  2991  0008C4                     l4150:
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2995  0008C4  517A               	movf	efgtoa@sign& (0+255),w,b
  2996  0008C6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2997  0008C8  A4D8               	btfss	status,2,c
  2998  0008CA  EF69  F004         	goto	u4841
  2999  0008CE  EF6B  F004         	goto	u4840
  3000  0008D2                     u4841:
  3001  0008D2  EF71  F004         	goto	l4154
  3002  0008D6                     u4840:
  3003  0008D6                     
  3004                           ; BSR set to: 0
  3005  0008D6  0E00               	movlw	0
  3006  0008D8  6F61               	movwf	(_efgtoa$1627+1)& (0+255),b
  3007  0008DA  0E2B               	movlw	43
  3008  0008DC  6F60               	movwf	_efgtoa$1627& (0+255),b
  3009  0008DE  EF75  F004         	goto	l4156
  3010  0008E2                     l4154:
  3011                           
  3012                           ; BSR set to: 0
  3013  0008E2  0E00               	movlw	0
  3014  0008E4  6F61               	movwf	(_efgtoa$1627+1)& (0+255),b
  3015  0008E6  0E2D               	movlw	45
  3016  0008E8  6F60               	movwf	_efgtoa$1627& (0+255),b
  3017  0008EA                     l4156:
  3018                           
  3019                           ; BSR set to: 0
  3020  0008EA  C060  F109         	movff	_efgtoa$1627,_dbuf
  3021  0008EE                     
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3024  0008EE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3025  0008F0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3026  0008F2                     
  3027                           ; BSR set to: 0
  3028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 352:         --w;
  3029  0008F2  077E               	decf	efgtoa@w& (0+255),f,b
  3030  0008F4  A0D8               	btfss	status,0,c
  3031  0008F6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3032  0008F8                     l4162:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3036  0008F8  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  3037  0008FC  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3038  000900  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3039  000904  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3040  000908  ECE9  F01B         	call	___fpclassifyf	;wreg free
  3041  00090C  0404               	decf	?___fpclassifyf^0,w,c
  3042  00090E  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  3043  000910  A4D8               	btfss	status,2,c
  3044  000912  EF8D  F004         	goto	u4851
  3045  000916  EF8F  F004         	goto	u4850
  3046  00091A                     u4851:
  3047  00091A  EFE6  F004         	goto	l4180
  3048  00091E                     u4850:
  3049  00091E  0EBF               	movlw	191
  3050  000920  6E51               	movwf	??_efgtoa^0,c
  3051  000922  0EFF               	movlw	255
  3052  000924  6E52               	movwf	(??_efgtoa+1)^0,c
  3053  000926  5050               	movf	efgtoa@c^0,w,c
  3054  000928  6E53               	movwf	(??_efgtoa+2)^0,c
  3055  00092A  6A54               	clrf	(??_efgtoa+3)^0,c
  3056  00092C  5051               	movf	??_efgtoa^0,w,c
  3057  00092E  2653               	addwf	(??_efgtoa+2)^0,f,c
  3058  000930  5052               	movf	(??_efgtoa+1)^0,w,c
  3059  000932  2254               	addwfc	(??_efgtoa+3)^0,f,c
  3060  000934  5054               	movf	(??_efgtoa+3)^0,w,c
  3061  000936  E10A               	bnz	u4860
  3062  000938  0E1A               	movlw	26
  3063  00093A  5C53               	subwf	(??_efgtoa+2)^0,w,c
  3064  00093C  A0D8               	btfss	status,0,c
  3065  00093E  EFA3  F004         	goto	u4861
  3066  000942  EFA6  F004         	goto	u4860
  3067  000946                     u4861:
  3068  000946  0E01               	movlw	1
  3069  000948  EFA7  F004         	goto	u4870
  3070  00094C                     u4860:
  3071  00094C  0E00               	movlw	0
  3072  00094E                     u4870:
  3073  00094E  0100               	movlb	0	; () banked
  3074  000950  6F62               	movwf	_efgtoa$1628& (0+255),b
  3075  000952  6B63               	clrf	(_efgtoa$1628+1)& (0+255),b
  3076  000954                     
  3077                           ; BSR set to: 0
  3078  000954  5162               	movf	_efgtoa$1628& (0+255),w,b
  3079  000956  1163               	iorwf	(_efgtoa$1628+1)& (0+255),w,b
  3080  000958  B4D8               	btfsc	status,2,c
  3081  00095A  EFB1  F004         	goto	u4881
  3082  00095E  EFB3  F004         	goto	u4880
  3083  000962                     u4881:
  3084  000962  EFC1  F004         	goto	l4172
  3085  000966                     u4880:
  3086  000966                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3089  000966  0E09               	movlw	low _dbuf
  3090  000968  2592               	addwf	efgtoa@n& (0+255),w,b
  3091  00096A  6E04               	movwf	strcpy@dest^0,c
  3092  00096C  0E01               	movlw	high _dbuf
  3093  00096E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3094  000970  6E05               	movwf	(strcpy@dest+1)^0,c
  3095  000972  0E29               	movlw	low STR_6
  3096  000974  6E06               	movwf	strcpy@src^0,c
  3097  000976  0E08               	movlw	high STR_6
  3098  000978  6E07               	movwf	(strcpy@src+1)^0,c
  3099  00097A  ECAB  F020         	call	_strcpy	;wreg free
  3100                           
  3101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3102  00097E  EFCD  F004         	goto	l4174
  3103  000982                     l4172:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3107  000982  0E09               	movlw	low _dbuf
  3108  000984  2592               	addwf	efgtoa@n& (0+255),w,b
  3109  000986  6E04               	movwf	strcpy@dest^0,c
  3110  000988  0E01               	movlw	high _dbuf
  3111  00098A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3112  00098C  6E05               	movwf	(strcpy@dest+1)^0,c
  3113  00098E  0E31               	movlw	low STR_7
  3114  000990  6E06               	movwf	strcpy@src^0,c
  3115  000992  0E08               	movlw	high STR_7
  3116  000994  6E07               	movwf	(strcpy@src+1)^0,c
  3117  000996  ECAB  F020         	call	_strcpy	;wreg free
  3118  00099A                     l4174:
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3121  00099A  0100               	movlb	0	; () banked
  3122  00099C  0EFD               	movlw	253
  3123  00099E  277E               	addwf	efgtoa@w& (0+255),f,b
  3124  0009A0  0EFF               	movlw	255
  3125  0009A2  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3126  0009A4                     l4176:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3129  0009A4  C04A  F014         	movff	efgtoa@fp,pad@fp
  3130  0009A8  C04B  F015         	movff	efgtoa@fp+1,pad@fp+1
  3131  0009AC  0E09               	movlw	low _dbuf
  3132  0009AE  6E16               	movwf	pad@buf^0,c
  3133  0009B0  0E01               	movlw	high _dbuf
  3134  0009B2  6E17               	movwf	(pad@buf+1)^0,c
  3135  0009B4  C07E  F018         	movff	efgtoa@w,pad@p
  3136  0009B8  C07F  F019         	movff	efgtoa@w+1,pad@p+1
  3137  0009BC  EC63  F01E         	call	_pad	;wreg free
  3138  0009C0  C014  F04A         	movff	?_pad,?_efgtoa
  3139  0009C4  C015  F04B         	movff	?_pad+1,?_efgtoa+1
  3140  0009C8  EF4B  F00A         	goto	l1024
  3141  0009CC                     l4180:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3144  0009CC  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  3145  0009D0  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3146  0009D4  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3147  0009D8  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3148  0009DC  ECE9  F01B         	call	___fpclassifyf	;wreg free
  3149  0009E0  5004               	movf	?___fpclassifyf^0,w,c
  3150  0009E2  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  3151  0009E4  A4D8               	btfss	status,2,c
  3152  0009E6  EFF7  F004         	goto	u4891
  3153  0009EA  EFF9  F004         	goto	u4890
  3154  0009EE                     u4891:
  3155  0009EE  EF39  F005         	goto	l4198
  3156  0009F2                     u4890:
  3157  0009F2  0EBF               	movlw	191
  3158  0009F4  6E51               	movwf	??_efgtoa^0,c
  3159  0009F6  0EFF               	movlw	255
  3160  0009F8  6E52               	movwf	(??_efgtoa+1)^0,c
  3161  0009FA  5050               	movf	efgtoa@c^0,w,c
  3162  0009FC  6E53               	movwf	(??_efgtoa+2)^0,c
  3163  0009FE  6A54               	clrf	(??_efgtoa+3)^0,c
  3164  000A00  5051               	movf	??_efgtoa^0,w,c
  3165  000A02  2653               	addwf	(??_efgtoa+2)^0,f,c
  3166  000A04  5052               	movf	(??_efgtoa+1)^0,w,c
  3167  000A06  2254               	addwfc	(??_efgtoa+3)^0,f,c
  3168  000A08  5054               	movf	(??_efgtoa+3)^0,w,c
  3169  000A0A  E10A               	bnz	u4900
  3170  000A0C  0E1A               	movlw	26
  3171  000A0E  5C53               	subwf	(??_efgtoa+2)^0,w,c
  3172  000A10  A0D8               	btfss	status,0,c
  3173  000A12  EF0D  F005         	goto	u4901
  3174  000A16  EF10  F005         	goto	u4900
  3175  000A1A                     u4901:
  3176  000A1A  0E01               	movlw	1
  3177  000A1C  EF11  F005         	goto	u4910
  3178  000A20                     u4900:
  3179  000A20  0E00               	movlw	0
  3180  000A22                     u4910:
  3181  000A22  0100               	movlb	0	; () banked
  3182  000A24  6F64               	movwf	_efgtoa$1632& (0+255),b
  3183  000A26  6B65               	clrf	(_efgtoa$1632+1)& (0+255),b
  3184  000A28                     
  3185                           ; BSR set to: 0
  3186  000A28  5164               	movf	_efgtoa$1632& (0+255),w,b
  3187  000A2A  1165               	iorwf	(_efgtoa$1632+1)& (0+255),w,b
  3188  000A2C  B4D8               	btfsc	status,2,c
  3189  000A2E  EF1B  F005         	goto	u4921
  3190  000A32  EF1D  F005         	goto	u4920
  3191  000A36                     u4921:
  3192  000A36  EF2B  F005         	goto	l4190
  3193  000A3A                     u4920:
  3194  000A3A                     
  3195                           ; BSR set to: 0
  3196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3197  000A3A  0E09               	movlw	low _dbuf
  3198  000A3C  2592               	addwf	efgtoa@n& (0+255),w,b
  3199  000A3E  6E04               	movwf	strcpy@dest^0,c
  3200  000A40  0E01               	movlw	high _dbuf
  3201  000A42  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3202  000A44  6E05               	movwf	(strcpy@dest+1)^0,c
  3203  000A46  0E2D               	movlw	low STR_10
  3204  000A48  6E06               	movwf	strcpy@src^0,c
  3205  000A4A  0E08               	movlw	high STR_10
  3206  000A4C  6E07               	movwf	(strcpy@src+1)^0,c
  3207  000A4E  ECAB  F020         	call	_strcpy	;wreg free
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3210  000A52  EFCD  F004         	goto	l4174
  3211  000A56                     l4190:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3215  000A56  0E09               	movlw	low _dbuf
  3216  000A58  2592               	addwf	efgtoa@n& (0+255),w,b
  3217  000A5A  6E04               	movwf	strcpy@dest^0,c
  3218  000A5C  0E01               	movlw	high _dbuf
  3219  000A5E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3220  000A60  6E05               	movwf	(strcpy@dest+1)^0,c
  3221  000A62  0E35               	movlw	low STR_11
  3222  000A64  6E06               	movwf	strcpy@src^0,c
  3223  000A66  0E08               	movlw	high STR_11
  3224  000A68  6E07               	movwf	(strcpy@src+1)^0,c
  3225  000A6A  ECAB  F020         	call	_strcpy	;wreg free
  3226  000A6E  EFCD  F004         	goto	l4174
  3227  000A72                     l4198:
  3228                           
  3229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3230  000A72  0E00               	movlw	0
  3231  000A74  0100               	movlb	0	; () banked
  3232  000A76  6F94               	movwf	efgtoa@u& (0+255),b
  3233  000A78  0E00               	movlw	0
  3234  000A7A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3235  000A7C  0E80               	movlw	128
  3236  000A7E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3237  000A80  0E3F               	movlw	63
  3238  000A82  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3241  000A84  0E00               	movlw	0
  3242  000A86  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3243  000A88  0E00               	movlw	0
  3244  000A8A  6F90               	movwf	efgtoa@e& (0+255),b
  3245  000A8C                     
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3248  000A8C  C08C  F004         	movff	efgtoa@g,___fleq@ff1
  3249  000A90  C08D  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  3250  000A94  C08E  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  3251  000A98  C08F  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  3252  000A9C  0E00               	movlw	0
  3253  000A9E  6E08               	movwf	___fleq@ff2^0,c
  3254  000AA0  0E00               	movlw	0
  3255  000AA2  6E09               	movwf	(___fleq@ff2+1)^0,c
  3256  000AA4  0E00               	movlw	0
  3257  000AA6  6E0A               	movwf	(___fleq@ff2+2)^0,c
  3258  000AA8  0E00               	movlw	0
  3259  000AAA  6E0B               	movwf	(___fleq@ff2+3)^0,c
  3260  000AAC  EC7C  F01F         	call	___fleq	;wreg free
  3261  000AB0  B0D8               	btfsc	status,0,c
  3262  000AB2  EF5D  F005         	goto	u4931
  3263  000AB6  EF5F  F005         	goto	u4930
  3264  000ABA                     u4931:
  3265  000ABA  EFE2  F005         	goto	l4216
  3266  000ABE                     u4930:
  3267  000ABE  EF7E  F005         	goto	l4208
  3268  000AC2                     l4204:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3271  000AC2  C094  F004         	movff	efgtoa@u,___flmul@b
  3272  000AC6  C095  F005         	movff	efgtoa@u+1,___flmul@b+1
  3273  000ACA  C096  F006         	movff	efgtoa@u+2,___flmul@b+2
  3274  000ACE  C097  F007         	movff	efgtoa@u+3,___flmul@b+3
  3275  000AD2  0E00               	movlw	0
  3276  000AD4  6E08               	movwf	___flmul@a^0,c
  3277  000AD6  0E00               	movlw	0
  3278  000AD8  6E09               	movwf	(___flmul@a+1)^0,c
  3279  000ADA  0E20               	movlw	32
  3280  000ADC  6E0A               	movwf	(___flmul@a+2)^0,c
  3281  000ADE  0E41               	movlw	65
  3282  000AE0  6E0B               	movwf	(___flmul@a+3)^0,c
  3283  000AE2  ECA4  F00F         	call	___flmul	;wreg free
  3284  000AE6  C004  F094         	movff	?___flmul,efgtoa@u
  3285  000AEA  C005  F095         	movff	?___flmul+1,efgtoa@u+1
  3286  000AEE  C006  F096         	movff	?___flmul+2,efgtoa@u+2
  3287  000AF2  C007  F097         	movff	?___flmul+3,efgtoa@u+3
  3288  000AF6                     
  3289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3290  000AF6  0100               	movlb	0	; () banked
  3291  000AF8  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3292  000AFA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3293  000AFC                     l4208:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3296  000AFC  C08C  F01D         	movff	efgtoa@g,___flge@ff1
  3297  000B00  C08D  F01E         	movff	efgtoa@g+1,___flge@ff1+1
  3298  000B04  C08E  F01F         	movff	efgtoa@g+2,___flge@ff1+2
  3299  000B08  C08F  F020         	movff	efgtoa@g+3,___flge@ff1+3
  3300  000B0C  0E00               	movlw	0
  3301  000B0E  6E08               	movwf	___flmul@a^0,c
  3302  000B10  0E00               	movlw	0
  3303  000B12  6E09               	movwf	(___flmul@a+1)^0,c
  3304  000B14  0E20               	movlw	32
  3305  000B16  6E0A               	movwf	(___flmul@a+2)^0,c
  3306  000B18  0E41               	movlw	65
  3307  000B1A  6E0B               	movwf	(___flmul@a+3)^0,c
  3308  000B1C  C094  F004         	movff	efgtoa@u,___flmul@b
  3309  000B20  C095  F005         	movff	efgtoa@u+1,___flmul@b+1
  3310  000B24  C096  F006         	movff	efgtoa@u+2,___flmul@b+2
  3311  000B28  C097  F007         	movff	efgtoa@u+3,___flmul@b+3
  3312  000B2C  ECA4  F00F         	call	___flmul	;wreg free
  3313  000B30  C004  F021         	movff	?___flmul,___flge@ff2
  3314  000B34  C005  F022         	movff	?___flmul+1,___flge@ff2+1
  3315  000B38  C006  F023         	movff	?___flmul+2,___flge@ff2+2
  3316  000B3C  C007  F024         	movff	?___flmul+3,___flge@ff2+3
  3317  000B40  EC67  F01B         	call	___flge	;wreg free
  3318  000B44  B0D8               	btfsc	status,0,c
  3319  000B46  EFA7  F005         	goto	u4941
  3320  000B4A  EFA9  F005         	goto	u4940
  3321  000B4E                     u4941:
  3322  000B4E  EF61  F005         	goto	l4204
  3323  000B52                     u4940:
  3324  000B52  EFC9  F005         	goto	l4214
  3325  000B56                     l4210:
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3328  000B56  C094  F01D         	movff	efgtoa@u,___fldiv@b
  3329  000B5A  C095  F01E         	movff	efgtoa@u+1,___fldiv@b+1
  3330  000B5E  C096  F01F         	movff	efgtoa@u+2,___fldiv@b+2
  3331  000B62  C097  F020         	movff	efgtoa@u+3,___fldiv@b+3
  3332  000B66  0E00               	movlw	0
  3333  000B68  6E21               	movwf	___fldiv@a^0,c
  3334  000B6A  0E00               	movlw	0
  3335  000B6C  6E22               	movwf	(___fldiv@a+1)^0,c
  3336  000B6E  0E20               	movlw	32
  3337  000B70  6E23               	movwf	(___fldiv@a+2)^0,c
  3338  000B72  0E41               	movlw	65
  3339  000B74  6E24               	movwf	(___fldiv@a+3)^0,c
  3340  000B76  ECB9  F011         	call	___fldiv	;wreg free
  3341  000B7A  C01D  F094         	movff	?___fldiv,efgtoa@u
  3342  000B7E  C01E  F095         	movff	?___fldiv+1,efgtoa@u+1
  3343  000B82  C01F  F096         	movff	?___fldiv+2,efgtoa@u+2
  3344  000B86  C020  F097         	movff	?___fldiv+3,efgtoa@u+3
  3345  000B8A                     
  3346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3347  000B8A  0100               	movlb	0	; () banked
  3348  000B8C  0790               	decf	efgtoa@e& (0+255),f,b
  3349  000B8E  A0D8               	btfss	status,0,c
  3350  000B90  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3351  000B92                     l4214:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3354  000B92  C08C  F01D         	movff	efgtoa@g,___flge@ff1
  3355  000B96  C08D  F01E         	movff	efgtoa@g+1,___flge@ff1+1
  3356  000B9A  C08E  F01F         	movff	efgtoa@g+2,___flge@ff1+2
  3357  000B9E  C08F  F020         	movff	efgtoa@g+3,___flge@ff1+3
  3358  000BA2  C094  F021         	movff	efgtoa@u,___flge@ff2
  3359  000BA6  C095  F022         	movff	efgtoa@u+1,___flge@ff2+1
  3360  000BAA  C096  F023         	movff	efgtoa@u+2,___flge@ff2+2
  3361  000BAE  C097  F024         	movff	efgtoa@u+3,___flge@ff2+3
  3362  000BB2  EC67  F01B         	call	___flge	;wreg free
  3363  000BB6  A0D8               	btfss	status,0,c
  3364  000BB8  EFE0  F005         	goto	u4951
  3365  000BBC  EFE2  F005         	goto	u4950
  3366  000BC0                     u4951:
  3367  000BC0  EFAB  F005         	goto	l4210
  3368  000BC4                     u4950:
  3369  000BC4                     l4216:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3372  000BC4  C050  F00A         	movff	efgtoa@c,tolower@c
  3373  000BC8  6A0B               	clrf	(tolower@c+1)^0,c
  3374  000BCA  EC7B  F020         	call	_tolower	;wreg free
  3375  000BCE  500A               	movf	?_tolower^0,w,c
  3376  000BD0  0100               	movlb	0	; () banked
  3377  000BD2  6F81               	movwf	efgtoa@mode& (0+255),b
  3378  000BD4                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3381  000BD4  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3382  000BD8                     
  3383                           ; BSR set to: 0
  3384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3385  000BD8  0E67               	movlw	103
  3386  000BDA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3387  000BDC  A4D8               	btfss	status,2,c
  3388  000BDE  EFF3  F005         	goto	u4961
  3389  000BE2  EFF5  F005         	goto	u4960
  3390  000BE6                     u4961:
  3391  000BE6  EF1B  F006         	goto	l4230
  3392  000BEA                     u4960:
  3393  000BEA                     
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3396  000BEA  51F8               	movf	_prec& (0+255),w,b
  3397  000BEC  11F9               	iorwf	(_prec+1)& (0+255),w,b
  3398  000BEE  A4D8               	btfss	status,2,c
  3399  000BF0  EFFC  F005         	goto	u4971
  3400  000BF4  EFFE  F005         	goto	u4970
  3401  000BF8                     u4971:
  3402  000BF8  EF02  F006         	goto	l4226
  3403  000BFC                     u4970:
  3404  000BFC                     
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3407  000BFC  0E00               	movlw	0
  3408  000BFE  6FF9               	movwf	(_prec+1)& (0+255),b
  3409  000C00  0E01               	movlw	1
  3410  000C02  6FF8               	movwf	_prec& (0+255),b
  3411  000C04                     l4226:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3415  000C04  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  3416  000C06  EF0F  F006         	goto	u4980
  3417  000C0A  51F9               	movf	(_prec+1)& (0+255),w,b
  3418  000C0C  E106               	bnz	u4981
  3419  000C0E  05F8               	decf	_prec& (0+255),w,b
  3420  000C10  B0D8               	btfsc	status,0,c
  3421  000C12  EF0D  F006         	goto	u4981
  3422  000C16  EF0F  F006         	goto	u4980
  3423  000C1A                     u4981:
  3424  000C1A  EF15  F006         	goto	l1042
  3425  000C1E                     u4980:
  3426  000C1E                     l4228:
  3427                           
  3428                           ; BSR set to: 0
  3429  000C1E  0E00               	movlw	0
  3430  000C20  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3431  000C22  0E06               	movlw	6
  3432  000C24  6F7C               	movwf	efgtoa@p& (0+255),b
  3433  000C26  EF24  F006         	goto	l4236
  3434  000C2A                     l1042:
  3435                           
  3436                           ; BSR set to: 0
  3437  000C2A  C0F8  F07C         	movff	_prec,efgtoa@p
  3438  000C2E  C0F9  F07D         	movff	_prec+1,efgtoa@p+1
  3439  000C32  EF24  F006         	goto	l4236
  3440  000C36                     l4230:
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3444  000C36  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  3445  000C38  EF20  F006         	goto	u4991
  3446  000C3C  EF22  F006         	goto	u4990
  3447  000C40                     u4991:
  3448  000C40  EF0F  F006         	goto	l4228
  3449  000C44                     u4990:
  3450  000C44  EF15  F006         	goto	l1042
  3451  000C48                     l4236:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3455  000C48  0E67               	movlw	103
  3456  000C4A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3457  000C4C  A4D8               	btfss	status,2,c
  3458  000C4E  EF2B  F006         	goto	u5001
  3459  000C52  EF2D  F006         	goto	u5000
  3460  000C56                     u5001:
  3461  000C56  EF5C  F006         	goto	l4246
  3462  000C5A                     u5000:
  3463  000C5A                     
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3466  000C5A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3467  000C5C  EF3B  F006         	goto	u5010
  3468  000C60  0EFC               	movlw	252
  3469  000C62  5D90               	subwf	efgtoa@e& (0+255),w,b
  3470  000C64  0EFF               	movlw	255
  3471  000C66  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3472  000C68  A0D8               	btfss	status,0,c
  3473  000C6A  EF39  F006         	goto	u5011
  3474  000C6E  EF3B  F006         	goto	u5010
  3475  000C72                     u5011:
  3476  000C72  EF5A  F006         	goto	l4244
  3477  000C76                     u5010:
  3478  000C76                     
  3479                           ; BSR set to: 0
  3480  000C76  0EFF               	movlw	255
  3481  000C78  6E51               	movwf	??_efgtoa^0,c
  3482  000C7A  0EFF               	movlw	255
  3483  000C7C  6E52               	movwf	(??_efgtoa+1)^0,c
  3484  000C7E  C07C  F053         	movff	efgtoa@p,??_efgtoa+2
  3485  000C82  C07D  F054         	movff	efgtoa@p+1,??_efgtoa+3
  3486  000C86  5051               	movf	??_efgtoa^0,w,c
  3487  000C88  2653               	addwf	(??_efgtoa+2)^0,f,c
  3488  000C8A  5052               	movf	(??_efgtoa+1)^0,w,c
  3489  000C8C  2254               	addwfc	(??_efgtoa+3)^0,f,c
  3490  000C8E  5190               	movf	efgtoa@e& (0+255),w,b
  3491  000C90  5C53               	subwf	(??_efgtoa+2)^0,w,c
  3492  000C92  5054               	movf	(??_efgtoa+3)^0,w,c
  3493  000C94  0A80               	xorlw	128
  3494  000C96  6E55               	movwf	(??_efgtoa+4)^0,c
  3495  000C98  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3496  000C9A  0A80               	xorlw	128
  3497  000C9C  5855               	subwfb	(??_efgtoa+4)^0,w,c
  3498  000C9E  A0D8               	btfss	status,0,c
  3499  000CA0  EF54  F006         	goto	u5021
  3500  000CA4  EF56  F006         	goto	u5020
  3501  000CA8                     u5021:
  3502  000CA8  EF5A  F006         	goto	l4244
  3503  000CAC                     u5020:
  3504  000CAC                     
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3507  000CAC  0E66               	movlw	102
  3508  000CAE  6F80               	movwf	efgtoa@nmode& (0+255),b
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3511  000CB0  EF5C  F006         	goto	l4246
  3512  000CB4                     l4244:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3516  000CB4  0E65               	movlw	101
  3517  000CB6  6F80               	movwf	efgtoa@nmode& (0+255),b
  3518  000CB8                     l4246:
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3522  000CB8  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3523  000CBC  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3524  000CC0                     
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3527  000CC0  0E67               	movlw	103
  3528  000CC2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3529  000CC4  A4D8               	btfss	status,2,c
  3530  000CC6  EF67  F006         	goto	u5031
  3531  000CCA  EF69  F006         	goto	u5030
  3532  000CCE                     u5031:
  3533  000CCE  EF79  F006         	goto	l4254
  3534  000CD2                     u5030:
  3535  000CD2                     
  3536                           ; BSR set to: 0
  3537  000CD2  0E66               	movlw	102
  3538  000CD4  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3539  000CD6  A4D8               	btfss	status,2,c
  3540  000CD8  EF70  F006         	goto	u5041
  3541  000CDC  EF72  F006         	goto	u5040
  3542  000CE0                     u5041:
  3543  000CE0  EF7B  F006         	goto	l4256
  3544  000CE4                     u5040:
  3545  000CE4                     
  3546                           ; BSR set to: 0
  3547  000CE4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3548  000CE6  EF79  F006         	goto	u5050
  3549  000CEA  EF77  F006         	goto	u5051
  3550  000CEE                     u5051:
  3551  000CEE  EF7B  F006         	goto	l4256
  3552  000CF2                     u5050:
  3553  000CF2                     l4254:
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3557  000CF2  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3558  000CF4  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3559  000CF6                     l4256:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3563  000CF6  0E66               	movlw	102
  3564  000CF8  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3565  000CFA  A4D8               	btfss	status,2,c
  3566  000CFC  EF82  F006         	goto	u5061
  3567  000D00  EF84  F006         	goto	u5060
  3568  000D04                     u5061:
  3569  000D04  EFA4  F006         	goto	l4266
  3570  000D08                     u5060:
  3571  000D08                     
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3574  000D08  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3575  000D0A  EF8B  F006         	goto	u5070
  3576  000D0E  EF89  F006         	goto	u5071
  3577  000D12                     u5071:
  3578  000D12  EF97  F006         	goto	l4262
  3579  000D16                     u5070:
  3580  000D16                     
  3581                           ; BSR set to: 0
  3582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3583  000D16  0E00               	movlw	0
  3584  000D18  6F94               	movwf	efgtoa@u& (0+255),b
  3585  000D1A  0E00               	movlw	0
  3586  000D1C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3587  000D1E  0E80               	movlw	128
  3588  000D20  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3589  000D22  0E3F               	movlw	63
  3590  000D24  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3593  000D26  0E00               	movlw	0
  3594  000D28  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3595  000D2A  0E00               	movlw	0
  3596  000D2C  6F90               	movwf	efgtoa@e& (0+255),b
  3597  000D2E                     l4262:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3601  000D2E  0E67               	movlw	103
  3602  000D30  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3603  000D32  B4D8               	btfsc	status,2,c
  3604  000D34  EF9E  F006         	goto	u5081
  3605  000D38  EFA0  F006         	goto	u5080
  3606  000D3C                     u5081:
  3607  000D3C  EFA4  F006         	goto	l4266
  3608  000D40                     u5080:
  3609  000D40                     
  3610                           ; BSR set to: 0
  3611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3612  000D40  5190               	movf	efgtoa@e& (0+255),w,b
  3613  000D42  2772               	addwf	efgtoa@m& (0+255),f,b
  3614  000D44  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3615  000D46  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3616  000D48                     l4266:
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3620  000D48  0E00               	movlw	0
  3621  000D4A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3622  000D4C  0E00               	movlw	0
  3623  000D4E  6F8A               	movwf	efgtoa@i& (0+255),b
  3624  000D50                     
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3627  000D50  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3628  000D54  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3629  000D58  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3630  000D5C  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3631  000D60                     
  3632                           ; BSR set to: 0
  3633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3634  000D60  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3635  000D64  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3636  000D68  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3637  000D6C  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3640  000D70  EF35  F007         	goto	l4280
  3641  000D74                     l4272:
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3645  000D74  C082  F01D         	movff	efgtoa@h,___fldiv@b
  3646  000D78  C083  F01E         	movff	efgtoa@h+1,___fldiv@b+1
  3647  000D7C  C084  F01F         	movff	efgtoa@h+2,___fldiv@b+2
  3648  000D80  C085  F020         	movff	efgtoa@h+3,___fldiv@b+3
  3649  000D84  C094  F021         	movff	efgtoa@u,___fldiv@a
  3650  000D88  C095  F022         	movff	efgtoa@u+1,___fldiv@a+1
  3651  000D8C  C096  F023         	movff	efgtoa@u+2,___fldiv@a+2
  3652  000D90  C097  F024         	movff	efgtoa@u+3,___fldiv@a+3
  3653  000D94  ECB9  F011         	call	___fldiv	;wreg free
  3654  000D98  C01D  F036         	movff	?___fldiv,floorf@x
  3655  000D9C  C01E  F037         	movff	?___fldiv+1,floorf@x+1
  3656  000DA0  C01F  F038         	movff	?___fldiv+2,floorf@x+2
  3657  000DA4  C020  F039         	movff	?___fldiv+3,floorf@x+3
  3658  000DA8  ECF6  F014         	call	_floorf	;wreg free
  3659  000DAC  C036  F086         	movff	?_floorf,efgtoa@l
  3660  000DB0  C037  F087         	movff	?_floorf+1,efgtoa@l+1
  3661  000DB4  C038  F088         	movff	?_floorf+2,efgtoa@l+2
  3662  000DB8  C039  F089         	movff	?_floorf+3,efgtoa@l+3
  3663                           
  3664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3665  000DBC  C086  F036         	movff	efgtoa@l,___fltol@f1
  3666  000DC0  C087  F037         	movff	efgtoa@l+1,___fltol@f1+1
  3667  000DC4  C088  F038         	movff	efgtoa@l+2,___fltol@f1+2
  3668  000DC8  C089  F039         	movff	efgtoa@l+3,___fltol@f1+3
  3669  000DCC  ECE4  F01A         	call	___fltol	;wreg free
  3670  000DD0  C036  F078         	movff	?___fltol,efgtoa@d
  3671  000DD4  C037  F079         	movff	?___fltol+1,efgtoa@d+1
  3672  000DD8                     
  3673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3674  000DD8  C082  F01D         	movff	efgtoa@h,___flsub@b
  3675  000DDC  C083  F01E         	movff	efgtoa@h+1,___flsub@b+1
  3676  000DE0  C084  F01F         	movff	efgtoa@h+2,___flsub@b+2
  3677  000DE4  C085  F020         	movff	efgtoa@h+3,___flsub@b+3
  3678  000DE8  C094  F008         	movff	efgtoa@u,___flmul@a
  3679  000DEC  C095  F009         	movff	efgtoa@u+1,___flmul@a+1
  3680  000DF0  C096  F00A         	movff	efgtoa@u+2,___flmul@a+2
  3681  000DF4  C097  F00B         	movff	efgtoa@u+3,___flmul@a+3
  3682  000DF8  C086  F004         	movff	efgtoa@l,___flmul@b
  3683  000DFC  C087  F005         	movff	efgtoa@l+1,___flmul@b+1
  3684  000E00  C088  F006         	movff	efgtoa@l+2,___flmul@b+2
  3685  000E04  C089  F007         	movff	efgtoa@l+3,___flmul@b+3
  3686  000E08  ECA4  F00F         	call	___flmul	;wreg free
  3687  000E0C  C004  F021         	movff	?___flmul,___flsub@a
  3688  000E10  C005  F022         	movff	?___flmul+1,___flsub@a+1
  3689  000E14  C006  F023         	movff	?___flmul+2,___flsub@a+2
  3690  000E18  C007  F024         	movff	?___flmul+3,___flsub@a+3
  3691  000E1C  EC98  F021         	call	___flsub	;wreg free
  3692  000E20  C01D  F082         	movff	?___flsub,efgtoa@h
  3693  000E24  C01E  F083         	movff	?___flsub+1,efgtoa@h+1
  3694  000E28  C01F  F084         	movff	?___flsub+2,efgtoa@h+2
  3695  000E2C  C020  F085         	movff	?___flsub+3,efgtoa@h+3
  3696  000E30                     
  3697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3698  000E30  C094  F01D         	movff	efgtoa@u,___fldiv@b
  3699  000E34  C095  F01E         	movff	efgtoa@u+1,___fldiv@b+1
  3700  000E38  C096  F01F         	movff	efgtoa@u+2,___fldiv@b+2
  3701  000E3C  C097  F020         	movff	efgtoa@u+3,___fldiv@b+3
  3702  000E40  0E00               	movlw	0
  3703  000E42  6E21               	movwf	___fldiv@a^0,c
  3704  000E44  0E00               	movlw	0
  3705  000E46  6E22               	movwf	(___fldiv@a+1)^0,c
  3706  000E48  0E20               	movlw	32
  3707  000E4A  6E23               	movwf	(___fldiv@a+2)^0,c
  3708  000E4C  0E41               	movlw	65
  3709  000E4E  6E24               	movwf	(___fldiv@a+3)^0,c
  3710  000E50  ECB9  F011         	call	___fldiv	;wreg free
  3711  000E54  C01D  F094         	movff	?___fldiv,efgtoa@u
  3712  000E58  C01E  F095         	movff	?___fldiv+1,efgtoa@u+1
  3713  000E5C  C01F  F096         	movff	?___fldiv+2,efgtoa@u+2
  3714  000E60  C020  F097         	movff	?___fldiv+3,efgtoa@u+3
  3715  000E64                     
  3716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3717  000E64  0100               	movlb	0	; () banked
  3718  000E66  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3719  000E68  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3720  000E6A                     l4280:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3724  000E6A  5172               	movf	efgtoa@m& (0+255),w,b
  3725  000E6C  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3726  000E6E  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3727  000E70  0A80               	xorlw	128
  3728  000E72  6E51               	movwf	??_efgtoa^0,c
  3729  000E74  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3730  000E76  0A80               	xorlw	128
  3731  000E78  5851               	subwfb	??_efgtoa^0,w,c
  3732  000E7A  A0D8               	btfss	status,0,c
  3733  000E7C  EF42  F007         	goto	u5091
  3734  000E80  EF44  F007         	goto	u5090
  3735  000E84                     u5091:
  3736  000E84  EFBA  F006         	goto	l4272
  3737  000E88                     u5090:
  3738  000E88                     
  3739                           ; BSR set to: 0
  3740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3741  000E88  C094  F004         	movff	efgtoa@u,___flmul@b
  3742  000E8C  C095  F005         	movff	efgtoa@u+1,___flmul@b+1
  3743  000E90  C096  F006         	movff	efgtoa@u+2,___flmul@b+2
  3744  000E94  C097  F007         	movff	efgtoa@u+3,___flmul@b+3
  3745  000E98  0E00               	movlw	0
  3746  000E9A  6E08               	movwf	___flmul@a^0,c
  3747  000E9C  0E00               	movlw	0
  3748  000E9E  6E09               	movwf	(___flmul@a+1)^0,c
  3749  000EA0  0EA0               	movlw	160
  3750  000EA2  6E0A               	movwf	(___flmul@a+2)^0,c
  3751  000EA4  0E40               	movlw	64
  3752  000EA6  6E0B               	movwf	(___flmul@a+3)^0,c
  3753  000EA8  ECA4  F00F         	call	___flmul	;wreg free
  3754  000EAC  C004  F086         	movff	?___flmul,efgtoa@l
  3755  000EB0  C005  F087         	movff	?___flmul+1,efgtoa@l+1
  3756  000EB4  C006  F088         	movff	?___flmul+2,efgtoa@l+2
  3757  000EB8  C007  F089         	movff	?___flmul+3,efgtoa@l+3
  3758  000EBC                     
  3759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3760  000EBC  C082  F01D         	movff	efgtoa@h,___flge@ff1
  3761  000EC0  C083  F01E         	movff	efgtoa@h+1,___flge@ff1+1
  3762  000EC4  C084  F01F         	movff	efgtoa@h+2,___flge@ff1+2
  3763  000EC8  C085  F020         	movff	efgtoa@h+3,___flge@ff1+3
  3764  000ECC  C086  F021         	movff	efgtoa@l,___flge@ff2
  3765  000ED0  C087  F022         	movff	efgtoa@l+1,___flge@ff2+1
  3766  000ED4  C088  F023         	movff	efgtoa@l+2,___flge@ff2+2
  3767  000ED8  C089  F024         	movff	efgtoa@l+3,___flge@ff2+3
  3768  000EDC  EC67  F01B         	call	___flge	;wreg free
  3769  000EE0  B0D8               	btfsc	status,0,c
  3770  000EE2  EF75  F007         	goto	u5101
  3771  000EE6  EF77  F007         	goto	u5100
  3772  000EEA                     u5101:
  3773  000EEA  EF82  F007         	goto	l4288
  3774  000EEE                     u5100:
  3775  000EEE                     
  3776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3777  000EEE  0E00               	movlw	0
  3778  000EF0  0100               	movlb	0	; () banked
  3779  000EF2  6F86               	movwf	efgtoa@l& (0+255),b
  3780  000EF4  0E00               	movlw	0
  3781  000EF6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3782  000EF8  0E00               	movlw	0
  3783  000EFA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3784  000EFC  0E00               	movlw	0
  3785  000EFE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 443:     } else {
  3788  000F00  EFAB  F007         	goto	l4294
  3789  000F04                     l4288:
  3790                           
  3791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3792  000F04  C082  F004         	movff	efgtoa@h,___fleq@ff1
  3793  000F08  C083  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  3794  000F0C  C084  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  3795  000F10  C085  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  3796  000F14  C086  F008         	movff	efgtoa@l,___fleq@ff2
  3797  000F18  C087  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  3798  000F1C  C088  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  3799  000F20  C089  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  3800  000F24  EC7C  F01F         	call	___fleq	;wreg free
  3801  000F28  A0D8               	btfss	status,0,c
  3802  000F2A  EF99  F007         	goto	u5111
  3803  000F2E  EF9B  F007         	goto	u5110
  3804  000F32                     u5111:
  3805  000F32  EFAB  F007         	goto	l4294
  3806  000F36                     u5110:
  3807  000F36  0100               	movlb	0	; () banked
  3808  000F38  B178               	btfsc	efgtoa@d& (0+255),0,b
  3809  000F3A  EFA1  F007         	goto	u5121
  3810  000F3E  EFA3  F007         	goto	u5120
  3811  000F42                     u5121:
  3812  000F42  EFAB  F007         	goto	l4294
  3813  000F46                     u5120:
  3814  000F46                     
  3815                           ; BSR set to: 0
  3816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3817  000F46  0E00               	movlw	0
  3818  000F48  6F86               	movwf	efgtoa@l& (0+255),b
  3819  000F4A  0E00               	movlw	0
  3820  000F4C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3821  000F4E  0E00               	movlw	0
  3822  000F50  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3823  000F52  0E00               	movlw	0
  3824  000F54  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3825  000F56                     l4294:
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3828  000F56  C08C  F004         	movff	efgtoa@g,___fladd@b
  3829  000F5A  C08D  F005         	movff	efgtoa@g+1,___fladd@b+1
  3830  000F5E  C08E  F006         	movff	efgtoa@g+2,___fladd@b+2
  3831  000F62  C08F  F007         	movff	efgtoa@g+3,___fladd@b+3
  3832  000F66  C086  F008         	movff	efgtoa@l,___fladd@a
  3833  000F6A  C087  F009         	movff	efgtoa@l+1,___fladd@a+1
  3834  000F6E  C088  F00A         	movff	efgtoa@l+2,___fladd@a+2
  3835  000F72  C089  F00B         	movff	efgtoa@l+3,___fladd@a+3
  3836  000F76  EC44  F00D         	call	___fladd	;wreg free
  3837  000F7A  C004  F082         	movff	?___fladd,efgtoa@h
  3838  000F7E  C005  F083         	movff	?___fladd+1,efgtoa@h+1
  3839  000F82  C006  F084         	movff	?___fladd+2,efgtoa@h+2
  3840  000F86  C007  F085         	movff	?___fladd+3,efgtoa@h+3
  3841  000F8A                     
  3842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3843  000F8A  C082  F01D         	movff	efgtoa@h,___flge@ff1
  3844  000F8E  C083  F01E         	movff	efgtoa@h+1,___flge@ff1+1
  3845  000F92  C084  F01F         	movff	efgtoa@h+2,___flge@ff1+2
  3846  000F96  C085  F020         	movff	efgtoa@h+3,___flge@ff1+3
  3847  000F9A  0E00               	movlw	0
  3848  000F9C  6E08               	movwf	___flmul@a^0,c
  3849  000F9E  0E00               	movlw	0
  3850  000FA0  6E09               	movwf	(___flmul@a+1)^0,c
  3851  000FA2  0E20               	movlw	32
  3852  000FA4  6E0A               	movwf	(___flmul@a+2)^0,c
  3853  000FA6  0E41               	movlw	65
  3854  000FA8  6E0B               	movwf	(___flmul@a+3)^0,c
  3855  000FAA  C074  F004         	movff	efgtoa@ou,___flmul@b
  3856  000FAE  C075  F005         	movff	efgtoa@ou+1,___flmul@b+1
  3857  000FB2  C076  F006         	movff	efgtoa@ou+2,___flmul@b+2
  3858  000FB6  C077  F007         	movff	efgtoa@ou+3,___flmul@b+3
  3859  000FBA  ECA4  F00F         	call	___flmul	;wreg free
  3860  000FBE  C004  F021         	movff	?___flmul,___flge@ff2
  3861  000FC2  C005  F022         	movff	?___flmul+1,___flge@ff2+1
  3862  000FC6  C006  F023         	movff	?___flmul+2,___flge@ff2+2
  3863  000FCA  C007  F024         	movff	?___flmul+3,___flge@ff2+3
  3864  000FCE  EC67  F01B         	call	___flge	;wreg free
  3865  000FD2  A0D8               	btfss	status,0,c
  3866  000FD4  EFEE  F007         	goto	u5131
  3867  000FD8  EFF0  F007         	goto	u5130
  3868  000FDC                     u5131:
  3869  000FDC  EF19  F008         	goto	l4306
  3870  000FE0                     u5130:
  3871  000FE0                     
  3872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 454:   e++;
  3873  000FE0  0100               	movlb	0	; () banked
  3874  000FE2  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3875  000FE4  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3876  000FE6                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3879  000FE6  C074  F004         	movff	efgtoa@ou,___flmul@b
  3880  000FEA  C075  F005         	movff	efgtoa@ou+1,___flmul@b+1
  3881  000FEE  C076  F006         	movff	efgtoa@ou+2,___flmul@b+2
  3882  000FF2  C077  F007         	movff	efgtoa@ou+3,___flmul@b+3
  3883  000FF6  0E00               	movlw	0
  3884  000FF8  6E08               	movwf	___flmul@a^0,c
  3885  000FFA  0E00               	movlw	0
  3886  000FFC  6E09               	movwf	(___flmul@a+1)^0,c
  3887  000FFE  0E20               	movlw	32
  3888  001000  6E0A               	movwf	(___flmul@a+2)^0,c
  3889  001002  0E41               	movlw	65
  3890  001004  6E0B               	movwf	(___flmul@a+3)^0,c
  3891  001006  ECA4  F00F         	call	___flmul	;wreg free
  3892  00100A  C004  F074         	movff	?___flmul,efgtoa@ou
  3893  00100E  C005  F075         	movff	?___flmul+1,efgtoa@ou+1
  3894  001012  C006  F076         	movff	?___flmul+2,efgtoa@ou+2
  3895  001016  C007  F077         	movff	?___flmul+3,efgtoa@ou+3
  3896  00101A                     
  3897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3898  00101A  0E66               	movlw	102
  3899  00101C  0100               	movlb	0	; () banked
  3900  00101E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3901  001020  A4D8               	btfss	status,2,c
  3902  001022  EF15  F008         	goto	u5141
  3903  001026  EF17  F008         	goto	u5140
  3904  00102A                     u5141:
  3905  00102A  EF19  F008         	goto	l4306
  3906  00102E                     u5140:
  3907  00102E                     
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 458:    m++;
  3910  00102E  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3911  001030  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3912  001032                     l4306:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3915  001032  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3916  001036  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3917  00103A  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3918  00103E  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3919  001042                     
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3921  001042  0E65               	movlw	101
  3922  001044  0100               	movlb	0	; () banked
  3923  001046  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3924  001048  B4D8               	btfsc	status,2,c
  3925  00104A  EF29  F008         	goto	u5151
  3926  00104E  EF2B  F008         	goto	u5150
  3927  001052                     u5151:
  3928  001052  EF31  F008         	goto	l4312
  3929  001056                     u5150:
  3930  001056                     
  3931                           ; BSR set to: 0
  3932  001056  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3933  00105A  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3934  00105E  EF35  F008         	goto	l1070
  3935  001062                     l4312:
  3936                           
  3937                           ; BSR set to: 0
  3938  001062  0E00               	movlw	0
  3939  001064  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3940  001066  0E00               	movlw	0
  3941  001068  6F70               	movwf	efgtoa@ne& (0+255),b
  3942  00106A                     l1070:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3946  00106A  0E00               	movlw	0
  3947  00106C  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3948  00106E  0E00               	movlw	0
  3949  001070  6F6E               	movwf	efgtoa@pp& (0+255),b
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3952  001072  0E00               	movlw	0
  3953  001074  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3954  001076  0E00               	movlw	0
  3955  001078  6F6C               	movwf	efgtoa@t& (0+255),b
  3956                           
  3957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3958  00107A  0E00               	movlw	0
  3959  00107C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3960  00107E  0E00               	movlw	0
  3961  001080  6F8A               	movwf	efgtoa@i& (0+255),b
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3964  001082  EF31  F009         	goto	l4362
  3965  001086                     l4314:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3969  001086  C082  F01D         	movff	efgtoa@h,___fldiv@b
  3970  00108A  C083  F01E         	movff	efgtoa@h+1,___fldiv@b+1
  3971  00108E  C084  F01F         	movff	efgtoa@h+2,___fldiv@b+2
  3972  001092  C085  F020         	movff	efgtoa@h+3,___fldiv@b+3
  3973  001096  C094  F021         	movff	efgtoa@u,___fldiv@a
  3974  00109A  C095  F022         	movff	efgtoa@u+1,___fldiv@a+1
  3975  00109E  C096  F023         	movff	efgtoa@u+2,___fldiv@a+2
  3976  0010A2  C097  F024         	movff	efgtoa@u+3,___fldiv@a+3
  3977  0010A6  ECB9  F011         	call	___fldiv	;wreg free
  3978  0010AA  C01D  F036         	movff	?___fldiv,floorf@x
  3979  0010AE  C01E  F037         	movff	?___fldiv+1,floorf@x+1
  3980  0010B2  C01F  F038         	movff	?___fldiv+2,floorf@x+2
  3981  0010B6  C020  F039         	movff	?___fldiv+3,floorf@x+3
  3982  0010BA  ECF6  F014         	call	_floorf	;wreg free
  3983  0010BE  C036  F086         	movff	?_floorf,efgtoa@l
  3984  0010C2  C037  F087         	movff	?_floorf+1,efgtoa@l+1
  3985  0010C6  C038  F088         	movff	?_floorf+2,efgtoa@l+2
  3986  0010CA  C039  F089         	movff	?_floorf+3,efgtoa@l+3
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3989  0010CE  C086  F036         	movff	efgtoa@l,___fltol@f1
  3990  0010D2  C087  F037         	movff	efgtoa@l+1,___fltol@f1+1
  3991  0010D6  C088  F038         	movff	efgtoa@l+2,___fltol@f1+2
  3992  0010DA  C089  F039         	movff	efgtoa@l+3,___fltol@f1+3
  3993  0010DE  ECE4  F01A         	call	___fltol	;wreg free
  3994  0010E2  C036  F078         	movff	?___fltol,efgtoa@d
  3995  0010E6  C037  F079         	movff	?___fltol+1,efgtoa@d+1
  3996  0010EA                     
  3997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3998  0010EA  B85A               	btfsc	_flags^0,4,c
  3999  0010EC  EF7A  F008         	goto	u5161
  4000  0010F0  EF7C  F008         	goto	u5160
  4001  0010F4                     u5161:
  4002  0010F4  EF9A  F008         	goto	l4326
  4003  0010F8                     u5160:
  4004  0010F8  0100               	movlb	0	; () banked
  4005  0010FA  5178               	movf	efgtoa@d& (0+255),w,b
  4006  0010FC  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4007  0010FE  A4D8               	btfss	status,2,c
  4008  001100  EF84  F008         	goto	u5171
  4009  001104  EF86  F008         	goto	u5170
  4010  001108                     u5171:
  4011  001108  EF9A  F008         	goto	l4326
  4012  00110C                     u5170:
  4013  00110C                     
  4014                           ; BSR set to: 0
  4015  00110C  0E67               	movlw	103
  4016  00110E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4017  001110  A4D8               	btfss	status,2,c
  4018  001112  EF8D  F008         	goto	u5181
  4019  001116  EF8F  F008         	goto	u5180
  4020  00111A                     u5181:
  4021  00111A  EF9A  F008         	goto	l4326
  4022  00111E                     u5180:
  4023  00111E                     
  4024                           ; BSR set to: 0
  4025  00111E  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4026  001120  EF96  F008         	goto	u5190
  4027  001124  EF94  F008         	goto	u5191
  4028  001128                     u5191:
  4029  001128  EF9A  F008         	goto	l4326
  4030  00112C                     u5190:
  4031  00112C                     
  4032                           ; BSR set to: 0
  4033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4034  00112C  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  4035  00112E  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  4036                           
  4037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4038  001130  EFE5  F008         	goto	l4354
  4039  001134                     l4326:
  4040                           
  4041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4042  001134  0100               	movlb	0	; () banked
  4043  001136  516E               	movf	efgtoa@pp& (0+255),w,b
  4044  001138  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4045  00113A  A4D8               	btfss	status,2,c
  4046  00113C  EFA2  F008         	goto	u5201
  4047  001140  EFA4  F008         	goto	u5200
  4048  001144                     u5201:
  4049  001144  EFCE  F008         	goto	l4346
  4050  001148                     u5200:
  4051  001148                     
  4052                           ; BSR set to: 0
  4053  001148  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4054  00114A  EFAB  F008         	goto	u5210
  4055  00114E  EFA9  F008         	goto	u5211
  4056  001152                     u5211:
  4057  001152  EFCE  F008         	goto	l4346
  4058  001156                     u5210:
  4059  001156                     
  4060                           ; BSR set to: 0
  4061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4062  001156  0E09               	movlw	low _dbuf
  4063  001158  2592               	addwf	efgtoa@n& (0+255),w,b
  4064  00115A  6ED9               	movwf	fsr2l,c
  4065  00115C  0E01               	movlw	high _dbuf
  4066  00115E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4067  001160  6EDA               	movwf	fsr2h,c
  4068  001162  0E2E               	movlw	46
  4069  001164  6EDF               	movwf	indf2,c
  4070  001166                     
  4071                           ; BSR set to: 0
  4072  001166  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4073  001168  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4074  00116A                     
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4077  00116A  077E               	decf	efgtoa@w& (0+255),f,b
  4078  00116C  A0D8               	btfss	status,0,c
  4079  00116E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4080  001170                     
  4081                           ; BSR set to: 0
  4082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4083  001170  0E00               	movlw	0
  4084  001172  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4085  001174  0E01               	movlw	1
  4086  001176  6F6E               	movwf	efgtoa@pp& (0+255),b
  4087  001178  EFCE  F008         	goto	l4346
  4088  00117C                     l4338:
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4092  00117C  0E09               	movlw	low _dbuf
  4093  00117E  2592               	addwf	efgtoa@n& (0+255),w,b
  4094  001180  6ED9               	movwf	fsr2l,c
  4095  001182  0E01               	movlw	high _dbuf
  4096  001184  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4097  001186  6EDA               	movwf	fsr2h,c
  4098  001188  0E30               	movlw	48
  4099  00118A  6EDF               	movwf	indf2,c
  4100  00118C                     
  4101                           ; BSR set to: 0
  4102  00118C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4103  00118E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4104  001190                     
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4107  001190  077E               	decf	efgtoa@w& (0+255),f,b
  4108  001192  A0D8               	btfss	status,0,c
  4109  001194  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4110  001196                     
  4111                           ; BSR set to: 0
  4112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4113  001196  076C               	decf	efgtoa@t& (0+255),f,b
  4114  001198  A0D8               	btfss	status,0,c
  4115  00119A  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  4116  00119C                     l4346:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4120  00119C  516C               	movf	efgtoa@t& (0+255),w,b
  4121  00119E  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4122  0011A0  A4D8               	btfss	status,2,c
  4123  0011A2  EFD5  F008         	goto	u5221
  4124  0011A6  EFD7  F008         	goto	u5220
  4125  0011AA                     u5221:
  4126  0011AA  EFBE  F008         	goto	l4338
  4127  0011AE                     u5220:
  4128  0011AE                     
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4131  0011AE  0E09               	movlw	low _dbuf
  4132  0011B0  2592               	addwf	efgtoa@n& (0+255),w,b
  4133  0011B2  6ED9               	movwf	fsr2l,c
  4134  0011B4  0E01               	movlw	high _dbuf
  4135  0011B6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4136  0011B8  6EDA               	movwf	fsr2h,c
  4137  0011BA  5178               	movf	efgtoa@d& (0+255),w,b
  4138  0011BC  0F30               	addlw	48
  4139  0011BE  6EDF               	movwf	indf2,c
  4140  0011C0                     
  4141                           ; BSR set to: 0
  4142  0011C0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4143  0011C2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4144  0011C4                     
  4145                           ; BSR set to: 0
  4146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4147  0011C4  077E               	decf	efgtoa@w& (0+255),f,b
  4148  0011C6  A0D8               	btfss	status,0,c
  4149  0011C8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4150  0011CA                     l4354:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4154  0011CA  C082  F01D         	movff	efgtoa@h,___flsub@b
  4155  0011CE  C083  F01E         	movff	efgtoa@h+1,___flsub@b+1
  4156  0011D2  C084  F01F         	movff	efgtoa@h+2,___flsub@b+2
  4157  0011D6  C085  F020         	movff	efgtoa@h+3,___flsub@b+3
  4158  0011DA  C094  F008         	movff	efgtoa@u,___flmul@a
  4159  0011DE  C095  F009         	movff	efgtoa@u+1,___flmul@a+1
  4160  0011E2  C096  F00A         	movff	efgtoa@u+2,___flmul@a+2
  4161  0011E6  C097  F00B         	movff	efgtoa@u+3,___flmul@a+3
  4162  0011EA  C086  F004         	movff	efgtoa@l,___flmul@b
  4163  0011EE  C087  F005         	movff	efgtoa@l+1,___flmul@b+1
  4164  0011F2  C088  F006         	movff	efgtoa@l+2,___flmul@b+2
  4165  0011F6  C089  F007         	movff	efgtoa@l+3,___flmul@b+3
  4166  0011FA  ECA4  F00F         	call	___flmul	;wreg free
  4167  0011FE  C004  F021         	movff	?___flmul,___flsub@a
  4168  001202  C005  F022         	movff	?___flmul+1,___flsub@a+1
  4169  001206  C006  F023         	movff	?___flmul+2,___flsub@a+2
  4170  00120A  C007  F024         	movff	?___flmul+3,___flsub@a+3
  4171  00120E  EC98  F021         	call	___flsub	;wreg free
  4172  001212  C01D  F082         	movff	?___flsub,efgtoa@h
  4173  001216  C01E  F083         	movff	?___flsub+1,efgtoa@h+1
  4174  00121A  C01F  F084         	movff	?___flsub+2,efgtoa@h+2
  4175  00121E  C020  F085         	movff	?___flsub+3,efgtoa@h+3
  4176  001222                     
  4177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4178  001222  C094  F01D         	movff	efgtoa@u,___fldiv@b
  4179  001226  C095  F01E         	movff	efgtoa@u+1,___fldiv@b+1
  4180  00122A  C096  F01F         	movff	efgtoa@u+2,___fldiv@b+2
  4181  00122E  C097  F020         	movff	efgtoa@u+3,___fldiv@b+3
  4182  001232  0E00               	movlw	0
  4183  001234  6E21               	movwf	___fldiv@a^0,c
  4184  001236  0E00               	movlw	0
  4185  001238  6E22               	movwf	(___fldiv@a+1)^0,c
  4186  00123A  0E20               	movlw	32
  4187  00123C  6E23               	movwf	(___fldiv@a+2)^0,c
  4188  00123E  0E41               	movlw	65
  4189  001240  6E24               	movwf	(___fldiv@a+3)^0,c
  4190  001242  ECB9  F011         	call	___fldiv	;wreg free
  4191  001246  C01D  F094         	movff	?___fldiv,efgtoa@u
  4192  00124A  C01E  F095         	movff	?___fldiv+1,efgtoa@u+1
  4193  00124E  C01F  F096         	movff	?___fldiv+2,efgtoa@u+2
  4194  001252  C020  F097         	movff	?___fldiv+3,efgtoa@u+3
  4195  001256                     
  4196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4197  001256  0100               	movlb	0	; () banked
  4198  001258  0770               	decf	efgtoa@ne& (0+255),f,b
  4199  00125A  A0D8               	btfss	status,0,c
  4200  00125C  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4201  00125E                     
  4202                           ; BSR set to: 0
  4203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4204  00125E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4205  001260  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4206  001262                     l4362:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4210  001262  5172               	movf	efgtoa@m& (0+255),w,b
  4211  001264  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4212  001266  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4213  001268  0A80               	xorlw	128
  4214  00126A  6E51               	movwf	??_efgtoa^0,c
  4215  00126C  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4216  00126E  0A80               	xorlw	128
  4217  001270  5851               	subwfb	??_efgtoa^0,w,c
  4218  001272  B0D8               	btfsc	status,0,c
  4219  001274  EF3E  F009         	goto	u5231
  4220  001278  EF40  F009         	goto	u5230
  4221  00127C                     u5231:
  4222  00127C  EF4E  F009         	goto	l4366
  4223  001280                     u5230:
  4224  001280                     
  4225                           ; BSR set to: 0
  4226  001280  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4227  001282  EF4C  F009         	goto	u5241
  4228  001286  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4229  001288  E109               	bnz	u5240
  4230  00128A  0E4B               	movlw	75
  4231  00128C  5D92               	subwf	efgtoa@n& (0+255),w,b
  4232  00128E  A0D8               	btfss	status,0,c
  4233  001290  EF4C  F009         	goto	u5241
  4234  001294  EF4E  F009         	goto	u5240
  4235  001298                     u5241:
  4236  001298  EF43  F008         	goto	l4314
  4237  00129C                     u5240:
  4238  00129C                     l4366:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4242  00129C  516E               	movf	efgtoa@pp& (0+255),w,b
  4243  00129E  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4244  0012A0  A4D8               	btfss	status,2,c
  4245  0012A2  EF55  F009         	goto	u5251
  4246  0012A6  EF57  F009         	goto	u5250
  4247  0012AA                     u5251:
  4248  0012AA  EF68  F009         	goto	l4374
  4249  0012AE                     u5250:
  4250  0012AE                     
  4251                           ; BSR set to: 0
  4252  0012AE  A85A               	btfss	_flags^0,4,c
  4253  0012B0  EF5C  F009         	goto	u5261
  4254  0012B4  EF5E  F009         	goto	u5260
  4255  0012B8                     u5261:
  4256  0012B8  EF68  F009         	goto	l4374
  4257  0012BC                     u5260:
  4258  0012BC                     
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4261  0012BC  0E09               	movlw	low _dbuf
  4262  0012BE  2592               	addwf	efgtoa@n& (0+255),w,b
  4263  0012C0  6ED9               	movwf	fsr2l,c
  4264  0012C2  0E01               	movlw	high _dbuf
  4265  0012C4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4266  0012C6  6EDA               	movwf	fsr2h,c
  4267  0012C8  0E2E               	movlw	46
  4268  0012CA  6EDF               	movwf	indf2,c
  4269  0012CC                     
  4270                           ; BSR set to: 0
  4271  0012CC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4272  0012CE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4273  0012D0                     l4374:
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4277  0012D0  0E09               	movlw	low _dbuf
  4278  0012D2  2592               	addwf	efgtoa@n& (0+255),w,b
  4279  0012D4  6ED9               	movwf	fsr2l,c
  4280  0012D6  0E01               	movlw	high _dbuf
  4281  0012D8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4282  0012DA  6EDA               	movwf	fsr2h,c
  4283  0012DC  0E00               	movlw	0
  4284  0012DE  6EDF               	movwf	indf2,c
  4285  0012E0                     
  4286                           ; BSR set to: 0
  4287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4288  0012E0  0E65               	movlw	101
  4289  0012E2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4290  0012E4  A4D8               	btfss	status,2,c
  4291  0012E6  EF77  F009         	goto	u5271
  4292  0012EA  EF79  F009         	goto	u5270
  4293  0012EE                     u5271:
  4294  0012EE  EFD2  F004         	goto	l4176
  4295  0012F2                     u5270:
  4296  0012F2                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4299  0012F2  0E00               	movlw	0
  4300  0012F4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4301  0012F6  0E4F               	movlw	79
  4302  0012F8  6F8A               	movwf	efgtoa@i& (0+255),b
  4303  0012FA                     
  4304                           ; BSR set to: 0
  4305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4306  0012FA  0E09               	movlw	low _dbuf
  4307  0012FC  258A               	addwf	efgtoa@i& (0+255),w,b
  4308  0012FE  6ED9               	movwf	fsr2l,c
  4309  001300  0E01               	movlw	high _dbuf
  4310  001302  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4311  001304  6EDA               	movwf	fsr2h,c
  4312  001306  0E00               	movlw	0
  4313  001308  6EDF               	movwf	indf2,c
  4314  00130A                     
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4317  00130A  0E00               	movlw	0
  4318  00130C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4319  00130E  0E00               	movlw	0
  4320  001310  6F7A               	movwf	efgtoa@sign& (0+255),b
  4321  001312                     
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4324  001312  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4325  001314  EF90  F009         	goto	u5280
  4326  001318  EF8E  F009         	goto	u5281
  4327  00131C                     u5281:
  4328  00131C  EF98  F009         	goto	l4390
  4329  001320                     u5280:
  4330  001320                     
  4331                           ; BSR set to: 0
  4332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4333  001320  0E00               	movlw	0
  4334  001322  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4335  001324  0E01               	movlw	1
  4336  001326  6F7A               	movwf	efgtoa@sign& (0+255),b
  4337  001328                     
  4338                           ; BSR set to: 0
  4339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4340  001328  6D90               	negf	efgtoa@e& (0+255),b
  4341  00132A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4342  00132C  B0D8               	btfsc	status,0,c
  4343  00132E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4344  001330                     l4390:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4348  001330  0E00               	movlw	0
  4349  001332  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4350  001334  0E02               	movlw	2
  4351  001336  6F7C               	movwf	efgtoa@p& (0+255),b
  4352                           
  4353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4354  001338  EFC9  F009         	goto	l4402
  4355  00133C                     l4392:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4359  00133C  078A               	decf	efgtoa@i& (0+255),f,b
  4360  00133E  A0D8               	btfss	status,0,c
  4361  001340  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4362  001342                     
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4365  001342  0E09               	movlw	low _dbuf
  4366  001344  258A               	addwf	efgtoa@i& (0+255),w,b
  4367  001346  6ED9               	movwf	fsr2l,c
  4368  001348  0E01               	movlw	high _dbuf
  4369  00134A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4370  00134C  6EDA               	movwf	fsr2h,c
  4371  00134E  C090  F004         	movff	efgtoa@e,___awmod@dividend
  4372  001352  C091  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  4373  001356  0E00               	movlw	0
  4374  001358  6E07               	movwf	(___awmod@divisor+1)^0,c
  4375  00135A  0E0A               	movlw	10
  4376  00135C  6E06               	movwf	___awmod@divisor^0,c
  4377  00135E  EC24  F01F         	call	___awmod	;wreg free
  4378  001362  5004               	movf	?___awmod^0,w,c
  4379  001364  0F30               	addlw	48
  4380  001366  6EDF               	movwf	indf2,c
  4381  001368                     
  4382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4383  001368  C090  F004         	movff	efgtoa@e,___awdiv@dividend
  4384  00136C  C091  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  4385  001370  0E00               	movlw	0
  4386  001372  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4387  001374  0E0A               	movlw	10
  4388  001376  6E06               	movwf	___awdiv@divisor^0,c
  4389  001378  EC01  F01E         	call	___awdiv	;wreg free
  4390  00137C  C004  F090         	movff	?___awdiv,efgtoa@e
  4391  001380  C005  F091         	movff	?___awdiv+1,efgtoa@e+1
  4392  001384                     
  4393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4394  001384  0100               	movlb	0	; () banked
  4395  001386  077C               	decf	efgtoa@p& (0+255),f,b
  4396  001388  A0D8               	btfss	status,0,c
  4397  00138A  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4398  00138C                     
  4399                           ; BSR set to: 0
  4400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4401  00138C  077E               	decf	efgtoa@w& (0+255),f,b
  4402  00138E  A0D8               	btfss	status,0,c
  4403  001390  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4404  001392                     l4402:
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4408  001392  5190               	movf	efgtoa@e& (0+255),w,b
  4409  001394  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4410  001396  A4D8               	btfss	status,2,c
  4411  001398  EFD0  F009         	goto	u5291
  4412  00139C  EFD2  F009         	goto	u5290
  4413  0013A0                     u5291:
  4414  0013A0  EF9E  F009         	goto	l4392
  4415  0013A4                     u5290:
  4416  0013A4                     
  4417                           ; BSR set to: 0
  4418  0013A4  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4419  0013A6  EFDF  F009         	goto	u5300
  4420  0013AA  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4421  0013AC  E106               	bnz	u5301
  4422  0013AE  057C               	decf	efgtoa@p& (0+255),w,b
  4423  0013B0  B0D8               	btfsc	status,0,c
  4424  0013B2  EFDD  F009         	goto	u5301
  4425  0013B6  EFDF  F009         	goto	u5300
  4426  0013BA                     u5301:
  4427  0013BA  EF9E  F009         	goto	l4392
  4428  0013BE                     u5300:
  4429  0013BE                     
  4430                           ; BSR set to: 0
  4431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 514:         --i;
  4432  0013BE  078A               	decf	efgtoa@i& (0+255),f,b
  4433  0013C0  A0D8               	btfss	status,0,c
  4434  0013C2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4435  0013C4                     
  4436                           ; BSR set to: 0
  4437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4438  0013C4  517A               	movf	efgtoa@sign& (0+255),w,b
  4439  0013C6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4440  0013C8  A4D8               	btfss	status,2,c
  4441  0013CA  EFE9  F009         	goto	u5311
  4442  0013CE  EFEB  F009         	goto	u5310
  4443  0013D2                     u5311:
  4444  0013D2  EFF1  F009         	goto	l4412
  4445  0013D6                     u5310:
  4446  0013D6                     
  4447                           ; BSR set to: 0
  4448  0013D6  0E00               	movlw	0
  4449  0013D8  6F67               	movwf	(_efgtoa$1636+1)& (0+255),b
  4450  0013DA  0E2B               	movlw	43
  4451  0013DC  6F66               	movwf	_efgtoa$1636& (0+255),b
  4452  0013DE  EFF5  F009         	goto	l4414
  4453  0013E2                     l4412:
  4454                           
  4455                           ; BSR set to: 0
  4456  0013E2  0E00               	movlw	0
  4457  0013E4  6F67               	movwf	(_efgtoa$1636+1)& (0+255),b
  4458  0013E6  0E2D               	movlw	45
  4459  0013E8  6F66               	movwf	_efgtoa$1636& (0+255),b
  4460  0013EA                     l4414:
  4461                           
  4462                           ; BSR set to: 0
  4463  0013EA  0E09               	movlw	low _dbuf
  4464  0013EC  258A               	addwf	efgtoa@i& (0+255),w,b
  4465  0013EE  6ED9               	movwf	fsr2l,c
  4466  0013F0  0E01               	movlw	high _dbuf
  4467  0013F2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4468  0013F4  6EDA               	movwf	fsr2h,c
  4469  0013F6  C066  FFDF         	movff	_efgtoa$1636,indf2
  4470  0013FA                     
  4471                           ; BSR set to: 0
  4472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 516:         --w;
  4473  0013FA  077E               	decf	efgtoa@w& (0+255),f,b
  4474  0013FC  A0D8               	btfss	status,0,c
  4475  0013FE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4476  001400                     
  4477                           ; BSR set to: 0
  4478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4479  001400  078A               	decf	efgtoa@i& (0+255),f,b
  4480  001402  A0D8               	btfss	status,0,c
  4481  001404  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4482  001406                     
  4483                           ; BSR set to: 0
  4484  001406  0EBF               	movlw	191
  4485  001408  6E51               	movwf	??_efgtoa^0,c
  4486  00140A  0EFF               	movlw	255
  4487  00140C  6E52               	movwf	(??_efgtoa+1)^0,c
  4488  00140E  5050               	movf	efgtoa@c^0,w,c
  4489  001410  6E53               	movwf	(??_efgtoa+2)^0,c
  4490  001412  6A54               	clrf	(??_efgtoa+3)^0,c
  4491  001414  5051               	movf	??_efgtoa^0,w,c
  4492  001416  2653               	addwf	(??_efgtoa+2)^0,f,c
  4493  001418  5052               	movf	(??_efgtoa+1)^0,w,c
  4494  00141A  2254               	addwfc	(??_efgtoa+3)^0,f,c
  4495  00141C  5054               	movf	(??_efgtoa+3)^0,w,c
  4496  00141E  E10A               	bnz	u5320
  4497  001420  0E1A               	movlw	26
  4498  001422  5C53               	subwf	(??_efgtoa+2)^0,w,c
  4499  001424  A0D8               	btfss	status,0,c
  4500  001426  EF17  F00A         	goto	u5321
  4501  00142A  EF1A  F00A         	goto	u5320
  4502  00142E                     u5321:
  4503  00142E  0E01               	movlw	1
  4504  001430  EF1B  F00A         	goto	u5330
  4505  001434                     u5320:
  4506  001434  0E00               	movlw	0
  4507  001436                     u5330:
  4508  001436  6F6A               	movwf	_efgtoa$1638& (0+255),b
  4509  001438  6B6B               	clrf	(_efgtoa$1638+1)& (0+255),b
  4510  00143A                     
  4511                           ; BSR set to: 0
  4512  00143A  516A               	movf	_efgtoa$1638& (0+255),w,b
  4513  00143C  116B               	iorwf	(_efgtoa$1638+1)& (0+255),w,b
  4514  00143E  A4D8               	btfss	status,2,c
  4515  001440  EF24  F00A         	goto	u5341
  4516  001444  EF26  F00A         	goto	u5340
  4517  001448                     u5341:
  4518  001448  EF2C  F00A         	goto	l4428
  4519  00144C                     u5340:
  4520  00144C                     
  4521                           ; BSR set to: 0
  4522  00144C  0E00               	movlw	0
  4523  00144E  6F69               	movwf	(_efgtoa$1637+1)& (0+255),b
  4524  001450  0E65               	movlw	101
  4525  001452  6F68               	movwf	_efgtoa$1637& (0+255),b
  4526  001454  EF30  F00A         	goto	l4430
  4527  001458                     l4428:
  4528                           
  4529                           ; BSR set to: 0
  4530  001458  0E00               	movlw	0
  4531  00145A  6F69               	movwf	(_efgtoa$1637+1)& (0+255),b
  4532  00145C  0E45               	movlw	69
  4533  00145E  6F68               	movwf	_efgtoa$1637& (0+255),b
  4534  001460                     l4430:
  4535                           
  4536                           ; BSR set to: 0
  4537  001460  0E09               	movlw	low _dbuf
  4538  001462  258A               	addwf	efgtoa@i& (0+255),w,b
  4539  001464  6ED9               	movwf	fsr2l,c
  4540  001466  0E01               	movlw	high _dbuf
  4541  001468  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4542  00146A  6EDA               	movwf	fsr2h,c
  4543  00146C  C068  FFDF         	movff	_efgtoa$1637,indf2
  4544  001470                     
  4545                           ; BSR set to: 0
  4546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 519:         --w;
  4547  001470  077E               	decf	efgtoa@w& (0+255),f,b
  4548  001472  A0D8               	btfss	status,0,c
  4549  001474  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4550  001476                     
  4551                           ; BSR set to: 0
  4552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4553  001476  0E09               	movlw	low _dbuf
  4554  001478  2592               	addwf	efgtoa@n& (0+255),w,b
  4555  00147A  6E04               	movwf	strcpy@dest^0,c
  4556  00147C  0E01               	movlw	high _dbuf
  4557  00147E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4558  001480  6E05               	movwf	(strcpy@dest+1)^0,c
  4559  001482  0E09               	movlw	low _dbuf
  4560  001484  258A               	addwf	efgtoa@i& (0+255),w,b
  4561  001486  6E06               	movwf	strcpy@src^0,c
  4562  001488  0E01               	movlw	high _dbuf
  4563  00148A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4564  00148C  6E07               	movwf	(strcpy@src+1)^0,c
  4565  00148E  ECAB  F020         	call	_strcpy	;wreg free
  4566  001492  EFD2  F004         	goto	l4176
  4567  001496                     l1024:
  4568  001496  0012               	return		;funcret
  4569  001498                     __end_of_efgtoa:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function _tolower *****************
  4573 ;; Defined at:
  4574 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\tolower.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  c               2    9[COMRAM] int 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  2    9[COMRAM] int 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4588 ;;      Params:         2       0       0       0       0       0       0       0       0
  4589 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4590 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4591 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4592 ;;Total ram usage:        8 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    3
  4595 ;; This function calls:
  4596 ;;		_isupper
  4597 ;; This function is called by:
  4598 ;;		_efgtoa
  4599 ;;		_vfpfcnvrt
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text11
  4604  0040F6                     __ptext11:
  4605                           	callstack 0
  4606  0040F6                     _tolower:
  4607                           	callstack 22
  4608  0040F6  0EBF               	movlw	191
  4609  0040F8  6E0C               	movwf	??_tolower^0,c
  4610  0040FA  0EFF               	movlw	255
  4611  0040FC  6E0D               	movwf	(??_tolower+1)^0,c
  4612  0040FE  C00A  F00E         	movff	tolower@c,??_tolower+2
  4613  004102  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  4614  004106  500C               	movf	??_tolower^0,w,c
  4615  004108  260E               	addwf	(??_tolower+2)^0,f,c
  4616  00410A  500D               	movf	(??_tolower+1)^0,w,c
  4617  00410C  220F               	addwfc	(??_tolower+3)^0,f,c
  4618  00410E  500F               	movf	(??_tolower+3)^0,w,c
  4619  004110  E10A               	bnz	u4490
  4620  004112  0E1A               	movlw	26
  4621  004114  5C0E               	subwf	(??_tolower+2)^0,w,c
  4622  004116  A0D8               	btfss	status,0,c
  4623  004118  EF90  F020         	goto	u4491
  4624  00411C  EF93  F020         	goto	u4490
  4625  004120                     u4491:
  4626  004120  0E01               	movlw	1
  4627  004122  EF94  F020         	goto	u4500
  4628  004126                     u4490:
  4629  004126  0E00               	movlw	0
  4630  004128                     u4500:
  4631  004128  6E10               	movwf	_tolower$1788^0,c
  4632  00412A  6A11               	clrf	(_tolower$1788+1)^0,c
  4633  00412C  5010               	movf	_tolower$1788^0,w,c
  4634  00412E  1011               	iorwf	(_tolower$1788+1)^0,w,c
  4635  004130  B4D8               	btfsc	status,2,c
  4636  004132  EF9D  F020         	goto	u4511
  4637  004136  EF9F  F020         	goto	u4510
  4638  00413A                     u4511:
  4639  00413A  EFA6  F020         	goto	l1276
  4640  00413E                     u4510:
  4641  00413E  0E20               	movlw	32
  4642  004140  100A               	iorwf	tolower@c^0,w,c
  4643  004142  6E0A               	movwf	?_tolower^0,c
  4644  004144  500B               	movf	(tolower@c+1)^0,w,c
  4645  004146  6E0B               	movwf	(?_tolower+1)^0,c
  4646  004148  EFAA  F020         	goto	l1281
  4647  00414C                     l1276:
  4648  00414C  C00A  F00A         	movff	tolower@c,?_tolower
  4649  004150  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  4650  004154                     l1281:
  4651  004154  0012               	return		;funcret
  4652  004156                     __end_of_tolower:
  4653                           	callstack 0
  4654                           
  4655 ;; *************** function _isupper *****************
  4656 ;; Defined at:
  4657 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  c               2    3[COMRAM] int 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  2    3[COMRAM] int 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4671 ;;      Params:         2       0       0       0       0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4673 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4674 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4675 ;;Total ram usage:        6 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    2
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_efgtoa
  4682 ;;		_vfpfcnvrt
  4683 ;;		_tolower
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text12
  4688  004436                     __ptext12:
  4689                           	callstack 0
  4690  004436                     _isupper:
  4691                           	callstack 22
  4692  004436  0EBF               	movlw	191
  4693  004438  6E06               	movwf	??_isupper^0,c
  4694  00443A  0EFF               	movlw	255
  4695  00443C  6E07               	movwf	(??_isupper+1)^0,c
  4696  00443E  C004  F008         	movff	isupper@c,??_isupper+2
  4697  004442  C005  F009         	movff	isupper@c+1,??_isupper+3
  4698  004446  5006               	movf	??_isupper^0,w,c
  4699  004448  2608               	addwf	(??_isupper+2)^0,f,c
  4700  00444A  5007               	movf	(??_isupper+1)^0,w,c
  4701  00444C  2209               	addwfc	(??_isupper+3)^0,f,c
  4702  00444E  5009               	movf	(??_isupper+3)^0,w,c
  4703  004450  E10A               	bnz	u3500
  4704  004452  0E1A               	movlw	26
  4705  004454  5C08               	subwf	(??_isupper+2)^0,w,c
  4706  004456  A0D8               	btfss	status,0,c
  4707  004458  EF30  F022         	goto	u3501
  4708  00445C  EF33  F022         	goto	u3500
  4709  004460                     u3501:
  4710  004460  0E01               	movlw	1
  4711  004462  EF34  F022         	goto	u3510
  4712  004466                     u3500:
  4713  004466  0E00               	movlw	0
  4714  004468                     u3510:
  4715  004468  6E04               	movwf	?_isupper^0,c
  4716  00446A  6A05               	clrf	(?_isupper+1)^0,c
  4717  00446C  0012               	return		;funcret
  4718  00446E                     __end_of_isupper:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _strcpy *****************
  4722 ;; Defined at:
  4723 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  dest            2    3[COMRAM] PTR unsigned char 
  4726 ;;		 -> dbuf(80), 
  4727 ;;  src             2    5[COMRAM] PTR const unsigned char 
  4728 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  4729 ;;		 -> dbuf(80), 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  d               2   11[COMRAM] PTR unsigned char 
  4732 ;;		 -> dbuf(80), 
  4733 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4734 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  4735 ;;		 -> dbuf(80), 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  2    3[COMRAM] PTR unsigned char 
  4738 ;; Registers used:
  4739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4745 ;;      Params:         4       0       0       0       0       0       0       0       0
  4746 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4747 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4748 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4749 ;;Total ram usage:       10 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    2
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_efgtoa
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text13
  4760  004156                     __ptext13:
  4761                           	callstack 0
  4762  004156                     _strcpy:
  4763                           	callstack 22
  4764  004156  C006  F00A         	movff	strcpy@src,strcpy@s
  4765  00415A  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  4766  00415E  C004  F00C         	movff	strcpy@dest,strcpy@d
  4767  004162  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  4768  004166                     l4014:
  4769  004166  500A               	movf	strcpy@s^0,w,c
  4770  004168  6E08               	movwf	??_strcpy^0,c
  4771  00416A  500B               	movf	(strcpy@s+1)^0,w,c
  4772  00416C  6E09               	movwf	(??_strcpy+1)^0,c
  4773  00416E  4A0A               	infsnz	strcpy@s^0,f,c
  4774  004170  2A0B               	incf	(strcpy@s+1)^0,f,c
  4775  004172  C008  FFF6         	movff	??_strcpy,tblptrl
  4776  004176  C009  FFF7         	movff	??_strcpy+1,tblptrh
  4777  00417A  6AF8               	clrf	tblptru,c
  4778  00417C  C00C  FFD9         	movff	strcpy@d,fsr2l
  4779  004180  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  4780  004184  4A0C               	infsnz	strcpy@d^0,f,c
  4781  004186  2A0D               	incf	(strcpy@d+1)^0,f,c
  4782  004188  0E07               	movlw	(high __ramtop+-1)
  4783  00418A  64F7               	cpfsgt	tblptrh,c
  4784  00418C  D003               	bra	u4477
  4785  00418E  0008               	tblrd		*
  4786  004190  50F5               	movf	tablat,w,c
  4787  004192  D005               	bra	u4470
  4788  004194                     u4477:
  4789  004194  CFF6 FFE1          	movff	tblptrl,fsr1l
  4790  004198  CFF7 FFE2          	movff	tblptrh,fsr1h
  4791  00419C  50E7               	movf	indf1,w,c
  4792  00419E                     u4470:
  4793  00419E  6EDF               	movwf	indf2,c
  4794  0041A0  50DF               	movf	indf2,w,c
  4795  0041A2  A4D8               	btfss	status,2,c
  4796  0041A4  EFD6  F020         	goto	u4481
  4797  0041A8  EFD8  F020         	goto	u4480
  4798  0041AC                     u4481:
  4799  0041AC  EFB3  F020         	goto	l4014
  4800  0041B0                     u4480:
  4801  0041B0  0012               	return		;funcret
  4802  0041B2                     __end_of_strcpy:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function _floorf *****************
  4806 ;; Defined at:
  4807 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\floorf.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  x               4   53[COMRAM] float 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  u               4   69[COMRAM] struct .
  4812 ;;  m               4   63[COMRAM] unsigned long 
  4813 ;;  e               2   67[COMRAM] int 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  4   53[COMRAM] float 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4823 ;;      Params:         4       0       0       0       0       0       0       0       0
  4824 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4825 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4826 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4827 ;;Total ram usage:       20 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    2
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_efgtoa
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text14
  4838  0029EC                     __ptext14:
  4839                           	callstack 0
  4840  0029EC                     _floorf:
  4841                           	callstack 22
  4842  0029EC  C0EC  F046         	movff	floorf@F527,floorf@u
  4843  0029F0  C0ED  F047         	movff	floorf@F527+1,floorf@u+1
  4844  0029F4  C0EE  F048         	movff	floorf@F527+2,floorf@u+2
  4845  0029F8  C0EF  F049         	movff	floorf@F527+3,floorf@u+3
  4846  0029FC  C036  F046         	movff	floorf@x,floorf@u
  4847  002A00  C037  F047         	movff	floorf@x+1,floorf@u+1
  4848  002A04  C038  F048         	movff	floorf@x+2,floorf@u+2
  4849  002A08  C039  F049         	movff	floorf@x+3,floorf@u+3
  4850  002A0C  0E81               	movlw	129
  4851  002A0E  6E3A               	movwf	??_floorf^0,c
  4852  002A10  0EFF               	movlw	255
  4853  002A12  6E3B               	movwf	(??_floorf+1)^0,c
  4854  002A14  C046  F03C         	movff	floorf@u,??_floorf+2
  4855  002A18  C047  F03D         	movff	floorf@u+1,??_floorf+3
  4856  002A1C  C048  F03E         	movff	floorf@u+2,??_floorf+4
  4857  002A20  C049  F03F         	movff	floorf@u+3,??_floorf+5
  4858  002A24  0E18               	movlw	24
  4859  002A26  EF1A  F015         	goto	u4520
  4860  002A2A                     u4525:
  4861  002A2A  90D8               	bcf	status,0,c
  4862  002A2C  323F               	rrcf	(??_floorf+5)^0,f,c
  4863  002A2E  323E               	rrcf	(??_floorf+4)^0,f,c
  4864  002A30  323D               	rrcf	(??_floorf+3)^0,f,c
  4865  002A32  323C               	rrcf	(??_floorf+2)^0,f,c
  4866  002A34                     u4520:
  4867  002A34  2EE8               	decfsz	wreg,f,c
  4868  002A36  EF15  F015         	goto	u4525
  4869  002A3A  503C               	movf	(??_floorf+2)^0,w,c
  4870  002A3C  243A               	addwf	??_floorf^0,w,c
  4871  002A3E  6E44               	movwf	floorf@e^0,c
  4872  002A40  0E00               	movlw	0
  4873  002A42  203B               	addwfc	(??_floorf+1)^0,w,c
  4874  002A44  6E45               	movwf	(floorf@e+1)^0,c
  4875  002A46  BE45               	btfsc	(floorf@e+1)^0,7,c
  4876  002A48  EF2F  F015         	goto	u4531
  4877  002A4C  5045               	movf	(floorf@e+1)^0,w,c
  4878  002A4E  E109               	bnz	u4530
  4879  002A50  0E17               	movlw	23
  4880  002A52  5C44               	subwf	floorf@e^0,w,c
  4881  002A54  A0D8               	btfss	status,0,c
  4882  002A56  EF2F  F015         	goto	u4531
  4883  002A5A  EF31  F015         	goto	u4530
  4884  002A5E                     u4531:
  4885  002A5E  EF3B  F015         	goto	l4032
  4886  002A62                     u4530:
  4887  002A62                     l4030:
  4888  002A62  C036  F036         	movff	floorf@x,?_floorf
  4889  002A66  C037  F037         	movff	floorf@x+1,?_floorf+1
  4890  002A6A  C038  F038         	movff	floorf@x+2,?_floorf+2
  4891  002A6E  C039  F039         	movff	floorf@x+3,?_floorf+3
  4892  002A72  EFFE  F015         	goto	l1200
  4893  002A76                     l4032:
  4894  002A76  BE45               	btfsc	(floorf@e+1)^0,7,c
  4895  002A78  EF40  F015         	goto	u4541
  4896  002A7C  EF42  F015         	goto	u4540
  4897  002A80                     u4541:
  4898  002A80  EFB2  F015         	goto	l4042
  4899  002A84                     u4540:
  4900  002A84  C044  F03A         	movff	floorf@e,??_floorf
  4901  002A88  0EFF               	movlw	255
  4902  002A8A  6E3B               	movwf	(??_floorf+1)^0,c
  4903  002A8C  0EFF               	movlw	255
  4904  002A8E  6E3C               	movwf	(??_floorf+2)^0,c
  4905  002A90  0E7F               	movlw	127
  4906  002A92  6E3D               	movwf	(??_floorf+3)^0,c
  4907  002A94  0E00               	movlw	0
  4908  002A96  6E3E               	movwf	(??_floorf+4)^0,c
  4909  002A98                     u4555:
  4910  002A98  663A               	tstfsz	??_floorf^0,c
  4911  002A9A  EF51  F015         	goto	u4556
  4912  002A9E  EF59  F015         	goto	u4557
  4913  002AA2                     u4556:
  4914  002AA2  343E               	rlcf	(??_floorf+4)^0,w,c
  4915  002AA4  323E               	rrcf	(??_floorf+4)^0,f,c
  4916  002AA6  323D               	rrcf	(??_floorf+3)^0,f,c
  4917  002AA8  323C               	rrcf	(??_floorf+2)^0,f,c
  4918  002AAA  323B               	rrcf	(??_floorf+1)^0,f,c
  4919  002AAC  2E3A               	decfsz	??_floorf^0,f,c
  4920  002AAE  EF4C  F015         	goto	u4555
  4921  002AB2                     u4557:
  4922  002AB2  C03B  F040         	movff	??_floorf+1,floorf@m
  4923  002AB6  C03C  F041         	movff	??_floorf+2,floorf@m+1
  4924  002ABA  C03D  F042         	movff	??_floorf+3,floorf@m+2
  4925  002ABE  C03E  F043         	movff	??_floorf+4,floorf@m+3
  4926  002AC2  5040               	movf	floorf@m^0,w,c
  4927  002AC4  1446               	andwf	floorf@u^0,w,c
  4928  002AC6  6E3A               	movwf	??_floorf^0,c
  4929  002AC8  5041               	movf	(floorf@m+1)^0,w,c
  4930  002ACA  1447               	andwf	(floorf@u+1)^0,w,c
  4931  002ACC  6E3B               	movwf	(??_floorf+1)^0,c
  4932  002ACE  5042               	movf	(floorf@m+2)^0,w,c
  4933  002AD0  1448               	andwf	(floorf@u+2)^0,w,c
  4934  002AD2  6E3C               	movwf	(??_floorf+2)^0,c
  4935  002AD4  5043               	movf	(floorf@m+3)^0,w,c
  4936  002AD6  1449               	andwf	(floorf@u+3)^0,w,c
  4937  002AD8  6E3D               	movwf	(??_floorf+3)^0,c
  4938  002ADA  503A               	movf	??_floorf^0,w,c
  4939  002ADC  103B               	iorwf	(??_floorf+1)^0,w,c
  4940  002ADE  103C               	iorwf	(??_floorf+2)^0,w,c
  4941  002AE0  103D               	iorwf	(??_floorf+3)^0,w,c
  4942  002AE2  A4D8               	btfss	status,2,c
  4943  002AE4  EF76  F015         	goto	u4561
  4944  002AE8  EF78  F015         	goto	u4560
  4945  002AEC                     u4561:
  4946  002AEC  EF7A  F015         	goto	l4038
  4947  002AF0                     u4560:
  4948  002AF0  EF31  F015         	goto	l4030
  4949  002AF4                     l4038:
  4950  002AF4  C046  F03A         	movff	floorf@u,??_floorf
  4951  002AF8  C047  F03B         	movff	floorf@u+1,??_floorf+1
  4952  002AFC  C048  F03C         	movff	floorf@u+2,??_floorf+2
  4953  002B00  C049  F03D         	movff	floorf@u+3,??_floorf+3
  4954  002B04  0E20               	movlw	32
  4955  002B06  EF8A  F015         	goto	u4570
  4956  002B0A                     u4575:
  4957  002B0A  90D8               	bcf	status,0,c
  4958  002B0C  323D               	rrcf	(??_floorf+3)^0,f,c
  4959  002B0E  323C               	rrcf	(??_floorf+2)^0,f,c
  4960  002B10  323B               	rrcf	(??_floorf+1)^0,f,c
  4961  002B12  323A               	rrcf	??_floorf^0,f,c
  4962  002B14                     u4570:
  4963  002B14  2EE8               	decfsz	wreg,f,c
  4964  002B16  EF85  F015         	goto	u4575
  4965  002B1A  503A               	movf	??_floorf^0,w,c
  4966  002B1C  103B               	iorwf	(??_floorf+1)^0,w,c
  4967  002B1E  103C               	iorwf	(??_floorf+2)^0,w,c
  4968  002B20  103D               	iorwf	(??_floorf+3)^0,w,c
  4969  002B22  B4D8               	btfsc	status,2,c
  4970  002B24  EF96  F015         	goto	u4581
  4971  002B28  EF98  F015         	goto	u4580
  4972  002B2C                     u4581:
  4973  002B2C  EFA0  F015         	goto	l1203
  4974  002B30                     u4580:
  4975  002B30  5040               	movf	floorf@m^0,w,c
  4976  002B32  2646               	addwf	floorf@u^0,f,c
  4977  002B34  5041               	movf	(floorf@m+1)^0,w,c
  4978  002B36  2247               	addwfc	(floorf@u+1)^0,f,c
  4979  002B38  5042               	movf	(floorf@m+2)^0,w,c
  4980  002B3A  2248               	addwfc	(floorf@u+2)^0,f,c
  4981  002B3C  5043               	movf	(floorf@m+3)^0,w,c
  4982  002B3E  2249               	addwfc	(floorf@u+3)^0,f,c
  4983  002B40                     l1203:
  4984  002B40  1C40               	comf	floorf@m^0,w,c
  4985  002B42  6E3A               	movwf	??_floorf^0,c
  4986  002B44  1C41               	comf	(floorf@m+1)^0,w,c
  4987  002B46  6E3B               	movwf	(??_floorf+1)^0,c
  4988  002B48  1C42               	comf	(floorf@m+2)^0,w,c
  4989  002B4A  6E3C               	movwf	(??_floorf+2)^0,c
  4990  002B4C  1C43               	comf	(floorf@m+3)^0,w,c
  4991  002B4E  6E3D               	movwf	(??_floorf+3)^0,c
  4992  002B50  503A               	movf	??_floorf^0,w,c
  4993  002B52  1646               	andwf	floorf@u^0,f,c
  4994  002B54  503B               	movf	(??_floorf+1)^0,w,c
  4995  002B56  1647               	andwf	(floorf@u+1)^0,f,c
  4996  002B58  503C               	movf	(??_floorf+2)^0,w,c
  4997  002B5A  1648               	andwf	(floorf@u+2)^0,f,c
  4998  002B5C  503D               	movf	(??_floorf+3)^0,w,c
  4999  002B5E  1649               	andwf	(floorf@u+3)^0,f,c
  5000  002B60  EFF6  F015         	goto	l4050
  5001  002B64                     l4042:
  5002  002B64  C046  F03A         	movff	floorf@u,??_floorf
  5003  002B68  C047  F03B         	movff	floorf@u+1,??_floorf+1
  5004  002B6C  C048  F03C         	movff	floorf@u+2,??_floorf+2
  5005  002B70  C049  F03D         	movff	floorf@u+3,??_floorf+3
  5006  002B74  0E20               	movlw	32
  5007  002B76  EFC2  F015         	goto	u4590
  5008  002B7A                     u4595:
  5009  002B7A  90D8               	bcf	status,0,c
  5010  002B7C  323D               	rrcf	(??_floorf+3)^0,f,c
  5011  002B7E  323C               	rrcf	(??_floorf+2)^0,f,c
  5012  002B80  323B               	rrcf	(??_floorf+1)^0,f,c
  5013  002B82  323A               	rrcf	??_floorf^0,f,c
  5014  002B84                     u4590:
  5015  002B84  2EE8               	decfsz	wreg,f,c
  5016  002B86  EFBD  F015         	goto	u4595
  5017  002B8A  503A               	movf	??_floorf^0,w,c
  5018  002B8C  103B               	iorwf	(??_floorf+1)^0,w,c
  5019  002B8E  103C               	iorwf	(??_floorf+2)^0,w,c
  5020  002B90  103D               	iorwf	(??_floorf+3)^0,w,c
  5021  002B92  A4D8               	btfss	status,2,c
  5022  002B94  EFCE  F015         	goto	u4601
  5023  002B98  EFD0  F015         	goto	u4600
  5024  002B9C                     u4601:
  5025  002B9C  EFDA  F015         	goto	l4046
  5026  002BA0                     u4600:
  5027  002BA0  0E00               	movlw	0
  5028  002BA2  6E46               	movwf	floorf@u^0,c
  5029  002BA4  0E00               	movlw	0
  5030  002BA6  6E47               	movwf	(floorf@u+1)^0,c
  5031  002BA8  0E00               	movlw	0
  5032  002BAA  6E48               	movwf	(floorf@u+2)^0,c
  5033  002BAC  0E00               	movlw	0
  5034  002BAE  6E49               	movwf	(floorf@u+3)^0,c
  5035  002BB0  EFF6  F015         	goto	l4050
  5036  002BB4                     l4046:
  5037  002BB4  90D8               	bcf	status,0,c
  5038  002BB6  3446               	rlcf	floorf@u^0,w,c
  5039  002BB8  6E3A               	movwf	??_floorf^0,c
  5040  002BBA  3447               	rlcf	(floorf@u+1)^0,w,c
  5041  002BBC  6E3B               	movwf	(??_floorf+1)^0,c
  5042  002BBE  3448               	rlcf	(floorf@u+2)^0,w,c
  5043  002BC0  6E3C               	movwf	(??_floorf+2)^0,c
  5044  002BC2  3449               	rlcf	(floorf@u+3)^0,w,c
  5045  002BC4  6E3D               	movwf	(??_floorf+3)^0,c
  5046  002BC6  503A               	movf	??_floorf^0,w,c
  5047  002BC8  103B               	iorwf	(??_floorf+1)^0,w,c
  5048  002BCA  103C               	iorwf	(??_floorf+2)^0,w,c
  5049  002BCC  103D               	iorwf	(??_floorf+3)^0,w,c
  5050  002BCE  B4D8               	btfsc	status,2,c
  5051  002BD0  EFEC  F015         	goto	u4611
  5052  002BD4  EFEE  F015         	goto	u4610
  5053  002BD8                     u4611:
  5054  002BD8  EFF6  F015         	goto	l4050
  5055  002BDC                     u4610:
  5056  002BDC  0E00               	movlw	0
  5057  002BDE  6E46               	movwf	floorf@u^0,c
  5058  002BE0  0E00               	movlw	0
  5059  002BE2  6E47               	movwf	(floorf@u+1)^0,c
  5060  002BE4  0E80               	movlw	128
  5061  002BE6  6E48               	movwf	(floorf@u+2)^0,c
  5062  002BE8  0EBF               	movlw	191
  5063  002BEA  6E49               	movwf	(floorf@u+3)^0,c
  5064  002BEC                     l4050:
  5065  002BEC  C046  F036         	movff	floorf@u,?_floorf
  5066  002BF0  C047  F037         	movff	floorf@u+1,?_floorf+1
  5067  002BF4  C048  F038         	movff	floorf@u+2,?_floorf+2
  5068  002BF8  C049  F039         	movff	floorf@u+3,?_floorf+3
  5069  002BFC                     l1200:
  5070  002BFC  0012               	return		;funcret
  5071  002BFE                     __end_of_floorf:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function ___fpclassifyf *****************
  5075 ;; Defined at:
  5076 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__fpclassifyf.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  x               4    3[COMRAM] float 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  u               4   13[COMRAM] struct .
  5081 ;;  e               2   11[COMRAM] int 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  2    3[COMRAM] int 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5091 ;;      Params:         4       0       0       0       0       0       0       0       0
  5092 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5093 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5094 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5095 ;;Total ram usage:       14 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    2
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_efgtoa
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text15
  5106  0037D2                     __ptext15:
  5107                           	callstack 0
  5108  0037D2                     ___fpclassifyf:
  5109                           	callstack 22
  5110  0037D2  C0F0  F00E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5111  0037D6  C0F1  F00F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5112  0037DA  C0F2  F010         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5113  0037DE  C0F3  F011         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5114  0037E2  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  5115  0037E6  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5116  0037EA  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5117  0037EE  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5118  0037F2  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5119  0037F6  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5120  0037FA  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5121  0037FE  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5122  003802  0E18               	movlw	24
  5123  003804  EF09  F01C         	goto	u4400
  5124  003808                     u4405:
  5125  003808  90D8               	bcf	status,0,c
  5126  00380A  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
  5127  00380C  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
  5128  00380E  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
  5129  003810  3208               	rrcf	??___fpclassifyf^0,f,c
  5130  003812                     u4400:
  5131  003812  2EE8               	decfsz	wreg,f,c
  5132  003814  EF04  F01C         	goto	u4405
  5133  003818  5008               	movf	??___fpclassifyf^0,w,c
  5134  00381A  6E0C               	movwf	___fpclassifyf@e^0,c
  5135  00381C  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
  5136  00381E  500C               	movf	___fpclassifyf@e^0,w,c
  5137  003820  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5138  003822  A4D8               	btfss	status,2,c
  5139  003824  EF16  F01C         	goto	u4411
  5140  003828  EF18  F01C         	goto	u4410
  5141  00382C                     u4411:
  5142  00382C  EF38  F01C         	goto	l4002
  5143  003830                     u4410:
  5144  003830  90D8               	bcf	status,0,c
  5145  003832  340E               	rlcf	___fpclassifyf@u^0,w,c
  5146  003834  6E08               	movwf	??___fpclassifyf^0,c
  5147  003836  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5148  003838  6E09               	movwf	(??___fpclassifyf+1)^0,c
  5149  00383A  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5150  00383C  6E0A               	movwf	(??___fpclassifyf+2)^0,c
  5151  00383E  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5152  003840  6E0B               	movwf	(??___fpclassifyf+3)^0,c
  5153  003842  5008               	movf	??___fpclassifyf^0,w,c
  5154  003844  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5155  003846  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5156  003848  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5157  00384A  A4D8               	btfss	status,2,c
  5158  00384C  EF2A  F01C         	goto	u4421
  5159  003850  EF2C  F01C         	goto	u4420
  5160  003854                     u4421:
  5161  003854  EF32  F01C         	goto	l3998
  5162  003858                     u4420:
  5163  003858  0E00               	movlw	0
  5164  00385A  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5165  00385C  0E02               	movlw	2
  5166  00385E  6E04               	movwf	?___fpclassifyf^0,c
  5167  003860  EF67  F01C         	goto	l1155
  5168  003864                     l3998:
  5169  003864  0E00               	movlw	0
  5170  003866  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5171  003868  0E03               	movlw	3
  5172  00386A  6E04               	movwf	?___fpclassifyf^0,c
  5173  00386C  EF67  F01C         	goto	l1155
  5174  003870                     l4002:
  5175  003870  280C               	incf	___fpclassifyf@e^0,w,c
  5176  003872  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5177  003874  A4D8               	btfss	status,2,c
  5178  003876  EF3F  F01C         	goto	u4431
  5179  00387A  EF41  F01C         	goto	u4430
  5180  00387E                     u4431:
  5181  00387E  EF63  F01C         	goto	l4008
  5182  003882                     u4430:
  5183  003882  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5184  003886  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5185  00388A  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5186  00388E  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5187  003892  0E09               	movlw	9
  5188  003894                     u4445:
  5189  003894  90D8               	bcf	status,0,c
  5190  003896  3608               	rlcf	??___fpclassifyf^0,f,c
  5191  003898  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
  5192  00389A  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
  5193  00389C  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
  5194  00389E  2EE8               	decfsz	wreg,f,c
  5195  0038A0  EF4A  F01C         	goto	u4445
  5196  0038A4  5008               	movf	??___fpclassifyf^0,w,c
  5197  0038A6  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5198  0038A8  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5199  0038AA  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5200  0038AC  B4D8               	btfsc	status,2,c
  5201  0038AE  EF5B  F01C         	goto	u4451
  5202  0038B2  EF5E  F01C         	goto	u4450
  5203  0038B6                     u4451:
  5204  0038B6  0E01               	movlw	1
  5205  0038B8  EF5F  F01C         	goto	u4460
  5206  0038BC                     u4450:
  5207  0038BC  0E00               	movlw	0
  5208  0038BE                     u4460:
  5209  0038BE  6E04               	movwf	?___fpclassifyf^0,c
  5210  0038C0  6A05               	clrf	(?___fpclassifyf+1)^0,c
  5211  0038C2  EF67  F01C         	goto	l1155
  5212  0038C6                     l4008:
  5213  0038C6  0E00               	movlw	0
  5214  0038C8  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5215  0038CA  0E04               	movlw	4
  5216  0038CC  6E04               	movwf	?___fpclassifyf^0,c
  5217  0038CE                     l1155:
  5218  0038CE  0012               	return		;funcret
  5219  0038D0                     __end_of___fpclassifyf:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function ___fltol *****************
  5223 ;; Defined at:
  5224 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  f1              4   53[COMRAM] int 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  exp1            1   62[COMRAM] unsigned char 
  5229 ;;  sign1           1   61[COMRAM] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  4   53[COMRAM] long 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5239 ;;      Params:         4       0       0       0       0       0       0       0       0
  5240 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5241 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5242 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5243 ;;Total ram usage:       10 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    2
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_appBat
  5250 ;;		_efgtoa
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text16
  5255  0035C8                     __ptext16:
  5256                           	callstack 0
  5257  0035C8                     ___fltol:
  5258                           	callstack 22
  5259  0035C8  3438               	rlcf	(___fltol@f1+2)^0,w,c
  5260  0035CA  3439               	rlcf	(___fltol@f1+3)^0,w,c
  5261  0035CC  6E3F               	movwf	___fltol@exp1^0,c
  5262  0035CE  503F               	movf	___fltol@exp1^0,w,c
  5263  0035D0  A4D8               	btfss	status,2,c
  5264  0035D2  EFED  F01A         	goto	u4281
  5265  0035D6  EFEF  F01A         	goto	u4280
  5266  0035DA                     u4281:
  5267  0035DA  EFF9  F01A         	goto	l3926
  5268  0035DE                     u4280:
  5269  0035DE                     l3922:
  5270  0035DE  0E00               	movlw	0
  5271  0035E0  6E36               	movwf	?___fltol^0,c
  5272  0035E2  0E00               	movlw	0
  5273  0035E4  6E37               	movwf	(?___fltol+1)^0,c
  5274  0035E6  0E00               	movlw	0
  5275  0035E8  6E38               	movwf	(?___fltol+2)^0,c
  5276  0035EA  0E00               	movlw	0
  5277  0035EC  6E39               	movwf	(?___fltol+3)^0,c
  5278  0035EE  EF66  F01B         	goto	l551
  5279  0035F2                     l3926:
  5280  0035F2  C036  F03A         	movff	___fltol@f1,??___fltol
  5281  0035F6  C037  F03B         	movff	___fltol@f1+1,??___fltol+1
  5282  0035FA  C038  F03C         	movff	___fltol@f1+2,??___fltol+2
  5283  0035FE  C039  F03D         	movff	___fltol@f1+3,??___fltol+3
  5284  003602  0E20               	movlw	32
  5285  003604  EF09  F01B         	goto	u4290
  5286  003608                     u4295:
  5287  003608  90D8               	bcf	status,0,c
  5288  00360A  323D               	rrcf	(??___fltol+3)^0,f,c
  5289  00360C  323C               	rrcf	(??___fltol+2)^0,f,c
  5290  00360E  323B               	rrcf	(??___fltol+1)^0,f,c
  5291  003610  323A               	rrcf	??___fltol^0,f,c
  5292  003612                     u4290:
  5293  003612  2EE8               	decfsz	wreg,f,c
  5294  003614  EF04  F01B         	goto	u4295
  5295  003618  503A               	movf	??___fltol^0,w,c
  5296  00361A  6E3E               	movwf	___fltol@sign1^0,c
  5297  00361C  8E38               	bsf	(___fltol@f1+2)^0,7,c
  5298  00361E  0EFF               	movlw	255
  5299  003620  1636               	andwf	___fltol@f1^0,f,c
  5300  003622  0EFF               	movlw	255
  5301  003624  1637               	andwf	(___fltol@f1+1)^0,f,c
  5302  003626  0EFF               	movlw	255
  5303  003628  1638               	andwf	(___fltol@f1+2)^0,f,c
  5304  00362A  0E00               	movlw	0
  5305  00362C  1639               	andwf	(___fltol@f1+3)^0,f,c
  5306  00362E  0E96               	movlw	150
  5307  003630  5E3F               	subwf	___fltol@exp1^0,f,c
  5308  003632  BE3F               	btfsc	___fltol@exp1^0,7,c
  5309  003634  EF20  F01B         	goto	u4300
  5310  003638  EF1E  F01B         	goto	u4301
  5311  00363C                     u4301:
  5312  00363C  EF36  F01B         	goto	l3946
  5313  003640                     u4300:
  5314  003640  503F               	movf	___fltol@exp1^0,w,c
  5315  003642  0A80               	xorlw	128
  5316  003644  0F97               	addlw	151
  5317  003646  B0D8               	btfsc	status,0,c
  5318  003648  EF28  F01B         	goto	u4311
  5319  00364C  EF2A  F01B         	goto	u4310
  5320  003650                     u4311:
  5321  003650  EF2C  F01B         	goto	l3942
  5322  003654                     u4310:
  5323  003654  EFEF  F01A         	goto	l3922
  5324  003658                     l3942:
  5325  003658  90D8               	bcf	status,0,c
  5326  00365A  3239               	rrcf	(___fltol@f1+3)^0,f,c
  5327  00365C  3238               	rrcf	(___fltol@f1+2)^0,f,c
  5328  00365E  3237               	rrcf	(___fltol@f1+1)^0,f,c
  5329  003660  3236               	rrcf	___fltol@f1^0,f,c
  5330  003662  3E3F               	incfsz	___fltol@exp1^0,f,c
  5331  003664  EF2C  F01B         	goto	l3942
  5332  003668  EF4E  F01B         	goto	l3956
  5333  00366C                     l3946:
  5334  00366C  0E1F               	movlw	31
  5335  00366E  643F               	cpfsgt	___fltol@exp1^0,c
  5336  003670  EF3C  F01B         	goto	u4321
  5337  003674  EF3E  F01B         	goto	u4320
  5338  003678                     u4321:
  5339  003678  EF46  F01B         	goto	l3954
  5340  00367C                     u4320:
  5341  00367C  EFEF  F01A         	goto	l3922
  5342  003680                     l3952:
  5343  003680  90D8               	bcf	status,0,c
  5344  003682  3636               	rlcf	___fltol@f1^0,f,c
  5345  003684  3637               	rlcf	(___fltol@f1+1)^0,f,c
  5346  003686  3638               	rlcf	(___fltol@f1+2)^0,f,c
  5347  003688  3639               	rlcf	(___fltol@f1+3)^0,f,c
  5348  00368A  063F               	decf	___fltol@exp1^0,f,c
  5349  00368C                     l3954:
  5350  00368C  503F               	movf	___fltol@exp1^0,w,c
  5351  00368E  A4D8               	btfss	status,2,c
  5352  003690  EF4C  F01B         	goto	u4331
  5353  003694  EF4E  F01B         	goto	u4330
  5354  003698                     u4331:
  5355  003698  EF40  F01B         	goto	l3952
  5356  00369C                     u4330:
  5357  00369C                     l3956:
  5358  00369C  503E               	movf	___fltol@sign1^0,w,c
  5359  00369E  B4D8               	btfsc	status,2,c
  5360  0036A0  EF54  F01B         	goto	u4341
  5361  0036A4  EF56  F01B         	goto	u4340
  5362  0036A8                     u4341:
  5363  0036A8  EF5E  F01B         	goto	l3960
  5364  0036AC                     u4340:
  5365  0036AC  1E39               	comf	(___fltol@f1+3)^0,f,c
  5366  0036AE  1E38               	comf	(___fltol@f1+2)^0,f,c
  5367  0036B0  1E37               	comf	(___fltol@f1+1)^0,f,c
  5368  0036B2  6C36               	negf	___fltol@f1^0,c
  5369  0036B4  0E00               	movlw	0
  5370  0036B6  2237               	addwfc	(___fltol@f1+1)^0,f,c
  5371  0036B8  2238               	addwfc	(___fltol@f1+2)^0,f,c
  5372  0036BA  2239               	addwfc	(___fltol@f1+3)^0,f,c
  5373  0036BC                     l3960:
  5374  0036BC  C036  F036         	movff	___fltol@f1,?___fltol
  5375  0036C0  C037  F037         	movff	___fltol@f1+1,?___fltol+1
  5376  0036C4  C038  F038         	movff	___fltol@f1+2,?___fltol+2
  5377  0036C8  C039  F039         	movff	___fltol@f1+3,?___fltol+3
  5378  0036CC                     l551:
  5379  0036CC  0012               	return		;funcret
  5380  0036CE                     __end_of___fltol:
  5381                           	callstack 0
  5382                           
  5383 ;; *************** function ___flsub *****************
  5384 ;; Defined at:
  5385 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  b               4   28[COMRAM] long 
  5388 ;;  a               4   32[COMRAM] long 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  4   28[COMRAM] long 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5400 ;;      Params:         8       0       0       0       0       0       0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5403 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5404 ;;Total ram usage:        8 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    3
  5407 ;; This function calls:
  5408 ;;		___fladd
  5409 ;; This function is called by:
  5410 ;;		_efgtoa
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text17
  5415  004330                     __ptext17:
  5416                           	callstack 0
  5417  004330                     ___flsub:
  5418                           	callstack 21
  5419  004330  0E00               	movlw	0
  5420  004332  1A21               	xorwf	___flsub@a^0,f,c
  5421  004334  0E00               	movlw	0
  5422  004336  1A22               	xorwf	(___flsub@a+1)^0,f,c
  5423  004338  0E00               	movlw	0
  5424  00433A  1A23               	xorwf	(___flsub@a+2)^0,f,c
  5425  00433C  0E80               	movlw	128
  5426  00433E  1A24               	xorwf	(___flsub@a+3)^0,f,c
  5427  004340  C01D  F004         	movff	___flsub@b,___fladd@b
  5428  004344  C01E  F005         	movff	___flsub@b+1,___fladd@b+1
  5429  004348  C01F  F006         	movff	___flsub@b+2,___fladd@b+2
  5430  00434C  C020  F007         	movff	___flsub@b+3,___fladd@b+3
  5431  004350  C021  F008         	movff	___flsub@a,___fladd@a
  5432  004354  C022  F009         	movff	___flsub@a+1,___fladd@a+1
  5433  004358  C023  F00A         	movff	___flsub@a+2,___fladd@a+2
  5434  00435C  C024  F00B         	movff	___flsub@a+3,___fladd@a+3
  5435  004360  EC44  F00D         	call	___fladd	;wreg free
  5436  004364  C004  F01D         	movff	?___fladd,?___flsub
  5437  004368  C005  F01E         	movff	?___fladd+1,?___flsub+1
  5438  00436C  C006  F01F         	movff	?___fladd+2,?___flsub+2
  5439  004370  C007  F020         	movff	?___fladd+3,?___flsub+3
  5440  004374  0012               	return		;funcret
  5441  004376                     __end_of___flsub:
  5442                           	callstack 0
  5443                           
  5444 ;; *************** function ___fladd *****************
  5445 ;; Defined at:
  5446 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  b               4    3[COMRAM] long 
  5449 ;;  a               4    7[COMRAM] long 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;  grs             1   18[COMRAM] unsigned char 
  5452 ;;  bexp            1   17[COMRAM] unsigned char 
  5453 ;;  aexp            1   16[COMRAM] unsigned char 
  5454 ;;  signs           1   15[COMRAM] unsigned char 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  4    3[COMRAM] unsigned char 
  5457 ;; Registers used:
  5458 ;;		wreg, status,2, status,0
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5464 ;;      Params:         8       0       0       0       0       0       0       0       0
  5465 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5466 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5467 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5468 ;;Total ram usage:       16 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    2
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		___flsub
  5475 ;;		_efgtoa
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text18
  5480  001A88                     __ptext18:
  5481                           	callstack 0
  5482  001A88                     ___fladd:
  5483                           	callstack 21
  5484  001A88  5007               	movf	(___fladd@b+3)^0,w,c
  5485  001A8A  0B80               	andlw	128
  5486  001A8C  6E10               	movwf	___fladd@signs^0,c
  5487  001A8E  5007               	movf	(___fladd@b+3)^0,w,c
  5488  001A90  2407               	addwf	(___fladd@b+3)^0,w,c
  5489  001A92  6E12               	movwf	___fladd@bexp^0,c
  5490  001A94  AE06               	btfss	(___fladd@b+2)^0,7,c
  5491  001A96  EF4F  F00D         	goto	u3091
  5492  001A9A  EF51  F00D         	goto	u3090
  5493  001A9E                     u3091:
  5494  001A9E  EF52  F00D         	goto	l3216
  5495  001AA2                     u3090:
  5496  001AA2  8012               	bsf	___fladd@bexp^0,0,c
  5497  001AA4                     l3216:
  5498  001AA4  5012               	movf	___fladd@bexp^0,w,c
  5499  001AA6  B4D8               	btfsc	status,2,c
  5500  001AA8  EF58  F00D         	goto	u3101
  5501  001AAC  EF5A  F00D         	goto	u3100
  5502  001AB0                     u3101:
  5503  001AB0  EF6F  F00D         	goto	l3226
  5504  001AB4                     u3100:
  5505  001AB4  2812               	incf	___fladd@bexp^0,w,c
  5506  001AB6  A4D8               	btfss	status,2,c
  5507  001AB8  EF60  F00D         	goto	u3111
  5508  001ABC  EF62  F00D         	goto	u3110
  5509  001AC0                     u3111:
  5510  001AC0  EF6A  F00D         	goto	l3222
  5511  001AC4                     u3110:
  5512  001AC4  0E00               	movlw	0
  5513  001AC6  6E04               	movwf	___fladd@b^0,c
  5514  001AC8  0E00               	movlw	0
  5515  001ACA  6E05               	movwf	(___fladd@b+1)^0,c
  5516  001ACC  0E00               	movlw	0
  5517  001ACE  6E06               	movwf	(___fladd@b+2)^0,c
  5518  001AD0  0E00               	movlw	0
  5519  001AD2  6E07               	movwf	(___fladd@b+3)^0,c
  5520  001AD4                     l3222:
  5521  001AD4  8E06               	bsf	(___fladd@b+2)^0,7,c
  5522  001AD6  0E00               	movlw	0
  5523  001AD8  6E07               	movwf	(___fladd@b+3)^0,c
  5524  001ADA  EF77  F00D         	goto	l3228
  5525  001ADE                     l3226:
  5526  001ADE  0E00               	movlw	0
  5527  001AE0  6E04               	movwf	___fladd@b^0,c
  5528  001AE2  0E00               	movlw	0
  5529  001AE4  6E05               	movwf	(___fladd@b+1)^0,c
  5530  001AE6  0E00               	movlw	0
  5531  001AE8  6E06               	movwf	(___fladd@b+2)^0,c
  5532  001AEA  0E00               	movlw	0
  5533  001AEC  6E07               	movwf	(___fladd@b+3)^0,c
  5534  001AEE                     l3228:
  5535  001AEE  500B               	movf	(___fladd@a+3)^0,w,c
  5536  001AF0  0B80               	andlw	128
  5537  001AF2  6E11               	movwf	___fladd@aexp^0,c
  5538  001AF4  5010               	movf	___fladd@signs^0,w,c
  5539  001AF6  1811               	xorwf	___fladd@aexp^0,w,c
  5540  001AF8  B4D8               	btfsc	status,2,c
  5541  001AFA  EF81  F00D         	goto	u3121
  5542  001AFE  EF83  F00D         	goto	u3120
  5543  001B02                     u3121:
  5544  001B02  EF84  F00D         	goto	l3234
  5545  001B06                     u3120:
  5546  001B06  8C10               	bsf	___fladd@signs^0,6,c
  5547  001B08                     l3234:
  5548  001B08  500B               	movf	(___fladd@a+3)^0,w,c
  5549  001B0A  240B               	addwf	(___fladd@a+3)^0,w,c
  5550  001B0C  6E11               	movwf	___fladd@aexp^0,c
  5551  001B0E  AE0A               	btfss	(___fladd@a+2)^0,7,c
  5552  001B10  EF8C  F00D         	goto	u3131
  5553  001B14  EF8E  F00D         	goto	u3130
  5554  001B18                     u3131:
  5555  001B18  EF8F  F00D         	goto	l3240
  5556  001B1C                     u3130:
  5557  001B1C  8011               	bsf	___fladd@aexp^0,0,c
  5558  001B1E                     l3240:
  5559  001B1E  5011               	movf	___fladd@aexp^0,w,c
  5560  001B20  B4D8               	btfsc	status,2,c
  5561  001B22  EF95  F00D         	goto	u3141
  5562  001B26  EF97  F00D         	goto	u3140
  5563  001B2A                     u3141:
  5564  001B2A  EFAC  F00D         	goto	l3250
  5565  001B2E                     u3140:
  5566  001B2E  2811               	incf	___fladd@aexp^0,w,c
  5567  001B30  A4D8               	btfss	status,2,c
  5568  001B32  EF9D  F00D         	goto	u3151
  5569  001B36  EF9F  F00D         	goto	u3150
  5570  001B3A                     u3151:
  5571  001B3A  EFA7  F00D         	goto	l3246
  5572  001B3E                     u3150:
  5573  001B3E  0E00               	movlw	0
  5574  001B40  6E08               	movwf	___fladd@a^0,c
  5575  001B42  0E00               	movlw	0
  5576  001B44  6E09               	movwf	(___fladd@a+1)^0,c
  5577  001B46  0E00               	movlw	0
  5578  001B48  6E0A               	movwf	(___fladd@a+2)^0,c
  5579  001B4A  0E00               	movlw	0
  5580  001B4C  6E0B               	movwf	(___fladd@a+3)^0,c
  5581  001B4E                     l3246:
  5582  001B4E  8E0A               	bsf	(___fladd@a+2)^0,7,c
  5583  001B50  0E00               	movlw	0
  5584  001B52  6E0B               	movwf	(___fladd@a+3)^0,c
  5585  001B54  EFB4  F00D         	goto	l3252
  5586  001B58                     l3250:
  5587  001B58  0E00               	movlw	0
  5588  001B5A  6E08               	movwf	___fladd@a^0,c
  5589  001B5C  0E00               	movlw	0
  5590  001B5E  6E09               	movwf	(___fladd@a+1)^0,c
  5591  001B60  0E00               	movlw	0
  5592  001B62  6E0A               	movwf	(___fladd@a+2)^0,c
  5593  001B64  0E00               	movlw	0
  5594  001B66  6E0B               	movwf	(___fladd@a+3)^0,c
  5595  001B68                     l3252:
  5596  001B68  5012               	movf	___fladd@bexp^0,w,c
  5597  001B6A  5C11               	subwf	___fladd@aexp^0,w,c
  5598  001B6C  B0D8               	btfsc	status,0,c
  5599  001B6E  EFBB  F00D         	goto	u3161
  5600  001B72  EFBD  F00D         	goto	u3160
  5601  001B76                     u3161:
  5602  001B76  EFE4  F00D         	goto	l3288
  5603  001B7A                     u3160:
  5604  001B7A  AC10               	btfss	___fladd@signs^0,6,c
  5605  001B7C  EFC2  F00D         	goto	u3171
  5606  001B80  EFC4  F00D         	goto	u3170
  5607  001B84                     u3171:
  5608  001B84  EFC6  F00D         	goto	l3258
  5609  001B88                     u3170:
  5610  001B88  0E80               	movlw	128
  5611  001B8A  1A10               	xorwf	___fladd@signs^0,f,c
  5612  001B8C                     l3258:
  5613  001B8C  C012  F013         	movff	___fladd@bexp,___fladd@grs
  5614  001B90  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5615  001B94  C013  F011         	movff	___fladd@grs,___fladd@aexp
  5616  001B98  C004  F013         	movff	___fladd@b,___fladd@grs
  5617  001B9C  C008  F004         	movff	___fladd@a,___fladd@b
  5618  001BA0  C013  F008         	movff	___fladd@grs,___fladd@a
  5619  001BA4  C005  F013         	movff	___fladd@b+1,___fladd@grs
  5620  001BA8  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  5621  001BAC  C013  F009         	movff	___fladd@grs,___fladd@a+1
  5622  001BB0  C006  F013         	movff	___fladd@b+2,___fladd@grs
  5623  001BB4  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  5624  001BB8  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  5625  001BBC  C007  F013         	movff	___fladd@b+3,___fladd@grs
  5626  001BC0  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  5627  001BC4  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  5628  001BC8                     l3288:
  5629  001BC8  0E00               	movlw	0
  5630  001BCA  6E13               	movwf	___fladd@grs^0,c
  5631  001BCC  5012               	movf	___fladd@bexp^0,w,c
  5632  001BCE  C011  F00C         	movff	___fladd@aexp,??___fladd
  5633  001BD2  6A0D               	clrf	(??___fladd+1)^0,c
  5634  001BD4  5E0C               	subwf	??___fladd^0,f,c
  5635  001BD6  0E00               	movlw	0
  5636  001BD8  5A0D               	subwfb	(??___fladd+1)^0,f,c
  5637  001BDA  BE0D               	btfsc	(??___fladd+1)^0,7,c
  5638  001BDC  EFF9  F00D         	goto	u3181
  5639  001BE0  500D               	movf	(??___fladd+1)^0,w,c
  5640  001BE2  E109               	bnz	u3180
  5641  001BE4  0E1A               	movlw	26
  5642  001BE6  5C0C               	subwf	??___fladd^0,w,c
  5643  001BE8  A0D8               	btfss	status,0,c
  5644  001BEA  EFF9  F00D         	goto	u3181
  5645  001BEE  EFFB  F00D         	goto	u3180
  5646  001BF2                     u3181:
  5647  001BF2  EF32  F00E         	goto	l783
  5648  001BF6                     u3180:
  5649  001BF6  5004               	movf	___fladd@b^0,w,c
  5650  001BF8  1005               	iorwf	(___fladd@b+1)^0,w,c
  5651  001BFA  1006               	iorwf	(___fladd@b+2)^0,w,c
  5652  001BFC  1007               	iorwf	(___fladd@b+3)^0,w,c
  5653  001BFE  A4D8               	btfss	status,2,c
  5654  001C00  EF04  F00E         	goto	u3191
  5655  001C04  EF07  F00E         	goto	u3190
  5656  001C08                     u3191:
  5657  001C08  0E01               	movlw	1
  5658  001C0A  EF08  F00E         	goto	u3200
  5659  001C0E                     u3190:
  5660  001C0E  0E00               	movlw	0
  5661  001C10                     u3200:
  5662  001C10  6E13               	movwf	___fladd@grs^0,c
  5663  001C12  0E00               	movlw	0
  5664  001C14  6E04               	movwf	___fladd@b^0,c
  5665  001C16  0E00               	movlw	0
  5666  001C18  6E05               	movwf	(___fladd@b+1)^0,c
  5667  001C1A  0E00               	movlw	0
  5668  001C1C  6E06               	movwf	(___fladd@b+2)^0,c
  5669  001C1E  0E00               	movlw	0
  5670  001C20  6E07               	movwf	(___fladd@b+3)^0,c
  5671  001C22  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5672  001C26  EF3B  F00E         	goto	l782
  5673  001C2A                     l784:
  5674  001C2A  A013               	btfss	___fladd@grs^0,0,c
  5675  001C2C  EF1A  F00E         	goto	u3211
  5676  001C30  EF1C  F00E         	goto	u3210
  5677  001C34                     u3211:
  5678  001C34  EF22  F00E         	goto	l3300
  5679  001C38                     u3210:
  5680  001C38  90D8               	bcf	status,0,c
  5681  001C3A  3013               	rrcf	___fladd@grs^0,w,c
  5682  001C3C  0901               	iorlw	1
  5683  001C3E  6E13               	movwf	___fladd@grs^0,c
  5684  001C40  EF24  F00E         	goto	l3302
  5685  001C44                     l3300:
  5686  001C44  90D8               	bcf	status,0,c
  5687  001C46  3213               	rrcf	___fladd@grs^0,f,c
  5688  001C48                     l3302:
  5689  001C48  A004               	btfss	___fladd@b^0,0,c
  5690  001C4A  EF29  F00E         	goto	u3221
  5691  001C4E  EF2B  F00E         	goto	u3220
  5692  001C52                     u3221:
  5693  001C52  EF2C  F00E         	goto	l3306
  5694  001C56                     u3220:
  5695  001C56  8E13               	bsf	___fladd@grs^0,7,c
  5696  001C58                     l3306:
  5697  001C58  3407               	rlcf	(___fladd@b+3)^0,w,c
  5698  001C5A  3207               	rrcf	(___fladd@b+3)^0,f,c
  5699  001C5C  3206               	rrcf	(___fladd@b+2)^0,f,c
  5700  001C5E  3205               	rrcf	(___fladd@b+1)^0,f,c
  5701  001C60  3204               	rrcf	___fladd@b^0,f,c
  5702  001C62  2A12               	incf	___fladd@bexp^0,f,c
  5703  001C64                     l783:
  5704  001C64  5011               	movf	___fladd@aexp^0,w,c
  5705  001C66  5C12               	subwf	___fladd@bexp^0,w,c
  5706  001C68  A0D8               	btfss	status,0,c
  5707  001C6A  EF39  F00E         	goto	u3231
  5708  001C6E  EF3B  F00E         	goto	u3230
  5709  001C72                     u3231:
  5710  001C72  EF15  F00E         	goto	l784
  5711  001C76                     u3230:
  5712  001C76                     l782:
  5713  001C76  BC10               	btfsc	___fladd@signs^0,6,c
  5714  001C78  EF40  F00E         	goto	u3241
  5715  001C7C  EF42  F00E         	goto	u3240
  5716  001C80                     u3241:
  5717  001C80  EF82  F00E         	goto	l3334
  5718  001C84                     u3240:
  5719  001C84  5012               	movf	___fladd@bexp^0,w,c
  5720  001C86  A4D8               	btfss	status,2,c
  5721  001C88  EF48  F00E         	goto	u3251
  5722  001C8C  EF4A  F00E         	goto	u3250
  5723  001C90                     u3251:
  5724  001C90  EF54  F00E         	goto	l3316
  5725  001C94                     u3250:
  5726  001C94  0E00               	movlw	0
  5727  001C96  6E04               	movwf	?___fladd^0,c
  5728  001C98  0E00               	movlw	0
  5729  001C9A  6E05               	movwf	(?___fladd+1)^0,c
  5730  001C9C  0E00               	movlw	0
  5731  001C9E  6E06               	movwf	(?___fladd+2)^0,c
  5732  001CA0  0E00               	movlw	0
  5733  001CA2  6E07               	movwf	(?___fladd+3)^0,c
  5734  001CA4  EFA3  F00F         	goto	l791
  5735  001CA8                     l3316:
  5736  001CA8  5008               	movf	___fladd@a^0,w,c
  5737  001CAA  2604               	addwf	___fladd@b^0,f,c
  5738  001CAC  5009               	movf	(___fladd@a+1)^0,w,c
  5739  001CAE  2205               	addwfc	(___fladd@b+1)^0,f,c
  5740  001CB0  500A               	movf	(___fladd@a+2)^0,w,c
  5741  001CB2  2206               	addwfc	(___fladd@b+2)^0,f,c
  5742  001CB4  500B               	movf	(___fladd@a+3)^0,w,c
  5743  001CB6  2207               	addwfc	(___fladd@b+3)^0,f,c
  5744  001CB8  A007               	btfss	(___fladd@b+3)^0,0,c
  5745  001CBA  EF61  F00E         	goto	u3261
  5746  001CBE  EF63  F00E         	goto	u3260
  5747  001CC2                     u3261:
  5748  001CC2  EF0F  F00F         	goto	l3370
  5749  001CC6                     u3260:
  5750  001CC6  A013               	btfss	___fladd@grs^0,0,c
  5751  001CC8  EF68  F00E         	goto	u3271
  5752  001CCC  EF6A  F00E         	goto	u3270
  5753  001CD0                     u3271:
  5754  001CD0  EF70  F00E         	goto	l3324
  5755  001CD4                     u3270:
  5756  001CD4  90D8               	bcf	status,0,c
  5757  001CD6  3013               	rrcf	___fladd@grs^0,w,c
  5758  001CD8  0901               	iorlw	1
  5759  001CDA  6E13               	movwf	___fladd@grs^0,c
  5760  001CDC  EF72  F00E         	goto	l3326
  5761  001CE0                     l3324:
  5762  001CE0  90D8               	bcf	status,0,c
  5763  001CE2  3213               	rrcf	___fladd@grs^0,f,c
  5764  001CE4                     l3326:
  5765  001CE4  A004               	btfss	___fladd@b^0,0,c
  5766  001CE6  EF77  F00E         	goto	u3281
  5767  001CEA  EF79  F00E         	goto	u3280
  5768  001CEE                     u3281:
  5769  001CEE  EF7A  F00E         	goto	l3330
  5770  001CF2                     u3280:
  5771  001CF2  8E13               	bsf	___fladd@grs^0,7,c
  5772  001CF4                     l3330:
  5773  001CF4  3407               	rlcf	(___fladd@b+3)^0,w,c
  5774  001CF6  3207               	rrcf	(___fladd@b+3)^0,f,c
  5775  001CF8  3206               	rrcf	(___fladd@b+2)^0,f,c
  5776  001CFA  3205               	rrcf	(___fladd@b+1)^0,f,c
  5777  001CFC  3204               	rrcf	___fladd@b^0,f,c
  5778  001CFE  2A12               	incf	___fladd@bexp^0,f,c
  5779  001D00  EF0F  F00F         	goto	l3370
  5780  001D04                     l3334:
  5781  001D04  5008               	movf	___fladd@a^0,w,c
  5782  001D06  5C04               	subwf	___fladd@b^0,w,c
  5783  001D08  5009               	movf	(___fladd@a+1)^0,w,c
  5784  001D0A  5805               	subwfb	(___fladd@b+1)^0,w,c
  5785  001D0C  500A               	movf	(___fladd@a+2)^0,w,c
  5786  001D0E  5806               	subwfb	(___fladd@b+2)^0,w,c
  5787  001D10  5007               	movf	(___fladd@b+3)^0,w,c
  5788  001D12  0A80               	xorlw	128
  5789  001D14  6E0C               	movwf	??___fladd^0,c
  5790  001D16  500B               	movf	(___fladd@a+3)^0,w,c
  5791  001D18  0A80               	xorlw	128
  5792  001D1A  580C               	subwfb	??___fladd^0,w,c
  5793  001D1C  B0D8               	btfsc	status,0,c
  5794  001D1E  EF93  F00E         	goto	u3291
  5795  001D22  EF95  F00E         	goto	u3290
  5796  001D26                     u3291:
  5797  001D26  EFC0  F00E         	goto	l3344
  5798  001D2A                     u3290:
  5799  001D2A  5004               	movf	___fladd@b^0,w,c
  5800  001D2C  5C08               	subwf	___fladd@a^0,w,c
  5801  001D2E  6E0C               	movwf	??___fladd^0,c
  5802  001D30  5005               	movf	(___fladd@b+1)^0,w,c
  5803  001D32  5809               	subwfb	(___fladd@a+1)^0,w,c
  5804  001D34  6E0D               	movwf	(??___fladd+1)^0,c
  5805  001D36  5006               	movf	(___fladd@b+2)^0,w,c
  5806  001D38  580A               	subwfb	(___fladd@a+2)^0,w,c
  5807  001D3A  6E0E               	movwf	(??___fladd+2)^0,c
  5808  001D3C  5007               	movf	(___fladd@b+3)^0,w,c
  5809  001D3E  580B               	subwfb	(___fladd@a+3)^0,w,c
  5810  001D40  6E0F               	movwf	(??___fladd+3)^0,c
  5811  001D42  0EFF               	movlw	255
  5812  001D44  240C               	addwf	??___fladd^0,w,c
  5813  001D46  6E04               	movwf	___fladd@b^0,c
  5814  001D48  0EFF               	movlw	255
  5815  001D4A  200D               	addwfc	(??___fladd+1)^0,w,c
  5816  001D4C  6E05               	movwf	(___fladd@b+1)^0,c
  5817  001D4E  0EFF               	movlw	255
  5818  001D50  200E               	addwfc	(??___fladd+2)^0,w,c
  5819  001D52  6E06               	movwf	(___fladd@b+2)^0,c
  5820  001D54  0EFF               	movlw	255
  5821  001D56  200F               	addwfc	(??___fladd+3)^0,w,c
  5822  001D58  6E07               	movwf	(___fladd@b+3)^0,c
  5823  001D5A  0E80               	movlw	128
  5824  001D5C  1A10               	xorwf	___fladd@signs^0,f,c
  5825  001D5E  6C13               	negf	___fladd@grs^0,c
  5826  001D60  5013               	movf	___fladd@grs^0,w,c
  5827  001D62  A4D8               	btfss	status,2,c
  5828  001D64  EFB6  F00E         	goto	u3301
  5829  001D68  EFB8  F00E         	goto	u3300
  5830  001D6C                     u3301:
  5831  001D6C  EFC8  F00E         	goto	l799
  5832  001D70                     u3300:
  5833  001D70  0E01               	movlw	1
  5834  001D72  2604               	addwf	___fladd@b^0,f,c
  5835  001D74  0E00               	movlw	0
  5836  001D76  2205               	addwfc	(___fladd@b+1)^0,f,c
  5837  001D78  2206               	addwfc	(___fladd@b+2)^0,f,c
  5838  001D7A  2207               	addwfc	(___fladd@b+3)^0,f,c
  5839  001D7C  EFC8  F00E         	goto	l799
  5840  001D80                     l3344:
  5841  001D80  5008               	movf	___fladd@a^0,w,c
  5842  001D82  5E04               	subwf	___fladd@b^0,f,c
  5843  001D84  5009               	movf	(___fladd@a+1)^0,w,c
  5844  001D86  5A05               	subwfb	(___fladd@b+1)^0,f,c
  5845  001D88  500A               	movf	(___fladd@a+2)^0,w,c
  5846  001D8A  5A06               	subwfb	(___fladd@b+2)^0,f,c
  5847  001D8C  500B               	movf	(___fladd@a+3)^0,w,c
  5848  001D8E  5A07               	subwfb	(___fladd@b+3)^0,f,c
  5849  001D90                     l799:
  5850  001D90  5004               	movf	___fladd@b^0,w,c
  5851  001D92  1005               	iorwf	(___fladd@b+1)^0,w,c
  5852  001D94  1006               	iorwf	(___fladd@b+2)^0,w,c
  5853  001D96  1007               	iorwf	(___fladd@b+3)^0,w,c
  5854  001D98  A4D8               	btfss	status,2,c
  5855  001D9A  EFD1  F00E         	goto	u3311
  5856  001D9E  EFD3  F00E         	goto	u3310
  5857  001DA2                     u3311:
  5858  001DA2  EF08  F00F         	goto	l3368
  5859  001DA6                     u3310:
  5860  001DA6  5013               	movf	___fladd@grs^0,w,c
  5861  001DA8  A4D8               	btfss	status,2,c
  5862  001DAA  EFD9  F00E         	goto	u3321
  5863  001DAE  EFDB  F00E         	goto	u3320
  5864  001DB2                     u3321:
  5865  001DB2  EF08  F00F         	goto	l3368
  5866  001DB6                     u3320:
  5867  001DB6  0E00               	movlw	0
  5868  001DB8  6E04               	movwf	?___fladd^0,c
  5869  001DBA  0E00               	movlw	0
  5870  001DBC  6E05               	movwf	(?___fladd+1)^0,c
  5871  001DBE  0E00               	movlw	0
  5872  001DC0  6E06               	movwf	(?___fladd+2)^0,c
  5873  001DC2  0E00               	movlw	0
  5874  001DC4  6E07               	movwf	(?___fladd+3)^0,c
  5875  001DC6  EFA3  F00F         	goto	l791
  5876  001DCA                     l3352:
  5877  001DCA  90D8               	bcf	status,0,c
  5878  001DCC  3604               	rlcf	___fladd@b^0,f,c
  5879  001DCE  3605               	rlcf	(___fladd@b+1)^0,f,c
  5880  001DD0  3606               	rlcf	(___fladd@b+2)^0,f,c
  5881  001DD2  3607               	rlcf	(___fladd@b+3)^0,f,c
  5882  001DD4  AE13               	btfss	___fladd@grs^0,7,c
  5883  001DD6  EFEF  F00E         	goto	u3331
  5884  001DDA  EFF1  F00E         	goto	u3330
  5885  001DDE                     u3331:
  5886  001DDE  EFF2  F00E         	goto	l3358
  5887  001DE2                     u3330:
  5888  001DE2  8004               	bsf	___fladd@b^0,0,c
  5889  001DE4                     l3358:
  5890  001DE4  A013               	btfss	___fladd@grs^0,0,c
  5891  001DE6  EFF7  F00E         	goto	u3341
  5892  001DEA  EFF9  F00E         	goto	u3340
  5893  001DEE                     u3341:
  5894  001DEE  EFFD  F00E         	goto	l3362
  5895  001DF2                     u3340:
  5896  001DF2  80D8               	bsf	status,0,c
  5897  001DF4  3613               	rlcf	___fladd@grs^0,f,c
  5898  001DF6  EFFF  F00E         	goto	l3364
  5899  001DFA                     l3362:
  5900  001DFA  90D8               	bcf	status,0,c
  5901  001DFC  3613               	rlcf	___fladd@grs^0,f,c
  5902  001DFE                     l3364:
  5903  001DFE  5012               	movf	___fladd@bexp^0,w,c
  5904  001E00  B4D8               	btfsc	status,2,c
  5905  001E02  EF05  F00F         	goto	u3351
  5906  001E06  EF07  F00F         	goto	u3350
  5907  001E0A                     u3351:
  5908  001E0A  EF08  F00F         	goto	l3368
  5909  001E0E                     u3350:
  5910  001E0E  0612               	decf	___fladd@bexp^0,f,c
  5911  001E10                     l3368:
  5912  001E10  AE06               	btfss	(___fladd@b+2)^0,7,c
  5913  001E12  EF0D  F00F         	goto	u3361
  5914  001E16  EF0F  F00F         	goto	u3360
  5915  001E1A                     u3361:
  5916  001E1A  EFE5  F00E         	goto	l3352
  5917  001E1E                     u3360:
  5918  001E1E                     l3370:
  5919  001E1E  0E00               	movlw	0
  5920  001E20  6E11               	movwf	___fladd@aexp^0,c
  5921  001E22  AE13               	btfss	___fladd@grs^0,7,c
  5922  001E24  EF16  F00F         	goto	u3371
  5923  001E28  EF18  F00F         	goto	u3370
  5924  001E2C                     u3371:
  5925  001E2C  EF30  F00F         	goto	l808
  5926  001E30                     u3370:
  5927  001E30  C013  F00C         	movff	___fladd@grs,??___fladd
  5928  001E34  0E7F               	movlw	127
  5929  001E36  160C               	andwf	??___fladd^0,f,c
  5930  001E38  B4D8               	btfsc	status,2,c
  5931  001E3A  EF21  F00F         	goto	u3381
  5932  001E3E  EF23  F00F         	goto	u3380
  5933  001E42                     u3381:
  5934  001E42  EF27  F00F         	goto	l809
  5935  001E46                     u3380:
  5936  001E46                     l3376:
  5937  001E46  0E01               	movlw	1
  5938  001E48  6E11               	movwf	___fladd@aexp^0,c
  5939  001E4A  EF30  F00F         	goto	l808
  5940  001E4E                     l809:
  5941  001E4E  A004               	btfss	___fladd@b^0,0,c
  5942  001E50  EF2C  F00F         	goto	u3391
  5943  001E54  EF2E  F00F         	goto	u3390
  5944  001E58                     u3391:
  5945  001E58  EF30  F00F         	goto	l808
  5946  001E5C                     u3390:
  5947  001E5C  EF23  F00F         	goto	l3376
  5948  001E60                     l808:
  5949  001E60  5011               	movf	___fladd@aexp^0,w,c
  5950  001E62  B4D8               	btfsc	status,2,c
  5951  001E64  EF36  F00F         	goto	u3401
  5952  001E68  EF38  F00F         	goto	u3400
  5953  001E6C                     u3401:
  5954  001E6C  EF63  F00F         	goto	l3388
  5955  001E70                     u3400:
  5956  001E70  0E01               	movlw	1
  5957  001E72  2604               	addwf	___fladd@b^0,f,c
  5958  001E74  0E00               	movlw	0
  5959  001E76  2205               	addwfc	(___fladd@b+1)^0,f,c
  5960  001E78  2206               	addwfc	(___fladd@b+2)^0,f,c
  5961  001E7A  2207               	addwfc	(___fladd@b+3)^0,f,c
  5962  001E7C  A007               	btfss	(___fladd@b+3)^0,0,c
  5963  001E7E  EF43  F00F         	goto	u3411
  5964  001E82  EF45  F00F         	goto	u3410
  5965  001E86                     u3411:
  5966  001E86  EF63  F00F         	goto	l3388
  5967  001E8A                     u3410:
  5968  001E8A  C004  F00C         	movff	___fladd@b,??___fladd
  5969  001E8E  C005  F00D         	movff	___fladd@b+1,??___fladd+1
  5970  001E92  C006  F00E         	movff	___fladd@b+2,??___fladd+2
  5971  001E96  C007  F00F         	movff	___fladd@b+3,??___fladd+3
  5972  001E9A  340F               	rlcf	(??___fladd+3)^0,w,c
  5973  001E9C  320F               	rrcf	(??___fladd+3)^0,f,c
  5974  001E9E  320E               	rrcf	(??___fladd+2)^0,f,c
  5975  001EA0  320D               	rrcf	(??___fladd+1)^0,f,c
  5976  001EA2  320C               	rrcf	??___fladd^0,f,c
  5977  001EA4  C00C  F004         	movff	??___fladd,___fladd@b
  5978  001EA8  C00D  F005         	movff	??___fladd+1,___fladd@b+1
  5979  001EAC  C00E  F006         	movff	??___fladd+2,___fladd@b+2
  5980  001EB0  C00F  F007         	movff	??___fladd+3,___fladd@b+3
  5981  001EB4  2812               	incf	___fladd@bexp^0,w,c
  5982  001EB6  B4D8               	btfsc	status,2,c
  5983  001EB8  EF60  F00F         	goto	u3421
  5984  001EBC  EF62  F00F         	goto	u3420
  5985  001EC0                     u3421:
  5986  001EC0  EF63  F00F         	goto	l3388
  5987  001EC4                     u3420:
  5988  001EC4  2A12               	incf	___fladd@bexp^0,f,c
  5989  001EC6                     l3388:
  5990  001EC6  2812               	incf	___fladd@bexp^0,w,c
  5991  001EC8  B4D8               	btfsc	status,2,c
  5992  001ECA  EF69  F00F         	goto	u3431
  5993  001ECE  EF6B  F00F         	goto	u3430
  5994  001ED2                     u3431:
  5995  001ED2  EF73  F00F         	goto	l3392
  5996  001ED6                     u3430:
  5997  001ED6  5012               	movf	___fladd@bexp^0,w,c
  5998  001ED8  A4D8               	btfss	status,2,c
  5999  001EDA  EF71  F00F         	goto	u3441
  6000  001EDE  EF73  F00F         	goto	u3440
  6001  001EE2                     u3441:
  6002  001EE2  EF85  F00F         	goto	l3396
  6003  001EE6                     u3440:
  6004  001EE6                     l3392:
  6005  001EE6  0E00               	movlw	0
  6006  001EE8  6E04               	movwf	___fladd@b^0,c
  6007  001EEA  0E00               	movlw	0
  6008  001EEC  6E05               	movwf	(___fladd@b+1)^0,c
  6009  001EEE  0E00               	movlw	0
  6010  001EF0  6E06               	movwf	(___fladd@b+2)^0,c
  6011  001EF2  0E00               	movlw	0
  6012  001EF4  6E07               	movwf	(___fladd@b+3)^0,c
  6013  001EF6  5012               	movf	___fladd@bexp^0,w,c
  6014  001EF8  A4D8               	btfss	status,2,c
  6015  001EFA  EF81  F00F         	goto	u3451
  6016  001EFE  EF83  F00F         	goto	u3450
  6017  001F02                     u3451:
  6018  001F02  EF85  F00F         	goto	l3396
  6019  001F06                     u3450:
  6020  001F06  0E00               	movlw	0
  6021  001F08  6E10               	movwf	___fladd@signs^0,c
  6022  001F0A                     l3396:
  6023  001F0A  A012               	btfss	___fladd@bexp^0,0,c
  6024  001F0C  EF8A  F00F         	goto	u3461
  6025  001F10  EF8C  F00F         	goto	u3460
  6026  001F14                     u3461:
  6027  001F14  EF8F  F00F         	goto	l3400
  6028  001F18                     u3460:
  6029  001F18  8E06               	bsf	(___fladd@b+2)^0,7,c
  6030  001F1A  EF90  F00F         	goto	l3402
  6031  001F1E                     l3400:
  6032  001F1E  9E06               	bcf	(___fladd@b+2)^0,7,c
  6033  001F20                     l3402:
  6034  001F20  90D8               	bcf	status,0,c
  6035  001F22  3012               	rrcf	___fladd@bexp^0,w,c
  6036  001F24  6E07               	movwf	(___fladd@b+3)^0,c
  6037  001F26  AE10               	btfss	___fladd@signs^0,7,c
  6038  001F28  EF98  F00F         	goto	u3471
  6039  001F2C  EF9A  F00F         	goto	u3470
  6040  001F30                     u3471:
  6041  001F30  EF9B  F00F         	goto	l3408
  6042  001F34                     u3470:
  6043  001F34  8E07               	bsf	(___fladd@b+3)^0,7,c
  6044  001F36                     l3408:
  6045  001F36  C004  F004         	movff	___fladd@b,?___fladd
  6046  001F3A  C005  F005         	movff	___fladd@b+1,?___fladd+1
  6047  001F3E  C006  F006         	movff	___fladd@b+2,?___fladd+2
  6048  001F42  C007  F007         	movff	___fladd@b+3,?___fladd+3
  6049  001F46                     l791:
  6050  001F46  0012               	return		;funcret
  6051  001F48                     __end_of___fladd:
  6052                           	callstack 0
  6053                           
  6054 ;; *************** function ___flneg *****************
  6055 ;; Defined at:
  6056 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flneg.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  f1              4    3[COMRAM] unsigned char 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;		None
  6061 ;; Return value:  Size  Location     Type
  6062 ;;                  4    3[COMRAM] unsigned char 
  6063 ;; Registers used:
  6064 ;;		wreg, status,2, status,0
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6070 ;;      Params:         4       0       0       0       0       0       0       0       0
  6071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6073 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6074 ;;Total ram usage:        4 bytes
  6075 ;; Hardware stack levels used:    1
  6076 ;; Hardware stack levels required when called:    2
  6077 ;; This function calls:
  6078 ;;		Nothing
  6079 ;; This function is called by:
  6080 ;;		_efgtoa
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text19
  6085  00446E                     __ptext19:
  6086                           	callstack 0
  6087  00446E                     ___flneg:
  6088                           	callstack 22
  6089  00446E  5004               	movf	___flneg@f1^0,w,c
  6090  004470  1005               	iorwf	(___flneg@f1+1)^0,w,c
  6091  004472  1006               	iorwf	(___flneg@f1+2)^0,w,c
  6092  004474  1007               	iorwf	(___flneg@f1+3)^0,w,c
  6093  004476  B4D8               	btfsc	status,2,c
  6094  004478  EF40  F022         	goto	u4271
  6095  00447C  EF42  F022         	goto	u4270
  6096  004480                     u4271:
  6097  004480  EF4A  F022         	goto	l3916
  6098  004484                     u4270:
  6099  004484  0E00               	movlw	0
  6100  004486  1A04               	xorwf	___flneg@f1^0,f,c
  6101  004488  0E00               	movlw	0
  6102  00448A  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  6103  00448C  0E00               	movlw	0
  6104  00448E  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  6105  004490  0E80               	movlw	128
  6106  004492  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  6107  004494                     l3916:
  6108  004494  C004  F004         	movff	___flneg@f1,?___flneg
  6109  004498  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  6110  00449C  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  6111  0044A0  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  6112  0044A4  0012               	return		;funcret
  6113  0044A6                     __end_of___flneg:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function ___flmul *****************
  6117 ;; Defined at:
  6118 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  b               4    3[COMRAM] unsigned char 
  6121 ;;  a               4    7[COMRAM] unsigned char 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  prod            4   22[COMRAM] struct .
  6124 ;;  grs             4   16[COMRAM] unsigned long 
  6125 ;;  temp            2   26[COMRAM] struct .
  6126 ;;  bexp            1   21[COMRAM] unsigned char 
  6127 ;;  aexp            1   20[COMRAM] unsigned char 
  6128 ;;  sign            1   15[COMRAM] unsigned char 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  4    3[COMRAM] unsigned char 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0, prodl, prodh
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6138 ;;      Params:         8       0       0       0       0       0       0       0       0
  6139 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6140 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6141 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6142 ;;Total ram usage:       25 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; Hardware stack levels required when called:    2
  6145 ;; This function calls:
  6146 ;;		Nothing
  6147 ;; This function is called by:
  6148 ;;		_appADC
  6149 ;;		_appBat
  6150 ;;		_efgtoa
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text20
  6155  001F48                     __ptext20:
  6156                           	callstack 0
  6157  001F48                     ___flmul:
  6158                           	callstack 22
  6159  001F48  5007               	movf	(___flmul@b+3)^0,w,c
  6160  001F4A  0B80               	andlw	128
  6161  001F4C  6E10               	movwf	___flmul@sign^0,c
  6162  001F4E  5007               	movf	(___flmul@b+3)^0,w,c
  6163  001F50  2407               	addwf	(___flmul@b+3)^0,w,c
  6164  001F52  6E16               	movwf	___flmul@bexp^0,c
  6165  001F54  AE06               	btfss	(___flmul@b+2)^0,7,c
  6166  001F56  EFAF  F00F         	goto	u3881
  6167  001F5A  EFB1  F00F         	goto	u3880
  6168  001F5E                     u3881:
  6169  001F5E  EFB2  F00F         	goto	l3664
  6170  001F62                     u3880:
  6171  001F62  8016               	bsf	___flmul@bexp^0,0,c
  6172  001F64                     l3664:
  6173  001F64  5016               	movf	___flmul@bexp^0,w,c
  6174  001F66  B4D8               	btfsc	status,2,c
  6175  001F68  EFB8  F00F         	goto	u3891
  6176  001F6C  EFBA  F00F         	goto	u3890
  6177  001F70                     u3891:
  6178  001F70  EFCD  F00F         	goto	l3672
  6179  001F74                     u3890:
  6180  001F74  2816               	incf	___flmul@bexp^0,w,c
  6181  001F76  A4D8               	btfss	status,2,c
  6182  001F78  EFC0  F00F         	goto	u3901
  6183  001F7C  EFC2  F00F         	goto	u3900
  6184  001F80                     u3901:
  6185  001F80  EFCA  F00F         	goto	l3670
  6186  001F84                     u3900:
  6187  001F84  0E00               	movlw	0
  6188  001F86  6E04               	movwf	___flmul@b^0,c
  6189  001F88  0E00               	movlw	0
  6190  001F8A  6E05               	movwf	(___flmul@b+1)^0,c
  6191  001F8C  0E00               	movlw	0
  6192  001F8E  6E06               	movwf	(___flmul@b+2)^0,c
  6193  001F90  0E00               	movlw	0
  6194  001F92  6E07               	movwf	(___flmul@b+3)^0,c
  6195  001F94                     l3670:
  6196  001F94  8E06               	bsf	(___flmul@b+2)^0,7,c
  6197  001F96  EFD5  F00F         	goto	l3674
  6198  001F9A                     l3672:
  6199  001F9A  0E00               	movlw	0
  6200  001F9C  6E04               	movwf	___flmul@b^0,c
  6201  001F9E  0E00               	movlw	0
  6202  001FA0  6E05               	movwf	(___flmul@b+1)^0,c
  6203  001FA2  0E00               	movlw	0
  6204  001FA4  6E06               	movwf	(___flmul@b+2)^0,c
  6205  001FA6  0E00               	movlw	0
  6206  001FA8  6E07               	movwf	(___flmul@b+3)^0,c
  6207  001FAA                     l3674:
  6208  001FAA  500B               	movf	(___flmul@a+3)^0,w,c
  6209  001FAC  0B80               	andlw	128
  6210  001FAE  1A10               	xorwf	___flmul@sign^0,f,c
  6211  001FB0  500B               	movf	(___flmul@a+3)^0,w,c
  6212  001FB2  240B               	addwf	(___flmul@a+3)^0,w,c
  6213  001FB4  6E15               	movwf	___flmul@aexp^0,c
  6214  001FB6  AE0A               	btfss	(___flmul@a+2)^0,7,c
  6215  001FB8  EFE0  F00F         	goto	u3911
  6216  001FBC  EFE2  F00F         	goto	u3910
  6217  001FC0                     u3911:
  6218  001FC0  EFE3  F00F         	goto	l3682
  6219  001FC4                     u3910:
  6220  001FC4  8015               	bsf	___flmul@aexp^0,0,c
  6221  001FC6                     l3682:
  6222  001FC6  5015               	movf	___flmul@aexp^0,w,c
  6223  001FC8  B4D8               	btfsc	status,2,c
  6224  001FCA  EFE9  F00F         	goto	u3921
  6225  001FCE  EFEB  F00F         	goto	u3920
  6226  001FD2                     u3921:
  6227  001FD2  EFFE  F00F         	goto	l3690
  6228  001FD6                     u3920:
  6229  001FD6  2815               	incf	___flmul@aexp^0,w,c
  6230  001FD8  A4D8               	btfss	status,2,c
  6231  001FDA  EFF1  F00F         	goto	u3931
  6232  001FDE  EFF3  F00F         	goto	u3930
  6233  001FE2                     u3931:
  6234  001FE2  EFFB  F00F         	goto	l3688
  6235  001FE6                     u3930:
  6236  001FE6  0E00               	movlw	0
  6237  001FE8  6E08               	movwf	___flmul@a^0,c
  6238  001FEA  0E00               	movlw	0
  6239  001FEC  6E09               	movwf	(___flmul@a+1)^0,c
  6240  001FEE  0E00               	movlw	0
  6241  001FF0  6E0A               	movwf	(___flmul@a+2)^0,c
  6242  001FF2  0E00               	movlw	0
  6243  001FF4  6E0B               	movwf	(___flmul@a+3)^0,c
  6244  001FF6                     l3688:
  6245  001FF6  8E0A               	bsf	(___flmul@a+2)^0,7,c
  6246  001FF8  EF06  F010         	goto	l868
  6247  001FFC                     l3690:
  6248  001FFC  0E00               	movlw	0
  6249  001FFE  6E08               	movwf	___flmul@a^0,c
  6250  002000  0E00               	movlw	0
  6251  002002  6E09               	movwf	(___flmul@a+1)^0,c
  6252  002004  0E00               	movlw	0
  6253  002006  6E0A               	movwf	(___flmul@a+2)^0,c
  6254  002008  0E00               	movlw	0
  6255  00200A  6E0B               	movwf	(___flmul@a+3)^0,c
  6256  00200C                     l868:
  6257  00200C  5015               	movf	___flmul@aexp^0,w,c
  6258  00200E  B4D8               	btfsc	status,2,c
  6259  002010  EF0C  F010         	goto	u3941
  6260  002014  EF0E  F010         	goto	u3940
  6261  002018                     u3941:
  6262  002018  EF16  F010         	goto	l3694
  6263  00201C                     u3940:
  6264  00201C  5016               	movf	___flmul@bexp^0,w,c
  6265  00201E  A4D8               	btfss	status,2,c
  6266  002020  EF14  F010         	goto	u3951
  6267  002024  EF16  F010         	goto	u3950
  6268  002028                     u3951:
  6269  002028  EF20  F010         	goto	l3698
  6270  00202C                     u3950:
  6271  00202C                     l3694:
  6272  00202C  0E00               	movlw	0
  6273  00202E  6E04               	movwf	?___flmul^0,c
  6274  002030  0E00               	movlw	0
  6275  002032  6E05               	movwf	(?___flmul+1)^0,c
  6276  002034  0E00               	movlw	0
  6277  002036  6E06               	movwf	(?___flmul+2)^0,c
  6278  002038  0E00               	movlw	0
  6279  00203A  6E07               	movwf	(?___flmul+3)^0,c
  6280  00203C  EFB8  F011         	goto	l872
  6281  002040                     l3698:
  6282  002040  500A               	movf	(___flmul@a+2)^0,w,c
  6283  002042  0204               	mulwf	___flmul@b^0,c
  6284  002044  CFF3 F01B          	movff	prodl,___flmul@temp
  6285  002048  CFF4 F01C          	movff	prodh,___flmul@temp+1
  6286  00204C  501B               	movf	___flmul@temp^0,w,c
  6287  00204E  6E11               	movwf	___flmul@grs^0,c
  6288  002050  6A12               	clrf	(___flmul@grs+1)^0,c
  6289  002052  6A13               	clrf	(___flmul@grs+2)^0,c
  6290  002054  6A14               	clrf	(___flmul@grs+3)^0,c
  6291  002056  501C               	movf	(___flmul@temp+1)^0,w,c
  6292  002058  6E17               	movwf	___flmul@prod^0,c
  6293  00205A  6A18               	clrf	(___flmul@prod+1)^0,c
  6294  00205C  6A19               	clrf	(___flmul@prod+2)^0,c
  6295  00205E  6A1A               	clrf	(___flmul@prod+3)^0,c
  6296  002060  5009               	movf	(___flmul@a+1)^0,w,c
  6297  002062  0205               	mulwf	(___flmul@b+1)^0,c
  6298  002064  CFF3 F01B          	movff	prodl,___flmul@temp
  6299  002068  CFF4 F01C          	movff	prodh,___flmul@temp+1
  6300  00206C  501B               	movf	___flmul@temp^0,w,c
  6301  00206E  2611               	addwf	___flmul@grs^0,f,c
  6302  002070  0E00               	movlw	0
  6303  002072  2212               	addwfc	(___flmul@grs+1)^0,f,c
  6304  002074  2213               	addwfc	(___flmul@grs+2)^0,f,c
  6305  002076  2214               	addwfc	(___flmul@grs+3)^0,f,c
  6306  002078  501C               	movf	(___flmul@temp+1)^0,w,c
  6307  00207A  2617               	addwf	___flmul@prod^0,f,c
  6308  00207C  0E00               	movlw	0
  6309  00207E  2218               	addwfc	(___flmul@prod+1)^0,f,c
  6310  002080  2219               	addwfc	(___flmul@prod+2)^0,f,c
  6311  002082  221A               	addwfc	(___flmul@prod+3)^0,f,c
  6312  002084  5008               	movf	___flmul@a^0,w,c
  6313  002086  0206               	mulwf	(___flmul@b+2)^0,c
  6314  002088  CFF3 F01B          	movff	prodl,___flmul@temp
  6315  00208C  CFF4 F01C          	movff	prodh,___flmul@temp+1
  6316  002090  501B               	movf	___flmul@temp^0,w,c
  6317  002092  2611               	addwf	___flmul@grs^0,f,c
  6318  002094  0E00               	movlw	0
  6319  002096  2212               	addwfc	(___flmul@grs+1)^0,f,c
  6320  002098  2213               	addwfc	(___flmul@grs+2)^0,f,c
  6321  00209A  2214               	addwfc	(___flmul@grs+3)^0,f,c
  6322  00209C  501C               	movf	(___flmul@temp+1)^0,w,c
  6323  00209E  2617               	addwf	___flmul@prod^0,f,c
  6324  0020A0  0E00               	movlw	0
  6325  0020A2  2218               	addwfc	(___flmul@prod+1)^0,f,c
  6326  0020A4  2219               	addwfc	(___flmul@prod+2)^0,f,c
  6327  0020A6  221A               	addwfc	(___flmul@prod+3)^0,f,c
  6328  0020A8  C013  F014         	movff	___flmul@grs+2,___flmul@grs+3
  6329  0020AC  C012  F013         	movff	___flmul@grs+1,___flmul@grs+2
  6330  0020B0  C011  F012         	movff	___flmul@grs,___flmul@grs+1
  6331  0020B4  6A11               	clrf	___flmul@grs^0,c
  6332  0020B6  5008               	movf	___flmul@a^0,w,c
  6333  0020B8  0205               	mulwf	(___flmul@b+1)^0,c
  6334  0020BA  CFF3 F01B          	movff	prodl,___flmul@temp
  6335  0020BE  CFF4 F01C          	movff	prodh,___flmul@temp+1
  6336  0020C2  501B               	movf	___flmul@temp^0,w,c
  6337  0020C4  2611               	addwf	___flmul@grs^0,f,c
  6338  0020C6  501C               	movf	(___flmul@temp+1)^0,w,c
  6339  0020C8  2212               	addwfc	(___flmul@grs+1)^0,f,c
  6340  0020CA  0E00               	movlw	0
  6341  0020CC  2213               	addwfc	(___flmul@grs+2)^0,f,c
  6342  0020CE  0E00               	movlw	0
  6343  0020D0  2214               	addwfc	(___flmul@grs+3)^0,f,c
  6344  0020D2  5009               	movf	(___flmul@a+1)^0,w,c
  6345  0020D4  0204               	mulwf	___flmul@b^0,c
  6346  0020D6  CFF3 F01B          	movff	prodl,___flmul@temp
  6347  0020DA  CFF4 F01C          	movff	prodh,___flmul@temp+1
  6348  0020DE  501B               	movf	___flmul@temp^0,w,c
  6349  0020E0  2611               	addwf	___flmul@grs^0,f,c
  6350  0020E2  501C               	movf	(___flmul@temp+1)^0,w,c
  6351  0020E4  2212               	addwfc	(___flmul@grs+1)^0,f,c
  6352  0020E6  0E00               	movlw	0
  6353  0020E8  2213               	addwfc	(___flmul@grs+2)^0,f,c
  6354  0020EA  0E00               	movlw	0
  6355  0020EC  2214               	addwfc	(___flmul@grs+3)^0,f,c
  6356  0020EE  C013  F014         	movff	___flmul@grs+2,___flmul@grs+3
  6357  0020F2  C012  F013         	movff	___flmul@grs+1,___flmul@grs+2
  6358  0020F6  C011  F012         	movff	___flmul@grs,___flmul@grs+1
  6359  0020FA  6A11               	clrf	___flmul@grs^0,c
  6360  0020FC  5008               	movf	___flmul@a^0,w,c
  6361  0020FE  0204               	mulwf	___flmul@b^0,c
  6362  002100  CFF3 F01B          	movff	prodl,___flmul@temp
  6363  002104  CFF4 F01C          	movff	prodh,___flmul@temp+1
  6364  002108  501B               	movf	___flmul@temp^0,w,c
  6365  00210A  2611               	addwf	___flmul@grs^0,f,c
  6366  00210C  501C               	movf	(___flmul@temp+1)^0,w,c
  6367  00210E  2212               	addwfc	(___flmul@grs+1)^0,f,c
  6368  002110  0E00               	movlw	0
  6369  002112  2213               	addwfc	(___flmul@grs+2)^0,f,c
  6370  002114  0E00               	movlw	0
  6371  002116  2214               	addwfc	(___flmul@grs+3)^0,f,c
  6372  002118  500A               	movf	(___flmul@a+2)^0,w,c
  6373  00211A  0205               	mulwf	(___flmul@b+1)^0,c
  6374  00211C  CFF3 F01B          	movff	prodl,___flmul@temp
  6375  002120  CFF4 F01C          	movff	prodh,___flmul@temp+1
  6376  002124  501B               	movf	___flmul@temp^0,w,c
  6377  002126  2617               	addwf	___flmul@prod^0,f,c
  6378  002128  501C               	movf	(___flmul@temp+1)^0,w,c
  6379  00212A  2218               	addwfc	(___flmul@prod+1)^0,f,c
  6380  00212C  0E00               	movlw	0
  6381  00212E  2219               	addwfc	(___flmul@prod+2)^0,f,c
  6382  002130  0E00               	movlw	0
  6383  002132  221A               	addwfc	(___flmul@prod+3)^0,f,c
  6384  002134  5009               	movf	(___flmul@a+1)^0,w,c
  6385  002136  0206               	mulwf	(___flmul@b+2)^0,c
  6386  002138  CFF3 F01B          	movff	prodl,___flmul@temp
  6387  00213C  CFF4 F01C          	movff	prodh,___flmul@temp+1
  6388  002140  501B               	movf	___flmul@temp^0,w,c
  6389  002142  2617               	addwf	___flmul@prod^0,f,c
  6390  002144  501C               	movf	(___flmul@temp+1)^0,w,c
  6391  002146  2218               	addwfc	(___flmul@prod+1)^0,f,c
  6392  002148  0E00               	movlw	0
  6393  00214A  2219               	addwfc	(___flmul@prod+2)^0,f,c
  6394  00214C  0E00               	movlw	0
  6395  00214E  221A               	addwfc	(___flmul@prod+3)^0,f,c
  6396  002150  500A               	movf	(___flmul@a+2)^0,w,c
  6397  002152  0206               	mulwf	(___flmul@b+2)^0,c
  6398  002154  CFF3 F01B          	movff	prodl,___flmul@temp
  6399  002158  CFF4 F01C          	movff	prodh,___flmul@temp+1
  6400  00215C  501B               	movf	___flmul@temp^0,w,c
  6401  00215E  6E0C               	movwf	??___flmul^0,c
  6402  002160  501C               	movf	(___flmul@temp+1)^0,w,c
  6403  002162  6E0D               	movwf	(??___flmul+1)^0,c
  6404  002164  6A0E               	clrf	(??___flmul+2)^0,c
  6405  002166  6A0F               	clrf	(??___flmul+3)^0,c
  6406  002168  C00E  F00F         	movff	??___flmul+2,??___flmul+3
  6407  00216C  C00D  F00E         	movff	??___flmul+1,??___flmul+2
  6408  002170  C00C  F00D         	movff	??___flmul,??___flmul+1
  6409  002174  6A0C               	clrf	??___flmul^0,c
  6410  002176  500C               	movf	??___flmul^0,w,c
  6411  002178  2617               	addwf	___flmul@prod^0,f,c
  6412  00217A  500D               	movf	(??___flmul+1)^0,w,c
  6413  00217C  2218               	addwfc	(___flmul@prod+1)^0,f,c
  6414  00217E  500E               	movf	(??___flmul+2)^0,w,c
  6415  002180  2219               	addwfc	(___flmul@prod+2)^0,f,c
  6416  002182  500F               	movf	(??___flmul+3)^0,w,c
  6417  002184  221A               	addwfc	(___flmul@prod+3)^0,f,c
  6418  002186  C011  F00C         	movff	___flmul@grs,??___flmul
  6419  00218A  C012  F00D         	movff	___flmul@grs+1,??___flmul+1
  6420  00218E  C013  F00E         	movff	___flmul@grs+2,??___flmul+2
  6421  002192  C014  F00F         	movff	___flmul@grs+3,??___flmul+3
  6422  002196  0E19               	movlw	25
  6423  002198  EFD3  F010         	goto	u3960
  6424  00219C                     u3965:
  6425  00219C  90D8               	bcf	status,0,c
  6426  00219E  320F               	rrcf	(??___flmul+3)^0,f,c
  6427  0021A0  320E               	rrcf	(??___flmul+2)^0,f,c
  6428  0021A2  320D               	rrcf	(??___flmul+1)^0,f,c
  6429  0021A4  320C               	rrcf	??___flmul^0,f,c
  6430  0021A6                     u3960:
  6431  0021A6  2EE8               	decfsz	wreg,f,c
  6432  0021A8  EFCE  F010         	goto	u3965
  6433  0021AC  500C               	movf	??___flmul^0,w,c
  6434  0021AE  2617               	addwf	___flmul@prod^0,f,c
  6435  0021B0  500D               	movf	(??___flmul+1)^0,w,c
  6436  0021B2  2218               	addwfc	(___flmul@prod+1)^0,f,c
  6437  0021B4  500E               	movf	(??___flmul+2)^0,w,c
  6438  0021B6  2219               	addwfc	(___flmul@prod+2)^0,f,c
  6439  0021B8  500F               	movf	(??___flmul+3)^0,w,c
  6440  0021BA  221A               	addwfc	(___flmul@prod+3)^0,f,c
  6441  0021BC  C013  F014         	movff	___flmul@grs+2,___flmul@grs+3
  6442  0021C0  C012  F013         	movff	___flmul@grs+1,___flmul@grs+2
  6443  0021C4  C011  F012         	movff	___flmul@grs,___flmul@grs+1
  6444  0021C8  6A11               	clrf	___flmul@grs^0,c
  6445  0021CA  5015               	movf	___flmul@aexp^0,w,c
  6446  0021CC  C016  F00C         	movff	___flmul@bexp,??___flmul
  6447  0021D0  6A0D               	clrf	(??___flmul+1)^0,c
  6448  0021D2  260C               	addwf	??___flmul^0,f,c
  6449  0021D4  0E00               	movlw	0
  6450  0021D6  220D               	addwfc	(??___flmul+1)^0,f,c
  6451  0021D8  0E82               	movlw	130
  6452  0021DA  240C               	addwf	??___flmul^0,w,c
  6453  0021DC  6E1B               	movwf	___flmul@temp^0,c
  6454  0021DE  0EFF               	movlw	255
  6455  0021E0  200D               	addwfc	(??___flmul+1)^0,w,c
  6456  0021E2  6E1C               	movwf	(___flmul@temp+1)^0,c
  6457  0021E4  EF09  F011         	goto	l3746
  6458  0021E8                     l3740:
  6459  0021E8  90D8               	bcf	status,0,c
  6460  0021EA  3617               	rlcf	___flmul@prod^0,f,c
  6461  0021EC  3618               	rlcf	(___flmul@prod+1)^0,f,c
  6462  0021EE  3619               	rlcf	(___flmul@prod+2)^0,f,c
  6463  0021F0  361A               	rlcf	(___flmul@prod+3)^0,f,c
  6464  0021F2  AE14               	btfss	(___flmul@grs+3)^0,7,c
  6465  0021F4  EFFE  F010         	goto	u3971
  6466  0021F8  EF00  F011         	goto	u3970
  6467  0021FC                     u3971:
  6468  0021FC  EF01  F011         	goto	l875
  6469  002200                     u3970:
  6470  002200  8017               	bsf	___flmul@prod^0,0,c
  6471  002202                     l875:
  6472  002202  90D8               	bcf	status,0,c
  6473  002204  3611               	rlcf	___flmul@grs^0,f,c
  6474  002206  3612               	rlcf	(___flmul@grs+1)^0,f,c
  6475  002208  3613               	rlcf	(___flmul@grs+2)^0,f,c
  6476  00220A  3614               	rlcf	(___flmul@grs+3)^0,f,c
  6477  00220C  061B               	decf	___flmul@temp^0,f,c
  6478  00220E  A0D8               	btfss	status,0,c
  6479  002210  061C               	decf	(___flmul@temp+1)^0,f,c
  6480  002212                     l3746:
  6481  002212  AE19               	btfss	(___flmul@prod+2)^0,7,c
  6482  002214  EF0E  F011         	goto	u3981
  6483  002218  EF10  F011         	goto	u3980
  6484  00221C                     u3981:
  6485  00221C  EFF4  F010         	goto	l3740
  6486  002220                     u3980:
  6487  002220  0E00               	movlw	0
  6488  002222  6E15               	movwf	___flmul@aexp^0,c
  6489  002224  AE14               	btfss	(___flmul@grs+3)^0,7,c
  6490  002226  EF17  F011         	goto	u3991
  6491  00222A  EF19  F011         	goto	u3990
  6492  00222E                     u3991:
  6493  00222E  EF3D  F011         	goto	l877
  6494  002232                     u3990:
  6495  002232  0EFF               	movlw	255
  6496  002234  1411               	andwf	___flmul@grs^0,w,c
  6497  002236  6E0C               	movwf	??___flmul^0,c
  6498  002238  0EFF               	movlw	255
  6499  00223A  1412               	andwf	(___flmul@grs+1)^0,w,c
  6500  00223C  6E0D               	movwf	(??___flmul+1)^0,c
  6501  00223E  0EFF               	movlw	255
  6502  002240  1413               	andwf	(___flmul@grs+2)^0,w,c
  6503  002242  6E0E               	movwf	(??___flmul+2)^0,c
  6504  002244  0E7F               	movlw	127
  6505  002246  1414               	andwf	(___flmul@grs+3)^0,w,c
  6506  002248  6E0F               	movwf	(??___flmul+3)^0,c
  6507  00224A  500C               	movf	??___flmul^0,w,c
  6508  00224C  100D               	iorwf	(??___flmul+1)^0,w,c
  6509  00224E  100E               	iorwf	(??___flmul+2)^0,w,c
  6510  002250  100F               	iorwf	(??___flmul+3)^0,w,c
  6511  002252  B4D8               	btfsc	status,2,c
  6512  002254  EF2E  F011         	goto	u4001
  6513  002258  EF30  F011         	goto	u4000
  6514  00225C                     u4001:
  6515  00225C  EF34  F011         	goto	l878
  6516  002260                     u4000:
  6517  002260                     l3754:
  6518  002260  0E01               	movlw	1
  6519  002262  6E15               	movwf	___flmul@aexp^0,c
  6520  002264  EF3D  F011         	goto	l877
  6521  002268                     l878:
  6522  002268  A017               	btfss	___flmul@prod^0,0,c
  6523  00226A  EF39  F011         	goto	u4011
  6524  00226E  EF3B  F011         	goto	u4010
  6525  002272                     u4011:
  6526  002272  EF3D  F011         	goto	l877
  6527  002276                     u4010:
  6528  002276  EF30  F011         	goto	l3754
  6529  00227A                     l877:
  6530  00227A  5015               	movf	___flmul@aexp^0,w,c
  6531  00227C  B4D8               	btfsc	status,2,c
  6532  00227E  EF43  F011         	goto	u4021
  6533  002282  EF45  F011         	goto	u4020
  6534  002286                     u4021:
  6535  002286  EF69  F011         	goto	l3766
  6536  00228A                     u4020:
  6537  00228A  0E01               	movlw	1
  6538  00228C  2617               	addwf	___flmul@prod^0,f,c
  6539  00228E  0E00               	movlw	0
  6540  002290  2218               	addwfc	(___flmul@prod+1)^0,f,c
  6541  002292  2219               	addwfc	(___flmul@prod+2)^0,f,c
  6542  002294  221A               	addwfc	(___flmul@prod+3)^0,f,c
  6543  002296  A01A               	btfss	(___flmul@prod+3)^0,0,c
  6544  002298  EF50  F011         	goto	u4031
  6545  00229C  EF52  F011         	goto	u4030
  6546  0022A0                     u4031:
  6547  0022A0  EF69  F011         	goto	l3766
  6548  0022A4                     u4030:
  6549  0022A4  C017  F00C         	movff	___flmul@prod,??___flmul
  6550  0022A8  C018  F00D         	movff	___flmul@prod+1,??___flmul+1
  6551  0022AC  C019  F00E         	movff	___flmul@prod+2,??___flmul+2
  6552  0022B0  C01A  F00F         	movff	___flmul@prod+3,??___flmul+3
  6553  0022B4  340F               	rlcf	(??___flmul+3)^0,w,c
  6554  0022B6  320F               	rrcf	(??___flmul+3)^0,f,c
  6555  0022B8  320E               	rrcf	(??___flmul+2)^0,f,c
  6556  0022BA  320D               	rrcf	(??___flmul+1)^0,f,c
  6557  0022BC  320C               	rrcf	??___flmul^0,f,c
  6558  0022BE  C00C  F017         	movff	??___flmul,___flmul@prod
  6559  0022C2  C00D  F018         	movff	??___flmul+1,___flmul@prod+1
  6560  0022C6  C00E  F019         	movff	??___flmul+2,___flmul@prod+2
  6561  0022CA  C00F  F01A         	movff	??___flmul+3,___flmul@prod+3
  6562  0022CE  4A1B               	infsnz	___flmul@temp^0,f,c
  6563  0022D0  2A1C               	incf	(___flmul@temp+1)^0,f,c
  6564  0022D2                     l3766:
  6565  0022D2  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  6566  0022D4  EF74  F011         	goto	u4041
  6567  0022D8  501C               	movf	(___flmul@temp+1)^0,w,c
  6568  0022DA  E108               	bnz	u4040
  6569  0022DC  281B               	incf	___flmul@temp^0,w,c
  6570  0022DE  A0D8               	btfss	status,0,c
  6571  0022E0  EF74  F011         	goto	u4041
  6572  0022E4  EF76  F011         	goto	u4040
  6573  0022E8                     u4041:
  6574  0022E8  EF80  F011         	goto	l3770
  6575  0022EC                     u4040:
  6576  0022EC  0E00               	movlw	0
  6577  0022EE  6E17               	movwf	___flmul@prod^0,c
  6578  0022F0  0E00               	movlw	0
  6579  0022F2  6E18               	movwf	(___flmul@prod+1)^0,c
  6580  0022F4  0E80               	movlw	128
  6581  0022F6  6E19               	movwf	(___flmul@prod+2)^0,c
  6582  0022F8  0E7F               	movlw	127
  6583  0022FA  6E1A               	movwf	(___flmul@prod+3)^0,c
  6584  0022FC  EFAE  F011         	goto	l3782
  6585  002300                     l3770:
  6586  002300  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  6587  002302  EF8D  F011         	goto	u4050
  6588  002306  501C               	movf	(___flmul@temp+1)^0,w,c
  6589  002308  E106               	bnz	u4051
  6590  00230A  041B               	decf	___flmul@temp^0,w,c
  6591  00230C  B0D8               	btfsc	status,0,c
  6592  00230E  EF8B  F011         	goto	u4051
  6593  002312  EF8D  F011         	goto	u4050
  6594  002316                     u4051:
  6595  002316  EF99  F011         	goto	l885
  6596  00231A                     u4050:
  6597  00231A  0E00               	movlw	0
  6598  00231C  6E17               	movwf	___flmul@prod^0,c
  6599  00231E  0E00               	movlw	0
  6600  002320  6E18               	movwf	(___flmul@prod+1)^0,c
  6601  002322  0E00               	movlw	0
  6602  002324  6E19               	movwf	(___flmul@prod+2)^0,c
  6603  002326  0E00               	movlw	0
  6604  002328  6E1A               	movwf	(___flmul@prod+3)^0,c
  6605  00232A  0E00               	movlw	0
  6606  00232C  6E10               	movwf	___flmul@sign^0,c
  6607  00232E  EFAE  F011         	goto	l3782
  6608  002332                     l885:
  6609  002332  C01B  F016         	movff	___flmul@temp,___flmul@bexp
  6610  002336  0EFF               	movlw	255
  6611  002338  1617               	andwf	___flmul@prod^0,f,c
  6612  00233A  0EFF               	movlw	255
  6613  00233C  1618               	andwf	(___flmul@prod+1)^0,f,c
  6614  00233E  0E7F               	movlw	127
  6615  002340  1619               	andwf	(___flmul@prod+2)^0,f,c
  6616  002342  0E00               	movlw	0
  6617  002344  161A               	andwf	(___flmul@prod+3)^0,f,c
  6618  002346  A016               	btfss	___flmul@bexp^0,0,c
  6619  002348  EFA8  F011         	goto	u4061
  6620  00234C  EFAA  F011         	goto	u4060
  6621  002350                     u4061:
  6622  002350  EFAB  F011         	goto	l3780
  6623  002354                     u4060:
  6624  002354  8E19               	bsf	(___flmul@prod+2)^0,7,c
  6625  002356                     l3780:
  6626  002356  90D8               	bcf	status,0,c
  6627  002358  3016               	rrcf	___flmul@bexp^0,w,c
  6628  00235A  6E1A               	movwf	(___flmul@prod+3)^0,c
  6629  00235C                     l3782:
  6630  00235C  5010               	movf	___flmul@sign^0,w,c
  6631  00235E  121A               	iorwf	(___flmul@prod+3)^0,f,c
  6632  002360  C017  F004         	movff	___flmul@prod,?___flmul
  6633  002364  C018  F005         	movff	___flmul@prod+1,?___flmul+1
  6634  002368  C019  F006         	movff	___flmul@prod+2,?___flmul+2
  6635  00236C  C01A  F007         	movff	___flmul@prod+3,?___flmul+3
  6636  002370                     l872:
  6637  002370  0012               	return		;funcret
  6638  002372                     __end_of___flmul:
  6639                           	callstack 0
  6640                           
  6641 ;; *************** function ___flge *****************
  6642 ;; Defined at:
  6643 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  ff1             4   28[COMRAM] unsigned char 
  6646 ;;  ff2             4   32[COMRAM] unsigned char 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;		None               void
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6658 ;;      Params:         8       0       0       0       0       0       0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6660 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6661 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6662 ;;Total ram usage:       12 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    2
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_efgtoa
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text21
  6673  0036CE                     __ptext21:
  6674                           	callstack 0
  6675  0036CE                     ___flge:
  6676                           	callstack 22
  6677  0036CE  0E00               	movlw	0
  6678  0036D0  141D               	andwf	___flge@ff1^0,w,c
  6679  0036D2  6E25               	movwf	??___flge^0,c
  6680  0036D4  0E00               	movlw	0
  6681  0036D6  141E               	andwf	(___flge@ff1+1)^0,w,c
  6682  0036D8  6E26               	movwf	(??___flge+1)^0,c
  6683  0036DA  0E80               	movlw	128
  6684  0036DC  141F               	andwf	(___flge@ff1+2)^0,w,c
  6685  0036DE  6E27               	movwf	(??___flge+2)^0,c
  6686  0036E0  0E7F               	movlw	127
  6687  0036E2  1420               	andwf	(___flge@ff1+3)^0,w,c
  6688  0036E4  6E28               	movwf	(??___flge+3)^0,c
  6689  0036E6  5025               	movf	??___flge^0,w,c
  6690  0036E8  1026               	iorwf	(??___flge+1)^0,w,c
  6691  0036EA  1027               	iorwf	(??___flge+2)^0,w,c
  6692  0036EC  1028               	iorwf	(??___flge+3)^0,w,c
  6693  0036EE  A4D8               	btfss	status,2,c
  6694  0036F0  EF7C  F01B         	goto	u4221
  6695  0036F4  EF7E  F01B         	goto	u4220
  6696  0036F8                     u4221:
  6697  0036F8  EF86  F01B         	goto	l3894
  6698  0036FC                     u4220:
  6699  0036FC  0E00               	movlw	0
  6700  0036FE  6E1D               	movwf	___flge@ff1^0,c
  6701  003700  0E00               	movlw	0
  6702  003702  6E1E               	movwf	(___flge@ff1+1)^0,c
  6703  003704  0E00               	movlw	0
  6704  003706  6E1F               	movwf	(___flge@ff1+2)^0,c
  6705  003708  0E00               	movlw	0
  6706  00370A  6E20               	movwf	(___flge@ff1+3)^0,c
  6707  00370C                     l3894:
  6708  00370C  0E00               	movlw	0
  6709  00370E  1421               	andwf	___flge@ff2^0,w,c
  6710  003710  6E25               	movwf	??___flge^0,c
  6711  003712  0E00               	movlw	0
  6712  003714  1422               	andwf	(___flge@ff2+1)^0,w,c
  6713  003716  6E26               	movwf	(??___flge+1)^0,c
  6714  003718  0E80               	movlw	128
  6715  00371A  1423               	andwf	(___flge@ff2+2)^0,w,c
  6716  00371C  6E27               	movwf	(??___flge+2)^0,c
  6717  00371E  0E7F               	movlw	127
  6718  003720  1424               	andwf	(___flge@ff2+3)^0,w,c
  6719  003722  6E28               	movwf	(??___flge+3)^0,c
  6720  003724  5025               	movf	??___flge^0,w,c
  6721  003726  1026               	iorwf	(??___flge+1)^0,w,c
  6722  003728  1027               	iorwf	(??___flge+2)^0,w,c
  6723  00372A  1028               	iorwf	(??___flge+3)^0,w,c
  6724  00372C  A4D8               	btfss	status,2,c
  6725  00372E  EF9B  F01B         	goto	u4231
  6726  003732  EF9D  F01B         	goto	u4230
  6727  003736                     u4231:
  6728  003736  EFA5  F01B         	goto	l3898
  6729  00373A                     u4230:
  6730  00373A  0E00               	movlw	0
  6731  00373C  6E21               	movwf	___flge@ff2^0,c
  6732  00373E  0E00               	movlw	0
  6733  003740  6E22               	movwf	(___flge@ff2+1)^0,c
  6734  003742  0E00               	movlw	0
  6735  003744  6E23               	movwf	(___flge@ff2+2)^0,c
  6736  003746  0E00               	movlw	0
  6737  003748  6E24               	movwf	(___flge@ff2+3)^0,c
  6738  00374A                     l3898:
  6739  00374A  AE20               	btfss	(___flge@ff1+3)^0,7,c
  6740  00374C  EFAA  F01B         	goto	u4241
  6741  003750  EFAC  F01B         	goto	u4240
  6742  003754                     u4241:
  6743  003754  EFB5  F01B         	goto	l3902
  6744  003758                     u4240:
  6745  003758  6C1D               	negf	___flge@ff1^0,c
  6746  00375A  1E1E               	comf	(___flge@ff1+1)^0,f,c
  6747  00375C  B0D8               	btfsc	status,0,c
  6748  00375E  2A1E               	incf	(___flge@ff1+1)^0,f,c
  6749  003760  1E1F               	comf	(___flge@ff1+2)^0,f,c
  6750  003762  B0D8               	btfsc	status,0,c
  6751  003764  2A1F               	incf	(___flge@ff1+2)^0,f,c
  6752  003766  0E80               	movlw	128
  6753  003768  5620               	subfwb	(___flge@ff1+3)^0,f,c
  6754  00376A                     l3902:
  6755  00376A  AE24               	btfss	(___flge@ff2+3)^0,7,c
  6756  00376C  EFBA  F01B         	goto	u4251
  6757  003770  EFBC  F01B         	goto	u4250
  6758  003774                     u4251:
  6759  003774  EFC5  F01B         	goto	l519
  6760  003778                     u4250:
  6761  003778  6C21               	negf	___flge@ff2^0,c
  6762  00377A  1E22               	comf	(___flge@ff2+1)^0,f,c
  6763  00377C  B0D8               	btfsc	status,0,c
  6764  00377E  2A22               	incf	(___flge@ff2+1)^0,f,c
  6765  003780  1E23               	comf	(___flge@ff2+2)^0,f,c
  6766  003782  B0D8               	btfsc	status,0,c
  6767  003784  2A23               	incf	(___flge@ff2+2)^0,f,c
  6768  003786  0E80               	movlw	128
  6769  003788  5624               	subfwb	(___flge@ff2+3)^0,f,c
  6770  00378A                     l519:
  6771  00378A  0E00               	movlw	0
  6772  00378C  1A1D               	xorwf	___flge@ff1^0,f,c
  6773  00378E  0E00               	movlw	0
  6774  003790  1A1E               	xorwf	(___flge@ff1+1)^0,f,c
  6775  003792  0E00               	movlw	0
  6776  003794  1A1F               	xorwf	(___flge@ff1+2)^0,f,c
  6777  003796  0E80               	movlw	128
  6778  003798  1A20               	xorwf	(___flge@ff1+3)^0,f,c
  6779  00379A  0E00               	movlw	0
  6780  00379C  1A21               	xorwf	___flge@ff2^0,f,c
  6781  00379E  0E00               	movlw	0
  6782  0037A0  1A22               	xorwf	(___flge@ff2+1)^0,f,c
  6783  0037A2  0E00               	movlw	0
  6784  0037A4  1A23               	xorwf	(___flge@ff2+2)^0,f,c
  6785  0037A6  0E80               	movlw	128
  6786  0037A8  1A24               	xorwf	(___flge@ff2+3)^0,f,c
  6787  0037AA  5021               	movf	___flge@ff2^0,w,c
  6788  0037AC  5C1D               	subwf	___flge@ff1^0,w,c
  6789  0037AE  5022               	movf	(___flge@ff2+1)^0,w,c
  6790  0037B0  581E               	subwfb	(___flge@ff1+1)^0,w,c
  6791  0037B2  5023               	movf	(___flge@ff2+2)^0,w,c
  6792  0037B4  581F               	subwfb	(___flge@ff1+2)^0,w,c
  6793  0037B6  5024               	movf	(___flge@ff2+3)^0,w,c
  6794  0037B8  5820               	subwfb	(___flge@ff1+3)^0,w,c
  6795  0037BA  B0D8               	btfsc	status,0,c
  6796  0037BC  EFE2  F01B         	goto	u4261
  6797  0037C0  EFE4  F01B         	goto	u4260
  6798  0037C4                     u4261:
  6799  0037C4  EFE7  F01B         	goto	l3908
  6800  0037C8                     u4260:
  6801  0037C8  90D8               	bcf	status,0,c
  6802  0037CA  EFE8  F01B         	goto	l524
  6803  0037CE                     l3908:
  6804  0037CE  80D8               	bsf	status,0,c
  6805  0037D0                     l524:
  6806  0037D0  0012               	return		;funcret
  6807  0037D2                     __end_of___flge:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function ___fleq *****************
  6811 ;; Defined at:
  6812 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fleq.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  ff1             4    3[COMRAM] unsigned char 
  6815 ;;  ff2             4    7[COMRAM] unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;		None               void
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6827 ;;      Params:         8       0       0       0       0       0       0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6829 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6830 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6831 ;;Total ram usage:       12 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:    2
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_efgtoa
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text22
  6842  003EF8                     __ptext22:
  6843                           	callstack 0
  6844  003EF8                     ___fleq:
  6845                           	callstack 22
  6846  003EF8  0E00               	movlw	0
  6847  003EFA  1404               	andwf	___fleq@ff1^0,w,c
  6848  003EFC  6E0C               	movwf	??___fleq^0,c
  6849  003EFE  0E00               	movlw	0
  6850  003F00  1405               	andwf	(___fleq@ff1+1)^0,w,c
  6851  003F02  6E0D               	movwf	(??___fleq+1)^0,c
  6852  003F04  0E80               	movlw	128
  6853  003F06  1406               	andwf	(___fleq@ff1+2)^0,w,c
  6854  003F08  6E0E               	movwf	(??___fleq+2)^0,c
  6855  003F0A  0E7F               	movlw	127
  6856  003F0C  1407               	andwf	(___fleq@ff1+3)^0,w,c
  6857  003F0E  6E0F               	movwf	(??___fleq+3)^0,c
  6858  003F10  500C               	movf	??___fleq^0,w,c
  6859  003F12  100D               	iorwf	(??___fleq+1)^0,w,c
  6860  003F14  100E               	iorwf	(??___fleq+2)^0,w,c
  6861  003F16  100F               	iorwf	(??___fleq+3)^0,w,c
  6862  003F18  A4D8               	btfss	status,2,c
  6863  003F1A  EF91  F01F         	goto	u4191
  6864  003F1E  EF93  F01F         	goto	u4190
  6865  003F22                     u4191:
  6866  003F22  EF9B  F01F         	goto	l3878
  6867  003F26                     u4190:
  6868  003F26  0E00               	movlw	0
  6869  003F28  6E04               	movwf	___fleq@ff1^0,c
  6870  003F2A  0E00               	movlw	0
  6871  003F2C  6E05               	movwf	(___fleq@ff1+1)^0,c
  6872  003F2E  0E00               	movlw	0
  6873  003F30  6E06               	movwf	(___fleq@ff1+2)^0,c
  6874  003F32  0E00               	movlw	0
  6875  003F34  6E07               	movwf	(___fleq@ff1+3)^0,c
  6876  003F36                     l3878:
  6877  003F36  0E00               	movlw	0
  6878  003F38  1408               	andwf	___fleq@ff2^0,w,c
  6879  003F3A  6E0C               	movwf	??___fleq^0,c
  6880  003F3C  0E00               	movlw	0
  6881  003F3E  1409               	andwf	(___fleq@ff2+1)^0,w,c
  6882  003F40  6E0D               	movwf	(??___fleq+1)^0,c
  6883  003F42  0E80               	movlw	128
  6884  003F44  140A               	andwf	(___fleq@ff2+2)^0,w,c
  6885  003F46  6E0E               	movwf	(??___fleq+2)^0,c
  6886  003F48  0E7F               	movlw	127
  6887  003F4A  140B               	andwf	(___fleq@ff2+3)^0,w,c
  6888  003F4C  6E0F               	movwf	(??___fleq+3)^0,c
  6889  003F4E  500C               	movf	??___fleq^0,w,c
  6890  003F50  100D               	iorwf	(??___fleq+1)^0,w,c
  6891  003F52  100E               	iorwf	(??___fleq+2)^0,w,c
  6892  003F54  100F               	iorwf	(??___fleq+3)^0,w,c
  6893  003F56  A4D8               	btfss	status,2,c
  6894  003F58  EFB0  F01F         	goto	u4201
  6895  003F5C  EFB2  F01F         	goto	u4200
  6896  003F60                     u4201:
  6897  003F60  EFBA  F01F         	goto	l3882
  6898  003F64                     u4200:
  6899  003F64  0E00               	movlw	0
  6900  003F66  6E08               	movwf	___fleq@ff2^0,c
  6901  003F68  0E00               	movlw	0
  6902  003F6A  6E09               	movwf	(___fleq@ff2+1)^0,c
  6903  003F6C  0E00               	movlw	0
  6904  003F6E  6E0A               	movwf	(___fleq@ff2+2)^0,c
  6905  003F70  0E00               	movlw	0
  6906  003F72  6E0B               	movwf	(___fleq@ff2+3)^0,c
  6907  003F74                     l3882:
  6908  003F74  5008               	movf	___fleq@ff2^0,w,c
  6909  003F76  1804               	xorwf	___fleq@ff1^0,w,c
  6910  003F78  E10F               	bnz	u4210
  6911  003F7A  5009               	movf	(___fleq@ff2+1)^0,w,c
  6912  003F7C  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  6913  003F7E  E10C               	bnz	u4210
  6914  003F80  500A               	movf	(___fleq@ff2+2)^0,w,c
  6915  003F82  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  6916  003F84  E109               	bnz	u4210
  6917  003F86  500B               	movf	(___fleq@ff2+3)^0,w,c
  6918  003F88  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  6919  003F8A  B4D8               	btfsc	status,2,c
  6920  003F8C  EFCA  F01F         	goto	u4211
  6921  003F90  EFCC  F01F         	goto	u4210
  6922  003F94                     u4211:
  6923  003F94  EFCF  F01F         	goto	l3886
  6924  003F98                     u4210:
  6925  003F98  90D8               	bcf	status,0,c
  6926  003F9A  EFD0  F01F         	goto	l513
  6927  003F9E                     l3886:
  6928  003F9E  80D8               	bsf	status,0,c
  6929  003FA0                     l513:
  6930  003FA0  0012               	return		;funcret
  6931  003FA2                     __end_of___fleq:
  6932                           	callstack 0
  6933                           
  6934 ;; *************** function ___fldiv *****************
  6935 ;; Defined at:
  6936 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  b               4   28[COMRAM] unsigned char 
  6939 ;;  a               4   32[COMRAM] unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  grs             4   47[COMRAM] unsigned long 
  6942 ;;  rem             4   40[COMRAM] unsigned long 
  6943 ;;  new_exp         2   45[COMRAM] short 
  6944 ;;  aexp            1   52[COMRAM] unsigned char 
  6945 ;;  bexp            1   51[COMRAM] unsigned char 
  6946 ;;  sign            1   44[COMRAM] unsigned char 
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  4   28[COMRAM] unsigned char 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6956 ;;      Params:         8       0       0       0       0       0       0       0       0
  6957 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6958 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6959 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6960 ;;Total ram usage:       25 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; Hardware stack levels required when called:    2
  6963 ;; This function calls:
  6964 ;;		Nothing
  6965 ;; This function is called by:
  6966 ;;		_appADC
  6967 ;;		_appBat
  6968 ;;		_efgtoa
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           	psect	text23
  6973  002372                     __ptext23:
  6974                           	callstack 0
  6975  002372                     ___fldiv:
  6976                           	callstack 22
  6977  002372  5020               	movf	(___fldiv@b+3)^0,w,c
  6978  002374  0B80               	andlw	128
  6979  002376  6E2D               	movwf	___fldiv@sign^0,c
  6980  002378  5020               	movf	(___fldiv@b+3)^0,w,c
  6981  00237A  2420               	addwf	(___fldiv@b+3)^0,w,c
  6982  00237C  6E34               	movwf	___fldiv@bexp^0,c
  6983  00237E  AE1F               	btfss	(___fldiv@b+2)^0,7,c
  6984  002380  EFC4  F011         	goto	u3651
  6985  002384  EFC6  F011         	goto	u3650
  6986  002388                     u3651:
  6987  002388  EFC7  F011         	goto	l3526
  6988  00238C                     u3650:
  6989  00238C  8034               	bsf	___fldiv@bexp^0,0,c
  6990  00238E                     l3526:
  6991  00238E  5034               	movf	___fldiv@bexp^0,w,c
  6992  002390  B4D8               	btfsc	status,2,c
  6993  002392  EFCD  F011         	goto	u3661
  6994  002396  EFCF  F011         	goto	u3660
  6995  00239A                     u3661:
  6996  00239A  EFE4  F011         	goto	l3536
  6997  00239E                     u3660:
  6998  00239E  2834               	incf	___fldiv@bexp^0,w,c
  6999  0023A0  A4D8               	btfss	status,2,c
  7000  0023A2  EFD5  F011         	goto	u3671
  7001  0023A6  EFD7  F011         	goto	u3670
  7002  0023AA                     u3671:
  7003  0023AA  EFDF  F011         	goto	l3532
  7004  0023AE                     u3670:
  7005  0023AE  0E00               	movlw	0
  7006  0023B0  6E1D               	movwf	___fldiv@b^0,c
  7007  0023B2  0E00               	movlw	0
  7008  0023B4  6E1E               	movwf	(___fldiv@b+1)^0,c
  7009  0023B6  0E00               	movlw	0
  7010  0023B8  6E1F               	movwf	(___fldiv@b+2)^0,c
  7011  0023BA  0E00               	movlw	0
  7012  0023BC  6E20               	movwf	(___fldiv@b+3)^0,c
  7013  0023BE                     l3532:
  7014  0023BE  8E1F               	bsf	(___fldiv@b+2)^0,7,c
  7015  0023C0  0E00               	movlw	0
  7016  0023C2  6E20               	movwf	(___fldiv@b+3)^0,c
  7017  0023C4  EFEC  F011         	goto	l3538
  7018  0023C8                     l3536:
  7019  0023C8  0E00               	movlw	0
  7020  0023CA  6E1D               	movwf	___fldiv@b^0,c
  7021  0023CC  0E00               	movlw	0
  7022  0023CE  6E1E               	movwf	(___fldiv@b+1)^0,c
  7023  0023D0  0E00               	movlw	0
  7024  0023D2  6E1F               	movwf	(___fldiv@b+2)^0,c
  7025  0023D4  0E00               	movlw	0
  7026  0023D6  6E20               	movwf	(___fldiv@b+3)^0,c
  7027  0023D8                     l3538:
  7028  0023D8  5024               	movf	(___fldiv@a+3)^0,w,c
  7029  0023DA  0B80               	andlw	128
  7030  0023DC  1A2D               	xorwf	___fldiv@sign^0,f,c
  7031  0023DE  5024               	movf	(___fldiv@a+3)^0,w,c
  7032  0023E0  2424               	addwf	(___fldiv@a+3)^0,w,c
  7033  0023E2  6E35               	movwf	___fldiv@aexp^0,c
  7034  0023E4  AE23               	btfss	(___fldiv@a+2)^0,7,c
  7035  0023E6  EFF7  F011         	goto	u3681
  7036  0023EA  EFF9  F011         	goto	u3680
  7037  0023EE                     u3681:
  7038  0023EE  EFFA  F011         	goto	l3546
  7039  0023F2                     u3680:
  7040  0023F2  8035               	bsf	___fldiv@aexp^0,0,c
  7041  0023F4                     l3546:
  7042  0023F4  5035               	movf	___fldiv@aexp^0,w,c
  7043  0023F6  B4D8               	btfsc	status,2,c
  7044  0023F8  EF00  F012         	goto	u3691
  7045  0023FC  EF02  F012         	goto	u3690
  7046  002400                     u3691:
  7047  002400  EF17  F012         	goto	l3556
  7048  002404                     u3690:
  7049  002404  2835               	incf	___fldiv@aexp^0,w,c
  7050  002406  A4D8               	btfss	status,2,c
  7051  002408  EF08  F012         	goto	u3701
  7052  00240C  EF0A  F012         	goto	u3700
  7053  002410                     u3701:
  7054  002410  EF12  F012         	goto	l3552
  7055  002414                     u3700:
  7056  002414  0E00               	movlw	0
  7057  002416  6E21               	movwf	___fldiv@a^0,c
  7058  002418  0E00               	movlw	0
  7059  00241A  6E22               	movwf	(___fldiv@a+1)^0,c
  7060  00241C  0E00               	movlw	0
  7061  00241E  6E23               	movwf	(___fldiv@a+2)^0,c
  7062  002420  0E00               	movlw	0
  7063  002422  6E24               	movwf	(___fldiv@a+3)^0,c
  7064  002424                     l3552:
  7065  002424  8E23               	bsf	(___fldiv@a+2)^0,7,c
  7066  002426  0E00               	movlw	0
  7067  002428  6E24               	movwf	(___fldiv@a+3)^0,c
  7068  00242A  EF1F  F012         	goto	l3558
  7069  00242E                     l3556:
  7070  00242E  0E00               	movlw	0
  7071  002430  6E21               	movwf	___fldiv@a^0,c
  7072  002432  0E00               	movlw	0
  7073  002434  6E22               	movwf	(___fldiv@a+1)^0,c
  7074  002436  0E00               	movlw	0
  7075  002438  6E23               	movwf	(___fldiv@a+2)^0,c
  7076  00243A  0E00               	movlw	0
  7077  00243C  6E24               	movwf	(___fldiv@a+3)^0,c
  7078  00243E                     l3558:
  7079  00243E  5021               	movf	___fldiv@a^0,w,c
  7080  002440  1022               	iorwf	(___fldiv@a+1)^0,w,c
  7081  002442  1023               	iorwf	(___fldiv@a+2)^0,w,c
  7082  002444  1024               	iorwf	(___fldiv@a+3)^0,w,c
  7083  002446  A4D8               	btfss	status,2,c
  7084  002448  EF28  F012         	goto	u3711
  7085  00244C  EF2A  F012         	goto	u3710
  7086  002450                     u3711:
  7087  002450  EF42  F012         	goto	l3570
  7088  002454                     u3710:
  7089  002454  0E00               	movlw	0
  7090  002456  6E1D               	movwf	___fldiv@b^0,c
  7091  002458  0E00               	movlw	0
  7092  00245A  6E1E               	movwf	(___fldiv@b+1)^0,c
  7093  00245C  0E00               	movlw	0
  7094  00245E  6E1F               	movwf	(___fldiv@b+2)^0,c
  7095  002460  0E00               	movlw	0
  7096  002462  6E20               	movwf	(___fldiv@b+3)^0,c
  7097  002464  0E80               	movlw	128
  7098  002466  121F               	iorwf	(___fldiv@b+2)^0,f,c
  7099  002468  0E7F               	movlw	127
  7100  00246A  1220               	iorwf	(___fldiv@b+3)^0,f,c
  7101  00246C                     l3564:
  7102  00246C  502D               	movf	___fldiv@sign^0,w,c
  7103  00246E  1220               	iorwf	(___fldiv@b+3)^0,f,c
  7104  002470  C01D  F01D         	movff	___fldiv@b,?___fldiv
  7105  002474  C01E  F01E         	movff	___fldiv@b+1,?___fldiv+1
  7106  002478  C01F  F01F         	movff	___fldiv@b+2,?___fldiv+2
  7107  00247C  C020  F020         	movff	___fldiv@b+3,?___fldiv+3
  7108  002480  EF85  F013         	goto	l836
  7109  002484                     l3570:
  7110  002484  5034               	movf	___fldiv@bexp^0,w,c
  7111  002486  A4D8               	btfss	status,2,c
  7112  002488  EF48  F012         	goto	u3721
  7113  00248C  EF4A  F012         	goto	u3720
  7114  002490                     u3721:
  7115  002490  EF54  F012         	goto	l3578
  7116  002494                     u3720:
  7117  002494  0E00               	movlw	0
  7118  002496  6E1D               	movwf	?___fldiv^0,c
  7119  002498  0E00               	movlw	0
  7120  00249A  6E1E               	movwf	(?___fldiv+1)^0,c
  7121  00249C  0E00               	movlw	0
  7122  00249E  6E1F               	movwf	(?___fldiv+2)^0,c
  7123  0024A0  0E00               	movlw	0
  7124  0024A2  6E20               	movwf	(?___fldiv+3)^0,c
  7125  0024A4  EF85  F013         	goto	l836
  7126  0024A8                     l3578:
  7127  0024A8  5035               	movf	___fldiv@aexp^0,w,c
  7128  0024AA  C034  F025         	movff	___fldiv@bexp,??___fldiv
  7129  0024AE  6A26               	clrf	(??___fldiv+1)^0,c
  7130  0024B0  5E25               	subwf	??___fldiv^0,f,c
  7131  0024B2  0E00               	movlw	0
  7132  0024B4  5A26               	subwfb	(??___fldiv+1)^0,f,c
  7133  0024B6  0E7F               	movlw	127
  7134  0024B8  2425               	addwf	??___fldiv^0,w,c
  7135  0024BA  6E2E               	movwf	___fldiv@new_exp^0,c
  7136  0024BC  0E00               	movlw	0
  7137  0024BE  2026               	addwfc	(??___fldiv+1)^0,w,c
  7138  0024C0  6E2F               	movwf	(___fldiv@new_exp+1)^0,c
  7139  0024C2  C01D  F029         	movff	___fldiv@b,___fldiv@rem
  7140  0024C6  C01E  F02A         	movff	___fldiv@b+1,___fldiv@rem+1
  7141  0024CA  C01F  F02B         	movff	___fldiv@b+2,___fldiv@rem+2
  7142  0024CE  C020  F02C         	movff	___fldiv@b+3,___fldiv@rem+3
  7143  0024D2  0E00               	movlw	0
  7144  0024D4  6E1D               	movwf	___fldiv@b^0,c
  7145  0024D6  0E00               	movlw	0
  7146  0024D8  6E1E               	movwf	(___fldiv@b+1)^0,c
  7147  0024DA  0E00               	movlw	0
  7148  0024DC  6E1F               	movwf	(___fldiv@b+2)^0,c
  7149  0024DE  0E00               	movlw	0
  7150  0024E0  6E20               	movwf	(___fldiv@b+3)^0,c
  7151  0024E2  0E00               	movlw	0
  7152  0024E4  6E30               	movwf	___fldiv@grs^0,c
  7153  0024E6  0E00               	movlw	0
  7154  0024E8  6E31               	movwf	(___fldiv@grs+1)^0,c
  7155  0024EA  0E00               	movlw	0
  7156  0024EC  6E32               	movwf	(___fldiv@grs+2)^0,c
  7157  0024EE  0E00               	movlw	0
  7158  0024F0  6E33               	movwf	(___fldiv@grs+3)^0,c
  7159  0024F2  0E00               	movlw	0
  7160  0024F4  6E35               	movwf	___fldiv@aexp^0,c
  7161  0024F6  EFB5  F012         	goto	l838
  7162  0024FA                     l3588:
  7163  0024FA  5035               	movf	___fldiv@aexp^0,w,c
  7164  0024FC  B4D8               	btfsc	status,2,c
  7165  0024FE  EF83  F012         	goto	u3731
  7166  002502  EF85  F012         	goto	u3730
  7167  002506                     u3731:
  7168  002506  EF9C  F012         	goto	l3596
  7169  00250A                     u3730:
  7170  00250A  90D8               	bcf	status,0,c
  7171  00250C  3629               	rlcf	___fldiv@rem^0,f,c
  7172  00250E  362A               	rlcf	(___fldiv@rem+1)^0,f,c
  7173  002510  362B               	rlcf	(___fldiv@rem+2)^0,f,c
  7174  002512  362C               	rlcf	(___fldiv@rem+3)^0,f,c
  7175  002514  90D8               	bcf	status,0,c
  7176  002516  361D               	rlcf	___fldiv@b^0,f,c
  7177  002518  361E               	rlcf	(___fldiv@b+1)^0,f,c
  7178  00251A  361F               	rlcf	(___fldiv@b+2)^0,f,c
  7179  00251C  3620               	rlcf	(___fldiv@b+3)^0,f,c
  7180  00251E  AE33               	btfss	(___fldiv@grs+3)^0,7,c
  7181  002520  EF94  F012         	goto	u3741
  7182  002524  EF96  F012         	goto	u3740
  7183  002528                     u3741:
  7184  002528  EF97  F012         	goto	l841
  7185  00252C                     u3740:
  7186  00252C  801D               	bsf	___fldiv@b^0,0,c
  7187  00252E                     l841:
  7188  00252E  90D8               	bcf	status,0,c
  7189  002530  3630               	rlcf	___fldiv@grs^0,f,c
  7190  002532  3631               	rlcf	(___fldiv@grs+1)^0,f,c
  7191  002534  3632               	rlcf	(___fldiv@grs+2)^0,f,c
  7192  002536  3633               	rlcf	(___fldiv@grs+3)^0,f,c
  7193  002538                     l3596:
  7194  002538  5021               	movf	___fldiv@a^0,w,c
  7195  00253A  5C29               	subwf	___fldiv@rem^0,w,c
  7196  00253C  5022               	movf	(___fldiv@a+1)^0,w,c
  7197  00253E  582A               	subwfb	(___fldiv@rem+1)^0,w,c
  7198  002540  5023               	movf	(___fldiv@a+2)^0,w,c
  7199  002542  582B               	subwfb	(___fldiv@rem+2)^0,w,c
  7200  002544  5024               	movf	(___fldiv@a+3)^0,w,c
  7201  002546  582C               	subwfb	(___fldiv@rem+3)^0,w,c
  7202  002548  A0D8               	btfss	status,0,c
  7203  00254A  EFA9  F012         	goto	u3751
  7204  00254E  EFAB  F012         	goto	u3750
  7205  002552                     u3751:
  7206  002552  EFB4  F012         	goto	l3602
  7207  002556                     u3750:
  7208  002556  8C33               	bsf	(___fldiv@grs+3)^0,6,c
  7209  002558  5021               	movf	___fldiv@a^0,w,c
  7210  00255A  5E29               	subwf	___fldiv@rem^0,f,c
  7211  00255C  5022               	movf	(___fldiv@a+1)^0,w,c
  7212  00255E  5A2A               	subwfb	(___fldiv@rem+1)^0,f,c
  7213  002560  5023               	movf	(___fldiv@a+2)^0,w,c
  7214  002562  5A2B               	subwfb	(___fldiv@rem+2)^0,f,c
  7215  002564  5024               	movf	(___fldiv@a+3)^0,w,c
  7216  002566  5A2C               	subwfb	(___fldiv@rem+3)^0,f,c
  7217  002568                     l3602:
  7218  002568  2A35               	incf	___fldiv@aexp^0,f,c
  7219  00256A                     l838:
  7220  00256A  0E19               	movlw	25
  7221  00256C  6435               	cpfsgt	___fldiv@aexp^0,c
  7222  00256E  EFBB  F012         	goto	u3761
  7223  002572  EFBD  F012         	goto	u3760
  7224  002576                     u3761:
  7225  002576  EF7D  F012         	goto	l3588
  7226  00257A                     u3760:
  7227  00257A  5029               	movf	___fldiv@rem^0,w,c
  7228  00257C  102A               	iorwf	(___fldiv@rem+1)^0,w,c
  7229  00257E  102B               	iorwf	(___fldiv@rem+2)^0,w,c
  7230  002580  102C               	iorwf	(___fldiv@rem+3)^0,w,c
  7231  002582  B4D8               	btfsc	status,2,c
  7232  002584  EFC6  F012         	goto	u3771
  7233  002588  EFC8  F012         	goto	u3770
  7234  00258C                     u3771:
  7235  00258C  EFE0  F012         	goto	l3614
  7236  002590                     u3770:
  7237  002590  8030               	bsf	___fldiv@grs^0,0,c
  7238  002592  EFE0  F012         	goto	l3614
  7239  002596                     l3608:
  7240  002596  90D8               	bcf	status,0,c
  7241  002598  361D               	rlcf	___fldiv@b^0,f,c
  7242  00259A  361E               	rlcf	(___fldiv@b+1)^0,f,c
  7243  00259C  361F               	rlcf	(___fldiv@b+2)^0,f,c
  7244  00259E  3620               	rlcf	(___fldiv@b+3)^0,f,c
  7245  0025A0  AE33               	btfss	(___fldiv@grs+3)^0,7,c
  7246  0025A2  EFD5  F012         	goto	u3781
  7247  0025A6  EFD7  F012         	goto	u3780
  7248  0025AA                     u3781:
  7249  0025AA  EFD8  F012         	goto	l847
  7250  0025AE                     u3780:
  7251  0025AE  801D               	bsf	___fldiv@b^0,0,c
  7252  0025B0                     l847:
  7253  0025B0  90D8               	bcf	status,0,c
  7254  0025B2  3630               	rlcf	___fldiv@grs^0,f,c
  7255  0025B4  3631               	rlcf	(___fldiv@grs+1)^0,f,c
  7256  0025B6  3632               	rlcf	(___fldiv@grs+2)^0,f,c
  7257  0025B8  3633               	rlcf	(___fldiv@grs+3)^0,f,c
  7258  0025BA  062E               	decf	___fldiv@new_exp^0,f,c
  7259  0025BC  A0D8               	btfss	status,0,c
  7260  0025BE  062F               	decf	(___fldiv@new_exp+1)^0,f,c
  7261  0025C0                     l3614:
  7262  0025C0  AE1F               	btfss	(___fldiv@b+2)^0,7,c
  7263  0025C2  EFE5  F012         	goto	u3791
  7264  0025C6  EFE7  F012         	goto	u3790
  7265  0025CA                     u3791:
  7266  0025CA  EFCB  F012         	goto	l3608
  7267  0025CE                     u3790:
  7268  0025CE  0E00               	movlw	0
  7269  0025D0  6E35               	movwf	___fldiv@aexp^0,c
  7270  0025D2  AE33               	btfss	(___fldiv@grs+3)^0,7,c
  7271  0025D4  EFEE  F012         	goto	u3801
  7272  0025D8  EFF0  F012         	goto	u3800
  7273  0025DC                     u3801:
  7274  0025DC  EF14  F013         	goto	l849
  7275  0025E0                     u3800:
  7276  0025E0  0EFF               	movlw	255
  7277  0025E2  1430               	andwf	___fldiv@grs^0,w,c
  7278  0025E4  6E25               	movwf	??___fldiv^0,c
  7279  0025E6  0EFF               	movlw	255
  7280  0025E8  1431               	andwf	(___fldiv@grs+1)^0,w,c
  7281  0025EA  6E26               	movwf	(??___fldiv+1)^0,c
  7282  0025EC  0EFF               	movlw	255
  7283  0025EE  1432               	andwf	(___fldiv@grs+2)^0,w,c
  7284  0025F0  6E27               	movwf	(??___fldiv+2)^0,c
  7285  0025F2  0E7F               	movlw	127
  7286  0025F4  1433               	andwf	(___fldiv@grs+3)^0,w,c
  7287  0025F6  6E28               	movwf	(??___fldiv+3)^0,c
  7288  0025F8  5025               	movf	??___fldiv^0,w,c
  7289  0025FA  1026               	iorwf	(??___fldiv+1)^0,w,c
  7290  0025FC  1027               	iorwf	(??___fldiv+2)^0,w,c
  7291  0025FE  1028               	iorwf	(??___fldiv+3)^0,w,c
  7292  002600  B4D8               	btfsc	status,2,c
  7293  002602  EF05  F013         	goto	u3811
  7294  002606  EF07  F013         	goto	u3810
  7295  00260A                     u3811:
  7296  00260A  EF0B  F013         	goto	l850
  7297  00260E                     u3810:
  7298  00260E                     l3622:
  7299  00260E  0E01               	movlw	1
  7300  002610  6E35               	movwf	___fldiv@aexp^0,c
  7301  002612  EF14  F013         	goto	l849
  7302  002616                     l850:
  7303  002616  A01D               	btfss	___fldiv@b^0,0,c
  7304  002618  EF10  F013         	goto	u3821
  7305  00261C  EF12  F013         	goto	u3820
  7306  002620                     u3821:
  7307  002620  EF14  F013         	goto	l849
  7308  002624                     u3820:
  7309  002624  EF07  F013         	goto	l3622
  7310  002628                     l849:
  7311  002628  5035               	movf	___fldiv@aexp^0,w,c
  7312  00262A  B4D8               	btfsc	status,2,c
  7313  00262C  EF1A  F013         	goto	u3831
  7314  002630  EF1C  F013         	goto	u3830
  7315  002634                     u3831:
  7316  002634  EF40  F013         	goto	l3634
  7317  002638                     u3830:
  7318  002638  0E01               	movlw	1
  7319  00263A  261D               	addwf	___fldiv@b^0,f,c
  7320  00263C  0E00               	movlw	0
  7321  00263E  221E               	addwfc	(___fldiv@b+1)^0,f,c
  7322  002640  221F               	addwfc	(___fldiv@b+2)^0,f,c
  7323  002642  2220               	addwfc	(___fldiv@b+3)^0,f,c
  7324  002644  A020               	btfss	(___fldiv@b+3)^0,0,c
  7325  002646  EF27  F013         	goto	u3841
  7326  00264A  EF29  F013         	goto	u3840
  7327  00264E                     u3841:
  7328  00264E  EF40  F013         	goto	l3634
  7329  002652                     u3840:
  7330  002652  C01D  F025         	movff	___fldiv@b,??___fldiv
  7331  002656  C01E  F026         	movff	___fldiv@b+1,??___fldiv+1
  7332  00265A  C01F  F027         	movff	___fldiv@b+2,??___fldiv+2
  7333  00265E  C020  F028         	movff	___fldiv@b+3,??___fldiv+3
  7334  002662  3428               	rlcf	(??___fldiv+3)^0,w,c
  7335  002664  3228               	rrcf	(??___fldiv+3)^0,f,c
  7336  002666  3227               	rrcf	(??___fldiv+2)^0,f,c
  7337  002668  3226               	rrcf	(??___fldiv+1)^0,f,c
  7338  00266A  3225               	rrcf	??___fldiv^0,f,c
  7339  00266C  C025  F01D         	movff	??___fldiv,___fldiv@b
  7340  002670  C026  F01E         	movff	??___fldiv+1,___fldiv@b+1
  7341  002674  C027  F01F         	movff	??___fldiv+2,___fldiv@b+2
  7342  002678  C028  F020         	movff	??___fldiv+3,___fldiv@b+3
  7343  00267C  4A2E               	infsnz	___fldiv@new_exp^0,f,c
  7344  00267E  2A2F               	incf	(___fldiv@new_exp+1)^0,f,c
  7345  002680                     l3634:
  7346  002680  BE2F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7347  002682  EF4B  F013         	goto	u3851
  7348  002686  502F               	movf	(___fldiv@new_exp+1)^0,w,c
  7349  002688  E108               	bnz	u3850
  7350  00268A  282E               	incf	___fldiv@new_exp^0,w,c
  7351  00268C  A0D8               	btfss	status,0,c
  7352  00268E  EF4B  F013         	goto	u3851
  7353  002692  EF4D  F013         	goto	u3850
  7354  002696                     u3851:
  7355  002696  EF58  F013         	goto	l3638
  7356  00269A                     u3850:
  7357  00269A  0E00               	movlw	0
  7358  00269C  6E2F               	movwf	(___fldiv@new_exp+1)^0,c
  7359  00269E  682E               	setf	___fldiv@new_exp^0,c
  7360  0026A0  0E00               	movlw	0
  7361  0026A2  6E1D               	movwf	___fldiv@b^0,c
  7362  0026A4  0E00               	movlw	0
  7363  0026A6  6E1E               	movwf	(___fldiv@b+1)^0,c
  7364  0026A8  0E00               	movlw	0
  7365  0026AA  6E1F               	movwf	(___fldiv@b+2)^0,c
  7366  0026AC  0E00               	movlw	0
  7367  0026AE  6E20               	movwf	(___fldiv@b+3)^0,c
  7368  0026B0                     l3638:
  7369  0026B0  BE2F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7370  0026B2  EF65  F013         	goto	u3860
  7371  0026B6  502F               	movf	(___fldiv@new_exp+1)^0,w,c
  7372  0026B8  E106               	bnz	u3861
  7373  0026BA  042E               	decf	___fldiv@new_exp^0,w,c
  7374  0026BC  B0D8               	btfsc	status,0,c
  7375  0026BE  EF63  F013         	goto	u3861
  7376  0026C2  EF65  F013         	goto	u3860
  7377  0026C6                     u3861:
  7378  0026C6  EF73  F013         	goto	l3642
  7379  0026CA                     u3860:
  7380  0026CA  0E00               	movlw	0
  7381  0026CC  6E2F               	movwf	(___fldiv@new_exp+1)^0,c
  7382  0026CE  0E00               	movlw	0
  7383  0026D0  6E2E               	movwf	___fldiv@new_exp^0,c
  7384  0026D2  0E00               	movlw	0
  7385  0026D4  6E1D               	movwf	___fldiv@b^0,c
  7386  0026D6  0E00               	movlw	0
  7387  0026D8  6E1E               	movwf	(___fldiv@b+1)^0,c
  7388  0026DA  0E00               	movlw	0
  7389  0026DC  6E1F               	movwf	(___fldiv@b+2)^0,c
  7390  0026DE  0E00               	movlw	0
  7391  0026E0  6E20               	movwf	(___fldiv@b+3)^0,c
  7392  0026E2  0E00               	movlw	0
  7393  0026E4  6E2D               	movwf	___fldiv@sign^0,c
  7394  0026E6                     l3642:
  7395  0026E6  C02E  F034         	movff	___fldiv@new_exp,___fldiv@bexp
  7396  0026EA  A034               	btfss	___fldiv@bexp^0,0,c
  7397  0026EC  EF7A  F013         	goto	u3871
  7398  0026F0  EF7C  F013         	goto	u3870
  7399  0026F4                     u3871:
  7400  0026F4  EF7F  F013         	goto	l3648
  7401  0026F8                     u3870:
  7402  0026F8  8E1F               	bsf	(___fldiv@b+2)^0,7,c
  7403  0026FA  EF80  F013         	goto	l3650
  7404  0026FE                     l3648:
  7405  0026FE  9E1F               	bcf	(___fldiv@b+2)^0,7,c
  7406  002700                     l3650:
  7407  002700  90D8               	bcf	status,0,c
  7408  002702  3034               	rrcf	___fldiv@bexp^0,w,c
  7409  002704  6E20               	movwf	(___fldiv@b+3)^0,c
  7410  002706  EF36  F012         	goto	l3564
  7411  00270A                     l836:
  7412  00270A  0012               	return		;funcret
  7413  00270C                     __end_of___fldiv:
  7414                           	callstack 0
  7415                           
  7416 ;; *************** function ___awmod *****************
  7417 ;; Defined at:
  7418 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  dividend        2    3[COMRAM] int 
  7421 ;;  divisor         2    5[COMRAM] int 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;  sign            1    8[COMRAM] unsigned char 
  7424 ;;  counter         1    7[COMRAM] unsigned char 
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  2    3[COMRAM] int 
  7427 ;; Registers used:
  7428 ;;		wreg, status,2, status,0
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7434 ;;      Params:         4       0       0       0       0       0       0       0       0
  7435 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7437 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7438 ;;Total ram usage:        6 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:    2
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_efgtoa
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text24
  7449  003E48                     __ptext24:
  7450                           	callstack 0
  7451  003E48                     ___awmod:
  7452                           	callstack 22
  7453  003E48  0E00               	movlw	0
  7454  003E4A  6E09               	movwf	___awmod@sign^0,c
  7455  003E4C  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  7456  003E4E  EF2D  F01F         	goto	u4130
  7457  003E52  EF2B  F01F         	goto	u4131
  7458  003E56                     u4131:
  7459  003E56  EF33  F01F         	goto	l3846
  7460  003E5A                     u4130:
  7461  003E5A  6C04               	negf	___awmod@dividend^0,c
  7462  003E5C  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7463  003E5E  B0D8               	btfsc	status,0,c
  7464  003E60  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7465  003E62  0E01               	movlw	1
  7466  003E64  6E09               	movwf	___awmod@sign^0,c
  7467  003E66                     l3846:
  7468  003E66  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  7469  003E68  EF3A  F01F         	goto	u4140
  7470  003E6C  EF38  F01F         	goto	u4141
  7471  003E70                     u4141:
  7472  003E70  EF3E  F01F         	goto	l3850
  7473  003E74                     u4140:
  7474  003E74  6C06               	negf	___awmod@divisor^0,c
  7475  003E76  1E07               	comf	(___awmod@divisor+1)^0,f,c
  7476  003E78  B0D8               	btfsc	status,0,c
  7477  003E7A  2A07               	incf	(___awmod@divisor+1)^0,f,c
  7478  003E7C                     l3850:
  7479  003E7C  5006               	movf	___awmod@divisor^0,w,c
  7480  003E7E  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  7481  003E80  B4D8               	btfsc	status,2,c
  7482  003E82  EF45  F01F         	goto	u4151
  7483  003E86  EF47  F01F         	goto	u4150
  7484  003E8A                     u4151:
  7485  003E8A  EF6B  F01F         	goto	l3866
  7486  003E8E                     u4150:
  7487  003E8E  0E01               	movlw	1
  7488  003E90  6E08               	movwf	___awmod@counter^0,c
  7489  003E92  EF4F  F01F         	goto	l3856
  7490  003E96                     l3854:
  7491  003E96  90D8               	bcf	status,0,c
  7492  003E98  3606               	rlcf	___awmod@divisor^0,f,c
  7493  003E9A  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  7494  003E9C  2A08               	incf	___awmod@counter^0,f,c
  7495  003E9E                     l3856:
  7496  003E9E  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  7497  003EA0  EF54  F01F         	goto	u4161
  7498  003EA4  EF56  F01F         	goto	u4160
  7499  003EA8                     u4161:
  7500  003EA8  EF4B  F01F         	goto	l3854
  7501  003EAC                     u4160:
  7502  003EAC                     l3858:
  7503  003EAC  5006               	movf	___awmod@divisor^0,w,c
  7504  003EAE  5C04               	subwf	___awmod@dividend^0,w,c
  7505  003EB0  5007               	movf	(___awmod@divisor+1)^0,w,c
  7506  003EB2  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  7507  003EB4  A0D8               	btfss	status,0,c
  7508  003EB6  EF5F  F01F         	goto	u4171
  7509  003EBA  EF61  F01F         	goto	u4170
  7510  003EBE                     u4171:
  7511  003EBE  EF65  F01F         	goto	l3862
  7512  003EC2                     u4170:
  7513  003EC2  5006               	movf	___awmod@divisor^0,w,c
  7514  003EC4  5E04               	subwf	___awmod@dividend^0,f,c
  7515  003EC6  5007               	movf	(___awmod@divisor+1)^0,w,c
  7516  003EC8  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  7517  003ECA                     l3862:
  7518  003ECA  90D8               	bcf	status,0,c
  7519  003ECC  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  7520  003ECE  3206               	rrcf	___awmod@divisor^0,f,c
  7521  003ED0  2E08               	decfsz	___awmod@counter^0,f,c
  7522  003ED2  EF56  F01F         	goto	l3858
  7523  003ED6                     l3866:
  7524  003ED6  5009               	movf	___awmod@sign^0,w,c
  7525  003ED8  B4D8               	btfsc	status,2,c
  7526  003EDA  EF71  F01F         	goto	u4181
  7527  003EDE  EF73  F01F         	goto	u4180
  7528  003EE2                     u4181:
  7529  003EE2  EF77  F01F         	goto	l3870
  7530  003EE6                     u4180:
  7531  003EE6  6C04               	negf	___awmod@dividend^0,c
  7532  003EE8  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7533  003EEA  B0D8               	btfsc	status,0,c
  7534  003EEC  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7535  003EEE                     l3870:
  7536  003EEE  C004  F004         	movff	___awmod@dividend,?___awmod
  7537  003EF2  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  7538  003EF6  0012               	return		;funcret
  7539  003EF8                     __end_of___awmod:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function ___awdiv *****************
  7543 ;; Defined at:
  7544 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  dividend        2    3[COMRAM] int 
  7547 ;;  divisor         2    5[COMRAM] int 
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;  quotient        2    9[COMRAM] int 
  7550 ;;  sign            1    8[COMRAM] unsigned char 
  7551 ;;  counter         1    7[COMRAM] unsigned char 
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  2    3[COMRAM] int 
  7554 ;; Registers used:
  7555 ;;		wreg, status,2, status,0
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7561 ;;      Params:         4       0       0       0       0       0       0       0       0
  7562 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7564 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7565 ;;Total ram usage:        8 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; Hardware stack levels required when called:    2
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_efgtoa
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text25
  7576  003C02                     __ptext25:
  7577                           	callstack 0
  7578  003C02                     ___awdiv:
  7579                           	callstack 22
  7580  003C02  0E00               	movlw	0
  7581  003C04  6E09               	movwf	___awdiv@sign^0,c
  7582  003C06  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  7583  003C08  EF0A  F01E         	goto	u4070
  7584  003C0C  EF08  F01E         	goto	u4071
  7585  003C10                     u4071:
  7586  003C10  EF10  F01E         	goto	l3802
  7587  003C14                     u4070:
  7588  003C14  6C06               	negf	___awdiv@divisor^0,c
  7589  003C16  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  7590  003C18  B0D8               	btfsc	status,0,c
  7591  003C1A  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  7592  003C1C  0E01               	movlw	1
  7593  003C1E  6E09               	movwf	___awdiv@sign^0,c
  7594  003C20                     l3802:
  7595  003C20  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  7596  003C22  EF17  F01E         	goto	u4080
  7597  003C26  EF15  F01E         	goto	u4081
  7598  003C2A                     u4081:
  7599  003C2A  EF1D  F01E         	goto	l3808
  7600  003C2E                     u4080:
  7601  003C2E  6C04               	negf	___awdiv@dividend^0,c
  7602  003C30  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  7603  003C32  B0D8               	btfsc	status,0,c
  7604  003C34  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  7605  003C36  0E01               	movlw	1
  7606  003C38  1A09               	xorwf	___awdiv@sign^0,f,c
  7607  003C3A                     l3808:
  7608  003C3A  0E00               	movlw	0
  7609  003C3C  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  7610  003C3E  0E00               	movlw	0
  7611  003C40  6E0A               	movwf	___awdiv@quotient^0,c
  7612  003C42  5006               	movf	___awdiv@divisor^0,w,c
  7613  003C44  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  7614  003C46  B4D8               	btfsc	status,2,c
  7615  003C48  EF28  F01E         	goto	u4091
  7616  003C4C  EF2A  F01E         	goto	u4090
  7617  003C50                     u4091:
  7618  003C50  EF52  F01E         	goto	l3830
  7619  003C54                     u4090:
  7620  003C54  0E01               	movlw	1
  7621  003C56  6E08               	movwf	___awdiv@counter^0,c
  7622  003C58  EF32  F01E         	goto	l3816
  7623  003C5C                     l3814:
  7624  003C5C  90D8               	bcf	status,0,c
  7625  003C5E  3606               	rlcf	___awdiv@divisor^0,f,c
  7626  003C60  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  7627  003C62  2A08               	incf	___awdiv@counter^0,f,c
  7628  003C64                     l3816:
  7629  003C64  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  7630  003C66  EF37  F01E         	goto	u4101
  7631  003C6A  EF39  F01E         	goto	u4100
  7632  003C6E                     u4101:
  7633  003C6E  EF2E  F01E         	goto	l3814
  7634  003C72                     u4100:
  7635  003C72                     l3818:
  7636  003C72  90D8               	bcf	status,0,c
  7637  003C74  360A               	rlcf	___awdiv@quotient^0,f,c
  7638  003C76  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  7639  003C78  5006               	movf	___awdiv@divisor^0,w,c
  7640  003C7A  5C04               	subwf	___awdiv@dividend^0,w,c
  7641  003C7C  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7642  003C7E  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  7643  003C80  A0D8               	btfss	status,0,c
  7644  003C82  EF45  F01E         	goto	u4111
  7645  003C86  EF47  F01E         	goto	u4110
  7646  003C8A                     u4111:
  7647  003C8A  EF4C  F01E         	goto	l3826
  7648  003C8E                     u4110:
  7649  003C8E  5006               	movf	___awdiv@divisor^0,w,c
  7650  003C90  5E04               	subwf	___awdiv@dividend^0,f,c
  7651  003C92  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7652  003C94  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  7653  003C96  800A               	bsf	___awdiv@quotient^0,0,c
  7654  003C98                     l3826:
  7655  003C98  90D8               	bcf	status,0,c
  7656  003C9A  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  7657  003C9C  3206               	rrcf	___awdiv@divisor^0,f,c
  7658  003C9E  2E08               	decfsz	___awdiv@counter^0,f,c
  7659  003CA0  EF39  F01E         	goto	l3818
  7660  003CA4                     l3830:
  7661  003CA4  5009               	movf	___awdiv@sign^0,w,c
  7662  003CA6  B4D8               	btfsc	status,2,c
  7663  003CA8  EF58  F01E         	goto	u4121
  7664  003CAC  EF5A  F01E         	goto	u4120
  7665  003CB0                     u4121:
  7666  003CB0  EF5E  F01E         	goto	l3834
  7667  003CB4                     u4120:
  7668  003CB4  6C0A               	negf	___awdiv@quotient^0,c
  7669  003CB6  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  7670  003CB8  B0D8               	btfsc	status,0,c
  7671  003CBA  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  7672  003CBC                     l3834:
  7673  003CBC  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  7674  003CC0  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  7675  003CC4  0012               	return		;funcret
  7676  003CC6                     __end_of___awdiv:
  7677                           	callstack 0
  7678                           
  7679 ;; *************** function _dtoa *****************
  7680 ;; Defined at:
  7681 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  7684 ;;		 -> sprintf@f(6), 
  7685 ;;  d               8   32[COMRAM] long long 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;  n               8   56[COMRAM] long long 
  7688 ;;  i               2   64[COMRAM] int 
  7689 ;;  s               2   54[COMRAM] int 
  7690 ;;  w               2   52[COMRAM] int 
  7691 ;;  p               2   50[COMRAM] int 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  2   30[COMRAM] int 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7701 ;;      Params:        10       0       0       0       0       0       0       0       0
  7702 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7703 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7704 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7705 ;;Total ram usage:       36 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    6
  7708 ;; This function calls:
  7709 ;;		___aodiv
  7710 ;;		___aomod
  7711 ;;		_abs
  7712 ;;		_pad
  7713 ;; This function is called by:
  7714 ;;		_vfpfcnvrt
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text26
  7719  00270C                     __ptext26:
  7720                           	callstack 0
  7721  00270C                     _dtoa:
  7722                           	callstack 19
  7723  00270C                     
  7724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7725  00270C  C021  F039         	movff	dtoa@d,dtoa@n
  7726  002710  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  7727  002714  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  7728  002718  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  7729  00271C  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  7730  002720  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  7731  002724  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  7732  002728  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  7733  00272C                     
  7734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7735  00272C  BE40               	btfsc	(dtoa@n+7)^0,7,c
  7736  00272E  EF9B  F013         	goto	u4661
  7737  002732  EF9E  F013         	goto	u4660
  7738  002736                     u4661:
  7739  002736  0E01               	movlw	1
  7740  002738  EF9F  F013         	goto	u4670
  7741  00273C                     u4660:
  7742  00273C  0E00               	movlw	0
  7743  00273E                     u4670:
  7744  00273E  6E37               	movwf	dtoa@s^0,c
  7745  002740  6A38               	clrf	(dtoa@s+1)^0,c
  7746                           
  7747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7748  002742  5037               	movf	dtoa@s^0,w,c
  7749  002744  1038               	iorwf	(dtoa@s+1)^0,w,c
  7750  002746  B4D8               	btfsc	status,2,c
  7751  002748  EFA8  F013         	goto	u4681
  7752  00274C  EFAA  F013         	goto	u4680
  7753  002750                     u4681:
  7754  002750  EFBA  F013         	goto	l4076
  7755  002754                     u4680:
  7756  002754                     
  7757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7758  002754  1E40               	comf	(dtoa@n+7)^0,f,c
  7759  002756  1E3F               	comf	(dtoa@n+6)^0,f,c
  7760  002758  1E3E               	comf	(dtoa@n+5)^0,f,c
  7761  00275A  1E3D               	comf	(dtoa@n+4)^0,f,c
  7762  00275C  1E3C               	comf	(dtoa@n+3)^0,f,c
  7763  00275E  1E3B               	comf	(dtoa@n+2)^0,f,c
  7764  002760  1E3A               	comf	(dtoa@n+1)^0,f,c
  7765  002762  6C39               	negf	dtoa@n^0,c
  7766  002764  0E00               	movlw	0
  7767  002766  223A               	addwfc	(dtoa@n+1)^0,f,c
  7768  002768  223B               	addwfc	(dtoa@n+2)^0,f,c
  7769  00276A  223C               	addwfc	(dtoa@n+3)^0,f,c
  7770  00276C  223D               	addwfc	(dtoa@n+4)^0,f,c
  7771  00276E  223E               	addwfc	(dtoa@n+5)^0,f,c
  7772  002770  223F               	addwfc	(dtoa@n+6)^0,f,c
  7773  002772  2240               	addwfc	(dtoa@n+7)^0,f,c
  7774  002774                     l4076:
  7775                           
  7776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7777  002774  0100               	movlb	0	; () banked
  7778  002776  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  7779  002778  EFC0  F013         	goto	u4691
  7780  00277C  EFC2  F013         	goto	u4690
  7781  002780                     u4691:
  7782  002780  EFC3  F013         	goto	l4080
  7783  002784                     u4690:
  7784  002784                     
  7785                           ; BSR set to: 0
  7786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7787  002784  925A               	bcf	_flags^0,1,c
  7788  002786                     l4080:
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7792  002786  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  7793  002788  EFD0  F013         	goto	u4700
  7794  00278C  51F9               	movf	(_prec+1)& (0+255),w,b
  7795  00278E  E106               	bnz	u4701
  7796  002790  05F8               	decf	_prec& (0+255),w,b
  7797  002792  B0D8               	btfsc	status,0,c
  7798  002794  EFCE  F013         	goto	u4701
  7799  002798  EFD0  F013         	goto	u4700
  7800  00279C                     u4701:
  7801  00279C  EFD6  F013         	goto	l986
  7802  0027A0                     u4700:
  7803  0027A0                     
  7804                           ; BSR set to: 0
  7805  0027A0  0E00               	movlw	0
  7806  0027A2  6E34               	movwf	(dtoa@p+1)^0,c
  7807  0027A4  0E01               	movlw	1
  7808  0027A6  6E33               	movwf	dtoa@p^0,c
  7809  0027A8  EFDA  F013         	goto	l988
  7810  0027AC                     l986:
  7811                           
  7812                           ; BSR set to: 0
  7813  0027AC  C0F8  F033         	movff	_prec,dtoa@p
  7814  0027B0  C0F9  F034         	movff	_prec+1,dtoa@p+1
  7815  0027B4                     l988:
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7819  0027B4  C0F6  F035         	movff	_width,dtoa@w
  7820  0027B8  C0F7  F036         	movff	_width+1,dtoa@w+1
  7821  0027BC                     
  7822                           ; BSR set to: 0
  7823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7824  0027BC  5037               	movf	dtoa@s^0,w,c
  7825  0027BE  1038               	iorwf	(dtoa@s+1)^0,w,c
  7826  0027C0  A4D8               	btfss	status,2,c
  7827  0027C2  EFE5  F013         	goto	u4711
  7828  0027C6  EFE7  F013         	goto	u4710
  7829  0027CA                     u4711:
  7830  0027CA  EFEE  F013         	goto	l4088
  7831  0027CE                     u4710:
  7832  0027CE                     
  7833                           ; BSR set to: 0
  7834  0027CE  A45A               	btfss	_flags^0,2,c
  7835  0027D0  EFEC  F013         	goto	u4721
  7836  0027D4  EFEE  F013         	goto	u4720
  7837  0027D8                     u4721:
  7838  0027D8  EFF1  F013         	goto	l4090
  7839  0027DC                     u4720:
  7840  0027DC                     l4088:
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  7844  0027DC  0635               	decf	dtoa@w^0,f,c
  7845  0027DE  A0D8               	btfss	status,0,c
  7846  0027E0  0636               	decf	(dtoa@w+1)^0,f,c
  7847  0027E2                     l4090:
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7851  0027E2  0E00               	movlw	0
  7852  0027E4  6E42               	movwf	(dtoa@i+1)^0,c
  7853  0027E6  0E4F               	movlw	79
  7854  0027E8  6E41               	movwf	dtoa@i^0,c
  7855  0027EA                     
  7856                           ; BSR set to: 0
  7857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7858  0027EA  0E00               	movlw	0
  7859  0027EC  0101               	movlb	1	; () banked
  7860  0027EE  6F58               	movwf	(_dbuf+79)& (0+255),b
  7861                           
  7862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7863  0027F0  EF76  F014         	goto	l4104
  7864  0027F4                     l4094:
  7865                           
  7866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  7867  0027F4  0641               	decf	dtoa@i^0,f,c
  7868  0027F6  A0D8               	btfss	status,0,c
  7869  0027F8  0642               	decf	(dtoa@i+1)^0,f,c
  7870  0027FA                     
  7871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7872  0027FA  0E09               	movlw	low _dbuf
  7873  0027FC  2441               	addwf	dtoa@i^0,w,c
  7874  0027FE  6ED9               	movwf	fsr2l,c
  7875  002800  0E01               	movlw	high _dbuf
  7876  002802  2042               	addwfc	(dtoa@i+1)^0,w,c
  7877  002804  6EDA               	movwf	fsr2h,c
  7878  002806  C039  F004         	movff	dtoa@n,___aomod@dividend
  7879  00280A  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  7880  00280E  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  7881  002812  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  7882  002816  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  7883  00281A  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  7884  00281E  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  7885  002822  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  7886  002826  0E0A               	movlw	10
  7887  002828  6E0C               	movwf	___aomod@divisor^0,c
  7888  00282A  0E00               	movlw	0
  7889  00282C  6E0D               	movwf	(___aomod@divisor+1)^0,c
  7890  00282E  0E00               	movlw	0
  7891  002830  6E0E               	movwf	(___aomod@divisor+2)^0,c
  7892  002832  0E00               	movlw	0
  7893  002834  6E0F               	movwf	(___aomod@divisor+3)^0,c
  7894  002836  0E00               	movlw	0
  7895  002838  6E10               	movwf	(___aomod@divisor+4)^0,c
  7896  00283A  0E00               	movlw	0
  7897  00283C  6E11               	movwf	(___aomod@divisor+5)^0,c
  7898  00283E  0E00               	movlw	0
  7899  002840  6E12               	movwf	(___aomod@divisor+6)^0,c
  7900  002842  0E00               	movlw	0
  7901  002844  6E13               	movwf	(___aomod@divisor+7)^0,c
  7902  002846  EC65  F018         	call	___aomod	;wreg free
  7903  00284A  C004  F029         	movff	?___aomod,??_dtoa
  7904  00284E  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  7905  002852  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  7906  002856  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  7907  00285A  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  7908  00285E  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  7909  002862  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  7910  002866  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  7911  00286A  C029  F016         	movff	??_dtoa,abs@a
  7912  00286E  C02B  F017         	movff	??_dtoa+2,abs@a+1
  7913  002872  ECDD  F021         	call	_abs	;wreg free
  7914  002876  5016               	movf	?_abs^0,w,c
  7915  002878  0F30               	addlw	48
  7916  00287A  6EDF               	movwf	indf2,c
  7917  00287C                     
  7918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  7919  00287C  0633               	decf	dtoa@p^0,f,c
  7920  00287E  A0D8               	btfss	status,0,c
  7921  002880  0634               	decf	(dtoa@p+1)^0,f,c
  7922  002882                     
  7923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  7924  002882  0635               	decf	dtoa@w^0,f,c
  7925  002884  A0D8               	btfss	status,0,c
  7926  002886  0636               	decf	(dtoa@w+1)^0,f,c
  7927  002888                     
  7928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7929  002888  C039  F004         	movff	dtoa@n,___aodiv@dividend
  7930  00288C  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  7931  002890  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  7932  002894  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  7933  002898  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  7934  00289C  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  7935  0028A0  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  7936  0028A4  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  7937  0028A8  0E0A               	movlw	10
  7938  0028AA  6E0C               	movwf	___aodiv@divisor^0,c
  7939  0028AC  0E00               	movlw	0
  7940  0028AE  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  7941  0028B0  0E00               	movlw	0
  7942  0028B2  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  7943  0028B4  0E00               	movlw	0
  7944  0028B6  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  7945  0028B8  0E00               	movlw	0
  7946  0028BA  6E10               	movwf	(___aodiv@divisor+4)^0,c
  7947  0028BC  0E00               	movlw	0
  7948  0028BE  6E11               	movwf	(___aodiv@divisor+5)^0,c
  7949  0028C0  0E00               	movlw	0
  7950  0028C2  6E12               	movwf	(___aodiv@divisor+6)^0,c
  7951  0028C4  0E00               	movlw	0
  7952  0028C6  6E13               	movwf	(___aodiv@divisor+7)^0,c
  7953  0028C8  ECA1  F017         	call	___aodiv	;wreg free
  7954  0028CC  C004  F039         	movff	?___aodiv,dtoa@n
  7955  0028D0  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  7956  0028D4  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  7957  0028D8  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  7958  0028DC  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  7959  0028E0  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  7960  0028E4  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  7961  0028E8  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  7962  0028EC                     l4104:
  7963                           
  7964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7965  0028EC  BE42               	btfsc	(dtoa@i+1)^0,7,c
  7966  0028EE  EF81  F014         	goto	u4731
  7967  0028F2  5042               	movf	(dtoa@i+1)^0,w,c
  7968  0028F4  E108               	bnz	u4730
  7969  0028F6  0441               	decf	dtoa@i^0,w,c
  7970  0028F8  A0D8               	btfss	status,0,c
  7971  0028FA  EF81  F014         	goto	u4731
  7972  0028FE  EF83  F014         	goto	u4730
  7973  002902                     u4731:
  7974  002902  EFB3  F014         	goto	l4114
  7975  002906                     u4730:
  7976  002906  5039               	movf	dtoa@n^0,w,c
  7977  002908  103A               	iorwf	(dtoa@n+1)^0,w,c
  7978  00290A  103B               	iorwf	(dtoa@n+2)^0,w,c
  7979  00290C  103C               	iorwf	(dtoa@n+3)^0,w,c
  7980  00290E  103D               	iorwf	(dtoa@n+4)^0,w,c
  7981  002910  103E               	iorwf	(dtoa@n+5)^0,w,c
  7982  002912  103F               	iorwf	(dtoa@n+6)^0,w,c
  7983  002914  1040               	iorwf	(dtoa@n+7)^0,w,c
  7984  002916  A4D8               	btfss	status,2,c
  7985  002918  EF90  F014         	goto	u4741
  7986  00291C  EF92  F014         	goto	u4740
  7987  002920                     u4741:
  7988  002920  EFFA  F013         	goto	l4094
  7989  002924                     u4740:
  7990  002924  BE34               	btfsc	(dtoa@p+1)^0,7,c
  7991  002926  EF9F  F014         	goto	u4750
  7992  00292A  5034               	movf	(dtoa@p+1)^0,w,c
  7993  00292C  E106               	bnz	u4751
  7994  00292E  0433               	decf	dtoa@p^0,w,c
  7995  002930  B0D8               	btfsc	status,0,c
  7996  002932  EF9D  F014         	goto	u4751
  7997  002936  EF9F  F014         	goto	u4750
  7998  00293A                     u4751:
  7999  00293A  EFFA  F013         	goto	l4094
  8000  00293E                     u4750:
  8001  00293E  BE36               	btfsc	(dtoa@w+1)^0,7,c
  8002  002940  EFAA  F014         	goto	u4761
  8003  002944  5036               	movf	(dtoa@w+1)^0,w,c
  8004  002946  E108               	bnz	u4760
  8005  002948  0435               	decf	dtoa@w^0,w,c
  8006  00294A  A0D8               	btfss	status,0,c
  8007  00294C  EFAA  F014         	goto	u4761
  8008  002950  EFAC  F014         	goto	u4760
  8009  002954                     u4761:
  8010  002954  EFB3  F014         	goto	l4114
  8011  002958                     u4760:
  8012  002958  B25A               	btfsc	_flags^0,1,c
  8013  00295A  EFB1  F014         	goto	u4771
  8014  00295E  EFB3  F014         	goto	u4770
  8015  002962                     u4771:
  8016  002962  EFFA  F013         	goto	l4094
  8017  002966                     u4770:
  8018  002966                     l4114:
  8019                           
  8020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8021  002966  5037               	movf	dtoa@s^0,w,c
  8022  002968  1038               	iorwf	(dtoa@s+1)^0,w,c
  8023  00296A  A4D8               	btfss	status,2,c
  8024  00296C  EFBA  F014         	goto	u4781
  8025  002970  EFBC  F014         	goto	u4780
  8026  002974                     u4781:
  8027  002974  EFC3  F014         	goto	l4118
  8028  002978                     u4780:
  8029  002978  A45A               	btfss	_flags^0,2,c
  8030  00297A  EFC1  F014         	goto	u4791
  8031  00297E  EFC3  F014         	goto	u4790
  8032  002982                     u4791:
  8033  002982  EFE1  F014         	goto	l4128
  8034  002986                     u4790:
  8035  002986                     l4118:
  8036                           
  8037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  8038  002986  0641               	decf	dtoa@i^0,f,c
  8039  002988  A0D8               	btfss	status,0,c
  8040  00298A  0642               	decf	(dtoa@i+1)^0,f,c
  8041  00298C                     
  8042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8043  00298C  5037               	movf	dtoa@s^0,w,c
  8044  00298E  1038               	iorwf	(dtoa@s+1)^0,w,c
  8045  002990  A4D8               	btfss	status,2,c
  8046  002992  EFCD  F014         	goto	u4801
  8047  002996  EFCF  F014         	goto	u4800
  8048  00299A                     u4801:
  8049  00299A  EFD5  F014         	goto	l4124
  8050  00299E                     u4800:
  8051  00299E  0E00               	movlw	0
  8052  0029A0  6E32               	movwf	(_dtoa$1603+1)^0,c
  8053  0029A2  0E2B               	movlw	43
  8054  0029A4  6E31               	movwf	_dtoa$1603^0,c
  8055  0029A6  EFD9  F014         	goto	l4126
  8056  0029AA                     l4124:
  8057  0029AA  0E00               	movlw	0
  8058  0029AC  6E32               	movwf	(_dtoa$1603+1)^0,c
  8059  0029AE  0E2D               	movlw	45
  8060  0029B0  6E31               	movwf	_dtoa$1603^0,c
  8061  0029B2                     l4126:
  8062  0029B2  0E09               	movlw	low _dbuf
  8063  0029B4  2441               	addwf	dtoa@i^0,w,c
  8064  0029B6  6ED9               	movwf	fsr2l,c
  8065  0029B8  0E01               	movlw	high _dbuf
  8066  0029BA  2042               	addwfc	(dtoa@i+1)^0,w,c
  8067  0029BC  6EDA               	movwf	fsr2h,c
  8068  0029BE  C031  FFDF         	movff	_dtoa$1603,indf2
  8069  0029C2                     l4128:
  8070                           
  8071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8072  0029C2  C01F  F014         	movff	dtoa@fp,pad@fp
  8073  0029C6  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  8074  0029CA  0E09               	movlw	low _dbuf
  8075  0029CC  2441               	addwf	dtoa@i^0,w,c
  8076  0029CE  6E16               	movwf	pad@buf^0,c
  8077  0029D0  0E01               	movlw	high _dbuf
  8078  0029D2  2042               	addwfc	(dtoa@i+1)^0,w,c
  8079  0029D4  6E17               	movwf	(pad@buf+1)^0,c
  8080  0029D6  C035  F018         	movff	dtoa@w,pad@p
  8081  0029DA  C036  F019         	movff	dtoa@w+1,pad@p+1
  8082  0029DE  EC63  F01E         	call	_pad	;wreg free
  8083  0029E2  C014  F01F         	movff	?_pad,?_dtoa
  8084  0029E6  C015  F020         	movff	?_pad+1,?_dtoa+1
  8085  0029EA  0012               	return		;funcret
  8086  0029EC                     __end_of_dtoa:
  8087                           	callstack 0
  8088                           
  8089 ;; *************** function _pad *****************
  8090 ;; Defined at:
  8091 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  8094 ;;		 -> sprintf@f(6), 
  8095 ;;  buf             2   21[COMRAM] PTR unsigned char 
  8096 ;;		 -> dbuf(80), 
  8097 ;;  p               2   23[COMRAM] int 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  w               2   28[COMRAM] int 
  8100 ;;  i               2   26[COMRAM] int 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  2   19[COMRAM] int 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8110 ;;      Params:         6       0       0       0       0       0       0       0       0
  8111 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8112 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8113 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8114 ;;Total ram usage:       11 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    5
  8117 ;; This function calls:
  8118 ;;		_fputc
  8119 ;;		_fputs
  8120 ;;		_strlen
  8121 ;; This function is called by:
  8122 ;;		_dtoa
  8123 ;;		_efgtoa
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text27
  8128  003CC6                     __ptext27:
  8129                           	callstack 0
  8130  003CC6                     _pad:
  8131                           	callstack 19
  8132  003CC6                     
  8133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8134  003CC6  A05A               	btfss	_flags^0,0,c
  8135  003CC8  EF68  F01E         	goto	u4351
  8136  003CCC  EF6A  F01E         	goto	u4350
  8137  003CD0                     u4351:
  8138  003CD0  EF74  F01E         	goto	l3968
  8139  003CD4                     u4350:
  8140  003CD4                     
  8141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8142  003CD4  C016  F00D         	movff	pad@buf,fputs@s
  8143  003CD8  C017  F00E         	movff	pad@buf+1,fputs@s+1
  8144  003CDC  C014  F00F         	movff	pad@fp,fputs@fp
  8145  003CE0  C015  F010         	movff	pad@fp+1,fputs@fp+1
  8146  003CE4  ECBB  F021         	call	_fputs	;wreg free
  8147  003CE8                     l3968:
  8148                           
  8149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8150  003CE8  BE19               	btfsc	(pad@p+1)^0,7,c
  8151  003CEA  EF79  F01E         	goto	u4361
  8152  003CEE  EF7B  F01E         	goto	u4360
  8153  003CF2                     u4361:
  8154  003CF2  EF81  F01E         	goto	l3972
  8155  003CF6                     u4360:
  8156  003CF6  C018  F01D         	movff	pad@p,pad@w
  8157  003CFA  C019  F01E         	movff	pad@p+1,pad@w+1
  8158  003CFE  EF85  F01E         	goto	l975
  8159  003D02                     l3972:
  8160  003D02  0E00               	movlw	0
  8161  003D04  6E1E               	movwf	(pad@w+1)^0,c
  8162  003D06  0E00               	movlw	0
  8163  003D08  6E1D               	movwf	pad@w^0,c
  8164  003D0A                     l975:
  8165                           
  8166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8167  003D0A  0E00               	movlw	0
  8168  003D0C  6E1C               	movwf	(pad@i+1)^0,c
  8169  003D0E  0E00               	movlw	0
  8170  003D10  6E1B               	movwf	pad@i^0,c
  8171                           
  8172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8173  003D12  EF97  F01E         	goto	l3978
  8174  003D16                     l3974:
  8175                           
  8176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8177  003D16  0E00               	movlw	0
  8178  003D18  6E05               	movwf	(fputc@c+1)^0,c
  8179  003D1A  0E20               	movlw	32
  8180  003D1C  6E04               	movwf	fputc@c^0,c
  8181  003D1E  C014  F006         	movff	pad@fp,fputc@fp
  8182  003D22  C015  F007         	movff	pad@fp+1,fputc@fp+1
  8183  003D26  EC39  F01D         	call	_fputc	;wreg free
  8184  003D2A                     
  8185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8186  003D2A  4A1B               	infsnz	pad@i^0,f,c
  8187  003D2C  2A1C               	incf	(pad@i+1)^0,f,c
  8188  003D2E                     l3978:
  8189                           
  8190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8191  003D2E  501D               	movf	pad@w^0,w,c
  8192  003D30  5C1B               	subwf	pad@i^0,w,c
  8193  003D32  501C               	movf	(pad@i+1)^0,w,c
  8194  003D34  0A80               	xorlw	128
  8195  003D36  6E1A               	movwf	??_pad^0,c
  8196  003D38  501E               	movf	(pad@w+1)^0,w,c
  8197  003D3A  0A80               	xorlw	128
  8198  003D3C  581A               	subwfb	??_pad^0,w,c
  8199  003D3E  A0D8               	btfss	status,0,c
  8200  003D40  EFA4  F01E         	goto	u4371
  8201  003D44  EFA6  F01E         	goto	u4370
  8202  003D48                     u4371:
  8203  003D48  EF8B  F01E         	goto	l3974
  8204  003D4C                     u4370:
  8205  003D4C                     
  8206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8207  003D4C  B05A               	btfsc	_flags^0,0,c
  8208  003D4E  EFAB  F01E         	goto	u4381
  8209  003D52  EFAD  F01E         	goto	u4380
  8210  003D56                     u4381:
  8211  003D56  EFB7  F01E         	goto	l3982
  8212  003D5A                     u4380:
  8213  003D5A                     
  8214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8215  003D5A  C016  F00D         	movff	pad@buf,fputs@s
  8216  003D5E  C017  F00E         	movff	pad@buf+1,fputs@s+1
  8217  003D62  C014  F00F         	movff	pad@fp,fputs@fp
  8218  003D66  C015  F010         	movff	pad@fp+1,fputs@fp+1
  8219  003D6A  ECBB  F021         	call	_fputs	;wreg free
  8220  003D6E                     l3982:
  8221                           
  8222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8223  003D6E  C016  F004         	movff	pad@buf,strlen@s
  8224  003D72  C017  F005         	movff	pad@buf+1,strlen@s+1
  8225  003D76  EC6F  F022         	call	_strlen	;wreg free
  8226  003D7A  501D               	movf	pad@w^0,w,c
  8227  003D7C  2404               	addwf	?_strlen^0,w,c
  8228  003D7E  6E14               	movwf	?_pad^0,c
  8229  003D80  501E               	movf	(pad@w+1)^0,w,c
  8230  003D82  2005               	addwfc	(?_strlen+1)^0,w,c
  8231  003D84  6E15               	movwf	(?_pad+1)^0,c
  8232  003D86  0012               	return		;funcret
  8233  003D88                     __end_of_pad:
  8234                           	callstack 0
  8235                           
  8236 ;; *************** function _strlen *****************
  8237 ;; Defined at:
  8238 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;  s               2    3[COMRAM] PTR const unsigned char 
  8241 ;;		 -> dbuf(80), 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;  a               2    5[COMRAM] PTR const unsigned char 
  8244 ;;		 -> dbuf(80), 
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  2    3[COMRAM] unsigned int 
  8247 ;; Registers used:
  8248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8254 ;;      Params:         2       0       0       0       0       0       0       0       0
  8255 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8257 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8258 ;;Total ram usage:        4 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; Hardware stack levels required when called:    2
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		_pad
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           	psect	text28
  8269  0044DE                     __ptext28:
  8270                           	callstack 0
  8271  0044DE                     _strlen:
  8272                           	callstack 21
  8273  0044DE  C004  F006         	movff	strlen@s,strlen@a
  8274  0044E2  C005  F007         	movff	strlen@s+1,strlen@a+1
  8275  0044E6  EF77  F022         	goto	l3424
  8276  0044EA                     l3422:
  8277  0044EA  4A04               	infsnz	strlen@s^0,f,c
  8278  0044EC  2A05               	incf	(strlen@s+1)^0,f,c
  8279  0044EE                     l3424:
  8280  0044EE  C004  FFD9         	movff	strlen@s,fsr2l
  8281  0044F2  C005  FFDA         	movff	strlen@s+1,fsr2h
  8282  0044F6  50DF               	movf	indf2,w,c
  8283  0044F8  A4D8               	btfss	status,2,c
  8284  0044FA  EF81  F022         	goto	u3491
  8285  0044FE  EF83  F022         	goto	u3490
  8286  004502                     u3491:
  8287  004502  EF75  F022         	goto	l3422
  8288  004506                     u3490:
  8289  004506  5006               	movf	strlen@a^0,w,c
  8290  004508  5C04               	subwf	strlen@s^0,w,c
  8291  00450A  6E04               	movwf	?_strlen^0,c
  8292  00450C  5007               	movf	(strlen@a+1)^0,w,c
  8293  00450E  5805               	subwfb	(strlen@s+1)^0,w,c
  8294  004510  6E05               	movwf	(?_strlen+1)^0,c
  8295  004512  0012               	return		;funcret
  8296  004514                     __end_of_strlen:
  8297                           	callstack 0
  8298                           
  8299 ;; *************** function _fputs *****************
  8300 ;; Defined at:
  8301 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;  s               2   12[COMRAM] PTR const unsigned char 
  8304 ;;		 -> dbuf(80), 
  8305 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  8306 ;;		 -> sprintf@f(6), 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  i               2   17[COMRAM] int 
  8309 ;;  c               1   16[COMRAM] unsigned char 
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  2   12[COMRAM] int 
  8312 ;; Registers used:
  8313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8319 ;;      Params:         4       0       0       0       0       0       0       0       0
  8320 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8322 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8323 ;;Total ram usage:        7 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:    4
  8326 ;; This function calls:
  8327 ;;		_fputc
  8328 ;; This function is called by:
  8329 ;;		_pad
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           	psect	text29
  8334  004376                     __ptext29:
  8335                           	callstack 0
  8336  004376                     _fputs:
  8337                           	callstack 19
  8338  004376  0E00               	movlw	0
  8339  004378  6E13               	movwf	(fputs@i+1)^0,c
  8340  00437A  0E00               	movlw	0
  8341  00437C  6E12               	movwf	fputs@i^0,c
  8342  00437E  EFCC  F021         	goto	l3418
  8343  004382                     l3414:
  8344  004382  C011  F004         	movff	fputs@c,fputc@c
  8345  004386  6A05               	clrf	(fputc@c+1)^0,c
  8346  004388  C00F  F006         	movff	fputs@fp,fputc@fp
  8347  00438C  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  8348  004390  EC39  F01D         	call	_fputc	;wreg free
  8349  004394  4A12               	infsnz	fputs@i^0,f,c
  8350  004396  2A13               	incf	(fputs@i+1)^0,f,c
  8351  004398                     l3418:
  8352  004398  5012               	movf	fputs@i^0,w,c
  8353  00439A  240D               	addwf	fputs@s^0,w,c
  8354  00439C  6ED9               	movwf	fsr2l,c
  8355  00439E  5013               	movf	(fputs@i+1)^0,w,c
  8356  0043A0  200E               	addwfc	(fputs@s+1)^0,w,c
  8357  0043A2  6EDA               	movwf	fsr2h,c
  8358  0043A4  50DF               	movf	indf2,w,c
  8359  0043A6  6E11               	movwf	fputs@c^0,c
  8360  0043A8  5011               	movf	fputs@c^0,w,c
  8361  0043AA  A4D8               	btfss	status,2,c
  8362  0043AC  EFDA  F021         	goto	u3481
  8363  0043B0  EFDC  F021         	goto	u3480
  8364  0043B4                     u3481:
  8365  0043B4  EFC1  F021         	goto	l3414
  8366  0043B8                     u3480:
  8367  0043B8  0012               	return		;funcret
  8368  0043BA                     __end_of_fputs:
  8369                           	callstack 0
  8370                           
  8371 ;; *************** function _fputc *****************
  8372 ;; Defined at:
  8373 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;  c               2    3[COMRAM] int 
  8376 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  8377 ;;		 -> sprintf@f(6), 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;		None
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  2    3[COMRAM] int 
  8382 ;; Registers used:
  8383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8389 ;;      Params:         4       0       0       0       0       0       0       0       0
  8390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8391 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8392 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8393 ;;Total ram usage:        9 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:    3
  8396 ;; This function calls:
  8397 ;;		_putch
  8398 ;; This function is called by:
  8399 ;;		_pad
  8400 ;;		_vfpfcnvrt
  8401 ;;		_fputs
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text30
  8406  003A72                     __ptext30:
  8407                           	callstack 0
  8408  003A72                     _fputc:
  8409                           	callstack 22
  8410  003A72  5006               	movf	fputc@fp^0,w,c
  8411  003A74  1007               	iorwf	(fputc@fp+1)^0,w,c
  8412  003A76  B4D8               	btfsc	status,2,c
  8413  003A78  EF40  F01D         	goto	u3051
  8414  003A7C  EF42  F01D         	goto	u3050
  8415  003A80                     u3051:
  8416  003A80  EF4B  F01D         	goto	l3200
  8417  003A84                     u3050:
  8418  003A84  5006               	movf	fputc@fp^0,w,c
  8419  003A86  1007               	iorwf	(fputc@fp+1)^0,w,c
  8420  003A88  A4D8               	btfss	status,2,c
  8421  003A8A  EF49  F01D         	goto	u3061
  8422  003A8E  EF4B  F01D         	goto	u3060
  8423  003A92                     u3061:
  8424  003A92  EF50  F01D         	goto	l3202
  8425  003A96                     u3060:
  8426  003A96                     l3200:
  8427  003A96  5004               	movf	fputc@c^0,w,c
  8428  003A98  ECDE  F022         	call	_putch
  8429  003A9C  EF9D  F01D         	goto	l1239
  8430  003AA0                     l3202:
  8431  003AA0  EE20 F004          	lfsr	2,4
  8432  003AA4  5006               	movf	fputc@fp^0,w,c
  8433  003AA6  26D9               	addwf	fsr2l,f,c
  8434  003AA8  5007               	movf	(fputc@fp+1)^0,w,c
  8435  003AAA  22DA               	addwfc	fsr2h,f,c
  8436  003AAC  50DE               	movf	postinc2,w,c
  8437  003AAE  10DE               	iorwf	postinc2,w,c
  8438  003AB0  B4D8               	btfsc	status,2,c
  8439  003AB2  EF5D  F01D         	goto	u3071
  8440  003AB6  EF5F  F01D         	goto	u3070
  8441  003ABA                     u3071:
  8442  003ABA  EF7A  F01D         	goto	l3206
  8443  003ABE                     u3070:
  8444  003ABE  EE20 F004          	lfsr	2,4
  8445  003AC2  5006               	movf	fputc@fp^0,w,c
  8446  003AC4  26D9               	addwf	fsr2l,f,c
  8447  003AC6  5007               	movf	(fputc@fp+1)^0,w,c
  8448  003AC8  22DA               	addwfc	fsr2h,f,c
  8449  003ACA  EE10 F002          	lfsr	1,2
  8450  003ACE  5006               	movf	fputc@fp^0,w,c
  8451  003AD0  26E1               	addwf	fsr1l,f,c
  8452  003AD2  5007               	movf	(fputc@fp+1)^0,w,c
  8453  003AD4  22E2               	addwfc	fsr1h,f,c
  8454  003AD6  50DE               	movf	postinc2,w,c
  8455  003AD8  5CE6               	subwf	postinc1,w,c
  8456  003ADA  50E6               	movf	postinc1,w,c
  8457  003ADC  0A80               	xorlw	128
  8458  003ADE  6E0C               	movwf	(??_fputc+4)^0,c
  8459  003AE0  50DE               	movf	postinc2,w,c
  8460  003AE2  0A80               	xorlw	128
  8461  003AE4  580C               	subwfb	(??_fputc+4)^0,w,c
  8462  003AE6  B0D8               	btfsc	status,0,c
  8463  003AE8  EF78  F01D         	goto	u3081
  8464  003AEC  EF7A  F01D         	goto	u3080
  8465  003AF0                     u3081:
  8466  003AF0  EF9D  F01D         	goto	l1239
  8467  003AF4                     u3080:
  8468  003AF4                     l3206:
  8469  003AF4  EE20 F002          	lfsr	2,2
  8470  003AF8  5006               	movf	fputc@fp^0,w,c
  8471  003AFA  26D9               	addwf	fsr2l,f,c
  8472  003AFC  5007               	movf	(fputc@fp+1)^0,w,c
  8473  003AFE  22DA               	addwfc	fsr2h,f,c
  8474  003B00  CFDE F008          	movff	postinc2,??_fputc
  8475  003B04  CFDD F009          	movff	postdec2,??_fputc+1
  8476  003B08  C006  FFD9         	movff	fputc@fp,fsr2l
  8477  003B0C  C007  FFDA         	movff	fputc@fp+1,fsr2h
  8478  003B10  CFDE F00A          	movff	postinc2,??_fputc+2
  8479  003B14  CFDD F00B          	movff	postdec2,??_fputc+3
  8480  003B18  5008               	movf	??_fputc^0,w,c
  8481  003B1A  240A               	addwf	(??_fputc+2)^0,w,c
  8482  003B1C  6ED9               	movwf	fsr2l,c
  8483  003B1E  5009               	movf	(??_fputc+1)^0,w,c
  8484  003B20  200B               	addwfc	(??_fputc+3)^0,w,c
  8485  003B22  6EDA               	movwf	fsr2h,c
  8486  003B24  C004  FFDF         	movff	fputc@c,indf2
  8487  003B28  EE20 F002          	lfsr	2,2
  8488  003B2C  5006               	movf	fputc@fp^0,w,c
  8489  003B2E  26D9               	addwf	fsr2l,f,c
  8490  003B30  5007               	movf	(fputc@fp+1)^0,w,c
  8491  003B32  22DA               	addwfc	fsr2h,f,c
  8492  003B34  2ADE               	incf	postinc2,f,c
  8493  003B36  0E00               	movlw	0
  8494  003B38  22DD               	addwfc	postdec2,f,c
  8495  003B3A                     l1239:
  8496  003B3A  0012               	return		;funcret
  8497  003B3C                     __end_of_fputc:
  8498                           	callstack 0
  8499                           
  8500 ;; *************** function _putch *****************
  8501 ;; Defined at:
  8502 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;  c               1    wreg     unsigned char 
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;  c               1    0[COMRAM] unsigned char 
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  1    wreg      void 
  8509 ;; Registers used:
  8510 ;;		wreg
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8516 ;;      Params:         0       0       0       0       0       0       0       0       0
  8517 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8519 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8520 ;;Total ram usage:        0 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:    2
  8523 ;; This function calls:
  8524 ;;		Nothing
  8525 ;; This function is called by:
  8526 ;;		_fputc
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text31
  8531  0045BC                     __ptext31:
  8532                           	callstack 0
  8533  0045BC                     _putch:
  8534                           	callstack 22
  8535  0045BC  0012               	return		;funcret
  8536  0045BE                     __end_of_putch:
  8537                           	callstack 0
  8538                           
  8539 ;; *************** function _abs *****************
  8540 ;; Defined at:
  8541 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  a               2   21[COMRAM] int 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;		None
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  2   21[COMRAM] int 
  8548 ;; Registers used:
  8549 ;;		wreg, status,2, status,0
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8555 ;;      Params:         2       0       0       0       0       0       0       0       0
  8556 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8557 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8558 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8559 ;;Total ram usage:        4 bytes
  8560 ;; Hardware stack levels used:    1
  8561 ;; Hardware stack levels required when called:    2
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		_dtoa
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           	psect	text32
  8570  0043BA                     __ptext32:
  8571                           	callstack 0
  8572  0043BA                     _abs:
  8573                           	callstack 22
  8574  0043BA  BE17               	btfsc	(abs@a+1)^0,7,c
  8575  0043BC  EFEA  F021         	goto	u4390
  8576  0043C0  5017               	movf	(abs@a+1)^0,w,c
  8577  0043C2  E106               	bnz	u4391
  8578  0043C4  0416               	decf	abs@a^0,w,c
  8579  0043C6  B0D8               	btfsc	status,0,c
  8580  0043C8  EFE8  F021         	goto	u4391
  8581  0043CC  EFEA  F021         	goto	u4390
  8582  0043D0                     u4391:
  8583  0043D0  EFF8  F021         	goto	l1160
  8584  0043D4                     u4390:
  8585  0043D4  C016  F018         	movff	abs@a,??_abs
  8586  0043D8  C017  F019         	movff	abs@a+1,??_abs+1
  8587  0043DC  1E18               	comf	??_abs^0,f,c
  8588  0043DE  1E19               	comf	(??_abs+1)^0,f,c
  8589  0043E0  4A18               	infsnz	??_abs^0,f,c
  8590  0043E2  2A19               	incf	(??_abs+1)^0,f,c
  8591  0043E4  C018  F016         	movff	??_abs,?_abs
  8592  0043E8  C019  F017         	movff	??_abs+1,?_abs+1
  8593  0043EC  EFFC  F021         	goto	l1163
  8594  0043F0                     l1160:
  8595  0043F0  C016  F016         	movff	abs@a,?_abs
  8596  0043F4  C017  F017         	movff	abs@a+1,?_abs+1
  8597  0043F8                     l1163:
  8598  0043F8  0012               	return		;funcret
  8599  0043FA                     __end_of_abs:
  8600                           	callstack 0
  8601                           
  8602 ;; *************** function ___aomod *****************
  8603 ;; Defined at:
  8604 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  dividend        8    3[COMRAM] long long 
  8607 ;;  divisor         8   11[COMRAM] long long 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  sign            1   20[COMRAM] unsigned char 
  8610 ;;  counter         1   19[COMRAM] unsigned char 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  8    3[COMRAM] long long 
  8613 ;; Registers used:
  8614 ;;		wreg, status,2, status,0
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8620 ;;      Params:        16       0       0       0       0       0       0       0       0
  8621 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8623 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8624 ;;Total ram usage:       18 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    2
  8627 ;; This function calls:
  8628 ;;		Nothing
  8629 ;; This function is called by:
  8630 ;;		_dtoa
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text33
  8635  0030CA                     __ptext33:
  8636                           	callstack 0
  8637  0030CA                     ___aomod:
  8638                           	callstack 22
  8639  0030CA  0E00               	movlw	0
  8640  0030CC  6E15               	movwf	___aomod@sign^0,c
  8641  0030CE  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  8642  0030D0  EF6E  F018         	goto	u3590
  8643  0030D4  EF6C  F018         	goto	u3591
  8644  0030D8                     u3591:
  8645  0030D8  EF80  F018         	goto	l3492
  8646  0030DC                     u3590:
  8647  0030DC  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  8648  0030DE  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  8649  0030E0  1E09               	comf	(___aomod@dividend+5)^0,f,c
  8650  0030E2  1E08               	comf	(___aomod@dividend+4)^0,f,c
  8651  0030E4  1E07               	comf	(___aomod@dividend+3)^0,f,c
  8652  0030E6  1E06               	comf	(___aomod@dividend+2)^0,f,c
  8653  0030E8  1E05               	comf	(___aomod@dividend+1)^0,f,c
  8654  0030EA  6C04               	negf	___aomod@dividend^0,c
  8655  0030EC  0E00               	movlw	0
  8656  0030EE  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  8657  0030F0  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  8658  0030F2  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  8659  0030F4  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  8660  0030F6  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  8661  0030F8  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  8662  0030FA  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  8663  0030FC  0E01               	movlw	1
  8664  0030FE  6E15               	movwf	___aomod@sign^0,c
  8665  003100                     l3492:
  8666  003100  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  8667  003102  EF87  F018         	goto	u3600
  8668  003106  EF85  F018         	goto	u3601
  8669  00310A                     u3601:
  8670  00310A  EF97  F018         	goto	l3496
  8671  00310E                     u3600:
  8672  00310E  1E13               	comf	(___aomod@divisor+7)^0,f,c
  8673  003110  1E12               	comf	(___aomod@divisor+6)^0,f,c
  8674  003112  1E11               	comf	(___aomod@divisor+5)^0,f,c
  8675  003114  1E10               	comf	(___aomod@divisor+4)^0,f,c
  8676  003116  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  8677  003118  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  8678  00311A  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  8679  00311C  6C0C               	negf	___aomod@divisor^0,c
  8680  00311E  0E00               	movlw	0
  8681  003120  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  8682  003122  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  8683  003124  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  8684  003126  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  8685  003128  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  8686  00312A  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  8687  00312C  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  8688  00312E                     l3496:
  8689  00312E  500C               	movf	___aomod@divisor^0,w,c
  8690  003130  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  8691  003132  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  8692  003134  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  8693  003136  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  8694  003138  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  8695  00313A  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  8696  00313C  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  8697  00313E  B4D8               	btfsc	status,2,c
  8698  003140  EFA4  F018         	goto	u3611
  8699  003144  EFA6  F018         	goto	u3610
  8700  003148                     u3611:
  8701  003148  EFEE  F018         	goto	l3512
  8702  00314C                     u3610:
  8703  00314C  0E01               	movlw	1
  8704  00314E  6E14               	movwf	___aomod@counter^0,c
  8705  003150  EFB4  F018         	goto	l3502
  8706  003154                     l3500:
  8707  003154  90D8               	bcf	status,0,c
  8708  003156  360C               	rlcf	___aomod@divisor^0,f,c
  8709  003158  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  8710  00315A  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  8711  00315C  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  8712  00315E  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  8713  003160  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  8714  003162  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  8715  003164  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  8716  003166  2A14               	incf	___aomod@counter^0,f,c
  8717  003168                     l3502:
  8718  003168  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  8719  00316A  EFB9  F018         	goto	u3621
  8720  00316E  EFBB  F018         	goto	u3620
  8721  003172                     u3621:
  8722  003172  EFAA  F018         	goto	l3500
  8723  003176                     u3620:
  8724  003176                     l3504:
  8725  003176  500C               	movf	___aomod@divisor^0,w,c
  8726  003178  5C04               	subwf	___aomod@dividend^0,w,c
  8727  00317A  500D               	movf	(___aomod@divisor+1)^0,w,c
  8728  00317C  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  8729  00317E  500E               	movf	(___aomod@divisor+2)^0,w,c
  8730  003180  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  8731  003182  500F               	movf	(___aomod@divisor+3)^0,w,c
  8732  003184  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  8733  003186  5010               	movf	(___aomod@divisor+4)^0,w,c
  8734  003188  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  8735  00318A  5011               	movf	(___aomod@divisor+5)^0,w,c
  8736  00318C  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  8737  00318E  5012               	movf	(___aomod@divisor+6)^0,w,c
  8738  003190  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  8739  003192  5013               	movf	(___aomod@divisor+7)^0,w,c
  8740  003194  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  8741  003196  A0D8               	btfss	status,0,c
  8742  003198  EFD0  F018         	goto	u3631
  8743  00319C  EFD2  F018         	goto	u3630
  8744  0031A0                     u3631:
  8745  0031A0  EFE2  F018         	goto	l3508
  8746  0031A4                     u3630:
  8747  0031A4  500C               	movf	___aomod@divisor^0,w,c
  8748  0031A6  5E04               	subwf	___aomod@dividend^0,f,c
  8749  0031A8  500D               	movf	(___aomod@divisor+1)^0,w,c
  8750  0031AA  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  8751  0031AC  500E               	movf	(___aomod@divisor+2)^0,w,c
  8752  0031AE  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  8753  0031B0  500F               	movf	(___aomod@divisor+3)^0,w,c
  8754  0031B2  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  8755  0031B4  5010               	movf	(___aomod@divisor+4)^0,w,c
  8756  0031B6  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  8757  0031B8  5011               	movf	(___aomod@divisor+5)^0,w,c
  8758  0031BA  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  8759  0031BC  5012               	movf	(___aomod@divisor+6)^0,w,c
  8760  0031BE  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  8761  0031C0  5013               	movf	(___aomod@divisor+7)^0,w,c
  8762  0031C2  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  8763  0031C4                     l3508:
  8764  0031C4  90D8               	bcf	status,0,c
  8765  0031C6  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  8766  0031C8  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  8767  0031CA  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  8768  0031CC  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  8769  0031CE  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  8770  0031D0  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  8771  0031D2  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  8772  0031D4  320C               	rrcf	___aomod@divisor^0,f,c
  8773  0031D6  2E14               	decfsz	___aomod@counter^0,f,c
  8774  0031D8  EFBB  F018         	goto	l3504
  8775  0031DC                     l3512:
  8776  0031DC  5015               	movf	___aomod@sign^0,w,c
  8777  0031DE  B4D8               	btfsc	status,2,c
  8778  0031E0  EFF4  F018         	goto	u3641
  8779  0031E4  EFF6  F018         	goto	u3640
  8780  0031E8                     u3641:
  8781  0031E8  EF06  F019         	goto	l3516
  8782  0031EC                     u3640:
  8783  0031EC  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  8784  0031EE  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  8785  0031F0  1E09               	comf	(___aomod@dividend+5)^0,f,c
  8786  0031F2  1E08               	comf	(___aomod@dividend+4)^0,f,c
  8787  0031F4  1E07               	comf	(___aomod@dividend+3)^0,f,c
  8788  0031F6  1E06               	comf	(___aomod@dividend+2)^0,f,c
  8789  0031F8  1E05               	comf	(___aomod@dividend+1)^0,f,c
  8790  0031FA  6C04               	negf	___aomod@dividend^0,c
  8791  0031FC  0E00               	movlw	0
  8792  0031FE  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  8793  003200  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  8794  003202  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  8795  003204  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  8796  003206  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  8797  003208  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  8798  00320A  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  8799  00320C                     l3516:
  8800  00320C  C004  F004         	movff	___aomod@dividend,?___aomod
  8801  003210  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  8802  003214  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  8803  003218  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  8804  00321C  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  8805  003220  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  8806  003224  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  8807  003228  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  8808  00322C  0012               	return		;funcret
  8809  00322E                     __end_of___aomod:
  8810                           	callstack 0
  8811                           
  8812 ;; *************** function ___aodiv *****************
  8813 ;; Defined at:
  8814 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;  dividend        8    3[COMRAM] long long 
  8817 ;;  divisor         8   11[COMRAM] long long 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  quotient        8   21[COMRAM] long long 
  8820 ;;  sign            1   20[COMRAM] unsigned char 
  8821 ;;  counter         1   19[COMRAM] unsigned char 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  8    3[COMRAM] long long 
  8824 ;; Registers used:
  8825 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8831 ;;      Params:        16       0       0       0       0       0       0       0       0
  8832 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8834 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8835 ;;Total ram usage:       26 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    2
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;;		_dtoa
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text34
  8846  002F42                     __ptext34:
  8847                           	callstack 0
  8848  002F42                     ___aodiv:
  8849                           	callstack 22
  8850  002F42  0E00               	movlw	0
  8851  002F44  6E15               	movwf	___aodiv@sign^0,c
  8852  002F46  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  8853  002F48  EFAA  F017         	goto	u3520
  8854  002F4C  EFA8  F017         	goto	u3521
  8855  002F50                     u3521:
  8856  002F50  EFBC  F017         	goto	l3448
  8857  002F54                     u3520:
  8858  002F54  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  8859  002F56  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  8860  002F58  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  8861  002F5A  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  8862  002F5C  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  8863  002F5E  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  8864  002F60  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  8865  002F62  6C0C               	negf	___aodiv@divisor^0,c
  8866  002F64  0E00               	movlw	0
  8867  002F66  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8868  002F68  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8869  002F6A  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8870  002F6C  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  8871  002F6E  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  8872  002F70  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  8873  002F72  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  8874  002F74  0E01               	movlw	1
  8875  002F76  6E15               	movwf	___aodiv@sign^0,c
  8876  002F78                     l3448:
  8877  002F78  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8878  002F7A  EFC3  F017         	goto	u3530
  8879  002F7E  EFC1  F017         	goto	u3531
  8880  002F82                     u3531:
  8881  002F82  EFD5  F017         	goto	l3454
  8882  002F86                     u3530:
  8883  002F86  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  8884  002F88  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  8885  002F8A  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  8886  002F8C  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  8887  002F8E  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  8888  002F90  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  8889  002F92  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  8890  002F94  6C04               	negf	___aodiv@dividend^0,c
  8891  002F96  0E00               	movlw	0
  8892  002F98  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  8893  002F9A  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  8894  002F9C  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  8895  002F9E  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  8896  002FA0  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  8897  002FA2  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8898  002FA4  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8899  002FA6  0E01               	movlw	1
  8900  002FA8  1A15               	xorwf	___aodiv@sign^0,f,c
  8901  002FAA                     l3454:
  8902  002FAA  EE20  F016         	lfsr	2,___aodiv@quotient
  8903  002FAE  0E07               	movlw	7
  8904  002FB0                     u3541:
  8905  002FB0  6ADE               	clrf	postinc2,c
  8906  002FB2  06E8               	decf	wreg,f,c
  8907  002FB4  E2FD               	bc	u3541
  8908  002FB6  500C               	movf	___aodiv@divisor^0,w,c
  8909  002FB8  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8910  002FBA  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8911  002FBC  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8912  002FBE  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  8913  002FC0  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  8914  002FC2  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  8915  002FC4  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  8916  002FC6  B4D8               	btfsc	status,2,c
  8917  002FC8  EFE8  F017         	goto	u3551
  8918  002FCC  EFEA  F017         	goto	u3550
  8919  002FD0                     u3551:
  8920  002FD0  EF3C  F018         	goto	l3476
  8921  002FD4                     u3550:
  8922  002FD4  0E01               	movlw	1
  8923  002FD6  6E14               	movwf	___aodiv@counter^0,c
  8924  002FD8  EFF8  F017         	goto	l3462
  8925  002FDC                     l3460:
  8926  002FDC  90D8               	bcf	status,0,c
  8927  002FDE  360C               	rlcf	___aodiv@divisor^0,f,c
  8928  002FE0  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8929  002FE2  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8930  002FE4  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8931  002FE6  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  8932  002FE8  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  8933  002FEA  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  8934  002FEC  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  8935  002FEE  2A14               	incf	___aodiv@counter^0,f,c
  8936  002FF0                     l3462:
  8937  002FF0  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  8938  002FF2  EFFD  F017         	goto	u3561
  8939  002FF6  EFFF  F017         	goto	u3560
  8940  002FFA                     u3561:
  8941  002FFA  EFEE  F017         	goto	l3460
  8942  002FFE                     u3560:
  8943  002FFE                     l3464:
  8944  002FFE  90D8               	bcf	status,0,c
  8945  003000  3616               	rlcf	___aodiv@quotient^0,f,c
  8946  003002  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  8947  003004  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  8948  003006  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  8949  003008  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8950  00300A  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8951  00300C  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8952  00300E  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8953  003010  500C               	movf	___aodiv@divisor^0,w,c
  8954  003012  5C04               	subwf	___aodiv@dividend^0,w,c
  8955  003014  500D               	movf	(___aodiv@divisor+1)^0,w,c
  8956  003016  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  8957  003018  500E               	movf	(___aodiv@divisor+2)^0,w,c
  8958  00301A  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  8959  00301C  500F               	movf	(___aodiv@divisor+3)^0,w,c
  8960  00301E  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  8961  003020  5010               	movf	(___aodiv@divisor+4)^0,w,c
  8962  003022  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  8963  003024  5011               	movf	(___aodiv@divisor+5)^0,w,c
  8964  003026  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  8965  003028  5012               	movf	(___aodiv@divisor+6)^0,w,c
  8966  00302A  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8967  00302C  5013               	movf	(___aodiv@divisor+7)^0,w,c
  8968  00302E  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8969  003030  A0D8               	btfss	status,0,c
  8970  003032  EF1D  F018         	goto	u3571
  8971  003036  EF1F  F018         	goto	u3570
  8972  00303A                     u3571:
  8973  00303A  EF30  F018         	goto	l3472
  8974  00303E                     u3570:
  8975  00303E  500C               	movf	___aodiv@divisor^0,w,c
  8976  003040  5E04               	subwf	___aodiv@dividend^0,f,c
  8977  003042  500D               	movf	(___aodiv@divisor+1)^0,w,c
  8978  003044  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  8979  003046  500E               	movf	(___aodiv@divisor+2)^0,w,c
  8980  003048  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  8981  00304A  500F               	movf	(___aodiv@divisor+3)^0,w,c
  8982  00304C  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  8983  00304E  5010               	movf	(___aodiv@divisor+4)^0,w,c
  8984  003050  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  8985  003052  5011               	movf	(___aodiv@divisor+5)^0,w,c
  8986  003054  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  8987  003056  5012               	movf	(___aodiv@divisor+6)^0,w,c
  8988  003058  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8989  00305A  5013               	movf	(___aodiv@divisor+7)^0,w,c
  8990  00305C  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8991  00305E  8016               	bsf	___aodiv@quotient^0,0,c
  8992  003060                     l3472:
  8993  003060  90D8               	bcf	status,0,c
  8994  003062  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  8995  003064  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  8996  003066  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  8997  003068  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  8998  00306A  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8999  00306C  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  9000  00306E  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  9001  003070  320C               	rrcf	___aodiv@divisor^0,f,c
  9002  003072  2E14               	decfsz	___aodiv@counter^0,f,c
  9003  003074  EFFF  F017         	goto	l3464
  9004  003078                     l3476:
  9005  003078  5015               	movf	___aodiv@sign^0,w,c
  9006  00307A  B4D8               	btfsc	status,2,c
  9007  00307C  EF42  F018         	goto	u3581
  9008  003080  EF44  F018         	goto	u3580
  9009  003084                     u3581:
  9010  003084  EF54  F018         	goto	l3480
  9011  003088                     u3580:
  9012  003088  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  9013  00308A  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  9014  00308C  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  9015  00308E  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  9016  003090  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  9017  003092  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  9018  003094  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  9019  003096  6C16               	negf	___aodiv@quotient^0,c
  9020  003098  0E00               	movlw	0
  9021  00309A  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  9022  00309C  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  9023  00309E  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  9024  0030A0  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  9025  0030A2  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  9026  0030A4  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  9027  0030A6  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  9028  0030A8                     l3480:
  9029  0030A8  C016  F004         	movff	___aodiv@quotient,?___aodiv
  9030  0030AC  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  9031  0030B0  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  9032  0030B4  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  9033  0030B8  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  9034  0030BC  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  9035  0030C0  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  9036  0030C4  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  9037  0030C8  0012               	return		;funcret
  9038  0030CA                     __end_of___aodiv:
  9039                           	callstack 0
  9040                           
  9041 ;; *************** function _atoi *****************
  9042 ;; Defined at:
  9043 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9046 ;;		 -> STR_5(5), STR_2(7), STR_1(10), 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;  n               2   23[COMRAM] int 
  9049 ;;  neg             2   16[COMRAM] int 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  2   10[COMRAM] int 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9059 ;;      Params:         2       0       0       0       0       0       0       0       0
  9060 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9061 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9062 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9063 ;;Total ram usage:       15 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:    3
  9066 ;; This function calls:
  9067 ;;		___wmul
  9068 ;;		_isdigit
  9069 ;;		_isspace
  9070 ;; This function is called by:
  9071 ;;		_vfpfcnvrt
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           	psect	text35
  9076  002DB2                     __ptext35:
  9077                           	callstack 0
  9078  002DB2                     _atoi:
  9079                           	callstack 22
  9080  002DB2  0E00               	movlw	0
  9081  002DB4  6E19               	movwf	(atoi@n+1)^0,c
  9082  002DB6  0E00               	movlw	0
  9083  002DB8  6E18               	movwf	atoi@n^0,c
  9084  002DBA  0E00               	movlw	0
  9085  002DBC  6E12               	movwf	(atoi@neg+1)^0,c
  9086  002DBE  0E00               	movlw	0
  9087  002DC0  6E11               	movwf	atoi@neg^0,c
  9088  002DC2  EFE5  F016         	goto	l4444
  9089  002DC6                     l4442:
  9090  002DC6  4A0B               	infsnz	atoi@s^0,f,c
  9091  002DC8  2A0C               	incf	(atoi@s+1)^0,f,c
  9092  002DCA                     l4444:
  9093  002DCA  0E01               	movlw	1
  9094  002DCC  6E17               	movwf	_atoi$1694^0,c
  9095  002DCE  C00B  FFF6         	movff	atoi@s,tblptrl
  9096  002DD2  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9097  002DD6                     	if	0	;tblptru may be non-zero
  9098  002DD6                     	endif
  9099  002DD6                     	if	0	;tblptru may be non-zero
  9100  002DD6                     	endif
  9101  002DD6  0008               	tblrd		*
  9102  002DD8  50F5               	movf	tablat,w,c
  9103  002DDA  0A20               	xorlw	32
  9104  002DDC  B4D8               	btfsc	status,2,c
  9105  002DDE  EFF3  F016         	goto	u5351
  9106  002DE2  EFF5  F016         	goto	u5350
  9107  002DE6                     u5351:
  9108  002DE6  EF12  F017         	goto	l4452
  9109  002DEA                     u5350:
  9110  002DEA  0EF7               	movlw	247
  9111  002DEC  6E0D               	movwf	??_atoi^0,c
  9112  002DEE  0EFF               	movlw	255
  9113  002DF0  6E0E               	movwf	(??_atoi+1)^0,c
  9114  002DF2  C00B  FFF6         	movff	atoi@s,tblptrl
  9115  002DF6  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9116  002DFA                     	if	0	;tblptru may be non-zero
  9117  002DFA                     	endif
  9118  002DFA                     	if	0	;tblptru may be non-zero
  9119  002DFA                     	endif
  9120  002DFA  0008               	tblrd		*
  9121  002DFC  50F5               	movf	tablat,w,c
  9122  002DFE  6E0F               	movwf	(??_atoi+2)^0,c
  9123  002E00  6A10               	clrf	(??_atoi+3)^0,c
  9124  002E02  500D               	movf	??_atoi^0,w,c
  9125  002E04  260F               	addwf	(??_atoi+2)^0,f,c
  9126  002E06  500E               	movf	(??_atoi+1)^0,w,c
  9127  002E08  2210               	addwfc	(??_atoi+3)^0,f,c
  9128  002E0A  5010               	movf	(??_atoi+3)^0,w,c
  9129  002E0C  E109               	bnz	u5360
  9130  002E0E  0E05               	movlw	5
  9131  002E10  5C0F               	subwf	(??_atoi+2)^0,w,c
  9132  002E12  A0D8               	btfss	status,0,c
  9133  002E14  EF0E  F017         	goto	u5361
  9134  002E18  EF10  F017         	goto	u5360
  9135  002E1C                     u5361:
  9136  002E1C  EF12  F017         	goto	l4452
  9137  002E20                     u5360:
  9138  002E20  0E00               	movlw	0
  9139  002E22  6E17               	movwf	_atoi$1694^0,c
  9140  002E24                     l4452:
  9141  002E24  C017  F013         	movff	_atoi$1694,_atoi$1693
  9142  002E28  6A14               	clrf	(_atoi$1693+1)^0,c
  9143  002E2A  5013               	movf	_atoi$1693^0,w,c
  9144  002E2C  1014               	iorwf	(_atoi$1693+1)^0,w,c
  9145  002E2E  A4D8               	btfss	status,2,c
  9146  002E30  EF1C  F017         	goto	u5371
  9147  002E34  EF1E  F017         	goto	u5370
  9148  002E38                     u5371:
  9149  002E38  EFE3  F016         	goto	l4442
  9150  002E3C                     u5370:
  9151  002E3C  EF28  F017         	goto	l4462
  9152  002E40                     l4458:
  9153  002E40  0E00               	movlw	0
  9154  002E42  6E12               	movwf	(atoi@neg+1)^0,c
  9155  002E44  0E01               	movlw	1
  9156  002E46  6E11               	movwf	atoi@neg^0,c
  9157  002E48                     l4460:
  9158  002E48  4A0B               	infsnz	atoi@s^0,f,c
  9159  002E4A  2A0C               	incf	(atoi@s+1)^0,f,c
  9160  002E4C  EF5D  F017         	goto	l4468
  9161  002E50                     l4462:
  9162  002E50  C00B  FFF6         	movff	atoi@s,tblptrl
  9163  002E54  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9164  002E58                     	if	0	;tblptru may be non-zero
  9165  002E58                     	endif
  9166  002E58                     	if	0	;tblptru may be non-zero
  9167  002E58                     	endif
  9168  002E58  0008               	tblrd		*
  9169  002E5A  50F5               	movf	tablat,w,c
  9170  002E5C  6E0D               	movwf	??_atoi^0,c
  9171  002E5E  6A0E               	clrf	(??_atoi+1)^0,c
  9172                           
  9173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9174                           ; Switch size 1, requested type "simple"
  9175                           ; Number of cases is 1, Range of values is 0 to 0
  9176                           ; switch strategies available:
  9177                           ; Name         Instructions Cycles
  9178                           ; simple_byte            4     3 (average)
  9179                           ;	Chosen strategy is simple_byte
  9180  002E60  500E               	movf	(??_atoi+1)^0,w,c
  9181  002E62  0A00               	xorlw	0	; case 0
  9182  002E64  B4D8               	btfsc	status,2,c
  9183  002E66  EF37  F017         	goto	l5376
  9184  002E6A  EF5D  F017         	goto	l4468
  9185  002E6E                     l5376:
  9186                           
  9187                           ; Switch size 1, requested type "simple"
  9188                           ; Number of cases is 2, Range of values is 43 to 45
  9189                           ; switch strategies available:
  9190                           ; Name         Instructions Cycles
  9191                           ; simple_byte            7     4 (average)
  9192                           ;	Chosen strategy is simple_byte
  9193  002E6E  500D               	movf	??_atoi^0,w,c
  9194  002E70  0A2B               	xorlw	43	; case 43
  9195  002E72  B4D8               	btfsc	status,2,c
  9196  002E74  EF24  F017         	goto	l4460
  9197  002E78  0A06               	xorlw	6	; case 45
  9198  002E7A  B4D8               	btfsc	status,2,c
  9199  002E7C  EF20  F017         	goto	l4458
  9200  002E80  EF5D  F017         	goto	l4468
  9201  002E84                     l4464:
  9202  002E84  C018  F004         	movff	atoi@n,___wmul@multiplier
  9203  002E88  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  9204  002E8C  0E00               	movlw	0
  9205  002E8E  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  9206  002E90  0E0A               	movlw	10
  9207  002E92  6E06               	movwf	___wmul@multiplicand^0,c
  9208  002E94  EC8A  F022         	call	___wmul	;wreg free
  9209  002E98  C00B  FFF6         	movff	atoi@s,tblptrl
  9210  002E9C  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9211  002EA0                     	if	0	;tblptru may be non-zero
  9212  002EA0                     	endif
  9213  002EA0                     	if	0	;tblptru may be non-zero
  9214  002EA0                     	endif
  9215  002EA0  0008               	tblrd		*
  9216  002EA2  50F5               	movf	tablat,w,c
  9217  002EA4  5E04               	subwf	?___wmul^0,f,c
  9218  002EA6  0E00               	movlw	0
  9219  002EA8  5A05               	subwfb	(?___wmul+1)^0,f,c
  9220  002EAA  0E30               	movlw	48
  9221  002EAC  2404               	addwf	?___wmul^0,w,c
  9222  002EAE  6E18               	movwf	atoi@n^0,c
  9223  002EB0  0E00               	movlw	0
  9224  002EB2  2005               	addwfc	(?___wmul+1)^0,w,c
  9225  002EB4  6E19               	movwf	(atoi@n+1)^0,c
  9226  002EB6  EF24  F017         	goto	l4460
  9227  002EBA                     l4468:
  9228  002EBA  0ED0               	movlw	208
  9229  002EBC  6E0D               	movwf	??_atoi^0,c
  9230  002EBE  0EFF               	movlw	255
  9231  002EC0  6E0E               	movwf	(??_atoi+1)^0,c
  9232  002EC2  C00B  FFF6         	movff	atoi@s,tblptrl
  9233  002EC6  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9234  002ECA                     	if	0	;tblptru may be non-zero
  9235  002ECA                     	endif
  9236  002ECA                     	if	0	;tblptru may be non-zero
  9237  002ECA                     	endif
  9238  002ECA  0008               	tblrd		*
  9239  002ECC  50F5               	movf	tablat,w,c
  9240  002ECE  6E0F               	movwf	(??_atoi+2)^0,c
  9241  002ED0  6A10               	clrf	(??_atoi+3)^0,c
  9242  002ED2  500D               	movf	??_atoi^0,w,c
  9243  002ED4  260F               	addwf	(??_atoi+2)^0,f,c
  9244  002ED6  500E               	movf	(??_atoi+1)^0,w,c
  9245  002ED8  2210               	addwfc	(??_atoi+3)^0,f,c
  9246  002EDA  5010               	movf	(??_atoi+3)^0,w,c
  9247  002EDC  E10A               	bnz	u5380
  9248  002EDE  0E0A               	movlw	10
  9249  002EE0  5C0F               	subwf	(??_atoi+2)^0,w,c
  9250  002EE2  A0D8               	btfss	status,0,c
  9251  002EE4  EF76  F017         	goto	u5381
  9252  002EE8  EF79  F017         	goto	u5380
  9253  002EEC                     u5381:
  9254  002EEC  0E01               	movlw	1
  9255  002EEE  EF7A  F017         	goto	u5390
  9256  002EF2                     u5380:
  9257  002EF2  0E00               	movlw	0
  9258  002EF4                     u5390:
  9259  002EF4  6E15               	movwf	_atoi$1695^0,c
  9260  002EF6  6A16               	clrf	(_atoi$1695+1)^0,c
  9261  002EF8  5015               	movf	_atoi$1695^0,w,c
  9262  002EFA  1016               	iorwf	(_atoi$1695+1)^0,w,c
  9263  002EFC  A4D8               	btfss	status,2,c
  9264  002EFE  EF83  F017         	goto	u5401
  9265  002F02  EF85  F017         	goto	u5400
  9266  002F06                     u5401:
  9267  002F06  EF42  F017         	goto	l4464
  9268  002F0A                     u5400:
  9269  002F0A  5011               	movf	atoi@neg^0,w,c
  9270  002F0C  1012               	iorwf	(atoi@neg+1)^0,w,c
  9271  002F0E  A4D8               	btfss	status,2,c
  9272  002F10  EF8C  F017         	goto	u5411
  9273  002F14  EF8E  F017         	goto	u5410
  9274  002F18                     u5411:
  9275  002F18  EF9C  F017         	goto	l1191
  9276  002F1C                     u5410:
  9277  002F1C  C018  F00D         	movff	atoi@n,??_atoi
  9278  002F20  C019  F00E         	movff	atoi@n+1,??_atoi+1
  9279  002F24  1E0D               	comf	??_atoi^0,f,c
  9280  002F26  1E0E               	comf	(??_atoi+1)^0,f,c
  9281  002F28  4A0D               	infsnz	??_atoi^0,f,c
  9282  002F2A  2A0E               	incf	(??_atoi+1)^0,f,c
  9283  002F2C  C00D  F00B         	movff	??_atoi,?_atoi
  9284  002F30  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  9285  002F34  EFA0  F017         	goto	l1194
  9286  002F38                     l1191:
  9287  002F38  C018  F00B         	movff	atoi@n,?_atoi
  9288  002F3C  C019  F00C         	movff	atoi@n+1,?_atoi+1
  9289  002F40                     l1194:
  9290  002F40  0012               	return		;funcret
  9291  002F42                     __end_of_atoi:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _isspace *****************
  9295 ;; Defined at:
  9296 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  c               2    3[COMRAM] int 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  2    3[COMRAM] int 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, status,0
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9310 ;;      Params:         2       0       0       0       0       0       0       0       0
  9311 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9312 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9313 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9314 ;;Total ram usage:        7 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; Hardware stack levels required when called:    2
  9317 ;; This function calls:
  9318 ;;		Nothing
  9319 ;; This function is called by:
  9320 ;;		_atoi
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           	psect	text36
  9325  004204                     __ptext36:
  9326                           	callstack 0
  9327  004204                     _isspace:
  9328                           	callstack 22
  9329  004204  0E01               	movlw	1
  9330  004206  6E0A               	movwf	_isspace$1724^0,c
  9331  004208  0E20               	movlw	32
  9332  00420A  1804               	xorwf	isspace@c^0,w,c
  9333  00420C  1005               	iorwf	(isspace@c+1)^0,w,c
  9334  00420E  B4D8               	btfsc	status,2,c
  9335  004210  EF0C  F021         	goto	u4641
  9336  004214  EF0E  F021         	goto	u4640
  9337  004218                     u4641:
  9338  004218  EF27  F021         	goto	l4066
  9339  00421C                     u4640:
  9340  00421C  0EF7               	movlw	247
  9341  00421E  6E06               	movwf	??_isspace^0,c
  9342  004220  0EFF               	movlw	255
  9343  004222  6E07               	movwf	(??_isspace+1)^0,c
  9344  004224  C004  F008         	movff	isspace@c,??_isspace+2
  9345  004228  C005  F009         	movff	isspace@c+1,??_isspace+3
  9346  00422C  5006               	movf	??_isspace^0,w,c
  9347  00422E  2608               	addwf	(??_isspace+2)^0,f,c
  9348  004230  5007               	movf	(??_isspace+1)^0,w,c
  9349  004232  2209               	addwfc	(??_isspace+3)^0,f,c
  9350  004234  5009               	movf	(??_isspace+3)^0,w,c
  9351  004236  E109               	bnz	u4650
  9352  004238  0E05               	movlw	5
  9353  00423A  5C08               	subwf	(??_isspace+2)^0,w,c
  9354  00423C  A0D8               	btfss	status,0,c
  9355  00423E  EF23  F021         	goto	u4651
  9356  004242  EF25  F021         	goto	u4650
  9357  004246                     u4651:
  9358  004246  EF27  F021         	goto	l4066
  9359  00424A                     u4650:
  9360  00424A  0E00               	movlw	0
  9361  00424C  6E0A               	movwf	_isspace$1724^0,c
  9362  00424E                     l4066:
  9363  00424E  C00A  F004         	movff	_isspace$1724,?_isspace
  9364  004252  6A05               	clrf	(?_isspace+1)^0,c
  9365  004254  0012               	return		;funcret
  9366  004256                     __end_of_isspace:
  9367                           	callstack 0
  9368                           
  9369 ;; *************** function _isdigit *****************
  9370 ;; Defined at:
  9371 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  c               2    3[COMRAM] int 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;		None
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  2    3[COMRAM] int 
  9378 ;; Registers used:
  9379 ;;		wreg, status,2, status,0
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9385 ;;      Params:         2       0       0       0       0       0       0       0       0
  9386 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9387 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9388 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9389 ;;Total ram usage:        6 bytes
  9390 ;; Hardware stack levels used:    1
  9391 ;; Hardware stack levels required when called:    2
  9392 ;; This function calls:
  9393 ;;		Nothing
  9394 ;; This function is called by:
  9395 ;;		_vfpfcnvrt
  9396 ;;		_atoi
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           	psect	text37
  9401  0044A6                     __ptext37:
  9402                           	callstack 0
  9403  0044A6                     _isdigit:
  9404                           	callstack 23
  9405  0044A6  0ED0               	movlw	208
  9406  0044A8  6E06               	movwf	??_isdigit^0,c
  9407  0044AA  0EFF               	movlw	255
  9408  0044AC  6E07               	movwf	(??_isdigit+1)^0,c
  9409  0044AE  C004  F008         	movff	isdigit@c,??_isdigit+2
  9410  0044B2  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  9411  0044B6  5006               	movf	??_isdigit^0,w,c
  9412  0044B8  2608               	addwf	(??_isdigit+2)^0,f,c
  9413  0044BA  5007               	movf	(??_isdigit+1)^0,w,c
  9414  0044BC  2209               	addwfc	(??_isdigit+3)^0,f,c
  9415  0044BE  5009               	movf	(??_isdigit+3)^0,w,c
  9416  0044C0  E10A               	bnz	u4620
  9417  0044C2  0E0A               	movlw	10
  9418  0044C4  5C08               	subwf	(??_isdigit+2)^0,w,c
  9419  0044C6  A0D8               	btfss	status,0,c
  9420  0044C8  EF68  F022         	goto	u4621
  9421  0044CC  EF6B  F022         	goto	u4620
  9422  0044D0                     u4621:
  9423  0044D0  0E01               	movlw	1
  9424  0044D2  EF6C  F022         	goto	u4630
  9425  0044D6                     u4620:
  9426  0044D6  0E00               	movlw	0
  9427  0044D8                     u4630:
  9428  0044D8  6E04               	movwf	?_isdigit^0,c
  9429  0044DA  6A05               	clrf	(?_isdigit+1)^0,c
  9430  0044DC  0012               	return		;funcret
  9431  0044DE                     __end_of_isdigit:
  9432                           	callstack 0
  9433                           
  9434 ;; *************** function ___wmul *****************
  9435 ;; Defined at:
  9436 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  multiplier      2    3[COMRAM] unsigned int 
  9439 ;;  multiplicand    2    5[COMRAM] unsigned int 
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;  product         2    7[COMRAM] unsigned int 
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  2    3[COMRAM] unsigned int 
  9444 ;; Registers used:
  9445 ;;		wreg, status,2, status,0, prodl, prodh
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9451 ;;      Params:         4       0       0       0       0       0       0       0       0
  9452 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9454 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9455 ;;Total ram usage:        6 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; Hardware stack levels required when called:    2
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_atoi
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text38
  9466  004514                     __ptext38:
  9467                           	callstack 0
  9468  004514                     ___wmul:
  9469                           	callstack 22
  9470  004514  5004               	movf	___wmul@multiplier^0,w,c
  9471  004516  0206               	mulwf	___wmul@multiplicand^0,c
  9472  004518  CFF3 F008          	movff	prodl,___wmul@product
  9473  00451C  CFF4 F009          	movff	prodh,___wmul@product+1
  9474  004520  5004               	movf	___wmul@multiplier^0,w,c
  9475  004522  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  9476  004524  50F3               	movf	243,w,c
  9477  004526  2609               	addwf	(___wmul@product+1)^0,f,c
  9478  004528  5005               	movf	(___wmul@multiplier+1)^0,w,c
  9479  00452A  0206               	mulwf	___wmul@multiplicand^0,c
  9480  00452C  50F3               	movf	243,w,c
  9481  00452E  2609               	addwf	(___wmul@product+1)^0,f,c
  9482  004530  C008  F004         	movff	___wmul@product,?___wmul
  9483  004534  C009  F005         	movff	___wmul@product+1,?___wmul+1
  9484  004538  0012               	return		;funcret
  9485  00453A                     __end_of___wmul:
  9486                           	callstack 0
  9487                           
  9488 ;; *************** function _adcGetValue *****************
  9489 ;; Defined at:
  9490 ;;		line 41 in file "adc.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  PinADC          1    wreg     unsigned char 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;  PinADC          1    6[COMRAM] unsigned char 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  2    3[COMRAM] unsigned short 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2, status,0
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9504 ;;      Params:         2       0       0       0       0       0       0       0       0
  9505 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9506 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9507 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9508 ;;Total ram usage:        4 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    2
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		_appADC
  9515 ;;		_appBat
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text39
  9520  0043FA                     __ptext39:
  9521                           	callstack 0
  9522  0043FA                     _adcGetValue:
  9523                           	callstack 26
  9524                           
  9525                           ;incstack = 0
  9526                           ;adcGetValue@PinADC stored from wreg
  9527  0043FA  6E07               	movwf	adcGetValue@PinADC^0,c
  9528  0043FC                     
  9529                           ;adc.c: 41: uint16_t adcGetValue(uint8_t PinADC);adc.c: 42: {;adc.c: 43:     ADCON0bits.
      +                          CHS = PinADC;
  9530  0043FC  C007  F006         	movff	adcGetValue@PinADC,??_adcGetValue
  9531  004400  4606               	rlncf	??_adcGetValue^0,f,c
  9532  004402  4606               	rlncf	??_adcGetValue^0,f,c
  9533  004404  50C2               	movf	194,w,c	;volatile
  9534  004406  1806               	xorwf	??_adcGetValue^0,w,c
  9535  004408  0BC3               	andlw	-61
  9536  00440A  1806               	xorwf	??_adcGetValue^0,w,c
  9537  00440C  6EC2               	movwf	194,c	;volatile
  9538  00440E                     
  9539                           ;adc.c: 44:     _delay((unsigned long)((2)*(12000000/4000.0)));
  9540  00440E  0E08               	movlw	8
  9541  004410  6E06               	movwf	??_adcGetValue^0,c
  9542  004412  0ECA               	movlw	202
  9543  004414                     u6307:
  9544  004414  2EE8               	decfsz	wreg,f,c
  9545  004416  D7FE               	bra	u6307
  9546  004418  2E06               	decfsz	??_adcGetValue^0,f,c
  9547  00441A  D7FC               	bra	u6307
  9548  00441C                     
  9549                           ;adc.c: 45:     GO_nDONE = 1;
  9550  00441C  82C2               	bsf	4034,1,c	;volatile
  9551  00441E                     l24:
  9552                           
  9553                           ;adc.c: 46:     while(ADCON0bits.GO_DONE)
  9554  00441E  B2C2               	btfsc	194,1,c	;volatile
  9555  004420  EF14  F022         	goto	u5751
  9556  004424  EF16  F022         	goto	u5750
  9557  004428                     u5751:
  9558  004428  EF0F  F022         	goto	l24
  9559  00442C                     u5750:
  9560  00442C                     
  9561                           ;adc.c: 49:     return ADRES;
  9562  00442C  CFC3 F004          	movff	4035,?_adcGetValue	;volatile
  9563  004430  CFC4 F005          	movff	4036,?_adcGetValue+1	;volatile
  9564  004434  0012               	return		;funcret
  9565  004436                     __end_of_adcGetValue:
  9566                           	callstack 0
  9567                           
  9568 ;; *************** function ___xxtofl *****************
  9569 ;; Defined at:
  9570 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  sign            1    wreg     unsigned char 
  9573 ;;  val             4    7[COMRAM] long 
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;  sign            1   15[COMRAM] unsigned char 
  9576 ;;  arg             4   17[COMRAM] unsigned long 
  9577 ;;  exp             1   16[COMRAM] unsigned char 
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  4    7[COMRAM] unsigned char 
  9580 ;; Registers used:
  9581 ;;		wreg, status,2, status,0
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9587 ;;      Params:         4       0       0       0       0       0       0       0       0
  9588 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9589 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9590 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9591 ;;Total ram usage:       14 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:    2
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_appADC
  9598 ;;		_appBat
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           	psect	text40
  9603  002BFE                     __ptext40:
  9604                           	callstack 0
  9605  002BFE                     ___xxtofl:
  9606                           	callstack 26
  9607                           
  9608                           ;incstack = 0
  9609                           ;___xxtofl@sign stored from wreg
  9610  002BFE  6E10               	movwf	___xxtofl@sign^0,c
  9611  002C00  5010               	movf	___xxtofl@sign^0,w,c
  9612  002C02  B4D8               	btfsc	status,2,c
  9613  002C04  EF06  F016         	goto	u5801
  9614  002C08  EF08  F016         	goto	u5800
  9615  002C0C                     u5801:
  9616  002C0C  EF2A  F016         	goto	l909
  9617  002C10                     u5800:
  9618  002C10  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  9619  002C12  EF0F  F016         	goto	u5810
  9620  002C16  EF0D  F016         	goto	u5811
  9621  002C1A                     u5811:
  9622  002C1A  EF2A  F016         	goto	l909
  9623  002C1E                     u5810:
  9624  002C1E  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  9625  002C22  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  9626  002C26  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  9627  002C2A  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  9628  002C2E  1E0C               	comf	??___xxtofl^0,f,c
  9629  002C30  1E0D               	comf	(??___xxtofl+1)^0,f,c
  9630  002C32  1E0E               	comf	(??___xxtofl+2)^0,f,c
  9631  002C34  1E0F               	comf	(??___xxtofl+3)^0,f,c
  9632  002C36  2A0C               	incf	??___xxtofl^0,f,c
  9633  002C38  0E00               	movlw	0
  9634  002C3A  220D               	addwfc	(??___xxtofl+1)^0,f,c
  9635  002C3C  220E               	addwfc	(??___xxtofl+2)^0,f,c
  9636  002C3E  220F               	addwfc	(??___xxtofl+3)^0,f,c
  9637  002C40  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  9638  002C44  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  9639  002C48  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  9640  002C4C  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  9641  002C50  EF32  F016         	goto	l4804
  9642  002C54                     l909:
  9643  002C54  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  9644  002C58  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9645  002C5C  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9646  002C60  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9647  002C64                     l4804:
  9648  002C64  5008               	movf	___xxtofl@val^0,w,c
  9649  002C66  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  9650  002C68  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  9651  002C6A  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  9652  002C6C  A4D8               	btfss	status,2,c
  9653  002C6E  EF3B  F016         	goto	u5821
  9654  002C72  EF3D  F016         	goto	u5820
  9655  002C76                     u5821:
  9656  002C76  EF47  F016         	goto	l4810
  9657  002C7A                     u5820:
  9658  002C7A  0E00               	movlw	0
  9659  002C7C  6E08               	movwf	?___xxtofl^0,c
  9660  002C7E  0E00               	movlw	0
  9661  002C80  6E09               	movwf	(?___xxtofl+1)^0,c
  9662  002C82  0E00               	movlw	0
  9663  002C84  6E0A               	movwf	(?___xxtofl+2)^0,c
  9664  002C86  0E00               	movlw	0
  9665  002C88  6E0B               	movwf	(?___xxtofl+3)^0,c
  9666  002C8A  EFD8  F016         	goto	l912
  9667  002C8E                     l4810:
  9668  002C8E  0E96               	movlw	150
  9669  002C90  6E11               	movwf	___xxtofl@exp^0,c
  9670  002C92  EF51  F016         	goto	l4814
  9671  002C96                     l4812:
  9672  002C96  2A11               	incf	___xxtofl@exp^0,f,c
  9673  002C98  90D8               	bcf	status,0,c
  9674  002C9A  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  9675  002C9C  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  9676  002C9E  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  9677  002CA0  3212               	rrcf	___xxtofl@arg^0,f,c
  9678  002CA2                     l4814:
  9679  002CA2  0E00               	movlw	0
  9680  002CA4  1412               	andwf	___xxtofl@arg^0,w,c
  9681  002CA6  6E0C               	movwf	??___xxtofl^0,c
  9682  002CA8  0E00               	movlw	0
  9683  002CAA  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  9684  002CAC  6E0D               	movwf	(??___xxtofl+1)^0,c
  9685  002CAE  0E00               	movlw	0
  9686  002CB0  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  9687  002CB2  6E0E               	movwf	(??___xxtofl+2)^0,c
  9688  002CB4  0EFE               	movlw	254
  9689  002CB6  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  9690  002CB8  6E0F               	movwf	(??___xxtofl+3)^0,c
  9691  002CBA  500C               	movf	??___xxtofl^0,w,c
  9692  002CBC  100D               	iorwf	(??___xxtofl+1)^0,w,c
  9693  002CBE  100E               	iorwf	(??___xxtofl+2)^0,w,c
  9694  002CC0  100F               	iorwf	(??___xxtofl+3)^0,w,c
  9695  002CC2  A4D8               	btfss	status,2,c
  9696  002CC4  EF66  F016         	goto	u5831
  9697  002CC8  EF68  F016         	goto	u5830
  9698  002CCC                     u5831:
  9699  002CCC  EF4B  F016         	goto	l4812
  9700  002CD0                     u5830:
  9701  002CD0  EF76  F016         	goto	l916
  9702  002CD4                     l4816:
  9703  002CD4  2A11               	incf	___xxtofl@exp^0,f,c
  9704  002CD6  0E01               	movlw	1
  9705  002CD8  2612               	addwf	___xxtofl@arg^0,f,c
  9706  002CDA  0E00               	movlw	0
  9707  002CDC  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  9708  002CDE  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  9709  002CE0  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  9710  002CE2  90D8               	bcf	status,0,c
  9711  002CE4  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  9712  002CE6  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  9713  002CE8  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  9714  002CEA  3212               	rrcf	___xxtofl@arg^0,f,c
  9715  002CEC                     l916:
  9716  002CEC  0E00               	movlw	0
  9717  002CEE  1412               	andwf	___xxtofl@arg^0,w,c
  9718  002CF0  6E0C               	movwf	??___xxtofl^0,c
  9719  002CF2  0E00               	movlw	0
  9720  002CF4  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  9721  002CF6  6E0D               	movwf	(??___xxtofl+1)^0,c
  9722  002CF8  0E00               	movlw	0
  9723  002CFA  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  9724  002CFC  6E0E               	movwf	(??___xxtofl+2)^0,c
  9725  002CFE  0EFF               	movlw	255
  9726  002D00  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  9727  002D02  6E0F               	movwf	(??___xxtofl+3)^0,c
  9728  002D04  500C               	movf	??___xxtofl^0,w,c
  9729  002D06  100D               	iorwf	(??___xxtofl+1)^0,w,c
  9730  002D08  100E               	iorwf	(??___xxtofl+2)^0,w,c
  9731  002D0A  100F               	iorwf	(??___xxtofl+3)^0,w,c
  9732  002D0C  A4D8               	btfss	status,2,c
  9733  002D0E  EF8B  F016         	goto	u5841
  9734  002D12  EF8D  F016         	goto	u5840
  9735  002D16                     u5841:
  9736  002D16  EF6A  F016         	goto	l4816
  9737  002D1A                     u5840:
  9738  002D1A  EF95  F016         	goto	l4824
  9739  002D1E                     l4822:
  9740  002D1E  0611               	decf	___xxtofl@exp^0,f,c
  9741  002D20  90D8               	bcf	status,0,c
  9742  002D22  3612               	rlcf	___xxtofl@arg^0,f,c
  9743  002D24  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  9744  002D26  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  9745  002D28  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  9746  002D2A                     l4824:
  9747  002D2A  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  9748  002D2C  EF9A  F016         	goto	u5851
  9749  002D30  EF9C  F016         	goto	u5850
  9750  002D34                     u5851:
  9751  002D34  EFA4  F016         	goto	l923
  9752  002D38                     u5850:
  9753  002D38  0E02               	movlw	2
  9754  002D3A  6011               	cpfslt	___xxtofl@exp^0,c
  9755  002D3C  EFA2  F016         	goto	u5861
  9756  002D40  EFA4  F016         	goto	u5860
  9757  002D44                     u5861:
  9758  002D44  EF8F  F016         	goto	l4822
  9759  002D48                     u5860:
  9760  002D48                     l923:
  9761  002D48  B011               	btfsc	___xxtofl@exp^0,0,c
  9762  002D4A  EFA9  F016         	goto	u5871
  9763  002D4E  EFAB  F016         	goto	u5870
  9764  002D52                     u5871:
  9765  002D52  EFAC  F016         	goto	l4830
  9766  002D56                     u5870:
  9767  002D56  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  9768  002D58                     l4830:
  9769  002D58  90D8               	bcf	status,0,c
  9770  002D5A  3211               	rrcf	___xxtofl@exp^0,f,c
  9771  002D5C  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  9772  002D60  6A0D               	clrf	(??___xxtofl+1)^0,c
  9773  002D62  6A0E               	clrf	(??___xxtofl+2)^0,c
  9774  002D64  6A0F               	clrf	(??___xxtofl+3)^0,c
  9775  002D66  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  9776  002D6A  6A0E               	clrf	(??___xxtofl+2)^0,c
  9777  002D6C  6A0D               	clrf	(??___xxtofl+1)^0,c
  9778  002D6E  6A0C               	clrf	??___xxtofl^0,c
  9779  002D70  500C               	movf	??___xxtofl^0,w,c
  9780  002D72  1212               	iorwf	___xxtofl@arg^0,f,c
  9781  002D74  500D               	movf	(??___xxtofl+1)^0,w,c
  9782  002D76  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  9783  002D78  500E               	movf	(??___xxtofl+2)^0,w,c
  9784  002D7A  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  9785  002D7C  500F               	movf	(??___xxtofl+3)^0,w,c
  9786  002D7E  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  9787  002D80  5010               	movf	___xxtofl@sign^0,w,c
  9788  002D82  B4D8               	btfsc	status,2,c
  9789  002D84  EFC6  F016         	goto	u5881
  9790  002D88  EFC8  F016         	goto	u5880
  9791  002D8C                     u5881:
  9792  002D8C  EFD0  F016         	goto	l4840
  9793  002D90                     u5880:
  9794  002D90  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  9795  002D92  EFCF  F016         	goto	u5890
  9796  002D96  EFCD  F016         	goto	u5891
  9797  002D9A                     u5891:
  9798  002D9A  EFD0  F016         	goto	l4840
  9799  002D9E                     u5890:
  9800  002D9E  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  9801  002DA0                     l4840:
  9802  002DA0  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  9803  002DA4  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  9804  002DA8  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  9805  002DAC  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  9806  002DB0                     l912:
  9807  002DB0  0012               	return		;funcret
  9808  002DB2                     __end_of___xxtofl:
  9809                           	callstack 0
  9810                           
  9811 ;; *************** function _appInit *****************
  9812 ;; Defined at:
  9813 ;;		line 10 in file "app.c"
  9814 ;; Parameters:    Size  Location     Type
  9815 ;;		None
  9816 ;; Auto vars:     Size  Location     Type
  9817 ;;		None
  9818 ;; Return value:  Size  Location     Type
  9819 ;;                  1    wreg      void 
  9820 ;; Registers used:
  9821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9822 ;; Tracked objects:
  9823 ;;		On entry : 0/0
  9824 ;;		On exit  : 0/0
  9825 ;;		Unchanged: 0/0
  9826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9827 ;;      Params:         0       0       0       0       0       0       0       0       0
  9828 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9830 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9831 ;;Total ram usage:        0 bytes
  9832 ;; Hardware stack levels used:    1
  9833 ;; Hardware stack levels required when called:    5
  9834 ;; This function calls:
  9835 ;;		_adcInit
  9836 ;;		_appISRConfig
  9837 ;;		_appLCD_Init
  9838 ;;		_appTimerInit
  9839 ;;		_appTimerStart
  9840 ;; This function is called by:
  9841 ;;		_main
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text41
  9846  00455C                     __ptext41:
  9847                           	callstack 0
  9848  00455C                     _appInit:
  9849                           	callstack 25
  9850  00455C                     
  9851                           ;app.c: 12:     appISRConfig();
  9852  00455C  ECD6  F022         	call	_appISRConfig	;wreg free
  9853  004560                     
  9854                           ;app.c: 13:     appLCD_Init();
  9855  004560  ECD1  F01F         	call	_appLCD_Init	;wreg free
  9856  004564                     
  9857                           ;app.c: 14:     adcInit(2);
  9858  004564  0E02               	movlw	2
  9859  004566  EC74  F021         	call	_adcInit
  9860  00456A                     
  9861                           ;app.c: 15:     appTimerInit();
  9862  00456A  ECC6  F022         	call	_appTimerInit	;wreg free
  9863  00456E                     
  9864                           ;app.c: 16:     appTimerStart();
  9865  00456E  ECD0  F022         	call	_appTimerStart	;wreg free
  9866  004572  0012               	return		;funcret
  9867  004574                     __end_of_appInit:
  9868                           	callstack 0
  9869                           
  9870 ;; *************** function _appTimerStart *****************
  9871 ;; Defined at:
  9872 ;;		line 72 in file "servo.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1    wreg      void 
  9879 ;; Registers used:
  9880 ;;		wreg, status,2
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9889 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:    2
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_appInit
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text42
  9901  0045A0                     __ptext42:
  9902                           	callstack 0
  9903  0045A0                     _appTimerStart:
  9904                           	callstack 27
  9905  0045A0                     
  9906                           ;servo.c: 74:     TMR3 = 20536;
  9907  0045A0  0E50               	movlw	80
  9908  0045A2  6EB3               	movwf	179,c	;volatile
  9909  0045A4  0E38               	movlw	56
  9910  0045A6  6EB2               	movwf	178,c	;volatile
  9911  0045A8                     
  9912                           ;servo.c: 75:     T3CONbits.TMR3ON = 1;
  9913  0045A8  80B1               	bsf	177,0,c	;volatile
  9914  0045AA  0012               	return		;funcret
  9915  0045AC                     __end_of_appTimerStart:
  9916                           	callstack 0
  9917                           
  9918 ;; *************** function _appTimerInit *****************
  9919 ;; Defined at:
  9920 ;;		line 53 in file "servo.c"
  9921 ;; Parameters:    Size  Location     Type
  9922 ;;		None
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;		None
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      void 
  9927 ;; Registers used:
  9928 ;;		wreg, status,2
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9934 ;;      Params:         0       0       0       0       0       0       0       0       0
  9935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9937 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9938 ;;Total ram usage:        0 bytes
  9939 ;; Hardware stack levels used:    1
  9940 ;; Hardware stack levels required when called:    2
  9941 ;; This function calls:
  9942 ;;		Nothing
  9943 ;; This function is called by:
  9944 ;;		_appInit
  9945 ;; This function uses a non-reentrant model
  9946 ;;
  9947                           
  9948                           	psect	text43
  9949  00458C                     __ptext43:
  9950                           	callstack 0
  9951  00458C                     _appTimerInit:
  9952                           	callstack 27
  9953  00458C                     
  9954                           ;servo.c: 58:     T3CONbits.TMR3ON = 0;
  9955  00458C  90B1               	bcf	177,0,c	;volatile
  9956                           
  9957                           ;servo.c: 59:     T3CONbits.RD16 = 1;
  9958  00458E  8EB1               	bsf	177,7,c	;volatile
  9959                           
  9960                           ;servo.c: 60:     T3CONbits.TMR3CS = 0;
  9961  004590  92B1               	bcf	177,1,c	;volatile
  9962  004592                     
  9963                           ;servo.c: 61:     T3CONbits.T3CKPS = 0b11;
  9964  004592  0E30               	movlw	48
  9965  004594  12B1               	iorwf	177,f,c	;volatile
  9966  004596                     
  9967                           ;servo.c: 62:     T3CONbits.T3NSYNC = 1;
  9968  004596  84B1               	bsf	177,2,c	;volatile
  9969  004598                     
  9970                           ;servo.c: 68:     PIR2bits.TMR3IF = 0;
  9971  004598  92A1               	bcf	161,1,c	;volatile
  9972  00459A                     
  9973                           ;servo.c: 69:     IPR2bits.TMR3IP = 0;
  9974  00459A  92A2               	bcf	162,1,c	;volatile
  9975  00459C                     
  9976                           ;servo.c: 70:     PIE2bits.TMR3IE = 1;
  9977  00459C  82A0               	bsf	160,1,c	;volatile
  9978  00459E  0012               	return		;funcret
  9979  0045A0                     __end_of_appTimerInit:
  9980                           	callstack 0
  9981                           
  9982 ;; *************** function _appLCD_Init *****************
  9983 ;; Defined at:
  9984 ;;		line 197 in file "flex_lcd.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;		None
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;		None
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9998 ;;      Params:         0       0       0       0       0       0       0       0       0
  9999 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10000 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10001 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10002 ;;Total ram usage:        2 bytes
 10003 ;; Hardware stack levels used:    1
 10004 ;; Hardware stack levels required when called:    4
 10005 ;; This function calls:
 10006 ;;		_Lcd_Cmd
 10007 ;;		_Lcd_Init
 10008 ;;		_Lcd_Out
 10009 ;; This function is called by:
 10010 ;;		_appInit
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           	psect	text44
 10015  003FA2                     __ptext44:
 10016                           	callstack 0
 10017  003FA2                     _appLCD_Init:
 10018                           	callstack 25
 10019  003FA2                     
 10020                           ;flex_lcd.c: 199:     Lcd_Init();
 10021  003FA2  ECC4  F01E         	call	_Lcd_Init	;wreg free
 10022                           
 10023                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
 10024  003FA6  0E01               	movlw	1
 10025  003FA8  ECBE  F019         	call	_Lcd_Cmd
 10026                           
 10027                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
 10028  003FAC  0E0C               	movlw	12
 10029  003FAE  ECBE  F019         	call	_Lcd_Cmd
 10030  003FB2                     
 10031                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
 10032  003FB2  0E02               	movlw	2
 10033  003FB4  6E0F               	movwf	(??_appLCD_Init+1)^0,c
 10034  003FB6  0E86               	movlw	134
 10035  003FB8  6E0E               	movwf	??_appLCD_Init^0,c
 10036  003FBA  0E99               	movlw	153
 10037  003FBC                     u6317:
 10038  003FBC  2EE8               	decfsz	wreg,f,c
 10039  003FBE  D7FE               	bra	u6317
 10040  003FC0  2E0E               	decfsz	??_appLCD_Init^0,f,c
 10041  003FC2  D7FC               	bra	u6317
 10042  003FC4  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
 10043  003FC6  D7FA               	bra	u6317
 10044  003FC8  F000               	nop	
 10045  003FCA                     
 10046                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
 10047  003FCA  0E03               	movlw	3
 10048  003FCC  6E07               	movwf	Lcd_Out@x^0,c
 10049  003FCE  0E01               	movlw	low STR_3
 10050  003FD0  6E08               	movwf	Lcd_Out@buffer^0,c
 10051  003FD2  0E08               	movlw	high STR_3
 10052  003FD4  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
 10053  003FD6  0E01               	movlw	1
 10054  003FD8  ECD3  F01C         	call	_Lcd_Out
 10055  003FDC                     
 10056                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
 10057  003FDC  0E06               	movlw	6
 10058  003FDE  6E07               	movwf	Lcd_Out@x^0,c
 10059  003FE0  0E1E               	movlw	low STR_4
 10060  003FE2  6E08               	movwf	Lcd_Out@buffer^0,c
 10061  003FE4  0E08               	movlw	high STR_4
 10062  003FE6  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
 10063  003FE8  0E02               	movlw	2
 10064  003FEA  ECD3  F01C         	call	_Lcd_Out
 10065  003FEE                     
 10066                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
 10067  003FEE  0E1F               	movlw	31
 10068  003FF0  6E0F               	movwf	(??_appLCD_Init+1)^0,c
 10069  003FF2  0E71               	movlw	113
 10070  003FF4  6E0E               	movwf	??_appLCD_Init^0,c
 10071  003FF6  0E1E               	movlw	30
 10072  003FF8                     u6327:
 10073  003FF8  2EE8               	decfsz	wreg,f,c
 10074  003FFA  D7FE               	bra	u6327
 10075  003FFC  2E0E               	decfsz	??_appLCD_Init^0,f,c
 10076  003FFE  D7FC               	bra	u6327
 10077  004000  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
 10078  004002  D7FA               	bra	u6327
 10079  004004  D000               	nop2	
 10080                           
 10081                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
 10082  004006  0E01               	movlw	1
 10083  004008  ECBE  F019         	call	_Lcd_Cmd
 10084  00400C  0E02               	movlw	2
 10085  00400E  6E0F               	movwf	(??_appLCD_Init+1)^0,c
 10086  004010  0E86               	movlw	134
 10087  004012  6E0E               	movwf	??_appLCD_Init^0,c
 10088  004014  0E99               	movlw	153
 10089  004016                     u6337:
 10090  004016  2EE8               	decfsz	wreg,f,c
 10091  004018  D7FE               	bra	u6337
 10092  00401A  2E0E               	decfsz	??_appLCD_Init^0,f,c
 10093  00401C  D7FC               	bra	u6337
 10094  00401E  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
 10095  004020  D7FA               	bra	u6337
 10096  004022  F000               	nop	
 10097  004024  0012               	return		;funcret
 10098  004026                     __end_of_appLCD_Init:
 10099                           	callstack 0
 10100                           
 10101 ;; *************** function _Lcd_Out *****************
 10102 ;; Defined at:
 10103 ;;		line 95 in file "flex_lcd.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  y               1    wreg     unsigned char 
 10106 ;;  x               1    6[COMRAM] unsigned char 
 10107 ;;  buffer          2    7[COMRAM] PTR const char 
 10108 ;;		 -> appElemts@dataout(6), STR_4(6), STR_3(12), appBat@dataOut(8), 
 10109 ;;		 -> appADC@dataOut(9), 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;  y               1   11[COMRAM] unsigned char 
 10112 ;;  data            1   12[COMRAM] unsigned char 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10122 ;;      Params:         3       0       0       0       0       0       0       0       0
 10123 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10124 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10125 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10126 ;;Total ram usage:        7 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    3
 10129 ;; This function calls:
 10130 ;;		_Lcd_Chr_CP
 10131 ;;		_Lcd_Cmd
 10132 ;; This function is called by:
 10133 ;;		_appADC
 10134 ;;		_appBat
 10135 ;;		_appLCD_Init
 10136 ;;		_appElemts
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text45
 10141  0039A6                     __ptext45:
 10142                           	callstack 0
 10143  0039A6                     _Lcd_Out:
 10144                           	callstack 25
 10145                           
 10146                           ;incstack = 0
 10147                           ;Lcd_Out@y stored from wreg
 10148  0039A6  6E0C               	movwf	Lcd_Out@y^0,c
 10149  0039A8                     
 10150                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
 10151  0039A8  EFEA  F01C         	goto	l4726
 10152  0039AC                     l4716:
 10153                           
 10154                           ;flex_lcd.c: 101:             data = 128 + x;
 10155  0039AC  5007               	movf	Lcd_Out@x^0,w,c
 10156  0039AE  0F80               	addlw	128
 10157  0039B0  6E0D               	movwf	Lcd_Out@data^0,c
 10158                           
 10159                           ;flex_lcd.c: 102:             break;
 10160  0039B2  EF07  F01D         	goto	l4728
 10161  0039B6                     l4718:
 10162                           
 10163                           ;flex_lcd.c: 104:             data = 192 + x;
 10164  0039B6  5007               	movf	Lcd_Out@x^0,w,c
 10165  0039B8  0FC0               	addlw	192
 10166  0039BA  6E0D               	movwf	Lcd_Out@data^0,c
 10167                           
 10168                           ;flex_lcd.c: 105:             break;
 10169  0039BC  EF07  F01D         	goto	l4728
 10170  0039C0                     l4720:
 10171                           
 10172                           ;flex_lcd.c: 107:             data = 148 + x;
 10173  0039C0  5007               	movf	Lcd_Out@x^0,w,c
 10174  0039C2  0F94               	addlw	148
 10175  0039C4  6E0D               	movwf	Lcd_Out@data^0,c
 10176                           
 10177                           ;flex_lcd.c: 108:             break;
 10178  0039C6  EF07  F01D         	goto	l4728
 10179  0039CA                     l4722:
 10180                           
 10181                           ;flex_lcd.c: 110:             data = 212 + x;
 10182  0039CA  5007               	movf	Lcd_Out@x^0,w,c
 10183  0039CC  0FD4               	addlw	212
 10184  0039CE  6E0D               	movwf	Lcd_Out@data^0,c
 10185                           
 10186                           ;flex_lcd.c: 111:             break;
 10187  0039D0  EF07  F01D         	goto	l4728
 10188  0039D4                     l4726:
 10189  0039D4  500C               	movf	Lcd_Out@y^0,w,c
 10190  0039D6  6E0A               	movwf	??_Lcd_Out^0,c
 10191  0039D8  6A0B               	clrf	(??_Lcd_Out+1)^0,c
 10192                           
 10193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10194                           ; Switch size 1, requested type "simple"
 10195                           ; Number of cases is 1, Range of values is 0 to 0
 10196                           ; switch strategies available:
 10197                           ; Name         Instructions Cycles
 10198                           ; simple_byte            4     3 (average)
 10199                           ;	Chosen strategy is simple_byte
 10200  0039DA  500B               	movf	(??_Lcd_Out+1)^0,w,c
 10201  0039DC  0A00               	xorlw	0	; case 0
 10202  0039DE  B4D8               	btfsc	status,2,c
 10203  0039E0  EFF4  F01C         	goto	l5378
 10204  0039E4  EF07  F01D         	goto	l4728
 10205  0039E8                     l5378:
 10206                           
 10207                           ; Switch size 1, requested type "simple"
 10208                           ; Number of cases is 4, Range of values is 1 to 4
 10209                           ; switch strategies available:
 10210                           ; Name         Instructions Cycles
 10211                           ; simple_byte           13     7 (average)
 10212                           ;	Chosen strategy is simple_byte
 10213  0039E8  500A               	movf	??_Lcd_Out^0,w,c
 10214  0039EA  0A01               	xorlw	1	; case 1
 10215  0039EC  B4D8               	btfsc	status,2,c
 10216  0039EE  EFD6  F01C         	goto	l4716
 10217  0039F2  0A03               	xorlw	3	; case 2
 10218  0039F4  B4D8               	btfsc	status,2,c
 10219  0039F6  EFDB  F01C         	goto	l4718
 10220  0039FA  0A01               	xorlw	1	; case 3
 10221  0039FC  B4D8               	btfsc	status,2,c
 10222  0039FE  EFE0  F01C         	goto	l4720
 10223  003A02  0A07               	xorlw	7	; case 4
 10224  003A04  B4D8               	btfsc	status,2,c
 10225  003A06  EFE5  F01C         	goto	l4722
 10226  003A0A  EF07  F01D         	goto	l4728
 10227  003A0E                     l4728:
 10228                           
 10229                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
 10230  003A0E  500D               	movf	Lcd_Out@data^0,w,c
 10231  003A10  ECBE  F019         	call	_Lcd_Cmd
 10232                           
 10233                           ;flex_lcd.c: 116:     while(*buffer)
 10234  003A14  EF20  F01D         	goto	l4734
 10235  003A18                     l4730:
 10236                           
 10237                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
 10238  003A18  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
 10239  003A1C  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
 10240  003A20  6AF8               	clrf	tblptru,c
 10241  003A22  0E07               	movlw	(high __ramtop+-1)
 10242  003A24  64F7               	cpfsgt	tblptrh,c
 10243  003A26  D003               	bra	u5767
 10244  003A28  0008               	tblrd		*
 10245  003A2A  50F5               	movf	tablat,w,c
 10246  003A2C  D005               	bra	u5760
 10247  003A2E                     u5767:
 10248  003A2E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10249  003A32  CFF7 FFE2          	movff	tblptrh,fsr1h
 10250  003A36  50E7               	movf	indf1,w,c
 10251  003A38                     u5760:
 10252  003A38  EC17  F019         	call	_Lcd_Chr_CP
 10253  003A3C                     
 10254                           ;flex_lcd.c: 119:         buffer++;
 10255  003A3C  4A08               	infsnz	Lcd_Out@buffer^0,f,c
 10256  003A3E  2A09               	incf	(Lcd_Out@buffer+1)^0,f,c
 10257  003A40                     l4734:
 10258                           
 10259                           ;flex_lcd.c: 116:     while(*buffer)
 10260  003A40  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
 10261  003A44  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
 10262  003A48  6AF8               	clrf	tblptru,c
 10263  003A4A  0E07               	movlw	(high __ramtop+-1)
 10264  003A4C  64F7               	cpfsgt	tblptrh,c
 10265  003A4E  D003               	bra	u5777
 10266  003A50  0008               	tblrd		*
 10267  003A52  50F5               	movf	tablat,w,c
 10268  003A54  D005               	bra	u5770
 10269  003A56                     u5777:
 10270  003A56  CFF6 FFE1          	movff	tblptrl,fsr1l
 10271  003A5A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10272  003A5E  50E7               	movf	indf1,w,c
 10273  003A60                     u5770:
 10274  003A60  0900               	iorlw	0
 10275  003A62  A4D8               	btfss	status,2,c
 10276  003A64  EF36  F01D         	goto	u5781
 10277  003A68  EF38  F01D         	goto	u5780
 10278  003A6C                     u5781:
 10279  003A6C  EF0C  F01D         	goto	l4730
 10280  003A70                     u5780:
 10281  003A70  0012               	return		;funcret
 10282  003A72                     __end_of_Lcd_Out:
 10283                           	callstack 0
 10284                           
 10285 ;; *************** function _Lcd_Chr_CP *****************
 10286 ;; Defined at:
 10287 ;;		line 151 in file "flex_lcd.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;  data            1    wreg     char 
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;  data            1    5[COMRAM] char 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      void 
 10294 ;; Registers used:
 10295 ;;		wreg, status,2, status,0
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10301 ;;      Params:         0       0       0       0       0       0       0       0       0
 10302 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10303 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10304 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10305 ;;Total ram usage:        3 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; Hardware stack levels required when called:    2
 10308 ;; This function calls:
 10309 ;;		Nothing
 10310 ;; This function is called by:
 10311 ;;		_Lcd_Out
 10312 ;;		_Lcd_Out2
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316                           	psect	text46
 10317  00322E                     __ptext46:
 10318                           	callstack 0
 10319  00322E                     _Lcd_Chr_CP:
 10320                           	callstack 25
 10321                           
 10322                           ;incstack = 0
 10323                           ;Lcd_Chr_CP@data stored from wreg
 10324  00322E  6E06               	movwf	Lcd_Chr_CP@data^0,c
 10325  003230                     
 10326                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
 10327  003230  968C               	bcf	140,3,c	;volatile
 10328                           
 10329                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
 10330  003232  848C               	bsf	140,2,c	;volatile
 10331  003234                     
 10332                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
 10333  003234  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10334  003238  0E07               	movlw	7
 10335  00323A  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
 10336  00323C                     u5685:
 10337  00323C  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
 10338  00323E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10339  003240  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
 10340  003242  EF1E  F019         	goto	u5685
 10341  003246  0E01               	movlw	1
 10342  003248  1604               	andwf	??_Lcd_Chr_CP^0,f,c
 10343  00324A  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10344  00324C  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10345  00324E  508C               	movf	140,w,c	;volatile
 10346  003250  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10347  003252  0B7F               	andlw	-129
 10348  003254  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10349  003256  6E8C               	movwf	140,c	;volatile
 10350                           
 10351                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
 10352  003258  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10353  00325C  0E06               	movlw	6
 10354  00325E  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
 10355  003260                     u5695:
 10356  003260  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
 10357  003262  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10358  003264  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
 10359  003266  EF30  F019         	goto	u5695
 10360  00326A  0E01               	movlw	1
 10361  00326C  1604               	andwf	??_Lcd_Chr_CP^0,f,c
 10362  00326E  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
 10363  003270  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
 10364  003272  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
 10365  003274  508C               	movf	140,w,c	;volatile
 10366  003276  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10367  003278  0BBF               	andlw	-65
 10368  00327A  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10369  00327C  6E8C               	movwf	140,c	;volatile
 10370                           
 10371                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
 10372  00327E  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10373  003282  0E05               	movlw	5
 10374  003284  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
 10375  003286                     u5705:
 10376  003286  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
 10377  003288  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10378  00328A  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
 10379  00328C  EF43  F019         	goto	u5705
 10380  003290  0E01               	movlw	1
 10381  003292  1604               	andwf	??_Lcd_Chr_CP^0,f,c
 10382  003294  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
 10383  003296  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
 10384  003298  508C               	movf	140,w,c	;volatile
 10385  00329A  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10386  00329C  0BDF               	andlw	-33
 10387  00329E  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10388  0032A0  6E8C               	movwf	140,c	;volatile
 10389                           
 10390                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
 10391  0032A2  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10392  0032A6  0E04               	movlw	4
 10393  0032A8  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
 10394  0032AA                     u5715:
 10395  0032AA  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
 10396  0032AC  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10397  0032AE  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
 10398  0032B0  EF55  F019         	goto	u5715
 10399  0032B4  0E01               	movlw	1
 10400  0032B6  1604               	andwf	??_Lcd_Chr_CP^0,f,c
 10401  0032B8  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
 10402  0032BA  508C               	movf	140,w,c	;volatile
 10403  0032BC  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10404  0032BE  0BEF               	andlw	-17
 10405  0032C0  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10406  0032C2  6E8C               	movwf	140,c	;volatile
 10407  0032C4                     
 10408                           ;flex_lcd.c: 159:     _delay(10);
 10409  0032C4  0E03               	movlw	3
 10410  0032C6                     u6347:
 10411  0032C6  2EE8               	decfsz	wreg,f,c
 10412  0032C8  D7FE               	bra	u6347
 10413  0032CA  F000               	nop	
 10414  0032CC                     
 10415                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
 10416  0032CC  868C               	bsf	140,3,c	;volatile
 10417  0032CE                     
 10418                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
 10419  0032CE  0E05               	movlw	5
 10420  0032D0                     u6357:
 10421  0032D0  2EE8               	decfsz	wreg,f,c
 10422  0032D2  D7FE               	bra	u6357
 10423  0032D4                     
 10424                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
 10425  0032D4  968C               	bcf	140,3,c	;volatile
 10426                           
 10427                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
 10428  0032D6  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10429  0032DA  0E03               	movlw	3
 10430  0032DC  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
 10431  0032DE                     u5725:
 10432  0032DE  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
 10433  0032E0  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10434  0032E2  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
 10435  0032E4  EF6F  F019         	goto	u5725
 10436  0032E8  0E01               	movlw	1
 10437  0032EA  1604               	andwf	??_Lcd_Chr_CP^0,f,c
 10438  0032EC  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10439  0032EE  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10440  0032F0  508C               	movf	140,w,c	;volatile
 10441  0032F2  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10442  0032F4  0B7F               	andlw	-129
 10443  0032F6  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10444  0032F8  6E8C               	movwf	140,c	;volatile
 10445                           
 10446                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
 10447  0032FA  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10448  0032FE  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
 10449  003300  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10450  003302  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
 10451  003304  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10452  003306  0E01               	movlw	1
 10453  003308  1604               	andwf	??_Lcd_Chr_CP^0,f,c
 10454  00330A  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
 10455  00330C  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
 10456  00330E  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
 10457  003310  508C               	movf	140,w,c	;volatile
 10458  003312  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10459  003314  0BBF               	andlw	-65
 10460  003316  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10461  003318  6E8C               	movwf	140,c	;volatile
 10462                           
 10463                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
 10464  00331A  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10465  00331E  0E01               	movlw	1
 10466  003320  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
 10467  003322                     u5735:
 10468  003322  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
 10469  003324  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
 10470  003326  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
 10471  003328  EF91  F019         	goto	u5735
 10472  00332C  0E01               	movlw	1
 10473  00332E  1604               	andwf	??_Lcd_Chr_CP^0,f,c
 10474  003330  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
 10475  003332  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
 10476  003334  508C               	movf	140,w,c	;volatile
 10477  003336  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10478  003338  0BDF               	andlw	-33
 10479  00333A  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10480  00333C  6E8C               	movwf	140,c	;volatile
 10481                           
 10482                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
 10483  00333E  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 10484  003342  0E01               	movlw	1
 10485  003344  1604               	andwf	??_Lcd_Chr_CP^0,f,c
 10486  003346  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
 10487  003348  508C               	movf	140,w,c	;volatile
 10488  00334A  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10489  00334C  0BEF               	andlw	-17
 10490  00334E  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
 10491  003350  6E8C               	movwf	140,c	;volatile
 10492  003352                     
 10493                           ;flex_lcd.c: 167:     _delay(10);
 10494  003352  0E03               	movlw	3
 10495  003354                     u6367:
 10496  003354  2EE8               	decfsz	wreg,f,c
 10497  003356  D7FE               	bra	u6367
 10498  003358  F000               	nop	
 10499  00335A                     
 10500                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
 10501  00335A  868C               	bsf	140,3,c	;volatile
 10502  00335C                     
 10503                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
 10504  00335C  0E05               	movlw	5
 10505  00335E                     u6377:
 10506  00335E  2EE8               	decfsz	wreg,f,c
 10507  003360  D7FE               	bra	u6377
 10508  003362                     
 10509                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
 10510  003362  968C               	bcf	140,3,c	;volatile
 10511  003364                     
 10512                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
 10513  003364  0E05               	movlw	5
 10514  003366                     u6387:
 10515  003366  2EE8               	decfsz	wreg,f,c
 10516  003368  D7FE               	bra	u6387
 10517  00336A                     
 10518                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
 10519  00336A  0E16               	movlw	22
 10520  00336C  6E04               	movwf	??_Lcd_Chr_CP^0,c
 10521  00336E  0E6C               	movlw	108
 10522  003370                     u6397:
 10523  003370  2EE8               	decfsz	wreg,f,c
 10524  003372  D7FE               	bra	u6397
 10525  003374  2E04               	decfsz	??_Lcd_Chr_CP^0,f,c
 10526  003376  D7FC               	bra	u6397
 10527  003378  D000               	nop2	
 10528  00337A  0012               	return		;funcret
 10529  00337C                     __end_of_Lcd_Chr_CP:
 10530                           	callstack 0
 10531                           
 10532 ;; *************** function _Lcd_Init *****************
 10533 ;; Defined at:
 10534 ;;		line 31 in file "flex_lcd.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;  i               1    7[COMRAM] unsigned char 
 10539 ;;  data            1    0        unsigned char 
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  1    wreg      void 
 10542 ;; Registers used:
 10543 ;;		wreg, status,2, status,0, cstack
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0
 10550 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10551 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10552 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10553 ;;Total ram usage:        3 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:    3
 10556 ;; This function calls:
 10557 ;;		_Lcd_Cmd
 10558 ;; This function is called by:
 10559 ;;		_appLCD_Init
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           	psect	text47
 10564  003D88                     __ptext47:
 10565                           	callstack 0
 10566  003D88                     _Lcd_Init:
 10567                           	callstack 25
 10568  003D88                     
 10569                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
 10570  003D88  9E95               	bcf	149,7,c	;volatile
 10571                           
 10572                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
 10573  003D8A  9C95               	bcf	149,6,c	;volatile
 10574                           
 10575                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
 10576  003D8C  9A95               	bcf	149,5,c	;volatile
 10577                           
 10578                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
 10579  003D8E  9895               	bcf	149,4,c	;volatile
 10580                           
 10581                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
 10582  003D90  9695               	bcf	149,3,c	;volatile
 10583                           
 10584                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
 10585  003D92  9495               	bcf	149,2,c	;volatile
 10586  003D94                     
 10587                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
 10588  003D94  0E85               	movlw	133
 10589  003D96  6E07               	movwf	??_Lcd_Init^0,c
 10590  003D98  0E76               	movlw	118
 10591  003D9A                     u6407:
 10592  003D9A  2EE8               	decfsz	wreg,f,c
 10593  003D9C  D7FE               	bra	u6407
 10594  003D9E  2E07               	decfsz	??_Lcd_Init^0,f,c
 10595  003DA0  D7FC               	bra	u6407
 10596  003DA2  D000               	nop2	
 10597  003DA4                     
 10598                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
 10599  003DA4  0E00               	movlw	0
 10600  003DA6  6E08               	movwf	Lcd_Init@i^0,c
 10601  003DA8                     l117:
 10602                           
 10603                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
 10604  003DA8  9E8C               	bcf	140,7,c	;volatile
 10605                           
 10606                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
 10607  003DAA  9C8C               	bcf	140,6,c	;volatile
 10608                           
 10609                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
 10610  003DAC  8A8C               	bsf	140,5,c	;volatile
 10611                           
 10612                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
 10613  003DAE  888C               	bsf	140,4,c	;volatile
 10614                           
 10615                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
 10616  003DB0  968C               	bcf	140,3,c	;volatile
 10617                           
 10618                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
 10619  003DB2  948C               	bcf	140,2,c	;volatile
 10620                           
 10621                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
 10622  003DB4  9E8C               	bcf	140,7,c	;volatile
 10623                           
 10624                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
 10625  003DB6  9C8C               	bcf	140,6,c	;volatile
 10626                           
 10627                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
 10628  003DB8  8A8C               	bsf	140,5,c	;volatile
 10629                           
 10630                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
 10631  003DBA  888C               	bsf	140,4,c	;volatile
 10632                           
 10633                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
 10634  003DBC  868C               	bsf	140,3,c	;volatile
 10635                           
 10636                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
 10637  003DBE  948C               	bcf	140,2,c	;volatile
 10638  003DC0                     
 10639                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
 10640  003DC0  0E05               	movlw	5
 10641  003DC2                     u6417:
 10642  003DC2  2EE8               	decfsz	wreg,f,c
 10643  003DC4  D7FE               	bra	u6417
 10644  003DC6                     
 10645                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
 10646  003DC6  9E8C               	bcf	140,7,c	;volatile
 10647  003DC8                     
 10648                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
 10649  003DC8  9C8C               	bcf	140,6,c	;volatile
 10650  003DCA                     
 10651                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
 10652  003DCA  8A8C               	bsf	140,5,c	;volatile
 10653  003DCC                     
 10654                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
 10655  003DCC  888C               	bsf	140,4,c	;volatile
 10656  003DCE                     
 10657                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
 10658  003DCE  968C               	bcf	140,3,c	;volatile
 10659  003DD0                     
 10660                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
 10661  003DD0  948C               	bcf	140,2,c	;volatile
 10662                           
 10663                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
 10664  003DD2  0E16               	movlw	22
 10665  003DD4  6E07               	movwf	??_Lcd_Init^0,c
 10666  003DD6  0E6C               	movlw	108
 10667  003DD8                     u6427:
 10668  003DD8  2EE8               	decfsz	wreg,f,c
 10669  003DDA  D7FE               	bra	u6427
 10670  003DDC  2E07               	decfsz	??_Lcd_Init^0,f,c
 10671  003DDE  D7FC               	bra	u6427
 10672  003DE0  D000               	nop2	
 10673  003DE2                     
 10674                           ;flex_lcd.c: 61:     }
 10675  003DE2  2A08               	incf	Lcd_Init@i^0,f,c
 10676  003DE4  0E03               	movlw	3
 10677  003DE6  6408               	cpfsgt	Lcd_Init@i^0,c
 10678  003DE8  EFF8  F01E         	goto	u5791
 10679  003DEC  EFFA  F01E         	goto	u5790
 10680  003DF0                     u5791:
 10681  003DF0  EFD4  F01E         	goto	l117
 10682  003DF4                     u5790:
 10683  003DF4                     
 10684                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
 10685  003DF4  9E8C               	bcf	140,7,c	;volatile
 10686                           
 10687                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
 10688  003DF6  9C8C               	bcf	140,6,c	;volatile
 10689                           
 10690                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
 10691  003DF8  8A8C               	bsf	140,5,c	;volatile
 10692                           
 10693                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
 10694  003DFA  988C               	bcf	140,4,c	;volatile
 10695                           
 10696                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
 10697  003DFC  968C               	bcf	140,3,c	;volatile
 10698                           
 10699                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
 10700  003DFE  948C               	bcf	140,2,c	;volatile
 10701                           
 10702                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
 10703  003E00  9E8C               	bcf	140,7,c	;volatile
 10704                           
 10705                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
 10706  003E02  9C8C               	bcf	140,6,c	;volatile
 10707                           
 10708                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
 10709  003E04  8A8C               	bsf	140,5,c	;volatile
 10710                           
 10711                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
 10712  003E06  988C               	bcf	140,4,c	;volatile
 10713                           
 10714                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
 10715  003E08  868C               	bsf	140,3,c	;volatile
 10716                           
 10717                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
 10718  003E0A  948C               	bcf	140,2,c	;volatile
 10719  003E0C                     
 10720                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
 10721  003E0C  0E05               	movlw	5
 10722  003E0E                     u6437:
 10723  003E0E  2EE8               	decfsz	wreg,f,c
 10724  003E10  D7FE               	bra	u6437
 10725  003E12                     
 10726                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
 10727  003E12  9E8C               	bcf	140,7,c	;volatile
 10728  003E14                     
 10729                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
 10730  003E14  9C8C               	bcf	140,6,c	;volatile
 10731  003E16                     
 10732                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
 10733  003E16  8A8C               	bsf	140,5,c	;volatile
 10734  003E18                     
 10735                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
 10736  003E18  988C               	bcf	140,4,c	;volatile
 10737  003E1A                     
 10738                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
 10739  003E1A  968C               	bcf	140,3,c	;volatile
 10740  003E1C                     
 10741                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
 10742  003E1C  948C               	bcf	140,2,c	;volatile
 10743                           
 10744                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
 10745  003E1E  0E16               	movlw	22
 10746  003E20  6E07               	movwf	??_Lcd_Init^0,c
 10747  003E22  0E6C               	movlw	108
 10748  003E24                     u6447:
 10749  003E24  2EE8               	decfsz	wreg,f,c
 10750  003E26  D7FE               	bra	u6447
 10751  003E28  2E07               	decfsz	??_Lcd_Init^0,f,c
 10752  003E2A  D7FC               	bra	u6447
 10753  003E2C  D000               	nop2	
 10754  003E2E                     
 10755                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
 10756  003E2E  0E28               	movlw	40
 10757  003E30  ECBE  F019         	call	_Lcd_Cmd
 10758  003E34                     
 10759                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
 10760  003E34  0E10               	movlw	16
 10761  003E36  ECBE  F019         	call	_Lcd_Cmd
 10762  003E3A                     
 10763                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
 10764  003E3A  0E01               	movlw	1
 10765  003E3C  ECBE  F019         	call	_Lcd_Cmd
 10766  003E40                     
 10767                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
 10768  003E40  0E0F               	movlw	15
 10769  003E42  ECBE  F019         	call	_Lcd_Cmd
 10770  003E46  0012               	return		;funcret
 10771  003E48                     __end_of_Lcd_Init:
 10772                           	callstack 0
 10773                           
 10774 ;; *************** function _Lcd_Cmd *****************
 10775 ;; Defined at:
 10776 ;;		line 175 in file "flex_lcd.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  data            1    wreg     unsigned char 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;  data            1    5[COMRAM] unsigned char 
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2, status,0
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10790 ;;      Params:         0       0       0       0       0       0       0       0       0
 10791 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10792 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10793 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10794 ;;Total ram usage:        3 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; Hardware stack levels required when called:    2
 10797 ;; This function calls:
 10798 ;;		Nothing
 10799 ;; This function is called by:
 10800 ;;		_Lcd_Init
 10801 ;;		_Lcd_Out
 10802 ;;		_appLCD_Init
 10803 ;;		_Lcd_Out2
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807                           	psect	text48
 10808  00337C                     __ptext48:
 10809                           	callstack 0
 10810  00337C                     _Lcd_Cmd:
 10811                           	callstack 25
 10812                           
 10813                           ;incstack = 0
 10814                           ;Lcd_Cmd@data stored from wreg
 10815  00337C  6E06               	movwf	Lcd_Cmd@data^0,c
 10816  00337E                     
 10817                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
 10818  00337E  968C               	bcf	140,3,c	;volatile
 10819  003380  948C               	bcf	140,2,c	;volatile
 10820  003382                     
 10821                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
 10822  003382  6A04               	clrf	??_Lcd_Cmd^0,c
 10823  003384  AE06               	btfss	Lcd_Cmd@data^0,7,c
 10824  003386  D001               	bra	u5655
 10825  003388  2A04               	incf	??_Lcd_Cmd^0,f,c
 10826  00338A                     u5655:
 10827  00338A  0E01               	movlw	1
 10828  00338C  1604               	andwf	??_Lcd_Cmd^0,f,c
 10829  00338E  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10830  003390  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10831  003392  508C               	movf	140,w,c	;volatile
 10832  003394  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10833  003396  0B7F               	andlw	-129
 10834  003398  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10835  00339A  6E8C               	movwf	140,c	;volatile
 10836                           
 10837                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
 10838  00339C  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10839  0033A0  0E06               	movlw	6
 10840  0033A2  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
 10841  0033A4                     u5665:
 10842  0033A4  90D8               	bcf	status,0,c
 10843  0033A6  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10844  0033A8  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
 10845  0033AA  EFD2  F019         	goto	u5665
 10846  0033AE  0E01               	movlw	1
 10847  0033B0  1604               	andwf	??_Lcd_Cmd^0,f,c
 10848  0033B2  3A04               	swapf	??_Lcd_Cmd^0,f,c
 10849  0033B4  4604               	rlncf	??_Lcd_Cmd^0,f,c
 10850  0033B6  4604               	rlncf	??_Lcd_Cmd^0,f,c
 10851  0033B8  508C               	movf	140,w,c	;volatile
 10852  0033BA  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10853  0033BC  0BBF               	andlw	-65
 10854  0033BE  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10855  0033C0  6E8C               	movwf	140,c	;volatile
 10856                           
 10857                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
 10858  0033C2  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10859  0033C6  0E05               	movlw	5
 10860  0033C8  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
 10861  0033CA                     u5675:
 10862  0033CA  90D8               	bcf	status,0,c
 10863  0033CC  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10864  0033CE  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
 10865  0033D0  EFE5  F019         	goto	u5675
 10866  0033D4  0E01               	movlw	1
 10867  0033D6  1604               	andwf	??_Lcd_Cmd^0,f,c
 10868  0033D8  3A04               	swapf	??_Lcd_Cmd^0,f,c
 10869  0033DA  4604               	rlncf	??_Lcd_Cmd^0,f,c
 10870  0033DC  508C               	movf	140,w,c	;volatile
 10871  0033DE  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10872  0033E0  0BDF               	andlw	-33
 10873  0033E2  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10874  0033E4  6E8C               	movwf	140,c	;volatile
 10875                           
 10876                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
 10877  0033E6  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10878  0033EA  3A04               	swapf	??_Lcd_Cmd^0,f,c
 10879  0033EC  0E0F               	movlw	15
 10880  0033EE  1604               	andwf	??_Lcd_Cmd^0,f,c
 10881  0033F0  0E01               	movlw	1
 10882  0033F2  1604               	andwf	??_Lcd_Cmd^0,f,c
 10883  0033F4  3A04               	swapf	??_Lcd_Cmd^0,f,c
 10884  0033F6  508C               	movf	140,w,c	;volatile
 10885  0033F8  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10886  0033FA  0BEF               	andlw	-17
 10887  0033FC  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10888  0033FE  6E8C               	movwf	140,c	;volatile
 10889  003400                     
 10890                           ;flex_lcd.c: 182:     _delay(10);
 10891  003400  0E03               	movlw	3
 10892  003402                     u6457:
 10893  003402  2EE8               	decfsz	wreg,f,c
 10894  003404  D7FE               	bra	u6457
 10895  003406  F000               	nop	
 10896  003408                     
 10897                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
 10898  003408  868C               	bsf	140,3,c	;volatile
 10899  00340A                     
 10900                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
 10901  00340A  0E05               	movlw	5
 10902  00340C                     u6467:
 10903  00340C  2EE8               	decfsz	wreg,f,c
 10904  00340E  D7FE               	bra	u6467
 10905  003410                     
 10906                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
 10907  003410  968C               	bcf	140,3,c	;volatile
 10908                           
 10909                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
 10910  003412  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10911  003416  90D8               	bcf	status,0,c
 10912  003418  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10913  00341A  90D8               	bcf	status,0,c
 10914  00341C  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10915  00341E  90D8               	bcf	status,0,c
 10916  003420  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10917  003422  0E01               	movlw	1
 10918  003424  1604               	andwf	??_Lcd_Cmd^0,f,c
 10919  003426  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10920  003428  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10921  00342A  508C               	movf	140,w,c	;volatile
 10922  00342C  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10923  00342E  0B7F               	andlw	-129
 10924  003430  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10925  003432  6E8C               	movwf	140,c	;volatile
 10926                           
 10927                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
 10928  003434  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10929  003438  90D8               	bcf	status,0,c
 10930  00343A  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10931  00343C  90D8               	bcf	status,0,c
 10932  00343E  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10933  003440  0E01               	movlw	1
 10934  003442  1604               	andwf	??_Lcd_Cmd^0,f,c
 10935  003444  3A04               	swapf	??_Lcd_Cmd^0,f,c
 10936  003446  4604               	rlncf	??_Lcd_Cmd^0,f,c
 10937  003448  4604               	rlncf	??_Lcd_Cmd^0,f,c
 10938  00344A  508C               	movf	140,w,c	;volatile
 10939  00344C  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10940  00344E  0BBF               	andlw	-65
 10941  003450  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10942  003452  6E8C               	movwf	140,c	;volatile
 10943                           
 10944                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
 10945  003454  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10946  003458  90D8               	bcf	status,0,c
 10947  00345A  3204               	rrcf	??_Lcd_Cmd^0,f,c
 10948  00345C  0E01               	movlw	1
 10949  00345E  1604               	andwf	??_Lcd_Cmd^0,f,c
 10950  003460  3A04               	swapf	??_Lcd_Cmd^0,f,c
 10951  003462  4604               	rlncf	??_Lcd_Cmd^0,f,c
 10952  003464  508C               	movf	140,w,c	;volatile
 10953  003466  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10954  003468  0BDF               	andlw	-33
 10955  00346A  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10956  00346C  6E8C               	movwf	140,c	;volatile
 10957                           
 10958                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
 10959  00346E  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 10960  003472  0E01               	movlw	1
 10961  003474  1604               	andwf	??_Lcd_Cmd^0,f,c
 10962  003476  3A04               	swapf	??_Lcd_Cmd^0,f,c
 10963  003478  508C               	movf	140,w,c	;volatile
 10964  00347A  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10965  00347C  0BEF               	andlw	-17
 10966  00347E  1804               	xorwf	??_Lcd_Cmd^0,w,c
 10967  003480  6E8C               	movwf	140,c	;volatile
 10968  003482                     
 10969                           ;flex_lcd.c: 190:     _delay(10);
 10970  003482  0E03               	movlw	3
 10971  003484                     u6477:
 10972  003484  2EE8               	decfsz	wreg,f,c
 10973  003486  D7FE               	bra	u6477
 10974  003488  F000               	nop	
 10975  00348A                     
 10976                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
 10977  00348A  868C               	bsf	140,3,c	;volatile
 10978  00348C                     
 10979                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
 10980  00348C  0E05               	movlw	5
 10981  00348E                     u6487:
 10982  00348E  2EE8               	decfsz	wreg,f,c
 10983  003490  D7FE               	bra	u6487
 10984  003492                     
 10985                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
 10986  003492  968C               	bcf	140,3,c	;volatile
 10987  003494                     
 10988                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
 10989  003494  0E16               	movlw	22
 10990  003496  6E04               	movwf	??_Lcd_Cmd^0,c
 10991  003498  0E6C               	movlw	108
 10992  00349A                     u6497:
 10993  00349A  2EE8               	decfsz	wreg,f,c
 10994  00349C  D7FE               	bra	u6497
 10995  00349E  2E04               	decfsz	??_Lcd_Cmd^0,f,c
 10996  0034A0  D7FC               	bra	u6497
 10997  0034A2  D000               	nop2	
 10998  0034A4  0012               	return		;funcret
 10999  0034A6                     __end_of_Lcd_Cmd:
 11000                           	callstack 0
 11001                           
 11002 ;; *************** function _appISRConfig *****************
 11003 ;; Defined at:
 11004 ;;		line 33 in file "app.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;		None
 11007 ;; Auto vars:     Size  Location     Type
 11008 ;;		None
 11009 ;; Return value:  Size  Location     Type
 11010 ;;                  1    wreg      void 
 11011 ;; Registers used:
 11012 ;;		None
 11013 ;; Tracked objects:
 11014 ;;		On entry : 0/0
 11015 ;;		On exit  : 0/0
 11016 ;;		Unchanged: 0/0
 11017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11018 ;;      Params:         0       0       0       0       0       0       0       0       0
 11019 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11020 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11021 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11022 ;;Total ram usage:        0 bytes
 11023 ;; Hardware stack levels used:    1
 11024 ;; Hardware stack levels required when called:    2
 11025 ;; This function calls:
 11026 ;;		Nothing
 11027 ;; This function is called by:
 11028 ;;		_appInit
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           	psect	text49
 11033  0045AC                     __ptext49:
 11034                           	callstack 0
 11035  0045AC                     _appISRConfig:
 11036                           	callstack 27
 11037  0045AC                     
 11038                           ;app.c: 38:     RCONbits.IPEN = 1;
 11039  0045AC  8ED0               	bsf	208,7,c	;volatile
 11040                           
 11041                           ;app.c: 39:     INTCONbits.GIE_GIEH = 1;
 11042  0045AE  8EF2               	bsf	242,7,c	;volatile
 11043                           
 11044                           ;app.c: 40:     INTCONbits.PEIE_GIEL = 1;
 11045  0045B0  8CF2               	bsf	242,6,c	;volatile
 11046  0045B2  0012               	return		;funcret
 11047  0045B4                     __end_of_appISRConfig:
 11048                           	callstack 0
 11049                           
 11050 ;; *************** function _adcInit *****************
 11051 ;; Defined at:
 11052 ;;		line 9 in file "adc.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;  ADC_PINs        1    wreg     unsigned char 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;  ADC_PINs        1    4[COMRAM] unsigned char 
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      void 
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11066 ;;      Params:         0       0       0       0       0       0       0       0       0
 11067 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11068 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11069 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11070 ;;Total ram usage:        2 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:    2
 11073 ;; This function calls:
 11074 ;;		Nothing
 11075 ;; This function is called by:
 11076 ;;		_appInit
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text50
 11081  0042E8                     __ptext50:
 11082                           	callstack 0
 11083  0042E8                     _adcInit:
 11084                           	callstack 27
 11085                           
 11086                           ;incstack = 0
 11087                           ;adcInit@ADC_PINs stored from wreg
 11088  0042E8  6E05               	movwf	adcInit@ADC_PINs^0,c
 11089  0042EA                     
 11090                           ;adc.c: 9: void adcInit(uint8_t ADC_PINs);adc.c: 10: {;adc.c: 12:     if(ADC_PINs == 0)
 11091  0042EA  5005               	movf	adcInit@ADC_PINs^0,w,c
 11092  0042EC  A4D8               	btfss	status,2,c
 11093  0042EE  EF7B  F021         	goto	u5901
 11094  0042F2  EF7D  F021         	goto	u5900
 11095  0042F6                     u5901:
 11096  0042F6  EF83  F021         	goto	l4848
 11097  0042FA                     u5900:
 11098  0042FA                     
 11099                           ;adc.c: 13:     {;adc.c: 14:         ADCON1bits.PCFG = 0b1110;
 11100  0042FA  50C1               	movf	193,w,c	;volatile
 11101  0042FC  0BF0               	andlw	-16
 11102  0042FE  090E               	iorlw	14
 11103  004300  6EC1               	movwf	193,c	;volatile
 11104                           
 11105                           ;adc.c: 15:     }
 11106  004302  EF8B  F021         	goto	l4850
 11107  004306                     l4848:
 11108                           
 11109                           ;adc.c: 17:     {;adc.c: 18:         ADCON1bits.PCFG = 15 - ADC_PINs;
 11110  004306  5005               	movf	adcInit@ADC_PINs^0,w,c
 11111  004308  080F               	sublw	15
 11112  00430A  6E04               	movwf	??_adcInit^0,c
 11113  00430C  50C1               	movf	193,w,c	;volatile
 11114  00430E  1804               	xorwf	??_adcInit^0,w,c
 11115  004310  0BF0               	andlw	-16
 11116  004312  1804               	xorwf	??_adcInit^0,w,c
 11117  004314  6EC1               	movwf	193,c	;volatile
 11118  004316                     l4850:
 11119                           
 11120                           ;adc.c: 24:     ADCON1bits.VCFG = 0b00;
 11121  004316  0ECF               	movlw	-49
 11122  004318  16C1               	andwf	193,f,c	;volatile
 11123  00431A                     
 11124                           ;adc.c: 29:     ADCON2bits.ACQT = 0b010;
 11125  00431A  50C0               	movf	192,w,c	;volatile
 11126  00431C  0BC7               	andlw	-57
 11127  00431E  0910               	iorlw	16
 11128  004320  6EC0               	movwf	192,c	;volatile
 11129  004322                     
 11130                           ;adc.c: 34:     ADCON2bits.ADCS = 3;
 11131  004322  50C0               	movf	192,w,c	;volatile
 11132  004324  0BF8               	andlw	-8
 11133  004326  0903               	iorlw	3
 11134  004328  6EC0               	movwf	192,c	;volatile
 11135  00432A                     
 11136                           ;adc.c: 37:     ADCON2bits.ADFM = 1;
 11137  00432A  8EC0               	bsf	192,7,c	;volatile
 11138  00432C                     
 11139                           ;adc.c: 38:     ADCON0bits.ADON = 1;
 11140  00432C  80C2               	bsf	194,0,c	;volatile
 11141  00432E  0012               	return		;funcret
 11142  004330                     __end_of_adcInit:
 11143                           	callstack 0
 11144                           
 11145 ;; *************** function _isrL *****************
 11146 ;; Defined at:
 11147 ;;		line 27 in file "main.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;		None
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;		None
 11152 ;; Return value:  Size  Location     Type
 11153 ;;                  1    wreg      void 
 11154 ;; Registers used:
 11155 ;;		wreg, status,2, status,0
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11161 ;;      Params:         0       0       0       0       0       0       0       0       0
 11162 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11163 ;;      Temps:          3       0       0       0       0       0       0       0       0
 11164 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11165 ;;Total ram usage:        3 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; Hardware stack levels required when called:    1
 11168 ;; This function calls:
 11169 ;;		Nothing
 11170 ;; This function is called by:
 11171 ;;		Interrupt level 1
 11172 ;; This function uses a non-reentrant model
 11173 ;;
 11174                           
 11175                           	psect	intcodelo
 11176  000018                     __pintcodelo:
 11177                           	callstack 0
 11178  000018                     _isrL:
 11179                           	callstack 19
 11180                           
 11181                           ;incstack = 0
 11182  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 11183  00001A  CFD8 F001          	movff	status,??_isrL
 11184  00001E  CFE8 F002          	movff	wreg,??_isrL+1
 11185  000022  CFE0 F003          	movff	bsr,??_isrL+2
 11186  000026                     
 11187                           ;main.c: 29:     if(TMR3IE && TMR3IF)
 11188  000026  A2A0               	btfss	4000,1,c	;volatile
 11189  000028  EF18  F000         	goto	i1u626_21
 11190  00002C  EF1A  F000         	goto	i1u626_20
 11191  000030                     i1u626_21:
 11192  000030  EF37  F000         	goto	i1l72
 11193  000034                     i1u626_20:
 11194  000034  A2A1               	btfss	4001,1,c	;volatile
 11195  000036  EF1F  F000         	goto	i1u627_21
 11196  00003A  EF21  F000         	goto	i1u627_20
 11197  00003E                     i1u627_21:
 11198  00003E  EF37  F000         	goto	i1l72
 11199  000042                     i1u627_20:
 11200  000042                     
 11201                           ;main.c: 30:     {;main.c: 31:         TMR3IF = 0;
 11202  000042  92A1               	bcf	4001,1,c	;volatile
 11203  000044                     
 11204                           ;main.c: 33:         datos.counter++;
 11205  000044  0101               	movlb	1	; () banked
 11206  000046  2B59               	incf	_datos& (0+255),f,b
 11207  000048                     
 11208                           ; BSR set to: 1
 11209                           ;main.c: 34:         if(datos.counter == 10)
 11210  000048  0E0A               	movlw	10
 11211  00004A  1959               	xorwf	_datos& (0+255),w,b
 11212  00004C  A4D8               	btfss	status,2,c
 11213  00004E  EF2B  F000         	goto	i1u628_21
 11214  000052  EF2D  F000         	goto	i1u628_20
 11215  000056                     i1u628_21:
 11216  000056  EF33  F000         	goto	i1l5282
 11217  00005A                     i1u628_20:
 11218  00005A                     
 11219                           ; BSR set to: 1
 11220                           ;main.c: 35:         {;main.c: 36:             datos.counter = 0;
 11221  00005A  0E00               	movlw	0
 11222  00005C  6F59               	movwf	_datos& (0+255),b
 11223  00005E                     
 11224                           ; BSR set to: 1
 11225                           ;main.c: 37:             datos.nextFunc = appStateRecolectData;
 11226  00005E  0E3A               	movlw	low _appStateRecolectData
 11227  000060  6F6E               	movwf	(_datos+21)& (0+255),b
 11228  000062  0E45               	movlw	high _appStateRecolectData
 11229  000064  6F6F               	movwf	(_datos+22)& (0+255),b
 11230  000066                     i1l5282:
 11231                           
 11232                           ; BSR set to: 1
 11233                           ;main.c: 39:         TMR3 = 20536;
 11234  000066  0E50               	movlw	80
 11235  000068  6EB3               	movwf	179,c	;volatile
 11236  00006A  0E38               	movlw	56
 11237  00006C  6EB2               	movwf	178,c	;volatile
 11238  00006E                     i1l72:
 11239  00006E  C003  FFE0         	movff	??_isrL+2,bsr
 11240  000072  C002  FFE8         	movff	??_isrL+1,wreg
 11241  000076  C001  FFD8         	movff	??_isrL,status
 11242  00007A  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 11243  00007C  0010               	retfie	
 11244  00007E                     __end_of_isrL:
 11245                           	callstack 0
 11246                           
 11247 ;; *************** function _isrH *****************
 11248 ;; Defined at:
 11249 ;;		line 42 in file "main.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;		None
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;		None
 11254 ;; Return value:  Size  Location     Type
 11255 ;;                  1    wreg      void 
 11256 ;; Registers used:
 11257 ;;		None
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11263 ;;      Params:         0       0       0       0       0       0       0       0       0
 11264 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11265 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11266 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11267 ;;Total ram usage:        0 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		Interrupt level 2
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	intcode
 11277  000008                     __pintcode:
 11278                           	callstack 0
 11279  000008                     _isrH:
 11280                           	callstack 19
 11281                           
 11282                           ;incstack = 0
 11283  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11284  00000A  EDDA  F022         	call	int_func,f	;refresh shadow registers
 11285  00000E                     
 11286                           	psect	intcode_body
 11287  0045B4                     __pintcode_body:
 11288                           	callstack 19
 11289  0045B4                     int_func:
 11290                           	callstack 19
 11291  0045B4  0006               	pop		; remove dummy address from shadow register refresh
 11292  0045B6  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11293  0045B8  0011               	retfie		f
 11294  0045BA                     __end_of_isrH:
 11295                           	callstack 0
 11296                           
 11297                           	psect	rparam
 11298  0000                     
 11299                           	psect	temp
 11300  00005C                     btemp:
 11301                           	callstack 0
 11302  00005C                     	ds	1
 11303  0000                     int$flags	set	btemp
 11304  0000                     wtemp8	set	btemp+1
 11305  0000                     ttemp5	set	btemp+1
 11306  0000                     ttemp6	set	btemp+4
 11307  0000                     ttemp7	set	btemp+8
 11308                           
 11309                           	psect	idloc
 11310                           
 11311                           ;Config register IDLOC0 @ 0x200000
 11312                           ;	unspecified, using default values
 11313  200000                     	org	2097152
 11314  200000  FF                 	db	255
 11315                           
 11316                           ;Config register IDLOC1 @ 0x200001
 11317                           ;	unspecified, using default values
 11318  200001                     	org	2097153
 11319  200001  FF                 	db	255
 11320                           
 11321                           ;Config register IDLOC2 @ 0x200002
 11322                           ;	unspecified, using default values
 11323  200002                     	org	2097154
 11324  200002  FF                 	db	255
 11325                           
 11326                           ;Config register IDLOC3 @ 0x200003
 11327                           ;	unspecified, using default values
 11328  200003                     	org	2097155
 11329  200003  FF                 	db	255
 11330                           
 11331                           ;Config register IDLOC4 @ 0x200004
 11332                           ;	unspecified, using default values
 11333  200004                     	org	2097156
 11334  200004  FF                 	db	255
 11335                           
 11336                           ;Config register IDLOC5 @ 0x200005
 11337                           ;	unspecified, using default values
 11338  200005                     	org	2097157
 11339  200005  FF                 	db	255
 11340                           
 11341                           ;Config register IDLOC6 @ 0x200006
 11342                           ;	unspecified, using default values
 11343  200006                     	org	2097158
 11344  200006  FF                 	db	255
 11345                           
 11346                           ;Config register IDLOC7 @ 0x200007
 11347                           ;	unspecified, using default values
 11348  200007                     	org	2097159
 11349  200007  FF                 	db	255
 11350                           
 11351                           	psect	config
 11352                           
 11353                           ;Config register CONFIG1L @ 0x300000
 11354                           ;	PLL Prescaler Selection bits
 11355                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 11356                           ;	System Clock Postscaler Selection bits
 11357                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 11358                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 11359                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 11360  300000                     	org	3145728
 11361  300000  00                 	db	0
 11362                           
 11363                           ;Config register CONFIG1H @ 0x300001
 11364                           ;	Oscillator Selection bits
 11365                           ;	FOSC = HS, HS oscillator (HS)
 11366                           ;	Fail-Safe Clock Monitor Enable bit
 11367                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11368                           ;	Internal/External Oscillator Switchover bit
 11369                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11370  300001                     	org	3145729
 11371  300001  0C                 	db	12
 11372                           
 11373                           ;Config register CONFIG2L @ 0x300002
 11374                           ;	Power-up Timer Enable bit
 11375                           ;	PWRT = OFF, PWRT disabled
 11376                           ;	Brown-out Reset Enable bits
 11377                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 11378                           ;	Brown-out Reset Voltage bits
 11379                           ;	BORV = 3, Minimum setting 2.05V
 11380                           ;	USB Voltage Regulator Enable bit
 11381                           ;	VREGEN = OFF, USB voltage regulator disabled
 11382  300002                     	org	3145730
 11383  300002  19                 	db	25
 11384                           
 11385                           ;Config register CONFIG2H @ 0x300003
 11386                           ;	Watchdog Timer Enable bit
 11387                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11388                           ;	Watchdog Timer Postscale Select bits
 11389                           ;	WDTPS = 32768, 1:32768
 11390  300003                     	org	3145731
 11391  300003  1E                 	db	30
 11392                           
 11393                           ; Padding undefined space
 11394  300004                     	org	3145732
 11395  300004  FF                 	db	255
 11396                           
 11397                           ;Config register CONFIG3H @ 0x300005
 11398                           ;	CCP2 MUX bit
 11399                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 11400                           ;	PORTB A/D Enable bit
 11401                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11402                           ;	Low-Power Timer 1 Oscillator Enable bit
 11403                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11404                           ;	MCLR Pin Enable bit
 11405                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11406  300005                     	org	3145733
 11407  300005  81                 	db	129
 11408                           
 11409                           ;Config register CONFIG4L @ 0x300006
 11410                           ;	Stack Full/Underflow Reset Enable bit
 11411                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11412                           ;	Single-Supply ICSP Enable bit
 11413                           ;	LVP = OFF, Single-Supply ICSP disabled
 11414                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 11415                           ;	ICPRT = OFF, ICPORT disabled
 11416                           ;	Extended Instruction Set Enable bit
 11417                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11418                           ;	Background Debugger Enable bit
 11419                           ;	DEBUG = 0x1, unprogrammed default
 11420  300006                     	org	3145734
 11421  300006  81                 	db	129
 11422                           
 11423                           ; Padding undefined space
 11424  300007                     	org	3145735
 11425  300007  FF                 	db	255
 11426                           
 11427                           ;Config register CONFIG5L @ 0x300008
 11428                           ;	Code Protection bit
 11429                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 11430                           ;	Code Protection bit
 11431                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 11432                           ;	Code Protection bit
 11433                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 11434                           ;	Code Protection bit
 11435                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 11436  300008                     	org	3145736
 11437  300008  0F                 	db	15
 11438                           
 11439                           ;Config register CONFIG5H @ 0x300009
 11440                           ;	Boot Block Code Protection bit
 11441                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 11442                           ;	Data EEPROM Code Protection bit
 11443                           ;	CPD = OFF, Data EEPROM is not code-protected
 11444  300009                     	org	3145737
 11445  300009  C0                 	db	192
 11446                           
 11447                           ;Config register CONFIG6L @ 0x30000A
 11448                           ;	Write Protection bit
 11449                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 11450                           ;	Write Protection bit
 11451                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 11452                           ;	Write Protection bit
 11453                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 11454                           ;	Write Protection bit
 11455                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 11456  30000A                     	org	3145738
 11457  30000A  0F                 	db	15
 11458                           
 11459                           ;Config register CONFIG6H @ 0x30000B
 11460                           ;	Configuration Register Write Protection bit
 11461                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 11462                           ;	Boot Block Write Protection bit
 11463                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 11464                           ;	Data EEPROM Write Protection bit
 11465                           ;	WRTD = OFF, Data EEPROM is not write-protected
 11466  30000B                     	org	3145739
 11467  30000B  E0                 	db	224
 11468                           
 11469                           ;Config register CONFIG7L @ 0x30000C
 11470                           ;	Table Read Protection bit
 11471                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11472                           ;	Table Read Protection bit
 11473                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11474                           ;	Table Read Protection bit
 11475                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11476                           ;	Table Read Protection bit
 11477                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11478  30000C                     	org	3145740
 11479  30000C  0F                 	db	15
 11480                           
 11481                           ;Config register CONFIG7H @ 0x30000D
 11482                           ;	Boot Block Table Read Protection bit
 11483                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 11484  30000D                     	org	3145741
 11485  30000D  40                 	db	64
 11486                           tosu	equ	0xFFF
 11487                           tosh	equ	0xFFE
 11488                           tosl	equ	0xFFD
 11489                           stkptr	equ	0xFFC
 11490                           pclatu	equ	0xFFB
 11491                           pclath	equ	0xFFA
 11492                           pcl	equ	0xFF9
 11493                           tblptru	equ	0xFF8
 11494                           tblptrh	equ	0xFF7
 11495                           tblptrl	equ	0xFF6
 11496                           tablat	equ	0xFF5
 11497                           prodh	equ	0xFF4
 11498                           prodl	equ	0xFF3
 11499                           indf0	equ	0xFEF
 11500                           postinc0	equ	0xFEE
 11501                           postdec0	equ	0xFED
 11502                           preinc0	equ	0xFEC
 11503                           plusw0	equ	0xFEB
 11504                           fsr0h	equ	0xFEA
 11505                           fsr0l	equ	0xFE9
 11506                           wreg	equ	0xFE8
 11507                           indf1	equ	0xFE7
 11508                           postinc1	equ	0xFE6
 11509                           postdec1	equ	0xFE5
 11510                           preinc1	equ	0xFE4
 11511                           plusw1	equ	0xFE3
 11512                           fsr1h	equ	0xFE2
 11513                           fsr1l	equ	0xFE1
 11514                           bsr	equ	0xFE0
 11515                           indf2	equ	0xFDF
 11516                           postinc2	equ	0xFDE
 11517                           postdec2	equ	0xFDD
 11518                           preinc2	equ	0xFDC
 11519                           plusw2	equ	0xFDB
 11520                           fsr2h	equ	0xFDA
 11521                           fsr2l	equ	0xFD9
 11522                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        23
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160    126     154
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> appElemts@dataout(BANK0[6]), appBat@dataOut(BANK0[8]), appADC@dataOut(BANK0[9]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_5(CODE[5]), STR_2(CODE[7]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_5(CODE[5]), STR_2(CODE[7]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_5(CODE[5]), STR_2(CODE[7]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_5(CODE[5]), STR_2(CODE[7]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 9
		 -> appElemts@dataout(BANK0[6]), appBat@dataOut(BANK0[8]), appADC@dataOut(BANK0[9]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1487_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 9
		 -> appElemts@dataout(BANK0[6]), appBat@dataOut(BANK0[8]), appADC@dataOut(BANK0[9]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> appElemts@dataout(BANK0[6]), appBat@dataOut(BANK0[8]), appADC@dataOut(BANK0[9]), 

    appElemts@elements	PTR const unsigned char  size(2) Largest target is 23
		 -> datos.elements(BANK1[1]), datos(BANK1[23]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 12
		 -> appElemts@dataout(BANK0[6]), STR_4(CODE[6]), STR_3(CODE[12]), appBat@dataOut(BANK0[8]), 
		 -> appADC@dataOut(BANK0[9]), 

    S207_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appStateRecolectData(), appStateInitial(), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appStateRecolectData(), appStateInitial(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    ___xxtofl->_adcGetValue
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appBat
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  127041
                                            124 BANK0      2     2      0
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0  125213
                             _appADC
                             _appBat
                          _appElemts
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            9     7      2   37562
                                            110 BANK0      9     7      2
                            _Lcd_Out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appBat                                              14    14      0   44071
                                            110 BANK0     14    14      0
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                              13    13      0   43580
                                            110 BANK0     13    13      0
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _adcGetValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   36065
                                             92 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   35195
                                             84 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           48    42      6   34623
                                             85 COMRAM     4     4      0
                                             56 BANK0     28    22      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   23304
                                             73 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             53 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     457
                                             53 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2889
                                             28 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2414
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3112
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     790
                                             28 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2463
                                             28 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1244
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              7 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    1828
                            _adcInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    1784
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Out                                              7     4      3    1293
                                              6 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Chr_CP                                           3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              6 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appInit
     _adcInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
   _appStateInitial *
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
       ___flmul
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                 ___flmul (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
       ___flmul
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                 ___flmul (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                 ___flmul (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7E      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     165      20        0.0%
DATA                 0      0     165       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat May 29 20:09:39 2021

                 ___fldiv@aexp 0035                   ___fldiv@bexp 0034                   ___fldiv@sign 002D  
                           l21 432E                             l24 441E                             l32 3C00  
                           l26 442C                             l27 4434                             l37 35C6  
                 ___awdiv@sign 0009                             bsr 000FE0            ___wmul@multiplicand 0006  
                          l210 45AA                            l132 3A70                            l117 3DA8  
                          l118 3DF4                            l151 34A4                            l119 3E46  
                          l207 459E                            l215 42E6                            l154 4024  
                          l242 4572                            l251 45B2                            l148 337A  
                          l245 455A                            l254 4538                            l248 45BA  
                          l513 3FA0                            l524 37D0                            l381 322C  
                          l519 378A                            l551 36CC                            l368 30C8  
                          l528 44A4                            l485 3CC4                            l912 2DB0  
                          l808 1E60                            l824 4374                            l841 252E  
                          l809 1E4E                            l498 3EF6                            l850 2616  
                          l923 2D48                            l916 2CEC                            l836 270A  
                          l932 4202                            l909 2C54                            l838 256A  
                          l782 1C76                            l847 25B0                            l791 1F46  
                          l783 1C64                            l872 2370                            l784 1C2A  
                          l849 2628                            l875 2202                            l980 3D86  
                          l868 200C                            l885 2332                            l877 227A  
                          l878 2268                            l975 3D0A                            l799 1D90  
                          l978 3D4C                            l986 27AC                            l988 27B4  
              adcInit@ADC_PINs 0005                            _PR2 000FCB                            _abs 43BA  
                          _pad 3CC6                   ___awmod@sign 0009                            tosl 000FFD  
                          wreg 000FE8                   ___flmul@aexp 0015                   ___flmul@bexp 0016  
                 ___flmul@sign 0010                   ___flmul@temp 001B                   ___flmul@prod 0017  
                 ___fltol@exp1 003F                           l1006 29EA                           l1200 2BFC  
                         l1024 1496                           l1113 158A                           l1210 44DC  
                         l1042 0C2A                           l1130 1A86                           l1203 2B40  
                         ?_abs 0016                           l1070 106A                           l1160 43F0  
                         l1224 446C                           l1144 40EC                           l1145 40F4  
                         l1218 4254                           l1250 45BC                           l1138 19CC  
                         l1163 43F8                           l1155 38CE                           l1262 4512  
                         l1191 2F38                           l1239 3B3A                           l1247 43B8  
                         l3200 3A96                           l1256 41B0                           l1281 4154  
                         l1194 2F40                           l3202 3AA0                           l3210 1A88  
                         l4002 3870                           l1266 39A4                           l3204 3ABE  
                         l4100 2882                           l3300 1C44                           l3220 1AC4  
                         l3212 1A94                           l4004 3882                           l4012 4156  
                         l1276 414C                           l4020 412C                           l3206 3AF4  
                         l4110 293E                           l4102 2888                           l3310 1C84  
                         l3302 1C48                           l3230 1AF4                           l3222 1AD4  
                         l3214 1AA2                           l4030 2A62                           l4014 4166  
                         l4022 413E                           l4120 298C                           l4112 2958  
                         l4104 28EC                           l3400 1F1E                           l3320 1CC6  
                         l3312 1C94                           l3304 1C56                           l3240 1B1E  
                         l3232 1B06                           l3224 1AD6                           l3216 1AA4  
                         l4008 38C6                           l4040 2B30                           l4032 2A76  
                         l4016 40F6                           l4200 0A8C                           l4122 299E  
                         l4106 2906                           l4114 2966                           l3402 1F20  
                         l3330 1CF4                           l3322 1CD4                           l3306 1C58  
                         l3242 1B2E                           l3250 1B58                           l3234 1B08  
                         l3218 1AB4                           l3226 1ADE                           l4050 2BEC  
                         l4034 2A84                           l4042 2B64                           l4026 29EC  
                         l4210 0B56                           l4060 4208                           l3500 3154  
                         l3412 4376                           l3420 44DE                           l4124 29AA  
                         l4116 2978                           l4108 2924                           l3404 1F26  
                         l3340 1D60                           l3332 1CFE                           l3324 1CE0  
                         l3316 1CA8                           l3308 1C62                           l3260 1B90  
                         l3252 1B68                           l3244 1B3E                           l3236 1B0E  
                         l3228 1AEE                           l4044 2BA0                           l4028 2A0C  
                         l4300 0FE6                           l4220 0BD8                           l4212 0B8A  
                         l4204 0AC2                           l4140 086E                           l4132 083E  
                         l5100 1578                           l4054 44A6                           l4062 421C  
                         l3510 31D6                           l3502 3168                           l3414 4382  
                         l3422 44EA                           l4126 29B2                           l4118 2986  
                         l4070 270C                           l3406 1F34                           l3342 1D70  
                         l3326 1CE4                           l3318 1CB8                           l3334 1D04  
                         l3270 1BA4                           l3262 1B94                           l3254 1B7A  
                         l3246 1B4E                           l3238 1B1C                           l4046 2BB4  
                         l4038 2AF4                           l3430 4436                           l4310 1056  
                         l4302 101A                           l4222 0BEA                           l4230 0C36  
                         l4214 0B92                           l4206 0AF6                           l4150 08C4  
                         l4142 0892                           l4134 0848                           l5110 15D4  
                         l5102 1598                           l4064 424A                           l3440 2F42  
                         l3504 3176                           l3512 31DC                           l3416 4394  
                         l3424 44EE                           l4128 29C2                           l4080 2786  
                         l4072 272C                           l3600 2558                           l3520 2372  
                         l3408 1F36                           l3360 1DF2                           l3352 1DCA  
                         l3336 1D2A                           l3344 1D80                           l3328 1CF2  
                         l3280 1BB8                           l3272 1BA8                           l3264 1B98  
                         l3256 1B88                           l3248 1B50                           l4048 2BDC  
                         l4400 138C                           l4320 110C                           l4312 1062  
                         l4304 102E                           l4240 0C76                           l4224 0BFC  
                         l4208 0AFC                           l4216 0BC4                           l4160 08F2  
                         l4152 08D6                           l4144 089C                           l4136 0858  
                         l5112 15F8                           l5104 159A                           l3434 4514  
                         l4066 424E                           l4058 4204                           l3450 2F86  
                         l3442 2F46                           l3514 31EC                           l3506 31A4  
                         l3418 4398                           l3426 4506                           l4090 27E2  
                         l4082 27A0                           l4074 2754                           l3610 25A0  
                         l3602 2568                           l3530 23AE                           l3522 237E  
                         l3362 1DFA                           l3354 1DD4                           l3346 1DA6  
                         l3338 1D5E                           l3370 1E1E                           l3290 1BCC  
                         l3282 1BBC                           l3274 1BAC                           l3266 1B9C  
                         l3258 1B8C                           l4410 13D6                           l4402 1392  
                         l4330 1156                           l4322 111E                           l4314 1086  
                         l4306 1032                           l4250 0CD2                           l4242 0CAC  
                         l4226 0C04                           l4218 0BD4                           l4170 0966  
                         l4154 08E2                           l4162 08F8                           l4146 08A4  
                         l4138 0866                           l5130 171E                           l5122 16A8  
                         l5114 1632                           l5106 15BE                           l5210 40AA  
                         l3436 4530                           l3460 2FDC                           l3452 2FA6  
                         l3444 2F54                           l3516 320C                           l3508 31C4  
                         l3196 3A72                           l4092 27EA                           l4084 27BC  
                         l4076 2774                           l3620 25E0                           l3612 25AE  
                         l3604 257A                           l3540 23DE                           l3532 23BE  
                         l3524 238C                           l3700 204C                           l3380 1E70  
                         l3372 1E22                           l3364 1DFE                           l3356 1DE2  
                         l3348 1DB6                           l3292 1BF6                           l3284 1BC0  
                         l3276 1BB0                           l3268 1BA0                           l4420 1406  
                         l4412 13E2                           l4404 13A4                           l4340 118C  
                         l4332 1166                           l4324 112C                           l4316 10EA  
                         l4308 1042                           l4260 0D16                           l4252 0CE4  
                         l4244 0CB4                           l4236 0C48                           l4228 0C1E  
                         l4172 0982                           l4164 091E                           l4180 09CC  
                         l4156 08EA                           l4148 08B6                           l5140 17F0  
                         l5132 172E                           l5116 1652                           l5108 15C6  
                         l5124 16BA                           l5212 40D0                           l5220 41D4  
                         l3470 305E                           l3462 2FF0                           l3454 2FAA  
                         l3446 2F74                           l3198 3A84                           l4094 27F4  
                         l4086 27CE                           l4078 2784                           l3630 2652  
                         l3622 260E                           l3606 2590                           l3614 25C0  
                         l3550 2414                           l3542 23E4                           l3534 23C0  
                         l3526 238E                           l3710 209C                           l3702 2056  
                         l3390 1ED6                           l3382 1E7C                           l3374 1E30  
                         l3366 1E0E                           l3358 1DE4                           l3294 1C12  
                         l3286 1BC4                           l3278 1BB4                           l4430 1460  
                         l4414 13EA                           l4406 13BE                           l4350 11C0  
                         l4342 1190                           l4334 116A                           l4318 10F8  
                         l4326 1134                           l4270 0D60                           l4262 0D2E  
                         l4254 0CF2                           l4238 0C5A                           l4246 0CB8  
                         l4190 0A56                           l4182 09F2                           l4174 099A  
                         l4158 08EE                           l5150 185E                           l5134 1760  
                         l5126 16DC                           l5118 1660                           l5070 14DC  
                         l5206 4094                           l5222 41F0                           l5214 41B2  
                         l5230 3B70                           l4440 2DB2                           l3480 30A8  
                         l3472 3060                           l3464 2FFE                           l3456 2FB6  
                         l3448 2F78                           l4096 27FA                           l4088 27DC  
                         l3800 3C1C                           l3640 26CA                           l3632 267C  
                         l3616 25CE                           l3608 2596                           l3560 2454  
                         l3552 2424                           l3544 23F2                           l3528 239E  
                         l3536 23C8                           l3720 20DE                           l3712 20A8  
                         l3704 206C                           l3392 1EE6                           l3384 1E8A  
                         l3376 1E46                           l3368 1E10                           l3296 1C22  
                         l3288 1BC8                           l4432 1470                           l4424 143A  
                         l4416 13FA                           l4408 13C4                           l4360 125E  
                         l4352 11C4                           l4344 1196                           l4336 1170  
                         l4328 1148                           l4272 0D74                           l4280 0E6A  
                         l4264 0D40                           l4256 0CF6                           l4248 0CC0  
                         l4176 09A4                           l4168 0954                           l5152 188E  
                         l5144 1828                           l5136 1784                           l5128 16EC  
                         l5072 14E0                           l5064 1498                           l5208 409C  
                         l5216 41C4                           l5232 3BC8                           l5240 34DA  
                         l4450 2E20                           l4442 2DC6                           l3474 3072  
                         l3466 3010                           l3458 2FD4                           l3490 30FC  
                         l4098 287C                           l3810 3C42                           l3802 3C20  
                         l3650 2700                           l3642 26E6                           l3626 2638  
                         l3634 2680                           l3618 25D2                           l3562 2464  
                         l3570 2484                           l3554 2426                           l3546 23F4  
                         l3538 23D8                           l3730 2140                           l3722 20EE  
                         l3714 20B6                           l3706 2078                           l3394 1F06  
                         l3386 1EC4                           l3298 1C38                           l4434 1476  
                         l4426 144C                           l4418 1400                           l4370 12BC  
                         l4338 117C                           l4346 119C                           l4354 11CA  
                         l4362 1262                           l4290 0F36                           l4282 0E88  
                         l4274 0DD8                           l4258 0D08                           l4266 0D48  
                         l4186 0A28                           l5162 1956                           l5146 183A  
                         l5138 17A8                           l5090 1512                           l5082 1506  
                         l5074 14EC                           l5066 14BC                           l5218 41CC  
                         l5234 3BEE                           l5226 3B3C                           l5242 3532  
                         l5250 42AC                           l4700 441C                           l4460 2E48  
                         l4452 2E24                           l4444 2DCA                           l3468 303E  
                         l3476 3078                           l3492 3100                           l3484 30CA  
                         l3820 3C78                           l3812 3C54                           l3804 3C2E  
                         l3644 26EA                           l3636 269A                           l3628 2644  
                         l3580 24C2                           l3572 2494                           l3564 246C  
                         l3548 2404                           l3556 242E                           l3900 3758  
                         l3740 21E8                           l3732 215C                           l3724 2108  
                         l3716 20C2                           l3708 2090                           l3660 1F54  
                         l3396 1F0A                           l3388 1EC6                           l4428 1458  
                         l4380 12FA                           l4372 12CC                           l4364 1280  
                         l4356 1222                           l4348 11AE                           l4292 0F46  
                         l4284 0EBC                           l4276 0E30                           l4268 0D50  
                         l4188 0A3A                           l5164 1968                           l5172 19E0  
                         l5148 1850                           l5156 18BA                           l5076 14EE  
                         l5068 14CA                           l5228 3B48                           l5244 3596  
                         l5236 34A6                           l5252 42D4                           l5260 402A  
                         l4462 2E50                           l4446 2DCE                           l3478 3088  
                         l3494 310E                           l3486 30CE                           l3822 3C8E  
                         l3814 3C5C                           l3830 3CA4                           l3806 3C36  
                         l3646 26F8                           l3638 26B0                           l3590 250A  
                         l3582 24D2                           l3574 2494                           l3566 2470  
                         l3558 243E                           l3902 376A                           l3750 2224  
                         l3742 21F2                           l3734 2186                           l3726 2118  
                         l3718 20D2                           l3670 1F94                           l3662 1F62  
                         l3398 1F18                           l4390 1330                           l4382 130A  
                         l4374 12D0                           l4366 129C                           l4358 1256  
                         l4294 0F56                           l4286 0EEE                           l4278 0E64  
                         l4198 0A72                           l5190 1A74                           l5174 1A04  
                         l5182 1A34                           l5166 199C                           l5158 18E8  
                         l5094 1518                           l5086 150C                           l5078 1500  
                         l5246 35B4                           l5238 34B2                           l5254 453A  
                         l5262 402E                           ?_pad 0014                           l4720 39C0  
                         l4800 2C10                           l4472 2EF8                           l4464 2E84  
                         l4456 2E2A                           l4448 2DEA                           l3496 312E  
                         l3488 30DC                           l3832 3CB4                           l3824 3C96  
                         l3816 3C64                           l3808 3C3A                           l3840 3E4C  
                         l3648 26FE                           l3592 251E                           l3584 24E2  
                         l3904 3778                           l3760 2296                           l3752 2232  
                         l3744 2200                           l3736 21BC                           l3728 2134  
                         l3680 1FC4                           l3672 1F9A                           l3664 1F64  
                         l3912 446E                           l3920 35C8                           l4392 133C  
                         l4384 1312                           l4376 12E0                           l4368 12AE  
                         l4296 0F8A                           l4288 0F04                           l5184 1A42  
                         l5176 1A12                           l5248 42A0                           l5256 4550  
                         l5264 4056                           l4650 340A                           l4642 337E  
                         l4730 3A18                           l4722 39CA                           l4714 39A8  
                         l4810 2C8E                           l4802 2C1E                           l4474 2F0A  
                         l4458 2E40                           l3498 314C                           l3834 3CBC  
                         l3826 3C98                           l3818 3C72                           l3850 3E7C  
                         l3842 3E5A                           l3594 252C                           l3586 24F2  
                         l3578 24A8                           l3906 37C8                           l3770 2300  
                         l3762 22A4                           l3754 2260                           l3746 2212  
                         l3738 21CA                           l3690 1FFC                           l3682 1FC6  
                         l3674 1FAA                           l3666 1F74                           l3658 1F48  
                         l3914 4484                           l3930 361E                           l3922 35DE  
                         l4394 1342                           l4386 1320                           l4378 12F2  
                         l4298 0FE0                           l4490 3914                           l4482 38D0  
                         l5178 1A26                           l5098 1524                           l5266 406E  
                         l5258 4026                           l4660 3492                           l4652 3410  
                         l4644 3382                           l4740 3D88                           l4732 3A3C  
                         l4716 39AC                           l4900 4598                           l4820 2CE2  
                         l4812 2C96                           l4804 2C64                           l4476 2F1C  
                         l4468 2EBA                           l3828 3C9E                           l3860 3EC2  
                         l3852 3E8E                           l3844 3E62                           l3596 2538  
                         l3588 24FA                           l3908 37CE                           l3780 2356  
                         l3772 231A                           l3764 22CE                           l3748 2220  
                         l3692 201C                           l3684 1FD6                           l3676 1FB0  
                         l3668 1F84                           l3916 4494                           l3932 362E  
                         l4396 1368                           l4388 1328                           l4492 392C  
                         l4484 38FA                           l5188 1A50                           l4662 3494  
                         l4654 3482                           l4646 3400                           l4750 3DC0  
                         l4742 3D94                           l4670 32CC                           l4734 3A40  
                         l4718 39B6                           l4726 39D4                           l4902 459A  
                         l4830 2D58                           l4822 2D1E                           l4814 2CA2  
                         l4806 2C7A                           l3870 3EEE                           l3862 3ECA  
                         l3854 3E96                           l3846 3E66                           l3838 3E48  
                         l3598 2556                           l3774 2336                           l3782 235C  
                         l3758 228A                           l3766 22D2                           l3694 202C  
                         l3686 1FE6                           l3678 1FB6                           l3790 4340  
                         l3942 3658                           l3934 3632                           l3926 35F2  
                         l4398 1384                           l4494 3948                           l5374 154A  
                         l4656 348A                           l4648 3408                           l4760 3DCE  
                         l4752 3DC6                           l4744 3DA4                           l4680 335C  
                         l4672 32CE                           l4664 3230                           l4728 3A0E  
                         l4904 459C                           l4920 4560                           l4840 2DA0  
                         l4832 2D5C                           l4824 2D2A                           l4816 2CD4  
                         l5376 2E6E                           l3864 3ED0                           l3856 3E9E  
                         l3848 3E74                           l3880 3F64                           l3784 2360  
                         l3776 2346                           l3768 22EC                           l3688 1FF6  
                         l3960 36BC                           l3952 3680                           l3944 3662  
                         l3936 3640                           l3928 361C                           l4496 395A  
                         l4488 3906                           l4850 4316                           l4658 348C  
                         l4770 3E14                           l4762 3DD0                           l4754 3DC8  
                         l4682 3362                           l4674 32D4                           l4666 3234  
                         l5378 39E8                           l4906 45A0                           l4922 4564  
                         l4834 2D80                           l4826 2D38                           l4818 2CD6  
                         l3970 3CF6                           l3794 3C02                           l3858 3EAC  
                         l3866 3ED6                           l3882 3F74                           l3874 3EF8  
                         l3890 36CE                           l3778 2354                           l3698 2040  
                         l3954 368C                           l3946 366C                           l4498 3982  
                         l4852 431A                           l4844 42EA                           l4916 45AC  
                         l4780 3E2E                           l4772 3E16                           l4764 3DE2  
                         l4756 3DCA                           l4684 3364                           l4676 3352  
                         l4668 32C4                           l4908 45A8                           l4924 456A  
                         l4836 2D90                           l4828 2D56                           l3980 3D5A  
                         l3972 3D02                           l3964 3CC6                           l3796 3C06  
                         l3868 3EE6                           l3884 3F98                           l3876 3F26  
                         l3892 36FC                           l3788 4330                           l3956 369C  
                         l4854 4322                           l4846 42FA                           l4790 3E3A  
                         l4782 3E2E                           l4774 3E18                           l4766 3E0C  
                         l4758 3DCC                           l4686 336A                           l4678 335A  
                         l4926 456E                           l4918 455C                           l4838 2D9E  
                         l3982 3D6E                           l3974 3D16                           l3966 3CD4  
                         l3798 3C14                           l3886 3F9E                           l3878 3F36  
                         l3894 370C                           l3958 36AC                           l3990 37D2  
                         l4856 432A                           l4848 4306                           l4792 3E3A  
                         l4784 3E2E                           l4776 3E1A                           l4768 3E12  
                         l4696 43FC                           l3976 3D2A                           l3968 3CE8  
                         l3896 373A                           l3992 37F2                           l4858 432C  
                         l4794 3E40                           l4786 3E34                           l4778 3E1C  
                         l4890 3FEE                           l4882 3FA2                           l4698 440E  
                         l3986 43BA                           l3978 3D2E                           l3898 374A  
                         l3994 3830                           l4796 3E40                           l4788 3E34  
                         l4892 400C                           l4884 3FB2                           l3988 43D4  
                         l3996 3858                           l4886 3FCA                           l4894 458C  
                         l4798 2C00                           l3998 3864                           l4888 3FDC  
                         l4896 4592                           l4898 4596                           STR_1 080D  
                         STR_2 0817                           STR_3 0801                           STR_4 081E  
                         STR_5 0824                           STR_6 0829                           STR_7 0831  
                         u3100 1AB4                           u3101 1AB0                           u3110 1AC4  
                         u3111 1AC0                           u4000 2260                           u3200 1C10  
                         u3120 1B06                           u4001 225C                           u3121 1B02  
                         u3050 3A84                           u4010 2276                           u3210 1C38  
                         u3130 1B1C                           u3051 3A80                           u4011 2272  
                         u3211 1C34                           u3131 1B18                           u3060 3A96  
                         u4100 3C72                           u4020 228A                           u3300 1D70  
                         u3220 1C56                           u3140 1B2E                           u3061 3A92  
                         u4101 3C6E                           u4021 2286                           u3301 1D6C  
                         u3221 1C52                           u3141 1B2A                           u3070 3ABE  
                         u4110 3C8E                           u4030 22A4                           u3310 1DA6  
                         u3230 1C76                           u3150 1B3E                           u3071 3ABA  
                         u4111 3C8A                           u4031 22A0                           u3311 1DA2  
                         u3231 1C72                           u3151 1B3A                           u3080 3AF4  
                         u4120 3CB4                           u4200 3F64                           u4040 22EC  
                         u3400 1E70                           u3320 1DB6                           u3240 1C84  
                         u3160 1B7A                           u5000 0C5A                           u3081 3AF0  
                         u4121 3CB0                           u4201 3F60                           u4041 22E8  
                         u3401 1E6C                           u3321 1DB2                           u3241 1C80  
                         u3161 1B76                           u5001 0C56                           u4130 3E5A  
                         u4210 3F98                           u4050 231A                           u3410 1E8A  
                         u3330 1DE2                           u3250 1C94                           u3170 1B88  
                         u3090 1AA2                           u5010 0C76                           u4131 3E56  
                         u4211 3F94                           u4051 2316                           u3411 1E86  
                         u3331 1DDE                           u3251 1C90                           u3171 1B84  
                         u3091 1A9E                           u5011 0C72                           u4140 3E74  
                         u4220 36FC                           u4060 2354                           u3420 1EC4  
                         u3340 1DF2                           u3260 1CC6                           u3180 1BF6  
                         u4300 3640                           u3500 4466                           u5100 0EEE  
                         u5020 0CAC                           u4141 3E70                           u4221 36F8  
                         u4061 2350                           u3421 1EC0                           u3341 1DEE  
                         u3261 1CC2                           u3181 1BF2                           u4301 363C  
                         u3501 4460                           u5101 0EEA                           u5021 0CA8  
                         u4070 3C14                           u4150 3E8E                           u4230 373A  
                         u3430 1ED6                           u3350 1E0E                           u3270 1CD4  
                         u3190 1C0E                           u4310 3654                           u3510 4468  
                         u5110 0F36                           u5030 0CD2                           u4071 3C10  
                         u4151 3E8A                           u4231 3736                           u3431 1ED2  
                         u3351 1E0A                           u3271 1CD0                           u3191 1C08  
                         u4311 3650                           u5111 0F32                           u5031 0CCE  
                         u3520 2F54                           u3600 310E                           u4080 3C2E  
                         u4160 3EAC                           u4240 3758                           u3440 1EE6  
                         u3360 1E1E                           u3280 1CF2                           u4320 367C  
                         u4400 3812                           u5200 1148                           u5120 0F46  
                         u5040 0CE4                           u3521 2F50                           u3601 310A  
                         u4081 3C2A                           u4161 3EA8                           u4241 3754  
                         u3441 1EE2                           u3361 1E1A                           u3281 1CEE  
                         u4321 3678                           u5201 1144                           u5121 0F42  
                         u5041 0CE0                           u3530 2F86                           u3610 314C  
                         u4090 3C54                           u4170 3EC2                           u4250 3778  
                         u3450 1F06                           u3370 1E30                           u3290 1D2A  
                         u4330 369C                           u4410 3830                           u5210 1156  
                         u5130 0FE0                           u5050 0CF2                           u6010 14BC  
                         u3531 2F82                           u3611 3148                           u4091 3C50  
                         u4171 3EBE                           u4251 3774                           u3451 1F02  
                         u3371 1E2C                           u3291 1D26                           u4331 3698  
                         u4411 382C                           u5211 1152                           u5131 0FDC  
                         u5051 0CEE                           u6011 14B8                           u3620 3176  
                         u4180 3EE6                           u3700 2414                           u4260 37C8  
                         u3460 1F18                           u3380 1E46                           u4340 36AC  
                         u4420 3858                           u4500 4128                           u5300 13BE  
                         u5220 11AE                           u5140 102E                           u5060 0D08  
                         u6100 172E                           u6020 158A                           u3541 2FB0  
                         u3621 3172                           u4181 3EE2                           u3701 2410  
                         u4261 37C4                           u3461 1F14                           u3381 1E42  
                         u4341 36A8                           u4421 3854                           u4405 3808  
                         u5301 13BA                           u5221 11AA                           u5141 102A  
                         u5061 0D04                           u6101 172A                           u6021 1586  
                         u3550 2FD4                           u3630 31A4                           u4350 3CD4  
                         u3710 2454                           u4190 3F26                           u4270 4484  
                         u3470 1F34                           u3390 1E5C                           u4430 3882  
                         u4510 413E                           u5310 13D6                           u5230 1280  
                         u5150 1056                           u5070 0D16                           u6110 1784  
                         u6030 1598                           u3551 2FD0                           u3631 31A0  
                         u4351 3CD0                           u3711 2450                           u4191 3F22  
                         u4271 4480                           u3471 1F30                           u3391 1E58  
                         u4431 387E                           u4511 413A                           u5311 13D2  
                         u5231 127C                           u5151 1052                           u5071 0D12  
                         u6111 1780                           u6031 1594                           u5400 2F0A  
                         u3560 2FFE                           u3640 31EC                           u3480 43B8  
                         u4360 3CF6                           u3800 25E0                           u3720 2494  
                         u4280 35DE                           u4600 2BA0                           u4520 2A34  
                         u5320 1434                           u5240 129C                           u5160 10F8  
                         u5080 0D40                           u6120 17A8                           u6040 15BE  
                         u5401 2F06                           u3561 2FFA                           u3641 31E8  
                         u3481 43B4                           u4361 3CF2                           u3801 25DC  
                         u3721 2490                           u4281 35DA                           u4601 2B9C  
                         u5321 142E                           u5241 1298                           u5161 10F4  
                         u5081 0D3C                           u6121 17A4                           u6041 15BA  
                         u6201 3B42                           u5410 2F1C                           u3570 303E  
                         u3490 4506                           u4370 3D4C                           u3810 260E  
                         u3730 250A                           u3650 238C                           u4290 3612  
                         u4450 38BC                           u4610 2BDC                           u4530 2A62  
                         u5330 1436                           u5250 12AE                           u5170 110C  
                         u5090 0E88                           u6130 183A                           u6050 15F8  
                         u5411 2F18                           u3571 303A                           u3491 4502  
                         u4371 3D48                           u3811 260A                           u3731 2506  
                         u3651 2388                           u4451 38B6                           u4611 2BD8  
                         u4531 2A5E                           u5251 12AA                           u5171 1108  
                         u5091 0E84                           u6131 1836                           u6051 15F4  
                         u6211 34AC                           u4620 44D6                           u3580 3088  
                         u4380 3D5A                           u4700 27A0                           u3820 2624  
                         u3740 252C                           u3660 239E                           u3900 1F84  
                         u4460 38BE                           u4540 2A84                           u5340 144C  
                         u5260 12BC                           u5180 111E                           u5420 38FA  
                         u6140 18E8                           u6060 16A0                           u4621 44D0  
                         u3581 3084                           u4381 3D56                           u4701 279C  
                         u3821 2620                           u3741 2528                           u3661 239A  
                         u3901 1F80                           u4445 3894                           u4541 2A80  
                         u4525 2A2A                           u5341 1448                           u5261 12B8  
                         u5181 111A                           u5421 38F6                           u6141 18E4  
                         u6061 169A                           u6221 42A6                           u4630 44D8  
                         u5350 2DEA                           u3590 30DC                           u4390 43D4  
                         u4710 27CE                           u3830 2638                           u3750 2556  
                         u3670 23AE                           u3910 1FC4                           u4470 419E  
                         u5270 12F2                           u5190 112C                           u5430 392C  
                         u6150 194E                           u6070 16A2                           u6230 4042  
                         u5351 2DE6                           u3591 30D8                           u4391 43D0  
                         u4711 27CA                           u3831 2634                           u3751 2552  
                         u3671 23AA                           u3911 1FC0                           u4295 3608  
                         u5271 12EE                           u5191 1128                           u5431 3928  
                         u6151 1948                           u6231 4038                           u4640 421C  
                         u5360 2E20                           u4800 299E                           u4720 27DC  
                         u3840 2652                           u3760 257A                           u3680 23F2  
                         u3920 1FD6                           u4560 2AF0                           u4480 41B0  
                         u5280 1320                           u5440 3948                           u6160 1950  
                         u6080 16BA                           u4641 4218                           u5361 2E1C  
                         u4801 299A                           u4721 27D8                           u3841 264E  
                         u3761 2576                           u3681 23EE                           u3921 1FD2  
                         u4561 2AEC                           u4481 41AC                           u5281 131C  
                         u5441 3944                           u6081 16B6                           u4650 424A  
                         u5370 2E3C                           u4730 2906                           u3850 269A  
                         u3770 2590                           u3690 2404                           u3930 1FE6  
                         u4570 2B14                           u4490 4126                           u5290 13A4  
                         u4810 0866                           u5450 395A                           u6170 1968  
                         u6090 16EC                           u6307 4414                           u4651 4246  
                         u5371 2E38                           u4731 2902                           u3851 2696  
                         u3771 258C                           u3691 2400                           u3931 1FE2  
                         u4555 2A98                           u4491 4120                           u5291 13A0  
                         u4811 0862                           u5451 3956                           u6171 1964  
                         u6091 16E8                           u5380 2EF2                           u4740 2924  
                         u4660 273C                           u3860 26CA                           u3780 25AE  
                         u3940 201C                           u4580 2B30                           u4556 2AA2  
                         u4900 0A20                           u4820 08B6                           u5460 3982  
                         u6180 1A04                           u6317 3FBC                           u5381 2EEC  
                         u4741 2920                           u4661 2736                           u3861 26C6  
                         u3781 25AA                           u3941 2018                           u4581 2B2C  
                         u4557 2AB2                           u4477 4194                           u4901 0A1A  
                         u4821 08B2                           u5461 397E                           u6181 1A00  
                         u5390 2EF4                           u4750 293E                           u4670 273E  
                         u3870 26F8                           u3790 25CE                           u3950 202C  
                         u4590 2B84                           u4910 0A22                           u4830 08C4  
                         u6190 40EC                           u6407 3D9A                           u6327 3FF8  
                         u4751 293A                           u3871 26F4                           u3791 25CA  
                         u3951 2028                           u4575 2B0A                           u4831 08C0  
                         u6191 40E8                           i1l72 006E                           u5800 2C10  
                         u4760 2958                           u4680 2754                           u3960 21A6  
                         u3880 1F62                           u4920 0A3A                           u4840 08D6  
                         u6248 4046                           u6417 3DC2                           u5705 3286  
                         u6337 4016                           u5801 2C0C                           u4761 2954  
                         u4681 2750                           u3881 1F5E                           u4921 0A36  
                         u4841 08D2                           u5810 2C1E                           u4770 2966  
                         u4690 2784                           u3970 2200                           u3890 1F74  
                         u4930 0ABE                           u4850 091E                           u6258 4078  
                         u6427 3DD8                           u6347 32C6                           u5715 32AA  
                         u5811 2C1A                           u4771 2962                           u4691 2780  
                         u3971 21FC                           u3891 1F70                           u4595 2B7A  
                         u4931 0ABA                           u4851 091A                           u6259 408C  
                         u5900 42FA                           u5820 2C7A                           u4780 2978  
                         u3980 2220                           u4940 0B52                           u4860 094C  
                         u5901 42F6                           u6437 3E0E                           u5725 32DE  
                         u6357 32D0                           u5821 2C76                           u4781 2974  
                         u3981 221C                           u3965 219C                           u4941 0B4E  
                         u4861 0946                           u5830 2CD0                           u5750 442C  
                         u4790 2986                           u3990 2232                           u4950 0BC4  
                         u4870 094E                           u5655 338A                           u6447 3E24  
                         u6367 3354                           u5735 3322                           u5831 2CCC  
                         u5751 4428                           u4791 2982                           u3991 222E  
                         u4951 0BC0                           u5760 3A38                           u5840 2D1A  
                         u4960 0BEA                           u4880 0966                           u6457 3402  
                         u5665 33A4                           u6377 335E                           u5841 2D16  
                         u4961 0BE6                           u4881 0962                           u6297 4062  
                         u5770 3A60                           u5850 2D38                           u4970 0BFC  
                         u4890 09F2                           u6467 340C                           u5675 33CA  
                         u6387 3366                           u5851 2D34                           u4971 0BF8  
                         u4891 09EE                           u5780 3A70                           u5860 2D48  
                         u4980 0C1E                           i2l77 45B6                           u6477 3484  
                         u6397 3370                           u5685 323C                           u5781 3A6C  
                         u5861 2D44                           u4981 0C1A                           u5790 3DF4  
                         u5870 2D56                           u4990 0C44                           u6487 348E  
                         u5791 3DF0                           u5695 3260                           u5767 3A2E  
                         u5871 2D52                           u4991 0C40                           u5880 2D90  
                         u6497 349A                           u5777 3A56                           u5881 2D8C  
                         u5890 2D9E                           u5891 2D9A                           _TMR2 000FCC  
                         _TMR3 000FB2                           abs@a 0016                           _dbuf 0109  
                         _atoi 2DB2                           _main 4026                           _dtoa 270C  
                         _isrH 0008                           _isrL 0018                           _prec 00F8  
                         _nout 00F4                           pad@i 001B                           pad@p 0018  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001D  
                         fsr2l 000FD9                           btemp 005C                  ___fpclassifyf 37D2  
                         prodh 000FF4                           prodl 000FF3                           start 007E  
              ___fldiv@new_exp 002E   __end_of_appStateRecolectData 455C                __end_of_Lcd_Cmd 34A6  
                 _tolower$1788 0010                __end_of_Lcd_Out 3A72                   ___param_bank 000000  
                   _Lcd_Chr_CP 322E           __size_of_appLCD_Init 0084                          ??_abs 0018  
                        ??_pad 001A                  ___fltol@sign1 003E                __end_of___aodiv 30CA  
                        ?_atoi 000B                __end_of___fladd 1F48                          ?_main 0001  
                        ?_dtoa 001F                __end_of___aomod 322E                          ?_isrH 0001  
                        ?_isrL 0001                __end_of_adcInit 4330                __end_of___fldiv 270C  
              __end_of___awdiv 3CC6                __end_of___flneg 44A6                          _ADRES 000FC3  
                        STR_10 082D                          STR_11 0835                          STR_14 0839  
                        STR_16 0839                __end_of___awmod 3EF8                __end_of___flmul 2372  
              __end_of___flsub 4376                __end_of___fltol 36CE                ___awdiv@divisor 0006  
      __end_of_appStateInitial 45BC                ___awdiv@counter 0008                   vfpfcnvrt@fmt 009A  
                        _PORTB 000F81                __end_of_appInit 4574                          _datos 0159  
                        _flags 005A                          _fputc 3A72                          _fputs 4376  
              __end_of_isdigit 44DE                          atoi@n 0018                          pad@fp 0014  
                        atoi@s 000B                          _width 00F6                          _putch 45BC  
                        dtoa@d 0021                          dtoa@i 0041                          dtoa@n 0039  
                        dtoa@p 0033                          dtoa@s 0037                          dtoa@w 0035  
              __end_of_isspace 4256                __end_of_isupper 446E                          pclath 000FFA  
                        tablat 000FF5                          ttemp5 005D                          ttemp6 0060  
                        ttemp7 0064                          status 000FD8                          wtemp8 005D  
              __end_of_sprintf 4204                 ?___fpclassifyf 0004                __end_of_tolower 4156  
              __end_of_strncmp 39A6           __end_of_appTimerInit 45A0               __end_of_Lcd_Init 3E48  
              __initialization 4256                   __end_of_atoi 2F42                   __end_of_main 4094  
                 __end_of_dtoa 29EC                   __end_of_isrH 45BA                   __end_of_isrL 007E  
                       ??_atoi 000D                         ??_main 00DC                         ??_dtoa 0029  
                       ??_isrH 0001                         ??_isrL 0001                  __activetblptr 000002  
                       ?_fputc 0004                         ?_fputs 000D               ___awdiv@dividend 0004  
        __size_of_appISRConfig 0008                         ?_putch 0001                         i1l5270 0034  
                       i1l5280 005E                         i1l5272 0042                         i1l5282 0066  
                       i1l5274 0044                         i1l5276 0048                         i1l5268 0026  
                       i1l5278 005A                      ??_Lcd_Cmd 0004                  vfpfcnvrt@done 00A6  
                       _TMR3IE 007D01                         _TMR3IF 007D09                      ??_Lcd_Out 000A  
             __end_of___xxtofl 2DB2                   vfprintf@cfmt 00BA                         ___flge 36CE  
                       ___fleq 3EF8                    ?_Lcd_Chr_CP 0001                         _appADC 3B3C  
                    ??___aodiv 0014                      ??___fladd 000C                      ??___aomod 0014  
                       ___wmul 4514                      ??_adcInit 0004                      ??___fldiv 0025  
                    ??___awdiv 0008                      ??___flneg 0008                      ??___awmod 0008  
                    ??___flmul 000C                         _appBat 34A6                      ??___flsub 0025  
                    ??___fltol 003A                         _efgtoa 083E                         _floorf 29EC  
                       clear_0 427C                         clear_1 4288               ___awdiv@quotient 000A  
              ___awmod@divisor 0006                      ??_appInit 0010                ___awmod@counter 0008  
                       pad@buf 0016                         dtoa@fp 001F                         _strcpy 4156  
                       _strlen 44DE                   _appISRConfig 45AC                         fputc@c 0004  
             ?_appStateInitial 0001                         fputs@c 0011                         fputs@i 0012  
                       fputs@s 000D                      ??_isdigit 0006                ___fpclassifyf@e 000C  
              ___fpclassifyf@u 000E                ___fpclassifyf@x 0004                   __mediumconst 0000  
                    ??_isspace 0006                         tblptrh 000FF7                      ??_isupper 0006  
                       tblptrl 000FF6                         tblptru 000FF8           _appStateRecolectData 453A  
            adcGetValue@PinADC 0007                         putch@c 0001               __end_of_vfprintf 40F6  
                    ??_sprintf 005A                      ??_tolower 000C                      ??_strncmp 000A  
                   ___flge@ff1 001D                     ___flge@ff2 0021                ??___fpclassifyf 0008  
                 ___xxtofl@arg 0012                   ___xxtofl@exp 0011                   ___xxtofl@val 0008  
                   ___fleq@ff1 0004                     ___fleq@ff2 0008                     __accesstop 0060  
      __end_of__initialization 4292                     ___flneg@f1 0004          __end_of_appTimerStart 45AC  
                ___rparam_used 000001                     ___fltol@f1 0036                 __pcstackCOMRAM 0001  
                 __pidataBANK1 4574                  __end_of_fputc 3B3C                  __end_of_fputs 43BA  
                __end_of_putch 45BE             __size_of_appElemts 0048                  appBat@dataOut 00CE  
                ??_adcGetValue 0006          ?_appStateRecolectData 0001                      ?_Lcd_Init 0001  
                      ??_fputc 0008                        ??_fputs 0011            __size_of_Lcd_Chr_CP 014E  
                      ??_putch 0004          __size_of_appTimerInit 0014                     __pbssBANK0 00DE  
                   __pbssBANK1 0100                        ?___flge 001D                        ?___fleq 0004  
                      ?_appADC 0001                        ?___wmul 0004                        ?_appBat 0001  
                      ?_efgtoa 004A                        ?_floorf 0036                        ?_strcpy 0004  
                      ?_strlen 0004                   _appTimerInit 458C                      ?___xxtofl 0008  
           __size_of_vfpfcnvrt 05F0                     ??_Lcd_Init 0007            __end_of_adcGetValue 4436  
            __end_of_appElemts 42E8                        _Lcd_Cmd 337C                        _Lcd_Out 39A6  
                ??_appLCD_Init 000E                        __Hparam 0000                        __Lparam 0000  
              __size_of___flge 0104                __size_of___fleq 00AA                        ___aodiv 2F42  
                      ___fladd 1A88                        ___aomod 30CA                        _adcInit 42E8  
                      ___fldiv 2372                        ___awdiv 3C02                        ___flneg 446E  
                      ___awmod 3E48                        ___flmul 1F48                        ___flsub 4330  
                      ___fltol 35C8                __size_of_appADC 00C6                __size_of___wmul 0026  
              __size_of_appBat 0122                      ?_vfprintf 00B4                   __psmallconst 0800  
              __size_of_efgtoa 0C5A                __size_of_floorf 0212                        __pcinit 4256  
                      _appInit 455C                        __ramtop 0800                        __ptext0 4026  
                      __ptext1 45BA                        __ptext2 453A                        __ptext3 42A0  
                      __ptext4 34A6                        __ptext5 3B3C                        __ptext6 41B2  
                      __ptext7 4094                        __ptext8 1498                        __ptext9 38D0  
              __size_of_strcpy 005C                __size_of_strlen 0036                      _T2CONbits 000FCA  
                 __size_of_abs 0040                   __size_of_pad 00C2         ??_appStateRecolectData 005A  
                      _isdigit 44A6                     ??___xxtofl 000C                      _T3CONbits 000FB1  
             ___awmod@dividend 0004                        _isspace 4204                        _isupper 4436  
                      efgtoa@c 0050                        efgtoa@d 0078                        efgtoa@e 0090  
                      efgtoa@f 004C                        efgtoa@g 008C                        efgtoa@h 0082  
                      efgtoa@i 008A                        efgtoa@l 0086                        efgtoa@m 0072  
                      efgtoa@n 0092                        efgtoa@p 007C                        efgtoa@t 006C  
                      efgtoa@u 0094                        efgtoa@w 007E                        atoi@neg 0011  
                      _sprintf 41B2                        _tolower 40F6                        _strncmp 38D0  
               __pintcode_body 45B4           end_of_initialization 4292                        floorf@e 0044  
                      floorf@m 0040                        floorf@u 0046                        floorf@x 0036  
                      fputc@fp 0006                  __Lmediumconst 0000                        int_func 45B4  
                      fputs@fp 000F              __end_of_vfpfcnvrt 1A88                     efgtoa@mode 0081  
                   efgtoa@sign 007A                      Lcd_Init@i 0008                   ??_Lcd_Chr_CP 0004  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 005A  
          __end_of_appLCD_Init 4026                        strcpy@d 000C                        strlen@a 0006  
                      strcpy@s 000A                        strlen@s 0004                      _PORTBbits 000F81  
                  _adcGetValue 43FA                    ___fladd@grs 0013                  ___xxtofl@sign 0010  
                    _TRISBbits 000F93                      _TRISDbits 000F95                    ___fldiv@grs 0030  
                  ___fldiv@rem 0029             __end_of_Lcd_Chr_CP 337C                    ___flmul@grs 0011  
               __end_of___flge 37D2                 __end_of___fleq 3FA2                 __end_of_appADC 3C02  
                  vfpfcnvrt@ap 009C                    vfpfcnvrt@ct 00AC                    vfpfcnvrt@fp 0098  
                  vfpfcnvrt@ll 009E                 __end_of___wmul 453A                 __end_of_appBat 35C8  
               __end_of_efgtoa 1498                 __end_of_floorf 2BFE                     floorf@F527 00EC  
               __end_of_strcpy 41B2                 __end_of_strlen 4514            start_initialization 4256  
                  __end_of_abs 43FA                    __end_of_pad 3D88                  Lcd_Out@buffer 0008  
     __size_of_appStateInitial 0002              __size_of_Lcd_Init 00C0             fp__appStateInitial 000E  
        __end_of___fpclassifyf 38D0                    _appLCD_Init 3FA2                    vfprintf@fmt 00B6  
                     ??___flge 0025                       ??___fleq 000C                       ??_appADC 005A  
                     ??___wmul 0008                    _appBat$2019 00D6                       ??_appBat 005A  
                     ??_efgtoa 0051                    __pdataBANK1 0159                       ??_floorf 003A  
                     ??_strcpy 0008                       ??_strlen 0006                      ___fladd@a 0008  
                    ___fladd@b 0004                      ___fldiv@a 0021                      ___fldiv@b 001D  
       __size_of_appTimerStart 000C                      ___flmul@a 0008                      ___flmul@b 0004  
                  __pbssCOMRAM 005A                      ___flsub@a 0021                      ___flsub@b 001D  
                __pcstackBANK0 0060               ___aodiv@dividend 0004              __size_of___xxtofl 01B4  
      fp__appStateRecolectData 000E                       ?_Lcd_Cmd 0001                       ?_Lcd_Out 0007  
                    _atoi$1693 0013                      _atoi$1694 0017                      _atoi$1695 0015  
                  _efgtoa$1632 0064                      _appElemts 42A0                    _efgtoa$1627 0060  
                  _efgtoa$1636 0066                    _efgtoa$1628 0062                    _efgtoa$1637 0068  
                  _efgtoa$1638 006A                      _dtoa$1603 0031              appElemts@elements 00CE  
                    __pintcode 0008                       ?___aodiv 0004                       ?___fladd 0004  
                     ?___aomod 0004                       ?_adcInit 0001                       ?___fldiv 001D  
                     ?___awdiv 0004               ___aodiv@quotient 0016                       ?___flneg 0004  
                     ?___awmod 0004                       ?___flmul 0004                       ?___flsub 001D  
                     ?___fltol 0036                    __pintcodelo 0018                       ?_appInit 0001  
                  appADC@F3558 0100              __size_of_vfprintf 0062                    __smallconst 0800  
                     ?_isdigit 0004                       ?_isspace 0004                       ?_isupper 0004  
                    appBat@bat 00D8                       ?_sprintf 00BC                       ?_tolower 000A  
               __size_of_fputc 00CA                 __size_of_fputs 0044                       ?_strncmp 0004  
               __size_of_putch 0002                 ___wmul@product 0008                       _LATBbits 000F8A  
                     _LATDbits 000F8C                  _appTimerStart 45A0                       _IPR2bits 000FA2  
                     _PIE2bits 000FA0              ??_appStateInitial 0004                     ?_appElemts 00CE  
                     i1u626_20 0034                       i1u626_21 0030                       i1u627_20 0042  
                     i1u627_21 003E                       i1u628_20 005A                       i1u628_21 0056  
                     _PIR1bits 000F9E                       _PIR2bits 000FA1                       _GO_nDONE 007E11  
                     _RCONbits 000FD0                       Lcd_Out@x 0007                       Lcd_Out@y 000C  
                    _vfpfcnvrt 1498                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0004                  ?_appISRConfig 0001  
                 ?_adcGetValue 0004  __size_of_appStateRecolectData 0022                   _isspace$1724 000A  
                     _Lcd_Init 3D88                     vfpfcnvrt@c 00B3                     vfpfcnvrt@f 00AF  
                    copy_data0 426A                 ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A  
             __size_of_Lcd_Out 00CC                       __Hrparam 0000                     vfprintf@ap 00B8  
                     __Lrparam 0000                     vfprintf@fp 00B4                    appBat@F3562 00DE  
             __size_of___aodiv 0188               __size_of___fladd 04C0               __size_of___aomod 0164  
             __size_of_adcInit 0048               __size_of___fldiv 039A               __size_of___awdiv 00C4  
             __size_of___flneg 0038               __size_of___awmod 00B0               __size_of___flmul 042A  
             __size_of___flsub 0046               __size_of___fltol 0106                  appADC@lm35val 00D7  
                   ?_vfpfcnvrt 0098                ___aodiv@divisor 000C                 ??_appISRConfig 0004  
                appADC@dataOut 00CE                ___aodiv@counter 0014               __size_of_appInit 0018  
           ___fpclassifyf@F465 00F0                     sprintf@fmt 00BE                       ___xxtofl 2BFE  
             appElemts@dataout 00D1               __size_of_isdigit 0038                 Lcd_Chr_CP@data 0006  
             __size_of_isspace 0052                       __ptext10 083E                       __ptext11 40F6  
                     __ptext20 1F48                       __ptext12 4436                       __ptext21 36CE  
                     __ptext13 4156                       __ptext30 3A72                       __ptext22 3EF8  
                     __ptext14 29EC                       __ptext31 45BC                       __ptext23 2372  
                     __ptext15 37D2                       __ptext40 2BFE                       __ptext32 43BA  
                     __ptext24 3E48                       __ptext16 35C8                       __ptext41 455C  
                     __ptext33 30CA                       __ptext25 3C02                       __ptext17 4330  
                     __ptext50 42E8                       __ptext42 45A0                       __ptext34 2F42  
                     __ptext26 270C                       __ptext18 1A88                       __ptext43 458C  
                     __ptext35 2DB2                       __ptext27 3CC6                       __ptext19 446E  
                     __ptext44 3FA2                       __ptext36 4204                       __ptext28 44DE  
                     __ptext45 39A6                       __ptext37 44A6                       __ptext29 4376  
                     __ptext46 322E                       __ptext38 4514                       __ptext47 3D88  
                     __ptext39 43FA                       __ptext48 337C                       __ptext49 45AC  
             __size_of_isupper 0038               __size_of_sprintf 0052               __size_of_tolower 0060  
                   strcpy@dest 0004               __size_of_strncmp 00D6                    Lcd_Cmd@data 0006  
                __size_of_atoi 0190                  __size_of_main 006E                  __size_of_dtoa 02E0  
                __size_of_isrH 45B2                  __size_of_isrL 0066                    ??_appElemts 00D0  
                 ?_appLCD_Init 0001                       efgtoa@fp 004A                       efgtoa@ne 0070  
                     efgtoa@pp 006E                       efgtoa@ou 0074                       int$flags 005C  
                     _vfprintf 4094               ___aomod@dividend 0004                  ?_appTimerInit 0001  
                  Lcd_Out@data 000D                 _vfpfcnvrt$1652 00A8                 _vfpfcnvrt$1657 00AA  
                   _INTCONbits 000FF2                       isdigit@c 0004                       intlevel1 0000  
                     intlevel2 0000                      sprintf@ap 00C6                ??_appTimerStart 0004  
                     isspace@c 0004                      strcpy@src 0006                       isupper@c 0004  
                    strncmp@_l 0004                      strncmp@_r 0006                 appElemts@F3564 00E6  
                  efgtoa@nmode 0080                ___aomod@divisor 000C                    ??_vfpfcnvrt 0056  
              ___aomod@counter 0014                 ??_appTimerInit 0004                       sprintf@f 00C8  
                     tolower@c 000A                       sprintf@s 00BC         __size_of___fpclassifyf 00FE  
                     strncmp@l 000B                       strncmp@n 0008                       strncmp@r 000D  
         __size_of_adcGetValue 003C                _appStateInitial 45BA                  ___fladd@signs 0010  
                 ___aodiv@sign 0015                   ___fladd@aexp 0011                   ___fladd@bexp 0012  
         __end_of_appISRConfig 45B4                   ___aomod@sign 0015  
