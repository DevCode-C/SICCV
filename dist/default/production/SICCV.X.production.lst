

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 02 23:51:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 12/02/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4550 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  00383A                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _datos
   120  00383A  00                 	db	0
   121  00383B  0000               	dw	0
   122  00383D  08                 	db	8
   123  00383E  0000               	dw	0
   124  003840  00                 	db	0
   125  003841  00                 	db	0
   126  003842  00                 	db	0
   127  003843  00                 	db	0
   128  003844  00                 	db	0
   129  003845  00                 	db	0
   130  003846  00                 	db	0
   131  003847  00                 	db	0
   132  003848  00                 	db	0
   133  003849  00                 	db	0
   134  00384A  00                 	db	0
   135  00384B  00                 	db	0
   136  00384C  00                 	db	0
   137  00384D  00                 	db	0
   138  00384E  00                 	db	0
   139  00384F  00                 	db	0
   140  003850  00                 	db	0
   141  003851  F4                 	db	low _confirmacion
   142  003852  34                 	db	high _confirmacion
   143  0000                     _TMR0	set	4054
   144  0000                     _TMR3	set	4018
   145  0000                     _ADRES	set	4035
   146  0000                     _TXREG	set	4013
   147  0000                     _IPR1bits	set	3999
   148  0000                     _PIE1bits	set	3997
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _TXSTAbits	set	4012
   151  0000                     _SPBRG	set	4015
   152  0000                     _BAUDCONbits	set	4024
   153  0000                     _PORTAbits	set	3968
   154  0000                     _LATAbits	set	3977
   155  0000                     _RCONbits	set	4048
   156  0000                     _PIE2bits	set	4000
   157  0000                     _IPR2bits	set	4002
   158  0000                     _PIR2bits	set	4001
   159  0000                     _INTCONbits	set	4082
   160  0000                     _T0CONbits	set	4053
   161  0000                     _T3CONbits	set	4017
   162  0000                     _LATEbits	set	3981
   163  0000                     _PIR1bits	set	3998
   164  0000                     _PR2	set	4043
   165  0000                     _TMR2	set	4044
   166  0000                     _TRISEbits	set	3990
   167  0000                     _T2CONbits	set	4042
   168  0000                     _LATDbits	set	3980
   169  0000                     _TRISDbits	set	3989
   170  0000                     _PORTBbits	set	3969
   171  0000                     _PORTB	set	3969
   172  0000                     _RCREG	set	4014
   173  0000                     _TRISAbits	set	3986
   174  0000                     _INTCON2bits	set	4081
   175  0000                     _TRISB	set	3987
   176  0000                     _LATCbits	set	3979
   177  0000                     _TRISCbits	set	3988
   178  0000                     _ADCON0bits	set	4034
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON1bits	set	4033
   181  0000                     _RCIE	set	31981
   182  0000                     _RCIF	set	31989
   183  0000                     _TMR0IF	set	32658
   184  0000                     _TMR0IE	set	32661
   185  0000                     _TMR3IF	set	32009
   186  0000                     _TMR3IE	set	32001
   187  0000                     _GO_nDONE	set	32273
   188                           
   189                           	psect	smallconst
   190  000800                     __psmallconst:
   191                           	callstack 0
   192  000800  00                 	db	0
   193  000801                     STR_9:
   194  000801  52                 	db	82	;'R'
   195  000802  65                 	db	101	;'e'
   196  000803  63                 	db	99	;'c'
   197  000804  61                 	db	97	;'a'
   198  000805  72                 	db	114	;'r'
   199  000806  67                 	db	103	;'g'
   200  000807  61                 	db	97	;'a'
   201  000808  20                 	db	32
   202  000809  50                 	db	80	;'P'
   203  00080A  6F                 	db	111	;'o'
   204  00080B  72                 	db	114	;'r'
   205  00080C  66                 	db	102	;'f'
   206  00080D  61                 	db	97	;'a'
   207  00080E  76                 	db	118	;'v'
   208  00080F  6F                 	db	111	;'o'
   209  000810  72                 	db	114	;'r'
   210  000811  00                 	db	0
   211  000812                     STR_6:
   212  000812  43                 	db	67	;'C'
   213  000813  20                 	db	32
   214  000814  64                 	db	100	;'d'
   215  000815  65                 	db	101	;'e'
   216  000816  20                 	db	32
   217  000817  76                 	db	118	;'v'
   218  000818  61                 	db	97	;'a'
   219  000819  63                 	db	99	;'c'
   220  00081A  75                 	db	117	;'u'
   221  00081B  6E                 	db	110	;'n'
   222  00081C  61                 	db	97	;'a'
   223  00081D  73                 	db	115	;'s'
   224  00081E  3A                 	db	58	;':'
   225  00081F  00                 	db	0
   226  000820                     STR_1:
   227  000820  54                 	db	84	;'T'
   228  000821  3A                 	db	58	;':'
   229  000822  25                 	db	37
   230  000823  30                 	db	48	;'0'
   231  000824  32                 	db	50	;'2'
   232  000825  64                 	db	100	;'d'
   233  000826  2E                 	db	46
   234  000827  25                 	db	37
   235  000828  30                 	db	48	;'0'
   236  000829  32                 	db	50	;'2'
   237  00082A  64                 	db	100	;'d'
   238  00082B  20                 	db	32
   239  00082C  43                 	db	67	;'C'
   240  00082D  00                 	db	0
   241  00082E                     STR_12:
   242  00082E  49                 	db	73	;'I'
   243  00082F  6E                 	db	110	;'n'
   244  000830  66                 	db	102	;'f'
   245  000831  6F                 	db	111	;'o'
   246  000832  72                 	db	114	;'r'
   247  000833  6D                 	db	109	;'m'
   248  000834  61                 	db	97	;'a'
   249  000835  63                 	db	99	;'c'
   250  000836  69                 	db	105	;'i'
   251  000837  6F                 	db	111	;'o'
   252  000838  6E                 	db	110	;'n'
   253  000839  40                 	db	64	;'@'
   254  00083A  00                 	db	0
   255  00083B                     STR_10:
   256  00083B  43                 	db	67	;'C'
   257  00083C  6F                 	db	111	;'o'
   258  00083D  6E                 	db	110	;'n'
   259  00083E  66                 	db	102	;'f'
   260  00083F  69                 	db	105	;'i'
   261  000840  72                 	db	114	;'r'
   262  000841  6D                 	db	109	;'m'
   263  000842  61                 	db	97	;'a'
   264  000843  63                 	db	99	;'c'
   265  000844  69                 	db	105	;'i'
   266  000845  6F                 	db	111	;'o'
   267  000846  6E                 	db	110	;'n'
   268  000847  00                 	db	0
   269  000848                     STR_8:
   270  000848  53                 	db	83	;'S'
   271  000849  69                 	db	105	;'i'
   272  00084A  6E                 	db	110	;'n'
   273  00084B  20                 	db	32
   274  00084C  76                 	db	118	;'v'
   275  00084D  61                 	db	97	;'a'
   276  00084E  63                 	db	99	;'c'
   277  00084F  75                 	db	117	;'u'
   278  000850  6E                 	db	110	;'n'
   279  000851  61                 	db	97	;'a'
   280  000852  73                 	db	115	;'s'
   281  000853  00                 	db	0
   282  000854                     STR_3:
   283  000854  42                 	db	66	;'B'
   284  000855  69                 	db	105	;'i'
   285  000856  65                 	db	101	;'e'
   286  000857  6E                 	db	110	;'n'
   287  000858  76                 	db	118	;'v'
   288  000859  65                 	db	101	;'e'
   289  00085A  6E                 	db	110	;'n'
   290  00085B  69                 	db	105	;'i'
   291  00085C  64                 	db	100	;'d'
   292  00085D  6F                 	db	111	;'o'
   293  00085E  73                 	db	115	;'s'
   294  00085F  00                 	db	0
   295  000860                     STR_14:
   296  000860  41                 	db	65	;'A'
   297  000861  63                 	db	99	;'c'
   298  000862  74                 	db	116	;'t'
   299  000863  69                 	db	105	;'i'
   300  000864  76                 	db	118	;'v'
   301  000865  61                 	db	97	;'a'
   302  000866  64                 	db	100	;'d'
   303  000867  6F                 	db	111	;'o'
   304  000868  40                 	db	64	;'@'
   305  000869  00                 	db	0
   306  00086A                     STR_2:
   307  00086A  42                 	db	66	;'B'
   308  00086B  61                 	db	97	;'a'
   309  00086C  74                 	db	116	;'t'
   310  00086D  3A                 	db	58	;':'
   311  00086E  25                 	db	37
   312  00086F  30                 	db	48	;'0'
   313  000870  32                 	db	50	;'2'
   314  000871  64                 	db	100	;'d'
   315  000872  00                 	db	0
   316  000873                     STR_4:
   317  000873  53                 	db	83	;'S'
   318  000874  49                 	db	73	;'I'
   319  000875  43                 	db	67	;'C'
   320  000876  43                 	db	67	;'C'
   321  000877  56                 	db	86	;'V'
   322  000878  00                 	db	0
   323  000879                     STR_5:
   324  000879  23                 	db	35
   325  00087A  3A                 	db	58	;':'
   326  00087B  25                 	db	37
   327  00087C  64                 	db	100	;'d'
   328  00087D  00                 	db	0
   329  00087E  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334  003616                     __pcinit:
   335                           	callstack 0
   336  003616                     start_initialization:
   337                           	callstack 0
   338  003616                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK0 (25 bytes)
   342                           ; load TBLPTR registers with __pidataBANK0
   343  003616  0E3A               	movlw	low __pidataBANK0
   344  003618  6EF6               	movwf	tblptrl,c
   345  00361A  0E38               	movlw	high __pidataBANK0
   346  00361C  6EF7               	movwf	tblptrh,c
   347  00361E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   348  003620  6EF8               	movwf	tblptru,c
   349  003622  EE00  F0C0         	lfsr	0,__pdataBANK0
   350  003626  EE10 F019          	lfsr	1,25
   351  00362A                     copy_data0:
   352  00362A  0009               	tblrd		*+
   353  00362C  CFF5 FFEE          	movff	tablat,postinc0
   354  003630  50E5               	movf	postdec1,w,c
   355  003632  50E1               	movf	fsr1l,w,c
   356  003634  E1FA               	bnz	copy_data0
   357                           
   358                           ; Clear objects allocated to BANK0 (52 bytes)
   359  003636  EE00  F060         	lfsr	0,__pbssBANK0
   360  00363A  0E34               	movlw	52
   361  00363C                     clear_0:
   362  00363C  6AEE               	clrf	postinc0,c
   363  00363E  06E8               	decf	wreg,f,c
   364  003640  E1FD               	bnz	clear_0
   365                           
   366                           ; Clear objects allocated to COMRAM (5 bytes)
   367  003642  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   368  003644  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   369  003646  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   370  003648  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   371  00364A  6A53               	clrf	__pbssCOMRAM& (0+255),c
   372  00364C                     end_of_initialization:
   373                           	callstack 0
   374  00364C                     __end_of__initialization:
   375                           	callstack 0
   376  00364C  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   377  00364E  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   378  003650  0E00               	movlw	low (__Lmediumconst shr (0+16))
   379  003652  6EF8               	movwf	tblptru,c
   380  003654  0100               	movlb	0
   381  003656  EFC4  F01B         	goto	_main	;jump to C main() function
   382                           
   383                           	psect	bssCOMRAM
   384  000053                     __pbssCOMRAM:
   385                           	callstack 0
   386  000053                     _prec:
   387                           	callstack 0
   388  000053                     	ds	2
   389  000055                     _flags:
   390                           	callstack 0
   391  000055                     	ds	2
   392  000057                     isrH@counter:
   393                           	callstack 0
   394  000057                     	ds	1
   395                           
   396                           	psect	bssBANK0
   397  000060                     __pbssBANK0:
   398                           	callstack 0
   399  000060                     _nout:
   400                           	callstack 0
   401  000060                     	ds	2
   402  000062                     _width:
   403                           	callstack 0
   404  000062                     	ds	2
   405  000064                     _dbuf:
   406                           	callstack 0
   407  000064                     	ds	32
   408  000084                     _puerto:
   409                           	callstack 0
   410  000084                     	ds	16
   411                           
   412                           	psect	dataBANK0
   413  0000C0                     __pdataBANK0:
   414                           	callstack 0
   415  0000C0                     _datos:
   416                           	callstack 0
   417  0000C0                     	ds	25
   418                           
   419                           	psect	cstackBANK0
   420  000094                     __pcstackBANK0:
   421                           	callstack 0
   422  000094                     ___fltol@sign1:
   423                           	callstack 0
   424  000094                     vfpfcnvrt@ll:
   425                           	callstack 0
   426                           
   427                           ; 8 bytes @ 0x0
   428  000094                     	ds	1
   429  000095                     ___fltol@exp1:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x1
   433  000095                     	ds	1
   434  000096                     ?___awmod:
   435                           	callstack 0
   436  000096                     ___awmod@dividend:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2
   440  000096                     	ds	2
   441  000098                     ___awmod@divisor:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x4
   445  000098                     	ds	2
   446  00009A                     ___awmod@counter:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x6
   450  00009A                     	ds	1
   451  00009B                     ___awmod@sign:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x7
   455  00009B                     	ds	1
   456  00009C                     vfpfcnvrt@done:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x8
   460  00009C                     	ds	2
   461  00009E                     _vfpfcnvrt$2355:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xA
   465  00009E                     	ds	2
   466  0000A0                     ?_vfprintf:
   467                           	callstack 0
   468  0000A0                     vfprintf@fp:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xC
   472  0000A0                     	ds	2
   473  0000A2                     vfprintf@fmt:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xE
   477  0000A2                     	ds	2
   478  0000A4                     vfprintf@ap:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x10
   482  0000A4                     	ds	2
   483  0000A6                     ?_sprintf:
   484                           	callstack 0
   485  0000A6                     sprintf@s:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x12
   489  0000A6                     	ds	2
   490  0000A8                     sprintf@fmt:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x14
   494  0000A8                     	ds	8
   495  0000B0                     sprintf@ap:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1C
   499  0000B0                     	ds	2
   500  0000B2                     sprintf@f:
   501                           	callstack 0
   502                           
   503                           ; 6 bytes @ 0x1E
   504  0000B2                     	ds	6
   505  0000B8                     appADC@data:
   506                           	callstack 0
   507  0000B8                     appBat@data:
   508                           	callstack 0
   509  0000B8                     appElemts@data:
   510                           	callstack 0
   511  0000B8                     appSubGetData@data_Inout:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x24
   515  0000B8                     	ds	2
   516  0000BA                     ??_appBat:
   517  0000BA                     appSubGetData@cantidad:
   518                           	callstack 0
   519  0000BA                     appADC@lm35val:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x26
   523  0000BA                     	ds	2
   524  0000BC                     appSubGetData@inout:
   525                           	callstack 0
   526  0000BC                     _appBat$2655:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x28
   530  0000BC                     	ds	1
   531  0000BD                     ??_appGetElements:
   532                           
   533                           ; 1 bytes @ 0x29
   534  0000BD                     	ds	3
   535                           
   536                           	psect	cstackCOMRAM
   537  000001                     __pcstackCOMRAM:
   538                           	callstack 0
   539  000001                     ??_isrH:
   540  000001                     
   541                           ; 1 bytes @ 0x0
   542  000001                     	ds	3
   543  000004                     ??_isrL:
   544                           
   545                           ; 1 bytes @ 0x3
   546  000004                     	ds	3
   547  000007                     ??_Lcd_Cmd:
   548  000007                     ??_Lcd_Chr_CP:
   549  000007                     ??_adcInit:
   550  000007                     ?_memcmp:
   551                           	callstack 0
   552  000007                     ?_strlen:
   553                           	callstack 0
   554  000007                     ?_isdigit:
   555                           	callstack 0
   556  000007                     ?_isspace:
   557                           	callstack 0
   558  000007                     ?_adcGetValue:
   559                           	callstack 0
   560  000007                     ?___wmul:
   561                           	callstack 0
   562  000007                     ?___lldiv:
   563                           	callstack 0
   564  000007                     ?___aodiv:
   565                           	callstack 0
   566  000007                     ?___aomod:
   567                           	callstack 0
   568  000007                     setServoAngle@pin:
   569                           	callstack 0
   570  000007                     teclado@valor:
   571                           	callstack 0
   572  000007                     appCounterInit@reload:
   573                           	callstack 0
   574  000007                     ___wmul@multiplier:
   575                           	callstack 0
   576  000007                     memcmp@vl:
   577                           	callstack 0
   578  000007                     memset@dest:
   579                           	callstack 0
   580  000007                     isdigit@c:
   581                           	callstack 0
   582  000007                     isspace@c:
   583                           	callstack 0
   584  000007                     fputc@c:
   585                           	callstack 0
   586  000007                     strlen@s:
   587                           	callstack 0
   588  000007                     ___lldiv@dividend:
   589                           	callstack 0
   590  000007                     ___aodiv@dividend:
   591                           	callstack 0
   592  000007                     ___aomod@dividend:
   593                           	callstack 0
   594                           
   595                           ; 8 bytes @ 0x6
   596  000007                     	ds	1
   597  000008                     ??_setServoAngle:
   598  000008                     adcInit@ADC_PINs:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x7
   602  000008                     	ds	1
   603  000009                     ??_isdigit:
   604  000009                     ??_isspace:
   605  000009                     ??_adcGetValue:
   606  000009                     Lcd_Chr_CP@data:
   607                           	callstack 0
   608  000009                     Lcd_Cmd@data:
   609                           	callstack 0
   610  000009                     ___wmul@multiplicand:
   611                           	callstack 0
   612  000009                     memcmp@vr:
   613                           	callstack 0
   614  000009                     memset@c:
   615                           	callstack 0
   616  000009                     fputc@fp:
   617                           	callstack 0
   618  000009                     strlen@a:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x8
   622  000009                     	ds	1
   623  00000A                     ??_Lcd_Init:
   624  00000A                     adcGetValue@PinADC:
   625                           	callstack 0
   626  00000A                     Lcd_Out@x:
   627                           	callstack 0
   628  00000A                     setServoAngle@angle:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x9
   632  00000A                     	ds	1
   633  00000B                     ??_fputc:
   634  00000B                     ?___xxtofl:
   635                           	callstack 0
   636  00000B                     Lcd_Init@i:
   637                           	callstack 0
   638  00000B                     setServo@pulsos:
   639                           	callstack 0
   640  00000B                     Lcd_Out@buffer:
   641                           	callstack 0
   642  00000B                     sendData@data:
   643                           	callstack 0
   644  00000B                     ___wmul@product:
   645                           	callstack 0
   646  00000B                     memcmp@n:
   647                           	callstack 0
   648  00000B                     memset@n:
   649                           	callstack 0
   650  00000B                     ___lldiv@divisor:
   651                           	callstack 0
   652  00000B                     ___xxtofl@val:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0xA
   656  00000B                     	ds	1
   657  00000C                     setServo@pin:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0xB
   661  00000C                     	ds	1
   662  00000D                     ??_memset:
   663  00000D                     ??_Lcd_Out:
   664  00000D                     ??_sendData:
   665  00000D                     ??_memcmp:
   666  00000D                     setServo@angle:
   667                           	callstack 0
   668  00000D                     _isspace$2393:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xC
   672  00000D                     	ds	1
   673  00000E                     ?_atoi:
   674                           	callstack 0
   675  00000E                     setServo@i:
   676                           	callstack 0
   677  00000E                     memcmp@l:
   678                           	callstack 0
   679  00000E                     atoi@s:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xD
   683  00000E                     	ds	1
   684  00000F                     ??___xxtofl:
   685  00000F                     Lcd_Out@y:
   686                           	callstack 0
   687  00000F                     sendData@i:
   688                           	callstack 0
   689  00000F                     appSubGiveElemts@data:
   690                           	callstack 0
   691  00000F                     memset@k:
   692                           	callstack 0
   693  00000F                     ___lldiv@quotient:
   694                           	callstack 0
   695  00000F                     ___aodiv@divisor:
   696                           	callstack 0
   697  00000F                     ___aomod@divisor:
   698                           	callstack 0
   699                           
   700                           ; 8 bytes @ 0xE
   701  00000F                     	ds	1
   702  000010                     ??_atoi:
   703  000010                     Lcd_Out@data:
   704                           	callstack 0
   705  000010                     memcmp@r:
   706                           	callstack 0
   707  000010                     fputs@s:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0xF
   711  000010                     	ds	1
   712  000011                     ??_confirmacion:
   713  000011                     ??_warning:
   714  000011                     ??_appLCD_Init:
   715  000011                     memset@s:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x10
   719  000011                     	ds	1
   720  000012                     fputs@fp:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x11
   724  000012                     	ds	1
   725  000013                     ??_readUART:
   726  000013                     ___lldiv@counter:
   727                           	callstack 0
   728  000013                     ___xxtofl@sign:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x12
   732  000013                     	ds	1
   733  000014                     ___xxtofl@exp:
   734                           	callstack 0
   735  000014                     fputs@c:
   736                           	callstack 0
   737  000014                     atoi@neg:
   738                           	callstack 0
   739  000014                     uart_Init@baud:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x13
   743  000014                     	ds	1
   744  000015                     fputs@i:
   745                           	callstack 0
   746  000015                     ___xxtofl@arg:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x14
   750  000015                     	ds	1
   751  000016                     _atoi$2375:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x15
   755  000016                     	ds	1
   756  000017                     ?_pad:
   757                           	callstack 0
   758  000017                     ___aodiv@counter:
   759                           	callstack 0
   760  000017                     ___aomod@counter:
   761                           	callstack 0
   762  000017                     pad@fp:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x16
   766  000017                     	ds	1
   767  000018                     ___aodiv@sign:
   768                           	callstack 0
   769  000018                     ___aomod@sign:
   770                           	callstack 0
   771  000018                     _atoi$2377:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x17
   775  000018                     	ds	1
   776  000019                     ?_abs:
   777                           	callstack 0
   778  000019                     ?___flmul:
   779                           	callstack 0
   780  000019                     pad@buf:
   781                           	callstack 0
   782  000019                     abs@a:
   783                           	callstack 0
   784  000019                     ___flmul@b:
   785                           	callstack 0
   786  000019                     ___aodiv@quotient:
   787                           	callstack 0
   788                           
   789                           ; 8 bytes @ 0x18
   790  000019                     	ds	1
   791  00001A                     _atoi$2376:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x19
   795  00001A                     	ds	1
   796  00001B                     ??_abs:
   797  00001B                     pad@p:
   798                           	callstack 0
   799  00001B                     atoi@n:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x1A
   803  00001B                     	ds	2
   804  00001D                     ??_pad:
   805  00001D                     ___flmul@a:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x1C
   809  00001D                     	ds	1
   810  00001E                     pad@i:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x1D
   814  00001E                     	ds	2
   815  000020                     pad@w:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x1F
   819  000020                     	ds	1
   820  000021                     ??___flmul:
   821                           
   822                           ; 1 bytes @ 0x20
   823  000021                     	ds	1
   824  000022                     ?_dtoa:
   825                           	callstack 0
   826  000022                     dtoa@fp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x21
   830  000022                     	ds	2
   831  000024                     dtoa@d:
   832                           	callstack 0
   833                           
   834                           ; 8 bytes @ 0x23
   835  000024                     	ds	1
   836  000025                     ___flmul@sign:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x24
   840  000025                     	ds	1
   841  000026                     ___flmul@grs:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x25
   845  000026                     	ds	4
   846  00002A                     ___flmul@aexp:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x29
   850  00002A                     	ds	1
   851  00002B                     ___flmul@bexp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x2A
   855  00002B                     	ds	1
   856  00002C                     ??_dtoa:
   857  00002C                     ___flmul@prod:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x2B
   861  00002C                     	ds	4
   862  000030                     ___flmul@temp:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x2F
   866  000030                     	ds	2
   867  000032                     ?___fldiv:
   868                           	callstack 0
   869  000032                     ___fldiv@b:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x31
   873  000032                     	ds	2
   874  000034                     _dtoa$2340:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x33
   878  000034                     	ds	2
   879  000036                     dtoa@p:
   880                           	callstack 0
   881  000036                     ___fldiv@a:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x35
   885  000036                     	ds	2
   886  000038                     dtoa@w:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x37
   890  000038                     	ds	2
   891  00003A                     ??___fldiv:
   892  00003A                     dtoa@s:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x39
   896  00003A                     	ds	2
   897  00003C                     dtoa@n:
   898                           	callstack 0
   899                           
   900                           ; 8 bytes @ 0x3B
   901  00003C                     	ds	2
   902  00003E                     ___fldiv@rem:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x3D
   906  00003E                     	ds	4
   907  000042                     ___fldiv@sign:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x41
   911  000042                     	ds	1
   912  000043                     ___fldiv@new_exp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x42
   916  000043                     	ds	1
   917  000044                     dtoa@i:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x43
   921  000044                     	ds	1
   922  000045                     ___fldiv@grs:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x44
   926  000045                     	ds	1
   927  000046                     ?_vfpfcnvrt:
   928                           	callstack 0
   929  000046                     vfpfcnvrt@fp:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x45
   933  000046                     	ds	2
   934  000048                     vfpfcnvrt@fmt:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x47
   938  000048                     	ds	1
   939  000049                     ___fldiv@bexp:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x48
   943  000049                     	ds	1
   944  00004A                     ___fldiv@aexp:
   945                           	callstack 0
   946  00004A                     vfpfcnvrt@ap:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x49
   950  00004A                     	ds	1
   951  00004B                     ?___fltol:
   952                           	callstack 0
   953  00004B                     ___fltol@f1:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x4A
   957  00004B                     	ds	1
   958  00004C                     ??_vfpfcnvrt:
   959                           
   960                           ; 1 bytes @ 0x4B
   961  00004C                     	ds	3
   962  00004F                     ??___fltol:
   963                           
   964                           ; 1 bytes @ 0x4E
   965  00004F                     	ds	1
   966  000050                     vfprintf@cfmt:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x4F
   970  000050                     	ds	3
   971  000053                     
   972                           ; 1 bytes @ 0x52
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   975 ;;
   976 ;; *************** function _main *****************
   977 ;; Defined at:
   978 ;;		line 13 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         0       0       0       0       0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels required when called:   12
   998 ;; This function calls:
   999 ;;		_appGetElements
  1000 ;;		_appInit
  1001 ;;		_appStateInitial
  1002 ;;		_appStateRecolectData
  1003 ;;		_confirmacion
  1004 ;;		_readUART
  1005 ;;		_sendinformation
  1006 ;;		_warning
  1007 ;; This function is called by:
  1008 ;;		Startup code after reset
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text0
  1013  003788                     __ptext0:
  1014                           	callstack 0
  1015  003788                     _main:
  1016                           	callstack 19
  1017  003788                     
  1018                           ;main.c: 15:     TRISB = 0xF0;
  1019  003788  0EF0               	movlw	240
  1020  00378A  6E93               	movwf	147,c	;volatile
  1021  00378C                     
  1022                           ;main.c: 16:     INTCON2bits.RBPU = 0;
  1023  00378C  9EF1               	bcf	241,7,c	;volatile
  1024  00378E                     
  1025                           ;main.c: 17:     TRISAbits.TRISA2 = 0;
  1026  00378E  9492               	bcf	146,2,c	;volatile
  1027  003790                     
  1028                           ;main.c: 18:     TRISAbits.TRISA5 = 0;
  1029  003790  9A92               	bcf	146,5,c	;volatile
  1030  003792                     
  1031                           ;main.c: 19:     appInit();
  1032  003792  ECE8  F01A         	call	_appInit	;wreg free
  1033  003796                     l4841:
  1034                           
  1035                           ;main.c: 21:     {;main.c: 24:         datos.nextFunc();
  1036  003796  EE20  F0D7         	lfsr	2,_datos+23
  1037  00379A  D802               	call	u4348
  1038  00379C  EFDA  F01B         	goto	u4349
  1039  0037A0                     u4348:
  1040  0037A0  0005               	push	
  1041  0037A2  6EFA               	movwf	pclath,c
  1042  0037A4  50DE               	movf	postinc2,w,c
  1043  0037A6  6EFD               	movwf	tosl,c
  1044  0037A8  50DE               	movf	postinc2,w,c
  1045  0037AA  6EFE               	movwf	tosh,c
  1046  0037AC  50F8               	movf	tblptru,w,c
  1047  0037AE  6EFF               	movwf	tosu,c
  1048  0037B0  50FA               	movf	pclath,w,c
  1049  0037B2  0012               	return		;indir
  1050  0037B4                     u4349:
  1051  0037B4  EFCB  F01B         	goto	l4841
  1052  0037B8  EF5E  F000         	goto	start
  1053  0037BC                     __end_of_main:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _sendinformation *****************
  1057 ;; Defined at:
  1058 ;;		line 130 in file "app.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:   11
  1079 ;; This function calls:
  1080 ;;		_appADC
  1081 ;;		_appBat
  1082 ;;		_appElemts
  1083 ;;		_memset
  1084 ;;		_sendData
  1085 ;;		_sprintf
  1086 ;; This function is called by:
  1087 ;;		_readUART
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text1
  1093  002D8A                     __ptext1:
  1094                           	callstack 0
  1095  002D8A                     _sendinformation:
  1096                           	callstack 19
  1097  002D8A                     
  1098                           ;app.c: 132:     appADC(&datos);
  1099  002D8A  0EC0               	movlw	low _datos
  1100  002D8C  0100               	movlb	0	; () banked
  1101  002D8E  6FB8               	movwf	appADC@data& (0+255),b
  1102  002D90  0E00               	movlw	high _datos
  1103  002D92  6FB9               	movwf	(appADC@data+1)& (0+255),b
  1104  002D94  EC0A  F00E         	call	_appADC	;wreg free
  1105  002D98                     
  1106                           ;app.c: 133:     sendData(&datos);
  1107  002D98  0EC0               	movlw	low _datos
  1108  002D9A  6E0B               	movwf	sendData@data^0,c
  1109  002D9C  0E00               	movlw	high _datos
  1110  002D9E  6E0C               	movwf	(sendData@data+1)^0,c
  1111  002DA0  EC9A  F019         	call	_sendData	;wreg free
  1112  002DA4                     
  1113                           ;app.c: 134:     appBat(&datos);
  1114  002DA4  0EC0               	movlw	low _datos
  1115  002DA6  0100               	movlb	0	; () banked
  1116  002DA8  6FB8               	movwf	appBat@data& (0+255),b
  1117  002DAA  0E00               	movlw	high _datos
  1118  002DAC  6FB9               	movwf	(appBat@data+1)& (0+255),b
  1119  002DAE  EC3C  F00C         	call	_appBat	;wreg free
  1120                           
  1121                           ;app.c: 135:     sendData(&datos);
  1122  002DB2  0EC0               	movlw	low _datos
  1123  002DB4  6E0B               	movwf	sendData@data^0,c
  1124  002DB6  0E00               	movlw	high _datos
  1125  002DB8  6E0C               	movwf	(sendData@data+1)^0,c
  1126  002DBA  EC9A  F019         	call	_sendData	;wreg free
  1127  002DBE                     
  1128                           ;app.c: 136:     appElemts(&datos);
  1129  002DBE  0EC0               	movlw	low _datos
  1130  002DC0  0100               	movlb	0	; () banked
  1131  002DC2  6FB8               	movwf	appElemts@data& (0+255),b
  1132  002DC4  0E00               	movlw	high _datos
  1133  002DC6  6FB9               	movwf	(appElemts@data+1)& (0+255),b
  1134  002DC8  EC67  F019         	call	_appElemts	;wreg free
  1135  002DCC                     
  1136                           ;app.c: 137:     sendData(&datos);
  1137  002DCC  0EC0               	movlw	low _datos
  1138  002DCE  6E0B               	movwf	sendData@data^0,c
  1139  002DD0  0E00               	movlw	high _datos
  1140  002DD2  6E0C               	movwf	(sendData@data+1)^0,c
  1141  002DD4  EC9A  F019         	call	_sendData	;wreg free
  1142  002DD8                     
  1143                           ;app.c: 138:     memset(datos.display,0,sizeof(datos.display));
  1144  002DD8  0EC7               	movlw	low (_datos+7)
  1145  002DDA  6E07               	movwf	memset@dest^0,c
  1146  002DDC  0E00               	movlw	high (_datos+7)
  1147  002DDE  6E08               	movwf	(memset@dest+1)^0,c
  1148  002DE0  0E00               	movlw	0
  1149  002DE2  6E0A               	movwf	(memset@c+1)^0,c
  1150  002DE4  0E00               	movlw	0
  1151  002DE6  6E09               	movwf	memset@c^0,c
  1152  002DE8  0E00               	movlw	0
  1153  002DEA  6E0C               	movwf	(memset@n+1)^0,c
  1154  002DEC  0E10               	movlw	16
  1155  002DEE  6E0B               	movwf	memset@n^0,c
  1156  002DF0  EC6D  F010         	call	_memset	;wreg free
  1157  002DF4                     
  1158                           ;app.c: 139:     sprintf((char *)datos.display,"@");
  1159  002DF4  0EC7               	movlw	low (_datos+7)
  1160  002DF6  0100               	movlb	0	; () banked
  1161  002DF8  6FA6               	movwf	sprintf@s& (0+255),b
  1162  002DFA  0E00               	movlw	high (_datos+7)
  1163  002DFC  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  1164  002DFE  0E39               	movlw	low (STR_12+11)
  1165  002E00  6FA8               	movwf	sprintf@fmt& (0+255),b
  1166  002E02  0E08               	movlw	high (STR_12+11)
  1167  002E04  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  1168  002E06  EC28  F01A         	call	_sprintf	;wreg free
  1169                           
  1170                           ;app.c: 140:     sendData(&datos);
  1171  002E0A  0EC0               	movlw	low _datos
  1172  002E0C  6E0B               	movwf	sendData@data^0,c
  1173  002E0E  0E00               	movlw	high _datos
  1174  002E10  6E0C               	movwf	(sendData@data+1)^0,c
  1175  002E12  EC9A  F019         	call	_sendData	;wreg free
  1176                           
  1177                           ;app.c: 142:     memset(datos.display,0,sizeof(datos.display));
  1178  002E16  0EC7               	movlw	low (_datos+7)
  1179  002E18  6E07               	movwf	memset@dest^0,c
  1180  002E1A  0E00               	movlw	high (_datos+7)
  1181  002E1C  6E08               	movwf	(memset@dest+1)^0,c
  1182  002E1E  0E00               	movlw	0
  1183  002E20  6E0A               	movwf	(memset@c+1)^0,c
  1184  002E22  0E00               	movlw	0
  1185  002E24  6E09               	movwf	memset@c^0,c
  1186  002E26  0E00               	movlw	0
  1187  002E28  6E0C               	movwf	(memset@n+1)^0,c
  1188  002E2A  0E10               	movlw	16
  1189  002E2C  6E0B               	movwf	memset@n^0,c
  1190  002E2E  EC6D  F010         	call	_memset	;wreg free
  1191  002E32                     
  1192                           ;app.c: 143:     datos.state = 0;
  1193  002E32  0E00               	movlw	0
  1194  002E34  0100               	movlb	0	; () banked
  1195  002E36  6FC3               	movwf	(_datos+3)& (0+255),b
  1196  002E38                     
  1197                           ; BSR set to: 0
  1198                           ;app.c: 144:     datos.nextFunc = appStateInitial;
  1199  002E38  0E88               	movlw	low _appStateInitial
  1200  002E3A  6FD7               	movwf	(_datos+23)& (0+255),b
  1201  002E3C  0E35               	movlw	high _appStateInitial
  1202  002E3E  6FD8               	movwf	(_datos+24)& (0+255),b
  1203  002E40                     
  1204                           ; BSR set to: 0
  1205  002E40  0012               	return		;funcret
  1206  002E42                     __end_of_sendinformation:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _appStateInitial *****************
  1210 ;; Defined at:
  1211 ;;		line 55 in file "app.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1228 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    4
  1232 ;; This function calls:
  1233 ;;		_setServo
  1234 ;;		_teclado
  1235 ;; This function is called by:
  1236 ;;		_appStateRecolectData
  1237 ;;		_appGetElements
  1238 ;;		_sendinformation
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text2
  1244  003588                     __ptext2:
  1245                           	callstack 0
  1246  003588                     _appStateInitial:
  1247                           	callstack 26
  1248  003588                     
  1249                           ;app.c: 58:     teclado(&datos.character);
  1250  003588  0EC6               	movlw	low (_datos+6)
  1251  00358A  6E07               	movwf	teclado@valor^0,c
  1252  00358C  0E00               	movlw	high (_datos+6)
  1253  00358E  6E08               	movwf	(teclado@valor+1)^0,c
  1254  003590  EC47  F00B         	call	_teclado	;wreg free
  1255  003594                     
  1256                           ;app.c: 59:     if(datos.character != 0)
  1257  003594  0100               	movlb	0	; () banked
  1258  003596  51C6               	movf	(_datos+6)& (0+255),w,b
  1259  003598  B4D8               	btfsc	status,2,c
  1260  00359A  EFD1  F01A         	goto	u3921
  1261  00359E  EFD3  F01A         	goto	u3920
  1262  0035A2                     u3921:
  1263  0035A2  EFD9  F01A         	goto	l354
  1264  0035A6                     u3920:
  1265  0035A6                     
  1266                           ; BSR set to: 0
  1267                           ;app.c: 60:     {;app.c: 61:         datos.state = 1;
  1268  0035A6  0E01               	movlw	1
  1269  0035A8  6FC3               	movwf	(_datos+3)& (0+255),b
  1270                           
  1271                           ;app.c: 62:         datos.character = 0;
  1272  0035AA  0E00               	movlw	0
  1273  0035AC  6FC6               	movwf	(_datos+6)& (0+255),b
  1274                           
  1275                           ;app.c: 63:     }
  1276  0035AE  EFE7  F01A         	goto	l357
  1277  0035B2                     l354:
  1278                           
  1279                           ; BSR set to: 0
  1280  0035B2  A680               	btfss	128,3,c	;volatile
  1281  0035B4  EFDE  F01A         	goto	u3931
  1282  0035B8  EFE0  F01A         	goto	u3930
  1283  0035BC                     u3931:
  1284  0035BC  EFE7  F01A         	goto	l357
  1285  0035C0                     u3930:
  1286  0035C0                     
  1287                           ; BSR set to: 0
  1288                           ;app.c: 65:     {;app.c: 66:         setServo(33,10,0);
  1289  0035C0  0E0A               	movlw	10
  1290  0035C2  6E0B               	movwf	setServo@pulsos^0,c
  1291  0035C4  0E00               	movlw	0
  1292  0035C6  6E0C               	movwf	setServo@pin^0,c
  1293  0035C8  0E21               	movlw	33
  1294  0035CA  ECF5  F01B         	call	_setServo
  1295  0035CE                     l357:
  1296  0035CE  0012               	return		;funcret
  1297  0035D0                     __end_of_appStateInitial:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function _readUART *****************
  1301 ;; Defined at:
  1302 ;;		line 39 in file "UART.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1316 ;;      Params:         0       0       0       0       0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1318 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1319 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1320 ;;Total ram usage:        2 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    4
  1323 ;; This function calls:
  1324 ;;		_Lcd_Cmd
  1325 ;;		_Lcd_Out
  1326 ;;		_memcmp
  1327 ;;		_memset
  1328 ;; This function is called by:
  1329 ;;		_isrH
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text3
  1335  00262C                     __ptext3:
  1336                           	callstack 0
  1337  00262C                     _readUART:
  1338                           	callstack 26
  1339  00262C                     
  1340                           ;UART.c: 41:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1341  00262C  0E01               	movlw	1
  1342  00262E  EC81  F012         	call	_Lcd_Cmd
  1343  002632  0E02               	movlw	2
  1344  002634  6E14               	movwf	(??_readUART+1)^0,c
  1345  002636  0E86               	movlw	134
  1346  002638  6E13               	movwf	??_readUART^0,c
  1347  00263A  0E99               	movlw	153
  1348  00263C                     u4467:
  1349  00263C  2EE8               	decfsz	wreg,f,c
  1350  00263E  D7FE               	bra	u4467
  1351  002640  2E13               	decfsz	??_readUART^0,f,c
  1352  002642  D7FC               	bra	u4467
  1353  002644  2E14               	decfsz	(??_readUART+1)^0,f,c
  1354  002646  D7FA               	bra	u4467
  1355  002648  F000               	nop	
  1356  00264A                     
  1357                           ;UART.c: 42:     Lcd_Out(1,0, (int8_t*)puerto);
  1358  00264A  0E00               	movlw	0
  1359  00264C  6E0A               	movwf	Lcd_Out@x^0,c
  1360  00264E  0E84               	movlw	low _puerto
  1361  002650  6E0B               	movwf	Lcd_Out@buffer^0,c
  1362  002652  0E00               	movlw	high _puerto
  1363  002654  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1364  002656  0E01               	movlw	1
  1365  002658  EC39  F015         	call	_Lcd_Out
  1366  00265C                     
  1367                           ;UART.c: 43:     if(!memcmp(puerto,"Informacion@",12))
  1368  00265C  0E84               	movlw	low _puerto
  1369  00265E  6E07               	movwf	memcmp@vl^0,c
  1370  002660  0E00               	movlw	high _puerto
  1371  002662  6E08               	movwf	(memcmp@vl+1)^0,c
  1372  002664  0E2E               	movlw	low STR_12
  1373  002666  6E09               	movwf	memcmp@vr^0,c
  1374  002668  0E08               	movlw	high STR_12
  1375  00266A  6E0A               	movwf	(memcmp@vr+1)^0,c
  1376  00266C  0E00               	movlw	0
  1377  00266E  6E0C               	movwf	(memcmp@n+1)^0,c
  1378  002670  0E0C               	movlw	12
  1379  002672  6E0B               	movwf	memcmp@n^0,c
  1380  002674  EC1E  F018         	call	_memcmp	;wreg free
  1381  002678  5007               	movf	?_memcmp^0,w,c
  1382  00267A  1008               	iorwf	(?_memcmp+1)^0,w,c
  1383  00267C  A4D8               	btfss	status,2,c
  1384  00267E  EF43  F013         	goto	u4321
  1385  002682  EF45  F013         	goto	u4320
  1386  002686                     u4321:
  1387  002686  EF6C  F013         	goto	l4819
  1388  00268A                     u4320:
  1389  00268A                     
  1390                           ;UART.c: 44:     {;UART.c: 45:         memset(puerto,0,sizeof(puerto));
  1391  00268A  0E84               	movlw	low _puerto
  1392  00268C  6E07               	movwf	memset@dest^0,c
  1393  00268E  0E00               	movlw	high _puerto
  1394  002690  6E08               	movwf	(memset@dest+1)^0,c
  1395  002692  0E00               	movlw	0
  1396  002694  6E0A               	movwf	(memset@c+1)^0,c
  1397  002696  0E00               	movlw	0
  1398  002698  6E09               	movwf	memset@c^0,c
  1399  00269A  0E00               	movlw	0
  1400  00269C  6E0C               	movwf	(memset@n+1)^0,c
  1401  00269E  0E08               	movlw	8
  1402  0026A0  6E0B               	movwf	memset@n^0,c
  1403  0026A2  EC6D  F010         	call	_memset	;wreg free
  1404  0026A6                     
  1405                           ;UART.c: 46:         PIE1bits.RCIE = 1;
  1406  0026A6  8A9D               	bsf	157,5,c	;volatile
  1407  0026A8                     
  1408                           ;UART.c: 47:         datos.state = 10;
  1409  0026A8  0E0A               	movlw	10
  1410  0026AA  0100               	movlb	0	; () banked
  1411  0026AC  6FC3               	movwf	(_datos+3)& (0+255),b
  1412  0026AE                     
  1413                           ; BSR set to: 0
  1414                           ;UART.c: 48:         datos.nextFunc = sendinformation;
  1415  0026AE  0E8A               	movlw	low _sendinformation
  1416  0026B0  6FD7               	movwf	(_datos+23)& (0+255),b
  1417  0026B2  0E2D               	movlw	high _sendinformation
  1418  0026B4  6FD8               	movwf	(_datos+24)& (0+255),b
  1419  0026B6                     
  1420                           ; BSR set to: 0
  1421                           ;UART.c: 49:         (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1422  0026B6  0E01               	movlw	1
  1423  0026B8  EC81  F012         	call	_Lcd_Cmd
  1424  0026BC  0E02               	movlw	2
  1425  0026BE  6E14               	movwf	(??_readUART+1)^0,c
  1426  0026C0  0E86               	movlw	134
  1427  0026C2  6E13               	movwf	??_readUART^0,c
  1428  0026C4  0E99               	movlw	153
  1429  0026C6                     u4477:
  1430  0026C6  2EE8               	decfsz	wreg,f,c
  1431  0026C8  D7FE               	bra	u4477
  1432  0026CA  2E13               	decfsz	??_readUART^0,f,c
  1433  0026CC  D7FC               	bra	u4477
  1434  0026CE  2E14               	decfsz	(??_readUART+1)^0,f,c
  1435  0026D0  D7FA               	bra	u4477
  1436  0026D2  F000               	nop	
  1437                           
  1438                           ;UART.c: 50:     }
  1439  0026D4  EFA7  F013         	goto	l430
  1440  0026D8                     l4819:
  1441  0026D8  0E84               	movlw	low _puerto
  1442  0026DA  6E07               	movwf	memcmp@vl^0,c
  1443  0026DC  0E00               	movlw	high _puerto
  1444  0026DE  6E08               	movwf	(memcmp@vl+1)^0,c
  1445  0026E0  0E60               	movlw	low STR_14
  1446  0026E2  6E09               	movwf	memcmp@vr^0,c
  1447  0026E4  0E08               	movlw	high STR_14
  1448  0026E6  6E0A               	movwf	(memcmp@vr+1)^0,c
  1449  0026E8  0E00               	movlw	0
  1450  0026EA  6E0C               	movwf	(memcmp@n+1)^0,c
  1451  0026EC  0E09               	movlw	9
  1452  0026EE  6E0B               	movwf	memcmp@n^0,c
  1453  0026F0  EC1E  F018         	call	_memcmp	;wreg free
  1454  0026F4  5007               	movf	?_memcmp^0,w,c
  1455  0026F6  1008               	iorwf	(?_memcmp+1)^0,w,c
  1456  0026F8  A4D8               	btfss	status,2,c
  1457  0026FA  EF81  F013         	goto	u4331
  1458  0026FE  EF83  F013         	goto	u4330
  1459  002702                     u4331:
  1460  002702  EFA7  F013         	goto	l430
  1461  002706                     u4330:
  1462  002706                     
  1463                           ;UART.c: 52:     {;UART.c: 53:         (Lcd_Cmd(1),_delay((unsigned long)((100)*(1200000
      +                          0/4000.0))));
  1464  002706  0E01               	movlw	1
  1465  002708  EC81  F012         	call	_Lcd_Cmd
  1466  00270C  0E02               	movlw	2
  1467  00270E  6E14               	movwf	(??_readUART+1)^0,c
  1468  002710  0E86               	movlw	134
  1469  002712  6E13               	movwf	??_readUART^0,c
  1470  002714  0E99               	movlw	153
  1471  002716                     u4487:
  1472  002716  2EE8               	decfsz	wreg,f,c
  1473  002718  D7FE               	bra	u4487
  1474  00271A  2E13               	decfsz	??_readUART^0,f,c
  1475  00271C  D7FC               	bra	u4487
  1476  00271E  2E14               	decfsz	(??_readUART+1)^0,f,c
  1477  002720  D7FA               	bra	u4487
  1478  002722  F000               	nop	
  1479  002724                     
  1480                           ;UART.c: 54:         memset(puerto,0,sizeof(puerto));
  1481  002724  0E84               	movlw	low _puerto
  1482  002726  6E07               	movwf	memset@dest^0,c
  1483  002728  0E00               	movlw	high _puerto
  1484  00272A  6E08               	movwf	(memset@dest+1)^0,c
  1485  00272C  0E00               	movlw	0
  1486  00272E  6E0A               	movwf	(memset@c+1)^0,c
  1487  002730  0E00               	movlw	0
  1488  002732  6E09               	movwf	memset@c^0,c
  1489  002734  0E00               	movlw	0
  1490  002736  6E0C               	movwf	(memset@n+1)^0,c
  1491  002738  0E08               	movlw	8
  1492  00273A  6E0B               	movwf	memset@n^0,c
  1493  00273C  EC6D  F010         	call	_memset	;wreg free
  1494  002740                     
  1495                           ;UART.c: 55:         datos.state = 0;
  1496  002740  0E00               	movlw	0
  1497  002742  0100               	movlb	0	; () banked
  1498  002744  6FC3               	movwf	(_datos+3)& (0+255),b
  1499  002746                     
  1500                           ; BSR set to: 0
  1501                           ;UART.c: 56:         datos.nextFunc = appStateRecolectData;
  1502  002746  0EDA               	movlw	low _appStateRecolectData
  1503  002748  6FD7               	movwf	(_datos+23)& (0+255),b
  1504  00274A  0E30               	movlw	high _appStateRecolectData
  1505  00274C  6FD8               	movwf	(_datos+24)& (0+255),b
  1506  00274E                     l430:
  1507  00274E  0012               	return		;funcret
  1508  002750                     __end_of_readUART:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _appGetElements *****************
  1512 ;; Defined at:
  1513 ;;		line 70 in file "app.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1529 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1530 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1531 ;;Total ram usage:        2 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:   11
  1534 ;; This function calls:
  1535 ;;		_Lcd_Cmd
  1536 ;;		_appSubGetData
  1537 ;;		_appSubGiveElemts
  1538 ;;		_appTimerStart
  1539 ;;		_appTimerStop
  1540 ;; This function is called by:
  1541 ;;		_isrL
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text4
  1547  0031F0                     __ptext4:
  1548                           	callstack 0
  1549  0031F0                     _appGetElements:
  1550                           	callstack 19
  1551  0031F0                     
  1552                           ;app.c: 72:     datos.state = 2;
  1553  0031F0  0E02               	movlw	2
  1554  0031F2  0100               	movlb	0	; () banked
  1555  0031F4  6FC3               	movwf	(_datos+3)& (0+255),b
  1556  0031F6                     
  1557                           ; BSR set to: 0
  1558                           ;app.c: 73:     appTimerStop();
  1559  0031F6  EC52  F01C         	call	_appTimerStop	;wreg free
  1560  0031FA                     
  1561                           ;app.c: 74:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1562  0031FA  0E01               	movlw	1
  1563  0031FC  EC81  F012         	call	_Lcd_Cmd
  1564  003200  0E02               	movlw	2
  1565  003202  0100               	movlb	0	; () banked
  1566  003204  6FBE               	movwf	(??_appGetElements+1)& (0+255),b
  1567  003206  0E86               	movlw	134
  1568  003208  6FBD               	movwf	??_appGetElements& (0+255),b
  1569  00320A  0E99               	movlw	153
  1570  00320C                     u4497:
  1571  00320C  2EE8               	decfsz	wreg,f,c
  1572  00320E  D7FE               	bra	u4497
  1573  003210  2FBD               	decfsz	??_appGetElements& (0+255),f,b
  1574  003212  D7FC               	bra	u4497
  1575  003214  2FBE               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1576  003216  D7FA               	bra	u4497
  1577  003218                     
  1578                           ;app.c: 75:     appSubGetData(&datos);
  1579  003218  0EC0               	movlw	low _datos
  1580  00321A  0100               	movlb	0	; () banked
  1581  00321C  6FB8               	movwf	appSubGetData@data_Inout& (0+255),b
  1582  00321E  0E00               	movlw	high _datos
  1583  003220  6FB9               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1584  003222  ECBA  F014         	call	_appSubGetData	;wreg free
  1585  003226                     
  1586                           ;app.c: 76:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1587  003226  0E01               	movlw	1
  1588  003228  EC81  F012         	call	_Lcd_Cmd
  1589  00322C  0E02               	movlw	2
  1590  00322E  0100               	movlb	0	; () banked
  1591  003230  6FBE               	movwf	(??_appGetElements+1)& (0+255),b
  1592  003232  0E86               	movlw	134
  1593  003234  6FBD               	movwf	??_appGetElements& (0+255),b
  1594  003236  0E99               	movlw	153
  1595  003238                     u4507:
  1596  003238  2EE8               	decfsz	wreg,f,c
  1597  00323A  D7FE               	bra	u4507
  1598  00323C  2FBD               	decfsz	??_appGetElements& (0+255),f,b
  1599  00323E  D7FC               	bra	u4507
  1600  003240  2FBE               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1601  003242  D7FA               	bra	u4507
  1602  003244                     
  1603                           ;app.c: 77:     appSubGiveElemts(&datos);
  1604  003244  0EC0               	movlw	low _datos
  1605  003246  6E0F               	movwf	appSubGiveElemts@data^0,c
  1606  003248  0E00               	movlw	high _datos
  1607  00324A  6E10               	movwf	(appSubGiveElemts@data+1)^0,c
  1608  00324C  EC36  F01C         	call	_appSubGiveElemts	;wreg free
  1609  003250                     
  1610                           ;app.c: 78:     datos.nextFunc = appStateInitial;
  1611  003250  0E88               	movlw	low _appStateInitial
  1612  003252  0100               	movlb	0	; () banked
  1613  003254  6FD7               	movwf	(_datos+23)& (0+255),b
  1614  003256  0E35               	movlw	high _appStateInitial
  1615  003258  6FD8               	movwf	(_datos+24)& (0+255),b
  1616  00325A                     
  1617                           ; BSR set to: 0
  1618                           ;app.c: 79:     appTimerStart();
  1619  00325A  EC41  F01C         	call	_appTimerStart	;wreg free
  1620  00325E  0012               	return		;funcret
  1621  003260                     __end_of_appGetElements:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _appStateRecolectData *****************
  1625 ;; Defined at:
  1626 ;;		line 35 in file "app.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:   11
  1647 ;; This function calls:
  1648 ;;		_appADC
  1649 ;;		_appBat
  1650 ;;		_appCounterStop
  1651 ;;		_appElemts
  1652 ;;		_setServo
  1653 ;; This function is called by:
  1654 ;;		_isrL
  1655 ;;		_readUART
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text5
  1661  0030DA                     __ptext5:
  1662                           	callstack 0
  1663  0030DA                     _appStateRecolectData:
  1664                           	callstack 19
  1665  0030DA                     
  1666                           ;app.c: 37:     appADC(&datos);
  1667  0030DA  0EC0               	movlw	low _datos
  1668  0030DC  0100               	movlb	0	; () banked
  1669  0030DE  6FB8               	movwf	appADC@data& (0+255),b
  1670  0030E0  0E00               	movlw	high _datos
  1671  0030E2  6FB9               	movwf	(appADC@data+1)& (0+255),b
  1672  0030E4  EC0A  F00E         	call	_appADC	;wreg free
  1673                           
  1674                           ;app.c: 38:     appBat(&datos);
  1675  0030E8  0EC0               	movlw	low _datos
  1676  0030EA  0100               	movlb	0	; () banked
  1677  0030EC  6FB8               	movwf	appBat@data& (0+255),b
  1678  0030EE  0E00               	movlw	high _datos
  1679  0030F0  6FB9               	movwf	(appBat@data+1)& (0+255),b
  1680  0030F2  EC3C  F00C         	call	_appBat	;wreg free
  1681                           
  1682                           ;app.c: 40:     appElemts(&datos);
  1683  0030F6  0EC0               	movlw	low _datos
  1684  0030F8  0100               	movlb	0	; () banked
  1685  0030FA  6FB8               	movwf	appElemts@data& (0+255),b
  1686  0030FC  0E00               	movlw	high _datos
  1687  0030FE  6FB9               	movwf	(appElemts@data+1)& (0+255),b
  1688  003100  EC67  F019         	call	_appElemts	;wreg free
  1689  003104                     
  1690                           ;app.c: 41:     if(datos.state == 2)
  1691  003104  0E02               	movlw	2
  1692  003106  0100               	movlb	0	; () banked
  1693  003108  19C3               	xorwf	(_datos+3)& (0+255),w,b
  1694  00310A  A4D8               	btfss	status,2,c
  1695  00310C  EF8A  F018         	goto	u4301
  1696  003110  EF8C  F018         	goto	u4300
  1697  003114                     u4301:
  1698  003114  EFB0  F018         	goto	l4759
  1699  003118                     u4300:
  1700  003118                     
  1701                           ; BSR set to: 0
  1702                           ;app.c: 42:     {;app.c: 43:         if(datos.elements == TMR0)
  1703  003118  50D6               	movf	214,w,c	;volatile
  1704  00311A  19C1               	xorwf	(_datos+1)& (0+255),w,b
  1705  00311C  E107               	bnz	u4311
  1706  00311E  50D7               	movf	215,w,c	;volatile
  1707  003120  19C2               	xorwf	(_datos+2)& (0+255),w,b
  1708  003122  A4D8               	btfss	status,2,c
  1709  003124  EF96  F018         	goto	u4311
  1710  003128  EF98  F018         	goto	u4310
  1711  00312C                     u4311:
  1712  00312C  EFB0  F018         	goto	l4759
  1713  003130                     u4310:
  1714  003130                     
  1715                           ; BSR set to: 0
  1716                           ;app.c: 44:         {;app.c: 45:             datos.elements = (int16_t)TMR0;
  1717  003130  CFD6 F0C1          	movff	4054,_datos+1	;volatile
  1718  003134  CFD7 F0C2          	movff	4055,_datos+2	;volatile
  1719  003138                     
  1720                           ; BSR set to: 0
  1721                           ;app.c: 46:             appCounterStop();
  1722  003138  EC50  F01C         	call	_appCounterStop	;wreg free
  1723  00313C                     
  1724                           ;app.c: 47:             datos.state = 0;
  1725  00313C  0E00               	movlw	0
  1726  00313E  0100               	movlb	0	; () banked
  1727  003140  6FC3               	movwf	(_datos+3)& (0+255),b
  1728  003142                     
  1729                           ; BSR set to: 0
  1730                           ;app.c: 48:             setServo(33,10,2);
  1731  003142  0E0A               	movlw	10
  1732  003144  6E0B               	movwf	setServo@pulsos^0,c
  1733  003146  0E02               	movlw	2
  1734  003148  6E0C               	movwf	setServo@pin^0,c
  1735  00314A  0E21               	movlw	33
  1736  00314C  ECF5  F01B         	call	_setServo
  1737  003150                     
  1738                           ;app.c: 49:             LATAbits.LA5 = 0;
  1739  003150  9A89               	bcf	137,5,c	;volatile
  1740  003152                     
  1741                           ;app.c: 50:             setServo(45,10,0);
  1742  003152  0E0A               	movlw	10
  1743  003154  6E0B               	movwf	setServo@pulsos^0,c
  1744  003156  0E00               	movlw	0
  1745  003158  6E0C               	movwf	setServo@pin^0,c
  1746  00315A  0E2D               	movlw	45
  1747  00315C  ECF5  F01B         	call	_setServo
  1748  003160                     l4759:
  1749                           
  1750                           ;app.c: 53:     datos.nextFunc = appStateInitial;
  1751  003160  0E88               	movlw	low _appStateInitial
  1752  003162  0100               	movlb	0	; () banked
  1753  003164  6FD7               	movwf	(_datos+23)& (0+255),b
  1754  003166  0E35               	movlw	high _appStateInitial
  1755  003168  6FD8               	movwf	(_datos+24)& (0+255),b
  1756  00316A                     
  1757                           ; BSR set to: 0
  1758  00316A  0012               	return		;funcret
  1759  00316C                     __end_of_appStateRecolectData:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _confirmacion *****************
  1763 ;; Defined at:
  1764 ;;		line 122 in file "app.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         0       0       0       0       0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1781 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:        2 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    4
  1785 ;; This function calls:
  1786 ;;		_Lcd_Cmd
  1787 ;;		_Lcd_Out
  1788 ;;		_appTimerStart
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text6
  1795  0034F4                     __ptext6:
  1796                           	callstack 0
  1797  0034F4                     _confirmacion:
  1798                           	callstack 26
  1799  0034F4                     
  1800                           ;app.c: 124:     Lcd_Out(1,0, (const int8_t*)"Confirmacion");
  1801  0034F4  0E00               	movlw	0
  1802  0034F6  6E0A               	movwf	Lcd_Out@x^0,c
  1803  0034F8  0E3B               	movlw	low STR_10
  1804  0034FA  6E0B               	movwf	Lcd_Out@buffer^0,c
  1805  0034FC  0E08               	movlw	high STR_10
  1806  0034FE  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1807  003500  0E01               	movlw	1
  1808  003502  EC39  F015         	call	_Lcd_Out
  1809  003506                     l4311:
  1810  003506  0E08               	movlw	8
  1811  003508  0100               	movlb	0	; () banked
  1812  00350A  19C3               	xorwf	(_datos+3)& (0+255),w,b
  1813  00350C  B4D8               	btfsc	status,2,c
  1814  00350E  EF8B  F01A         	goto	u3951
  1815  003512  EF8D  F01A         	goto	u3950
  1816  003516                     u3951:
  1817  003516  EF83  F01A         	goto	l4311
  1818  00351A                     u3950:
  1819  00351A                     
  1820                           ; BSR set to: 0
  1821                           ;app.c: 126:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1822  00351A  0E01               	movlw	1
  1823  00351C  EC81  F012         	call	_Lcd_Cmd
  1824  003520  0E02               	movlw	2
  1825  003522  6E12               	movwf	(??_confirmacion+1)^0,c
  1826  003524  0E86               	movlw	134
  1827  003526  6E11               	movwf	??_confirmacion^0,c
  1828  003528  0E99               	movlw	153
  1829  00352A                     u4517:
  1830  00352A  2EE8               	decfsz	wreg,f,c
  1831  00352C  D7FE               	bra	u4517
  1832  00352E  2E11               	decfsz	??_confirmacion^0,f,c
  1833  003530  D7FC               	bra	u4517
  1834  003532  2E12               	decfsz	(??_confirmacion+1)^0,f,c
  1835  003534  D7FA               	bra	u4517
  1836  003536  F000               	nop	
  1837  003538                     
  1838                           ;app.c: 127:     appTimerStart();
  1839  003538  EC41  F01C         	call	_appTimerStart	;wreg free
  1840  00353C  0012               	return		;funcret
  1841  00353E                     __end_of_confirmacion:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function _warning *****************
  1845 ;; Defined at:
  1846 ;;		line 111 in file "app.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1862 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1863 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1864 ;;Total ram usage:        2 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    4
  1867 ;; This function calls:
  1868 ;;		_Lcd_Cmd
  1869 ;;		_Lcd_Out
  1870 ;;		_appTimerStart
  1871 ;;		_appTimerStop
  1872 ;;		_setServo
  1873 ;; This function is called by:
  1874 ;;		_isrH
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text7
  1880  003260                     __ptext7:
  1881                           	callstack 0
  1882  003260                     _warning:
  1883                           	callstack 26
  1884  003260                     
  1885                           ;app.c: 113:     appTimerStop();
  1886  003260  EC52  F01C         	call	_appTimerStop	;wreg free
  1887  003264                     
  1888                           ;app.c: 114:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1889  003264  0E01               	movlw	1
  1890  003266  EC81  F012         	call	_Lcd_Cmd
  1891  00326A  0E02               	movlw	2
  1892  00326C  6E12               	movwf	(??_warning+1)^0,c
  1893  00326E  0E86               	movlw	134
  1894  003270  6E11               	movwf	??_warning^0,c
  1895  003272  0E99               	movlw	153
  1896  003274                     u4527:
  1897  003274  2EE8               	decfsz	wreg,f,c
  1898  003276  D7FE               	bra	u4527
  1899  003278  2E11               	decfsz	??_warning^0,f,c
  1900  00327A  D7FC               	bra	u4527
  1901  00327C  2E12               	decfsz	(??_warning+1)^0,f,c
  1902  00327E  D7FA               	bra	u4527
  1903  003280  F000               	nop	
  1904  003282                     
  1905                           ;app.c: 115:     Lcd_Out(1,0, (const int8_t*)"Sin vacunas");
  1906  003282  0E00               	movlw	0
  1907  003284  6E0A               	movwf	Lcd_Out@x^0,c
  1908  003286  0E48               	movlw	low STR_8
  1909  003288  6E0B               	movwf	Lcd_Out@buffer^0,c
  1910  00328A  0E08               	movlw	high STR_8
  1911  00328C  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1912  00328E  0E01               	movlw	1
  1913  003290  EC39  F015         	call	_Lcd_Out
  1914  003294                     
  1915                           ;app.c: 116:     Lcd_Out(2,0, (const int8_t*)"Recarga Porfavor");
  1916  003294  0E00               	movlw	0
  1917  003296  6E0A               	movwf	Lcd_Out@x^0,c
  1918  003298  0E01               	movlw	low STR_9
  1919  00329A  6E0B               	movwf	Lcd_Out@buffer^0,c
  1920  00329C  0E08               	movlw	high STR_9
  1921  00329E  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  1922  0032A0  0E02               	movlw	2
  1923  0032A2  EC39  F015         	call	_Lcd_Out
  1924  0032A6                     
  1925                           ;app.c: 117:     setServo(45,10,1);
  1926  0032A6  0E0A               	movlw	10
  1927  0032A8  6E0B               	movwf	setServo@pulsos^0,c
  1928  0032AA  0E01               	movlw	1
  1929  0032AC  6E0C               	movwf	setServo@pin^0,c
  1930  0032AE  0E2D               	movlw	45
  1931  0032B0  ECF5  F01B         	call	_setServo
  1932  0032B4                     l4305:
  1933  0032B4  0E0A               	movlw	10
  1934  0032B6  0100               	movlb	0	; () banked
  1935  0032B8  19C3               	xorwf	(_datos+3)& (0+255),w,b
  1936  0032BA  B4D8               	btfsc	status,2,c
  1937  0032BC  EF62  F019         	goto	u3941
  1938  0032C0  EF64  F019         	goto	u3940
  1939  0032C4                     u3941:
  1940  0032C4  EF5A  F019         	goto	l4305
  1941  0032C8                     u3940:
  1942  0032C8                     
  1943                           ; BSR set to: 0
  1944                           ;app.c: 119:     appTimerStart();
  1945  0032C8  EC41  F01C         	call	_appTimerStart	;wreg free
  1946  0032CC  0012               	return		;funcret
  1947  0032CE                     __end_of_warning:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _sendData *****************
  1951 ;; Defined at:
  1952 ;;		line 61 in file "UART.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  data            2   10[COMRAM] PTR struct _state
  1955 ;;		 -> datos(25), 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  i               1   14[COMRAM] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1967 ;;      Params:         2       0       0       0       0       0       0       0       0
  1968 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1969 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1970 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1971 ;;Total ram usage:        5 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    3
  1974 ;; This function calls:
  1975 ;;		_strlen
  1976 ;; This function is called by:
  1977 ;;		_sendinformation
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text8
  1982  003334                     __ptext8:
  1983                           	callstack 0
  1984  003334                     _sendData:
  1985                           	callstack 26
  1986  003334                     
  1987                           ;UART.c: 61: void sendData(StateMachine *data);UART.c: 62: {;UART.c: 63:     for(uint8_t
      +                           i = 0; i < strlen((const char *)data->display);)
  1988  003334  0E00               	movlw	0
  1989  003336  6E0F               	movwf	sendData@i^0,c
  1990  003338  EFB4  F019         	goto	l4211
  1991  00333C                     l434:
  1992                           
  1993                           ;UART.c: 64:         {;UART.c: 65:             if(TXSTAbits.TRMT == 1)
  1994  00333C  A2AC               	btfss	172,1,c	;volatile
  1995  00333E  EFA3  F019         	goto	u3851
  1996  003342  EFA5  F019         	goto	u3850
  1997  003346                     u3851:
  1998  003346  EFB4  F019         	goto	l4211
  1999  00334A                     u3850:
  2000  00334A                     
  2001                           ;UART.c: 66:             {;UART.c: 67:                 TXREG = data->display[i];
  2002  00334A  500F               	movf	sendData@i^0,w,c
  2003  00334C  240B               	addwf	sendData@data^0,w,c
  2004  00334E  6E0D               	movwf	??_sendData^0,c
  2005  003350  0E00               	movlw	0
  2006  003352  200C               	addwfc	(sendData@data+1)^0,w,c
  2007  003354  6E0E               	movwf	(??_sendData+1)^0,c
  2008  003356  0E07               	movlw	7
  2009  003358  240D               	addwf	??_sendData^0,w,c
  2010  00335A  6ED9               	movwf	fsr2l,c
  2011  00335C  0E00               	movlw	0
  2012  00335E  200E               	addwfc	(??_sendData+1)^0,w,c
  2013  003360  6EDA               	movwf	fsr2h,c
  2014  003362  50DF               	movf	indf2,w,c
  2015  003364  6EAD               	movwf	173,c	;volatile
  2016  003366                     
  2017                           ;UART.c: 68:                 i++;
  2018  003366  2A0F               	incf	sendData@i^0,f,c
  2019  003368                     l4211:
  2020  003368  0E07               	movlw	7
  2021  00336A  240B               	addwf	sendData@data^0,w,c
  2022  00336C  6E07               	movwf	strlen@s^0,c
  2023  00336E  0E00               	movlw	0
  2024  003370  200C               	addwfc	(sendData@data+1)^0,w,c
  2025  003372  6E08               	movwf	(strlen@s+1)^0,c
  2026  003374  ECA9  F01B         	call	_strlen	;wreg free
  2027  003378  500F               	movf	sendData@i^0,w,c
  2028  00337A  6E0D               	movwf	??_sendData^0,c
  2029  00337C  6A0E               	clrf	(??_sendData+1)^0,c
  2030  00337E  5007               	movf	?_strlen^0,w,c
  2031  003380  5C0D               	subwf	??_sendData^0,w,c
  2032  003382  5008               	movf	(?_strlen+1)^0,w,c
  2033  003384  580E               	subwfb	(??_sendData+1)^0,w,c
  2034  003386  A0D8               	btfss	status,0,c
  2035  003388  EFC8  F019         	goto	u3861
  2036  00338C  EFCA  F019         	goto	u3860
  2037  003390                     u3861:
  2038  003390  EF9E  F019         	goto	l434
  2039  003394                     u3860:
  2040  003394  0012               	return		;funcret
  2041  003396                     __end_of_sendData:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _memcmp *****************
  2045 ;; Defined at:
  2046 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memcmp.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  vl              2    6[COMRAM] PTR const void 
  2049 ;;		 -> puerto(16), 
  2050 ;;  vr              2    8[COMRAM] PTR const void 
  2051 ;;		 -> STR_15(10), STR_13(13), 
  2052 ;;  n               2   10[COMRAM] unsigned int 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  r               2   15[COMRAM] PTR const unsigned char 
  2055 ;;		 -> STR_15(10), STR_13(13), 
  2056 ;;  l               2   13[COMRAM] PTR const unsigned char 
  2057 ;;		 -> puerto(16), 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  2    6[COMRAM] int 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2067 ;;      Params:         6       0       0       0       0       0       0       0       0
  2068 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2069 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2070 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2071 ;;Total ram usage:       11 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    2
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_readUART
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text9
  2082  00303C                     __ptext9:
  2083                           	callstack 0
  2084  00303C                     _memcmp:
  2085                           	callstack 27
  2086  00303C  C007  F00E         	movff	memcmp@vl,memcmp@l
  2087  003040  C008  F00F         	movff	memcmp@vl+1,memcmp@l+1
  2088  003044  C009  F010         	movff	memcmp@vr,memcmp@r
  2089  003048  C00A  F011         	movff	memcmp@vr+1,memcmp@r+1
  2090  00304C  EF2F  F018         	goto	l4217
  2091  003050                     l4215:
  2092  003050  060B               	decf	memcmp@n^0,f,c
  2093  003052  A0D8               	btfss	status,0,c
  2094  003054  060C               	decf	(memcmp@n+1)^0,f,c
  2095  003056  4A0E               	infsnz	memcmp@l^0,f,c
  2096  003058  2A0F               	incf	(memcmp@l+1)^0,f,c
  2097  00305A  4A10               	infsnz	memcmp@r^0,f,c
  2098  00305C  2A11               	incf	(memcmp@r+1)^0,f,c
  2099  00305E                     l4217:
  2100  00305E  500B               	movf	memcmp@n^0,w,c
  2101  003060  100C               	iorwf	(memcmp@n+1)^0,w,c
  2102  003062  B4D8               	btfsc	status,2,c
  2103  003064  EF36  F018         	goto	u3871
  2104  003068  EF38  F018         	goto	u3870
  2105  00306C                     u3871:
  2106  00306C  EF4C  F018         	goto	l4221
  2107  003070                     u3870:
  2108  003070  C00E  FFD9         	movff	memcmp@l,fsr2l
  2109  003074  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2110  003078  50DF               	movf	indf2,w,c
  2111  00307A  6E0D               	movwf	??_memcmp^0,c
  2112  00307C  C010  FFF6         	movff	memcmp@r,tblptrl
  2113  003080  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2114  003084                     	if	0	;tblptru may be non-zero
  2115  003084                     	endif
  2116  003084                     	if	0	;tblptru may be non-zero
  2117  003084                     	endif
  2118  003084  0008               	tblrd		*
  2119  003086  50F5               	movf	tablat,w,c
  2120  003088  180D               	xorwf	??_memcmp^0,w,c
  2121  00308A  B4D8               	btfsc	status,2,c
  2122  00308C  EF4A  F018         	goto	u3881
  2123  003090  EF4C  F018         	goto	u3880
  2124  003094                     u3881:
  2125  003094  EF28  F018         	goto	l4215
  2126  003098                     u3880:
  2127  003098                     l4221:
  2128  003098  500B               	movf	memcmp@n^0,w,c
  2129  00309A  100C               	iorwf	(memcmp@n+1)^0,w,c
  2130  00309C  A4D8               	btfss	status,2,c
  2131  00309E  EF53  F018         	goto	u3891
  2132  0030A2  EF55  F018         	goto	u3890
  2133  0030A6                     u3891:
  2134  0030A6  EF5B  F018         	goto	l4225
  2135  0030AA                     u3890:
  2136  0030AA  0E00               	movlw	0
  2137  0030AC  6E08               	movwf	(?_memcmp+1)^0,c
  2138  0030AE  0E00               	movlw	0
  2139  0030B0  6E07               	movwf	?_memcmp^0,c
  2140  0030B2  EF6C  F018         	goto	l1123
  2141  0030B6                     l4225:
  2142  0030B6  C00E  FFD9         	movff	memcmp@l,fsr2l
  2143  0030BA  C00F  FFDA         	movff	memcmp@l+1,fsr2h
  2144  0030BE  50DF               	movf	indf2,w,c
  2145  0030C0  6E0D               	movwf	??_memcmp^0,c
  2146  0030C2  C010  FFF6         	movff	memcmp@r,tblptrl
  2147  0030C6  C011  FFF7         	movff	memcmp@r+1,tblptrh
  2148  0030CA                     	if	0	;tblptru may be non-zero
  2149  0030CA                     	endif
  2150  0030CA                     	if	0	;tblptru may be non-zero
  2151  0030CA                     	endif
  2152  0030CA  0008               	tblrd		*
  2153  0030CC  50F5               	movf	tablat,w,c
  2154  0030CE  5C0D               	subwf	??_memcmp^0,w,c
  2155  0030D0  6E07               	movwf	?_memcmp^0,c
  2156  0030D2  6A08               	clrf	(?_memcmp+1)^0,c
  2157  0030D4  A0D8               	btfss	status,0,c
  2158  0030D6  0608               	decf	(?_memcmp+1)^0,f,c
  2159  0030D8                     l1123:
  2160  0030D8  0012               	return		;funcret
  2161  0030DA                     __end_of_memcmp:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _appElemts *****************
  2165 ;; Defined at:
  2166 ;;		line 154 in file "servo.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  data            2   36[BANK0 ] PTR struct _state
  2169 ;;		 -> datos(25), 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2181 ;;      Params:         0       2       0       0       0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2184 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2185 ;;Total ram usage:        2 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:   10
  2188 ;; This function calls:
  2189 ;;		_Lcd_Out
  2190 ;;		_memset
  2191 ;;		_sprintf
  2192 ;; This function is called by:
  2193 ;;		_appStateRecolectData
  2194 ;;		_sendinformation
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text10
  2199  0032CE                     __ptext10:
  2200                           	callstack 0
  2201  0032CE                     _appElemts:
  2202                           	callstack 19
  2203  0032CE                     
  2204                           ;servo.c: 154: void appElemts(StateMachine *data);servo.c: 155: {;servo.c: 157:     mems
      +                          et(data->display,0,sizeof(data->display));
  2205  0032CE  0E07               	movlw	7
  2206  0032D0  0100               	movlb	0	; () banked
  2207  0032D2  25B8               	addwf	appElemts@data& (0+255),w,b
  2208  0032D4  6E07               	movwf	memset@dest^0,c
  2209  0032D6  0E00               	movlw	0
  2210  0032D8  21B9               	addwfc	(appElemts@data+1)& (0+255),w,b
  2211  0032DA  6E08               	movwf	(memset@dest+1)^0,c
  2212  0032DC  0E00               	movlw	0
  2213  0032DE  6E0A               	movwf	(memset@c+1)^0,c
  2214  0032E0  0E00               	movlw	0
  2215  0032E2  6E09               	movwf	memset@c^0,c
  2216  0032E4  0E00               	movlw	0
  2217  0032E6  6E0C               	movwf	(memset@n+1)^0,c
  2218  0032E8  0E10               	movlw	16
  2219  0032EA  6E0B               	movwf	memset@n^0,c
  2220  0032EC  EC6D  F010         	call	_memset	;wreg free
  2221  0032F0                     
  2222                           ;servo.c: 158:     sprintf((char *)data->display,"#:%d",(256 - (TMR0)));
  2223  0032F0  0E07               	movlw	7
  2224  0032F2  0100               	movlb	0	; () banked
  2225  0032F4  25B8               	addwf	appElemts@data& (0+255),w,b
  2226  0032F6  6FA6               	movwf	sprintf@s& (0+255),b
  2227  0032F8  0E00               	movlw	0
  2228  0032FA  21B9               	addwfc	(appElemts@data+1)& (0+255),w,b
  2229  0032FC  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2230  0032FE  0E79               	movlw	low STR_5
  2231  003300  6FA8               	movwf	sprintf@fmt& (0+255),b
  2232  003302  0E08               	movlw	high STR_5
  2233  003304  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  2234  003306  50D6               	movf	214,w,c	;volatile
  2235  003308  0800               	sublw	0
  2236  00330A  6FAA               	movwf	(?_sprintf+4)& (0+255),b
  2237  00330C  50D7               	movf	215,w,c	;volatile
  2238  00330E  A0D8               	btfss	status,0,c
  2239  003310  2AE8               	incf	wreg,f,c
  2240  003312  0801               	sublw	1
  2241  003314  6FAB               	movwf	(?_sprintf+5)& (0+255),b
  2242  003316  EC28  F01A         	call	_sprintf	;wreg free
  2243  00331A                     
  2244                           ;servo.c: 159:     Lcd_Out(2,10, (int8_t*)data->display);
  2245  00331A  0E0A               	movlw	10
  2246  00331C  6E0A               	movwf	Lcd_Out@x^0,c
  2247  00331E  0E07               	movlw	7
  2248  003320  0100               	movlb	0	; () banked
  2249  003322  25B8               	addwf	appElemts@data& (0+255),w,b
  2250  003324  6E0B               	movwf	Lcd_Out@buffer^0,c
  2251  003326  0E00               	movlw	0
  2252  003328  21B9               	addwfc	(appElemts@data+1)& (0+255),w,b
  2253  00332A  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2254  00332C  0E02               	movlw	2
  2255  00332E  EC39  F015         	call	_Lcd_Out
  2256  003332  0012               	return		;funcret
  2257  003334                     __end_of_appElemts:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _appCounterStop *****************
  2261 ;; Defined at:
  2262 ;;		line 148 in file "servo.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		None
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_appStateRecolectData
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text11
  2291  0038A0                     __ptext11:
  2292                           	callstack 0
  2293  0038A0                     _appCounterStop:
  2294                           	callstack 27
  2295  0038A0                     
  2296                           ;servo.c: 150:     T0CONbits.TMR0ON = 0;
  2297  0038A0  9ED5               	bcf	213,7,c	;volatile
  2298  0038A2  0012               	return		;funcret
  2299  0038A4                     __end_of_appCounterStop:
  2300                           	callstack 0
  2301                           
  2302 ;; *************** function _appBat *****************
  2303 ;; Defined at:
  2304 ;;		line 73 in file "adc.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  data            2   36[BANK0 ] PTR struct _state
  2307 ;;		 -> datos(25), 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2319 ;;      Params:         0       2       0       0       0       0       0       0       0
  2320 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2321 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2322 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2323 ;;Total ram usage:        8 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:   10
  2326 ;; This function calls:
  2327 ;;		_Lcd_Out
  2328 ;;		___fldiv
  2329 ;;		___flmul
  2330 ;;		___fltol
  2331 ;;		___xxtofl
  2332 ;;		_adcGetValue
  2333 ;;		_memset
  2334 ;;		_sprintf
  2335 ;; This function is called by:
  2336 ;;		_appStateRecolectData
  2337 ;;		_sendinformation
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text12
  2342  001878                     __ptext12:
  2343                           	callstack 0
  2344  001878                     _appBat:
  2345                           	callstack 19
  2346  001878                     
  2347                           ;adc.c: 73: void appBat(StateMachine *data);adc.c: 74: {;adc.c: 75:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2348  001878  0E07               	movlw	7
  2349  00187A  0100               	movlb	0	; () banked
  2350  00187C  25B8               	addwf	appBat@data& (0+255),w,b
  2351  00187E  6E07               	movwf	memset@dest^0,c
  2352  001880  0E00               	movlw	0
  2353  001882  21B9               	addwfc	(appBat@data+1)& (0+255),w,b
  2354  001884  6E08               	movwf	(memset@dest+1)^0,c
  2355  001886  0E00               	movlw	0
  2356  001888  6E0A               	movwf	(memset@c+1)^0,c
  2357  00188A  0E00               	movlw	0
  2358  00188C  6E09               	movwf	memset@c^0,c
  2359  00188E  0E00               	movlw	0
  2360  001890  6E0C               	movwf	(memset@n+1)^0,c
  2361  001892  0E10               	movlw	16
  2362  001894  6E0B               	movwf	memset@n^0,c
  2363  001896  EC6D  F010         	call	_memset	;wreg free
  2364                           
  2365                           ;adc.c: 80:     data->bat = adcGetValue(1);
  2366  00189A  0E01               	movlw	1
  2367  00189C  EC6F  F01B         	call	_adcGetValue
  2368  0018A0  0100               	movlb	0	; () banked
  2369  0018A2  EE20 F004          	lfsr	2,4
  2370  0018A6  51B8               	movf	appBat@data& (0+255),w,b
  2371  0018A8  26D9               	addwf	fsr2l,f,c
  2372  0018AA  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2373  0018AC  22DA               	addwfc	fsr2h,f,c
  2374  0018AE  C007  FFDE         	movff	?_adcGetValue,postinc2
  2375  0018B2  C008  FFDD         	movff	?_adcGetValue+1,postdec2
  2376  0018B6                     
  2377                           ; BSR set to: 0
  2378                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2379  0018B6  0E00               	movlw	0
  2380  0018B8  6E36               	movwf	___fldiv@a^0,c
  2381  0018BA  0E00               	movlw	0
  2382  0018BC  6E37               	movwf	(___fldiv@a+1)^0,c
  2383  0018BE  0E80               	movlw	128
  2384  0018C0  6E38               	movwf	(___fldiv@a+2)^0,c
  2385  0018C2  0E44               	movlw	68
  2386  0018C4  6E39               	movwf	(___fldiv@a+3)^0,c
  2387  0018C6  0E00               	movlw	0
  2388  0018C8  6E1D               	movwf	___flmul@a^0,c
  2389  0018CA  0E00               	movlw	0
  2390  0018CC  6E1E               	movwf	(___flmul@a+1)^0,c
  2391  0018CE  0EA0               	movlw	160
  2392  0018D0  6E1F               	movwf	(___flmul@a+2)^0,c
  2393  0018D2  0E40               	movlw	64
  2394  0018D4  6E20               	movwf	(___flmul@a+3)^0,c
  2395  0018D6  EE20 F004          	lfsr	2,4
  2396  0018DA  51B8               	movf	appBat@data& (0+255),w,b
  2397  0018DC  26D9               	addwf	fsr2l,f,c
  2398  0018DE  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2399  0018E0  22DA               	addwfc	fsr2h,f,c
  2400  0018E2  CFDE F0BA          	movff	postinc2,??_appBat
  2401  0018E6  CFDD F0BB          	movff	postdec2,??_appBat+1
  2402  0018EA  C0BA  F00B         	movff	??_appBat,___xxtofl@val
  2403  0018EE  C0BB  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2404  0018F2  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2405  0018F4  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2406  0018F6  0E00               	movlw	0
  2407  0018F8  EC30  F00D         	call	___xxtofl
  2408  0018FC  C00B  F019         	movff	?___xxtofl,___flmul@b
  2409  001900  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2410  001904  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2411  001908  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2412  00190C  EC40  F004         	call	___flmul	;wreg free
  2413  001910  C019  F032         	movff	?___flmul,___fldiv@b
  2414  001914  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2415  001918  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2416  00191C  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2417  001920  EC55  F006         	call	___fldiv	;wreg free
  2418  001924  C032  F0BC         	movff	?___fldiv,_appBat$2655
  2419  001928  C033  F0BD         	movff	?___fldiv+1,_appBat$2655+1
  2420  00192C  C034  F0BE         	movff	?___fldiv+2,_appBat$2655+2
  2421  001930  C035  F0BF         	movff	?___fldiv+3,_appBat$2655+3
  2422  001934                     
  2423                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  2424  001934  0E00               	movlw	0
  2425  001936  6E1D               	movwf	___flmul@a^0,c
  2426  001938  0E00               	movlw	0
  2427  00193A  6E1E               	movwf	(___flmul@a+1)^0,c
  2428  00193C  0EC8               	movlw	200
  2429  00193E  6E1F               	movwf	(___flmul@a+2)^0,c
  2430  001940  0E42               	movlw	66
  2431  001942  6E20               	movwf	(___flmul@a+3)^0,c
  2432  001944  C0BC  F019         	movff	_appBat$2655,___flmul@b
  2433  001948  C0BD  F01A         	movff	_appBat$2655+1,___flmul@b+1
  2434  00194C  C0BE  F01B         	movff	_appBat$2655+2,___flmul@b+2
  2435  001950  C0BF  F01C         	movff	_appBat$2655+3,___flmul@b+3
  2436  001954  EC40  F004         	call	___flmul	;wreg free
  2437  001958  C019  F04B         	movff	?___flmul,___fltol@f1
  2438  00195C  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2439  001960  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2440  001964  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2441  001968  EC36  F014         	call	___fltol	;wreg free
  2442  00196C  0100               	movlb	0	; () banked
  2443  00196E  EE20 F004          	lfsr	2,4
  2444  001972  51B8               	movf	appBat@data& (0+255),w,b
  2445  001974  26D9               	addwf	fsr2l,f,c
  2446  001976  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2447  001978  22DA               	addwfc	fsr2h,f,c
  2448  00197A  C04B  FFDE         	movff	?___fltol,postinc2
  2449  00197E  C04C  FFDD         	movff	?___fltol+1,postdec2
  2450  001982                     
  2451                           ; BSR set to: 0
  2452                           ;adc.c: 82:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  2453  001982  0E00               	movlw	0
  2454  001984  6E36               	movwf	___fldiv@a^0,c
  2455  001986  0E00               	movlw	0
  2456  001988  6E37               	movwf	(___fldiv@a+1)^0,c
  2457  00198A  0EFA               	movlw	250
  2458  00198C  6E38               	movwf	(___fldiv@a+2)^0,c
  2459  00198E  0E43               	movlw	67
  2460  001990  6E39               	movwf	(___fldiv@a+3)^0,c
  2461  001992  0E00               	movlw	0
  2462  001994  6E1D               	movwf	___flmul@a^0,c
  2463  001996  0E00               	movlw	0
  2464  001998  6E1E               	movwf	(___flmul@a+1)^0,c
  2465  00199A  0EC8               	movlw	200
  2466  00199C  6E1F               	movwf	(___flmul@a+2)^0,c
  2467  00199E  0E42               	movlw	66
  2468  0019A0  6E20               	movwf	(___flmul@a+3)^0,c
  2469  0019A2  EE20 F004          	lfsr	2,4
  2470  0019A6  51B8               	movf	appBat@data& (0+255),w,b
  2471  0019A8  26D9               	addwf	fsr2l,f,c
  2472  0019AA  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2473  0019AC  22DA               	addwfc	fsr2h,f,c
  2474  0019AE  CFDE F0BA          	movff	postinc2,??_appBat
  2475  0019B2  CFDD F0BB          	movff	postdec2,??_appBat+1
  2476  0019B6  C0BA  F00B         	movff	??_appBat,___xxtofl@val
  2477  0019BA  C0BB  F00C         	movff	??_appBat+1,___xxtofl@val+1
  2478  0019BE  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2479  0019C0  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2480  0019C2  0E00               	movlw	0
  2481  0019C4  EC30  F00D         	call	___xxtofl
  2482  0019C8  C00B  F019         	movff	?___xxtofl,___flmul@b
  2483  0019CC  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  2484  0019D0  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  2485  0019D4  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  2486  0019D8  EC40  F004         	call	___flmul	;wreg free
  2487  0019DC  C019  F032         	movff	?___flmul,___fldiv@b
  2488  0019E0  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2489  0019E4  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2490  0019E8  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2491  0019EC  EC55  F006         	call	___fldiv	;wreg free
  2492  0019F0  C032  F04B         	movff	?___fldiv,___fltol@f1
  2493  0019F4  C033  F04C         	movff	?___fldiv+1,___fltol@f1+1
  2494  0019F8  C034  F04D         	movff	?___fldiv+2,___fltol@f1+2
  2495  0019FC  C035  F04E         	movff	?___fldiv+3,___fltol@f1+3
  2496  001A00  EC36  F014         	call	___fltol	;wreg free
  2497  001A04  0100               	movlb	0	; () banked
  2498  001A06  EE20 F004          	lfsr	2,4
  2499  001A0A  51B8               	movf	appBat@data& (0+255),w,b
  2500  001A0C  26D9               	addwf	fsr2l,f,c
  2501  001A0E  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2502  001A10  22DA               	addwfc	fsr2h,f,c
  2503  001A12  C04B  FFDE         	movff	?___fltol,postinc2
  2504  001A16  C04C  FFDD         	movff	?___fltol+1,postdec2
  2505  001A1A                     
  2506                           ; BSR set to: 0
  2507                           ;adc.c: 83:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  2508  001A1A  0E07               	movlw	7
  2509  001A1C  25B8               	addwf	appBat@data& (0+255),w,b
  2510  001A1E  6FA6               	movwf	sprintf@s& (0+255),b
  2511  001A20  0E00               	movlw	0
  2512  001A22  21B9               	addwfc	(appBat@data+1)& (0+255),w,b
  2513  001A24  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2514  001A26  0E6A               	movlw	low STR_2
  2515  001A28  6FA8               	movwf	sprintf@fmt& (0+255),b
  2516  001A2A  0E08               	movlw	high STR_2
  2517  001A2C  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  2518  001A2E  EE20 F004          	lfsr	2,4
  2519  001A32  51B8               	movf	appBat@data& (0+255),w,b
  2520  001A34  26D9               	addwf	fsr2l,f,c
  2521  001A36  51B9               	movf	(appBat@data+1)& (0+255),w,b
  2522  001A38  22DA               	addwfc	fsr2h,f,c
  2523  001A3A  CFDE F0AA          	movff	postinc2,?_sprintf+4
  2524  001A3E  CFDD F0AB          	movff	postdec2,?_sprintf+5
  2525  001A42  EC28  F01A         	call	_sprintf	;wreg free
  2526  001A46                     
  2527                           ;adc.c: 84:     Lcd_Out(2,0, (int8_t*)data->display);
  2528  001A46  0E00               	movlw	0
  2529  001A48  6E0A               	movwf	Lcd_Out@x^0,c
  2530  001A4A  0E07               	movlw	7
  2531  001A4C  0100               	movlb	0	; () banked
  2532  001A4E  25B8               	addwf	appBat@data& (0+255),w,b
  2533  001A50  6E0B               	movwf	Lcd_Out@buffer^0,c
  2534  001A52  0E00               	movlw	0
  2535  001A54  21B9               	addwfc	(appBat@data+1)& (0+255),w,b
  2536  001A56  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2537  001A58  0E02               	movlw	2
  2538  001A5A  EC39  F015         	call	_Lcd_Out
  2539  001A5E  0012               	return		;funcret
  2540  001A60                     __end_of_appBat:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _appADC *****************
  2544 ;; Defined at:
  2545 ;;		line 55 in file "adc.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  data            2   36[BANK0 ] PTR struct _state
  2548 ;;		 -> datos(25), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  lm35val         4   38[BANK0 ] float 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2560 ;;      Params:         0       2       0       0       0       0       0       0       0
  2561 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2563 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2564 ;;Total ram usage:        6 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:   10
  2567 ;; This function calls:
  2568 ;;		_Lcd_Out
  2569 ;;		___awmod
  2570 ;;		___fldiv
  2571 ;;		___flmul
  2572 ;;		___fltol
  2573 ;;		___xxtofl
  2574 ;;		_adcGetValue
  2575 ;;		_memset
  2576 ;;		_sprintf
  2577 ;; This function is called by:
  2578 ;;		_appStateRecolectData
  2579 ;;		_sendinformation
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text13
  2584  001C14                     __ptext13:
  2585                           	callstack 0
  2586  001C14                     _appADC:
  2587                           	callstack 19
  2588  001C14                     
  2589                           ;adc.c: 55: void appADC(StateMachine *data);adc.c: 56: {;adc.c: 57:     memset(data->dis
      +                          play,0,sizeof(data->display));
  2590  001C14  0E07               	movlw	7
  2591  001C16  0100               	movlb	0	; () banked
  2592  001C18  25B8               	addwf	appADC@data& (0+255),w,b
  2593  001C1A  6E07               	movwf	memset@dest^0,c
  2594  001C1C  0E00               	movlw	0
  2595  001C1E  21B9               	addwfc	(appADC@data+1)& (0+255),w,b
  2596  001C20  6E08               	movwf	(memset@dest+1)^0,c
  2597  001C22  0E00               	movlw	0
  2598  001C24  6E0A               	movwf	(memset@c+1)^0,c
  2599  001C26  0E00               	movlw	0
  2600  001C28  6E09               	movwf	memset@c^0,c
  2601  001C2A  0E00               	movlw	0
  2602  001C2C  6E0C               	movwf	(memset@n+1)^0,c
  2603  001C2E  0E10               	movlw	16
  2604  001C30  6E0B               	movwf	memset@n^0,c
  2605  001C32  EC6D  F010         	call	_memset	;wreg free
  2606  001C36                     
  2607                           ;adc.c: 58:     float lm35val = adcGetValue(0);
  2608  001C36  0E00               	movlw	0
  2609  001C38  EC6F  F01B         	call	_adcGetValue
  2610  001C3C  C007  F00B         	movff	?_adcGetValue,___xxtofl@val
  2611  001C40  C008  F00C         	movff	?_adcGetValue+1,___xxtofl@val+1
  2612  001C44  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2613  001C46  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2614  001C48  0E00               	movlw	0
  2615  001C4A  EC30  F00D         	call	___xxtofl
  2616  001C4E  C00B  F0BA         	movff	?___xxtofl,appADC@lm35val
  2617  001C52  C00C  F0BB         	movff	?___xxtofl+1,appADC@lm35val+1
  2618  001C56  C00D  F0BC         	movff	?___xxtofl+2,appADC@lm35val+2
  2619  001C5A  C00E  F0BD         	movff	?___xxtofl+3,appADC@lm35val+3
  2620  001C5E                     
  2621                           ;adc.c: 59:     lm35val = (float)((lm35val*4.88)/10.0);
  2622  001C5E  0EF6               	movlw	246
  2623  001C60  6E1D               	movwf	___flmul@a^0,c
  2624  001C62  0E28               	movlw	40
  2625  001C64  6E1E               	movwf	(___flmul@a+1)^0,c
  2626  001C66  0E9C               	movlw	156
  2627  001C68  6E1F               	movwf	(___flmul@a+2)^0,c
  2628  001C6A  0E40               	movlw	64
  2629  001C6C  6E20               	movwf	(___flmul@a+3)^0,c
  2630  001C6E  C0BA  F019         	movff	appADC@lm35val,___flmul@b
  2631  001C72  C0BB  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2632  001C76  C0BC  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2633  001C7A  C0BD  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2634  001C7E  EC40  F004         	call	___flmul	;wreg free
  2635  001C82  C019  F032         	movff	?___flmul,___fldiv@b
  2636  001C86  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  2637  001C8A  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  2638  001C8E  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  2639  001C92  0E00               	movlw	0
  2640  001C94  6E36               	movwf	___fldiv@a^0,c
  2641  001C96  0E00               	movlw	0
  2642  001C98  6E37               	movwf	(___fldiv@a+1)^0,c
  2643  001C9A  0E20               	movlw	32
  2644  001C9C  6E38               	movwf	(___fldiv@a+2)^0,c
  2645  001C9E  0E41               	movlw	65
  2646  001CA0  6E39               	movwf	(___fldiv@a+3)^0,c
  2647  001CA2  EC55  F006         	call	___fldiv	;wreg free
  2648  001CA6  C032  F0BA         	movff	?___fldiv,appADC@lm35val
  2649  001CAA  C033  F0BB         	movff	?___fldiv+1,appADC@lm35val+1
  2650  001CAE  C034  F0BC         	movff	?___fldiv+2,appADC@lm35val+2
  2651  001CB2  C035  F0BD         	movff	?___fldiv+3,appADC@lm35val+3
  2652  001CB6                     
  2653                           ;adc.c: 61:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  2654  001CB6  0E07               	movlw	7
  2655  001CB8  0100               	movlb	0	; () banked
  2656  001CBA  25B8               	addwf	appADC@data& (0+255),w,b
  2657  001CBC  6FA6               	movwf	sprintf@s& (0+255),b
  2658  001CBE  0E00               	movlw	0
  2659  001CC0  21B9               	addwfc	(appADC@data+1)& (0+255),w,b
  2660  001CC2  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  2661  001CC4  0E20               	movlw	low STR_1
  2662  001CC6  6FA8               	movwf	sprintf@fmt& (0+255),b
  2663  001CC8  0E08               	movlw	high STR_1
  2664  001CCA  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  2665  001CCC  C0BA  F04B         	movff	appADC@lm35val,___fltol@f1
  2666  001CD0  C0BB  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2667  001CD4  C0BC  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2668  001CD8  C0BD  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2669  001CDC  EC36  F014         	call	___fltol	;wreg free
  2670  001CE0  504B               	movf	?___fltol^0,w,c
  2671  001CE2  0100               	movlb	0	; () banked
  2672  001CE4  6FAA               	movwf	(?_sprintf+4)& (0+255),b
  2673  001CE6  6BAB               	clrf	(?_sprintf+5)& (0+255),b
  2674  001CE8  0E00               	movlw	0
  2675  001CEA  6E1D               	movwf	___flmul@a^0,c
  2676  001CEC  0E00               	movlw	0
  2677  001CEE  6E1E               	movwf	(___flmul@a+1)^0,c
  2678  001CF0  0EC8               	movlw	200
  2679  001CF2  6E1F               	movwf	(___flmul@a+2)^0,c
  2680  001CF4  0E42               	movlw	66
  2681  001CF6  6E20               	movwf	(___flmul@a+3)^0,c
  2682  001CF8  C0BA  F019         	movff	appADC@lm35val,___flmul@b
  2683  001CFC  C0BB  F01A         	movff	appADC@lm35val+1,___flmul@b+1
  2684  001D00  C0BC  F01B         	movff	appADC@lm35val+2,___flmul@b+2
  2685  001D04  C0BD  F01C         	movff	appADC@lm35val+3,___flmul@b+3
  2686  001D08  EC40  F004         	call	___flmul	;wreg free
  2687  001D0C  C019  F04B         	movff	?___flmul,___fltol@f1
  2688  001D10  C01A  F04C         	movff	?___flmul+1,___fltol@f1+1
  2689  001D14  C01B  F04D         	movff	?___flmul+2,___fltol@f1+2
  2690  001D18  C01C  F04E         	movff	?___flmul+3,___fltol@f1+3
  2691  001D1C  EC36  F014         	call	___fltol	;wreg free
  2692  001D20  504B               	movf	?___fltol^0,w,c
  2693  001D22  0100               	movlb	0	; () banked
  2694  001D24  6F96               	movwf	___awmod@dividend& (0+255),b
  2695  001D26  6B97               	clrf	(___awmod@dividend+1)& (0+255),b
  2696  001D28  0E00               	movlw	0
  2697  001D2A  6F99               	movwf	(___awmod@divisor+1)& (0+255),b
  2698  001D2C  0E64               	movlw	100
  2699  001D2E  6F98               	movwf	___awmod@divisor& (0+255),b
  2700  001D30  EC21  F017         	call	___awmod	;wreg free
  2701  001D34  0100               	movlb	0	; () banked
  2702  001D36  5196               	movf	?___awmod& (0+255),w,b
  2703  001D38  6FAC               	movwf	(?_sprintf+6)& (0+255),b
  2704  001D3A  6BAD               	clrf	(?_sprintf+7)& (0+255),b
  2705  001D3C  EC28  F01A         	call	_sprintf	;wreg free
  2706  001D40                     
  2707                           ;adc.c: 62:     Lcd_Out(1,0, (int8_t*)data->display);
  2708  001D40  0E00               	movlw	0
  2709  001D42  6E0A               	movwf	Lcd_Out@x^0,c
  2710  001D44  0E07               	movlw	7
  2711  001D46  0100               	movlb	0	; () banked
  2712  001D48  25B8               	addwf	appADC@data& (0+255),w,b
  2713  001D4A  6E0B               	movwf	Lcd_Out@buffer^0,c
  2714  001D4C  0E00               	movlw	0
  2715  001D4E  21B9               	addwfc	(appADC@data+1)& (0+255),w,b
  2716  001D50  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  2717  001D52  0E01               	movlw	1
  2718  001D54  EC39  F015         	call	_Lcd_Out
  2719                           
  2720                           ;adc.c: 63:     if(((int)lm35val < 2))
  2721  001D58  C0BA  F04B         	movff	appADC@lm35val,___fltol@f1
  2722  001D5C  C0BB  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2723  001D60  C0BC  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2724  001D64  C0BD  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2725  001D68  EC36  F014         	call	___fltol	;wreg free
  2726  001D6C  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2727  001D6E  EFC4  F00E         	goto	u4250
  2728  001D72  504C               	movf	(?___fltol+1)^0,w,c
  2729  001D74  E107               	bnz	u4251
  2730  001D76  0E02               	movlw	2
  2731  001D78  5C4B               	subwf	?___fltol^0,w,c
  2732  001D7A  B0D8               	btfsc	status,0,c
  2733  001D7C  EFC2  F00E         	goto	u4251
  2734  001D80  EFC4  F00E         	goto	u4250
  2735  001D84                     u4251:
  2736  001D84  EFC7  F00E         	goto	l4697
  2737  001D88                     u4250:
  2738  001D88                     
  2739                           ;adc.c: 64:     {;adc.c: 65:         LATCbits.LATC1 = 0;
  2740  001D88  928B               	bcf	139,1,c	;volatile
  2741                           
  2742                           ;adc.c: 66:     }
  2743  001D8A  EFE0  F00E         	goto	l39
  2744  001D8E                     l4697:
  2745  001D8E  C0BA  F04B         	movff	appADC@lm35val,___fltol@f1
  2746  001D92  C0BB  F04C         	movff	appADC@lm35val+1,___fltol@f1+1
  2747  001D96  C0BC  F04D         	movff	appADC@lm35val+2,___fltol@f1+2
  2748  001D9A  C0BD  F04E         	movff	appADC@lm35val+3,___fltol@f1+3
  2749  001D9E  EC36  F014         	call	___fltol	;wreg free
  2750  001DA2  BE4C               	btfsc	(?___fltol+1)^0,7,c
  2751  001DA4  EFDD  F00E         	goto	u4261
  2752  001DA8  504C               	movf	(?___fltol+1)^0,w,c
  2753  001DAA  E109               	bnz	u4260
  2754  001DAC  0E07               	movlw	7
  2755  001DAE  5C4B               	subwf	?___fltol^0,w,c
  2756  001DB0  A0D8               	btfss	status,0,c
  2757  001DB2  EFDD  F00E         	goto	u4261
  2758  001DB6  EFDF  F00E         	goto	u4260
  2759  001DBA                     u4261:
  2760  001DBA  EFE0  F00E         	goto	l39
  2761  001DBE                     u4260:
  2762  001DBE                     
  2763                           ;adc.c: 68:     {;adc.c: 69:         LATCbits.LATC1 = 1;
  2764  001DBE  828B               	bsf	139,1,c	;volatile
  2765  001DC0                     l39:
  2766  001DC0  0012               	return		;funcret
  2767  001DC2                     __end_of_appADC:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _adcGetValue *****************
  2771 ;; Defined at:
  2772 ;;		line 44 in file "adc.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  PinADC          1    wreg     unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  PinADC          1    9[COMRAM] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  2    6[COMRAM] unsigned short 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2786 ;;      Params:         2       0       0       0       0       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2788 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2789 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2790 ;;Total ram usage:        4 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    2
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_appADC
  2797 ;;		_appBat
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text14
  2802  0036DE                     __ptext14:
  2803                           	callstack 0
  2804  0036DE                     _adcGetValue:
  2805                           	callstack 26
  2806                           
  2807                           ;incstack = 0
  2808                           ;adcGetValue@PinADC stored from wreg
  2809  0036DE  6E0A               	movwf	adcGetValue@PinADC^0,c
  2810  0036E0                     
  2811                           ;adc.c: 44: uint16_t adcGetValue(uint8_t PinADC);adc.c: 45: {;adc.c: 46:     ADCON0bits.
      +                          CHS = PinADC;
  2812  0036E0  C00A  F009         	movff	adcGetValue@PinADC,??_adcGetValue
  2813  0036E4  4609               	rlncf	??_adcGetValue^0,f,c
  2814  0036E6  4609               	rlncf	??_adcGetValue^0,f,c
  2815  0036E8  50C2               	movf	194,w,c	;volatile
  2816  0036EA  1809               	xorwf	??_adcGetValue^0,w,c
  2817  0036EC  0BC3               	andlw	-61
  2818  0036EE  1809               	xorwf	??_adcGetValue^0,w,c
  2819  0036F0  6EC2               	movwf	194,c	;volatile
  2820  0036F2                     
  2821                           ;adc.c: 47:     _delay((unsigned long)((2)*(12000000/4000.0)));
  2822  0036F2  0E08               	movlw	8
  2823  0036F4  6E09               	movwf	??_adcGetValue^0,c
  2824  0036F6  0ECA               	movlw	202
  2825  0036F8                     u4537:
  2826  0036F8  2EE8               	decfsz	wreg,f,c
  2827  0036FA  D7FE               	bra	u4537
  2828  0036FC  2E09               	decfsz	??_adcGetValue^0,f,c
  2829  0036FE  D7FC               	bra	u4537
  2830  003700                     
  2831                           ;adc.c: 48:     GO_nDONE = 1;
  2832  003700  82C2               	bsf	4034,1,c	;volatile
  2833  003702                     l30:
  2834                           
  2835                           ;adc.c: 49:     while(ADCON0bits.GO_DONE)
  2836  003702  B2C2               	btfsc	194,1,c	;volatile
  2837  003704  EF86  F01B         	goto	u2811
  2838  003708  EF88  F01B         	goto	u2810
  2839  00370C                     u2811:
  2840  00370C  EF81  F01B         	goto	l30
  2841  003710                     u2810:
  2842  003710                     
  2843                           ;adc.c: 52:     return ADRES;
  2844  003710  CFC3 F007          	movff	4035,?_adcGetValue	;volatile
  2845  003714  CFC4 F008          	movff	4036,?_adcGetValue+1	;volatile
  2846  003718  0012               	return		;funcret
  2847  00371A                     __end_of_adcGetValue:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function ___xxtofl *****************
  2851 ;; Defined at:
  2852 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  sign            1    wreg     unsigned char 
  2855 ;;  val             4   10[COMRAM] long 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  sign            1   18[COMRAM] unsigned char 
  2858 ;;  arg             4   20[COMRAM] unsigned long 
  2859 ;;  exp             1   19[COMRAM] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  4   10[COMRAM] unsigned char 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2869 ;;      Params:         4       0       0       0       0       0       0       0       0
  2870 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2871 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2872 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2873 ;;Total ram usage:       14 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    2
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_appADC
  2880 ;;		_appBat
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text15
  2885  001A60                     __ptext15:
  2886                           	callstack 0
  2887  001A60                     ___xxtofl:
  2888                           	callstack 26
  2889                           
  2890                           ;incstack = 0
  2891                           ;___xxtofl@sign stored from wreg
  2892  001A60  6E13               	movwf	___xxtofl@sign^0,c
  2893  001A62  5013               	movf	___xxtofl@sign^0,w,c
  2894  001A64  B4D8               	btfsc	status,2,c
  2895  001A66  EF37  F00D         	goto	u3681
  2896  001A6A  EF39  F00D         	goto	u3680
  2897  001A6E                     u3681:
  2898  001A6E  EF5B  F00D         	goto	l1095
  2899  001A72                     u3680:
  2900  001A72  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  2901  001A74  EF40  F00D         	goto	u3690
  2902  001A78  EF3E  F00D         	goto	u3691
  2903  001A7C                     u3691:
  2904  001A7C  EF5B  F00D         	goto	l1095
  2905  001A80                     u3690:
  2906  001A80  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  2907  001A84  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  2908  001A88  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  2909  001A8C  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  2910  001A90  1E0F               	comf	??___xxtofl^0,f,c
  2911  001A92  1E10               	comf	(??___xxtofl+1)^0,f,c
  2912  001A94  1E11               	comf	(??___xxtofl+2)^0,f,c
  2913  001A96  1E12               	comf	(??___xxtofl+3)^0,f,c
  2914  001A98  2A0F               	incf	??___xxtofl^0,f,c
  2915  001A9A  0E00               	movlw	0
  2916  001A9C  2210               	addwfc	(??___xxtofl+1)^0,f,c
  2917  001A9E  2211               	addwfc	(??___xxtofl+2)^0,f,c
  2918  001AA0  2212               	addwfc	(??___xxtofl+3)^0,f,c
  2919  001AA2  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  2920  001AA6  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  2921  001AAA  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  2922  001AAE  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  2923  001AB2  EF63  F00D         	goto	l3993
  2924  001AB6                     l1095:
  2925  001AB6  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  2926  001ABA  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2927  001ABE  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2928  001AC2  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2929  001AC6                     l3993:
  2930  001AC6  500B               	movf	___xxtofl@val^0,w,c
  2931  001AC8  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  2932  001ACA  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  2933  001ACC  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  2934  001ACE  A4D8               	btfss	status,2,c
  2935  001AD0  EF6C  F00D         	goto	u3701
  2936  001AD4  EF6E  F00D         	goto	u3700
  2937  001AD8                     u3701:
  2938  001AD8  EF78  F00D         	goto	l3999
  2939  001ADC                     u3700:
  2940  001ADC  0E00               	movlw	0
  2941  001ADE  6E0B               	movwf	?___xxtofl^0,c
  2942  001AE0  0E00               	movlw	0
  2943  001AE2  6E0C               	movwf	(?___xxtofl+1)^0,c
  2944  001AE4  0E00               	movlw	0
  2945  001AE6  6E0D               	movwf	(?___xxtofl+2)^0,c
  2946  001AE8  0E00               	movlw	0
  2947  001AEA  6E0E               	movwf	(?___xxtofl+3)^0,c
  2948  001AEC  EF09  F00E         	goto	l1098
  2949  001AF0                     l3999:
  2950  001AF0  0E96               	movlw	150
  2951  001AF2  6E14               	movwf	___xxtofl@exp^0,c
  2952  001AF4  EF82  F00D         	goto	l4003
  2953  001AF8                     l4001:
  2954  001AF8  2A14               	incf	___xxtofl@exp^0,f,c
  2955  001AFA  90D8               	bcf	status,0,c
  2956  001AFC  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2957  001AFE  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2958  001B00  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2959  001B02  3215               	rrcf	___xxtofl@arg^0,f,c
  2960  001B04                     l4003:
  2961  001B04  0E00               	movlw	0
  2962  001B06  1415               	andwf	___xxtofl@arg^0,w,c
  2963  001B08  6E0F               	movwf	??___xxtofl^0,c
  2964  001B0A  0E00               	movlw	0
  2965  001B0C  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  2966  001B0E  6E10               	movwf	(??___xxtofl+1)^0,c
  2967  001B10  0E00               	movlw	0
  2968  001B12  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  2969  001B14  6E11               	movwf	(??___xxtofl+2)^0,c
  2970  001B16  0EFE               	movlw	254
  2971  001B18  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  2972  001B1A  6E12               	movwf	(??___xxtofl+3)^0,c
  2973  001B1C  500F               	movf	??___xxtofl^0,w,c
  2974  001B1E  1010               	iorwf	(??___xxtofl+1)^0,w,c
  2975  001B20  1011               	iorwf	(??___xxtofl+2)^0,w,c
  2976  001B22  1012               	iorwf	(??___xxtofl+3)^0,w,c
  2977  001B24  A4D8               	btfss	status,2,c
  2978  001B26  EF97  F00D         	goto	u3711
  2979  001B2A  EF99  F00D         	goto	u3710
  2980  001B2E                     u3711:
  2981  001B2E  EF7C  F00D         	goto	l4001
  2982  001B32                     u3710:
  2983  001B32  EFA7  F00D         	goto	l1102
  2984  001B36                     l4005:
  2985  001B36  2A14               	incf	___xxtofl@exp^0,f,c
  2986  001B38  0E01               	movlw	1
  2987  001B3A  2615               	addwf	___xxtofl@arg^0,f,c
  2988  001B3C  0E00               	movlw	0
  2989  001B3E  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  2990  001B40  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  2991  001B42  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  2992  001B44  90D8               	bcf	status,0,c
  2993  001B46  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  2994  001B48  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  2995  001B4A  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  2996  001B4C  3215               	rrcf	___xxtofl@arg^0,f,c
  2997  001B4E                     l1102:
  2998  001B4E  0E00               	movlw	0
  2999  001B50  1415               	andwf	___xxtofl@arg^0,w,c
  3000  001B52  6E0F               	movwf	??___xxtofl^0,c
  3001  001B54  0E00               	movlw	0
  3002  001B56  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  3003  001B58  6E10               	movwf	(??___xxtofl+1)^0,c
  3004  001B5A  0E00               	movlw	0
  3005  001B5C  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  3006  001B5E  6E11               	movwf	(??___xxtofl+2)^0,c
  3007  001B60  0EFF               	movlw	255
  3008  001B62  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  3009  001B64  6E12               	movwf	(??___xxtofl+3)^0,c
  3010  001B66  500F               	movf	??___xxtofl^0,w,c
  3011  001B68  1010               	iorwf	(??___xxtofl+1)^0,w,c
  3012  001B6A  1011               	iorwf	(??___xxtofl+2)^0,w,c
  3013  001B6C  1012               	iorwf	(??___xxtofl+3)^0,w,c
  3014  001B6E  A4D8               	btfss	status,2,c
  3015  001B70  EFBC  F00D         	goto	u3721
  3016  001B74  EFBE  F00D         	goto	u3720
  3017  001B78                     u3721:
  3018  001B78  EF9B  F00D         	goto	l4005
  3019  001B7C                     u3720:
  3020  001B7C  EFC6  F00D         	goto	l4013
  3021  001B80                     l4011:
  3022  001B80  0614               	decf	___xxtofl@exp^0,f,c
  3023  001B82  90D8               	bcf	status,0,c
  3024  001B84  3615               	rlcf	___xxtofl@arg^0,f,c
  3025  001B86  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  3026  001B88  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  3027  001B8A  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  3028  001B8C                     l4013:
  3029  001B8C  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  3030  001B8E  EFCB  F00D         	goto	u3731
  3031  001B92  EFCD  F00D         	goto	u3730
  3032  001B96                     u3731:
  3033  001B96  EFD5  F00D         	goto	l1109
  3034  001B9A                     u3730:
  3035  001B9A  0E02               	movlw	2
  3036  001B9C  6014               	cpfslt	___xxtofl@exp^0,c
  3037  001B9E  EFD3  F00D         	goto	u3741
  3038  001BA2  EFD5  F00D         	goto	u3740
  3039  001BA6                     u3741:
  3040  001BA6  EFC0  F00D         	goto	l4011
  3041  001BAA                     u3740:
  3042  001BAA                     l1109:
  3043  001BAA  B014               	btfsc	___xxtofl@exp^0,0,c
  3044  001BAC  EFDA  F00D         	goto	u3751
  3045  001BB0  EFDC  F00D         	goto	u3750
  3046  001BB4                     u3751:
  3047  001BB4  EFDD  F00D         	goto	l4019
  3048  001BB8                     u3750:
  3049  001BB8  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  3050  001BBA                     l4019:
  3051  001BBA  90D8               	bcf	status,0,c
  3052  001BBC  3214               	rrcf	___xxtofl@exp^0,f,c
  3053  001BBE  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  3054  001BC2  6A10               	clrf	(??___xxtofl+1)^0,c
  3055  001BC4  6A11               	clrf	(??___xxtofl+2)^0,c
  3056  001BC6  6A12               	clrf	(??___xxtofl+3)^0,c
  3057  001BC8  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  3058  001BCC  6A11               	clrf	(??___xxtofl+2)^0,c
  3059  001BCE  6A10               	clrf	(??___xxtofl+1)^0,c
  3060  001BD0  6A0F               	clrf	??___xxtofl^0,c
  3061  001BD2  500F               	movf	??___xxtofl^0,w,c
  3062  001BD4  1215               	iorwf	___xxtofl@arg^0,f,c
  3063  001BD6  5010               	movf	(??___xxtofl+1)^0,w,c
  3064  001BD8  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  3065  001BDA  5011               	movf	(??___xxtofl+2)^0,w,c
  3066  001BDC  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  3067  001BDE  5012               	movf	(??___xxtofl+3)^0,w,c
  3068  001BE0  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  3069  001BE2  5013               	movf	___xxtofl@sign^0,w,c
  3070  001BE4  B4D8               	btfsc	status,2,c
  3071  001BE6  EFF7  F00D         	goto	u3761
  3072  001BEA  EFF9  F00D         	goto	u3760
  3073  001BEE                     u3761:
  3074  001BEE  EF01  F00E         	goto	l4029
  3075  001BF2                     u3760:
  3076  001BF2  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  3077  001BF4  EF00  F00E         	goto	u3770
  3078  001BF8  EFFE  F00D         	goto	u3771
  3079  001BFC                     u3771:
  3080  001BFC  EF01  F00E         	goto	l4029
  3081  001C00                     u3770:
  3082  001C00  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  3083  001C02                     l4029:
  3084  001C02  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  3085  001C06  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  3086  001C0A  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  3087  001C0E  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  3088  001C12                     l1098:
  3089  001C12  0012               	return		;funcret
  3090  001C14                     __end_of___xxtofl:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function ___fltol *****************
  3094 ;; Defined at:
  3095 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  f1              4   74[COMRAM] unsigned char 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  exp1            1    1[BANK0 ] unsigned char 
  3100 ;;  sign1           1    0[BANK0 ] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  4   74[COMRAM] long 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3110 ;;      Params:         4       0       0       0       0       0       0       0       0
  3111 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3112 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3113 ;;      Totals:         8       2       0       0       0       0       0       0       0
  3114 ;;Total ram usage:       10 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    2
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_appADC
  3121 ;;		_appBat
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text16
  3126  00286C                     __ptext16:
  3127                           	callstack 0
  3128  00286C                     ___fltol:
  3129                           	callstack 26
  3130  00286C  344D               	rlcf	(___fltol@f1+2)^0,w,c
  3131  00286E  344E               	rlcf	(___fltol@f1+3)^0,w,c
  3132  002870  0100               	movlb	0	; () banked
  3133  002872  6F95               	movwf	___fltol@exp1& (0+255),b
  3134  002874  5195               	movf	___fltol@exp1& (0+255),w,b
  3135  002876  A4D8               	btfss	status,2,c
  3136  002878  EF40  F014         	goto	u4181
  3137  00287C  EF42  F014         	goto	u4180
  3138  002880                     u4181:
  3139  002880  EF4C  F014         	goto	l4647
  3140  002884                     u4180:
  3141  002884                     l4643:
  3142                           
  3143                           ; BSR set to: 0
  3144  002884  0E00               	movlw	0
  3145  002886  6E4B               	movwf	?___fltol^0,c
  3146  002888  0E00               	movlw	0
  3147  00288A  6E4C               	movwf	(?___fltol+1)^0,c
  3148  00288C  0E00               	movlw	0
  3149  00288E  6E4D               	movwf	(?___fltol+2)^0,c
  3150  002890  0E00               	movlw	0
  3151  002892  6E4E               	movwf	(?___fltol+3)^0,c
  3152  002894  EFB9  F014         	goto	l737
  3153  002898                     l4647:
  3154                           
  3155                           ; BSR set to: 0
  3156  002898  C04B  F04F         	movff	___fltol@f1,??___fltol
  3157  00289C  C04C  F050         	movff	___fltol@f1+1,??___fltol+1
  3158  0028A0  C04D  F051         	movff	___fltol@f1+2,??___fltol+2
  3159  0028A4  C04E  F052         	movff	___fltol@f1+3,??___fltol+3
  3160  0028A8  0E20               	movlw	32
  3161  0028AA  EF5C  F014         	goto	u4190
  3162  0028AE                     u4195:
  3163  0028AE  90D8               	bcf	status,0,c
  3164  0028B0  3252               	rrcf	(??___fltol+3)^0,f,c
  3165  0028B2  3251               	rrcf	(??___fltol+2)^0,f,c
  3166  0028B4  3250               	rrcf	(??___fltol+1)^0,f,c
  3167  0028B6  324F               	rrcf	??___fltol^0,f,c
  3168  0028B8                     u4190:
  3169  0028B8  2EE8               	decfsz	wreg,f,c
  3170  0028BA  EF57  F014         	goto	u4195
  3171  0028BE  504F               	movf	??___fltol^0,w,c
  3172  0028C0  6F94               	movwf	___fltol@sign1& (0+255),b
  3173  0028C2                     
  3174                           ; BSR set to: 0
  3175  0028C2  8E4D               	bsf	(___fltol@f1+2)^0,7,c
  3176  0028C4                     
  3177                           ; BSR set to: 0
  3178  0028C4  0EFF               	movlw	255
  3179  0028C6  164B               	andwf	___fltol@f1^0,f,c
  3180  0028C8  0EFF               	movlw	255
  3181  0028CA  164C               	andwf	(___fltol@f1+1)^0,f,c
  3182  0028CC  0EFF               	movlw	255
  3183  0028CE  164D               	andwf	(___fltol@f1+2)^0,f,c
  3184  0028D0  0E00               	movlw	0
  3185  0028D2  164E               	andwf	(___fltol@f1+3)^0,f,c
  3186  0028D4                     
  3187                           ; BSR set to: 0
  3188  0028D4  0E96               	movlw	150
  3189  0028D6  5F95               	subwf	___fltol@exp1& (0+255),f,b
  3190  0028D8                     
  3191                           ; BSR set to: 0
  3192  0028D8  BF95               	btfsc	___fltol@exp1& (0+255),7,b
  3193  0028DA  EF73  F014         	goto	u4200
  3194  0028DE  EF71  F014         	goto	u4201
  3195  0028E2                     u4201:
  3196  0028E2  EF89  F014         	goto	l4667
  3197  0028E6                     u4200:
  3198  0028E6                     
  3199                           ; BSR set to: 0
  3200  0028E6  5195               	movf	___fltol@exp1& (0+255),w,b
  3201  0028E8  0A80               	xorlw	128
  3202  0028EA  0F97               	addlw	151
  3203  0028EC  B0D8               	btfsc	status,0,c
  3204  0028EE  EF7B  F014         	goto	u4211
  3205  0028F2  EF7D  F014         	goto	u4210
  3206  0028F6                     u4211:
  3207  0028F6  EF7F  F014         	goto	l4663
  3208  0028FA                     u4210:
  3209  0028FA  EF42  F014         	goto	l4643
  3210  0028FE                     l4663:
  3211                           
  3212                           ; BSR set to: 0
  3213  0028FE  90D8               	bcf	status,0,c
  3214  002900  324E               	rrcf	(___fltol@f1+3)^0,f,c
  3215  002902  324D               	rrcf	(___fltol@f1+2)^0,f,c
  3216  002904  324C               	rrcf	(___fltol@f1+1)^0,f,c
  3217  002906  324B               	rrcf	___fltol@f1^0,f,c
  3218  002908                     
  3219                           ; BSR set to: 0
  3220  002908  3F95               	incfsz	___fltol@exp1& (0+255),f,b
  3221  00290A  EF7F  F014         	goto	l4663
  3222  00290E  EFA1  F014         	goto	l4677
  3223  002912                     l4667:
  3224                           
  3225                           ; BSR set to: 0
  3226  002912  0E1F               	movlw	31
  3227  002914  6595               	cpfsgt	___fltol@exp1& (0+255),b
  3228  002916  EF8F  F014         	goto	u4221
  3229  00291A  EF91  F014         	goto	u4220
  3230  00291E                     u4221:
  3231  00291E  EF99  F014         	goto	l4675
  3232  002922                     u4220:
  3233  002922  EF42  F014         	goto	l4643
  3234  002926                     l4673:
  3235                           
  3236                           ; BSR set to: 0
  3237  002926  90D8               	bcf	status,0,c
  3238  002928  364B               	rlcf	___fltol@f1^0,f,c
  3239  00292A  364C               	rlcf	(___fltol@f1+1)^0,f,c
  3240  00292C  364D               	rlcf	(___fltol@f1+2)^0,f,c
  3241  00292E  364E               	rlcf	(___fltol@f1+3)^0,f,c
  3242  002930  0795               	decf	___fltol@exp1& (0+255),f,b
  3243  002932                     l4675:
  3244                           
  3245                           ; BSR set to: 0
  3246  002932  5195               	movf	___fltol@exp1& (0+255),w,b
  3247  002934  A4D8               	btfss	status,2,c
  3248  002936  EF9F  F014         	goto	u4231
  3249  00293A  EFA1  F014         	goto	u4230
  3250  00293E                     u4231:
  3251  00293E  EF93  F014         	goto	l4673
  3252  002942                     u4230:
  3253  002942                     l4677:
  3254                           
  3255                           ; BSR set to: 0
  3256  002942  5194               	movf	___fltol@sign1& (0+255),w,b
  3257  002944  B4D8               	btfsc	status,2,c
  3258  002946  EFA7  F014         	goto	u4241
  3259  00294A  EFA9  F014         	goto	u4240
  3260  00294E                     u4241:
  3261  00294E  EFB1  F014         	goto	l4681
  3262  002952                     u4240:
  3263  002952                     
  3264                           ; BSR set to: 0
  3265  002952  1E4E               	comf	(___fltol@f1+3)^0,f,c
  3266  002954  1E4D               	comf	(___fltol@f1+2)^0,f,c
  3267  002956  1E4C               	comf	(___fltol@f1+1)^0,f,c
  3268  002958  6C4B               	negf	___fltol@f1^0,c
  3269  00295A  0E00               	movlw	0
  3270  00295C  224C               	addwfc	(___fltol@f1+1)^0,f,c
  3271  00295E  224D               	addwfc	(___fltol@f1+2)^0,f,c
  3272  002960  224E               	addwfc	(___fltol@f1+3)^0,f,c
  3273  002962                     l4681:
  3274                           
  3275                           ; BSR set to: 0
  3276  002962  C04B  F04B         	movff	___fltol@f1,?___fltol
  3277  002966  C04C  F04C         	movff	___fltol@f1+1,?___fltol+1
  3278  00296A  C04D  F04D         	movff	___fltol@f1+2,?___fltol+2
  3279  00296E  C04E  F04E         	movff	___fltol@f1+3,?___fltol+3
  3280  002972                     l737:
  3281                           
  3282                           ; BSR set to: 0
  3283  002972  0012               	return		;funcret
  3284  002974                     __end_of___fltol:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function ___flmul *****************
  3288 ;; Defined at:
  3289 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  b               4   24[COMRAM] long 
  3292 ;;  a               4   28[COMRAM] long 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  prod            4   43[COMRAM] struct .
  3295 ;;  grs             4   37[COMRAM] unsigned long 
  3296 ;;  temp            2   47[COMRAM] struct .
  3297 ;;  bexp            1   42[COMRAM] unsigned char 
  3298 ;;  aexp            1   41[COMRAM] unsigned char 
  3299 ;;  sign            1   36[COMRAM] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  4   24[COMRAM] unsigned char 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, prodl, prodh
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3309 ;;      Params:         8       0       0       0       0       0       0       0       0
  3310 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3311 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3312 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3313 ;;Total ram usage:       25 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    2
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_appADC
  3320 ;;		_appBat
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text17
  3325  000880                     __ptext17:
  3326                           	callstack 0
  3327  000880                     ___flmul:
  3328                           	callstack 26
  3329  000880  501C               	movf	(___flmul@b+3)^0,w,c
  3330  000882  0B80               	andlw	128
  3331  000884  6E25               	movwf	___flmul@sign^0,c
  3332  000886  501C               	movf	(___flmul@b+3)^0,w,c
  3333  000888  241C               	addwf	(___flmul@b+3)^0,w,c
  3334  00088A  6E2B               	movwf	___flmul@bexp^0,c
  3335  00088C  AE1B               	btfss	(___flmul@b+2)^0,7,c
  3336  00088E  EF4B  F004         	goto	u3361
  3337  000892  EF4D  F004         	goto	u3360
  3338  000896                     u3361:
  3339  000896  EF4E  F004         	goto	l3783
  3340  00089A                     u3360:
  3341  00089A  802B               	bsf	___flmul@bexp^0,0,c
  3342  00089C                     l3783:
  3343  00089C  502B               	movf	___flmul@bexp^0,w,c
  3344  00089E  B4D8               	btfsc	status,2,c
  3345  0008A0  EF54  F004         	goto	u3371
  3346  0008A4  EF56  F004         	goto	u3370
  3347  0008A8                     u3371:
  3348  0008A8  EF69  F004         	goto	l3791
  3349  0008AC                     u3370:
  3350  0008AC  282B               	incf	___flmul@bexp^0,w,c
  3351  0008AE  A4D8               	btfss	status,2,c
  3352  0008B0  EF5C  F004         	goto	u3381
  3353  0008B4  EF5E  F004         	goto	u3380
  3354  0008B8                     u3381:
  3355  0008B8  EF66  F004         	goto	l3789
  3356  0008BC                     u3380:
  3357  0008BC  0E00               	movlw	0
  3358  0008BE  6E19               	movwf	___flmul@b^0,c
  3359  0008C0  0E00               	movlw	0
  3360  0008C2  6E1A               	movwf	(___flmul@b+1)^0,c
  3361  0008C4  0E00               	movlw	0
  3362  0008C6  6E1B               	movwf	(___flmul@b+2)^0,c
  3363  0008C8  0E00               	movlw	0
  3364  0008CA  6E1C               	movwf	(___flmul@b+3)^0,c
  3365  0008CC                     l3789:
  3366  0008CC  8E1B               	bsf	(___flmul@b+2)^0,7,c
  3367  0008CE  EF71  F004         	goto	l3793
  3368  0008D2                     l3791:
  3369  0008D2  0E00               	movlw	0
  3370  0008D4  6E19               	movwf	___flmul@b^0,c
  3371  0008D6  0E00               	movlw	0
  3372  0008D8  6E1A               	movwf	(___flmul@b+1)^0,c
  3373  0008DA  0E00               	movlw	0
  3374  0008DC  6E1B               	movwf	(___flmul@b+2)^0,c
  3375  0008DE  0E00               	movlw	0
  3376  0008E0  6E1C               	movwf	(___flmul@b+3)^0,c
  3377  0008E2                     l3793:
  3378  0008E2  5020               	movf	(___flmul@a+3)^0,w,c
  3379  0008E4  0B80               	andlw	128
  3380  0008E6  1A25               	xorwf	___flmul@sign^0,f,c
  3381  0008E8  5020               	movf	(___flmul@a+3)^0,w,c
  3382  0008EA  2420               	addwf	(___flmul@a+3)^0,w,c
  3383  0008EC  6E2A               	movwf	___flmul@aexp^0,c
  3384  0008EE  AE1F               	btfss	(___flmul@a+2)^0,7,c
  3385  0008F0  EF7C  F004         	goto	u3391
  3386  0008F4  EF7E  F004         	goto	u3390
  3387  0008F8                     u3391:
  3388  0008F8  EF7F  F004         	goto	l3801
  3389  0008FC                     u3390:
  3390  0008FC  802A               	bsf	___flmul@aexp^0,0,c
  3391  0008FE                     l3801:
  3392  0008FE  502A               	movf	___flmul@aexp^0,w,c
  3393  000900  B4D8               	btfsc	status,2,c
  3394  000902  EF85  F004         	goto	u3401
  3395  000906  EF87  F004         	goto	u3400
  3396  00090A                     u3401:
  3397  00090A  EF9A  F004         	goto	l3809
  3398  00090E                     u3400:
  3399  00090E  282A               	incf	___flmul@aexp^0,w,c
  3400  000910  A4D8               	btfss	status,2,c
  3401  000912  EF8D  F004         	goto	u3411
  3402  000916  EF8F  F004         	goto	u3410
  3403  00091A                     u3411:
  3404  00091A  EF97  F004         	goto	l3807
  3405  00091E                     u3410:
  3406  00091E  0E00               	movlw	0
  3407  000920  6E1D               	movwf	___flmul@a^0,c
  3408  000922  0E00               	movlw	0
  3409  000924  6E1E               	movwf	(___flmul@a+1)^0,c
  3410  000926  0E00               	movlw	0
  3411  000928  6E1F               	movwf	(___flmul@a+2)^0,c
  3412  00092A  0E00               	movlw	0
  3413  00092C  6E20               	movwf	(___flmul@a+3)^0,c
  3414  00092E                     l3807:
  3415  00092E  8E1F               	bsf	(___flmul@a+2)^0,7,c
  3416  000930  EFA2  F004         	goto	l1054
  3417  000934                     l3809:
  3418  000934  0E00               	movlw	0
  3419  000936  6E1D               	movwf	___flmul@a^0,c
  3420  000938  0E00               	movlw	0
  3421  00093A  6E1E               	movwf	(___flmul@a+1)^0,c
  3422  00093C  0E00               	movlw	0
  3423  00093E  6E1F               	movwf	(___flmul@a+2)^0,c
  3424  000940  0E00               	movlw	0
  3425  000942  6E20               	movwf	(___flmul@a+3)^0,c
  3426  000944                     l1054:
  3427  000944  502A               	movf	___flmul@aexp^0,w,c
  3428  000946  B4D8               	btfsc	status,2,c
  3429  000948  EFA8  F004         	goto	u3421
  3430  00094C  EFAA  F004         	goto	u3420
  3431  000950                     u3421:
  3432  000950  EFB2  F004         	goto	l3813
  3433  000954                     u3420:
  3434  000954  502B               	movf	___flmul@bexp^0,w,c
  3435  000956  A4D8               	btfss	status,2,c
  3436  000958  EFB0  F004         	goto	u3431
  3437  00095C  EFB2  F004         	goto	u3430
  3438  000960                     u3431:
  3439  000960  EFBC  F004         	goto	l3817
  3440  000964                     u3430:
  3441  000964                     l3813:
  3442  000964  0E00               	movlw	0
  3443  000966  6E19               	movwf	?___flmul^0,c
  3444  000968  0E00               	movlw	0
  3445  00096A  6E1A               	movwf	(?___flmul+1)^0,c
  3446  00096C  0E00               	movlw	0
  3447  00096E  6E1B               	movwf	(?___flmul+2)^0,c
  3448  000970  0E00               	movlw	0
  3449  000972  6E1C               	movwf	(?___flmul+3)^0,c
  3450  000974  EF54  F006         	goto	l1058
  3451  000978                     l3817:
  3452  000978  501F               	movf	(___flmul@a+2)^0,w,c
  3453  00097A  0219               	mulwf	___flmul@b^0,c
  3454  00097C  CFF3 F030          	movff	prodl,___flmul@temp
  3455  000980  CFF4 F031          	movff	prodh,___flmul@temp+1
  3456  000984  5030               	movf	___flmul@temp^0,w,c
  3457  000986  6E26               	movwf	___flmul@grs^0,c
  3458  000988  6A27               	clrf	(___flmul@grs+1)^0,c
  3459  00098A  6A28               	clrf	(___flmul@grs+2)^0,c
  3460  00098C  6A29               	clrf	(___flmul@grs+3)^0,c
  3461  00098E  5031               	movf	(___flmul@temp+1)^0,w,c
  3462  000990  6E2C               	movwf	___flmul@prod^0,c
  3463  000992  6A2D               	clrf	(___flmul@prod+1)^0,c
  3464  000994  6A2E               	clrf	(___flmul@prod+2)^0,c
  3465  000996  6A2F               	clrf	(___flmul@prod+3)^0,c
  3466  000998  501E               	movf	(___flmul@a+1)^0,w,c
  3467  00099A  021A               	mulwf	(___flmul@b+1)^0,c
  3468  00099C  CFF3 F030          	movff	prodl,___flmul@temp
  3469  0009A0  CFF4 F031          	movff	prodh,___flmul@temp+1
  3470  0009A4  5030               	movf	___flmul@temp^0,w,c
  3471  0009A6  2626               	addwf	___flmul@grs^0,f,c
  3472  0009A8  0E00               	movlw	0
  3473  0009AA  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3474  0009AC  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3475  0009AE  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3476  0009B0  5031               	movf	(___flmul@temp+1)^0,w,c
  3477  0009B2  262C               	addwf	___flmul@prod^0,f,c
  3478  0009B4  0E00               	movlw	0
  3479  0009B6  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3480  0009B8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3481  0009BA  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3482  0009BC  501D               	movf	___flmul@a^0,w,c
  3483  0009BE  021B               	mulwf	(___flmul@b+2)^0,c
  3484  0009C0  CFF3 F030          	movff	prodl,___flmul@temp
  3485  0009C4  CFF4 F031          	movff	prodh,___flmul@temp+1
  3486  0009C8  5030               	movf	___flmul@temp^0,w,c
  3487  0009CA  2626               	addwf	___flmul@grs^0,f,c
  3488  0009CC  0E00               	movlw	0
  3489  0009CE  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3490  0009D0  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3491  0009D2  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3492  0009D4  5031               	movf	(___flmul@temp+1)^0,w,c
  3493  0009D6  262C               	addwf	___flmul@prod^0,f,c
  3494  0009D8  0E00               	movlw	0
  3495  0009DA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3496  0009DC  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3497  0009DE  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3498  0009E0  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3499  0009E4  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3500  0009E8  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3501  0009EC  6A26               	clrf	___flmul@grs^0,c
  3502  0009EE  501D               	movf	___flmul@a^0,w,c
  3503  0009F0  021A               	mulwf	(___flmul@b+1)^0,c
  3504  0009F2  CFF3 F030          	movff	prodl,___flmul@temp
  3505  0009F6  CFF4 F031          	movff	prodh,___flmul@temp+1
  3506  0009FA  5030               	movf	___flmul@temp^0,w,c
  3507  0009FC  2626               	addwf	___flmul@grs^0,f,c
  3508  0009FE  5031               	movf	(___flmul@temp+1)^0,w,c
  3509  000A00  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3510  000A02  0E00               	movlw	0
  3511  000A04  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3512  000A06  0E00               	movlw	0
  3513  000A08  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3514  000A0A  501E               	movf	(___flmul@a+1)^0,w,c
  3515  000A0C  0219               	mulwf	___flmul@b^0,c
  3516  000A0E  CFF3 F030          	movff	prodl,___flmul@temp
  3517  000A12  CFF4 F031          	movff	prodh,___flmul@temp+1
  3518  000A16  5030               	movf	___flmul@temp^0,w,c
  3519  000A18  2626               	addwf	___flmul@grs^0,f,c
  3520  000A1A  5031               	movf	(___flmul@temp+1)^0,w,c
  3521  000A1C  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3522  000A1E  0E00               	movlw	0
  3523  000A20  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3524  000A22  0E00               	movlw	0
  3525  000A24  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3526  000A26  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3527  000A2A  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3528  000A2E  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3529  000A32  6A26               	clrf	___flmul@grs^0,c
  3530  000A34  501D               	movf	___flmul@a^0,w,c
  3531  000A36  0219               	mulwf	___flmul@b^0,c
  3532  000A38  CFF3 F030          	movff	prodl,___flmul@temp
  3533  000A3C  CFF4 F031          	movff	prodh,___flmul@temp+1
  3534  000A40  5030               	movf	___flmul@temp^0,w,c
  3535  000A42  2626               	addwf	___flmul@grs^0,f,c
  3536  000A44  5031               	movf	(___flmul@temp+1)^0,w,c
  3537  000A46  2227               	addwfc	(___flmul@grs+1)^0,f,c
  3538  000A48  0E00               	movlw	0
  3539  000A4A  2228               	addwfc	(___flmul@grs+2)^0,f,c
  3540  000A4C  0E00               	movlw	0
  3541  000A4E  2229               	addwfc	(___flmul@grs+3)^0,f,c
  3542  000A50  501F               	movf	(___flmul@a+2)^0,w,c
  3543  000A52  021A               	mulwf	(___flmul@b+1)^0,c
  3544  000A54  CFF3 F030          	movff	prodl,___flmul@temp
  3545  000A58  CFF4 F031          	movff	prodh,___flmul@temp+1
  3546  000A5C  5030               	movf	___flmul@temp^0,w,c
  3547  000A5E  262C               	addwf	___flmul@prod^0,f,c
  3548  000A60  5031               	movf	(___flmul@temp+1)^0,w,c
  3549  000A62  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3550  000A64  0E00               	movlw	0
  3551  000A66  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3552  000A68  0E00               	movlw	0
  3553  000A6A  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3554  000A6C  501E               	movf	(___flmul@a+1)^0,w,c
  3555  000A6E  021B               	mulwf	(___flmul@b+2)^0,c
  3556  000A70  CFF3 F030          	movff	prodl,___flmul@temp
  3557  000A74  CFF4 F031          	movff	prodh,___flmul@temp+1
  3558  000A78  5030               	movf	___flmul@temp^0,w,c
  3559  000A7A  262C               	addwf	___flmul@prod^0,f,c
  3560  000A7C  5031               	movf	(___flmul@temp+1)^0,w,c
  3561  000A7E  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3562  000A80  0E00               	movlw	0
  3563  000A82  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3564  000A84  0E00               	movlw	0
  3565  000A86  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3566  000A88  501F               	movf	(___flmul@a+2)^0,w,c
  3567  000A8A  021B               	mulwf	(___flmul@b+2)^0,c
  3568  000A8C  CFF3 F030          	movff	prodl,___flmul@temp
  3569  000A90  CFF4 F031          	movff	prodh,___flmul@temp+1
  3570  000A94  5030               	movf	___flmul@temp^0,w,c
  3571  000A96  6E21               	movwf	??___flmul^0,c
  3572  000A98  5031               	movf	(___flmul@temp+1)^0,w,c
  3573  000A9A  6E22               	movwf	(??___flmul+1)^0,c
  3574  000A9C  6A23               	clrf	(??___flmul+2)^0,c
  3575  000A9E  6A24               	clrf	(??___flmul+3)^0,c
  3576  000AA0  C023  F024         	movff	??___flmul+2,??___flmul+3
  3577  000AA4  C022  F023         	movff	??___flmul+1,??___flmul+2
  3578  000AA8  C021  F022         	movff	??___flmul,??___flmul+1
  3579  000AAC  6A21               	clrf	??___flmul^0,c
  3580  000AAE  5021               	movf	??___flmul^0,w,c
  3581  000AB0  262C               	addwf	___flmul@prod^0,f,c
  3582  000AB2  5022               	movf	(??___flmul+1)^0,w,c
  3583  000AB4  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3584  000AB6  5023               	movf	(??___flmul+2)^0,w,c
  3585  000AB8  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3586  000ABA  5024               	movf	(??___flmul+3)^0,w,c
  3587  000ABC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3588  000ABE  C026  F021         	movff	___flmul@grs,??___flmul
  3589  000AC2  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  3590  000AC6  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  3591  000ACA  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  3592  000ACE  0E19               	movlw	25
  3593  000AD0  EF6F  F005         	goto	u3440
  3594  000AD4                     u3445:
  3595  000AD4  90D8               	bcf	status,0,c
  3596  000AD6  3224               	rrcf	(??___flmul+3)^0,f,c
  3597  000AD8  3223               	rrcf	(??___flmul+2)^0,f,c
  3598  000ADA  3222               	rrcf	(??___flmul+1)^0,f,c
  3599  000ADC  3221               	rrcf	??___flmul^0,f,c
  3600  000ADE                     u3440:
  3601  000ADE  2EE8               	decfsz	wreg,f,c
  3602  000AE0  EF6A  F005         	goto	u3445
  3603  000AE4  5021               	movf	??___flmul^0,w,c
  3604  000AE6  262C               	addwf	___flmul@prod^0,f,c
  3605  000AE8  5022               	movf	(??___flmul+1)^0,w,c
  3606  000AEA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3607  000AEC  5023               	movf	(??___flmul+2)^0,w,c
  3608  000AEE  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3609  000AF0  5024               	movf	(??___flmul+3)^0,w,c
  3610  000AF2  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3611  000AF4  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  3612  000AF8  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  3613  000AFC  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  3614  000B00  6A26               	clrf	___flmul@grs^0,c
  3615  000B02  502A               	movf	___flmul@aexp^0,w,c
  3616  000B04  C02B  F021         	movff	___flmul@bexp,??___flmul
  3617  000B08  6A22               	clrf	(??___flmul+1)^0,c
  3618  000B0A  2621               	addwf	??___flmul^0,f,c
  3619  000B0C  0E00               	movlw	0
  3620  000B0E  2222               	addwfc	(??___flmul+1)^0,f,c
  3621  000B10  0E82               	movlw	130
  3622  000B12  2421               	addwf	??___flmul^0,w,c
  3623  000B14  6E30               	movwf	___flmul@temp^0,c
  3624  000B16  0EFF               	movlw	255
  3625  000B18  2022               	addwfc	(??___flmul+1)^0,w,c
  3626  000B1A  6E31               	movwf	(___flmul@temp+1)^0,c
  3627  000B1C  EFA5  F005         	goto	l3865
  3628  000B20                     l3859:
  3629  000B20  90D8               	bcf	status,0,c
  3630  000B22  362C               	rlcf	___flmul@prod^0,f,c
  3631  000B24  362D               	rlcf	(___flmul@prod+1)^0,f,c
  3632  000B26  362E               	rlcf	(___flmul@prod+2)^0,f,c
  3633  000B28  362F               	rlcf	(___flmul@prod+3)^0,f,c
  3634  000B2A  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3635  000B2C  EF9A  F005         	goto	u3451
  3636  000B30  EF9C  F005         	goto	u3450
  3637  000B34                     u3451:
  3638  000B34  EF9D  F005         	goto	l1061
  3639  000B38                     u3450:
  3640  000B38  802C               	bsf	___flmul@prod^0,0,c
  3641  000B3A                     l1061:
  3642  000B3A  90D8               	bcf	status,0,c
  3643  000B3C  3626               	rlcf	___flmul@grs^0,f,c
  3644  000B3E  3627               	rlcf	(___flmul@grs+1)^0,f,c
  3645  000B40  3628               	rlcf	(___flmul@grs+2)^0,f,c
  3646  000B42  3629               	rlcf	(___flmul@grs+3)^0,f,c
  3647  000B44  0630               	decf	___flmul@temp^0,f,c
  3648  000B46  A0D8               	btfss	status,0,c
  3649  000B48  0631               	decf	(___flmul@temp+1)^0,f,c
  3650  000B4A                     l3865:
  3651  000B4A  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  3652  000B4C  EFAA  F005         	goto	u3461
  3653  000B50  EFAC  F005         	goto	u3460
  3654  000B54                     u3461:
  3655  000B54  EF90  F005         	goto	l3859
  3656  000B58                     u3460:
  3657  000B58  0E00               	movlw	0
  3658  000B5A  6E2A               	movwf	___flmul@aexp^0,c
  3659  000B5C  AE29               	btfss	(___flmul@grs+3)^0,7,c
  3660  000B5E  EFB3  F005         	goto	u3471
  3661  000B62  EFB5  F005         	goto	u3470
  3662  000B66                     u3471:
  3663  000B66  EFD9  F005         	goto	l1063
  3664  000B6A                     u3470:
  3665  000B6A  0EFF               	movlw	255
  3666  000B6C  1426               	andwf	___flmul@grs^0,w,c
  3667  000B6E  6E21               	movwf	??___flmul^0,c
  3668  000B70  0EFF               	movlw	255
  3669  000B72  1427               	andwf	(___flmul@grs+1)^0,w,c
  3670  000B74  6E22               	movwf	(??___flmul+1)^0,c
  3671  000B76  0EFF               	movlw	255
  3672  000B78  1428               	andwf	(___flmul@grs+2)^0,w,c
  3673  000B7A  6E23               	movwf	(??___flmul+2)^0,c
  3674  000B7C  0E7F               	movlw	127
  3675  000B7E  1429               	andwf	(___flmul@grs+3)^0,w,c
  3676  000B80  6E24               	movwf	(??___flmul+3)^0,c
  3677  000B82  5021               	movf	??___flmul^0,w,c
  3678  000B84  1022               	iorwf	(??___flmul+1)^0,w,c
  3679  000B86  1023               	iorwf	(??___flmul+2)^0,w,c
  3680  000B88  1024               	iorwf	(??___flmul+3)^0,w,c
  3681  000B8A  B4D8               	btfsc	status,2,c
  3682  000B8C  EFCA  F005         	goto	u3481
  3683  000B90  EFCC  F005         	goto	u3480
  3684  000B94                     u3481:
  3685  000B94  EFD0  F005         	goto	l1064
  3686  000B98                     u3480:
  3687  000B98                     l3873:
  3688  000B98  0E01               	movlw	1
  3689  000B9A  6E2A               	movwf	___flmul@aexp^0,c
  3690  000B9C  EFD9  F005         	goto	l1063
  3691  000BA0                     l1064:
  3692  000BA0  A02C               	btfss	___flmul@prod^0,0,c
  3693  000BA2  EFD5  F005         	goto	u3491
  3694  000BA6  EFD7  F005         	goto	u3490
  3695  000BAA                     u3491:
  3696  000BAA  EFD9  F005         	goto	l1063
  3697  000BAE                     u3490:
  3698  000BAE  EFCC  F005         	goto	l3873
  3699  000BB2                     l1063:
  3700  000BB2  502A               	movf	___flmul@aexp^0,w,c
  3701  000BB4  B4D8               	btfsc	status,2,c
  3702  000BB6  EFDF  F005         	goto	u3501
  3703  000BBA  EFE1  F005         	goto	u3500
  3704  000BBE                     u3501:
  3705  000BBE  EF05  F006         	goto	l3885
  3706  000BC2                     u3500:
  3707  000BC2  0E01               	movlw	1
  3708  000BC4  262C               	addwf	___flmul@prod^0,f,c
  3709  000BC6  0E00               	movlw	0
  3710  000BC8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  3711  000BCA  222E               	addwfc	(___flmul@prod+2)^0,f,c
  3712  000BCC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  3713  000BCE  A02F               	btfss	(___flmul@prod+3)^0,0,c
  3714  000BD0  EFEC  F005         	goto	u3511
  3715  000BD4  EFEE  F005         	goto	u3510
  3716  000BD8                     u3511:
  3717  000BD8  EF05  F006         	goto	l3885
  3718  000BDC                     u3510:
  3719  000BDC  C02C  F021         	movff	___flmul@prod,??___flmul
  3720  000BE0  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  3721  000BE4  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  3722  000BE8  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  3723  000BEC  3424               	rlcf	(??___flmul+3)^0,w,c
  3724  000BEE  3224               	rrcf	(??___flmul+3)^0,f,c
  3725  000BF0  3223               	rrcf	(??___flmul+2)^0,f,c
  3726  000BF2  3222               	rrcf	(??___flmul+1)^0,f,c
  3727  000BF4  3221               	rrcf	??___flmul^0,f,c
  3728  000BF6  C021  F02C         	movff	??___flmul,___flmul@prod
  3729  000BFA  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  3730  000BFE  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  3731  000C02  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  3732  000C06  4A30               	infsnz	___flmul@temp^0,f,c
  3733  000C08  2A31               	incf	(___flmul@temp+1)^0,f,c
  3734  000C0A                     l3885:
  3735  000C0A  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3736  000C0C  EF10  F006         	goto	u3521
  3737  000C10  5031               	movf	(___flmul@temp+1)^0,w,c
  3738  000C12  E108               	bnz	u3520
  3739  000C14  2830               	incf	___flmul@temp^0,w,c
  3740  000C16  A0D8               	btfss	status,0,c
  3741  000C18  EF10  F006         	goto	u3521
  3742  000C1C  EF12  F006         	goto	u3520
  3743  000C20                     u3521:
  3744  000C20  EF1C  F006         	goto	l3889
  3745  000C24                     u3520:
  3746  000C24  0E00               	movlw	0
  3747  000C26  6E2C               	movwf	___flmul@prod^0,c
  3748  000C28  0E00               	movlw	0
  3749  000C2A  6E2D               	movwf	(___flmul@prod+1)^0,c
  3750  000C2C  0E80               	movlw	128
  3751  000C2E  6E2E               	movwf	(___flmul@prod+2)^0,c
  3752  000C30  0E7F               	movlw	127
  3753  000C32  6E2F               	movwf	(___flmul@prod+3)^0,c
  3754  000C34  EF4A  F006         	goto	l3901
  3755  000C38                     l3889:
  3756  000C38  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  3757  000C3A  EF29  F006         	goto	u3530
  3758  000C3E  5031               	movf	(___flmul@temp+1)^0,w,c
  3759  000C40  E106               	bnz	u3531
  3760  000C42  0430               	decf	___flmul@temp^0,w,c
  3761  000C44  B0D8               	btfsc	status,0,c
  3762  000C46  EF27  F006         	goto	u3531
  3763  000C4A  EF29  F006         	goto	u3530
  3764  000C4E                     u3531:
  3765  000C4E  EF35  F006         	goto	l1071
  3766  000C52                     u3530:
  3767  000C52  0E00               	movlw	0
  3768  000C54  6E2C               	movwf	___flmul@prod^0,c
  3769  000C56  0E00               	movlw	0
  3770  000C58  6E2D               	movwf	(___flmul@prod+1)^0,c
  3771  000C5A  0E00               	movlw	0
  3772  000C5C  6E2E               	movwf	(___flmul@prod+2)^0,c
  3773  000C5E  0E00               	movlw	0
  3774  000C60  6E2F               	movwf	(___flmul@prod+3)^0,c
  3775  000C62  0E00               	movlw	0
  3776  000C64  6E25               	movwf	___flmul@sign^0,c
  3777  000C66  EF4A  F006         	goto	l3901
  3778  000C6A                     l1071:
  3779  000C6A  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  3780  000C6E  0EFF               	movlw	255
  3781  000C70  162C               	andwf	___flmul@prod^0,f,c
  3782  000C72  0EFF               	movlw	255
  3783  000C74  162D               	andwf	(___flmul@prod+1)^0,f,c
  3784  000C76  0E7F               	movlw	127
  3785  000C78  162E               	andwf	(___flmul@prod+2)^0,f,c
  3786  000C7A  0E00               	movlw	0
  3787  000C7C  162F               	andwf	(___flmul@prod+3)^0,f,c
  3788  000C7E  A02B               	btfss	___flmul@bexp^0,0,c
  3789  000C80  EF44  F006         	goto	u3541
  3790  000C84  EF46  F006         	goto	u3540
  3791  000C88                     u3541:
  3792  000C88  EF47  F006         	goto	l3899
  3793  000C8C                     u3540:
  3794  000C8C  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  3795  000C8E                     l3899:
  3796  000C8E  90D8               	bcf	status,0,c
  3797  000C90  302B               	rrcf	___flmul@bexp^0,w,c
  3798  000C92  6E2F               	movwf	(___flmul@prod+3)^0,c
  3799  000C94                     l3901:
  3800  000C94  5025               	movf	___flmul@sign^0,w,c
  3801  000C96  122F               	iorwf	(___flmul@prod+3)^0,f,c
  3802  000C98  C02C  F019         	movff	___flmul@prod,?___flmul
  3803  000C9C  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  3804  000CA0  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  3805  000CA4  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  3806  000CA8                     l1058:
  3807  000CA8  0012               	return		;funcret
  3808  000CAA                     __end_of___flmul:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function ___fldiv *****************
  3812 ;; Defined at:
  3813 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  b               4   49[COMRAM] unsigned char 
  3816 ;;  a               4   53[COMRAM] unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  grs             4   68[COMRAM] unsigned long 
  3819 ;;  rem             4   61[COMRAM] unsigned long 
  3820 ;;  new_exp         2   66[COMRAM] short 
  3821 ;;  aexp            1   73[COMRAM] unsigned char 
  3822 ;;  bexp            1   72[COMRAM] unsigned char 
  3823 ;;  sign            1   65[COMRAM] unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  4   49[COMRAM] unsigned char 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3833 ;;      Params:         8       0       0       0       0       0       0       0       0
  3834 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3835 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3836 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3837 ;;Total ram usage:       25 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    2
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_appADC
  3844 ;;		_appBat
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text18
  3849  000CAA                     __ptext18:
  3850                           	callstack 0
  3851  000CAA                     ___fldiv:
  3852                           	callstack 26
  3853  000CAA  5035               	movf	(___fldiv@b+3)^0,w,c
  3854  000CAC  0B80               	andlw	128
  3855  000CAE  6E42               	movwf	___fldiv@sign^0,c
  3856  000CB0  5035               	movf	(___fldiv@b+3)^0,w,c
  3857  000CB2  2435               	addwf	(___fldiv@b+3)^0,w,c
  3858  000CB4  6E49               	movwf	___fldiv@bexp^0,c
  3859  000CB6  AE34               	btfss	(___fldiv@b+2)^0,7,c
  3860  000CB8  EF60  F006         	goto	u3131
  3861  000CBC  EF62  F006         	goto	u3130
  3862  000CC0                     u3131:
  3863  000CC0  EF63  F006         	goto	l3645
  3864  000CC4                     u3130:
  3865  000CC4  8049               	bsf	___fldiv@bexp^0,0,c
  3866  000CC6                     l3645:
  3867  000CC6  5049               	movf	___fldiv@bexp^0,w,c
  3868  000CC8  B4D8               	btfsc	status,2,c
  3869  000CCA  EF69  F006         	goto	u3141
  3870  000CCE  EF6B  F006         	goto	u3140
  3871  000CD2                     u3141:
  3872  000CD2  EF80  F006         	goto	l3655
  3873  000CD6                     u3140:
  3874  000CD6  2849               	incf	___fldiv@bexp^0,w,c
  3875  000CD8  A4D8               	btfss	status,2,c
  3876  000CDA  EF71  F006         	goto	u3151
  3877  000CDE  EF73  F006         	goto	u3150
  3878  000CE2                     u3151:
  3879  000CE2  EF7B  F006         	goto	l3651
  3880  000CE6                     u3150:
  3881  000CE6  0E00               	movlw	0
  3882  000CE8  6E32               	movwf	___fldiv@b^0,c
  3883  000CEA  0E00               	movlw	0
  3884  000CEC  6E33               	movwf	(___fldiv@b+1)^0,c
  3885  000CEE  0E00               	movlw	0
  3886  000CF0  6E34               	movwf	(___fldiv@b+2)^0,c
  3887  000CF2  0E00               	movlw	0
  3888  000CF4  6E35               	movwf	(___fldiv@b+3)^0,c
  3889  000CF6                     l3651:
  3890  000CF6  8E34               	bsf	(___fldiv@b+2)^0,7,c
  3891  000CF8  0E00               	movlw	0
  3892  000CFA  6E35               	movwf	(___fldiv@b+3)^0,c
  3893  000CFC  EF88  F006         	goto	l3657
  3894  000D00                     l3655:
  3895  000D00  0E00               	movlw	0
  3896  000D02  6E32               	movwf	___fldiv@b^0,c
  3897  000D04  0E00               	movlw	0
  3898  000D06  6E33               	movwf	(___fldiv@b+1)^0,c
  3899  000D08  0E00               	movlw	0
  3900  000D0A  6E34               	movwf	(___fldiv@b+2)^0,c
  3901  000D0C  0E00               	movlw	0
  3902  000D0E  6E35               	movwf	(___fldiv@b+3)^0,c
  3903  000D10                     l3657:
  3904  000D10  5039               	movf	(___fldiv@a+3)^0,w,c
  3905  000D12  0B80               	andlw	128
  3906  000D14  1A42               	xorwf	___fldiv@sign^0,f,c
  3907  000D16  5039               	movf	(___fldiv@a+3)^0,w,c
  3908  000D18  2439               	addwf	(___fldiv@a+3)^0,w,c
  3909  000D1A  6E4A               	movwf	___fldiv@aexp^0,c
  3910  000D1C  AE38               	btfss	(___fldiv@a+2)^0,7,c
  3911  000D1E  EF93  F006         	goto	u3161
  3912  000D22  EF95  F006         	goto	u3160
  3913  000D26                     u3161:
  3914  000D26  EF96  F006         	goto	l3665
  3915  000D2A                     u3160:
  3916  000D2A  804A               	bsf	___fldiv@aexp^0,0,c
  3917  000D2C                     l3665:
  3918  000D2C  504A               	movf	___fldiv@aexp^0,w,c
  3919  000D2E  B4D8               	btfsc	status,2,c
  3920  000D30  EF9C  F006         	goto	u3171
  3921  000D34  EF9E  F006         	goto	u3170
  3922  000D38                     u3171:
  3923  000D38  EFB3  F006         	goto	l3675
  3924  000D3C                     u3170:
  3925  000D3C  284A               	incf	___fldiv@aexp^0,w,c
  3926  000D3E  A4D8               	btfss	status,2,c
  3927  000D40  EFA4  F006         	goto	u3181
  3928  000D44  EFA6  F006         	goto	u3180
  3929  000D48                     u3181:
  3930  000D48  EFAE  F006         	goto	l3671
  3931  000D4C                     u3180:
  3932  000D4C  0E00               	movlw	0
  3933  000D4E  6E36               	movwf	___fldiv@a^0,c
  3934  000D50  0E00               	movlw	0
  3935  000D52  6E37               	movwf	(___fldiv@a+1)^0,c
  3936  000D54  0E00               	movlw	0
  3937  000D56  6E38               	movwf	(___fldiv@a+2)^0,c
  3938  000D58  0E00               	movlw	0
  3939  000D5A  6E39               	movwf	(___fldiv@a+3)^0,c
  3940  000D5C                     l3671:
  3941  000D5C  8E38               	bsf	(___fldiv@a+2)^0,7,c
  3942  000D5E  0E00               	movlw	0
  3943  000D60  6E39               	movwf	(___fldiv@a+3)^0,c
  3944  000D62  EFBB  F006         	goto	l3677
  3945  000D66                     l3675:
  3946  000D66  0E00               	movlw	0
  3947  000D68  6E36               	movwf	___fldiv@a^0,c
  3948  000D6A  0E00               	movlw	0
  3949  000D6C  6E37               	movwf	(___fldiv@a+1)^0,c
  3950  000D6E  0E00               	movlw	0
  3951  000D70  6E38               	movwf	(___fldiv@a+2)^0,c
  3952  000D72  0E00               	movlw	0
  3953  000D74  6E39               	movwf	(___fldiv@a+3)^0,c
  3954  000D76                     l3677:
  3955  000D76  5036               	movf	___fldiv@a^0,w,c
  3956  000D78  1037               	iorwf	(___fldiv@a+1)^0,w,c
  3957  000D7A  1038               	iorwf	(___fldiv@a+2)^0,w,c
  3958  000D7C  1039               	iorwf	(___fldiv@a+3)^0,w,c
  3959  000D7E  A4D8               	btfss	status,2,c
  3960  000D80  EFC4  F006         	goto	u3191
  3961  000D84  EFC6  F006         	goto	u3190
  3962  000D88                     u3191:
  3963  000D88  EFDE  F006         	goto	l3689
  3964  000D8C                     u3190:
  3965  000D8C  0E00               	movlw	0
  3966  000D8E  6E32               	movwf	___fldiv@b^0,c
  3967  000D90  0E00               	movlw	0
  3968  000D92  6E33               	movwf	(___fldiv@b+1)^0,c
  3969  000D94  0E00               	movlw	0
  3970  000D96  6E34               	movwf	(___fldiv@b+2)^0,c
  3971  000D98  0E00               	movlw	0
  3972  000D9A  6E35               	movwf	(___fldiv@b+3)^0,c
  3973  000D9C  0E80               	movlw	128
  3974  000D9E  1234               	iorwf	(___fldiv@b+2)^0,f,c
  3975  000DA0  0E7F               	movlw	127
  3976  000DA2  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3977  000DA4                     l3683:
  3978  000DA4  5042               	movf	___fldiv@sign^0,w,c
  3979  000DA6  1235               	iorwf	(___fldiv@b+3)^0,f,c
  3980  000DA8  C032  F032         	movff	___fldiv@b,?___fldiv
  3981  000DAC  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  3982  000DB0  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  3983  000DB4  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  3984  000DB8  EF21  F008         	goto	l1022
  3985  000DBC                     l3689:
  3986  000DBC  5049               	movf	___fldiv@bexp^0,w,c
  3987  000DBE  A4D8               	btfss	status,2,c
  3988  000DC0  EFE4  F006         	goto	u3201
  3989  000DC4  EFE6  F006         	goto	u3200
  3990  000DC8                     u3201:
  3991  000DC8  EFF0  F006         	goto	l3697
  3992  000DCC                     u3200:
  3993  000DCC  0E00               	movlw	0
  3994  000DCE  6E32               	movwf	?___fldiv^0,c
  3995  000DD0  0E00               	movlw	0
  3996  000DD2  6E33               	movwf	(?___fldiv+1)^0,c
  3997  000DD4  0E00               	movlw	0
  3998  000DD6  6E34               	movwf	(?___fldiv+2)^0,c
  3999  000DD8  0E00               	movlw	0
  4000  000DDA  6E35               	movwf	(?___fldiv+3)^0,c
  4001  000DDC  EF21  F008         	goto	l1022
  4002  000DE0                     l3697:
  4003  000DE0  504A               	movf	___fldiv@aexp^0,w,c
  4004  000DE2  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  4005  000DE6  6A3B               	clrf	(??___fldiv+1)^0,c
  4006  000DE8  5E3A               	subwf	??___fldiv^0,f,c
  4007  000DEA  0E00               	movlw	0
  4008  000DEC  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  4009  000DEE  0E7F               	movlw	127
  4010  000DF0  243A               	addwf	??___fldiv^0,w,c
  4011  000DF2  6E43               	movwf	___fldiv@new_exp^0,c
  4012  000DF4  0E00               	movlw	0
  4013  000DF6  203B               	addwfc	(??___fldiv+1)^0,w,c
  4014  000DF8  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4015  000DFA  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  4016  000DFE  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  4017  000E02  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  4018  000E06  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  4019  000E0A  0E00               	movlw	0
  4020  000E0C  6E32               	movwf	___fldiv@b^0,c
  4021  000E0E  0E00               	movlw	0
  4022  000E10  6E33               	movwf	(___fldiv@b+1)^0,c
  4023  000E12  0E00               	movlw	0
  4024  000E14  6E34               	movwf	(___fldiv@b+2)^0,c
  4025  000E16  0E00               	movlw	0
  4026  000E18  6E35               	movwf	(___fldiv@b+3)^0,c
  4027  000E1A  0E00               	movlw	0
  4028  000E1C  6E45               	movwf	___fldiv@grs^0,c
  4029  000E1E  0E00               	movlw	0
  4030  000E20  6E46               	movwf	(___fldiv@grs+1)^0,c
  4031  000E22  0E00               	movlw	0
  4032  000E24  6E47               	movwf	(___fldiv@grs+2)^0,c
  4033  000E26  0E00               	movlw	0
  4034  000E28  6E48               	movwf	(___fldiv@grs+3)^0,c
  4035  000E2A  0E00               	movlw	0
  4036  000E2C  6E4A               	movwf	___fldiv@aexp^0,c
  4037  000E2E  EF51  F007         	goto	l1024
  4038  000E32                     l3707:
  4039  000E32  504A               	movf	___fldiv@aexp^0,w,c
  4040  000E34  B4D8               	btfsc	status,2,c
  4041  000E36  EF1F  F007         	goto	u3211
  4042  000E3A  EF21  F007         	goto	u3210
  4043  000E3E                     u3211:
  4044  000E3E  EF38  F007         	goto	l3715
  4045  000E42                     u3210:
  4046  000E42  90D8               	bcf	status,0,c
  4047  000E44  363E               	rlcf	___fldiv@rem^0,f,c
  4048  000E46  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  4049  000E48  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  4050  000E4A  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  4051  000E4C  90D8               	bcf	status,0,c
  4052  000E4E  3632               	rlcf	___fldiv@b^0,f,c
  4053  000E50  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4054  000E52  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4055  000E54  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4056  000E56  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4057  000E58  EF30  F007         	goto	u3221
  4058  000E5C  EF32  F007         	goto	u3220
  4059  000E60                     u3221:
  4060  000E60  EF33  F007         	goto	l1027
  4061  000E64                     u3220:
  4062  000E64  8032               	bsf	___fldiv@b^0,0,c
  4063  000E66                     l1027:
  4064  000E66  90D8               	bcf	status,0,c
  4065  000E68  3645               	rlcf	___fldiv@grs^0,f,c
  4066  000E6A  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4067  000E6C  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4068  000E6E  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4069  000E70                     l3715:
  4070  000E70  5036               	movf	___fldiv@a^0,w,c
  4071  000E72  5C3E               	subwf	___fldiv@rem^0,w,c
  4072  000E74  5037               	movf	(___fldiv@a+1)^0,w,c
  4073  000E76  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  4074  000E78  5038               	movf	(___fldiv@a+2)^0,w,c
  4075  000E7A  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  4076  000E7C  5039               	movf	(___fldiv@a+3)^0,w,c
  4077  000E7E  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  4078  000E80  A0D8               	btfss	status,0,c
  4079  000E82  EF45  F007         	goto	u3231
  4080  000E86  EF47  F007         	goto	u3230
  4081  000E8A                     u3231:
  4082  000E8A  EF50  F007         	goto	l3721
  4083  000E8E                     u3230:
  4084  000E8E  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  4085  000E90  5036               	movf	___fldiv@a^0,w,c
  4086  000E92  5E3E               	subwf	___fldiv@rem^0,f,c
  4087  000E94  5037               	movf	(___fldiv@a+1)^0,w,c
  4088  000E96  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  4089  000E98  5038               	movf	(___fldiv@a+2)^0,w,c
  4090  000E9A  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  4091  000E9C  5039               	movf	(___fldiv@a+3)^0,w,c
  4092  000E9E  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  4093  000EA0                     l3721:
  4094  000EA0  2A4A               	incf	___fldiv@aexp^0,f,c
  4095  000EA2                     l1024:
  4096  000EA2  0E19               	movlw	25
  4097  000EA4  644A               	cpfsgt	___fldiv@aexp^0,c
  4098  000EA6  EF57  F007         	goto	u3241
  4099  000EAA  EF59  F007         	goto	u3240
  4100  000EAE                     u3241:
  4101  000EAE  EF19  F007         	goto	l3707
  4102  000EB2                     u3240:
  4103  000EB2  503E               	movf	___fldiv@rem^0,w,c
  4104  000EB4  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  4105  000EB6  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  4106  000EB8  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  4107  000EBA  B4D8               	btfsc	status,2,c
  4108  000EBC  EF62  F007         	goto	u3251
  4109  000EC0  EF64  F007         	goto	u3250
  4110  000EC4                     u3251:
  4111  000EC4  EF7C  F007         	goto	l3733
  4112  000EC8                     u3250:
  4113  000EC8  8045               	bsf	___fldiv@grs^0,0,c
  4114  000ECA  EF7C  F007         	goto	l3733
  4115  000ECE                     l3727:
  4116  000ECE  90D8               	bcf	status,0,c
  4117  000ED0  3632               	rlcf	___fldiv@b^0,f,c
  4118  000ED2  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4119  000ED4  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4120  000ED6  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4121  000ED8  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4122  000EDA  EF71  F007         	goto	u3261
  4123  000EDE  EF73  F007         	goto	u3260
  4124  000EE2                     u3261:
  4125  000EE2  EF74  F007         	goto	l1033
  4126  000EE6                     u3260:
  4127  000EE6  8032               	bsf	___fldiv@b^0,0,c
  4128  000EE8                     l1033:
  4129  000EE8  90D8               	bcf	status,0,c
  4130  000EEA  3645               	rlcf	___fldiv@grs^0,f,c
  4131  000EEC  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4132  000EEE  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4133  000EF0  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4134  000EF2  0643               	decf	___fldiv@new_exp^0,f,c
  4135  000EF4  A0D8               	btfss	status,0,c
  4136  000EF6  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  4137  000EF8                     l3733:
  4138  000EF8  AE34               	btfss	(___fldiv@b+2)^0,7,c
  4139  000EFA  EF81  F007         	goto	u3271
  4140  000EFE  EF83  F007         	goto	u3270
  4141  000F02                     u3271:
  4142  000F02  EF67  F007         	goto	l3727
  4143  000F06                     u3270:
  4144  000F06  0E00               	movlw	0
  4145  000F08  6E4A               	movwf	___fldiv@aexp^0,c
  4146  000F0A  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4147  000F0C  EF8A  F007         	goto	u3281
  4148  000F10  EF8C  F007         	goto	u3280
  4149  000F14                     u3281:
  4150  000F14  EFB0  F007         	goto	l1035
  4151  000F18                     u3280:
  4152  000F18  0EFF               	movlw	255
  4153  000F1A  1445               	andwf	___fldiv@grs^0,w,c
  4154  000F1C  6E3A               	movwf	??___fldiv^0,c
  4155  000F1E  0EFF               	movlw	255
  4156  000F20  1446               	andwf	(___fldiv@grs+1)^0,w,c
  4157  000F22  6E3B               	movwf	(??___fldiv+1)^0,c
  4158  000F24  0EFF               	movlw	255
  4159  000F26  1447               	andwf	(___fldiv@grs+2)^0,w,c
  4160  000F28  6E3C               	movwf	(??___fldiv+2)^0,c
  4161  000F2A  0E7F               	movlw	127
  4162  000F2C  1448               	andwf	(___fldiv@grs+3)^0,w,c
  4163  000F2E  6E3D               	movwf	(??___fldiv+3)^0,c
  4164  000F30  503A               	movf	??___fldiv^0,w,c
  4165  000F32  103B               	iorwf	(??___fldiv+1)^0,w,c
  4166  000F34  103C               	iorwf	(??___fldiv+2)^0,w,c
  4167  000F36  103D               	iorwf	(??___fldiv+3)^0,w,c
  4168  000F38  B4D8               	btfsc	status,2,c
  4169  000F3A  EFA1  F007         	goto	u3291
  4170  000F3E  EFA3  F007         	goto	u3290
  4171  000F42                     u3291:
  4172  000F42  EFA7  F007         	goto	l1036
  4173  000F46                     u3290:
  4174  000F46                     l3741:
  4175  000F46  0E01               	movlw	1
  4176  000F48  6E4A               	movwf	___fldiv@aexp^0,c
  4177  000F4A  EFB0  F007         	goto	l1035
  4178  000F4E                     l1036:
  4179  000F4E  A032               	btfss	___fldiv@b^0,0,c
  4180  000F50  EFAC  F007         	goto	u3301
  4181  000F54  EFAE  F007         	goto	u3300
  4182  000F58                     u3301:
  4183  000F58  EFB0  F007         	goto	l1035
  4184  000F5C                     u3300:
  4185  000F5C  EFA3  F007         	goto	l3741
  4186  000F60                     l1035:
  4187  000F60  504A               	movf	___fldiv@aexp^0,w,c
  4188  000F62  B4D8               	btfsc	status,2,c
  4189  000F64  EFB6  F007         	goto	u3311
  4190  000F68  EFB8  F007         	goto	u3310
  4191  000F6C                     u3311:
  4192  000F6C  EFDC  F007         	goto	l3753
  4193  000F70                     u3310:
  4194  000F70  0E01               	movlw	1
  4195  000F72  2632               	addwf	___fldiv@b^0,f,c
  4196  000F74  0E00               	movlw	0
  4197  000F76  2233               	addwfc	(___fldiv@b+1)^0,f,c
  4198  000F78  2234               	addwfc	(___fldiv@b+2)^0,f,c
  4199  000F7A  2235               	addwfc	(___fldiv@b+3)^0,f,c
  4200  000F7C  A035               	btfss	(___fldiv@b+3)^0,0,c
  4201  000F7E  EFC3  F007         	goto	u3321
  4202  000F82  EFC5  F007         	goto	u3320
  4203  000F86                     u3321:
  4204  000F86  EFDC  F007         	goto	l3753
  4205  000F8A                     u3320:
  4206  000F8A  C032  F03A         	movff	___fldiv@b,??___fldiv
  4207  000F8E  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  4208  000F92  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  4209  000F96  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  4210  000F9A  343D               	rlcf	(??___fldiv+3)^0,w,c
  4211  000F9C  323D               	rrcf	(??___fldiv+3)^0,f,c
  4212  000F9E  323C               	rrcf	(??___fldiv+2)^0,f,c
  4213  000FA0  323B               	rrcf	(??___fldiv+1)^0,f,c
  4214  000FA2  323A               	rrcf	??___fldiv^0,f,c
  4215  000FA4  C03A  F032         	movff	??___fldiv,___fldiv@b
  4216  000FA8  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  4217  000FAC  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  4218  000FB0  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  4219  000FB4  4A43               	infsnz	___fldiv@new_exp^0,f,c
  4220  000FB6  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  4221  000FB8                     l3753:
  4222  000FB8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4223  000FBA  EFE7  F007         	goto	u3331
  4224  000FBE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4225  000FC0  E108               	bnz	u3330
  4226  000FC2  2843               	incf	___fldiv@new_exp^0,w,c
  4227  000FC4  A0D8               	btfss	status,0,c
  4228  000FC6  EFE7  F007         	goto	u3331
  4229  000FCA  EFE9  F007         	goto	u3330
  4230  000FCE                     u3331:
  4231  000FCE  EFF4  F007         	goto	l3757
  4232  000FD2                     u3330:
  4233  000FD2  0E00               	movlw	0
  4234  000FD4  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4235  000FD6  6843               	setf	___fldiv@new_exp^0,c
  4236  000FD8  0E00               	movlw	0
  4237  000FDA  6E32               	movwf	___fldiv@b^0,c
  4238  000FDC  0E00               	movlw	0
  4239  000FDE  6E33               	movwf	(___fldiv@b+1)^0,c
  4240  000FE0  0E00               	movlw	0
  4241  000FE2  6E34               	movwf	(___fldiv@b+2)^0,c
  4242  000FE4  0E00               	movlw	0
  4243  000FE6  6E35               	movwf	(___fldiv@b+3)^0,c
  4244  000FE8                     l3757:
  4245  000FE8  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4246  000FEA  EF01  F008         	goto	u3340
  4247  000FEE  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4248  000FF0  E106               	bnz	u3341
  4249  000FF2  0443               	decf	___fldiv@new_exp^0,w,c
  4250  000FF4  B0D8               	btfsc	status,0,c
  4251  000FF6  EFFF  F007         	goto	u3341
  4252  000FFA  EF01  F008         	goto	u3340
  4253  000FFE                     u3341:
  4254  000FFE  EF0F  F008         	goto	l3761
  4255  001002                     u3340:
  4256  001002  0E00               	movlw	0
  4257  001004  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4258  001006  0E00               	movlw	0
  4259  001008  6E43               	movwf	___fldiv@new_exp^0,c
  4260  00100A  0E00               	movlw	0
  4261  00100C  6E32               	movwf	___fldiv@b^0,c
  4262  00100E  0E00               	movlw	0
  4263  001010  6E33               	movwf	(___fldiv@b+1)^0,c
  4264  001012  0E00               	movlw	0
  4265  001014  6E34               	movwf	(___fldiv@b+2)^0,c
  4266  001016  0E00               	movlw	0
  4267  001018  6E35               	movwf	(___fldiv@b+3)^0,c
  4268  00101A  0E00               	movlw	0
  4269  00101C  6E42               	movwf	___fldiv@sign^0,c
  4270  00101E                     l3761:
  4271  00101E  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  4272  001022  A049               	btfss	___fldiv@bexp^0,0,c
  4273  001024  EF16  F008         	goto	u3351
  4274  001028  EF18  F008         	goto	u3350
  4275  00102C                     u3351:
  4276  00102C  EF1B  F008         	goto	l3767
  4277  001030                     u3350:
  4278  001030  8E34               	bsf	(___fldiv@b+2)^0,7,c
  4279  001032  EF1C  F008         	goto	l3769
  4280  001036                     l3767:
  4281  001036  9E34               	bcf	(___fldiv@b+2)^0,7,c
  4282  001038                     l3769:
  4283  001038  90D8               	bcf	status,0,c
  4284  00103A  3049               	rrcf	___fldiv@bexp^0,w,c
  4285  00103C  6E35               	movwf	(___fldiv@b+3)^0,c
  4286  00103E  EFD2  F006         	goto	l3683
  4287  001042                     l1022:
  4288  001042  0012               	return		;funcret
  4289  001044                     __end_of___fldiv:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function ___awmod *****************
  4293 ;; Defined at:
  4294 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  dividend        2    2[BANK0 ] int 
  4297 ;;  divisor         2    4[BANK0 ] int 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  sign            1    7[BANK0 ] unsigned char 
  4300 ;;  counter         1    6[BANK0 ] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  2    2[BANK0 ] int 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4310 ;;      Params:         0       4       0       0       0       0       0       0       0
  4311 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4313 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4314 ;;Total ram usage:        6 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    2
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_appADC
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text19
  4325  002E42                     __ptext19:
  4326                           	callstack 0
  4327  002E42                     ___awmod:
  4328                           	callstack 26
  4329  002E42  0E00               	movlw	0
  4330  002E44  0100               	movlb	0	; () banked
  4331  002E46  6F9B               	movwf	___awmod@sign& (0+255),b
  4332  002E48                     
  4333                           ; BSR set to: 0
  4334  002E48  BF97               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4335  002E4A  EF2B  F017         	goto	u4120
  4336  002E4E  EF29  F017         	goto	u4121
  4337  002E52                     u4121:
  4338  002E52  EF31  F017         	goto	l4613
  4339  002E56                     u4120:
  4340  002E56                     
  4341                           ; BSR set to: 0
  4342  002E56  6D96               	negf	___awmod@dividend& (0+255),b
  4343  002E58  1F97               	comf	(___awmod@dividend+1)& (0+255),f,b
  4344  002E5A  B0D8               	btfsc	status,0,c
  4345  002E5C  2B97               	incf	(___awmod@dividend+1)& (0+255),f,b
  4346  002E5E                     
  4347                           ; BSR set to: 0
  4348  002E5E  0E01               	movlw	1
  4349  002E60  6F9B               	movwf	___awmod@sign& (0+255),b
  4350  002E62                     l4613:
  4351                           
  4352                           ; BSR set to: 0
  4353  002E62  BF99               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4354  002E64  EF38  F017         	goto	u4130
  4355  002E68  EF36  F017         	goto	u4131
  4356  002E6C                     u4131:
  4357  002E6C  EF3C  F017         	goto	l4617
  4358  002E70                     u4130:
  4359  002E70                     
  4360                           ; BSR set to: 0
  4361  002E70  6D98               	negf	___awmod@divisor& (0+255),b
  4362  002E72  1F99               	comf	(___awmod@divisor+1)& (0+255),f,b
  4363  002E74  B0D8               	btfsc	status,0,c
  4364  002E76  2B99               	incf	(___awmod@divisor+1)& (0+255),f,b
  4365  002E78                     l4617:
  4366                           
  4367                           ; BSR set to: 0
  4368  002E78  5198               	movf	___awmod@divisor& (0+255),w,b
  4369  002E7A  1199               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4370  002E7C  B4D8               	btfsc	status,2,c
  4371  002E7E  EF43  F017         	goto	u4141
  4372  002E82  EF45  F017         	goto	u4140
  4373  002E86                     u4141:
  4374  002E86  EF69  F017         	goto	l4633
  4375  002E8A                     u4140:
  4376  002E8A                     
  4377                           ; BSR set to: 0
  4378  002E8A  0E01               	movlw	1
  4379  002E8C  6F9A               	movwf	___awmod@counter& (0+255),b
  4380  002E8E  EF4D  F017         	goto	l4623
  4381  002E92                     l4621:
  4382                           
  4383                           ; BSR set to: 0
  4384  002E92  90D8               	bcf	status,0,c
  4385  002E94  3798               	rlcf	___awmod@divisor& (0+255),f,b
  4386  002E96  3799               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4387  002E98  2B9A               	incf	___awmod@counter& (0+255),f,b
  4388  002E9A                     l4623:
  4389                           
  4390                           ; BSR set to: 0
  4391  002E9A  AF99               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4392  002E9C  EF52  F017         	goto	u4151
  4393  002EA0  EF54  F017         	goto	u4150
  4394  002EA4                     u4151:
  4395  002EA4  EF49  F017         	goto	l4621
  4396  002EA8                     u4150:
  4397  002EA8                     l4625:
  4398                           
  4399                           ; BSR set to: 0
  4400  002EA8  5198               	movf	___awmod@divisor& (0+255),w,b
  4401  002EAA  5D96               	subwf	___awmod@dividend& (0+255),w,b
  4402  002EAC  5199               	movf	(___awmod@divisor+1)& (0+255),w,b
  4403  002EAE  5997               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4404  002EB0  A0D8               	btfss	status,0,c
  4405  002EB2  EF5D  F017         	goto	u4161
  4406  002EB6  EF5F  F017         	goto	u4160
  4407  002EBA                     u4161:
  4408  002EBA  EF63  F017         	goto	l4629
  4409  002EBE                     u4160:
  4410  002EBE                     
  4411                           ; BSR set to: 0
  4412  002EBE  5198               	movf	___awmod@divisor& (0+255),w,b
  4413  002EC0  5F96               	subwf	___awmod@dividend& (0+255),f,b
  4414  002EC2  5199               	movf	(___awmod@divisor+1)& (0+255),w,b
  4415  002EC4  5B97               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4416  002EC6                     l4629:
  4417                           
  4418                           ; BSR set to: 0
  4419  002EC6  90D8               	bcf	status,0,c
  4420  002EC8  3399               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4421  002ECA  3398               	rrcf	___awmod@divisor& (0+255),f,b
  4422  002ECC                     
  4423                           ; BSR set to: 0
  4424  002ECC  2F9A               	decfsz	___awmod@counter& (0+255),f,b
  4425  002ECE  EF54  F017         	goto	l4625
  4426  002ED2                     l4633:
  4427                           
  4428                           ; BSR set to: 0
  4429  002ED2  519B               	movf	___awmod@sign& (0+255),w,b
  4430  002ED4  B4D8               	btfsc	status,2,c
  4431  002ED6  EF6F  F017         	goto	u4171
  4432  002EDA  EF71  F017         	goto	u4170
  4433  002EDE                     u4171:
  4434  002EDE  EF75  F017         	goto	l4637
  4435  002EE2                     u4170:
  4436  002EE2                     
  4437                           ; BSR set to: 0
  4438  002EE2  6D96               	negf	___awmod@dividend& (0+255),b
  4439  002EE4  1F97               	comf	(___awmod@dividend+1)& (0+255),f,b
  4440  002EE6  B0D8               	btfsc	status,0,c
  4441  002EE8  2B97               	incf	(___awmod@dividend+1)& (0+255),f,b
  4442  002EEA                     l4637:
  4443                           
  4444                           ; BSR set to: 0
  4445  002EEA  C096  F096         	movff	___awmod@dividend,?___awmod
  4446  002EEE  C097  F097         	movff	___awmod@dividend+1,?___awmod+1
  4447  002EF2                     
  4448                           ; BSR set to: 0
  4449  002EF2  0012               	return		;funcret
  4450  002EF4                     __end_of___awmod:
  4451                           	callstack 0
  4452                           
  4453 ;; *************** function _appInit *****************
  4454 ;; Defined at:
  4455 ;;		line 12 in file "app.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    5
  4476 ;; This function calls:
  4477 ;;		_adcInit
  4478 ;;		_appCounterInit
  4479 ;;		_appISRConfig
  4480 ;;		_appLCD_Init
  4481 ;;		_appTimerInit
  4482 ;;		_servoInit
  4483 ;;		_setServo
  4484 ;;		_uart_Init
  4485 ;; This function is called by:
  4486 ;;		_main
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text20
  4491  0035D0                     __ptext20:
  4492                           	callstack 0
  4493  0035D0                     _appInit:
  4494                           	callstack 25
  4495  0035D0                     
  4496                           ;app.c: 14:     appISRConfig();
  4497  0035D0  EC4C  F01C         	call	_appISRConfig	;wreg free
  4498  0035D4                     
  4499                           ;app.c: 15:     appLCD_Init();
  4500  0035D4  ECB6  F018         	call	_appLCD_Init	;wreg free
  4501  0035D8                     
  4502                           ;app.c: 16:     adcInit(2);
  4503  0035D8  0E02               	movlw	2
  4504  0035DA  EC9F  F01A         	call	_adcInit
  4505  0035DE                     
  4506                           ;app.c: 17:     appTimerInit();
  4507  0035DE  ECDE  F01B         	call	_appTimerInit	;wreg free
  4508  0035E2                     
  4509                           ;app.c: 18:     appCounterInit(0);
  4510  0035E2  0E00               	movlw	0
  4511  0035E4  6E08               	movwf	(appCounterInit@reload+1)^0,c
  4512  0035E6  0E00               	movlw	0
  4513  0035E8  6E07               	movwf	appCounterInit@reload^0,c
  4514  0035EA  EC47  F01C         	call	_appCounterInit	;wreg free
  4515  0035EE                     
  4516                           ;app.c: 19:     servoInit();
  4517  0035EE  EC2A  F01C         	call	_servoInit	;wreg free
  4518  0035F2                     
  4519                           ;app.c: 20:     uart_Init(9600);
  4520  0035F2  0E80               	movlw	128
  4521  0035F4  6E14               	movwf	uart_Init@baud^0,c
  4522  0035F6  0E25               	movlw	37
  4523  0035F8  6E15               	movwf	(uart_Init@baud+1)^0,c
  4524  0035FA  0E00               	movlw	0
  4525  0035FC  6E16               	movwf	(uart_Init@baud+2)^0,c
  4526  0035FE  0E00               	movlw	0
  4527  003600  6E17               	movwf	(uart_Init@baud+3)^0,c
  4528  003602  ECFC  F019         	call	_uart_Init	;wreg free
  4529  003606                     
  4530                           ;app.c: 21:     setServo(33,10,0);
  4531  003606  0E0A               	movlw	10
  4532  003608  6E0B               	movwf	setServo@pulsos^0,c
  4533  00360A  0E00               	movlw	0
  4534  00360C  6E0C               	movwf	setServo@pin^0,c
  4535  00360E  0E21               	movlw	33
  4536  003610  ECF5  F01B         	call	_setServo
  4537  003614  0012               	return		;funcret
  4538  003616                     __end_of_appInit:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _uart_Init *****************
  4542 ;; Defined at:
  4543 ;;		line 18 in file "UART.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  baud            4   19[COMRAM] unsigned long 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4557 ;;      Params:         4       0       0       0       0       0       0       0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4560 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4561 ;;Total ram usage:        4 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    3
  4564 ;; This function calls:
  4565 ;;		___lldiv
  4566 ;; This function is called by:
  4567 ;;		_appInit
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text21
  4572  0033F8                     __ptext21:
  4573                           	callstack 0
  4574  0033F8                     _uart_Init:
  4575                           	callstack 26
  4576  0033F8                     
  4577                           ;UART.c: 18: void uart_Init(uint32_t baud);UART.c: 19: {;UART.c: 20:     TRISCbits.RC6 =
      +                           0;
  4578  0033F8  9C94               	bcf	148,6,c	;volatile
  4579                           
  4580                           ;UART.c: 21:     TRISCbits.RC7 = 1;
  4581  0033FA  8E94               	bsf	148,7,c	;volatile
  4582                           
  4583                           ;UART.c: 23:     BAUDCONbits.BRG16 = 0;
  4584  0033FC  96B8               	bcf	184,3,c	;volatile
  4585  0033FE                     
  4586                           ;UART.c: 24:     SPBRG = (uint8_t)(((12000000/baud)/64)-1);
  4587  0033FE  0E00               	movlw	0
  4588  003400  6E07               	movwf	___lldiv@dividend^0,c
  4589  003402  0E1B               	movlw	27
  4590  003404  6E08               	movwf	(___lldiv@dividend+1)^0,c
  4591  003406  0EB7               	movlw	183
  4592  003408  6E09               	movwf	(___lldiv@dividend+2)^0,c
  4593  00340A  0E00               	movlw	0
  4594  00340C  6E0A               	movwf	(___lldiv@dividend+3)^0,c
  4595  00340E  C014  F00B         	movff	uart_Init@baud,___lldiv@divisor
  4596  003412  C015  F00C         	movff	uart_Init@baud+1,___lldiv@divisor+1
  4597  003416  C016  F00D         	movff	uart_Init@baud+2,___lldiv@divisor+2
  4598  00341A  C017  F00E         	movff	uart_Init@baud+3,___lldiv@divisor+3
  4599  00341E  EC7A  F017         	call	___lldiv	;wreg free
  4600  003422  0E07               	movlw	7
  4601  003424  EF19  F01A         	goto	u3810
  4602  003428                     u3815:
  4603  003428  90D8               	bcf	status,0,c
  4604  00342A  320A               	rrcf	(?___lldiv+3)^0,f,c
  4605  00342C  3209               	rrcf	(?___lldiv+2)^0,f,c
  4606  00342E  3208               	rrcf	(?___lldiv+1)^0,f,c
  4607  003430  3207               	rrcf	?___lldiv^0,f,c
  4608  003432                     u3810:
  4609  003432  2EE8               	decfsz	wreg,f,c
  4610  003434  EF14  F01A         	goto	u3815
  4611  003438  0407               	decf	?___lldiv^0,w,c
  4612  00343A  6EAF               	movwf	175,c	;volatile
  4613  00343C                     
  4614                           ;UART.c: 26:     TXSTAbits.BRGH = 0;
  4615  00343C  94AC               	bcf	172,2,c	;volatile
  4616  00343E                     
  4617                           ;UART.c: 27:     TXSTAbits.SYNC = 0;
  4618  00343E  98AC               	bcf	172,4,c	;volatile
  4619  003440                     
  4620                           ;UART.c: 28:     TXSTAbits.TX9 = 0;
  4621  003440  9CAC               	bcf	172,6,c	;volatile
  4622  003442                     
  4623                           ;UART.c: 29:     TXSTAbits.TXEN = 1;
  4624  003442  8AAC               	bsf	172,5,c	;volatile
  4625  003444                     
  4626                           ;UART.c: 31:     RCSTAbits.SPEN = 1;
  4627  003444  8EAB               	bsf	171,7,c	;volatile
  4628  003446                     
  4629                           ;UART.c: 32:     RCSTAbits.RC9 = 0;
  4630  003446  9CAB               	bcf	171,6,c	;volatile
  4631  003448                     
  4632                           ;UART.c: 33:     RCSTAbits.CREN = 1;
  4633  003448  88AB               	bsf	171,4,c	;volatile
  4634  00344A                     
  4635                           ;UART.c: 35:     PIE1bits.RCIE = 1;
  4636  00344A  8A9D               	bsf	157,5,c	;volatile
  4637  00344C                     
  4638                           ;UART.c: 36:     IPR1bits.RCIP =1;
  4639  00344C  8A9F               	bsf	159,5,c	;volatile
  4640  00344E  0012               	return		;funcret
  4641  003450                     __end_of_uart_Init:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function ___lldiv *****************
  4645 ;; Defined at:
  4646 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__lldiv.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  dividend        4    6[COMRAM] unsigned long 
  4649 ;;  divisor         4   10[COMRAM] unsigned long 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  quotient        4   14[COMRAM] unsigned long 
  4652 ;;  counter         1   18[COMRAM] unsigned char 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  4    6[COMRAM] unsigned long 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4662 ;;      Params:         8       0       0       0       0       0       0       0       0
  4663 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4665 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4666 ;;Total ram usage:       13 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    2
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_uart_Init
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text22
  4677  002EF4                     __ptext22:
  4678                           	callstack 0
  4679  002EF4                     ___lldiv:
  4680                           	callstack 26
  4681  002EF4  0E00               	movlw	0
  4682  002EF6  6E0F               	movwf	___lldiv@quotient^0,c
  4683  002EF8  0E00               	movlw	0
  4684  002EFA  6E10               	movwf	(___lldiv@quotient+1)^0,c
  4685  002EFC  0E00               	movlw	0
  4686  002EFE  6E11               	movwf	(___lldiv@quotient+2)^0,c
  4687  002F00  0E00               	movlw	0
  4688  002F02  6E12               	movwf	(___lldiv@quotient+3)^0,c
  4689  002F04  500B               	movf	___lldiv@divisor^0,w,c
  4690  002F06  100C               	iorwf	(___lldiv@divisor+1)^0,w,c
  4691  002F08  100D               	iorwf	(___lldiv@divisor+2)^0,w,c
  4692  002F0A  100E               	iorwf	(___lldiv@divisor+3)^0,w,c
  4693  002F0C  B4D8               	btfsc	status,2,c
  4694  002F0E  EF8B  F017         	goto	u3101
  4695  002F12  EF8D  F017         	goto	u3100
  4696  002F16                     u3101:
  4697  002F16  EFC3  F017         	goto	l467
  4698  002F1A                     u3100:
  4699  002F1A  0E01               	movlw	1
  4700  002F1C  6E13               	movwf	___lldiv@counter^0,c
  4701  002F1E  EF97  F017         	goto	l3625
  4702  002F22                     l3623:
  4703  002F22  90D8               	bcf	status,0,c
  4704  002F24  360B               	rlcf	___lldiv@divisor^0,f,c
  4705  002F26  360C               	rlcf	(___lldiv@divisor+1)^0,f,c
  4706  002F28  360D               	rlcf	(___lldiv@divisor+2)^0,f,c
  4707  002F2A  360E               	rlcf	(___lldiv@divisor+3)^0,f,c
  4708  002F2C  2A13               	incf	___lldiv@counter^0,f,c
  4709  002F2E                     l3625:
  4710  002F2E  AE0E               	btfss	(___lldiv@divisor+3)^0,7,c
  4711  002F30  EF9C  F017         	goto	u3111
  4712  002F34  EF9E  F017         	goto	u3110
  4713  002F38                     u3111:
  4714  002F38  EF91  F017         	goto	l3623
  4715  002F3C                     u3110:
  4716  002F3C                     l3627:
  4717  002F3C  90D8               	bcf	status,0,c
  4718  002F3E  360F               	rlcf	___lldiv@quotient^0,f,c
  4719  002F40  3610               	rlcf	(___lldiv@quotient+1)^0,f,c
  4720  002F42  3611               	rlcf	(___lldiv@quotient+2)^0,f,c
  4721  002F44  3612               	rlcf	(___lldiv@quotient+3)^0,f,c
  4722  002F46  500B               	movf	___lldiv@divisor^0,w,c
  4723  002F48  5C07               	subwf	___lldiv@dividend^0,w,c
  4724  002F4A  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4725  002F4C  5808               	subwfb	(___lldiv@dividend+1)^0,w,c
  4726  002F4E  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4727  002F50  5809               	subwfb	(___lldiv@dividend+2)^0,w,c
  4728  002F52  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4729  002F54  580A               	subwfb	(___lldiv@dividend+3)^0,w,c
  4730  002F56  A0D8               	btfss	status,0,c
  4731  002F58  EFB0  F017         	goto	u3121
  4732  002F5C  EFB2  F017         	goto	u3120
  4733  002F60                     u3121:
  4734  002F60  EFBB  F017         	goto	l3635
  4735  002F64                     u3120:
  4736  002F64  500B               	movf	___lldiv@divisor^0,w,c
  4737  002F66  5E07               	subwf	___lldiv@dividend^0,f,c
  4738  002F68  500C               	movf	(___lldiv@divisor+1)^0,w,c
  4739  002F6A  5A08               	subwfb	(___lldiv@dividend+1)^0,f,c
  4740  002F6C  500D               	movf	(___lldiv@divisor+2)^0,w,c
  4741  002F6E  5A09               	subwfb	(___lldiv@dividend+2)^0,f,c
  4742  002F70  500E               	movf	(___lldiv@divisor+3)^0,w,c
  4743  002F72  5A0A               	subwfb	(___lldiv@dividend+3)^0,f,c
  4744  002F74  800F               	bsf	___lldiv@quotient^0,0,c
  4745  002F76                     l3635:
  4746  002F76  90D8               	bcf	status,0,c
  4747  002F78  320E               	rrcf	(___lldiv@divisor+3)^0,f,c
  4748  002F7A  320D               	rrcf	(___lldiv@divisor+2)^0,f,c
  4749  002F7C  320C               	rrcf	(___lldiv@divisor+1)^0,f,c
  4750  002F7E  320B               	rrcf	___lldiv@divisor^0,f,c
  4751  002F80  2E13               	decfsz	___lldiv@counter^0,f,c
  4752  002F82  EF9E  F017         	goto	l3627
  4753  002F86                     l467:
  4754  002F86  C00F  F007         	movff	___lldiv@quotient,?___lldiv
  4755  002F8A  C010  F008         	movff	___lldiv@quotient+1,?___lldiv+1
  4756  002F8E  C011  F009         	movff	___lldiv@quotient+2,?___lldiv+2
  4757  002F92  C012  F00A         	movff	___lldiv@quotient+3,?___lldiv+3
  4758  002F96  0012               	return		;funcret
  4759  002F98                     __end_of___lldiv:
  4760                           	callstack 0
  4761                           
  4762 ;; *************** function _servoInit *****************
  4763 ;; Defined at:
  4764 ;;		line 4 in file "servo.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4778 ;;      Params:         0       0       0       0       0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4782 ;;Total ram usage:        0 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    2
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_appInit
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text23
  4793  003854                     __ptext23:
  4794                           	callstack 0
  4795  003854                     _servoInit:
  4796                           	callstack 27
  4797  003854                     
  4798                           ;servo.c: 10:     T2CONbits.T2CKPS = 0b10;
  4799  003854  50CA               	movf	202,w,c	;volatile
  4800  003856  0BFC               	andlw	-4
  4801  003858  0902               	iorlw	2
  4802  00385A  6ECA               	movwf	202,c	;volatile
  4803  00385C                     
  4804                           ;servo.c: 11:     T2CONbits.T2OUTPS0 = 1;
  4805  00385C  86CA               	bsf	202,3,c	;volatile
  4806  00385E                     
  4807                           ;servo.c: 12:     T2CONbits.T2OUTPS1 = 1;
  4808  00385E  88CA               	bsf	202,4,c	;volatile
  4809  003860                     
  4810                           ;servo.c: 13:     T2CONbits.T2OUTPS2 = 1;
  4811  003860  8ACA               	bsf	202,5,c	;volatile
  4812  003862                     
  4813                           ;servo.c: 14:     T2CONbits.T2OUTPS3 = 1;
  4814  003862  8CCA               	bsf	202,6,c	;volatile
  4815  003864                     
  4816                           ;servo.c: 15:     TRISEbits.TRISE0 = 0;
  4817  003864  9096               	bcf	150,0,c	;volatile
  4818  003866                     
  4819                           ;servo.c: 16:     TRISEbits.TRISE1 = 0;
  4820  003866  9296               	bcf	150,1,c	;volatile
  4821  003868                     
  4822                           ;servo.c: 17:     TRISEbits.TRISE2 = 0;
  4823  003868  9496               	bcf	150,2,c	;volatile
  4824  00386A  0012               	return		;funcret
  4825  00386C                     __end_of_servoInit:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function _appTimerInit *****************
  4829 ;; Defined at:
  4830 ;;		line 85 in file "servo.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;		None
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, status,2
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4844 ;;      Params:         0       0       0       0       0       0       0       0       0
  4845 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4847 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4848 ;;Total ram usage:        0 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; Hardware stack levels required when called:    2
  4851 ;; This function calls:
  4852 ;;		Nothing
  4853 ;; This function is called by:
  4854 ;;		_appInit
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text24
  4859  0037BC                     __ptext24:
  4860                           	callstack 0
  4861  0037BC                     _appTimerInit:
  4862                           	callstack 27
  4863  0037BC                     
  4864                           ;servo.c: 90:     T3CONbits.TMR3ON = 0;
  4865  0037BC  90B1               	bcf	177,0,c	;volatile
  4866                           
  4867                           ;servo.c: 91:     T3CONbits.RD16 = 1;
  4868  0037BE  8EB1               	bsf	177,7,c	;volatile
  4869                           
  4870                           ;servo.c: 92:     T3CONbits.TMR3CS = 0;
  4871  0037C0  92B1               	bcf	177,1,c	;volatile
  4872  0037C2                     
  4873                           ;servo.c: 93:     T3CONbits.T3CKPS = 0b11;
  4874  0037C2  0E30               	movlw	48
  4875  0037C4  12B1               	iorwf	177,f,c	;volatile
  4876  0037C6                     
  4877                           ;servo.c: 94:     T3CONbits.T3NSYNC = 1;
  4878  0037C6  84B1               	bsf	177,2,c	;volatile
  4879                           
  4880                           ;servo.c: 95:     TMR3 = 20536;
  4881  0037C8  0E50               	movlw	80
  4882  0037CA  6EB3               	movwf	179,c	;volatile
  4883  0037CC  0E38               	movlw	56
  4884  0037CE  6EB2               	movwf	178,c	;volatile
  4885  0037D0                     
  4886                           ;servo.c: 100:     T0CONbits.TMR0ON = 0;
  4887  0037D0  9ED5               	bcf	213,7,c	;volatile
  4888  0037D2                     
  4889                           ;servo.c: 101:     T0CONbits.T08BIT = 1;
  4890  0037D2  8CD5               	bsf	213,6,c	;volatile
  4891  0037D4                     
  4892                           ;servo.c: 102:     T0CONbits.T0CS = 1;
  4893  0037D4  8AD5               	bsf	213,5,c	;volatile
  4894  0037D6                     
  4895                           ;servo.c: 103:     T0CONbits.T0SE = 0;
  4896  0037D6  98D5               	bcf	213,4,c	;volatile
  4897  0037D8                     
  4898                           ;servo.c: 104:     T0CONbits.PSA = 1;
  4899  0037D8  86D5               	bsf	213,3,c	;volatile
  4900  0037DA                     
  4901                           ;servo.c: 106:     TRISAbits.TRISA4 = 1;
  4902  0037DA  8892               	bsf	146,4,c	;volatile
  4903  0037DC                     
  4904                           ;servo.c: 112:     INTCONbits.TMR0IE = 1;
  4905  0037DC  8AF2               	bsf	242,5,c	;volatile
  4906  0037DE                     
  4907                           ;servo.c: 113:     INTCONbits.TMR0IF = 0;
  4908  0037DE  94F2               	bcf	242,2,c	;volatile
  4909  0037E0                     
  4910                           ;servo.c: 114:     INTCON2bits.TMR0IP = 1;
  4911  0037E0  84F1               	bsf	241,2,c	;volatile
  4912  0037E2                     
  4913                           ;servo.c: 120:     PIR2bits.TMR3IF = 0;
  4914  0037E2  92A1               	bcf	161,1,c	;volatile
  4915  0037E4                     
  4916                           ;servo.c: 121:     IPR2bits.TMR3IP = 0;
  4917  0037E4  92A2               	bcf	162,1,c	;volatile
  4918  0037E6                     
  4919                           ;servo.c: 122:     PIE2bits.TMR3IE = 1;
  4920  0037E6  82A0               	bsf	160,1,c	;volatile
  4921  0037E8  0012               	return		;funcret
  4922  0037EA                     __end_of_appTimerInit:
  4923                           	callstack 0
  4924                           
  4925 ;; *************** function _appLCD_Init *****************
  4926 ;; Defined at:
  4927 ;;		line 197 in file "flex_lcd.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;		None
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      void 
  4934 ;; Registers used:
  4935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4943 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4944 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4945 ;;Total ram usage:        2 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    4
  4948 ;; This function calls:
  4949 ;;		_Lcd_Cmd
  4950 ;;		_Lcd_Init
  4951 ;;		_Lcd_Out
  4952 ;; This function is called by:
  4953 ;;		_appInit
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text25
  4958  00316C                     __ptext25:
  4959                           	callstack 0
  4960  00316C                     _appLCD_Init:
  4961                           	callstack 25
  4962  00316C                     
  4963                           ;flex_lcd.c: 199:     Lcd_Init();
  4964  00316C  EC65  F016         	call	_Lcd_Init	;wreg free
  4965                           
  4966                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  4967  003170  0E01               	movlw	1
  4968  003172  EC81  F012         	call	_Lcd_Cmd
  4969                           
  4970                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  4971  003176  0E0C               	movlw	12
  4972  003178  EC81  F012         	call	_Lcd_Cmd
  4973  00317C                     
  4974                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  4975  00317C  0E02               	movlw	2
  4976  00317E  6E12               	movwf	(??_appLCD_Init+1)^0,c
  4977  003180  0E86               	movlw	134
  4978  003182  6E11               	movwf	??_appLCD_Init^0,c
  4979  003184  0E99               	movlw	153
  4980  003186                     u4547:
  4981  003186  2EE8               	decfsz	wreg,f,c
  4982  003188  D7FE               	bra	u4547
  4983  00318A  2E11               	decfsz	??_appLCD_Init^0,f,c
  4984  00318C  D7FC               	bra	u4547
  4985  00318E  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  4986  003190  D7FA               	bra	u4547
  4987  003192  F000               	nop	
  4988  003194                     
  4989                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  4990  003194  0E03               	movlw	3
  4991  003196  6E0A               	movwf	Lcd_Out@x^0,c
  4992  003198  0E54               	movlw	low STR_3
  4993  00319A  6E0B               	movwf	Lcd_Out@buffer^0,c
  4994  00319C  0E08               	movlw	high STR_3
  4995  00319E  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  4996  0031A0  0E01               	movlw	1
  4997  0031A2  EC39  F015         	call	_Lcd_Out
  4998  0031A6                     
  4999                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  5000  0031A6  0E06               	movlw	6
  5001  0031A8  6E0A               	movwf	Lcd_Out@x^0,c
  5002  0031AA  0E73               	movlw	low STR_4
  5003  0031AC  6E0B               	movwf	Lcd_Out@buffer^0,c
  5004  0031AE  0E08               	movlw	high STR_4
  5005  0031B0  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  5006  0031B2  0E02               	movlw	2
  5007  0031B4  EC39  F015         	call	_Lcd_Out
  5008  0031B8                     
  5009                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  5010  0031B8  0E1F               	movlw	31
  5011  0031BA  6E12               	movwf	(??_appLCD_Init+1)^0,c
  5012  0031BC  0E71               	movlw	113
  5013  0031BE  6E11               	movwf	??_appLCD_Init^0,c
  5014  0031C0  0E1E               	movlw	30
  5015  0031C2                     u4557:
  5016  0031C2  2EE8               	decfsz	wreg,f,c
  5017  0031C4  D7FE               	bra	u4557
  5018  0031C6  2E11               	decfsz	??_appLCD_Init^0,f,c
  5019  0031C8  D7FC               	bra	u4557
  5020  0031CA  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  5021  0031CC  D7FA               	bra	u4557
  5022  0031CE  D000               	nop2	
  5023                           
  5024                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  5025  0031D0  0E01               	movlw	1
  5026  0031D2  EC81  F012         	call	_Lcd_Cmd
  5027  0031D6  0E02               	movlw	2
  5028  0031D8  6E12               	movwf	(??_appLCD_Init+1)^0,c
  5029  0031DA  0E86               	movlw	134
  5030  0031DC  6E11               	movwf	??_appLCD_Init^0,c
  5031  0031DE  0E99               	movlw	153
  5032  0031E0                     u4567:
  5033  0031E0  2EE8               	decfsz	wreg,f,c
  5034  0031E2  D7FE               	bra	u4567
  5035  0031E4  2E11               	decfsz	??_appLCD_Init^0,f,c
  5036  0031E6  D7FC               	bra	u4567
  5037  0031E8  2E12               	decfsz	(??_appLCD_Init+1)^0,f,c
  5038  0031EA  D7FA               	bra	u4567
  5039  0031EC  F000               	nop	
  5040  0031EE  0012               	return		;funcret
  5041  0031F0                     __end_of_appLCD_Init:
  5042                           	callstack 0
  5043                           
  5044 ;; *************** function _Lcd_Init *****************
  5045 ;; Defined at:
  5046 ;;		line 31 in file "flex_lcd.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;		None
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  i               1   10[COMRAM] unsigned char 
  5051 ;;  data            1    0        unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  1    wreg      void 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0, cstack
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5061 ;;      Params:         0       0       0       0       0       0       0       0       0
  5062 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5063 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5064 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5065 ;;Total ram usage:        3 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    3
  5068 ;; This function calls:
  5069 ;;		_Lcd_Cmd
  5070 ;; This function is called by:
  5071 ;;		_appLCD_Init
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text26
  5076  002CCA                     __ptext26:
  5077                           	callstack 0
  5078  002CCA                     _Lcd_Init:
  5079                           	callstack 25
  5080  002CCA                     
  5081                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  5082  002CCA  9E95               	bcf	149,7,c	;volatile
  5083                           
  5084                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  5085  002CCC  9C95               	bcf	149,6,c	;volatile
  5086                           
  5087                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  5088  002CCE  9A95               	bcf	149,5,c	;volatile
  5089                           
  5090                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  5091  002CD0  9895               	bcf	149,4,c	;volatile
  5092                           
  5093                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  5094  002CD2  9695               	bcf	149,3,c	;volatile
  5095                           
  5096                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  5097  002CD4  9495               	bcf	149,2,c	;volatile
  5098  002CD6                     
  5099                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  5100  002CD6  0E85               	movlw	133
  5101  002CD8  6E0A               	movwf	??_Lcd_Init^0,c
  5102  002CDA  0E76               	movlw	118
  5103  002CDC                     u4577:
  5104  002CDC  2EE8               	decfsz	wreg,f,c
  5105  002CDE  D7FE               	bra	u4577
  5106  002CE0  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5107  002CE2  D7FC               	bra	u4577
  5108  002CE4  D000               	nop2	
  5109  002CE6                     
  5110                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  5111  002CE6  0E00               	movlw	0
  5112  002CE8  6E0B               	movwf	Lcd_Init@i^0,c
  5113  002CEA                     l150:
  5114                           
  5115                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  5116  002CEA  9E8C               	bcf	140,7,c	;volatile
  5117                           
  5118                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  5119  002CEC  9C8C               	bcf	140,6,c	;volatile
  5120                           
  5121                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  5122  002CEE  8A8C               	bsf	140,5,c	;volatile
  5123                           
  5124                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  5125  002CF0  888C               	bsf	140,4,c	;volatile
  5126                           
  5127                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  5128  002CF2  968C               	bcf	140,3,c	;volatile
  5129                           
  5130                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  5131  002CF4  948C               	bcf	140,2,c	;volatile
  5132                           
  5133                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  5134  002CF6  9E8C               	bcf	140,7,c	;volatile
  5135                           
  5136                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  5137  002CF8  9C8C               	bcf	140,6,c	;volatile
  5138                           
  5139                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  5140  002CFA  8A8C               	bsf	140,5,c	;volatile
  5141                           
  5142                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  5143  002CFC  888C               	bsf	140,4,c	;volatile
  5144                           
  5145                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  5146  002CFE  868C               	bsf	140,3,c	;volatile
  5147                           
  5148                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  5149  002D00  948C               	bcf	140,2,c	;volatile
  5150  002D02                     
  5151                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  5152  002D02  0E05               	movlw	5
  5153  002D04                     u4587:
  5154  002D04  2EE8               	decfsz	wreg,f,c
  5155  002D06  D7FE               	bra	u4587
  5156  002D08                     
  5157                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  5158  002D08  9E8C               	bcf	140,7,c	;volatile
  5159  002D0A                     
  5160                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  5161  002D0A  9C8C               	bcf	140,6,c	;volatile
  5162  002D0C                     
  5163                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  5164  002D0C  8A8C               	bsf	140,5,c	;volatile
  5165  002D0E                     
  5166                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  5167  002D0E  888C               	bsf	140,4,c	;volatile
  5168  002D10                     
  5169                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  5170  002D10  968C               	bcf	140,3,c	;volatile
  5171  002D12                     
  5172                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  5173  002D12  948C               	bcf	140,2,c	;volatile
  5174                           
  5175                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5176  002D14  0E16               	movlw	22
  5177  002D16  6E0A               	movwf	??_Lcd_Init^0,c
  5178  002D18  0E6C               	movlw	108
  5179  002D1A                     u4597:
  5180  002D1A  2EE8               	decfsz	wreg,f,c
  5181  002D1C  D7FE               	bra	u4597
  5182  002D1E  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5183  002D20  D7FC               	bra	u4597
  5184  002D22  D000               	nop2	
  5185  002D24                     
  5186                           ;flex_lcd.c: 61:     }
  5187  002D24  2A0B               	incf	Lcd_Init@i^0,f,c
  5188  002D26  0E03               	movlw	3
  5189  002D28  640B               	cpfsgt	Lcd_Init@i^0,c
  5190  002D2A  EF99  F016         	goto	u3081
  5191  002D2E  EF9B  F016         	goto	u3080
  5192  002D32                     u3081:
  5193  002D32  EF75  F016         	goto	l150
  5194  002D36                     u3080:
  5195  002D36                     
  5196                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  5197  002D36  9E8C               	bcf	140,7,c	;volatile
  5198                           
  5199                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  5200  002D38  9C8C               	bcf	140,6,c	;volatile
  5201                           
  5202                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  5203  002D3A  8A8C               	bsf	140,5,c	;volatile
  5204                           
  5205                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  5206  002D3C  988C               	bcf	140,4,c	;volatile
  5207                           
  5208                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  5209  002D3E  968C               	bcf	140,3,c	;volatile
  5210                           
  5211                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  5212  002D40  948C               	bcf	140,2,c	;volatile
  5213                           
  5214                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  5215  002D42  9E8C               	bcf	140,7,c	;volatile
  5216                           
  5217                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  5218  002D44  9C8C               	bcf	140,6,c	;volatile
  5219                           
  5220                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  5221  002D46  8A8C               	bsf	140,5,c	;volatile
  5222                           
  5223                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  5224  002D48  988C               	bcf	140,4,c	;volatile
  5225                           
  5226                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  5227  002D4A  868C               	bsf	140,3,c	;volatile
  5228                           
  5229                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  5230  002D4C  948C               	bcf	140,2,c	;volatile
  5231  002D4E                     
  5232                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  5233  002D4E  0E05               	movlw	5
  5234  002D50                     u4607:
  5235  002D50  2EE8               	decfsz	wreg,f,c
  5236  002D52  D7FE               	bra	u4607
  5237  002D54                     
  5238                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  5239  002D54  9E8C               	bcf	140,7,c	;volatile
  5240  002D56                     
  5241                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  5242  002D56  9C8C               	bcf	140,6,c	;volatile
  5243  002D58                     
  5244                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  5245  002D58  8A8C               	bsf	140,5,c	;volatile
  5246  002D5A                     
  5247                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  5248  002D5A  988C               	bcf	140,4,c	;volatile
  5249  002D5C                     
  5250                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  5251  002D5C  968C               	bcf	140,3,c	;volatile
  5252  002D5E                     
  5253                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  5254  002D5E  948C               	bcf	140,2,c	;volatile
  5255                           
  5256                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  5257  002D60  0E16               	movlw	22
  5258  002D62  6E0A               	movwf	??_Lcd_Init^0,c
  5259  002D64  0E6C               	movlw	108
  5260  002D66                     u4617:
  5261  002D66  2EE8               	decfsz	wreg,f,c
  5262  002D68  D7FE               	bra	u4617
  5263  002D6A  2E0A               	decfsz	??_Lcd_Init^0,f,c
  5264  002D6C  D7FC               	bra	u4617
  5265  002D6E  D000               	nop2	
  5266  002D70                     
  5267                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  5268  002D70  0E28               	movlw	40
  5269  002D72  EC81  F012         	call	_Lcd_Cmd
  5270  002D76                     
  5271                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  5272  002D76  0E10               	movlw	16
  5273  002D78  EC81  F012         	call	_Lcd_Cmd
  5274  002D7C                     
  5275                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  5276  002D7C  0E01               	movlw	1
  5277  002D7E  EC81  F012         	call	_Lcd_Cmd
  5278  002D82                     
  5279                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  5280  002D82  0E0F               	movlw	15
  5281  002D84  EC81  F012         	call	_Lcd_Cmd
  5282  002D88  0012               	return		;funcret
  5283  002D8A                     __end_of_Lcd_Init:
  5284                           	callstack 0
  5285                           
  5286 ;; *************** function _appISRConfig *****************
  5287 ;; Defined at:
  5288 ;;		line 25 in file "app.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;		None
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		None
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5302 ;;      Params:         0       0       0       0       0       0       0       0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5305 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5306 ;;Total ram usage:        0 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:    2
  5309 ;; This function calls:
  5310 ;;		Nothing
  5311 ;; This function is called by:
  5312 ;;		_appInit
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text27
  5317  003898                     __ptext27:
  5318                           	callstack 0
  5319  003898                     _appISRConfig:
  5320                           	callstack 27
  5321  003898                     
  5322                           ;app.c: 30:     RCONbits.IPEN = 1;
  5323  003898  8ED0               	bsf	208,7,c	;volatile
  5324                           
  5325                           ;app.c: 31:     INTCONbits.GIE_GIEH = 1;
  5326  00389A  8EF2               	bsf	242,7,c	;volatile
  5327                           
  5328                           ;app.c: 32:     INTCONbits.PEIE_GIEL = 1;
  5329  00389C  8CF2               	bsf	242,6,c	;volatile
  5330  00389E  0012               	return		;funcret
  5331  0038A0                     __end_of_appISRConfig:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function _appCounterInit *****************
  5335 ;; Defined at:
  5336 ;;		line 136 in file "servo.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  reload          2    6[COMRAM] unsigned short 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		None
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5350 ;;      Params:         2       0       0       0       0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5353 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5354 ;;Total ram usage:        2 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    2
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_appInit
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text28
  5365  00388E                     __ptext28:
  5366                           	callstack 0
  5367  00388E                     _appCounterInit:
  5368                           	callstack 27
  5369  00388E                     
  5370                           ;servo.c: 136: void appCounterInit(uint16_t reload);servo.c: 137: {;servo.c: 139:     TM
      +                          R0 = reload;
  5371  00388E  C007  FFD6         	movff	appCounterInit@reload,4054	;volatile
  5372  003892  C008  FFD7         	movff	appCounterInit@reload+1,4055	;volatile
  5373  003896  0012               	return		;funcret
  5374  003898                     __end_of_appCounterInit:
  5375                           	callstack 0
  5376                           
  5377 ;; *************** function _adcInit *****************
  5378 ;; Defined at:
  5379 ;;		line 10 in file "adc.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  ADC_PINs        1    wreg     unsigned char 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  ADC_PINs        1    7[COMRAM] unsigned char 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5393 ;;      Params:         0       0       0       0       0       0       0       0       0
  5394 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5395 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5396 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5397 ;;Total ram usage:        2 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:    2
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_appInit
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text29
  5408  00353E                     __ptext29:
  5409                           	callstack 0
  5410  00353E                     _adcInit:
  5411                           	callstack 27
  5412                           
  5413                           ;incstack = 0
  5414                           ;adcInit@ADC_PINs stored from wreg
  5415  00353E  6E08               	movwf	adcInit@ADC_PINs^0,c
  5416  003540                     
  5417                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  5418  003540  5008               	movf	adcInit@ADC_PINs^0,w,c
  5419  003542  A4D8               	btfss	status,2,c
  5420  003544  EFA6  F01A         	goto	u3781
  5421  003548  EFA8  F01A         	goto	u3780
  5422  00354C                     u3781:
  5423  00354C  EFAE  F01A         	goto	l4037
  5424  003550                     u3780:
  5425  003550                     
  5426                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  5427  003550  50C1               	movf	193,w,c	;volatile
  5428  003552  0BF0               	andlw	-16
  5429  003554  090E               	iorlw	14
  5430  003556  6EC1               	movwf	193,c	;volatile
  5431                           
  5432                           ;adc.c: 16:     }
  5433  003558  EFB6  F01A         	goto	l4039
  5434  00355C                     l4037:
  5435                           
  5436                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  5437  00355C  5008               	movf	adcInit@ADC_PINs^0,w,c
  5438  00355E  080F               	sublw	15
  5439  003560  6E07               	movwf	??_adcInit^0,c
  5440  003562  50C1               	movf	193,w,c	;volatile
  5441  003564  1807               	xorwf	??_adcInit^0,w,c
  5442  003566  0BF0               	andlw	-16
  5443  003568  1807               	xorwf	??_adcInit^0,w,c
  5444  00356A  6EC1               	movwf	193,c	;volatile
  5445  00356C                     l4039:
  5446                           
  5447                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  5448  00356C  0ECF               	movlw	-49
  5449  00356E  16C1               	andwf	193,f,c	;volatile
  5450  003570                     
  5451                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  5452  003570  50C0               	movf	192,w,c	;volatile
  5453  003572  0BC7               	andlw	-57
  5454  003574  0910               	iorlw	16
  5455  003576  6EC0               	movwf	192,c	;volatile
  5456  003578                     
  5457                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  5458  003578  50C0               	movf	192,w,c	;volatile
  5459  00357A  0BF8               	andlw	-8
  5460  00357C  0903               	iorlw	3
  5461  00357E  6EC0               	movwf	192,c	;volatile
  5462  003580                     
  5463                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  5464  003580  8EC0               	bsf	192,7,c	;volatile
  5465  003582                     
  5466                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  5467  003582  80C2               	bsf	194,0,c	;volatile
  5468  003584                     
  5469                           ;adc.c: 41:     TRISCbits.TRISC1 = 0;
  5470  003584  9294               	bcf	148,1,c	;volatile
  5471  003586  0012               	return		;funcret
  5472  003588                     __end_of_adcInit:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _appTimerStop *****************
  5476 ;; Defined at:
  5477 ;;		line 131 in file "servo.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		None
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5494 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    2
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_appGetElements
  5502 ;;		_warning
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text30
  5507  0038A4                     __ptext30:
  5508                           	callstack 0
  5509  0038A4                     _appTimerStop:
  5510                           	callstack 27
  5511  0038A4                     
  5512                           ;servo.c: 133:     T3CONbits.TMR3ON = 0;
  5513  0038A4  90B1               	bcf	177,0,c	;volatile
  5514  0038A6  0012               	return		;funcret
  5515  0038A8                     __end_of_appTimerStop:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function _appTimerStart *****************
  5519 ;; Defined at:
  5520 ;;		line 124 in file "servo.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;		None
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;		None
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5534 ;;      Params:         0       0       0       0       0       0       0       0       0
  5535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5537 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5538 ;;Total ram usage:        0 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    2
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_appGetElements
  5545 ;;		_warning
  5546 ;;		_confirmacion
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text31
  5551  003882                     __ptext31:
  5552                           	callstack 0
  5553  003882                     _appTimerStart:
  5554                           	callstack 27
  5555  003882                     
  5556                           ;servo.c: 127:     TMR3 = 20536;
  5557  003882  0E50               	movlw	80
  5558  003884  6EB3               	movwf	179,c	;volatile
  5559  003886  0E38               	movlw	56
  5560  003888  6EB2               	movwf	178,c	;volatile
  5561  00388A                     
  5562                           ;servo.c: 128:     T3CONbits.TMR3ON = 1;
  5563  00388A  80B1               	bsf	177,0,c	;volatile
  5564  00388C  0012               	return		;funcret
  5565  00388E                     __end_of_appTimerStart:
  5566                           	callstack 0
  5567                           
  5568 ;; *************** function _appSubGiveElemts *****************
  5569 ;; Defined at:
  5570 ;;		line 104 in file "app.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  data            2   14[COMRAM] PTR struct _state
  5573 ;;		 -> datos(25), 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5585 ;;      Params:         2       0       0       0       0       0       0       0       0
  5586 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5588 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5589 ;;Total ram usage:        2 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    4
  5592 ;; This function calls:
  5593 ;;		_appCounterStart
  5594 ;;		_setServo
  5595 ;; This function is called by:
  5596 ;;		_appGetElements
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text32
  5601  00386C                     __ptext32:
  5602                           	callstack 0
  5603  00386C                     _appSubGiveElemts:
  5604                           	callstack 25
  5605  00386C                     
  5606                           ;app.c: 104: void appSubGiveElemts(StateMachine *data);app.c: 105: {;app.c: 106:     app
      +                          CounterStart();
  5607  00386C  EC54  F01C         	call	_appCounterStart	;wreg free
  5608  003870                     
  5609                           ;app.c: 107:     setServo(39,10,2);
  5610  003870  0E0A               	movlw	10
  5611  003872  6E0B               	movwf	setServo@pulsos^0,c
  5612  003874  0E02               	movlw	2
  5613  003876  6E0C               	movwf	setServo@pin^0,c
  5614  003878  0E27               	movlw	39
  5615  00387A  ECF5  F01B         	call	_setServo
  5616  00387E                     
  5617                           ;app.c: 108:     LATAbits.LA5 = 1;
  5618  00387E  8A89               	bsf	137,5,c	;volatile
  5619  003880  0012               	return		;funcret
  5620  003882                     __end_of_appSubGiveElemts:
  5621                           	callstack 0
  5622                           
  5623 ;; *************** function _setServo *****************
  5624 ;; Defined at:
  5625 ;;		line 77 in file "servo.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  angle           1    wreg     unsigned char 
  5628 ;;  pulsos          1   10[COMRAM] unsigned char 
  5629 ;;  pin             1   11[COMRAM] unsigned char 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  angle           1   12[COMRAM] unsigned char 
  5632 ;;  i               1   13[COMRAM] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5642 ;;      Params:         2       0       0       0       0       0       0       0       0
  5643 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5645 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5646 ;;Total ram usage:        4 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    3
  5649 ;; This function calls:
  5650 ;;		_setServoAngle
  5651 ;; This function is called by:
  5652 ;;		_appInit
  5653 ;;		_appStateRecolectData
  5654 ;;		_appStateInitial
  5655 ;;		_appSubGiveElemts
  5656 ;;		_warning
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text33
  5661  0037EA                     __ptext33:
  5662                           	callstack 0
  5663  0037EA                     _setServo:
  5664                           	callstack 26
  5665                           
  5666                           ;incstack = 0
  5667                           ;setServo@angle stored from wreg
  5668  0037EA  6E0D               	movwf	setServo@angle^0,c
  5669  0037EC                     
  5670                           ;servo.c: 77: void setServo(uint8_t angle, uint8_t pulsos, uint8_t pin);servo.c: 78: {;s
      +                          ervo.c: 79:     for(uint8_t i = 0; i < pulsos; i++)
  5671  0037EC  0E00               	movlw	0
  5672  0037EE  6E0E               	movwf	setServo@i^0,c
  5673  0037F0  EF00  F01C         	goto	l3613
  5674  0037F4                     l3609:
  5675                           
  5676                           ;servo.c: 80:     {;servo.c: 81:         setServoAngle(angle, pin);
  5677  0037F4  C00C  F007         	movff	setServo@pin,setServoAngle@pin
  5678  0037F8  500D               	movf	setServo@angle^0,w,c
  5679  0037FA  ECA8  F013         	call	_setServoAngle
  5680  0037FE                     
  5681                           ;servo.c: 82:     }
  5682  0037FE  2A0E               	incf	setServo@i^0,f,c
  5683  003800                     l3613:
  5684  003800  500B               	movf	setServo@pulsos^0,w,c
  5685  003802  5C0E               	subwf	setServo@i^0,w,c
  5686  003804  A0D8               	btfss	status,0,c
  5687  003806  EF07  F01C         	goto	u3091
  5688  00380A  EF09  F01C         	goto	u3090
  5689  00380E                     u3091:
  5690  00380E  EFFA  F01B         	goto	l3609
  5691  003812                     u3090:
  5692  003812  0012               	return		;funcret
  5693  003814                     __end_of_setServo:
  5694                           	callstack 0
  5695                           
  5696 ;; *************** function _setServoAngle *****************
  5697 ;; Defined at:
  5698 ;;		line 20 in file "servo.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  angle           1    wreg     unsigned char 
  5701 ;;  pin             1    6[COMRAM] unsigned char 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  angle           1    9[COMRAM] unsigned char 
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      void 
  5706 ;; Registers used:
  5707 ;;		wreg, status,2, status,0
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5713 ;;      Params:         1       0       0       0       0       0       0       0       0
  5714 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5715 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5716 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5717 ;;Total ram usage:        4 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    2
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_setServo
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text34
  5728  002750                     __ptext34:
  5729                           	callstack 0
  5730  002750                     _setServoAngle:
  5731                           	callstack 26
  5732                           
  5733                           ;incstack = 0
  5734                           ;setServoAngle@angle stored from wreg
  5735  002750  6E0A               	movwf	setServoAngle@angle^0,c
  5736  002752                     
  5737                           ;servo.c: 20: void setServoAngle(uint8_t angle, uint8_t pin);servo.c: 21: {;servo.c: 23:
      +                               TMR2 = angle;
  5738  002752  C00A  FFCC         	movff	setServoAngle@angle,4044	;volatile
  5739  002756                     
  5740                           ;servo.c: 24:     PR2 = 255;
  5741  002756  68CB               	setf	203,c	;volatile
  5742  002758                     
  5743                           ;servo.c: 26:     PIR1bits.TMR2IF = 0;
  5744  002758  929E               	bcf	158,1,c	;volatile
  5745                           
  5746                           ;servo.c: 28:     switch(pin)
  5747  00275A  EFB8  F013         	goto	l3355
  5748  00275E                     l234:
  5749                           
  5750                           ;servo.c: 31:             LATEbits.LATE0 = 1;
  5751  00275E  808D               	bsf	141,0,c	;volatile
  5752                           
  5753                           ;servo.c: 32:             break;
  5754  002760  EFD1  F013         	goto	l3357
  5755  002764                     l236:
  5756                           
  5757                           ;servo.c: 34:             LATEbits.LATE1 = 1;
  5758  002764  828D               	bsf	141,1,c	;volatile
  5759                           
  5760                           ;servo.c: 35:             break;
  5761  002766  EFD1  F013         	goto	l3357
  5762  00276A                     l237:
  5763                           
  5764                           ;servo.c: 37:             LATEbits.LATE2 = 1;
  5765  00276A  848D               	bsf	141,2,c	;volatile
  5766                           
  5767                           ;servo.c: 38:             break;
  5768  00276C  EFD1  F013         	goto	l3357
  5769  002770                     l3355:
  5770  002770  5007               	movf	setServoAngle@pin^0,w,c
  5771  002772  6E08               	movwf	??_setServoAngle^0,c
  5772  002774  6A09               	clrf	(??_setServoAngle+1)^0,c
  5773                           
  5774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5775                           ; Switch size 1, requested type "simple"
  5776                           ; Number of cases is 1, Range of values is 0 to 0
  5777                           ; switch strategies available:
  5778                           ; Name         Instructions Cycles
  5779                           ; simple_byte            4     3 (average)
  5780                           ;	Chosen strategy is simple_byte
  5781  002776  5009               	movf	(??_setServoAngle+1)^0,w,c
  5782  002778  0A00               	xorlw	0	; case 0
  5783  00277A  B4D8               	btfsc	status,2,c
  5784  00277C  EFC2  F013         	goto	l5021
  5785  002780  EFD1  F013         	goto	l3357
  5786  002784                     l5021:
  5787                           
  5788                           ; Switch size 1, requested type "simple"
  5789                           ; Number of cases is 3, Range of values is 0 to 2
  5790                           ; switch strategies available:
  5791                           ; Name         Instructions Cycles
  5792                           ; simple_byte           10     6 (average)
  5793                           ;	Chosen strategy is simple_byte
  5794  002784  5008               	movf	??_setServoAngle^0,w,c
  5795  002786  0A00               	xorlw	0	; case 0
  5796  002788  B4D8               	btfsc	status,2,c
  5797  00278A  EFAF  F013         	goto	l234
  5798  00278E  0A01               	xorlw	1	; case 1
  5799  002790  B4D8               	btfsc	status,2,c
  5800  002792  EFB2  F013         	goto	l236
  5801  002796  0A03               	xorlw	3	; case 2
  5802  002798  B4D8               	btfsc	status,2,c
  5803  00279A  EFB5  F013         	goto	l237
  5804  00279E  EFD1  F013         	goto	l3357
  5805  0027A2                     l3357:
  5806                           
  5807                           ;servo.c: 41:     if(angle == 45)
  5808  0027A2  0E2D               	movlw	45
  5809  0027A4  180A               	xorwf	setServoAngle@angle^0,w,c
  5810  0027A6  A4D8               	btfss	status,2,c
  5811  0027A8  EFD8  F013         	goto	u2761
  5812  0027AC  EFDA  F013         	goto	u2760
  5813  0027B0                     u2761:
  5814  0027B0  EFE3  F013         	goto	l3361
  5815  0027B4                     u2760:
  5816  0027B4                     
  5817                           ;servo.c: 42:     {;servo.c: 43:         _delay((unsigned long)((2000)*(12000000/4000000
      +                          .0)));
  5818  0027B4  0E08               	movlw	8
  5819  0027B6  6E08               	movwf	??_setServoAngle^0,c
  5820  0027B8  0ECA               	movlw	202
  5821  0027BA                     u4627:
  5822  0027BA  2EE8               	decfsz	wreg,f,c
  5823  0027BC  D7FE               	bra	u4627
  5824  0027BE  2E08               	decfsz	??_setServoAngle^0,f,c
  5825  0027C0  D7FC               	bra	u4627
  5826                           
  5827                           ;servo.c: 44:     }
  5828  0027C2  EF07  F014         	goto	l3369
  5829  0027C6                     l3361:
  5830  0027C6  0E21               	movlw	33
  5831  0027C8  180A               	xorwf	setServoAngle@angle^0,w,c
  5832  0027CA  A4D8               	btfss	status,2,c
  5833  0027CC  EFEA  F013         	goto	u2771
  5834  0027D0  EFEC  F013         	goto	u2770
  5835  0027D4                     u2771:
  5836  0027D4  EFF6  F013         	goto	l3365
  5837  0027D8                     u2770:
  5838  0027D8                     
  5839                           ;servo.c: 46:     {;servo.c: 47:         _delay((unsigned long)((1000)*(12000000/4000000
      +                          .0)));
  5840  0027D8  0E04               	movlw	4
  5841  0027DA  6E08               	movwf	??_setServoAngle^0,c
  5842  0027DC  0EE4               	movlw	228
  5843  0027DE                     u4637:
  5844  0027DE  2EE8               	decfsz	wreg,f,c
  5845  0027E0  D7FE               	bra	u4637
  5846  0027E2  2E08               	decfsz	??_setServoAngle^0,f,c
  5847  0027E4  D7FC               	bra	u4637
  5848  0027E6  D000               	nop2	
  5849                           
  5850                           ;servo.c: 48:     }
  5851  0027E8  EF07  F014         	goto	l3369
  5852  0027EC                     l3365:
  5853  0027EC  0E27               	movlw	39
  5854  0027EE  180A               	xorwf	setServoAngle@angle^0,w,c
  5855  0027F0  A4D8               	btfss	status,2,c
  5856  0027F2  EFFD  F013         	goto	u2781
  5857  0027F6  EFFF  F013         	goto	u2780
  5858  0027FA                     u2781:
  5859  0027FA  EF07  F014         	goto	l3369
  5860  0027FE                     u2780:
  5861  0027FE                     
  5862                           ;servo.c: 50:     {;servo.c: 51:         _delay((unsigned long)((1500)*(12000000/4000000
      +                          .0)));
  5863  0027FE  0E06               	movlw	6
  5864  002800  6E08               	movwf	??_setServoAngle^0,c
  5865  002802  0ED7               	movlw	215
  5866  002804                     u4647:
  5867  002804  2EE8               	decfsz	wreg,f,c
  5868  002806  D7FE               	bra	u4647
  5869  002808  2E08               	decfsz	??_setServoAngle^0,f,c
  5870  00280A  D7FC               	bra	u4647
  5871  00280C  F000               	nop	
  5872  00280E                     l3369:
  5873                           
  5874                           ;servo.c: 54:     T2CONbits.TMR2ON = 1;
  5875  00280E  84CA               	bsf	202,2,c	;volatile
  5876                           
  5877                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5878  002810  EF2C  F014         	goto	l243
  5879  002814                     l246:
  5880                           
  5881                           ;servo.c: 60:                 LATEbits.LATE0 = 0;
  5882  002814  908D               	bcf	141,0,c	;volatile
  5883                           
  5884                           ;servo.c: 61:                 break;
  5885  002816  EF2C  F014         	goto	l243
  5886  00281A                     l248:
  5887                           
  5888                           ;servo.c: 63:                 LATEbits.LATE1 = 0;
  5889  00281A  928D               	bcf	141,1,c	;volatile
  5890                           
  5891                           ;servo.c: 64:                 break;
  5892  00281C  EF2C  F014         	goto	l243
  5893  002820                     l249:
  5894                           
  5895                           ;servo.c: 66:                 LATEbits.LATE2 = 0;
  5896  002820  948D               	bcf	141,2,c	;volatile
  5897                           
  5898                           ;servo.c: 67:                 break;
  5899  002822  EF2C  F014         	goto	l243
  5900  002826                     l3373:
  5901  002826  5007               	movf	setServoAngle@pin^0,w,c
  5902  002828  6E08               	movwf	??_setServoAngle^0,c
  5903  00282A  6A09               	clrf	(??_setServoAngle+1)^0,c
  5904                           
  5905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5906                           ; Switch size 1, requested type "simple"
  5907                           ; Number of cases is 1, Range of values is 0 to 0
  5908                           ; switch strategies available:
  5909                           ; Name         Instructions Cycles
  5910                           ; simple_byte            4     3 (average)
  5911                           ;	Chosen strategy is simple_byte
  5912  00282C  5009               	movf	(??_setServoAngle+1)^0,w,c
  5913  00282E  0A00               	xorlw	0	; case 0
  5914  002830  B4D8               	btfsc	status,2,c
  5915  002832  EF1D  F014         	goto	l5023
  5916  002836  EF2C  F014         	goto	l243
  5917  00283A                     l5023:
  5918                           
  5919                           ; Switch size 1, requested type "simple"
  5920                           ; Number of cases is 3, Range of values is 0 to 2
  5921                           ; switch strategies available:
  5922                           ; Name         Instructions Cycles
  5923                           ; simple_byte           10     6 (average)
  5924                           ;	Chosen strategy is simple_byte
  5925  00283A  5008               	movf	??_setServoAngle^0,w,c
  5926  00283C  0A00               	xorlw	0	; case 0
  5927  00283E  B4D8               	btfsc	status,2,c
  5928  002840  EF0A  F014         	goto	l246
  5929  002844  0A01               	xorlw	1	; case 1
  5930  002846  B4D8               	btfsc	status,2,c
  5931  002848  EF0D  F014         	goto	l248
  5932  00284C  0A03               	xorlw	3	; case 2
  5933  00284E  B4D8               	btfsc	status,2,c
  5934  002850  EF10  F014         	goto	l249
  5935  002854  EF2C  F014         	goto	l243
  5936  002858                     l243:
  5937                           
  5938                           ;servo.c: 55:     while(!PIR1bits.TMR2IF)
  5939  002858  A29E               	btfss	158,1,c	;volatile
  5940  00285A  EF31  F014         	goto	u2791
  5941  00285E  EF33  F014         	goto	u2790
  5942  002862                     u2791:
  5943  002862  EF13  F014         	goto	l3373
  5944  002866                     u2790:
  5945  002866                     
  5946                           ;servo.c: 71:     T2CONbits.TMR2ON = 0;
  5947  002866  94CA               	bcf	202,2,c	;volatile
  5948                           
  5949                           ;servo.c: 72:     PIR1bits.TMR2IF = 0;
  5950  002868  929E               	bcf	158,1,c	;volatile
  5951  00286A  0012               	return		;funcret
  5952  00286C                     __end_of_setServoAngle:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function _appCounterStart *****************
  5956 ;; Defined at:
  5957 ;;		line 142 in file "servo.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		None
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5971 ;;      Params:         0       0       0       0       0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5974 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5975 ;;Total ram usage:        0 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    2
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_appSubGiveElemts
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text35
  5986  0038A8                     __ptext35:
  5987                           	callstack 0
  5988  0038A8                     _appCounterStart:
  5989                           	callstack 26
  5990  0038A8                     
  5991                           ;servo.c: 145:     T0CONbits.TMR0ON = 1;
  5992  0038A8  8ED5               	bsf	213,7,c	;volatile
  5993  0038AA  0012               	return		;funcret
  5994  0038AC                     __end_of_appCounterStart:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function _appSubGetData *****************
  5998 ;; Defined at:
  5999 ;;		line 84 in file "app.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  6002 ;;		 -> datos(25), 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  cantidad        2   38[BANK0 ] unsigned short 
  6005 ;;  inout           1   40[BANK0 ] unsigned char 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6015 ;;      Params:         0       2       0       0       0       0       0       0       0
  6016 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6018 ;;      Totals:         0       5       0       0       0       0       0       0       0
  6019 ;;Total ram usage:        5 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:   10
  6022 ;; This function calls:
  6023 ;;		_Lcd_Out
  6024 ;;		___wmul
  6025 ;;		_memset
  6026 ;;		_sprintf
  6027 ;;		_teclado
  6028 ;; This function is called by:
  6029 ;;		_appGetElements
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text36
  6034  002974                     __ptext36:
  6035                           	callstack 0
  6036  002974                     _appSubGetData:
  6037                           	callstack 19
  6038  002974                     
  6039                           ;app.c: 84: void appSubGetData(StateMachine *data_Inout);app.c: 85: {;app.c: 86:     uin
      +                          t16_t cantidad = 0;
  6040  002974  0E00               	movlw	0
  6041  002976  0100               	movlb	0	; () banked
  6042  002978  6FBB               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  6043  00297A  0E00               	movlw	0
  6044  00297C  6FBA               	movwf	appSubGetData@cantidad& (0+255),b
  6045                           
  6046                           ;app.c: 87:     uint8_t inout = 0;
  6047  00297E  0E00               	movlw	0
  6048  002980  6FBC               	movwf	appSubGetData@inout& (0+255),b
  6049  002982                     
  6050                           ; BSR set to: 0
  6051                           ;app.c: 88:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  6052  002982  0E07               	movlw	7
  6053  002984  25B8               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6054  002986  6E07               	movwf	memset@dest^0,c
  6055  002988  0E00               	movlw	0
  6056  00298A  21B9               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6057  00298C  6E08               	movwf	(memset@dest+1)^0,c
  6058  00298E  0E00               	movlw	0
  6059  002990  6E0A               	movwf	(memset@c+1)^0,c
  6060  002992  0E00               	movlw	0
  6061  002994  6E09               	movwf	memset@c^0,c
  6062  002996  0E00               	movlw	0
  6063  002998  6E0C               	movwf	(memset@n+1)^0,c
  6064  00299A  0E10               	movlw	16
  6065  00299C  6E0B               	movwf	memset@n^0,c
  6066  00299E  EC6D  F010         	call	_memset	;wreg free
  6067  0029A2                     
  6068                           ;app.c: 89:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  6069  0029A2  0E00               	movlw	0
  6070  0029A4  6E0A               	movwf	Lcd_Out@x^0,c
  6071  0029A6  0E12               	movlw	low STR_6
  6072  0029A8  6E0B               	movwf	Lcd_Out@buffer^0,c
  6073  0029AA  0E08               	movlw	high STR_6
  6074  0029AC  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6075  0029AE  0E01               	movlw	1
  6076  0029B0  EC39  F015         	call	_Lcd_Out
  6077                           
  6078                           ;app.c: 90:     while(inout != '*')
  6079  0029B4  EF24  F015         	goto	l4737
  6080  0029B8                     l4725:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;app.c: 91:     {;app.c: 92:         teclado(&inout);
  6084  0029B8  0EBC               	movlw	low appSubGetData@inout
  6085  0029BA  6E07               	movwf	teclado@valor^0,c
  6086  0029BC  0E00               	movlw	high appSubGetData@inout
  6087  0029BE  6E08               	movwf	(teclado@valor+1)^0,c
  6088  0029C0  EC47  F00B         	call	_teclado	;wreg free
  6089  0029C4                     
  6090                           ;app.c: 94:         if((inout >= '0') && (inout <= '9'))
  6091  0029C4  0E2F               	movlw	47
  6092  0029C6  0100               	movlb	0	; () banked
  6093  0029C8  65BC               	cpfsgt	appSubGetData@inout& (0+255),b
  6094  0029CA  EFE9  F014         	goto	u4271
  6095  0029CE  EFEB  F014         	goto	u4270
  6096  0029D2                     u4271:
  6097  0029D2  EF08  F015         	goto	l4733
  6098  0029D6                     u4270:
  6099  0029D6                     
  6100                           ; BSR set to: 0
  6101  0029D6  0E3A               	movlw	58
  6102  0029D8  61BC               	cpfslt	appSubGetData@inout& (0+255),b
  6103  0029DA  EFF1  F014         	goto	u4281
  6104  0029DE  EFF3  F014         	goto	u4280
  6105  0029E2                     u4281:
  6106  0029E2  EF08  F015         	goto	l4733
  6107  0029E6                     u4280:
  6108  0029E6                     
  6109                           ; BSR set to: 0
  6110                           ;app.c: 95:         {;app.c: 96:             cantidad = (cantidad*10)+(inout - 48);
  6111  0029E6  C0BA  F007         	movff	appSubGetData@cantidad,___wmul@multiplier
  6112  0029EA  C0BB  F008         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  6113  0029EE  0E00               	movlw	0
  6114  0029F0  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  6115  0029F2  0E0A               	movlw	10
  6116  0029F4  6E09               	movwf	___wmul@multiplicand^0,c
  6117  0029F6  EC0A  F01C         	call	___wmul	;wreg free
  6118  0029FA  0100               	movlb	0	; () banked
  6119  0029FC  51BC               	movf	appSubGetData@inout& (0+255),w,b
  6120  0029FE  2607               	addwf	?___wmul^0,f,c
  6121  002A00  0E00               	movlw	0
  6122  002A02  2208               	addwfc	(?___wmul+1)^0,f,c
  6123  002A04  0ED0               	movlw	208
  6124  002A06  2407               	addwf	?___wmul^0,w,c
  6125  002A08  6FBA               	movwf	appSubGetData@cantidad& (0+255),b
  6126  002A0A  0EFF               	movlw	255
  6127  002A0C  2008               	addwfc	(?___wmul+1)^0,w,c
  6128  002A0E  6FBB               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  6129  002A10                     l4733:
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;app.c: 98:         sprintf((char *)data_Inout->display,"%d",cantidad);
  6133  002A10  0E07               	movlw	7
  6134  002A12  25B8               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6135  002A14  6FA6               	movwf	sprintf@s& (0+255),b
  6136  002A16  0E00               	movlw	0
  6137  002A18  21B9               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6138  002A1A  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  6139  002A1C  0E7B               	movlw	low (STR_5+2)
  6140  002A1E  6FA8               	movwf	sprintf@fmt& (0+255),b
  6141  002A20  0E08               	movlw	high (STR_5+2)
  6142  002A22  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  6143  002A24  C0BA  F0AA         	movff	appSubGetData@cantidad,?_sprintf+4
  6144  002A28  C0BB  F0AB         	movff	appSubGetData@cantidad+1,?_sprintf+5
  6145  002A2C  EC28  F01A         	call	_sprintf	;wreg free
  6146  002A30                     
  6147                           ;app.c: 99:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  6148  002A30  0E00               	movlw	0
  6149  002A32  6E0A               	movwf	Lcd_Out@x^0,c
  6150  002A34  0E07               	movlw	7
  6151  002A36  0100               	movlb	0	; () banked
  6152  002A38  25B8               	addwf	appSubGetData@data_Inout& (0+255),w,b
  6153  002A3A  6E0B               	movwf	Lcd_Out@buffer^0,c
  6154  002A3C  0E00               	movlw	0
  6155  002A3E  21B9               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  6156  002A40  6E0C               	movwf	(Lcd_Out@buffer+1)^0,c
  6157  002A42  0E02               	movlw	2
  6158  002A44  EC39  F015         	call	_Lcd_Out
  6159  002A48                     l4737:
  6160                           
  6161                           ;app.c: 90:     while(inout != '*')
  6162  002A48  0E2A               	movlw	42
  6163  002A4A  0100               	movlb	0	; () banked
  6164  002A4C  19BC               	xorwf	appSubGetData@inout& (0+255),w,b
  6165  002A4E  A4D8               	btfss	status,2,c
  6166  002A50  EF2C  F015         	goto	u4291
  6167  002A54  EF2E  F015         	goto	u4290
  6168  002A58                     u4291:
  6169  002A58  EFDC  F014         	goto	l4725
  6170  002A5C                     u4290:
  6171  002A5C                     
  6172                           ; BSR set to: 0
  6173                           ;app.c: 101:     data_Inout->elements += (int16_t)cantidad;
  6174  002A5C  EE20 F001          	lfsr	2,1
  6175  002A60  51B8               	movf	appSubGetData@data_Inout& (0+255),w,b
  6176  002A62  26D9               	addwf	fsr2l,f,c
  6177  002A64  51B9               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  6178  002A66  22DA               	addwfc	fsr2h,f,c
  6179  002A68  51BA               	movf	appSubGetData@cantidad& (0+255),w,b
  6180  002A6A  26DE               	addwf	postinc2,f,c
  6181  002A6C  51BB               	movf	(appSubGetData@cantidad+1)& (0+255),w,b
  6182  002A6E  22DD               	addwfc	postdec2,f,c
  6183  002A70                     
  6184                           ; BSR set to: 0
  6185  002A70  0012               	return		;funcret
  6186  002A72                     __end_of_appSubGetData:
  6187                           	callstack 0
  6188                           
  6189 ;; *************** function _teclado *****************
  6190 ;; Defined at:
  6191 ;;		line 10 in file "teclado.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  valor           2    6[COMRAM] PTR unsigned char 
  6194 ;;		 -> appSubGetData@inout(1), datos(25), 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;		None
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  1    wreg      void 
  6199 ;; Registers used:
  6200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6206 ;;      Params:         2       0       0       0       0       0       0       0       0
  6207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6209 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6210 ;;Total ram usage:        2 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:    2
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_appStateInitial
  6217 ;;		_appSubGetData
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text37
  6222  00168E                     __ptext37:
  6223                           	callstack 0
  6224  00168E                     _teclado:
  6225                           	callstack 27
  6226  00168E                     
  6227                           ;teclado.c: 11:     *valor = 0;
  6228  00168E  C007  FFD9         	movff	teclado@valor,fsr2l
  6229  001692  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6230  001696  0E00               	movlw	0
  6231  001698  6EDF               	movwf	indf2,c
  6232  00169A                     
  6233                           ;teclado.c: 12:     PORTB=0xF0;
  6234  00169A  0EF0               	movlw	240
  6235  00169C  6E81               	movwf	129,c	;volatile
  6236  00169E                     
  6237                           ;teclado.c: 13:     if(PORTB != 0xF0){
  6238  00169E  0EF0               	movlw	240
  6239  0016A0  1881               	xorwf	129,w,c	;volatile
  6240  0016A2  B4D8               	btfsc	status,2,c
  6241  0016A4  EF56  F00B         	goto	u2901
  6242  0016A8  EF58  F00B         	goto	u2900
  6243  0016AC                     u2901:
  6244  0016AC  EF30  F00C         	goto	l3545
  6245  0016B0                     u2900:
  6246  0016B0                     
  6247                           ;teclado.c: 14:         PORTB=0xFE;
  6248  0016B0  0EFE               	movlw	254
  6249  0016B2  6E81               	movwf	129,c	;volatile
  6250  0016B4                     
  6251                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  6252  0016B4  B881               	btfsc	129,4,c	;volatile
  6253  0016B6  EF5F  F00B         	goto	u2911
  6254  0016BA  EF61  F00B         	goto	u2910
  6255  0016BE                     u2911:
  6256  0016BE  EF67  F00B         	goto	l3479
  6257  0016C2                     u2910:
  6258  0016C2  C007  FFD9         	movff	teclado@valor,fsr2l
  6259  0016C6  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6260  0016CA  0E2A               	movlw	42
  6261  0016CC  6EDF               	movwf	indf2,c
  6262  0016CE                     l3479:
  6263                           
  6264                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  6265  0016CE  BA81               	btfsc	129,5,c	;volatile
  6266  0016D0  EF6C  F00B         	goto	u2921
  6267  0016D4  EF6E  F00B         	goto	u2920
  6268  0016D8                     u2921:
  6269  0016D8  EF74  F00B         	goto	l3483
  6270  0016DC                     u2920:
  6271  0016DC  C007  FFD9         	movff	teclado@valor,fsr2l
  6272  0016E0  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6273  0016E4  0E30               	movlw	48
  6274  0016E6  6EDF               	movwf	indf2,c
  6275  0016E8                     l3483:
  6276                           
  6277                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  6278  0016E8  BC81               	btfsc	129,6,c	;volatile
  6279  0016EA  EF79  F00B         	goto	u2931
  6280  0016EE  EF7B  F00B         	goto	u2930
  6281  0016F2                     u2931:
  6282  0016F2  EF81  F00B         	goto	l3487
  6283  0016F6                     u2930:
  6284  0016F6  C007  FFD9         	movff	teclado@valor,fsr2l
  6285  0016FA  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6286  0016FE  0E23               	movlw	35
  6287  001700  6EDF               	movwf	indf2,c
  6288  001702                     l3487:
  6289                           
  6290                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  6291  001702  BE81               	btfsc	129,7,c	;volatile
  6292  001704  EF86  F00B         	goto	u2941
  6293  001708  EF88  F00B         	goto	u2940
  6294  00170C                     u2941:
  6295  00170C  EF8E  F00B         	goto	l3491
  6296  001710                     u2940:
  6297  001710  C007  FFD9         	movff	teclado@valor,fsr2l
  6298  001714  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6299  001718  0E44               	movlw	68
  6300  00171A  6EDF               	movwf	indf2,c
  6301  00171C                     l3491:
  6302                           
  6303                           ;teclado.c: 19:         PORTB=0xFD;
  6304  00171C  0EFD               	movlw	253
  6305  00171E  6E81               	movwf	129,c	;volatile
  6306  001720                     
  6307                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  6308  001720  B881               	btfsc	129,4,c	;volatile
  6309  001722  EF95  F00B         	goto	u2951
  6310  001726  EF97  F00B         	goto	u2950
  6311  00172A                     u2951:
  6312  00172A  EF9D  F00B         	goto	l3497
  6313  00172E                     u2950:
  6314  00172E  C007  FFD9         	movff	teclado@valor,fsr2l
  6315  001732  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6316  001736  0E37               	movlw	55
  6317  001738  6EDF               	movwf	indf2,c
  6318  00173A                     l3497:
  6319                           
  6320                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  6321  00173A  BA81               	btfsc	129,5,c	;volatile
  6322  00173C  EFA2  F00B         	goto	u2961
  6323  001740  EFA4  F00B         	goto	u2960
  6324  001744                     u2961:
  6325  001744  EFAA  F00B         	goto	l3501
  6326  001748                     u2960:
  6327  001748  C007  FFD9         	movff	teclado@valor,fsr2l
  6328  00174C  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6329  001750  0E38               	movlw	56
  6330  001752  6EDF               	movwf	indf2,c
  6331  001754                     l3501:
  6332                           
  6333                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  6334  001754  BC81               	btfsc	129,6,c	;volatile
  6335  001756  EFAF  F00B         	goto	u2971
  6336  00175A  EFB1  F00B         	goto	u2970
  6337  00175E                     u2971:
  6338  00175E  EFB7  F00B         	goto	l3505
  6339  001762                     u2970:
  6340  001762  C007  FFD9         	movff	teclado@valor,fsr2l
  6341  001766  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6342  00176A  0E39               	movlw	57
  6343  00176C  6EDF               	movwf	indf2,c
  6344  00176E                     l3505:
  6345                           
  6346                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  6347  00176E  BE81               	btfsc	129,7,c	;volatile
  6348  001770  EFBC  F00B         	goto	u2981
  6349  001774  EFBE  F00B         	goto	u2980
  6350  001778                     u2981:
  6351  001778  EFC4  F00B         	goto	l3509
  6352  00177C                     u2980:
  6353  00177C  C007  FFD9         	movff	teclado@valor,fsr2l
  6354  001780  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6355  001784  0E43               	movlw	67
  6356  001786  6EDF               	movwf	indf2,c
  6357  001788                     l3509:
  6358                           
  6359                           ;teclado.c: 24:         PORTB=0xFB;
  6360  001788  0EFB               	movlw	251
  6361  00178A  6E81               	movwf	129,c	;volatile
  6362  00178C                     
  6363                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  6364  00178C  B881               	btfsc	129,4,c	;volatile
  6365  00178E  EFCB  F00B         	goto	u2991
  6366  001792  EFCD  F00B         	goto	u2990
  6367  001796                     u2991:
  6368  001796  EFD3  F00B         	goto	l3515
  6369  00179A                     u2990:
  6370  00179A  C007  FFD9         	movff	teclado@valor,fsr2l
  6371  00179E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6372  0017A2  0E34               	movlw	52
  6373  0017A4  6EDF               	movwf	indf2,c
  6374  0017A6                     l3515:
  6375                           
  6376                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  6377  0017A6  BA81               	btfsc	129,5,c	;volatile
  6378  0017A8  EFD8  F00B         	goto	u3001
  6379  0017AC  EFDA  F00B         	goto	u3000
  6380  0017B0                     u3001:
  6381  0017B0  EFE0  F00B         	goto	l3519
  6382  0017B4                     u3000:
  6383  0017B4  C007  FFD9         	movff	teclado@valor,fsr2l
  6384  0017B8  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6385  0017BC  0E35               	movlw	53
  6386  0017BE  6EDF               	movwf	indf2,c
  6387  0017C0                     l3519:
  6388                           
  6389                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  6390  0017C0  BC81               	btfsc	129,6,c	;volatile
  6391  0017C2  EFE5  F00B         	goto	u3011
  6392  0017C6  EFE7  F00B         	goto	u3010
  6393  0017CA                     u3011:
  6394  0017CA  EFED  F00B         	goto	l3523
  6395  0017CE                     u3010:
  6396  0017CE  C007  FFD9         	movff	teclado@valor,fsr2l
  6397  0017D2  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6398  0017D6  0E36               	movlw	54
  6399  0017D8  6EDF               	movwf	indf2,c
  6400  0017DA                     l3523:
  6401                           
  6402                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  6403  0017DA  BE81               	btfsc	129,7,c	;volatile
  6404  0017DC  EFF2  F00B         	goto	u3021
  6405  0017E0  EFF4  F00B         	goto	u3020
  6406  0017E4                     u3021:
  6407  0017E4  EFFA  F00B         	goto	l3527
  6408  0017E8                     u3020:
  6409  0017E8  C007  FFD9         	movff	teclado@valor,fsr2l
  6410  0017EC  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6411  0017F0  0E42               	movlw	66
  6412  0017F2  6EDF               	movwf	indf2,c
  6413  0017F4                     l3527:
  6414                           
  6415                           ;teclado.c: 29:         PORTB=0xF7;
  6416  0017F4  0EF7               	movlw	247
  6417  0017F6  6E81               	movwf	129,c	;volatile
  6418  0017F8                     
  6419                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  6420  0017F8  B881               	btfsc	129,4,c	;volatile
  6421  0017FA  EF01  F00C         	goto	u3031
  6422  0017FE  EF03  F00C         	goto	u3030
  6423  001802                     u3031:
  6424  001802  EF09  F00C         	goto	l3533
  6425  001806                     u3030:
  6426  001806  C007  FFD9         	movff	teclado@valor,fsr2l
  6427  00180A  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6428  00180E  0E31               	movlw	49
  6429  001810  6EDF               	movwf	indf2,c
  6430  001812                     l3533:
  6431                           
  6432                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  6433  001812  BA81               	btfsc	129,5,c	;volatile
  6434  001814  EF0E  F00C         	goto	u3041
  6435  001818  EF10  F00C         	goto	u3040
  6436  00181C                     u3041:
  6437  00181C  EF16  F00C         	goto	l3537
  6438  001820                     u3040:
  6439  001820  C007  FFD9         	movff	teclado@valor,fsr2l
  6440  001824  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6441  001828  0E32               	movlw	50
  6442  00182A  6EDF               	movwf	indf2,c
  6443  00182C                     l3537:
  6444                           
  6445                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  6446  00182C  BC81               	btfsc	129,6,c	;volatile
  6447  00182E  EF1B  F00C         	goto	u3051
  6448  001832  EF1D  F00C         	goto	u3050
  6449  001836                     u3051:
  6450  001836  EF23  F00C         	goto	l3541
  6451  00183A                     u3050:
  6452  00183A  C007  FFD9         	movff	teclado@valor,fsr2l
  6453  00183E  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6454  001842  0E33               	movlw	51
  6455  001844  6EDF               	movwf	indf2,c
  6456  001846                     l3541:
  6457                           
  6458                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  6459  001846  BE81               	btfsc	129,7,c	;volatile
  6460  001848  EF28  F00C         	goto	u3061
  6461  00184C  EF2A  F00C         	goto	u3060
  6462  001850                     u3061:
  6463  001850  EF30  F00C         	goto	l3545
  6464  001854                     u3060:
  6465  001854  C007  FFD9         	movff	teclado@valor,fsr2l
  6466  001858  C008  FFDA         	movff	teclado@valor+1,fsr2h
  6467  00185C  0E41               	movlw	65
  6468  00185E  6EDF               	movwf	indf2,c
  6469  001860                     l3545:
  6470                           
  6471                           ;teclado.c: 35:     PORTB = 0xF0;
  6472  001860  0EF0               	movlw	240
  6473  001862  6E81               	movwf	129,c	;volatile
  6474  001864                     l3547:
  6475  001864  0EF0               	movlw	240
  6476  001866  1881               	xorwf	129,w,c	;volatile
  6477  001868  A4D8               	btfss	status,2,c
  6478  00186A  EF39  F00C         	goto	u3071
  6479  00186E  EF3B  F00C         	goto	u3070
  6480  001872                     u3071:
  6481  001872  EF32  F00C         	goto	l3547
  6482  001876                     u3070:
  6483  001876  0012               	return		;funcret
  6484  001878                     __end_of_teclado:
  6485                           	callstack 0
  6486                           
  6487 ;; *************** function _sprintf *****************
  6488 ;; Defined at:
  6489 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  s               2   18[BANK0 ] PTR unsigned char 
  6492 ;;		 -> datos(25), 
  6493 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  6494 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6495 ;;		 -> STR_1(14), 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  f               6   30[BANK0 ] struct _IO_FILE
  6498 ;;  ap              2   28[BANK0 ] PTR void [1]
  6499 ;;		 -> ?_sprintf(2), 
  6500 ;;  ret             2    0        int 
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  2   18[BANK0 ] int 
  6503 ;; Registers used:
  6504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6510 ;;      Params:         0       8       0       0       0       0       0       0       0
  6511 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6513 ;;      Totals:         0      18       0       0       0       0       0       0       0
  6514 ;;Total ram usage:       18 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    9
  6517 ;; This function calls:
  6518 ;;		_vfprintf
  6519 ;; This function is called by:
  6520 ;;		_appADC
  6521 ;;		_appBat
  6522 ;;		_appElemts
  6523 ;;		_appSubGetData
  6524 ;;		_sendinformation
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text38
  6529  003450                     __ptext38:
  6530                           	callstack 0
  6531  003450                     _sprintf:
  6532                           	callstack 20
  6533  003450  0EAA               	movlw	low (?_sprintf+4)
  6534  003452  0100               	movlb	0	; () banked
  6535  003454  6FB0               	movwf	sprintf@ap& (0+255),b
  6536  003456  0E00               	movlw	high (?_sprintf+4)
  6537  003458  6FB1               	movwf	(sprintf@ap+1)& (0+255),b
  6538  00345A  C0A6  F0B2         	movff	sprintf@s,sprintf@f
  6539  00345E  C0A7  F0B3         	movff	sprintf@s+1,sprintf@f+1
  6540  003462                     
  6541                           ; BSR set to: 0
  6542  003462  0E00               	movlw	0
  6543  003464  6FB5               	movwf	(sprintf@f+3)& (0+255),b
  6544  003466  0E00               	movlw	0
  6545  003468  6FB4               	movwf	(sprintf@f+2)& (0+255),b
  6546  00346A                     
  6547                           ; BSR set to: 0
  6548  00346A  0E00               	movlw	0
  6549  00346C  6FB7               	movwf	(sprintf@f+5)& (0+255),b
  6550  00346E  0E00               	movlw	0
  6551  003470  6FB6               	movwf	(sprintf@f+4)& (0+255),b
  6552  003472                     
  6553                           ; BSR set to: 0
  6554  003472  0EB2               	movlw	low sprintf@f
  6555  003474  6FA0               	movwf	vfprintf@fp& (0+255),b
  6556  003476  0E00               	movlw	high sprintf@f
  6557  003478  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
  6558  00347A  C0A8  F0A2         	movff	sprintf@fmt,vfprintf@fmt
  6559  00347E  C0A9  F0A3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6560  003482  0EB0               	movlw	low sprintf@ap
  6561  003484  6FA4               	movwf	vfprintf@ap& (0+255),b
  6562  003486  0E00               	movlw	high sprintf@ap
  6563  003488  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
  6564  00348A  ECCB  F019         	call	_vfprintf	;wreg free
  6565  00348E  0100               	movlb	0	; () banked
  6566  003490  51B4               	movf	(sprintf@f+2)& (0+255),w,b
  6567  003492  25A6               	addwf	sprintf@s& (0+255),w,b
  6568  003494  6ED9               	movwf	fsr2l,c
  6569  003496  51B5               	movf	(sprintf@f+3)& (0+255),w,b
  6570  003498  21A7               	addwfc	(sprintf@s+1)& (0+255),w,b
  6571  00349A  6EDA               	movwf	fsr2h,c
  6572  00349C  0E00               	movlw	0
  6573  00349E  6EDF               	movwf	indf2,c
  6574  0034A0                     
  6575                           ; BSR set to: 0
  6576  0034A0  0012               	return		;funcret
  6577  0034A2                     __end_of_sprintf:
  6578                           	callstack 0
  6579                           
  6580 ;; *************** function _vfprintf *****************
  6581 ;; Defined at:
  6582 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  6585 ;;		 -> sprintf@f(6), 
  6586 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  6587 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6588 ;;		 -> STR_1(14), 
  6589 ;;  ap              2   16[BANK0 ] PTR PTR void 
  6590 ;;		 -> sprintf@ap(2), 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  6593 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  6594 ;;		 -> STR_1(14), 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  2   12[BANK0 ] int 
  6597 ;; Registers used:
  6598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6604 ;;      Params:         0       6       0       0       0       0       0       0       0
  6605 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6607 ;;      Totals:         2       6       0       0       0       0       0       0       0
  6608 ;;Total ram usage:        8 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    8
  6611 ;; This function calls:
  6612 ;;		_vfpfcnvrt
  6613 ;; This function is called by:
  6614 ;;		_sprintf
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	text39
  6619  003396                     __ptext39:
  6620                           	callstack 0
  6621  003396                     _vfprintf:
  6622                           	callstack 20
  6623  003396                     
  6624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6625  003396  C0A2  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  6626  00339A  C0A3  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6627  00339E                     
  6628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6629  00339E  0E00               	movlw	0
  6630  0033A0  0100               	movlb	0	; () banked
  6631  0033A2  6F61               	movwf	(_nout+1)& (0+255),b
  6632  0033A4  0E00               	movlw	0
  6633  0033A6  6F60               	movwf	_nout& (0+255),b
  6634                           
  6635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6636  0033A8  EFE9  F019         	goto	l4591
  6637  0033AC                     l4589:
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6641  0033AC  C0A0  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  6642  0033B0  C0A1  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6643  0033B4  0E50               	movlw	low vfprintf@cfmt
  6644  0033B6  6E48               	movwf	vfpfcnvrt@fmt^0,c
  6645  0033B8  0E00               	movlw	high vfprintf@cfmt
  6646  0033BA  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6647  0033BC  C0A4  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  6648  0033C0  C0A5  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6649  0033C4  EC22  F008         	call	_vfpfcnvrt	;wreg free
  6650  0033C8  5046               	movf	?_vfpfcnvrt^0,w,c
  6651  0033CA  0100               	movlb	0	; () banked
  6652  0033CC  2760               	addwf	_nout& (0+255),f,b
  6653  0033CE  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  6654  0033D0  2361               	addwfc	(_nout+1)& (0+255),f,b
  6655  0033D2                     l4591:
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6659  0033D2  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  6660  0033D6  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6661  0033DA                     	if	0	;tblptru may be non-zero
  6662  0033DA                     	endif
  6663  0033DA                     	if	0	;tblptru may be non-zero
  6664  0033DA                     	endif
  6665  0033DA  0008               	tblrd		*
  6666  0033DC  50F5               	movf	tablat,w,c
  6667  0033DE  0900               	iorlw	0
  6668  0033E0  A4D8               	btfss	status,2,c
  6669  0033E2  EFF5  F019         	goto	u4111
  6670  0033E6  EFF7  F019         	goto	u4110
  6671  0033EA                     u4111:
  6672  0033EA  EFD6  F019         	goto	l4589
  6673  0033EE                     u4110:
  6674  0033EE                     
  6675                           ; BSR set to: 0
  6676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6677  0033EE  C060  F0A0         	movff	_nout,?_vfprintf
  6678  0033F2  C061  F0A1         	movff	_nout+1,?_vfprintf+1
  6679  0033F6                     
  6680                           ; BSR set to: 0
  6681  0033F6  0012               	return		;funcret
  6682  0033F8                     __end_of_vfprintf:
  6683                           	callstack 0
  6684                           
  6685 ;; *************** function _vfpfcnvrt *****************
  6686 ;; Defined at:
  6687 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  6690 ;;		 -> sprintf@f(6), 
  6691 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  6692 ;;		 -> vfprintf@cfmt(2), 
  6693 ;;  ap              2   73[COMRAM] PTR PTR void 
  6694 ;;		 -> sprintf@ap(2), 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  ll              8    0[BANK0 ] long long 
  6697 ;;  llu             8    0        unsigned long long 
  6698 ;;  f               4    0        unsigned long long 
  6699 ;;  vp              3    0        PTR void 
  6700 ;;  ct              3    0        unsigned char [3]
  6701 ;;  cp              3    0        PTR unsigned char 
  6702 ;;  done            2    8[BANK0 ] int 
  6703 ;;  i               2    0        int 
  6704 ;;  c               1    0        unsigned char 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  2   69[COMRAM] int 
  6707 ;; Registers used:
  6708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6714 ;;      Params:         6       0       0       0       0       0       0       0       0
  6715 ;;      Locals:         0      12       0       0       0       0       0       0       0
  6716 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6717 ;;      Totals:        10      12       0       0       0       0       0       0       0
  6718 ;;Total ram usage:       22 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:    7
  6721 ;; This function calls:
  6722 ;;		_atoi
  6723 ;;		_dtoa
  6724 ;;		_fputc
  6725 ;;		_isdigit
  6726 ;; This function is called by:
  6727 ;;		_vfprintf
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text40
  6732  001044                     __ptext40:
  6733                           	callstack 0
  6734  001044                     _vfpfcnvrt:
  6735                           	callstack 20
  6736  001044                     
  6737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6738  001044  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6739  001048  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6740  00104C  CFDE FFF6          	movff	postinc2,tblptrl
  6741  001050  CFDD FFF7          	movff	postdec2,tblptrh
  6742  001054                     	if	0	;tblptru may be non-zero
  6743  001054                     	endif
  6744  001054                     	if	0	;tblptru may be non-zero
  6745  001054                     	endif
  6746  001054  0008               	tblrd		*
  6747  001056  50F5               	movf	tablat,w,c
  6748  001058  0A25               	xorlw	37
  6749  00105A  A4D8               	btfss	status,2,c
  6750  00105C  EF32  F008         	goto	u2561
  6751  001060  EF34  F008         	goto	u2560
  6752  001064                     u2561:
  6753  001064  EFBC  F009         	goto	l3283
  6754  001068                     u2560:
  6755  001068                     
  6756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6757  001068  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6758  00106C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6759  001070  2ADE               	incf	postinc2,f,c
  6760  001072  0E00               	movlw	0
  6761  001074  22DD               	addwfc	postdec2,f,c
  6762  001076                     
  6763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6764  001076  0E00               	movlw	0
  6765  001078  0100               	movlb	0	; () banked
  6766  00107A  6F63               	movwf	(_width+1)& (0+255),b
  6767  00107C  0E00               	movlw	0
  6768  00107E  6F62               	movwf	_width& (0+255),b
  6769  001080  C062  F055         	movff	_width,_flags
  6770  001084  C063  F056         	movff	_width+1,_flags+1
  6771  001088                     
  6772                           ; BSR set to: 0
  6773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6774  001088  6853               	setf	_prec^0,c
  6775  00108A  6854               	setf	(_prec+1)^0,c
  6776  00108C                     
  6777                           ; BSR set to: 0
  6778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  6779  00108C  0E00               	movlw	0
  6780  00108E  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6781  001090  0E00               	movlw	0
  6782  001092  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  6783                           
  6784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6785  001094  EF92  F008         	goto	l3235
  6786  001098                     l3209:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  6790  001098  8055               	bsf	_flags^0,0,c
  6791  00109A                     l3211:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  6795  00109A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6796  00109E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6797  0010A2  2ADE               	incf	postinc2,f,c
  6798  0010A4  0E00               	movlw	0
  6799  0010A6  22DD               	addwfc	postdec2,f,c
  6800                           
  6801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  6802  0010A8  EF92  F008         	goto	l3235
  6803  0010AC                     l3213:
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  6807  0010AC  8255               	bsf	_flags^0,1,c
  6808  0010AE  EF4D  F008         	goto	l3211
  6809  0010B2                     l3217:
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  6813  0010B2  8455               	bsf	_flags^0,2,c
  6814  0010B4  EF4D  F008         	goto	l3211
  6815  0010B8                     l3221:
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  6819  0010B8  8655               	bsf	_flags^0,3,c
  6820  0010BA  EF4D  F008         	goto	l3211
  6821  0010BE                     l3225:
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  6825  0010BE  8855               	bsf	_flags^0,4,c
  6826  0010C0  EF4D  F008         	goto	l3211
  6827  0010C4                     l3229:
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  6831  0010C4  0E00               	movlw	0
  6832  0010C6  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6833  0010C8  0E01               	movlw	1
  6834  0010CA  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  6835                           
  6836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  6837  0010CC  EF92  F008         	goto	l3235
  6838  0010D0                     l3233:
  6839                           
  6840                           ; BSR set to: 0
  6841  0010D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6842  0010D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6843  0010D8  CFDE FFF6          	movff	postinc2,tblptrl
  6844  0010DC  CFDD FFF7          	movff	postdec2,tblptrh
  6845  0010E0                     	if	0	;tblptru may be non-zero
  6846  0010E0                     	endif
  6847  0010E0                     	if	0	;tblptru may be non-zero
  6848  0010E0                     	endif
  6849  0010E0  0008               	tblrd		*
  6850  0010E2  50F5               	movf	tablat,w,c
  6851  0010E4  6E4C               	movwf	??_vfpfcnvrt^0,c
  6852  0010E6  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  6853                           
  6854                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6855                           ; Switch size 1, requested type "simple"
  6856                           ; Number of cases is 1, Range of values is 0 to 0
  6857                           ; switch strategies available:
  6858                           ; Name         Instructions Cycles
  6859                           ; simple_byte            4     3 (average)
  6860                           ;	Chosen strategy is simple_byte
  6861  0010E8  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  6862  0010EA  0A00               	xorlw	0	; case 0
  6863  0010EC  B4D8               	btfsc	status,2,c
  6864  0010EE  EF7B  F008         	goto	l5025
  6865  0010F2  EF62  F008         	goto	l3229
  6866  0010F6                     l5025:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ; Switch size 1, requested type "simple"
  6870                           ; Number of cases is 5, Range of values is 32 to 48
  6871                           ; switch strategies available:
  6872                           ; Name         Instructions Cycles
  6873                           ; simple_byte           16     9 (average)
  6874                           ;	Chosen strategy is simple_byte
  6875  0010F6  504C               	movf	??_vfpfcnvrt^0,w,c
  6876  0010F8  0A20               	xorlw	32	; case 32
  6877  0010FA  B4D8               	btfsc	status,2,c
  6878  0010FC  EF5C  F008         	goto	l3221
  6879  001100  0A03               	xorlw	3	; case 35
  6880  001102  B4D8               	btfsc	status,2,c
  6881  001104  EF5F  F008         	goto	l3225
  6882  001108  0A08               	xorlw	8	; case 43
  6883  00110A  B4D8               	btfsc	status,2,c
  6884  00110C  EF59  F008         	goto	l3217
  6885  001110  0A06               	xorlw	6	; case 45
  6886  001112  B4D8               	btfsc	status,2,c
  6887  001114  EF4C  F008         	goto	l3209
  6888  001118  0A1D               	xorlw	29	; case 48
  6889  00111A  B4D8               	btfsc	status,2,c
  6890  00111C  EF56  F008         	goto	l3213
  6891  001120  EF62  F008         	goto	l3229
  6892  001124                     l3235:
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  6896  001124  519C               	movf	vfpfcnvrt@done& (0+255),w,b
  6897  001126  119D               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6898  001128  B4D8               	btfsc	status,2,c
  6899  00112A  EF99  F008         	goto	u2571
  6900  00112E  EF9B  F008         	goto	u2570
  6901  001132                     u2571:
  6902  001132  EF68  F008         	goto	l3233
  6903  001136                     u2570:
  6904  001136                     
  6905                           ; BSR set to: 0
  6906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  6907  001136  A055               	btfss	_flags^0,0,c
  6908  001138  EFA0  F008         	goto	u2581
  6909  00113C  EFA2  F008         	goto	u2580
  6910  001140                     u2581:
  6911  001140  EFA3  F008         	goto	l3239
  6912  001144                     u2580:
  6913  001144                     
  6914                           ; BSR set to: 0
  6915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  6916  001144  9255               	bcf	_flags^0,1,c
  6917  001146                     l3239:
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  6921  001146  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6922  00114A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6923  00114E  CFDE FFF6          	movff	postinc2,tblptrl
  6924  001152  CFDD FFF7          	movff	postdec2,tblptrh
  6925  001156                     	if	0	;tblptru may be non-zero
  6926  001156                     	endif
  6927  001156                     	if	0	;tblptru may be non-zero
  6928  001156                     	endif
  6929  001156  0008               	tblrd		*
  6930  001158  50F5               	movf	tablat,w,c
  6931  00115A  0A2A               	xorlw	42
  6932  00115C  A4D8               	btfss	status,2,c
  6933  00115E  EFB3  F008         	goto	u2591
  6934  001162  EFB5  F008         	goto	u2590
  6935  001166                     u2591:
  6936  001166  EFDE  F008         	goto	l3247
  6937  00116A                     u2590:
  6938  00116A                     
  6939                           ; BSR set to: 0
  6940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  6941  00116A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6942  00116E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6943  001172  2ADE               	incf	postinc2,f,c
  6944  001174  0E00               	movlw	0
  6945  001176  22DD               	addwfc	postdec2,f,c
  6946                           
  6947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6948  001178  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6949  00117C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6950  001180  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  6951  001184  0E02               	movlw	2
  6952  001186  26DE               	addwf	postinc2,f,c
  6953  001188  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  6954  00118C  0E00               	movlw	0
  6955  00118E  22DD               	addwfc	postdec2,f,c
  6956  001190  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6957  001194  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6958  001198  CFDE F062          	movff	postinc2,_width
  6959  00119C  CFDD F063          	movff	postdec2,_width+1
  6960  0011A0                     
  6961                           ; BSR set to: 0
  6962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  6963  0011A0  BF63               	btfsc	(_width+1)& (0+255),7,b
  6964  0011A2  EFD7  F008         	goto	u2600
  6965  0011A6  EFD5  F008         	goto	u2601
  6966  0011AA                     u2601:
  6967  0011AA  EF22  F009         	goto	l3257
  6968  0011AE                     u2600:
  6969  0011AE                     
  6970                           ; BSR set to: 0
  6971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  6972  0011AE  8055               	bsf	_flags^0,0,c
  6973                           
  6974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  6975  0011B0  6D62               	negf	_width& (0+255),b
  6976  0011B2  1F63               	comf	(_width+1)& (0+255),f,b
  6977  0011B4  B0D8               	btfsc	status,0,c
  6978  0011B6  2B63               	incf	(_width+1)& (0+255),f,b
  6979  0011B8  EF22  F009         	goto	l3257
  6980  0011BC                     l3247:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  6984  0011BC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6985  0011C0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6986  0011C4  CFDE F00E          	movff	postinc2,atoi@s
  6987  0011C8  CFDD F00F          	movff	postdec2,atoi@s+1
  6988  0011CC  ECE1  F00E         	call	_atoi	;wreg free
  6989  0011D0  C00E  F062         	movff	?_atoi,_width
  6990  0011D4  C00F  F063         	movff	?_atoi+1,_width+1
  6991                           
  6992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6993  0011D8  EFF5  F008         	goto	l3251
  6994  0011DC                     l3249:
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  6998  0011DC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6999  0011E0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7000  0011E4  2ADE               	incf	postinc2,f,c
  7001  0011E6  0E00               	movlw	0
  7002  0011E8  22DD               	addwfc	postdec2,f,c
  7003  0011EA                     l3251:
  7004  0011EA  0ED0               	movlw	208
  7005  0011EC  6E4C               	movwf	??_vfpfcnvrt^0,c
  7006  0011EE  0EFF               	movlw	255
  7007  0011F0  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  7008  0011F2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7009  0011F6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7010  0011FA  CFDE FFF6          	movff	postinc2,tblptrl
  7011  0011FE  CFDD FFF7          	movff	postdec2,tblptrh
  7012  001202                     	if	0	;tblptru may be non-zero
  7013  001202                     	endif
  7014  001202                     	if	0	;tblptru may be non-zero
  7015  001202                     	endif
  7016  001202  0008               	tblrd		*
  7017  001204  50F5               	movf	tablat,w,c
  7018  001206  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  7019  001208  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  7020  00120A  504C               	movf	??_vfpfcnvrt^0,w,c
  7021  00120C  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  7022  00120E  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  7023  001210  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  7024  001212  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  7025  001214  E10A               	bnz	u2610
  7026  001216  0E0A               	movlw	10
  7027  001218  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  7028  00121A  A0D8               	btfss	status,0,c
  7029  00121C  EF12  F009         	goto	u2611
  7030  001220  EF15  F009         	goto	u2610
  7031  001224                     u2611:
  7032  001224  0E01               	movlw	1
  7033  001226  EF16  F009         	goto	u2620
  7034  00122A                     u2610:
  7035  00122A  0E00               	movlw	0
  7036  00122C                     u2620:
  7037  00122C  0100               	movlb	0	; () banked
  7038  00122E  6F9E               	movwf	_vfpfcnvrt$2355& (0+255),b
  7039  001230  6B9F               	clrf	(_vfpfcnvrt$2355+1)& (0+255),b
  7040  001232                     
  7041                           ; BSR set to: 0
  7042  001232  519E               	movf	_vfpfcnvrt$2355& (0+255),w,b
  7043  001234  119F               	iorwf	(_vfpfcnvrt$2355+1)& (0+255),w,b
  7044  001236  A4D8               	btfss	status,2,c
  7045  001238  EF20  F009         	goto	u2631
  7046  00123C  EF22  F009         	goto	u2630
  7047  001240                     u2631:
  7048  001240  EFEE  F008         	goto	l3249
  7049  001244                     u2630:
  7050  001244                     l3257:
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7054  001244  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7055  001248  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7056  00124C  CFDE FFF6          	movff	postinc2,tblptrl
  7057  001250  CFDD FFF7          	movff	postdec2,tblptrh
  7058  001254                     	if	0	;tblptru may be non-zero
  7059  001254                     	endif
  7060  001254                     	if	0	;tblptru may be non-zero
  7061  001254                     	endif
  7062  001254  0008               	tblrd		*
  7063  001256  50F5               	movf	tablat,w,c
  7064  001258  0A64               	xorlw	100
  7065  00125A  B4D8               	btfsc	status,2,c
  7066  00125C  EF32  F009         	goto	u2641
  7067  001260  EF34  F009         	goto	u2640
  7068  001264                     u2641:
  7069  001264  EF46  F009         	goto	l3261
  7070  001268                     u2640:
  7071  001268                     
  7072                           ; BSR set to: 0
  7073  001268  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7074  00126C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7075  001270  CFDE FFF6          	movff	postinc2,tblptrl
  7076  001274  CFDD FFF7          	movff	postdec2,tblptrh
  7077  001278                     	if	0	;tblptru may be non-zero
  7078  001278                     	endif
  7079  001278                     	if	0	;tblptru may be non-zero
  7080  001278                     	endif
  7081  001278  0008               	tblrd		*
  7082  00127A  50F5               	movf	tablat,w,c
  7083  00127C  0A69               	xorlw	105
  7084  00127E  A4D8               	btfss	status,2,c
  7085  001280  EF44  F009         	goto	u2651
  7086  001284  EF46  F009         	goto	u2650
  7087  001288                     u2651:
  7088  001288  EF86  F009         	goto	l3267
  7089  00128C                     u2650:
  7090  00128C                     l3261:
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7094  00128C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7095  001290  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7096  001294  2ADE               	incf	postinc2,f,c
  7097  001296  0E00               	movlw	0
  7098  001298  22DD               	addwfc	postdec2,f,c
  7099                           
  7100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7101  00129A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7102  00129E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7103  0012A2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  7104  0012A6  0E02               	movlw	2
  7105  0012A8  26DE               	addwf	postinc2,f,c
  7106  0012AA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  7107  0012AE  0E00               	movlw	0
  7108  0012B0  22DD               	addwfc	postdec2,f,c
  7109  0012B2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7110  0012B6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7111  0012BA  CFDE F094          	movff	postinc2,vfpfcnvrt@ll
  7112  0012BE  CFDD F095          	movff	postdec2,vfpfcnvrt@ll+1
  7113  0012C2  0E00               	movlw	0
  7114  0012C4  BF95               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7115  0012C6  0EFF               	movlw	-1
  7116  0012C8  6F96               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7117  0012CA  6F97               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7118  0012CC  6F98               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7119  0012CE  6F99               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7120  0012D0  6F9A               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7121  0012D2  6F9B               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7122  0012D4                     
  7123                           ; BSR set to: 0
  7124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7125  0012D4  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  7126  0012D8  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7127  0012DC  C094  F024         	movff	vfpfcnvrt@ll,dtoa@d
  7128  0012E0  C095  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7129  0012E4  C096  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7130  0012E8  C097  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7131  0012EC  C098  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7132  0012F0  C099  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7133  0012F4  C09A  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7134  0012F8  C09B  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7135  0012FC  ECD8  F009         	call	_dtoa	;wreg free
  7136  001300  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  7137  001304  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7138  001308  EFD7  F009         	goto	l1231
  7139  00130C                     l3267:
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7143  00130C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7144  001310  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7145  001314  CFDE FFF6          	movff	postinc2,tblptrl
  7146  001318  CFDD FFF7          	movff	postdec2,tblptrh
  7147  00131C                     	if	0	;tblptru may be non-zero
  7148  00131C                     	endif
  7149  00131C                     	if	0	;tblptru may be non-zero
  7150  00131C                     	endif
  7151  00131C  0008               	tblrd		*
  7152  00131E  50F5               	movf	tablat,w,c
  7153  001320  0A25               	xorlw	37
  7154  001322  A4D8               	btfss	status,2,c
  7155  001324  EF96  F009         	goto	u2661
  7156  001328  EF98  F009         	goto	u2660
  7157  00132C                     u2661:
  7158  00132C  EFAF  F009         	goto	l3277
  7159  001330                     u2660:
  7160  001330                     
  7161                           ; BSR set to: 0
  7162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7163  001330  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7164  001334  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7165  001338  2ADE               	incf	postinc2,f,c
  7166  00133A  0E00               	movlw	0
  7167  00133C  22DD               	addwfc	postdec2,f,c
  7168  00133E                     
  7169                           ; BSR set to: 0
  7170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7171  00133E  0E00               	movlw	0
  7172  001340  6E08               	movwf	(fputc@c+1)^0,c
  7173  001342  0E25               	movlw	37
  7174  001344  6E07               	movwf	fputc@c^0,c
  7175  001346  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7176  00134A  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7177  00134E  EC9F  F015         	call	_fputc	;wreg free
  7178  001352                     l3273:
  7179                           
  7180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7181  001352  0E00               	movlw	0
  7182  001354  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7183  001356  0E01               	movlw	1
  7184  001358  6E46               	movwf	?_vfpfcnvrt^0,c
  7185  00135A  EFD7  F009         	goto	l1231
  7186  00135E                     l3277:
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7190  00135E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7191  001362  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7192  001366  2ADE               	incf	postinc2,f,c
  7193  001368  0E00               	movlw	0
  7194  00136A  22DD               	addwfc	postdec2,f,c
  7195  00136C                     
  7196                           ; BSR set to: 0
  7197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7198  00136C  0E00               	movlw	0
  7199  00136E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  7200  001370  0E00               	movlw	0
  7201  001372  6E46               	movwf	?_vfpfcnvrt^0,c
  7202  001374  EFD7  F009         	goto	l1231
  7203  001378                     l3283:
  7204                           
  7205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7206  001378  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7207  00137C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7208  001380  CFDE FFF6          	movff	postinc2,tblptrl
  7209  001384  CFDD FFF7          	movff	postdec2,tblptrh
  7210  001388                     	if	0	;tblptru may be non-zero
  7211  001388                     	endif
  7212  001388                     	if	0	;tblptru may be non-zero
  7213  001388                     	endif
  7214  001388  0008               	tblrd		*
  7215  00138A  50F5               	movf	tablat,w,c
  7216  00138C  6E07               	movwf	fputc@c^0,c
  7217  00138E  6A08               	clrf	(fputc@c+1)^0,c
  7218  001390  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7219  001394  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7220  001398  EC9F  F015         	call	_fputc	;wreg free
  7221  00139C                     
  7222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7223  00139C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7224  0013A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7225  0013A4  2ADE               	incf	postinc2,f,c
  7226  0013A6  0E00               	movlw	0
  7227  0013A8  22DD               	addwfc	postdec2,f,c
  7228  0013AA  EFA9  F009         	goto	l3273
  7229  0013AE                     l1231:
  7230  0013AE  0012               	return		;funcret
  7231  0013B0                     __end_of_vfpfcnvrt:
  7232                           	callstack 0
  7233                           
  7234 ;; *************** function _dtoa *****************
  7235 ;; Defined at:
  7236 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  7239 ;;		 -> sprintf@f(6), 
  7240 ;;  d               8   35[COMRAM] long long 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  n               8   59[COMRAM] long long 
  7243 ;;  i               2   67[COMRAM] int 
  7244 ;;  s               2   57[COMRAM] int 
  7245 ;;  w               2   55[COMRAM] int 
  7246 ;;  p               2   53[COMRAM] int 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  2   33[COMRAM] int 
  7249 ;; Registers used:
  7250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7256 ;;      Params:        10       0       0       0       0       0       0       0       0
  7257 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7258 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7259 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7260 ;;Total ram usage:       36 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    6
  7263 ;; This function calls:
  7264 ;;		___aodiv
  7265 ;;		___aomod
  7266 ;;		_abs
  7267 ;;		_pad
  7268 ;; This function is called by:
  7269 ;;		_vfpfcnvrt
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text41
  7274  0013B0                     __ptext41:
  7275                           	callstack 0
  7276  0013B0                     _dtoa:
  7277                           	callstack 20
  7278  0013B0                     
  7279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7280  0013B0  C024  F03C         	movff	dtoa@d,dtoa@n
  7281  0013B4  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  7282  0013B8  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  7283  0013BC  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  7284  0013C0  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  7285  0013C4  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  7286  0013C8  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  7287  0013CC  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  7288  0013D0                     
  7289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7290  0013D0  BE43               	btfsc	(dtoa@n+7)^0,7,c
  7291  0013D2  EFED  F009         	goto	u2341
  7292  0013D6  EFF0  F009         	goto	u2340
  7293  0013DA                     u2341:
  7294  0013DA  0E01               	movlw	1
  7295  0013DC  EFF1  F009         	goto	u2350
  7296  0013E0                     u2340:
  7297  0013E0  0E00               	movlw	0
  7298  0013E2                     u2350:
  7299  0013E2  6E3A               	movwf	dtoa@s^0,c
  7300  0013E4  6A3B               	clrf	(dtoa@s+1)^0,c
  7301                           
  7302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7303  0013E6  503A               	movf	dtoa@s^0,w,c
  7304  0013E8  103B               	iorwf	(dtoa@s+1)^0,w,c
  7305  0013EA  B4D8               	btfsc	status,2,c
  7306  0013EC  EFFA  F009         	goto	u2361
  7307  0013F0  EFFC  F009         	goto	u2360
  7308  0013F4                     u2361:
  7309  0013F4  EF0C  F00A         	goto	l3101
  7310  0013F8                     u2360:
  7311  0013F8                     
  7312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7313  0013F8  1E43               	comf	(dtoa@n+7)^0,f,c
  7314  0013FA  1E42               	comf	(dtoa@n+6)^0,f,c
  7315  0013FC  1E41               	comf	(dtoa@n+5)^0,f,c
  7316  0013FE  1E40               	comf	(dtoa@n+4)^0,f,c
  7317  001400  1E3F               	comf	(dtoa@n+3)^0,f,c
  7318  001402  1E3E               	comf	(dtoa@n+2)^0,f,c
  7319  001404  1E3D               	comf	(dtoa@n+1)^0,f,c
  7320  001406  6C3C               	negf	dtoa@n^0,c
  7321  001408  0E00               	movlw	0
  7322  00140A  223D               	addwfc	(dtoa@n+1)^0,f,c
  7323  00140C  223E               	addwfc	(dtoa@n+2)^0,f,c
  7324  00140E  223F               	addwfc	(dtoa@n+3)^0,f,c
  7325  001410  2240               	addwfc	(dtoa@n+4)^0,f,c
  7326  001412  2241               	addwfc	(dtoa@n+5)^0,f,c
  7327  001414  2242               	addwfc	(dtoa@n+6)^0,f,c
  7328  001416  2243               	addwfc	(dtoa@n+7)^0,f,c
  7329  001418                     l3101:
  7330                           
  7331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7332  001418  BE54               	btfsc	(_prec+1)^0,7,c
  7333  00141A  EF11  F00A         	goto	u2371
  7334  00141E  EF13  F00A         	goto	u2370
  7335  001422                     u2371:
  7336  001422  EF14  F00A         	goto	l3105
  7337  001426                     u2370:
  7338  001426                     
  7339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7340  001426  9255               	bcf	_flags^0,1,c
  7341  001428                     l3105:
  7342                           
  7343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7344  001428  BE54               	btfsc	(_prec+1)^0,7,c
  7345  00142A  EF21  F00A         	goto	u2380
  7346  00142E  5054               	movf	(_prec+1)^0,w,c
  7347  001430  E106               	bnz	u2381
  7348  001432  0453               	decf	_prec^0,w,c
  7349  001434  B0D8               	btfsc	status,0,c
  7350  001436  EF1F  F00A         	goto	u2381
  7351  00143A  EF21  F00A         	goto	u2380
  7352  00143E                     u2381:
  7353  00143E  EF27  F00A         	goto	l1182
  7354  001442                     u2380:
  7355  001442  0E00               	movlw	0
  7356  001444  6E37               	movwf	(dtoa@p+1)^0,c
  7357  001446  0E01               	movlw	1
  7358  001448  6E36               	movwf	dtoa@p^0,c
  7359  00144A  EF2B  F00A         	goto	l1184
  7360  00144E                     l1182:
  7361  00144E  C053  F036         	movff	_prec,dtoa@p
  7362  001452  C054  F037         	movff	_prec+1,dtoa@p+1
  7363  001456                     l1184:
  7364                           
  7365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7366  001456  C062  F038         	movff	_width,dtoa@w
  7367  00145A  C063  F039         	movff	_width+1,dtoa@w+1
  7368  00145E                     
  7369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7370  00145E  503A               	movf	dtoa@s^0,w,c
  7371  001460  103B               	iorwf	(dtoa@s+1)^0,w,c
  7372  001462  A4D8               	btfss	status,2,c
  7373  001464  EF36  F00A         	goto	u2391
  7374  001468  EF38  F00A         	goto	u2390
  7375  00146C                     u2391:
  7376  00146C  EF3F  F00A         	goto	l3113
  7377  001470                     u2390:
  7378  001470  A455               	btfss	_flags^0,2,c
  7379  001472  EF3D  F00A         	goto	u2401
  7380  001476  EF3F  F00A         	goto	u2400
  7381  00147A                     u2401:
  7382  00147A  EF42  F00A         	goto	l3115
  7383  00147E                     u2400:
  7384  00147E                     l3113:
  7385                           
  7386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  7387  00147E  0638               	decf	dtoa@w^0,f,c
  7388  001480  A0D8               	btfss	status,0,c
  7389  001482  0639               	decf	(dtoa@w+1)^0,f,c
  7390  001484                     l3115:
  7391                           
  7392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7393  001484  0E00               	movlw	0
  7394  001486  6E45               	movwf	(dtoa@i+1)^0,c
  7395  001488  0E1F               	movlw	31
  7396  00148A  6E44               	movwf	dtoa@i^0,c
  7397  00148C                     
  7398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7399  00148C  0E00               	movlw	0
  7400  00148E  0100               	movlb	0	; () banked
  7401  001490  6F83               	movwf	(_dbuf+31)& (0+255),b
  7402                           
  7403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7404  001492  EFC7  F00A         	goto	l3129
  7405  001496                     l3119:
  7406                           
  7407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  7408  001496  0644               	decf	dtoa@i^0,f,c
  7409  001498  A0D8               	btfss	status,0,c
  7410  00149A  0645               	decf	(dtoa@i+1)^0,f,c
  7411  00149C                     
  7412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7413  00149C  0E64               	movlw	low _dbuf
  7414  00149E  2444               	addwf	dtoa@i^0,w,c
  7415  0014A0  6ED9               	movwf	fsr2l,c
  7416  0014A2  0E00               	movlw	high _dbuf
  7417  0014A4  2045               	addwfc	(dtoa@i+1)^0,w,c
  7418  0014A6  6EDA               	movwf	fsr2h,c
  7419  0014A8  C03C  F007         	movff	dtoa@n,___aomod@dividend
  7420  0014AC  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  7421  0014B0  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  7422  0014B4  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  7423  0014B8  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  7424  0014BC  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  7425  0014C0  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  7426  0014C4  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  7427  0014C8  0E0A               	movlw	10
  7428  0014CA  6E0F               	movwf	___aomod@divisor^0,c
  7429  0014CC  0E00               	movlw	0
  7430  0014CE  6E10               	movwf	(___aomod@divisor+1)^0,c
  7431  0014D0  0E00               	movlw	0
  7432  0014D2  6E11               	movwf	(___aomod@divisor+2)^0,c
  7433  0014D4  0E00               	movlw	0
  7434  0014D6  6E12               	movwf	(___aomod@divisor+3)^0,c
  7435  0014D8  0E00               	movlw	0
  7436  0014DA  6E13               	movwf	(___aomod@divisor+4)^0,c
  7437  0014DC  0E00               	movlw	0
  7438  0014DE  6E14               	movwf	(___aomod@divisor+5)^0,c
  7439  0014E0  0E00               	movlw	0
  7440  0014E2  6E15               	movwf	(___aomod@divisor+6)^0,c
  7441  0014E4  0E00               	movlw	0
  7442  0014E6  6E16               	movwf	(___aomod@divisor+7)^0,c
  7443  0014E8  EC28  F011         	call	___aomod	;wreg free
  7444  0014EC  C007  F02C         	movff	?___aomod,??_dtoa
  7445  0014F0  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  7446  0014F4  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  7447  0014F8  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  7448  0014FC  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  7449  001500  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  7450  001504  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  7451  001508  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  7452  00150C  C02C  F019         	movff	??_dtoa,abs@a
  7453  001510  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  7454  001514  EC4F  F01B         	call	_abs	;wreg free
  7455  001518  5019               	movf	?_abs^0,w,c
  7456  00151A  0F30               	addlw	48
  7457  00151C  6EDF               	movwf	indf2,c
  7458  00151E                     
  7459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  7460  00151E  0636               	decf	dtoa@p^0,f,c
  7461  001520  A0D8               	btfss	status,0,c
  7462  001522  0637               	decf	(dtoa@p+1)^0,f,c
  7463  001524                     
  7464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  7465  001524  0638               	decf	dtoa@w^0,f,c
  7466  001526  A0D8               	btfss	status,0,c
  7467  001528  0639               	decf	(dtoa@w+1)^0,f,c
  7468  00152A                     
  7469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7470  00152A  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  7471  00152E  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  7472  001532  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  7473  001536  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  7474  00153A  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  7475  00153E  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  7476  001542  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  7477  001546  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  7478  00154A  0E0A               	movlw	10
  7479  00154C  6E0F               	movwf	___aodiv@divisor^0,c
  7480  00154E  0E00               	movlw	0
  7481  001550  6E10               	movwf	(___aodiv@divisor+1)^0,c
  7482  001552  0E00               	movlw	0
  7483  001554  6E11               	movwf	(___aodiv@divisor+2)^0,c
  7484  001556  0E00               	movlw	0
  7485  001558  6E12               	movwf	(___aodiv@divisor+3)^0,c
  7486  00155A  0E00               	movlw	0
  7487  00155C  6E13               	movwf	(___aodiv@divisor+4)^0,c
  7488  00155E  0E00               	movlw	0
  7489  001560  6E14               	movwf	(___aodiv@divisor+5)^0,c
  7490  001562  0E00               	movlw	0
  7491  001564  6E15               	movwf	(___aodiv@divisor+6)^0,c
  7492  001566  0E00               	movlw	0
  7493  001568  6E16               	movwf	(___aodiv@divisor+7)^0,c
  7494  00156A  ECA9  F00F         	call	___aodiv	;wreg free
  7495  00156E  C007  F03C         	movff	?___aodiv,dtoa@n
  7496  001572  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  7497  001576  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  7498  00157A  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  7499  00157E  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  7500  001582  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  7501  001586  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  7502  00158A  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  7503  00158E                     l3129:
  7504                           
  7505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7506  00158E  BE45               	btfsc	(dtoa@i+1)^0,7,c
  7507  001590  EFD2  F00A         	goto	u2411
  7508  001594  5045               	movf	(dtoa@i+1)^0,w,c
  7509  001596  E108               	bnz	u2410
  7510  001598  0444               	decf	dtoa@i^0,w,c
  7511  00159A  A0D8               	btfss	status,0,c
  7512  00159C  EFD2  F00A         	goto	u2411
  7513  0015A0  EFD4  F00A         	goto	u2410
  7514  0015A4                     u2411:
  7515  0015A4  EF04  F00B         	goto	l3139
  7516  0015A8                     u2410:
  7517  0015A8  503C               	movf	dtoa@n^0,w,c
  7518  0015AA  103D               	iorwf	(dtoa@n+1)^0,w,c
  7519  0015AC  103E               	iorwf	(dtoa@n+2)^0,w,c
  7520  0015AE  103F               	iorwf	(dtoa@n+3)^0,w,c
  7521  0015B0  1040               	iorwf	(dtoa@n+4)^0,w,c
  7522  0015B2  1041               	iorwf	(dtoa@n+5)^0,w,c
  7523  0015B4  1042               	iorwf	(dtoa@n+6)^0,w,c
  7524  0015B6  1043               	iorwf	(dtoa@n+7)^0,w,c
  7525  0015B8  A4D8               	btfss	status,2,c
  7526  0015BA  EFE1  F00A         	goto	u2421
  7527  0015BE  EFE3  F00A         	goto	u2420
  7528  0015C2                     u2421:
  7529  0015C2  EF4B  F00A         	goto	l3119
  7530  0015C6                     u2420:
  7531  0015C6  BE37               	btfsc	(dtoa@p+1)^0,7,c
  7532  0015C8  EFF0  F00A         	goto	u2430
  7533  0015CC  5037               	movf	(dtoa@p+1)^0,w,c
  7534  0015CE  E106               	bnz	u2431
  7535  0015D0  0436               	decf	dtoa@p^0,w,c
  7536  0015D2  B0D8               	btfsc	status,0,c
  7537  0015D4  EFEE  F00A         	goto	u2431
  7538  0015D8  EFF0  F00A         	goto	u2430
  7539  0015DC                     u2431:
  7540  0015DC  EF4B  F00A         	goto	l3119
  7541  0015E0                     u2430:
  7542  0015E0  BE39               	btfsc	(dtoa@w+1)^0,7,c
  7543  0015E2  EFFB  F00A         	goto	u2441
  7544  0015E6  5039               	movf	(dtoa@w+1)^0,w,c
  7545  0015E8  E108               	bnz	u2440
  7546  0015EA  0438               	decf	dtoa@w^0,w,c
  7547  0015EC  A0D8               	btfss	status,0,c
  7548  0015EE  EFFB  F00A         	goto	u2441
  7549  0015F2  EFFD  F00A         	goto	u2440
  7550  0015F6                     u2441:
  7551  0015F6  EF04  F00B         	goto	l3139
  7552  0015FA                     u2440:
  7553  0015FA  B255               	btfsc	_flags^0,1,c
  7554  0015FC  EF02  F00B         	goto	u2451
  7555  001600  EF04  F00B         	goto	u2450
  7556  001604                     u2451:
  7557  001604  EF4B  F00A         	goto	l3119
  7558  001608                     u2450:
  7559  001608                     l3139:
  7560                           
  7561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7562  001608  503A               	movf	dtoa@s^0,w,c
  7563  00160A  103B               	iorwf	(dtoa@s+1)^0,w,c
  7564  00160C  A4D8               	btfss	status,2,c
  7565  00160E  EF0B  F00B         	goto	u2461
  7566  001612  EF0D  F00B         	goto	u2460
  7567  001616                     u2461:
  7568  001616  EF14  F00B         	goto	l3143
  7569  00161A                     u2460:
  7570  00161A  A455               	btfss	_flags^0,2,c
  7571  00161C  EF12  F00B         	goto	u2471
  7572  001620  EF14  F00B         	goto	u2470
  7573  001624                     u2471:
  7574  001624  EF32  F00B         	goto	l3153
  7575  001628                     u2470:
  7576  001628                     l3143:
  7577                           
  7578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  7579  001628  0644               	decf	dtoa@i^0,f,c
  7580  00162A  A0D8               	btfss	status,0,c
  7581  00162C  0645               	decf	(dtoa@i+1)^0,f,c
  7582  00162E                     
  7583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7584  00162E  503A               	movf	dtoa@s^0,w,c
  7585  001630  103B               	iorwf	(dtoa@s+1)^0,w,c
  7586  001632  A4D8               	btfss	status,2,c
  7587  001634  EF1E  F00B         	goto	u2481
  7588  001638  EF20  F00B         	goto	u2480
  7589  00163C                     u2481:
  7590  00163C  EF26  F00B         	goto	l3149
  7591  001640                     u2480:
  7592  001640  0E00               	movlw	0
  7593  001642  6E35               	movwf	(_dtoa$2340+1)^0,c
  7594  001644  0E2B               	movlw	43
  7595  001646  6E34               	movwf	_dtoa$2340^0,c
  7596  001648  EF2A  F00B         	goto	l3151
  7597  00164C                     l3149:
  7598  00164C  0E00               	movlw	0
  7599  00164E  6E35               	movwf	(_dtoa$2340+1)^0,c
  7600  001650  0E2D               	movlw	45
  7601  001652  6E34               	movwf	_dtoa$2340^0,c
  7602  001654                     l3151:
  7603  001654  0E64               	movlw	low _dbuf
  7604  001656  2444               	addwf	dtoa@i^0,w,c
  7605  001658  6ED9               	movwf	fsr2l,c
  7606  00165A  0E00               	movlw	high _dbuf
  7607  00165C  2045               	addwfc	(dtoa@i+1)^0,w,c
  7608  00165E  6EDA               	movwf	fsr2h,c
  7609  001660  C034  FFDF         	movff	_dtoa$2340,indf2
  7610  001664                     l3153:
  7611                           
  7612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7613  001664  C022  F017         	movff	dtoa@fp,pad@fp
  7614  001668  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  7615  00166C  0E64               	movlw	low _dbuf
  7616  00166E  2444               	addwf	dtoa@i^0,w,c
  7617  001670  6E19               	movwf	pad@buf^0,c
  7618  001672  0E00               	movlw	high _dbuf
  7619  001674  2045               	addwfc	(dtoa@i+1)^0,w,c
  7620  001676  6E1A               	movwf	(pad@buf+1)^0,c
  7621  001678  C038  F01B         	movff	dtoa@w,pad@p
  7622  00167C  C039  F01C         	movff	dtoa@w+1,pad@p+1
  7623  001680  EC04  F016         	call	_pad	;wreg free
  7624  001684  C017  F022         	movff	?_pad,?_dtoa
  7625  001688  C018  F023         	movff	?_pad+1,?_dtoa+1
  7626  00168C  0012               	return		;funcret
  7627  00168E                     __end_of_dtoa:
  7628                           	callstack 0
  7629                           
  7630 ;; *************** function _pad *****************
  7631 ;; Defined at:
  7632 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  7635 ;;		 -> sprintf@f(6), 
  7636 ;;  buf             2   24[COMRAM] PTR unsigned char 
  7637 ;;		 -> dbuf(32), 
  7638 ;;  p               2   26[COMRAM] int 
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  w               2   31[COMRAM] int 
  7641 ;;  i               2   29[COMRAM] int 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  2   22[COMRAM] int 
  7644 ;; Registers used:
  7645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7651 ;;      Params:         6       0       0       0       0       0       0       0       0
  7652 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7653 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7654 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7655 ;;Total ram usage:       11 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    5
  7658 ;; This function calls:
  7659 ;;		_fputc
  7660 ;;		_fputs
  7661 ;;		_strlen
  7662 ;; This function is called by:
  7663 ;;		_dtoa
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text42
  7668  002C08                     __ptext42:
  7669                           	callstack 0
  7670  002C08                     _pad:
  7671                           	callstack 20
  7672  002C08                     
  7673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7674  002C08  A055               	btfss	_flags^0,0,c
  7675  002C0A  EF09  F016         	goto	u2251
  7676  002C0E  EF0B  F016         	goto	u2250
  7677  002C12                     u2251:
  7678  002C12  EF15  F016         	goto	l3057
  7679  002C16                     u2250:
  7680  002C16                     
  7681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7682  002C16  C019  F010         	movff	pad@buf,fputs@s
  7683  002C1A  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7684  002C1E  C017  F012         	movff	pad@fp,fputs@fp
  7685  002C22  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7686  002C26  EC2D  F01B         	call	_fputs	;wreg free
  7687  002C2A                     l3057:
  7688                           
  7689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7690  002C2A  BE1C               	btfsc	(pad@p+1)^0,7,c
  7691  002C2C  EF1A  F016         	goto	u2261
  7692  002C30  EF1C  F016         	goto	u2260
  7693  002C34                     u2261:
  7694  002C34  EF22  F016         	goto	l3061
  7695  002C38                     u2260:
  7696  002C38  C01B  F020         	movff	pad@p,pad@w
  7697  002C3C  C01C  F021         	movff	pad@p+1,pad@w+1
  7698  002C40  EF26  F016         	goto	l1171
  7699  002C44                     l3061:
  7700  002C44  0E00               	movlw	0
  7701  002C46  6E21               	movwf	(pad@w+1)^0,c
  7702  002C48  0E00               	movlw	0
  7703  002C4A  6E20               	movwf	pad@w^0,c
  7704  002C4C                     l1171:
  7705                           
  7706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7707  002C4C  0E00               	movlw	0
  7708  002C4E  6E1F               	movwf	(pad@i+1)^0,c
  7709  002C50  0E00               	movlw	0
  7710  002C52  6E1E               	movwf	pad@i^0,c
  7711                           
  7712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7713  002C54  EF38  F016         	goto	l3067
  7714  002C58                     l3063:
  7715                           
  7716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7717  002C58  0E00               	movlw	0
  7718  002C5A  6E08               	movwf	(fputc@c+1)^0,c
  7719  002C5C  0E20               	movlw	32
  7720  002C5E  6E07               	movwf	fputc@c^0,c
  7721  002C60  C017  F009         	movff	pad@fp,fputc@fp
  7722  002C64  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  7723  002C68  EC9F  F015         	call	_fputc	;wreg free
  7724  002C6C                     
  7725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7726  002C6C  4A1E               	infsnz	pad@i^0,f,c
  7727  002C6E  2A1F               	incf	(pad@i+1)^0,f,c
  7728  002C70                     l3067:
  7729                           
  7730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7731  002C70  5020               	movf	pad@w^0,w,c
  7732  002C72  5C1E               	subwf	pad@i^0,w,c
  7733  002C74  501F               	movf	(pad@i+1)^0,w,c
  7734  002C76  0A80               	xorlw	128
  7735  002C78  6E1D               	movwf	??_pad^0,c
  7736  002C7A  5021               	movf	(pad@w+1)^0,w,c
  7737  002C7C  0A80               	xorlw	128
  7738  002C7E  581D               	subwfb	??_pad^0,w,c
  7739  002C80  A0D8               	btfss	status,0,c
  7740  002C82  EF45  F016         	goto	u2271
  7741  002C86  EF47  F016         	goto	u2270
  7742  002C8A                     u2271:
  7743  002C8A  EF2C  F016         	goto	l3063
  7744  002C8E                     u2270:
  7745  002C8E                     
  7746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7747  002C8E  B055               	btfsc	_flags^0,0,c
  7748  002C90  EF4C  F016         	goto	u2281
  7749  002C94  EF4E  F016         	goto	u2280
  7750  002C98                     u2281:
  7751  002C98  EF58  F016         	goto	l3071
  7752  002C9C                     u2280:
  7753  002C9C                     
  7754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7755  002C9C  C019  F010         	movff	pad@buf,fputs@s
  7756  002CA0  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7757  002CA4  C017  F012         	movff	pad@fp,fputs@fp
  7758  002CA8  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7759  002CAC  EC2D  F01B         	call	_fputs	;wreg free
  7760  002CB0                     l3071:
  7761                           
  7762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7763  002CB0  C019  F007         	movff	pad@buf,strlen@s
  7764  002CB4  C01A  F008         	movff	pad@buf+1,strlen@s+1
  7765  002CB8  ECA9  F01B         	call	_strlen	;wreg free
  7766  002CBC  5020               	movf	pad@w^0,w,c
  7767  002CBE  2407               	addwf	?_strlen^0,w,c
  7768  002CC0  6E17               	movwf	?_pad^0,c
  7769  002CC2  5021               	movf	(pad@w+1)^0,w,c
  7770  002CC4  2008               	addwfc	(?_strlen+1)^0,w,c
  7771  002CC6  6E18               	movwf	(?_pad+1)^0,c
  7772  002CC8  0012               	return		;funcret
  7773  002CCA                     __end_of_pad:
  7774                           	callstack 0
  7775                           
  7776 ;; *************** function _strlen *****************
  7777 ;; Defined at:
  7778 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7781 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;  a               2    8[COMRAM] PTR const unsigned char 
  7784 ;;		 -> dbuf(32), datos.display(16), datos(25), 
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  2    6[COMRAM] unsigned int 
  7787 ;; Registers used:
  7788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7794 ;;      Params:         2       0       0       0       0       0       0       0       0
  7795 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7797 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7798 ;;Total ram usage:        4 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:    2
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_sendData
  7805 ;;		_pad
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text43
  7810  003752                     __ptext43:
  7811                           	callstack 0
  7812  003752                     _strlen:
  7813                           	callstack 22
  7814  003752  C007  F009         	movff	strlen@s,strlen@a
  7815  003756  C008  F00A         	movff	strlen@s+1,strlen@a+1
  7816  00375A  EFB1  F01B         	goto	l2953
  7817  00375E                     l2951:
  7818  00375E  4A07               	infsnz	strlen@s^0,f,c
  7819  003760  2A08               	incf	(strlen@s+1)^0,f,c
  7820  003762                     l2953:
  7821  003762  C007  FFD9         	movff	strlen@s,fsr2l
  7822  003766  C008  FFDA         	movff	strlen@s+1,fsr2h
  7823  00376A  50DF               	movf	indf2,w,c
  7824  00376C  A4D8               	btfss	status,2,c
  7825  00376E  EFBB  F01B         	goto	u2101
  7826  003772  EFBD  F01B         	goto	u2100
  7827  003776                     u2101:
  7828  003776  EFAF  F01B         	goto	l2951
  7829  00377A                     u2100:
  7830  00377A  5009               	movf	strlen@a^0,w,c
  7831  00377C  5C07               	subwf	strlen@s^0,w,c
  7832  00377E  6E07               	movwf	?_strlen^0,c
  7833  003780  500A               	movf	(strlen@a+1)^0,w,c
  7834  003782  5808               	subwfb	(strlen@s+1)^0,w,c
  7835  003784  6E08               	movwf	(?_strlen+1)^0,c
  7836  003786  0012               	return		;funcret
  7837  003788                     __end_of_strlen:
  7838                           	callstack 0
  7839                           
  7840 ;; *************** function _fputs *****************
  7841 ;; Defined at:
  7842 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7845 ;;		 -> dbuf(32), 
  7846 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7847 ;;		 -> sprintf@f(6), 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  i               2   20[COMRAM] int 
  7850 ;;  c               1   19[COMRAM] unsigned char 
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  2   15[COMRAM] int 
  7853 ;; Registers used:
  7854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7860 ;;      Params:         4       0       0       0       0       0       0       0       0
  7861 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7863 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7864 ;;Total ram usage:        7 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    4
  7867 ;; This function calls:
  7868 ;;		_fputc
  7869 ;; This function is called by:
  7870 ;;		_pad
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text44
  7875  00365A                     __ptext44:
  7876                           	callstack 0
  7877  00365A                     _fputs:
  7878                           	callstack 20
  7879  00365A  0E00               	movlw	0
  7880  00365C  6E16               	movwf	(fputs@i+1)^0,c
  7881  00365E  0E00               	movlw	0
  7882  003660  6E15               	movwf	fputs@i^0,c
  7883  003662  EF3E  F01B         	goto	l2965
  7884  003666                     l2961:
  7885  003666  C014  F007         	movff	fputs@c,fputc@c
  7886  00366A  6A08               	clrf	(fputc@c+1)^0,c
  7887  00366C  C012  F009         	movff	fputs@fp,fputc@fp
  7888  003670  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  7889  003674  EC9F  F015         	call	_fputc	;wreg free
  7890  003678  4A15               	infsnz	fputs@i^0,f,c
  7891  00367A  2A16               	incf	(fputs@i+1)^0,f,c
  7892  00367C                     l2965:
  7893  00367C  5015               	movf	fputs@i^0,w,c
  7894  00367E  2410               	addwf	fputs@s^0,w,c
  7895  003680  6ED9               	movwf	fsr2l,c
  7896  003682  5016               	movf	(fputs@i+1)^0,w,c
  7897  003684  2011               	addwfc	(fputs@s+1)^0,w,c
  7898  003686  6EDA               	movwf	fsr2h,c
  7899  003688  50DF               	movf	indf2,w,c
  7900  00368A  6E14               	movwf	fputs@c^0,c
  7901  00368C  5014               	movf	fputs@c^0,w,c
  7902  00368E  A4D8               	btfss	status,2,c
  7903  003690  EF4C  F01B         	goto	u2111
  7904  003694  EF4E  F01B         	goto	u2110
  7905  003698                     u2111:
  7906  003698  EF33  F01B         	goto	l2961
  7907  00369C                     u2110:
  7908  00369C  0012               	return		;funcret
  7909  00369E                     __end_of_fputs:
  7910                           	callstack 0
  7911                           
  7912 ;; *************** function _fputc *****************
  7913 ;; Defined at:
  7914 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  c               2    6[COMRAM] int 
  7917 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  7918 ;;		 -> sprintf@f(6), 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  2    6[COMRAM] int 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7930 ;;      Params:         4       0       0       0       0       0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7932 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7933 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7934 ;;Total ram usage:        9 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    3
  7937 ;; This function calls:
  7938 ;;		_putch
  7939 ;; This function is called by:
  7940 ;;		_pad
  7941 ;;		_vfpfcnvrt
  7942 ;;		_fputs
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text45
  7947  002B3E                     __ptext45:
  7948                           	callstack 0
  7949  002B3E                     _fputc:
  7950                           	callstack 23
  7951  002B3E  5009               	movf	fputc@fp^0,w,c
  7952  002B40  100A               	iorwf	(fputc@fp+1)^0,w,c
  7953  002B42  B4D8               	btfsc	status,2,c
  7954  002B44  EFA6  F015         	goto	u2061
  7955  002B48  EFA8  F015         	goto	u2060
  7956  002B4C                     u2061:
  7957  002B4C  EFB1  F015         	goto	l2939
  7958  002B50                     u2060:
  7959  002B50  5009               	movf	fputc@fp^0,w,c
  7960  002B52  100A               	iorwf	(fputc@fp+1)^0,w,c
  7961  002B54  A4D8               	btfss	status,2,c
  7962  002B56  EFAF  F015         	goto	u2071
  7963  002B5A  EFB1  F015         	goto	u2070
  7964  002B5E                     u2071:
  7965  002B5E  EFB6  F015         	goto	l2941
  7966  002B62                     u2070:
  7967  002B62                     l2939:
  7968  002B62  5007               	movf	fputc@c^0,w,c
  7969  002B64  EC56  F01C         	call	_putch
  7970  002B68  EF03  F016         	goto	l1302
  7971  002B6C                     l2941:
  7972  002B6C  EE20 F004          	lfsr	2,4
  7973  002B70  5009               	movf	fputc@fp^0,w,c
  7974  002B72  26D9               	addwf	fsr2l,f,c
  7975  002B74  500A               	movf	(fputc@fp+1)^0,w,c
  7976  002B76  22DA               	addwfc	fsr2h,f,c
  7977  002B78  50DE               	movf	postinc2,w,c
  7978  002B7A  10DE               	iorwf	postinc2,w,c
  7979  002B7C  B4D8               	btfsc	status,2,c
  7980  002B7E  EFC3  F015         	goto	u2081
  7981  002B82  EFC5  F015         	goto	u2080
  7982  002B86                     u2081:
  7983  002B86  EFE0  F015         	goto	l2945
  7984  002B8A                     u2080:
  7985  002B8A  EE20 F004          	lfsr	2,4
  7986  002B8E  5009               	movf	fputc@fp^0,w,c
  7987  002B90  26D9               	addwf	fsr2l,f,c
  7988  002B92  500A               	movf	(fputc@fp+1)^0,w,c
  7989  002B94  22DA               	addwfc	fsr2h,f,c
  7990  002B96  EE10 F002          	lfsr	1,2
  7991  002B9A  5009               	movf	fputc@fp^0,w,c
  7992  002B9C  26E1               	addwf	fsr1l,f,c
  7993  002B9E  500A               	movf	(fputc@fp+1)^0,w,c
  7994  002BA0  22E2               	addwfc	fsr1h,f,c
  7995  002BA2  50DE               	movf	postinc2,w,c
  7996  002BA4  5CE6               	subwf	postinc1,w,c
  7997  002BA6  50E6               	movf	postinc1,w,c
  7998  002BA8  0A80               	xorlw	128
  7999  002BAA  6E0F               	movwf	(??_fputc+4)^0,c
  8000  002BAC  50DE               	movf	postinc2,w,c
  8001  002BAE  0A80               	xorlw	128
  8002  002BB0  580F               	subwfb	(??_fputc+4)^0,w,c
  8003  002BB2  B0D8               	btfsc	status,0,c
  8004  002BB4  EFDE  F015         	goto	u2091
  8005  002BB8  EFE0  F015         	goto	u2090
  8006  002BBC                     u2091:
  8007  002BBC  EF03  F016         	goto	l1302
  8008  002BC0                     u2090:
  8009  002BC0                     l2945:
  8010  002BC0  EE20 F002          	lfsr	2,2
  8011  002BC4  5009               	movf	fputc@fp^0,w,c
  8012  002BC6  26D9               	addwf	fsr2l,f,c
  8013  002BC8  500A               	movf	(fputc@fp+1)^0,w,c
  8014  002BCA  22DA               	addwfc	fsr2h,f,c
  8015  002BCC  CFDE F00B          	movff	postinc2,??_fputc
  8016  002BD0  CFDD F00C          	movff	postdec2,??_fputc+1
  8017  002BD4  C009  FFD9         	movff	fputc@fp,fsr2l
  8018  002BD8  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  8019  002BDC  CFDE F00D          	movff	postinc2,??_fputc+2
  8020  002BE0  CFDD F00E          	movff	postdec2,??_fputc+3
  8021  002BE4  500B               	movf	??_fputc^0,w,c
  8022  002BE6  240D               	addwf	(??_fputc+2)^0,w,c
  8023  002BE8  6ED9               	movwf	fsr2l,c
  8024  002BEA  500C               	movf	(??_fputc+1)^0,w,c
  8025  002BEC  200E               	addwfc	(??_fputc+3)^0,w,c
  8026  002BEE  6EDA               	movwf	fsr2h,c
  8027  002BF0  C007  FFDF         	movff	fputc@c,indf2
  8028  002BF4  EE20 F002          	lfsr	2,2
  8029  002BF8  5009               	movf	fputc@fp^0,w,c
  8030  002BFA  26D9               	addwf	fsr2l,f,c
  8031  002BFC  500A               	movf	(fputc@fp+1)^0,w,c
  8032  002BFE  22DA               	addwfc	fsr2h,f,c
  8033  002C00  2ADE               	incf	postinc2,f,c
  8034  002C02  0E00               	movlw	0
  8035  002C04  22DD               	addwfc	postdec2,f,c
  8036  002C06                     l1302:
  8037  002C06  0012               	return		;funcret
  8038  002C08                     __end_of_fputc:
  8039                           	callstack 0
  8040                           
  8041 ;; *************** function _putch *****************
  8042 ;; Defined at:
  8043 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  c               1    wreg     unsigned char 
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;  c               1    0[COMRAM] unsigned char 
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  1    wreg      void 
  8050 ;; Registers used:
  8051 ;;		wreg
  8052 ;; Tracked objects:
  8053 ;;		On entry : 0/0
  8054 ;;		On exit  : 0/0
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8057 ;;      Params:         0       0       0       0       0       0       0       0       0
  8058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8060 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8061 ;;Total ram usage:        0 bytes
  8062 ;; Hardware stack levels used:    1
  8063 ;; Hardware stack levels required when called:    2
  8064 ;; This function calls:
  8065 ;;		Nothing
  8066 ;; This function is called by:
  8067 ;;		_fputc
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           	psect	text46
  8072  0038AC                     __ptext46:
  8073                           	callstack 0
  8074  0038AC                     _putch:
  8075                           	callstack 23
  8076  0038AC  0012               	return		;funcret
  8077  0038AE                     __end_of_putch:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function _abs *****************
  8081 ;; Defined at:
  8082 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  a               2   24[COMRAM] int 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  2   24[COMRAM] int 
  8089 ;; Registers used:
  8090 ;;		wreg, status,2, status,0
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8096 ;;      Params:         2       0       0       0       0       0       0       0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8098 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8099 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8100 ;;Total ram usage:        4 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; Hardware stack levels required when called:    2
  8103 ;; This function calls:
  8104 ;;		Nothing
  8105 ;; This function is called by:
  8106 ;;		_dtoa
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text47
  8111  00369E                     __ptext47:
  8112                           	callstack 0
  8113  00369E                     _abs:
  8114                           	callstack 23
  8115  00369E  BE1A               	btfsc	(abs@a+1)^0,7,c
  8116  0036A0  EF5C  F01B         	goto	u2290
  8117  0036A4  501A               	movf	(abs@a+1)^0,w,c
  8118  0036A6  E106               	bnz	u2291
  8119  0036A8  0419               	decf	abs@a^0,w,c
  8120  0036AA  B0D8               	btfsc	status,0,c
  8121  0036AC  EF5A  F01B         	goto	u2291
  8122  0036B0  EF5C  F01B         	goto	u2290
  8123  0036B4                     u2291:
  8124  0036B4  EF6A  F01B         	goto	l1242
  8125  0036B8                     u2290:
  8126  0036B8  C019  F01B         	movff	abs@a,??_abs
  8127  0036BC  C01A  F01C         	movff	abs@a+1,??_abs+1
  8128  0036C0  1E1B               	comf	??_abs^0,f,c
  8129  0036C2  1E1C               	comf	(??_abs+1)^0,f,c
  8130  0036C4  4A1B               	infsnz	??_abs^0,f,c
  8131  0036C6  2A1C               	incf	(??_abs+1)^0,f,c
  8132  0036C8  C01B  F019         	movff	??_abs,?_abs
  8133  0036CC  C01C  F01A         	movff	??_abs+1,?_abs+1
  8134  0036D0  EF6E  F01B         	goto	l1245
  8135  0036D4                     l1242:
  8136  0036D4  C019  F019         	movff	abs@a,?_abs
  8137  0036D8  C01A  F01A         	movff	abs@a+1,?_abs+1
  8138  0036DC                     l1245:
  8139  0036DC  0012               	return		;funcret
  8140  0036DE                     __end_of_abs:
  8141                           	callstack 0
  8142                           
  8143 ;; *************** function ___aomod *****************
  8144 ;; Defined at:
  8145 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  dividend        8    6[COMRAM] long long 
  8148 ;;  divisor         8   14[COMRAM] long long 
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;  sign            1   23[COMRAM] unsigned char 
  8151 ;;  counter         1   22[COMRAM] unsigned char 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  8    6[COMRAM] long long 
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8161 ;;      Params:        16       0       0       0       0       0       0       0       0
  8162 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8164 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8165 ;;Total ram usage:       18 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:    2
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_dtoa
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text48
  8176  002250                     __ptext48:
  8177                           	callstack 0
  8178  002250                     ___aomod:
  8179                           	callstack 23
  8180  002250  0E00               	movlw	0
  8181  002252  6E18               	movwf	___aomod@sign^0,c
  8182  002254  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  8183  002256  EF31  F011         	goto	u2190
  8184  00225A  EF2F  F011         	goto	u2191
  8185  00225E                     u2191:
  8186  00225E  EF43  F011         	goto	l3025
  8187  002262                     u2190:
  8188  002262  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8189  002264  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8190  002266  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8191  002268  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8192  00226A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8193  00226C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8194  00226E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8195  002270  6C07               	negf	___aomod@dividend^0,c
  8196  002272  0E00               	movlw	0
  8197  002274  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8198  002276  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8199  002278  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8200  00227A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8201  00227C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8202  00227E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8203  002280  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8204  002282  0E01               	movlw	1
  8205  002284  6E18               	movwf	___aomod@sign^0,c
  8206  002286                     l3025:
  8207  002286  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  8208  002288  EF4A  F011         	goto	u2200
  8209  00228C  EF48  F011         	goto	u2201
  8210  002290                     u2201:
  8211  002290  EF5A  F011         	goto	l3029
  8212  002294                     u2200:
  8213  002294  1E16               	comf	(___aomod@divisor+7)^0,f,c
  8214  002296  1E15               	comf	(___aomod@divisor+6)^0,f,c
  8215  002298  1E14               	comf	(___aomod@divisor+5)^0,f,c
  8216  00229A  1E13               	comf	(___aomod@divisor+4)^0,f,c
  8217  00229C  1E12               	comf	(___aomod@divisor+3)^0,f,c
  8218  00229E  1E11               	comf	(___aomod@divisor+2)^0,f,c
  8219  0022A0  1E10               	comf	(___aomod@divisor+1)^0,f,c
  8220  0022A2  6C0F               	negf	___aomod@divisor^0,c
  8221  0022A4  0E00               	movlw	0
  8222  0022A6  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  8223  0022A8  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  8224  0022AA  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  8225  0022AC  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  8226  0022AE  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  8227  0022B0  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  8228  0022B2  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  8229  0022B4                     l3029:
  8230  0022B4  500F               	movf	___aomod@divisor^0,w,c
  8231  0022B6  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  8232  0022B8  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  8233  0022BA  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  8234  0022BC  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  8235  0022BE  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  8236  0022C0  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  8237  0022C2  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  8238  0022C4  B4D8               	btfsc	status,2,c
  8239  0022C6  EF67  F011         	goto	u2211
  8240  0022CA  EF69  F011         	goto	u2210
  8241  0022CE                     u2211:
  8242  0022CE  EFB1  F011         	goto	l3045
  8243  0022D2                     u2210:
  8244  0022D2  0E01               	movlw	1
  8245  0022D4  6E17               	movwf	___aomod@counter^0,c
  8246  0022D6  EF77  F011         	goto	l3035
  8247  0022DA                     l3033:
  8248  0022DA  90D8               	bcf	status,0,c
  8249  0022DC  360F               	rlcf	___aomod@divisor^0,f,c
  8250  0022DE  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  8251  0022E0  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  8252  0022E2  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  8253  0022E4  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  8254  0022E6  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  8255  0022E8  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  8256  0022EA  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  8257  0022EC  2A17               	incf	___aomod@counter^0,f,c
  8258  0022EE                     l3035:
  8259  0022EE  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  8260  0022F0  EF7C  F011         	goto	u2221
  8261  0022F4  EF7E  F011         	goto	u2220
  8262  0022F8                     u2221:
  8263  0022F8  EF6D  F011         	goto	l3033
  8264  0022FC                     u2220:
  8265  0022FC                     l3037:
  8266  0022FC  500F               	movf	___aomod@divisor^0,w,c
  8267  0022FE  5C07               	subwf	___aomod@dividend^0,w,c
  8268  002300  5010               	movf	(___aomod@divisor+1)^0,w,c
  8269  002302  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  8270  002304  5011               	movf	(___aomod@divisor+2)^0,w,c
  8271  002306  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  8272  002308  5012               	movf	(___aomod@divisor+3)^0,w,c
  8273  00230A  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  8274  00230C  5013               	movf	(___aomod@divisor+4)^0,w,c
  8275  00230E  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  8276  002310  5014               	movf	(___aomod@divisor+5)^0,w,c
  8277  002312  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  8278  002314  5015               	movf	(___aomod@divisor+6)^0,w,c
  8279  002316  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  8280  002318  5016               	movf	(___aomod@divisor+7)^0,w,c
  8281  00231A  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  8282  00231C  A0D8               	btfss	status,0,c
  8283  00231E  EF93  F011         	goto	u2231
  8284  002322  EF95  F011         	goto	u2230
  8285  002326                     u2231:
  8286  002326  EFA5  F011         	goto	l3041
  8287  00232A                     u2230:
  8288  00232A  500F               	movf	___aomod@divisor^0,w,c
  8289  00232C  5E07               	subwf	___aomod@dividend^0,f,c
  8290  00232E  5010               	movf	(___aomod@divisor+1)^0,w,c
  8291  002330  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  8292  002332  5011               	movf	(___aomod@divisor+2)^0,w,c
  8293  002334  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  8294  002336  5012               	movf	(___aomod@divisor+3)^0,w,c
  8295  002338  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  8296  00233A  5013               	movf	(___aomod@divisor+4)^0,w,c
  8297  00233C  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  8298  00233E  5014               	movf	(___aomod@divisor+5)^0,w,c
  8299  002340  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  8300  002342  5015               	movf	(___aomod@divisor+6)^0,w,c
  8301  002344  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  8302  002346  5016               	movf	(___aomod@divisor+7)^0,w,c
  8303  002348  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  8304  00234A                     l3041:
  8305  00234A  90D8               	bcf	status,0,c
  8306  00234C  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  8307  00234E  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  8308  002350  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  8309  002352  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  8310  002354  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  8311  002356  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  8312  002358  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  8313  00235A  320F               	rrcf	___aomod@divisor^0,f,c
  8314  00235C  2E17               	decfsz	___aomod@counter^0,f,c
  8315  00235E  EF7E  F011         	goto	l3037
  8316  002362                     l3045:
  8317  002362  5018               	movf	___aomod@sign^0,w,c
  8318  002364  B4D8               	btfsc	status,2,c
  8319  002366  EFB7  F011         	goto	u2241
  8320  00236A  EFB9  F011         	goto	u2240
  8321  00236E                     u2241:
  8322  00236E  EFC9  F011         	goto	l3049
  8323  002372                     u2240:
  8324  002372  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  8325  002374  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  8326  002376  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  8327  002378  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  8328  00237A  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  8329  00237C  1E09               	comf	(___aomod@dividend+2)^0,f,c
  8330  00237E  1E08               	comf	(___aomod@dividend+1)^0,f,c
  8331  002380  6C07               	negf	___aomod@dividend^0,c
  8332  002382  0E00               	movlw	0
  8333  002384  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  8334  002386  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  8335  002388  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  8336  00238A  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  8337  00238C  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  8338  00238E  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  8339  002390  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  8340  002392                     l3049:
  8341  002392  C007  F007         	movff	___aomod@dividend,?___aomod
  8342  002396  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  8343  00239A  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  8344  00239E  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  8345  0023A2  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  8346  0023A6  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  8347  0023AA  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  8348  0023AE  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  8349  0023B2  0012               	return		;funcret
  8350  0023B4                     __end_of___aomod:
  8351                           	callstack 0
  8352                           
  8353 ;; *************** function ___aodiv *****************
  8354 ;; Defined at:
  8355 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  dividend        8    6[COMRAM] long long 
  8358 ;;  divisor         8   14[COMRAM] long long 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;  quotient        8   24[COMRAM] long long 
  8361 ;;  sign            1   23[COMRAM] unsigned char 
  8362 ;;  counter         1   22[COMRAM] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  8    6[COMRAM] long long 
  8365 ;; Registers used:
  8366 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8372 ;;      Params:        16       0       0       0       0       0       0       0       0
  8373 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8375 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8376 ;;Total ram usage:       26 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    2
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_dtoa
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text49
  8387  001F52                     __ptext49:
  8388                           	callstack 0
  8389  001F52                     ___aodiv:
  8390                           	callstack 23
  8391  001F52  0E00               	movlw	0
  8392  001F54  6E18               	movwf	___aodiv@sign^0,c
  8393  001F56  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  8394  001F58  EFB2  F00F         	goto	u2120
  8395  001F5C  EFB0  F00F         	goto	u2121
  8396  001F60                     u2121:
  8397  001F60  EFC4  F00F         	goto	l2981
  8398  001F64                     u2120:
  8399  001F64  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  8400  001F66  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  8401  001F68  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  8402  001F6A  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  8403  001F6C  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  8404  001F6E  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  8405  001F70  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  8406  001F72  6C0F               	negf	___aodiv@divisor^0,c
  8407  001F74  0E00               	movlw	0
  8408  001F76  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  8409  001F78  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  8410  001F7A  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  8411  001F7C  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  8412  001F7E  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  8413  001F80  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  8414  001F82  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  8415  001F84  0E01               	movlw	1
  8416  001F86  6E18               	movwf	___aodiv@sign^0,c
  8417  001F88                     l2981:
  8418  001F88  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  8419  001F8A  EFCB  F00F         	goto	u2130
  8420  001F8E  EFC9  F00F         	goto	u2131
  8421  001F92                     u2131:
  8422  001F92  EFDD  F00F         	goto	l2987
  8423  001F96                     u2130:
  8424  001F96  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  8425  001F98  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  8426  001F9A  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  8427  001F9C  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  8428  001F9E  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  8429  001FA0  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  8430  001FA2  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  8431  001FA4  6C07               	negf	___aodiv@dividend^0,c
  8432  001FA6  0E00               	movlw	0
  8433  001FA8  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  8434  001FAA  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  8435  001FAC  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  8436  001FAE  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  8437  001FB0  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  8438  001FB2  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  8439  001FB4  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  8440  001FB6  0E01               	movlw	1
  8441  001FB8  1A18               	xorwf	___aodiv@sign^0,f,c
  8442  001FBA                     l2987:
  8443  001FBA  EE20  F019         	lfsr	2,___aodiv@quotient
  8444  001FBE  0E07               	movlw	7
  8445  001FC0                     u2141:
  8446  001FC0  6ADE               	clrf	postinc2,c
  8447  001FC2  06E8               	decf	wreg,f,c
  8448  001FC4  E2FD               	bc	u2141
  8449  001FC6  500F               	movf	___aodiv@divisor^0,w,c
  8450  001FC8  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  8451  001FCA  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  8452  001FCC  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  8453  001FCE  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  8454  001FD0  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  8455  001FD2  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  8456  001FD4  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  8457  001FD6  B4D8               	btfsc	status,2,c
  8458  001FD8  EFF0  F00F         	goto	u2151
  8459  001FDC  EFF2  F00F         	goto	u2150
  8460  001FE0                     u2151:
  8461  001FE0  EF44  F010         	goto	l3009
  8462  001FE4                     u2150:
  8463  001FE4  0E01               	movlw	1
  8464  001FE6  6E17               	movwf	___aodiv@counter^0,c
  8465  001FE8  EF00  F010         	goto	l2995
  8466  001FEC                     l2993:
  8467  001FEC  90D8               	bcf	status,0,c
  8468  001FEE  360F               	rlcf	___aodiv@divisor^0,f,c
  8469  001FF0  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  8470  001FF2  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  8471  001FF4  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  8472  001FF6  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  8473  001FF8  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  8474  001FFA  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  8475  001FFC  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  8476  001FFE  2A17               	incf	___aodiv@counter^0,f,c
  8477  002000                     l2995:
  8478  002000  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  8479  002002  EF05  F010         	goto	u2161
  8480  002006  EF07  F010         	goto	u2160
  8481  00200A                     u2161:
  8482  00200A  EFF6  F00F         	goto	l2993
  8483  00200E                     u2160:
  8484  00200E                     l2997:
  8485  00200E  90D8               	bcf	status,0,c
  8486  002010  3619               	rlcf	___aodiv@quotient^0,f,c
  8487  002012  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  8488  002014  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  8489  002016  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  8490  002018  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  8491  00201A  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  8492  00201C  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  8493  00201E  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  8494  002020  500F               	movf	___aodiv@divisor^0,w,c
  8495  002022  5C07               	subwf	___aodiv@dividend^0,w,c
  8496  002024  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8497  002026  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  8498  002028  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8499  00202A  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  8500  00202C  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8501  00202E  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  8502  002030  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8503  002032  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  8504  002034  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8505  002036  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  8506  002038  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8507  00203A  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  8508  00203C  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8509  00203E  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  8510  002040  A0D8               	btfss	status,0,c
  8511  002042  EF25  F010         	goto	u2171
  8512  002046  EF27  F010         	goto	u2170
  8513  00204A                     u2171:
  8514  00204A  EF38  F010         	goto	l3005
  8515  00204E                     u2170:
  8516  00204E  500F               	movf	___aodiv@divisor^0,w,c
  8517  002050  5E07               	subwf	___aodiv@dividend^0,f,c
  8518  002052  5010               	movf	(___aodiv@divisor+1)^0,w,c
  8519  002054  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  8520  002056  5011               	movf	(___aodiv@divisor+2)^0,w,c
  8521  002058  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  8522  00205A  5012               	movf	(___aodiv@divisor+3)^0,w,c
  8523  00205C  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  8524  00205E  5013               	movf	(___aodiv@divisor+4)^0,w,c
  8525  002060  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  8526  002062  5014               	movf	(___aodiv@divisor+5)^0,w,c
  8527  002064  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  8528  002066  5015               	movf	(___aodiv@divisor+6)^0,w,c
  8529  002068  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  8530  00206A  5016               	movf	(___aodiv@divisor+7)^0,w,c
  8531  00206C  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  8532  00206E  8019               	bsf	___aodiv@quotient^0,0,c
  8533  002070                     l3005:
  8534  002070  90D8               	bcf	status,0,c
  8535  002072  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  8536  002074  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  8537  002076  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  8538  002078  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  8539  00207A  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  8540  00207C  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  8541  00207E  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  8542  002080  320F               	rrcf	___aodiv@divisor^0,f,c
  8543  002082  2E17               	decfsz	___aodiv@counter^0,f,c
  8544  002084  EF07  F010         	goto	l2997
  8545  002088                     l3009:
  8546  002088  5018               	movf	___aodiv@sign^0,w,c
  8547  00208A  B4D8               	btfsc	status,2,c
  8548  00208C  EF4A  F010         	goto	u2181
  8549  002090  EF4C  F010         	goto	u2180
  8550  002094                     u2181:
  8551  002094  EF5C  F010         	goto	l3013
  8552  002098                     u2180:
  8553  002098  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  8554  00209A  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  8555  00209C  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  8556  00209E  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  8557  0020A0  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  8558  0020A2  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  8559  0020A4  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  8560  0020A6  6C19               	negf	___aodiv@quotient^0,c
  8561  0020A8  0E00               	movlw	0
  8562  0020AA  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  8563  0020AC  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  8564  0020AE  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  8565  0020B0  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  8566  0020B2  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  8567  0020B4  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  8568  0020B6  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  8569  0020B8                     l3013:
  8570  0020B8  C019  F007         	movff	___aodiv@quotient,?___aodiv
  8571  0020BC  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  8572  0020C0  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  8573  0020C4  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  8574  0020C8  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  8575  0020CC  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  8576  0020D0  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  8577  0020D4  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  8578  0020D8  0012               	return		;funcret
  8579  0020DA                     __end_of___aodiv:
  8580                           	callstack 0
  8581                           
  8582 ;; *************** function _atoi *****************
  8583 ;; Defined at:
  8584 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  s               2   13[COMRAM] PTR const unsigned char 
  8587 ;;		 -> STR_11(2), STR_7(3), STR_5(5), STR_2(9), 
  8588 ;;		 -> STR_1(14), 
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;  n               2   26[COMRAM] int 
  8591 ;;  neg             2   19[COMRAM] int 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  2   13[COMRAM] int 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8601 ;;      Params:         2       0       0       0       0       0       0       0       0
  8602 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8603 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8604 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8605 ;;Total ram usage:       15 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    3
  8608 ;; This function calls:
  8609 ;;		___wmul
  8610 ;;		_isdigit
  8611 ;;		_isspace
  8612 ;; This function is called by:
  8613 ;;		_vfpfcnvrt
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           	psect	text50
  8618  001DC2                     __ptext50:
  8619                           	callstack 0
  8620  001DC2                     _atoi:
  8621                           	callstack 23
  8622  001DC2  0E00               	movlw	0
  8623  001DC4  6E1C               	movwf	(atoi@n+1)^0,c
  8624  001DC6  0E00               	movlw	0
  8625  001DC8  6E1B               	movwf	atoi@n^0,c
  8626  001DCA  0E00               	movlw	0
  8627  001DCC  6E15               	movwf	(atoi@neg+1)^0,c
  8628  001DCE  0E00               	movlw	0
  8629  001DD0  6E14               	movwf	atoi@neg^0,c
  8630  001DD2  EFED  F00E         	goto	l3161
  8631  001DD6                     l3159:
  8632  001DD6  4A0E               	infsnz	atoi@s^0,f,c
  8633  001DD8  2A0F               	incf	(atoi@s+1)^0,f,c
  8634  001DDA                     l3161:
  8635  001DDA  0E01               	movlw	1
  8636  001DDC  6E1A               	movwf	_atoi$2376^0,c
  8637  001DDE  C00E  FFF6         	movff	atoi@s,tblptrl
  8638  001DE2  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8639  001DE6                     	if	0	;tblptru may be non-zero
  8640  001DE6                     	endif
  8641  001DE6                     	if	0	;tblptru may be non-zero
  8642  001DE6                     	endif
  8643  001DE6  0008               	tblrd		*
  8644  001DE8  50F5               	movf	tablat,w,c
  8645  001DEA  0A20               	xorlw	32
  8646  001DEC  B4D8               	btfsc	status,2,c
  8647  001DEE  EFFB  F00E         	goto	u2491
  8648  001DF2  EFFD  F00E         	goto	u2490
  8649  001DF6                     u2491:
  8650  001DF6  EF1A  F00F         	goto	l3169
  8651  001DFA                     u2490:
  8652  001DFA  0EF7               	movlw	247
  8653  001DFC  6E10               	movwf	??_atoi^0,c
  8654  001DFE  0EFF               	movlw	255
  8655  001E00  6E11               	movwf	(??_atoi+1)^0,c
  8656  001E02  C00E  FFF6         	movff	atoi@s,tblptrl
  8657  001E06  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8658  001E0A                     	if	0	;tblptru may be non-zero
  8659  001E0A                     	endif
  8660  001E0A                     	if	0	;tblptru may be non-zero
  8661  001E0A                     	endif
  8662  001E0A  0008               	tblrd		*
  8663  001E0C  50F5               	movf	tablat,w,c
  8664  001E0E  6E12               	movwf	(??_atoi+2)^0,c
  8665  001E10  6A13               	clrf	(??_atoi+3)^0,c
  8666  001E12  5010               	movf	??_atoi^0,w,c
  8667  001E14  2612               	addwf	(??_atoi+2)^0,f,c
  8668  001E16  5011               	movf	(??_atoi+1)^0,w,c
  8669  001E18  2213               	addwfc	(??_atoi+3)^0,f,c
  8670  001E1A  5013               	movf	(??_atoi+3)^0,w,c
  8671  001E1C  E109               	bnz	u2500
  8672  001E1E  0E05               	movlw	5
  8673  001E20  5C12               	subwf	(??_atoi+2)^0,w,c
  8674  001E22  A0D8               	btfss	status,0,c
  8675  001E24  EF16  F00F         	goto	u2501
  8676  001E28  EF18  F00F         	goto	u2500
  8677  001E2C                     u2501:
  8678  001E2C  EF1A  F00F         	goto	l3169
  8679  001E30                     u2500:
  8680  001E30  0E00               	movlw	0
  8681  001E32  6E1A               	movwf	_atoi$2376^0,c
  8682  001E34                     l3169:
  8683  001E34  C01A  F016         	movff	_atoi$2376,_atoi$2375
  8684  001E38  6A17               	clrf	(_atoi$2375+1)^0,c
  8685  001E3A  5016               	movf	_atoi$2375^0,w,c
  8686  001E3C  1017               	iorwf	(_atoi$2375+1)^0,w,c
  8687  001E3E  A4D8               	btfss	status,2,c
  8688  001E40  EF24  F00F         	goto	u2511
  8689  001E44  EF26  F00F         	goto	u2510
  8690  001E48                     u2511:
  8691  001E48  EFEB  F00E         	goto	l3159
  8692  001E4C                     u2510:
  8693  001E4C  EF30  F00F         	goto	l3179
  8694  001E50                     l3175:
  8695  001E50  0E00               	movlw	0
  8696  001E52  6E15               	movwf	(atoi@neg+1)^0,c
  8697  001E54  0E01               	movlw	1
  8698  001E56  6E14               	movwf	atoi@neg^0,c
  8699  001E58                     l3177:
  8700  001E58  4A0E               	infsnz	atoi@s^0,f,c
  8701  001E5A  2A0F               	incf	(atoi@s+1)^0,f,c
  8702  001E5C  EF65  F00F         	goto	l3185
  8703  001E60                     l3179:
  8704  001E60  C00E  FFF6         	movff	atoi@s,tblptrl
  8705  001E64  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8706  001E68                     	if	0	;tblptru may be non-zero
  8707  001E68                     	endif
  8708  001E68                     	if	0	;tblptru may be non-zero
  8709  001E68                     	endif
  8710  001E68  0008               	tblrd		*
  8711  001E6A  50F5               	movf	tablat,w,c
  8712  001E6C  6E10               	movwf	??_atoi^0,c
  8713  001E6E  6A11               	clrf	(??_atoi+1)^0,c
  8714                           
  8715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8716                           ; Switch size 1, requested type "simple"
  8717                           ; Number of cases is 1, Range of values is 0 to 0
  8718                           ; switch strategies available:
  8719                           ; Name         Instructions Cycles
  8720                           ; simple_byte            4     3 (average)
  8721                           ;	Chosen strategy is simple_byte
  8722  001E70  5011               	movf	(??_atoi+1)^0,w,c
  8723  001E72  0A00               	xorlw	0	; case 0
  8724  001E74  B4D8               	btfsc	status,2,c
  8725  001E76  EF3F  F00F         	goto	l5027
  8726  001E7A  EF65  F00F         	goto	l3185
  8727  001E7E                     l5027:
  8728                           
  8729                           ; Switch size 1, requested type "simple"
  8730                           ; Number of cases is 2, Range of values is 43 to 45
  8731                           ; switch strategies available:
  8732                           ; Name         Instructions Cycles
  8733                           ; simple_byte            7     4 (average)
  8734                           ;	Chosen strategy is simple_byte
  8735  001E7E  5010               	movf	??_atoi^0,w,c
  8736  001E80  0A2B               	xorlw	43	; case 43
  8737  001E82  B4D8               	btfsc	status,2,c
  8738  001E84  EF2C  F00F         	goto	l3177
  8739  001E88  0A06               	xorlw	6	; case 45
  8740  001E8A  B4D8               	btfsc	status,2,c
  8741  001E8C  EF28  F00F         	goto	l3175
  8742  001E90  EF65  F00F         	goto	l3185
  8743  001E94                     l3181:
  8744  001E94  C01B  F007         	movff	atoi@n,___wmul@multiplier
  8745  001E98  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  8746  001E9C  0E00               	movlw	0
  8747  001E9E  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  8748  001EA0  0E0A               	movlw	10
  8749  001EA2  6E09               	movwf	___wmul@multiplicand^0,c
  8750  001EA4  EC0A  F01C         	call	___wmul	;wreg free
  8751  001EA8  C00E  FFF6         	movff	atoi@s,tblptrl
  8752  001EAC  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8753  001EB0                     	if	0	;tblptru may be non-zero
  8754  001EB0                     	endif
  8755  001EB0                     	if	0	;tblptru may be non-zero
  8756  001EB0                     	endif
  8757  001EB0  0008               	tblrd		*
  8758  001EB2  50F5               	movf	tablat,w,c
  8759  001EB4  5E07               	subwf	?___wmul^0,f,c
  8760  001EB6  0E00               	movlw	0
  8761  001EB8  5A08               	subwfb	(?___wmul+1)^0,f,c
  8762  001EBA  0E30               	movlw	48
  8763  001EBC  2407               	addwf	?___wmul^0,w,c
  8764  001EBE  6E1B               	movwf	atoi@n^0,c
  8765  001EC0  0E00               	movlw	0
  8766  001EC2  2008               	addwfc	(?___wmul+1)^0,w,c
  8767  001EC4  6E1C               	movwf	(atoi@n+1)^0,c
  8768  001EC6  EF2C  F00F         	goto	l3177
  8769  001ECA                     l3185:
  8770  001ECA  0ED0               	movlw	208
  8771  001ECC  6E10               	movwf	??_atoi^0,c
  8772  001ECE  0EFF               	movlw	255
  8773  001ED0  6E11               	movwf	(??_atoi+1)^0,c
  8774  001ED2  C00E  FFF6         	movff	atoi@s,tblptrl
  8775  001ED6  C00F  FFF7         	movff	atoi@s+1,tblptrh
  8776  001EDA                     	if	0	;tblptru may be non-zero
  8777  001EDA                     	endif
  8778  001EDA                     	if	0	;tblptru may be non-zero
  8779  001EDA                     	endif
  8780  001EDA  0008               	tblrd		*
  8781  001EDC  50F5               	movf	tablat,w,c
  8782  001EDE  6E12               	movwf	(??_atoi+2)^0,c
  8783  001EE0  6A13               	clrf	(??_atoi+3)^0,c
  8784  001EE2  5010               	movf	??_atoi^0,w,c
  8785  001EE4  2612               	addwf	(??_atoi+2)^0,f,c
  8786  001EE6  5011               	movf	(??_atoi+1)^0,w,c
  8787  001EE8  2213               	addwfc	(??_atoi+3)^0,f,c
  8788  001EEA  5013               	movf	(??_atoi+3)^0,w,c
  8789  001EEC  E10A               	bnz	u2520
  8790  001EEE  0E0A               	movlw	10
  8791  001EF0  5C12               	subwf	(??_atoi+2)^0,w,c
  8792  001EF2  A0D8               	btfss	status,0,c
  8793  001EF4  EF7E  F00F         	goto	u2521
  8794  001EF8  EF81  F00F         	goto	u2520
  8795  001EFC                     u2521:
  8796  001EFC  0E01               	movlw	1
  8797  001EFE  EF82  F00F         	goto	u2530
  8798  001F02                     u2520:
  8799  001F02  0E00               	movlw	0
  8800  001F04                     u2530:
  8801  001F04  6E18               	movwf	_atoi$2377^0,c
  8802  001F06  6A19               	clrf	(_atoi$2377+1)^0,c
  8803  001F08  5018               	movf	_atoi$2377^0,w,c
  8804  001F0A  1019               	iorwf	(_atoi$2377+1)^0,w,c
  8805  001F0C  A4D8               	btfss	status,2,c
  8806  001F0E  EF8B  F00F         	goto	u2541
  8807  001F12  EF8D  F00F         	goto	u2540
  8808  001F16                     u2541:
  8809  001F16  EF4A  F00F         	goto	l3181
  8810  001F1A                     u2540:
  8811  001F1A  5014               	movf	atoi@neg^0,w,c
  8812  001F1C  1015               	iorwf	(atoi@neg+1)^0,w,c
  8813  001F1E  A4D8               	btfss	status,2,c
  8814  001F20  EF94  F00F         	goto	u2551
  8815  001F24  EF96  F00F         	goto	u2550
  8816  001F28                     u2551:
  8817  001F28  EFA4  F00F         	goto	l1273
  8818  001F2C                     u2550:
  8819  001F2C  C01B  F010         	movff	atoi@n,??_atoi
  8820  001F30  C01C  F011         	movff	atoi@n+1,??_atoi+1
  8821  001F34  1E10               	comf	??_atoi^0,f,c
  8822  001F36  1E11               	comf	(??_atoi+1)^0,f,c
  8823  001F38  4A10               	infsnz	??_atoi^0,f,c
  8824  001F3A  2A11               	incf	(??_atoi+1)^0,f,c
  8825  001F3C  C010  F00E         	movff	??_atoi,?_atoi
  8826  001F40  C011  F00F         	movff	??_atoi+1,?_atoi+1
  8827  001F44  EFA8  F00F         	goto	l1276
  8828  001F48                     l1273:
  8829  001F48  C01B  F00E         	movff	atoi@n,?_atoi
  8830  001F4C  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  8831  001F50                     l1276:
  8832  001F50  0012               	return		;funcret
  8833  001F52                     __end_of_atoi:
  8834                           	callstack 0
  8835                           
  8836 ;; *************** function _isspace *****************
  8837 ;; Defined at:
  8838 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  c               2    6[COMRAM] int 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  2    6[COMRAM] int 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8852 ;;      Params:         2       0       0       0       0       0       0       0       0
  8853 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8854 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8855 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8856 ;;Total ram usage:        7 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    2
  8859 ;; This function calls:
  8860 ;;		Nothing
  8861 ;; This function is called by:
  8862 ;;		_atoi
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text51
  8867  0034A2                     __ptext51:
  8868                           	callstack 0
  8869  0034A2                     _isspace:
  8870                           	callstack 23
  8871  0034A2  0E01               	movlw	1
  8872  0034A4  6E0D               	movwf	_isspace$2393^0,c
  8873  0034A6  0E20               	movlw	32
  8874  0034A8  1807               	xorwf	isspace@c^0,w,c
  8875  0034AA  1008               	iorwf	(isspace@c+1)^0,w,c
  8876  0034AC  B4D8               	btfsc	status,2,c
  8877  0034AE  EF5B  F01A         	goto	u2321
  8878  0034B2  EF5D  F01A         	goto	u2320
  8879  0034B6                     u2321:
  8880  0034B6  EF76  F01A         	goto	l3091
  8881  0034BA                     u2320:
  8882  0034BA  0EF7               	movlw	247
  8883  0034BC  6E09               	movwf	??_isspace^0,c
  8884  0034BE  0EFF               	movlw	255
  8885  0034C0  6E0A               	movwf	(??_isspace+1)^0,c
  8886  0034C2  C007  F00B         	movff	isspace@c,??_isspace+2
  8887  0034C6  C008  F00C         	movff	isspace@c+1,??_isspace+3
  8888  0034CA  5009               	movf	??_isspace^0,w,c
  8889  0034CC  260B               	addwf	(??_isspace+2)^0,f,c
  8890  0034CE  500A               	movf	(??_isspace+1)^0,w,c
  8891  0034D0  220C               	addwfc	(??_isspace+3)^0,f,c
  8892  0034D2  500C               	movf	(??_isspace+3)^0,w,c
  8893  0034D4  E109               	bnz	u2330
  8894  0034D6  0E05               	movlw	5
  8895  0034D8  5C0B               	subwf	(??_isspace+2)^0,w,c
  8896  0034DA  A0D8               	btfss	status,0,c
  8897  0034DC  EF72  F01A         	goto	u2331
  8898  0034E0  EF74  F01A         	goto	u2330
  8899  0034E4                     u2331:
  8900  0034E4  EF76  F01A         	goto	l3091
  8901  0034E8                     u2330:
  8902  0034E8  0E00               	movlw	0
  8903  0034EA  6E0D               	movwf	_isspace$2393^0,c
  8904  0034EC                     l3091:
  8905  0034EC  C00D  F007         	movff	_isspace$2393,?_isspace
  8906  0034F0  6A08               	clrf	(?_isspace+1)^0,c
  8907  0034F2  0012               	return		;funcret
  8908  0034F4                     __end_of_isspace:
  8909                           	callstack 0
  8910                           
  8911 ;; *************** function _isdigit *****************
  8912 ;; Defined at:
  8913 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  c               2    6[COMRAM] int 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;		None
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  2    6[COMRAM] int 
  8920 ;; Registers used:
  8921 ;;		wreg, status,2, status,0
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8927 ;;      Params:         2       0       0       0       0       0       0       0       0
  8928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8929 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8930 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8931 ;;Total ram usage:        6 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:    2
  8934 ;; This function calls:
  8935 ;;		Nothing
  8936 ;; This function is called by:
  8937 ;;		_vfpfcnvrt
  8938 ;;		_atoi
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text52
  8943  00371A                     __ptext52:
  8944                           	callstack 0
  8945  00371A                     _isdigit:
  8946                           	callstack 24
  8947  00371A  0ED0               	movlw	208
  8948  00371C  6E09               	movwf	??_isdigit^0,c
  8949  00371E  0EFF               	movlw	255
  8950  003720  6E0A               	movwf	(??_isdigit+1)^0,c
  8951  003722  C007  F00B         	movff	isdigit@c,??_isdigit+2
  8952  003726  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  8953  00372A  5009               	movf	??_isdigit^0,w,c
  8954  00372C  260B               	addwf	(??_isdigit+2)^0,f,c
  8955  00372E  500A               	movf	(??_isdigit+1)^0,w,c
  8956  003730  220C               	addwfc	(??_isdigit+3)^0,f,c
  8957  003732  500C               	movf	(??_isdigit+3)^0,w,c
  8958  003734  E10A               	bnz	u2300
  8959  003736  0E0A               	movlw	10
  8960  003738  5C0B               	subwf	(??_isdigit+2)^0,w,c
  8961  00373A  A0D8               	btfss	status,0,c
  8962  00373C  EFA2  F01B         	goto	u2301
  8963  003740  EFA5  F01B         	goto	u2300
  8964  003744                     u2301:
  8965  003744  0E01               	movlw	1
  8966  003746  EFA6  F01B         	goto	u2310
  8967  00374A                     u2300:
  8968  00374A  0E00               	movlw	0
  8969  00374C                     u2310:
  8970  00374C  6E07               	movwf	?_isdigit^0,c
  8971  00374E  6A08               	clrf	(?_isdigit+1)^0,c
  8972  003750  0012               	return		;funcret
  8973  003752                     __end_of_isdigit:
  8974                           	callstack 0
  8975                           
  8976 ;; *************** function ___wmul *****************
  8977 ;; Defined at:
  8978 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  multiplier      2    6[COMRAM] unsigned int 
  8981 ;;  multiplicand    2    8[COMRAM] unsigned int 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  product         2   10[COMRAM] unsigned int 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  2    6[COMRAM] unsigned int 
  8986 ;; Registers used:
  8987 ;;		wreg, status,2, status,0, prodl, prodh
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8993 ;;      Params:         4       0       0       0       0       0       0       0       0
  8994 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8996 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8997 ;;Total ram usage:        6 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    2
  9000 ;; This function calls:
  9001 ;;		Nothing
  9002 ;; This function is called by:
  9003 ;;		_appSubGetData
  9004 ;;		_atoi
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text53
  9009  003814                     __ptext53:
  9010                           	callstack 0
  9011  003814                     ___wmul:
  9012                           	callstack 23
  9013  003814  5007               	movf	___wmul@multiplier^0,w,c
  9014  003816  0209               	mulwf	___wmul@multiplicand^0,c
  9015  003818  CFF3 F00B          	movff	prodl,___wmul@product
  9016  00381C  CFF4 F00C          	movff	prodh,___wmul@product+1
  9017  003820  5007               	movf	___wmul@multiplier^0,w,c
  9018  003822  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  9019  003824  50F3               	movf	243,w,c
  9020  003826  260C               	addwf	(___wmul@product+1)^0,f,c
  9021  003828  5008               	movf	(___wmul@multiplier+1)^0,w,c
  9022  00382A  0209               	mulwf	___wmul@multiplicand^0,c
  9023  00382C  50F3               	movf	243,w,c
  9024  00382E  260C               	addwf	(___wmul@product+1)^0,f,c
  9025  003830  C00B  F007         	movff	___wmul@product,?___wmul
  9026  003834  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  9027  003838  0012               	return		;funcret
  9028  00383A                     __end_of___wmul:
  9029                           	callstack 0
  9030                           
  9031 ;; *************** function _memset *****************
  9032 ;; Defined at:
  9033 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;  dest            2    6[COMRAM] PTR void 
  9036 ;;		 -> puerto(16), datos(25), 
  9037 ;;  c               2    8[COMRAM] int 
  9038 ;;  n               2   10[COMRAM] unsigned int 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  s               2   16[COMRAM] PTR unsigned char 
  9041 ;;		 -> puerto(16), datos(25), 
  9042 ;;  k               2   14[COMRAM] unsigned int 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  2    6[COMRAM] PTR void 
  9045 ;; Registers used:
  9046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9052 ;;      Params:         6       0       0       0       0       0       0       0       0
  9053 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9054 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9055 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9056 ;;Total ram usage:       12 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    2
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_appADC
  9063 ;;		_appBat
  9064 ;;		_appElemts
  9065 ;;		_appSubGetData
  9066 ;;		_sendinformation
  9067 ;;		_readUART
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text54
  9072  0020DA                     __ptext54:
  9073                           	callstack 0
  9074  0020DA                     _memset:
  9075                           	callstack 27
  9076  0020DA  C007  F011         	movff	memset@dest,memset@s
  9077  0020DE  C008  F012         	movff	memset@dest+1,memset@s+1
  9078  0020E2  500B               	movf	memset@n^0,w,c
  9079  0020E4  100C               	iorwf	(memset@n+1)^0,w,c
  9080  0020E6  A4D8               	btfss	status,2,c
  9081  0020E8  EF78  F010         	goto	u2821
  9082  0020EC  EF7A  F010         	goto	u2820
  9083  0020F0                     u2821:
  9084  0020F0  EF7C  F010         	goto	l3401
  9085  0020F4                     u2820:
  9086  0020F4  EF27  F011         	goto	l1127
  9087  0020F8                     l3401:
  9088  0020F8  C011  FFD9         	movff	memset@s,fsr2l
  9089  0020FC  C012  FFDA         	movff	memset@s+1,fsr2h
  9090  002100  C009  FFDF         	movff	memset@c,indf2
  9091  002104  500B               	movf	memset@n^0,w,c
  9092  002106  2411               	addwf	memset@s^0,w,c
  9093  002108  6E0D               	movwf	??_memset^0,c
  9094  00210A  500C               	movf	(memset@n+1)^0,w,c
  9095  00210C  2012               	addwfc	(memset@s+1)^0,w,c
  9096  00210E  6E0E               	movwf	(??_memset+1)^0,c
  9097  002110  0EFF               	movlw	255
  9098  002112  240D               	addwf	??_memset^0,w,c
  9099  002114  6ED9               	movwf	fsr2l,c
  9100  002116  0EFF               	movlw	255
  9101  002118  200E               	addwfc	(??_memset+1)^0,w,c
  9102  00211A  6EDA               	movwf	fsr2h,c
  9103  00211C  C009  FFDF         	movff	memset@c,indf2
  9104  002120  500C               	movf	(memset@n+1)^0,w,c
  9105  002122  E107               	bnz	u2831
  9106  002124  0E03               	movlw	3
  9107  002126  5C0B               	subwf	memset@n^0,w,c
  9108  002128  B0D8               	btfsc	status,0,c
  9109  00212A  EF99  F010         	goto	u2831
  9110  00212E  EF9B  F010         	goto	u2830
  9111  002132                     u2831:
  9112  002132  EF9D  F010         	goto	l3407
  9113  002136                     u2830:
  9114  002136  EF27  F011         	goto	l1127
  9115  00213A                     l3407:
  9116  00213A  EE20 F001          	lfsr	2,1
  9117  00213E  5011               	movf	memset@s^0,w,c
  9118  002140  26D9               	addwf	fsr2l,f,c
  9119  002142  5012               	movf	(memset@s+1)^0,w,c
  9120  002144  22DA               	addwfc	fsr2h,f,c
  9121  002146  C009  FFDF         	movff	memset@c,indf2
  9122  00214A  EE20 F002          	lfsr	2,2
  9123  00214E  5011               	movf	memset@s^0,w,c
  9124  002150  26D9               	addwf	fsr2l,f,c
  9125  002152  5012               	movf	(memset@s+1)^0,w,c
  9126  002154  22DA               	addwfc	fsr2h,f,c
  9127  002156  C009  FFDF         	movff	memset@c,indf2
  9128  00215A  500B               	movf	memset@n^0,w,c
  9129  00215C  2411               	addwf	memset@s^0,w,c
  9130  00215E  6E0D               	movwf	??_memset^0,c
  9131  002160  500C               	movf	(memset@n+1)^0,w,c
  9132  002162  2012               	addwfc	(memset@s+1)^0,w,c
  9133  002164  6E0E               	movwf	(??_memset+1)^0,c
  9134  002166  0EFE               	movlw	254
  9135  002168  240D               	addwf	??_memset^0,w,c
  9136  00216A  6ED9               	movwf	fsr2l,c
  9137  00216C  0EFF               	movlw	255
  9138  00216E  200E               	addwfc	(??_memset+1)^0,w,c
  9139  002170  6EDA               	movwf	fsr2h,c
  9140  002172  C009  FFDF         	movff	memset@c,indf2
  9141  002176  500B               	movf	memset@n^0,w,c
  9142  002178  2411               	addwf	memset@s^0,w,c
  9143  00217A  6E0D               	movwf	??_memset^0,c
  9144  00217C  500C               	movf	(memset@n+1)^0,w,c
  9145  00217E  2012               	addwfc	(memset@s+1)^0,w,c
  9146  002180  6E0E               	movwf	(??_memset+1)^0,c
  9147  002182  0EFD               	movlw	253
  9148  002184  240D               	addwf	??_memset^0,w,c
  9149  002186  6ED9               	movwf	fsr2l,c
  9150  002188  0EFF               	movlw	255
  9151  00218A  200E               	addwfc	(??_memset+1)^0,w,c
  9152  00218C  6EDA               	movwf	fsr2h,c
  9153  00218E  C009  FFDF         	movff	memset@c,indf2
  9154  002192  500C               	movf	(memset@n+1)^0,w,c
  9155  002194  E107               	bnz	u2841
  9156  002196  0E07               	movlw	7
  9157  002198  5C0B               	subwf	memset@n^0,w,c
  9158  00219A  B0D8               	btfsc	status,0,c
  9159  00219C  EFD2  F010         	goto	u2841
  9160  0021A0  EFD4  F010         	goto	u2840
  9161  0021A4                     u2841:
  9162  0021A4  EFD6  F010         	goto	l3413
  9163  0021A8                     u2840:
  9164  0021A8  EF27  F011         	goto	l1127
  9165  0021AC                     l3413:
  9166  0021AC  EE20 F003          	lfsr	2,3
  9167  0021B0  5011               	movf	memset@s^0,w,c
  9168  0021B2  26D9               	addwf	fsr2l,f,c
  9169  0021B4  5012               	movf	(memset@s+1)^0,w,c
  9170  0021B6  22DA               	addwfc	fsr2h,f,c
  9171  0021B8  C009  FFDF         	movff	memset@c,indf2
  9172  0021BC  500B               	movf	memset@n^0,w,c
  9173  0021BE  2411               	addwf	memset@s^0,w,c
  9174  0021C0  6E0D               	movwf	??_memset^0,c
  9175  0021C2  500C               	movf	(memset@n+1)^0,w,c
  9176  0021C4  2012               	addwfc	(memset@s+1)^0,w,c
  9177  0021C6  6E0E               	movwf	(??_memset+1)^0,c
  9178  0021C8  0EFC               	movlw	252
  9179  0021CA  240D               	addwf	??_memset^0,w,c
  9180  0021CC  6ED9               	movwf	fsr2l,c
  9181  0021CE  0EFF               	movlw	255
  9182  0021D0  200E               	addwfc	(??_memset+1)^0,w,c
  9183  0021D2  6EDA               	movwf	fsr2h,c
  9184  0021D4  C009  FFDF         	movff	memset@c,indf2
  9185  0021D8  500C               	movf	(memset@n+1)^0,w,c
  9186  0021DA  E107               	bnz	u2851
  9187  0021DC  0E09               	movlw	9
  9188  0021DE  5C0B               	subwf	memset@n^0,w,c
  9189  0021E0  B0D8               	btfsc	status,0,c
  9190  0021E2  EFF5  F010         	goto	u2851
  9191  0021E6  EFF7  F010         	goto	u2850
  9192  0021EA                     u2851:
  9193  0021EA  EFF9  F010         	goto	l3419
  9194  0021EE                     u2850:
  9195  0021EE  EF27  F011         	goto	l1127
  9196  0021F2                     l3419:
  9197  0021F2  C011  F00D         	movff	memset@s,??_memset
  9198  0021F6  C012  F00E         	movff	memset@s+1,??_memset+1
  9199  0021FA  1E0D               	comf	??_memset^0,f,c
  9200  0021FC  1E0E               	comf	(??_memset+1)^0,f,c
  9201  0021FE  4A0D               	infsnz	??_memset^0,f,c
  9202  002200  2A0E               	incf	(??_memset+1)^0,f,c
  9203  002202  0E03               	movlw	3
  9204  002204  140D               	andwf	??_memset^0,w,c
  9205  002206  6E0F               	movwf	memset@k^0,c
  9206  002208  6A10               	clrf	(memset@k+1)^0,c
  9207  00220A  500F               	movf	memset@k^0,w,c
  9208  00220C  2611               	addwf	memset@s^0,f,c
  9209  00220E  5010               	movf	(memset@k+1)^0,w,c
  9210  002210  2212               	addwfc	(memset@s+1)^0,f,c
  9211  002212  500F               	movf	memset@k^0,w,c
  9212  002214  5E0B               	subwf	memset@n^0,f,c
  9213  002216  5010               	movf	(memset@k+1)^0,w,c
  9214  002218  5A0C               	subwfb	(memset@n+1)^0,f,c
  9215  00221A  0EFC               	movlw	252
  9216  00221C  160B               	andwf	memset@n^0,f,c
  9217  00221E  0EFF               	movlw	255
  9218  002220  160C               	andwf	(memset@n+1)^0,f,c
  9219  002222  EF1E  F011         	goto	l3427
  9220  002226                     l3421:
  9221  002226  C011  FFD9         	movff	memset@s,fsr2l
  9222  00222A  C012  FFDA         	movff	memset@s+1,fsr2h
  9223  00222E  C009  FFDF         	movff	memset@c,indf2
  9224  002232  060B               	decf	memset@n^0,f,c
  9225  002234  A0D8               	btfss	status,0,c
  9226  002236  060C               	decf	(memset@n+1)^0,f,c
  9227  002238  4A11               	infsnz	memset@s^0,f,c
  9228  00223A  2A12               	incf	(memset@s+1)^0,f,c
  9229  00223C                     l3427:
  9230  00223C  500B               	movf	memset@n^0,w,c
  9231  00223E  100C               	iorwf	(memset@n+1)^0,w,c
  9232  002240  A4D8               	btfss	status,2,c
  9233  002242  EF25  F011         	goto	u2861
  9234  002246  EF27  F011         	goto	u2860
  9235  00224A                     u2861:
  9236  00224A  EF13  F011         	goto	l3421
  9237  00224E                     u2860:
  9238  00224E                     l1127:
  9239  00224E  0012               	return		;funcret
  9240  002250                     __end_of_memset:
  9241                           	callstack 0
  9242                           
  9243 ;; *************** function _Lcd_Out *****************
  9244 ;; Defined at:
  9245 ;;		line 95 in file "flex_lcd.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  y               1    wreg     unsigned char 
  9248 ;;  x               1    9[COMRAM] unsigned char 
  9249 ;;  buffer          2   10[COMRAM] PTR const char 
  9250 ;;		 -> STR_10(13), STR_9(17), STR_8(12), STR_6(14), 
  9251 ;;		 -> STR_4(6), STR_3(12), puerto(16), datos.display(16), 
  9252 ;;		 -> datos(25), 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  y               1   14[COMRAM] unsigned char 
  9255 ;;  data            1   15[COMRAM] unsigned char 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9265 ;;      Params:         3       0       0       0       0       0       0       0       0
  9266 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9267 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9268 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9269 ;;Total ram usage:        7 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:    3
  9272 ;; This function calls:
  9273 ;;		_Lcd_Chr_CP
  9274 ;;		_Lcd_Cmd
  9275 ;; This function is called by:
  9276 ;;		_appADC
  9277 ;;		_appBat
  9278 ;;		_appLCD_Init
  9279 ;;		_appElemts
  9280 ;;		_appSubGetData
  9281 ;;		_warning
  9282 ;;		_confirmacion
  9283 ;;		_readUART
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           	psect	text55
  9288  002A72                     __ptext55:
  9289                           	callstack 0
  9290  002A72                     _Lcd_Out:
  9291                           	callstack 26
  9292                           
  9293                           ;incstack = 0
  9294                           ;Lcd_Out@y stored from wreg
  9295  002A72  6E0F               	movwf	Lcd_Out@y^0,c
  9296  002A74                     
  9297                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  9298  002A74  EF50  F015         	goto	l3453
  9299  002A78                     l3443:
  9300                           
  9301                           ;flex_lcd.c: 101:             data = 128 + x;
  9302  002A78  500A               	movf	Lcd_Out@x^0,w,c
  9303  002A7A  0F80               	addlw	128
  9304  002A7C  6E10               	movwf	Lcd_Out@data^0,c
  9305                           
  9306                           ;flex_lcd.c: 102:             break;
  9307  002A7E  EF6D  F015         	goto	l3455
  9308  002A82                     l3445:
  9309                           
  9310                           ;flex_lcd.c: 104:             data = 192 + x;
  9311  002A82  500A               	movf	Lcd_Out@x^0,w,c
  9312  002A84  0FC0               	addlw	192
  9313  002A86  6E10               	movwf	Lcd_Out@data^0,c
  9314                           
  9315                           ;flex_lcd.c: 105:             break;
  9316  002A88  EF6D  F015         	goto	l3455
  9317  002A8C                     l3447:
  9318                           
  9319                           ;flex_lcd.c: 107:             data = 148 + x;
  9320  002A8C  500A               	movf	Lcd_Out@x^0,w,c
  9321  002A8E  0F94               	addlw	148
  9322  002A90  6E10               	movwf	Lcd_Out@data^0,c
  9323                           
  9324                           ;flex_lcd.c: 108:             break;
  9325  002A92  EF6D  F015         	goto	l3455
  9326  002A96                     l3449:
  9327                           
  9328                           ;flex_lcd.c: 110:             data = 212 + x;
  9329  002A96  500A               	movf	Lcd_Out@x^0,w,c
  9330  002A98  0FD4               	addlw	212
  9331  002A9A  6E10               	movwf	Lcd_Out@data^0,c
  9332                           
  9333                           ;flex_lcd.c: 111:             break;
  9334  002A9C  EF6D  F015         	goto	l3455
  9335  002AA0                     l3453:
  9336  002AA0  500F               	movf	Lcd_Out@y^0,w,c
  9337  002AA2  6E0D               	movwf	??_Lcd_Out^0,c
  9338  002AA4  6A0E               	clrf	(??_Lcd_Out+1)^0,c
  9339                           
  9340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9341                           ; Switch size 1, requested type "simple"
  9342                           ; Number of cases is 1, Range of values is 0 to 0
  9343                           ; switch strategies available:
  9344                           ; Name         Instructions Cycles
  9345                           ; simple_byte            4     3 (average)
  9346                           ;	Chosen strategy is simple_byte
  9347  002AA6  500E               	movf	(??_Lcd_Out+1)^0,w,c
  9348  002AA8  0A00               	xorlw	0	; case 0
  9349  002AAA  B4D8               	btfsc	status,2,c
  9350  002AAC  EF5A  F015         	goto	l5029
  9351  002AB0  EF6D  F015         	goto	l3455
  9352  002AB4                     l5029:
  9353                           
  9354                           ; Switch size 1, requested type "simple"
  9355                           ; Number of cases is 4, Range of values is 1 to 4
  9356                           ; switch strategies available:
  9357                           ; Name         Instructions Cycles
  9358                           ; simple_byte           13     7 (average)
  9359                           ;	Chosen strategy is simple_byte
  9360  002AB4  500D               	movf	??_Lcd_Out^0,w,c
  9361  002AB6  0A01               	xorlw	1	; case 1
  9362  002AB8  B4D8               	btfsc	status,2,c
  9363  002ABA  EF3C  F015         	goto	l3443
  9364  002ABE  0A03               	xorlw	3	; case 2
  9365  002AC0  B4D8               	btfsc	status,2,c
  9366  002AC2  EF41  F015         	goto	l3445
  9367  002AC6  0A01               	xorlw	1	; case 3
  9368  002AC8  B4D8               	btfsc	status,2,c
  9369  002ACA  EF46  F015         	goto	l3447
  9370  002ACE  0A07               	xorlw	7	; case 4
  9371  002AD0  B4D8               	btfsc	status,2,c
  9372  002AD2  EF4B  F015         	goto	l3449
  9373  002AD6  EF6D  F015         	goto	l3455
  9374  002ADA                     l3455:
  9375                           
  9376                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  9377  002ADA  5010               	movf	Lcd_Out@data^0,w,c
  9378  002ADC  EC81  F012         	call	_Lcd_Cmd
  9379                           
  9380                           ;flex_lcd.c: 116:     while(*buffer)
  9381  002AE0  EF86  F015         	goto	l3461
  9382  002AE4                     l3457:
  9383                           
  9384                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  9385  002AE4  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9386  002AE8  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9387  002AEC  6AF8               	clrf	tblptru,c
  9388  002AEE  0E07               	movlw	(high __ramtop+-1)
  9389  002AF0  64F7               	cpfsgt	tblptrh,c
  9390  002AF2  D003               	bra	u2877
  9391  002AF4  0008               	tblrd		*
  9392  002AF6  50F5               	movf	tablat,w,c
  9393  002AF8  D005               	bra	u2870
  9394  002AFA                     u2877:
  9395  002AFA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9396  002AFE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9397  002B02  50E7               	movf	indf1,w,c
  9398  002B04                     u2870:
  9399  002B04  ECDA  F011         	call	_Lcd_Chr_CP
  9400  002B08                     
  9401                           ;flex_lcd.c: 119:         buffer++;
  9402  002B08  4A0B               	infsnz	Lcd_Out@buffer^0,f,c
  9403  002B0A  2A0C               	incf	(Lcd_Out@buffer+1)^0,f,c
  9404  002B0C                     l3461:
  9405                           
  9406                           ;flex_lcd.c: 116:     while(*buffer)
  9407  002B0C  C00B  FFF6         	movff	Lcd_Out@buffer,tblptrl
  9408  002B10  C00C  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  9409  002B14  6AF8               	clrf	tblptru,c
  9410  002B16  0E07               	movlw	(high __ramtop+-1)
  9411  002B18  64F7               	cpfsgt	tblptrh,c
  9412  002B1A  D003               	bra	u2887
  9413  002B1C  0008               	tblrd		*
  9414  002B1E  50F5               	movf	tablat,w,c
  9415  002B20  D005               	bra	u2880
  9416  002B22                     u2887:
  9417  002B22  CFF6 FFE1          	movff	tblptrl,fsr1l
  9418  002B26  CFF7 FFE2          	movff	tblptrh,fsr1h
  9419  002B2A  50E7               	movf	indf1,w,c
  9420  002B2C                     u2880:
  9421  002B2C  0900               	iorlw	0
  9422  002B2E  A4D8               	btfss	status,2,c
  9423  002B30  EF9C  F015         	goto	u2891
  9424  002B34  EF9E  F015         	goto	u2890
  9425  002B38                     u2891:
  9426  002B38  EF72  F015         	goto	l3457
  9427  002B3C                     u2890:
  9428  002B3C  0012               	return		;funcret
  9429  002B3E                     __end_of_Lcd_Out:
  9430                           	callstack 0
  9431                           
  9432 ;; *************** function _Lcd_Cmd *****************
  9433 ;; Defined at:
  9434 ;;		line 175 in file "flex_lcd.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  data            1    wreg     unsigned char 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;  data            1    8[COMRAM] unsigned char 
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      void 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9448 ;;      Params:         0       0       0       0       0       0       0       0       0
  9449 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9450 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9451 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9452 ;;Total ram usage:        3 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    2
  9455 ;; This function calls:
  9456 ;;		Nothing
  9457 ;; This function is called by:
  9458 ;;		_Lcd_Init
  9459 ;;		_Lcd_Out
  9460 ;;		_appLCD_Init
  9461 ;;		_appGetElements
  9462 ;;		_warning
  9463 ;;		_confirmacion
  9464 ;;		_readUART
  9465 ;;		_Lcd_Out2
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           	psect	text56
  9470  002502                     __ptext56:
  9471                           	callstack 0
  9472  002502                     _Lcd_Cmd:
  9473                           	callstack 26
  9474                           
  9475                           ;incstack = 0
  9476                           ;Lcd_Cmd@data stored from wreg
  9477  002502  6E09               	movwf	Lcd_Cmd@data^0,c
  9478  002504                     
  9479                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  9480  002504  968C               	bcf	140,3,c	;volatile
  9481  002506  948C               	bcf	140,2,c	;volatile
  9482  002508                     
  9483                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9484  002508  6A07               	clrf	??_Lcd_Cmd^0,c
  9485  00250A  AE09               	btfss	Lcd_Cmd@data^0,7,c
  9486  00250C  D001               	bra	u2675
  9487  00250E  2A07               	incf	??_Lcd_Cmd^0,f,c
  9488  002510                     u2675:
  9489  002510  0E01               	movlw	1
  9490  002512  1607               	andwf	??_Lcd_Cmd^0,f,c
  9491  002514  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9492  002516  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9493  002518  508C               	movf	140,w,c	;volatile
  9494  00251A  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9495  00251C  0B7F               	andlw	-129
  9496  00251E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9497  002520  6E8C               	movwf	140,c	;volatile
  9498                           
  9499                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9500  002522  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9501  002526  0E06               	movlw	6
  9502  002528  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9503  00252A                     u2685:
  9504  00252A  90D8               	bcf	status,0,c
  9505  00252C  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9506  00252E  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9507  002530  EF95  F012         	goto	u2685
  9508  002534  0E01               	movlw	1
  9509  002536  1607               	andwf	??_Lcd_Cmd^0,f,c
  9510  002538  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9511  00253A  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9512  00253C  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9513  00253E  508C               	movf	140,w,c	;volatile
  9514  002540  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9515  002542  0BBF               	andlw	-65
  9516  002544  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9517  002546  6E8C               	movwf	140,c	;volatile
  9518                           
  9519                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9520  002548  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9521  00254C  0E05               	movlw	5
  9522  00254E  6E08               	movwf	(??_Lcd_Cmd+1)^0,c
  9523  002550                     u2695:
  9524  002550  90D8               	bcf	status,0,c
  9525  002552  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9526  002554  2E08               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  9527  002556  EFA8  F012         	goto	u2695
  9528  00255A  0E01               	movlw	1
  9529  00255C  1607               	andwf	??_Lcd_Cmd^0,f,c
  9530  00255E  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9531  002560  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9532  002562  508C               	movf	140,w,c	;volatile
  9533  002564  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9534  002566  0BDF               	andlw	-33
  9535  002568  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9536  00256A  6E8C               	movwf	140,c	;volatile
  9537                           
  9538                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9539  00256C  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9540  002570  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9541  002572  0E0F               	movlw	15
  9542  002574  1607               	andwf	??_Lcd_Cmd^0,f,c
  9543  002576  0E01               	movlw	1
  9544  002578  1607               	andwf	??_Lcd_Cmd^0,f,c
  9545  00257A  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9546  00257C  508C               	movf	140,w,c	;volatile
  9547  00257E  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9548  002580  0BEF               	andlw	-17
  9549  002582  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9550  002584  6E8C               	movwf	140,c	;volatile
  9551  002586                     
  9552                           ;flex_lcd.c: 182:     _delay(10);
  9553  002586  0E03               	movlw	3
  9554  002588                     u4657:
  9555  002588  2EE8               	decfsz	wreg,f,c
  9556  00258A  D7FE               	bra	u4657
  9557  00258C  F000               	nop	
  9558  00258E                     
  9559                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  9560  00258E  868C               	bsf	140,3,c	;volatile
  9561  002590                     
  9562                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9563  002590  0E05               	movlw	5
  9564  002592                     u4667:
  9565  002592  2EE8               	decfsz	wreg,f,c
  9566  002594  D7FE               	bra	u4667
  9567  002596                     
  9568                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  9569  002596  968C               	bcf	140,3,c	;volatile
  9570                           
  9571                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9572  002598  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9573  00259C  90D8               	bcf	status,0,c
  9574  00259E  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9575  0025A0  90D8               	bcf	status,0,c
  9576  0025A2  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9577  0025A4  90D8               	bcf	status,0,c
  9578  0025A6  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9579  0025A8  0E01               	movlw	1
  9580  0025AA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9581  0025AC  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9582  0025AE  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9583  0025B0  508C               	movf	140,w,c	;volatile
  9584  0025B2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9585  0025B4  0B7F               	andlw	-129
  9586  0025B6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9587  0025B8  6E8C               	movwf	140,c	;volatile
  9588                           
  9589                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9590  0025BA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9591  0025BE  90D8               	bcf	status,0,c
  9592  0025C0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9593  0025C2  90D8               	bcf	status,0,c
  9594  0025C4  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9595  0025C6  0E01               	movlw	1
  9596  0025C8  1607               	andwf	??_Lcd_Cmd^0,f,c
  9597  0025CA  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9598  0025CC  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9599  0025CE  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9600  0025D0  508C               	movf	140,w,c	;volatile
  9601  0025D2  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9602  0025D4  0BBF               	andlw	-65
  9603  0025D6  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9604  0025D8  6E8C               	movwf	140,c	;volatile
  9605                           
  9606                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9607  0025DA  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9608  0025DE  90D8               	bcf	status,0,c
  9609  0025E0  3207               	rrcf	??_Lcd_Cmd^0,f,c
  9610  0025E2  0E01               	movlw	1
  9611  0025E4  1607               	andwf	??_Lcd_Cmd^0,f,c
  9612  0025E6  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9613  0025E8  4607               	rlncf	??_Lcd_Cmd^0,f,c
  9614  0025EA  508C               	movf	140,w,c	;volatile
  9615  0025EC  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9616  0025EE  0BDF               	andlw	-33
  9617  0025F0  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9618  0025F2  6E8C               	movwf	140,c	;volatile
  9619                           
  9620                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  9621  0025F4  C009  F007         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  9622  0025F8  0E01               	movlw	1
  9623  0025FA  1607               	andwf	??_Lcd_Cmd^0,f,c
  9624  0025FC  3A07               	swapf	??_Lcd_Cmd^0,f,c
  9625  0025FE  508C               	movf	140,w,c	;volatile
  9626  002600  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9627  002602  0BEF               	andlw	-17
  9628  002604  1807               	xorwf	??_Lcd_Cmd^0,w,c
  9629  002606  6E8C               	movwf	140,c	;volatile
  9630  002608                     
  9631                           ;flex_lcd.c: 190:     _delay(10);
  9632  002608  0E03               	movlw	3
  9633  00260A                     u4677:
  9634  00260A  2EE8               	decfsz	wreg,f,c
  9635  00260C  D7FE               	bra	u4677
  9636  00260E  F000               	nop	
  9637  002610                     
  9638                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  9639  002610  868C               	bsf	140,3,c	;volatile
  9640  002612                     
  9641                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9642  002612  0E05               	movlw	5
  9643  002614                     u4687:
  9644  002614  2EE8               	decfsz	wreg,f,c
  9645  002616  D7FE               	bra	u4687
  9646  002618                     
  9647                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  9648  002618  968C               	bcf	140,3,c	;volatile
  9649  00261A                     
  9650                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9651  00261A  0E16               	movlw	22
  9652  00261C  6E07               	movwf	??_Lcd_Cmd^0,c
  9653  00261E  0E6C               	movlw	108
  9654  002620                     u4697:
  9655  002620  2EE8               	decfsz	wreg,f,c
  9656  002622  D7FE               	bra	u4697
  9657  002624  2E07               	decfsz	??_Lcd_Cmd^0,f,c
  9658  002626  D7FC               	bra	u4697
  9659  002628  D000               	nop2	
  9660  00262A  0012               	return		;funcret
  9661  00262C                     __end_of_Lcd_Cmd:
  9662                           	callstack 0
  9663                           
  9664 ;; *************** function _Lcd_Chr_CP *****************
  9665 ;; Defined at:
  9666 ;;		line 151 in file "flex_lcd.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;  data            1    wreg     char 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  data            1    8[COMRAM] char 
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, status,2, status,0
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9680 ;;      Params:         0       0       0       0       0       0       0       0       0
  9681 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9682 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9683 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9684 ;;Total ram usage:        3 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:    2
  9687 ;; This function calls:
  9688 ;;		Nothing
  9689 ;; This function is called by:
  9690 ;;		_Lcd_Out
  9691 ;;		_Lcd_Out2
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text57
  9696  0023B4                     __ptext57:
  9697                           	callstack 0
  9698  0023B4                     _Lcd_Chr_CP:
  9699                           	callstack 26
  9700                           
  9701                           ;incstack = 0
  9702                           ;Lcd_Chr_CP@data stored from wreg
  9703  0023B4  6E09               	movwf	Lcd_Chr_CP@data^0,c
  9704  0023B6                     
  9705                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  9706  0023B6  968C               	bcf	140,3,c	;volatile
  9707                           
  9708                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  9709  0023B8  848C               	bsf	140,2,c	;volatile
  9710  0023BA                     
  9711                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  9712  0023BA  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9713  0023BE  0E07               	movlw	7
  9714  0023C0  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9715  0023C2                     u2705:
  9716  0023C2  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9717  0023C4  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9718  0023C6  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9719  0023C8  EFE1  F011         	goto	u2705
  9720  0023CC  0E01               	movlw	1
  9721  0023CE  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9722  0023D0  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9723  0023D2  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9724  0023D4  508C               	movf	140,w,c	;volatile
  9725  0023D6  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9726  0023D8  0B7F               	andlw	-129
  9727  0023DA  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9728  0023DC  6E8C               	movwf	140,c	;volatile
  9729                           
  9730                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  9731  0023DE  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9732  0023E2  0E06               	movlw	6
  9733  0023E4  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9734  0023E6                     u2715:
  9735  0023E6  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9736  0023E8  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9737  0023EA  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9738  0023EC  EFF3  F011         	goto	u2715
  9739  0023F0  0E01               	movlw	1
  9740  0023F2  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9741  0023F4  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9742  0023F6  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9743  0023F8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9744  0023FA  508C               	movf	140,w,c	;volatile
  9745  0023FC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9746  0023FE  0BBF               	andlw	-65
  9747  002400  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9748  002402  6E8C               	movwf	140,c	;volatile
  9749                           
  9750                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  9751  002404  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9752  002408  0E05               	movlw	5
  9753  00240A  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9754  00240C                     u2725:
  9755  00240C  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9756  00240E  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9757  002410  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9758  002412  EF06  F012         	goto	u2725
  9759  002416  0E01               	movlw	1
  9760  002418  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9761  00241A  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9762  00241C  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9763  00241E  508C               	movf	140,w,c	;volatile
  9764  002420  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9765  002422  0BDF               	andlw	-33
  9766  002424  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9767  002426  6E8C               	movwf	140,c	;volatile
  9768                           
  9769                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  9770  002428  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9771  00242C  0E04               	movlw	4
  9772  00242E  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9773  002430                     u2735:
  9774  002430  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9775  002432  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9776  002434  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9777  002436  EF18  F012         	goto	u2735
  9778  00243A  0E01               	movlw	1
  9779  00243C  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9780  00243E  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9781  002440  508C               	movf	140,w,c	;volatile
  9782  002442  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9783  002444  0BEF               	andlw	-17
  9784  002446  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9785  002448  6E8C               	movwf	140,c	;volatile
  9786  00244A                     
  9787                           ;flex_lcd.c: 159:     _delay(10);
  9788  00244A  0E03               	movlw	3
  9789  00244C                     u4707:
  9790  00244C  2EE8               	decfsz	wreg,f,c
  9791  00244E  D7FE               	bra	u4707
  9792  002450  F000               	nop	
  9793  002452                     
  9794                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  9795  002452  868C               	bsf	140,3,c	;volatile
  9796  002454                     
  9797                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9798  002454  0E05               	movlw	5
  9799  002456                     u4717:
  9800  002456  2EE8               	decfsz	wreg,f,c
  9801  002458  D7FE               	bra	u4717
  9802  00245A                     
  9803                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  9804  00245A  968C               	bcf	140,3,c	;volatile
  9805                           
  9806                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  9807  00245C  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9808  002460  0E03               	movlw	3
  9809  002462  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9810  002464                     u2745:
  9811  002464  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9812  002466  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9813  002468  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9814  00246A  EF32  F012         	goto	u2745
  9815  00246E  0E01               	movlw	1
  9816  002470  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9817  002472  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9818  002474  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9819  002476  508C               	movf	140,w,c	;volatile
  9820  002478  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9821  00247A  0B7F               	andlw	-129
  9822  00247C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9823  00247E  6E8C               	movwf	140,c	;volatile
  9824                           
  9825                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  9826  002480  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9827  002484  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9828  002486  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9829  002488  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9830  00248A  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9831  00248C  0E01               	movlw	1
  9832  00248E  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9833  002490  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9834  002492  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9835  002494  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9836  002496  508C               	movf	140,w,c	;volatile
  9837  002498  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9838  00249A  0BBF               	andlw	-65
  9839  00249C  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9840  00249E  6E8C               	movwf	140,c	;volatile
  9841                           
  9842                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  9843  0024A0  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9844  0024A4  0E01               	movlw	1
  9845  0024A6  6E08               	movwf	(??_Lcd_Chr_CP+1)^0,c
  9846  0024A8                     u2755:
  9847  0024A8  3407               	rlcf	??_Lcd_Chr_CP^0,w,c
  9848  0024AA  3207               	rrcf	??_Lcd_Chr_CP^0,f,c
  9849  0024AC  2E08               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  9850  0024AE  EF54  F012         	goto	u2755
  9851  0024B2  0E01               	movlw	1
  9852  0024B4  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9853  0024B6  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9854  0024B8  4607               	rlncf	??_Lcd_Chr_CP^0,f,c
  9855  0024BA  508C               	movf	140,w,c	;volatile
  9856  0024BC  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9857  0024BE  0BDF               	andlw	-33
  9858  0024C0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9859  0024C2  6E8C               	movwf	140,c	;volatile
  9860                           
  9861                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  9862  0024C4  C009  F007         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  9863  0024C8  0E01               	movlw	1
  9864  0024CA  1607               	andwf	??_Lcd_Chr_CP^0,f,c
  9865  0024CC  3A07               	swapf	??_Lcd_Chr_CP^0,f,c
  9866  0024CE  508C               	movf	140,w,c	;volatile
  9867  0024D0  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9868  0024D2  0BEF               	andlw	-17
  9869  0024D4  1807               	xorwf	??_Lcd_Chr_CP^0,w,c
  9870  0024D6  6E8C               	movwf	140,c	;volatile
  9871  0024D8                     
  9872                           ;flex_lcd.c: 167:     _delay(10);
  9873  0024D8  0E03               	movlw	3
  9874  0024DA                     u4727:
  9875  0024DA  2EE8               	decfsz	wreg,f,c
  9876  0024DC  D7FE               	bra	u4727
  9877  0024DE  F000               	nop	
  9878  0024E0                     
  9879                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  9880  0024E0  868C               	bsf	140,3,c	;volatile
  9881  0024E2                     
  9882                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9883  0024E2  0E05               	movlw	5
  9884  0024E4                     u4737:
  9885  0024E4  2EE8               	decfsz	wreg,f,c
  9886  0024E6  D7FE               	bra	u4737
  9887  0024E8                     
  9888                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  9889  0024E8  968C               	bcf	140,3,c	;volatile
  9890  0024EA                     
  9891                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  9892  0024EA  0E05               	movlw	5
  9893  0024EC                     u4747:
  9894  0024EC  2EE8               	decfsz	wreg,f,c
  9895  0024EE  D7FE               	bra	u4747
  9896  0024F0                     
  9897                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  9898  0024F0  0E16               	movlw	22
  9899  0024F2  6E07               	movwf	??_Lcd_Chr_CP^0,c
  9900  0024F4  0E6C               	movlw	108
  9901  0024F6                     u4757:
  9902  0024F6  2EE8               	decfsz	wreg,f,c
  9903  0024F8  D7FE               	bra	u4757
  9904  0024FA  2E07               	decfsz	??_Lcd_Chr_CP^0,f,c
  9905  0024FC  D7FC               	bra	u4757
  9906  0024FE  D000               	nop2	
  9907  002500  0012               	return		;funcret
  9908  002502                     __end_of_Lcd_Chr_CP:
  9909                           	callstack 0
  9910                           
  9911 ;; *************** function _isrL *****************
  9912 ;; Defined at:
  9913 ;;		line 31 in file "main.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, status,2, status,0
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9929 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9930 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9931 ;;Total ram usage:        3 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    1
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		Interrupt level 1
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	intcodelo
  9942  000018                     __pintcodelo:
  9943                           	callstack 0
  9944  000018                     _isrL:
  9945                           	callstack 19
  9946                           
  9947                           ;incstack = 0
  9948  000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9949  00001A  CFD8 F004          	movff	status,??_isrL
  9950  00001E  CFE8 F005          	movff	wreg,??_isrL+1
  9951  000022  CFE0 F006          	movff	bsr,??_isrL+2
  9952  000026                     
  9953                           ;main.c: 33:     if(TMR3IE && TMR3IF)
  9954  000026  A2A0               	btfss	4000,1,c	;volatile
  9955  000028  EF18  F000         	goto	i1u435_21
  9956  00002C  EF1A  F000         	goto	i1u435_20
  9957  000030                     i1u435_21:
  9958  000030  EF56  F000         	goto	i1l99
  9959  000034                     i1u435_20:
  9960  000034  A2A1               	btfss	4001,1,c	;volatile
  9961  000036  EF1F  F000         	goto	i1u436_21
  9962  00003A  EF21  F000         	goto	i1u436_20
  9963  00003E                     i1u436_21:
  9964  00003E  EF56  F000         	goto	i1l99
  9965  000042                     i1u436_20:
  9966  000042                     
  9967                           ;main.c: 34:     {;main.c: 35:         TMR3IF = 0;
  9968  000042  92A1               	bcf	4001,1,c	;volatile
  9969  000044                     
  9970                           ;main.c: 36:         datos.counter++;
  9971  000044  0100               	movlb	0	; () banked
  9972  000046  2BC0               	incf	_datos& (0+255),f,b
  9973  000048                     
  9974                           ; BSR set to: 0
  9975                           ;main.c: 37:         if((datos.counter == 5) && (datos.state == 0 || datos.state == 2))
  9976  000048  0E05               	movlw	5
  9977  00004A  19C0               	xorwf	_datos& (0+255),w,b
  9978  00004C  A4D8               	btfss	status,2,c
  9979  00004E  EF2B  F000         	goto	i1u437_21
  9980  000052  EF2D  F000         	goto	i1u437_20
  9981  000056                     i1u437_21:
  9982  000056  EF46  F000         	goto	i1l4861
  9983  00005A                     i1u437_20:
  9984  00005A                     
  9985                           ; BSR set to: 0
  9986  00005A  51C3               	movf	(_datos+3)& (0+255),w,b
  9987  00005C  B4D8               	btfsc	status,2,c
  9988  00005E  EF33  F000         	goto	i1u438_21
  9989  000062  EF35  F000         	goto	i1u438_20
  9990  000066                     i1u438_21:
  9991  000066  EF3E  F000         	goto	i1l4857
  9992  00006A                     i1u438_20:
  9993  00006A                     
  9994                           ; BSR set to: 0
  9995  00006A  0E02               	movlw	2
  9996  00006C  19C3               	xorwf	(_datos+3)& (0+255),w,b
  9997  00006E  A4D8               	btfss	status,2,c
  9998  000070  EF3C  F000         	goto	i1u439_21
  9999  000074  EF3E  F000         	goto	i1u439_20
 10000  000078                     i1u439_21:
 10001  000078  EF46  F000         	goto	i1l4861
 10002  00007C                     i1u439_20:
 10003  00007C                     i1l4857:
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;main.c: 38:         {;main.c: 39:             datos.counter = 0;
 10007  00007C  0E00               	movlw	0
 10008  00007E  6FC0               	movwf	_datos& (0+255),b
 10009  000080                     
 10010                           ; BSR set to: 0
 10011                           ;main.c: 40:             datos.nextFunc = appStateRecolectData;
 10012  000080  0EDA               	movlw	low _appStateRecolectData
 10013  000082  6FD7               	movwf	(_datos+23)& (0+255),b
 10014  000084  0E30               	movlw	high _appStateRecolectData
 10015  000086  6FD8               	movwf	(_datos+24)& (0+255),b
 10016                           
 10017                           ;main.c: 41:         }
 10018  000088  EF52  F000         	goto	i1l4865
 10019  00008C                     i1l4861:
 10020                           
 10021                           ; BSR set to: 0
 10022  00008C  05C3               	decf	(_datos+3)& (0+255),w,b
 10023  00008E  A4D8               	btfss	status,2,c
 10024  000090  EF4C  F000         	goto	i1u440_21
 10025  000094  EF4E  F000         	goto	i1u440_20
 10026  000098                     i1u440_21:
 10027  000098  EF52  F000         	goto	i1l4865
 10028  00009C                     i1u440_20:
 10029  00009C                     
 10030                           ; BSR set to: 0
 10031                           ;main.c: 43:         {;main.c: 44:             datos.nextFunc = appGetElements;
 10032  00009C  0EF0               	movlw	low _appGetElements
 10033  00009E  6FD7               	movwf	(_datos+23)& (0+255),b
 10034  0000A0  0E31               	movlw	high _appGetElements
 10035  0000A2  6FD8               	movwf	(_datos+24)& (0+255),b
 10036  0000A4                     i1l4865:
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;main.c: 46:         TMR3 = 20536;
 10040  0000A4  0E50               	movlw	80
 10041  0000A6  6EB3               	movwf	179,c	;volatile
 10042  0000A8  0E38               	movlw	56
 10043  0000AA  6EB2               	movwf	178,c	;volatile
 10044  0000AC                     i1l99:
 10045  0000AC  C006  FFE0         	movff	??_isrL+2,bsr
 10046  0000B0  C005  FFE8         	movff	??_isrL+1,wreg
 10047  0000B4  C004  FFD8         	movff	??_isrL,status
 10048  0000B8  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10049  0000BA  0010               	retfie	
 10050  0000BC                     __end_of_isrL:
 10051                           	callstack 0
 10052                           
 10053 ;; *************** function _isrH *****************
 10054 ;; Defined at:
 10055 ;;		line 49 in file "main.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;		None
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10069 ;;      Params:         0       0       0       0       0       0       0       0       0
 10070 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10071 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10072 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10073 ;;Total ram usage:        3 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; This function calls:
 10076 ;;		Nothing
 10077 ;; This function is called by:
 10078 ;;		Interrupt level 2
 10079 ;; This function uses a non-reentrant model
 10080 ;;
 10081                           
 10082                           	psect	intcode
 10083  000008                     __pintcode:
 10084                           	callstack 0
 10085  000008                     _isrH:
 10086                           	callstack 19
 10087                           
 10088                           ;incstack = 0
 10089  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10090  00000A  EDCC  F017         	call	int_func,f	;refresh shadow registers
 10091  00000E                     
 10092                           	psect	intcode_body
 10093  002F98                     __pintcode_body:
 10094                           	callstack 19
 10095  002F98                     int_func:
 10096                           	callstack 19
 10097  002F98  0006               	pop		; remove dummy address from shadow register refresh
 10098  002F9A  CFD9 F002          	movff	fsr2l,??_isrH+1
 10099  002F9E  CFDA F003          	movff	fsr2h,??_isrH+2
 10100  002FA2                     
 10101                           ;main.c: 51:     static uint8_t counter = 0;;main.c: 52:     if(TMR0IE && TMR0IF)
 10102  002FA2  AAF2               	btfss	4082,5,c	;volatile
 10103  002FA4  EFD6  F017         	goto	i2u441_41
 10104  002FA8  EFD8  F017         	goto	i2u441_40
 10105  002FAC                     i2u441_41:
 10106  002FAC  EFE7  F017         	goto	i2l4877
 10107  002FB0                     i2u441_40:
 10108  002FB0  A4F2               	btfss	4082,2,c	;volatile
 10109  002FB2  EFDD  F017         	goto	i2u442_41
 10110  002FB6  EFDF  F017         	goto	i2u442_40
 10111  002FBA                     i2u442_41:
 10112  002FBA  EFE7  F017         	goto	i2l4877
 10113  002FBE                     i2u442_40:
 10114  002FBE                     
 10115                           ;main.c: 53:     {;main.c: 54:         TMR0IF = 0;
 10116  002FBE  94F2               	bcf	4082,2,c	;volatile
 10117  002FC0                     
 10118                           ;main.c: 55:         datos.state = 10;
 10119  002FC0  0E0A               	movlw	10
 10120  002FC2  0100               	movlb	0	; () banked
 10121  002FC4  6FC3               	movwf	(_datos+3)& (0+255),b
 10122  002FC6                     
 10123                           ; BSR set to: 0
 10124                           ;main.c: 56:         datos.nextFunc = warning;
 10125  002FC6  0E60               	movlw	low _warning
 10126  002FC8  6FD7               	movwf	(_datos+23)& (0+255),b
 10127  002FCA  0E32               	movlw	high _warning
 10128  002FCC  6FD8               	movwf	(_datos+24)& (0+255),b
 10129  002FCE                     i2l4877:
 10130                           
 10131                           ;main.c: 58:     if(RCIF && RCIE)
 10132  002FCE  AA9E               	btfss	3998,5,c	;volatile
 10133  002FD0  EFEC  F017         	goto	i2u443_41
 10134  002FD4  EFEE  F017         	goto	i2u443_40
 10135  002FD8                     i2u443_41:
 10136  002FD8  EF18  F018         	goto	i2l110
 10137  002FDC                     i2u443_40:
 10138  002FDC  AA9D               	btfss	3997,5,c	;volatile
 10139  002FDE  EFF3  F017         	goto	i2u444_41
 10140  002FE2  EFF5  F017         	goto	i2u444_40
 10141  002FE6                     i2u444_41:
 10142  002FE6  EF18  F018         	goto	i2l110
 10143  002FEA                     i2u444_40:
 10144  002FEA                     
 10145                           ;main.c: 59:     {;main.c: 60:         puerto[counter] = RCREG;
 10146  002FEA  0E84               	movlw	low _puerto
 10147  002FEC  2457               	addwf	isrH@counter^0,w,c
 10148  002FEE  6ED9               	movwf	fsr2l,c
 10149  002FF0  6ADA               	clrf	fsr2h,c
 10150  002FF2  0E00               	movlw	high _puerto
 10151  002FF4  22DA               	addwfc	fsr2h,f,c
 10152  002FF6  CFAE FFDF          	movff	4014,indf2	;volatile
 10153                           
 10154                           ;main.c: 61:         if(puerto[counter] != '@')
 10155  002FFA  0E84               	movlw	low _puerto
 10156  002FFC  2457               	addwf	isrH@counter^0,w,c
 10157  002FFE  6ED9               	movwf	fsr2l,c
 10158  003000  6ADA               	clrf	fsr2h,c
 10159  003002  0E00               	movlw	high _puerto
 10160  003004  22DA               	addwfc	fsr2h,f,c
 10161  003006  0E40               	movlw	64
 10162  003008  18DE               	xorwf	postinc2,w,c
 10163  00300A  B4D8               	btfsc	status,2,c
 10164  00300C  EF0A  F018         	goto	i2u445_41
 10165  003010  EF0C  F018         	goto	i2u445_40
 10166  003014                     i2u445_41:
 10167  003014  EF0F  F018         	goto	i2l4885
 10168  003018                     i2u445_40:
 10169  003018                     
 10170                           ;main.c: 62:         {;main.c: 63:             counter ++;
 10171  003018  2A57               	incf	isrH@counter^0,f,c
 10172                           
 10173                           ;main.c: 64:         }
 10174  00301A  EF18  F018         	goto	i2l110
 10175  00301E                     i2l4885:
 10176                           
 10177                           ;main.c: 66:         {;main.c: 67:             datos.state = 4;
 10178  00301E  0E04               	movlw	4
 10179  003020  0100               	movlb	0	; () banked
 10180  003022  6FC3               	movwf	(_datos+3)& (0+255),b
 10181  003024                     
 10182                           ; BSR set to: 0
 10183                           ;main.c: 68:             datos.nextFunc = readUART;
 10184  003024  0E2C               	movlw	low _readUART
 10185  003026  6FD7               	movwf	(_datos+23)& (0+255),b
 10186  003028  0E26               	movlw	high _readUART
 10187  00302A  6FD8               	movwf	(_datos+24)& (0+255),b
 10188  00302C                     
 10189                           ; BSR set to: 0
 10190                           ;main.c: 69:             counter = 0;
 10191  00302C  0E00               	movlw	0
 10192  00302E  6E57               	movwf	isrH@counter^0,c
 10193  003030                     i2l110:
 10194  003030  C003  FFDA         	movff	??_isrH+2,fsr2h
 10195  003034  C002  FFD9         	movff	??_isrH+1,fsr2l
 10196  003038  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10197  00303A  0011               	retfie		f
 10198  00303C                     __end_of_isrH:
 10199                           	callstack 0
 10200                           
 10201                           	psect	rparam
 10202  0000                     
 10203                           	psect	temp
 10204  000058                     btemp:
 10205                           	callstack 0
 10206  000058                     	ds	1
 10207  0000                     int$flags	set	btemp
 10208  0000                     wtemp8	set	btemp+1
 10209  0000                     ttemp5	set	btemp+1
 10210  0000                     ttemp6	set	btemp+4
 10211  0000                     ttemp7	set	btemp+8
 10212                           
 10213                           	psect	idloc
 10214                           
 10215                           ;Config register IDLOC0 @ 0x200000
 10216                           ;	unspecified, using default values
 10217  200000                     	org	2097152
 10218  200000  FF                 	db	255
 10219                           
 10220                           ;Config register IDLOC1 @ 0x200001
 10221                           ;	unspecified, using default values
 10222  200001                     	org	2097153
 10223  200001  FF                 	db	255
 10224                           
 10225                           ;Config register IDLOC2 @ 0x200002
 10226                           ;	unspecified, using default values
 10227  200002                     	org	2097154
 10228  200002  FF                 	db	255
 10229                           
 10230                           ;Config register IDLOC3 @ 0x200003
 10231                           ;	unspecified, using default values
 10232  200003                     	org	2097155
 10233  200003  FF                 	db	255
 10234                           
 10235                           ;Config register IDLOC4 @ 0x200004
 10236                           ;	unspecified, using default values
 10237  200004                     	org	2097156
 10238  200004  FF                 	db	255
 10239                           
 10240                           ;Config register IDLOC5 @ 0x200005
 10241                           ;	unspecified, using default values
 10242  200005                     	org	2097157
 10243  200005  FF                 	db	255
 10244                           
 10245                           ;Config register IDLOC6 @ 0x200006
 10246                           ;	unspecified, using default values
 10247  200006                     	org	2097158
 10248  200006  FF                 	db	255
 10249                           
 10250                           ;Config register IDLOC7 @ 0x200007
 10251                           ;	unspecified, using default values
 10252  200007                     	org	2097159
 10253  200007  FF                 	db	255
 10254                           
 10255                           	psect	config
 10256                           
 10257                           ;Config register CONFIG1L @ 0x300000
 10258                           ;	PLL Prescaler Selection bits
 10259                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10260                           ;	System Clock Postscaler Selection bits
 10261                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10262                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10263                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10264  300000                     	org	3145728
 10265  300000  00                 	db	0
 10266                           
 10267                           ;Config register CONFIG1H @ 0x300001
 10268                           ;	Oscillator Selection bits
 10269                           ;	FOSC = HS, HS oscillator (HS)
 10270                           ;	Fail-Safe Clock Monitor Enable bit
 10271                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10272                           ;	Internal/External Oscillator Switchover bit
 10273                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10274  300001                     	org	3145729
 10275  300001  0C                 	db	12
 10276                           
 10277                           ;Config register CONFIG2L @ 0x300002
 10278                           ;	Power-up Timer Enable bit
 10279                           ;	PWRT = OFF, PWRT disabled
 10280                           ;	Brown-out Reset Enable bits
 10281                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10282                           ;	Brown-out Reset Voltage bits
 10283                           ;	BORV = 3, Minimum setting 2.05V
 10284                           ;	USB Voltage Regulator Enable bit
 10285                           ;	VREGEN = OFF, USB voltage regulator disabled
 10286  300002                     	org	3145730
 10287  300002  19                 	db	25
 10288                           
 10289                           ;Config register CONFIG2H @ 0x300003
 10290                           ;	Watchdog Timer Enable bit
 10291                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10292                           ;	Watchdog Timer Postscale Select bits
 10293                           ;	WDTPS = 32768, 1:32768
 10294  300003                     	org	3145731
 10295  300003  1E                 	db	30
 10296                           
 10297                           ; Padding undefined space
 10298  300004                     	org	3145732
 10299  300004  FF                 	db	255
 10300                           
 10301                           ;Config register CONFIG3H @ 0x300005
 10302                           ;	CCP2 MUX bit
 10303                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10304                           ;	PORTB A/D Enable bit
 10305                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10306                           ;	Low-Power Timer 1 Oscillator Enable bit
 10307                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10308                           ;	MCLR Pin Enable bit
 10309                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10310  300005                     	org	3145733
 10311  300005  81                 	db	129
 10312                           
 10313                           ;Config register CONFIG4L @ 0x300006
 10314                           ;	Stack Full/Underflow Reset Enable bit
 10315                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10316                           ;	Single-Supply ICSP Enable bit
 10317                           ;	LVP = OFF, Single-Supply ICSP disabled
 10318                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10319                           ;	ICPRT = OFF, ICPORT disabled
 10320                           ;	Extended Instruction Set Enable bit
 10321                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10322                           ;	Background Debugger Enable bit
 10323                           ;	DEBUG = 0x1, unprogrammed default
 10324  300006                     	org	3145734
 10325  300006  81                 	db	129
 10326                           
 10327                           ; Padding undefined space
 10328  300007                     	org	3145735
 10329  300007  FF                 	db	255
 10330                           
 10331                           ;Config register CONFIG5L @ 0x300008
 10332                           ;	Code Protection bit
 10333                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10334                           ;	Code Protection bit
 10335                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10336                           ;	Code Protection bit
 10337                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10338                           ;	Code Protection bit
 10339                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10340  300008                     	org	3145736
 10341  300008  0F                 	db	15
 10342                           
 10343                           ;Config register CONFIG5H @ 0x300009
 10344                           ;	Boot Block Code Protection bit
 10345                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10346                           ;	Data EEPROM Code Protection bit
 10347                           ;	CPD = OFF, Data EEPROM is not code-protected
 10348  300009                     	org	3145737
 10349  300009  C0                 	db	192
 10350                           
 10351                           ;Config register CONFIG6L @ 0x30000A
 10352                           ;	Write Protection bit
 10353                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10354                           ;	Write Protection bit
 10355                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10356                           ;	Write Protection bit
 10357                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10358                           ;	Write Protection bit
 10359                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10360  30000A                     	org	3145738
 10361  30000A  0F                 	db	15
 10362                           
 10363                           ;Config register CONFIG6H @ 0x30000B
 10364                           ;	Configuration Register Write Protection bit
 10365                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10366                           ;	Boot Block Write Protection bit
 10367                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10368                           ;	Data EEPROM Write Protection bit
 10369                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10370  30000B                     	org	3145739
 10371  30000B  E0                 	db	224
 10372                           
 10373                           ;Config register CONFIG7L @ 0x30000C
 10374                           ;	Table Read Protection bit
 10375                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10376                           ;	Table Read Protection bit
 10377                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10378                           ;	Table Read Protection bit
 10379                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10380                           ;	Table Read Protection bit
 10381                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10382  30000C                     	org	3145740
 10383  30000C  0F                 	db	15
 10384                           
 10385                           ;Config register CONFIG7H @ 0x30000D
 10386                           ;	Boot Block Table Read Protection bit
 10387                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10388  30000D                     	org	3145741
 10389  30000D  40                 	db	64
 10390                           tosu	equ	0xFFF
 10391                           tosh	equ	0xFFE
 10392                           tosl	equ	0xFFD
 10393                           stkptr	equ	0xFFC
 10394                           pclatu	equ	0xFFB
 10395                           pclath	equ	0xFFA
 10396                           pcl	equ	0xFF9
 10397                           tblptru	equ	0xFF8
 10398                           tblptrh	equ	0xFF7
 10399                           tblptrl	equ	0xFF6
 10400                           tablat	equ	0xFF5
 10401                           prodh	equ	0xFF4
 10402                           prodl	equ	0xFF3
 10403                           indf0	equ	0xFEF
 10404                           postinc0	equ	0xFEE
 10405                           postdec0	equ	0xFED
 10406                           preinc0	equ	0xFEC
 10407                           plusw0	equ	0xFEB
 10408                           fsr0h	equ	0xFEA
 10409                           fsr0l	equ	0xFE9
 10410                           wreg	equ	0xFE8
 10411                           indf1	equ	0xFE7
 10412                           postinc1	equ	0xFE6
 10413                           postdec1	equ	0xFE5
 10414                           preinc1	equ	0xFE4
 10415                           plusw1	equ	0xFE3
 10416                           fsr1h	equ	0xFE2
 10417                           fsr1l	equ	0xFE1
 10418                           bsr	equ	0xFE0
 10419                           indf2	equ	0xFDF
 10420                           postinc2	equ	0xFDE
 10421                           postdec2	equ	0xFDD
 10422                           preinc2	equ	0xFDC
 10423                           plusw2	equ	0xFDB
 10424                           fsr2h	equ	0xFDA
 10425                           fsr2l	equ	0xFD9
 10426                           status	equ	0xFD8

Data Sizes:
    Strings     125
    Constant    0
    Data        25
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      87
    BANK0           160     44     121
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    appSubGiveElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), datos.display(BANK0[16]), datos(BANK0[25]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_11(CODE[2]), STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2261_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    memcmp@vr	PTR const void  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@r	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[10]), STR_13(CODE[13]), 

    memcmp@vl	PTR const void  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    memcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> puerto(BANK0[16]), 

    sendData@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    sendData@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_10(CODE[13]), STR_9(CODE[17]), STR_8(CODE[12]), STR_6(CODE[14]), 
		 -> STR_4(CODE[6]), STR_3(CODE[12]), puerto(BANK0[16]), datos.display(BANK0[16]), 
		 -> datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> puerto(BANK0[16]), datos(BANK0[25]), 

    S196_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> sendinformation(), appStateInitial(), readUART(), warning(), 
		 -> appGetElements(), appStateRecolectData(), confirmacion(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _warning->_Lcd_Out
    _sendData->_strlen
    _readUART->_memset
    _confirmacion->_Lcd_Out
    _appBat->___fltol
    _appADC->___fltol
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_setServo
    _appInit->_uart_Init
    _uart_Init->___lldiv
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _appSubGiveElemts->_setServo
    _setServo->_setServoAngle
    _sprintf->___fltol
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _sendinformation->_appBat
    _appStateRecolectData->_appBat
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    ___awmod->___fltol
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  158864
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
                       _confirmacion *
                           _readUART *
                    _sendinformation *
                            _warning *
 ---------------------------------------------------------------------------------
 (1) _warning                                              2     2      0    3591
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
                       _appTimerStop
                           _setServo
 ---------------------------------------------------------------------------------
 (1) _sendinformation                                      0     0      0   67620
                             _appADC
                             _appBat
                          _appElemts
                             _memset
                           _sendData
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendData                                             5     3      2     636
                                             10 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _readUART                                             2     2      0    5561
                                             18 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                             _memcmp
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memcmp                                              11     5      6     637
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _confirmacion                                         2     2      0    2381
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   56115
                             _appADC
                             _appBat
                     _appCounterStop
                          _appElemts
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            2     0      2   14557
                                             36 BANK0      2     0      2
                            _Lcd_Out
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appCounterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   19897
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20451
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                             10 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     817
                                             74 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             49 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     613
                                              2 BANK0      6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0    1736
                           _setServo
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    4460
                            _adcInit
                     _appCounterInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                          _servoInit
                           _setServo
                          _uart_Init
 ---------------------------------------------------------------------------------
 (2) _uart_Init                                            4     0      4     412
                                             19 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              6 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _servoInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2696
                                             16 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              9 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appCounterInit                                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   17400
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                   _appSubGiveElemts
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGiveElemts                                     2     0      2    1286
                                             14 COMRAM     2     0      2
                    _appCounterStart
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _setServo                                             4     2      2    1210
                                             10 COMRAM     4     2      2
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (3) _setServoAngle                                        4     3      1     208
                                              6 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _appCounterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   15938
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    9536
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8324
                                             79 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6    7794
                                             69 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4434
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2785
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1396
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     555
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2543
                                              6 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    2205
                                              9 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appSubGiveElemts
       _appCounterStart
       _setServo
         _setServoAngle
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appCounterInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _servoInit
     _setServo
       _setServoAngle
     _uart_Init
       ___lldiv
   _appStateInitial *
     _setServo
       _setServoAngle
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appCounterStop
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _setServo
       _setServoAngle
   _confirmacion *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
   _readUART *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _memcmp
     _memset
   _sendinformation *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _memset
     _sendData
       _strlen
     _sprintf
       ___awmod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
   _warning *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _appTimerStart
     _appTimerStop
     _setServo
       _setServoAngle

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      57       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D0      20        0.0%
DATA                 0      0      D0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 02 23:51:58 2021

                  fp__readUART 000E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                  ?_confirmacion 0001                             l30 3702  
                           l32 3710                             l33 3718                             l42 1A5E  
                           l27 3586                             l39 1DC0                             bsr 000FE0  
          ___wmul@multiplicand 0009                            l150 2CEA                            l230 386A  
                          l151 2D36                            l152 2D88                            l137 1876  
                          l250 2866                            l234 275E                            l251 286A  
                          l243 2858                            l236 2764                            l260 37E8  
                          l181 2500                            l165 2B3C                            l237 276A  
                          l246 2814                            l430 274E                            l263 388C  
                          l343 3614                            l351 316A                            l184 262A  
                          l440 3838                            l272 38AA                            l248 281A  
                          l424 344E                            l360 325E                            l249 2820  
                          l257 3812                            l370 3880                            l266 38A6  
                          l346 389E                            l434 333C                            l354 35B2  
                          l187 31EE                            l275 38A2                            l269 3896  
                          l437 3394                            l357 35CE                            l278 3332  
                          l382 353C                            l367 2A70                            l376 32CC  
                          l385 2E40                            l554 20D8                            l474 2F96  
                          l467 2F86                            l567 23B2                            l737 2972  
                          l684 2EF2                adcInit@ADC_PINs 0008                            _PR2 000FCB  
                          _abs 369E                            _pad 2C08                   ___awmod@sign 009B  
                          tosl 000FFD                            wreg 000FE8                   ___flmul@aexp 002A  
                 ___flmul@bexp 002B                   ___flmul@sign 0025                   ___flmul@temp 0030  
                 ___flmul@prod 002C                   ___fltol@exp1 0095                           l1022 1042  
                         l1102 1B4E                           l1024 0EA2                           l1033 0EE8  
                         l1202 168C                           l1035 0F60                           l1027 0E66  
                         l1123 30D8                           ?_abs 0019                           l1140 34A0  
                         l1036 0F4E                           l1061 0B3A                           l1109 1BAA  
                         l1302 2C06                           l1310 369C                           l1054 0944  
                         l1127 224E                           l1231 13AE                           l1071 0C6A  
                         l1063 0BB2                           l1216 1136                           l1064 0BA0  
                         l3001 204E                           l1313 38AC                           l1242 36D4  
                         l1058 0CA8                           l3011 2098                           l3003 206E  
                         l1171 2C4C                           l3013 20B8                           l3005 2070  
                         l3021 2262                           l1245 36DC                           l3101 1418  
                         l1237 33EE                           l1174 2C8E                           l1182 144E  
                         l1238 33F6                           l3007 2082                           l3031 22D2  
                         l3023 2282                           l1319 3786                           l3111 1470  
                         l3103 1426                           l1095 1AB6                           l1176 2CC8  
                         l1184 1456                           l1273 1F48                           l3009 2088  
                         l3041 234A                           l3033 22DA                           l3025 2286  
                         l3017 2250                           l3121 149C                           l3113 147E  
                         l3105 1428                           l3201 1068                           l4001 1AF8  
                         l1098 1C12                           l3043 235C                           l3035 22EE  
                         l3027 2294                           l3019 2254                           l3131 15A8  
                         l3123 151E                           l3115 1484                           l3107 1442  
                         l3211 109A                           l3203 1076                           l4011 1B80  
                         l4003 1B04                           l1276 1F50                           l3301 2504  
                         l3037 22FC                           l3045 2362                           l3029 22B4  
                         l3061 2C44                           l3053 2C08                           l3141 161A  
                         l3133 15C6                           l3125 1524                           l3117 148C  
                         l3109 145E                           l3221 10B8                           l3213 10AC  
                         l3205 1088                           l4101 3864                           l4021 1BBE  
                         l4013 1B8C                           l4005 1B36                           l3311 2596  
                         l3303 2508                           l1279 3750                           l1287 34F2  
                         l3047 2372                           l3039 232A                           l3071 2CB0  
                         l3063 2C58                           l3055 2C16                           l3151 1654  
                         l3143 1628                           l3135 15E0                           l3127 152A  
                         l3119 1496                           l3207 108C                           l4111 37C6  
                         l4103 3866                           l4023 1BE2                           l4015 1B9A  
                         l4007 1B38                           l3321 261A                           l3313 2608  
                         l3305 2586                           l3401 20F8                           l3161 1DDA  
                         l3049 2392                           l3065 2C6C                           l3057 2C2A  
                         l3145 162E                           l3153 1664                           l3137 15FA  
                         l3129 158E                           l3241 116A                           l3233 10D0  
                         l3225 10BE                           l3217 10B2                           l3209 1098  
                         l4201 3870                           l4041 3570                           l4033 3540  
                         l4121 37D8                           l4113 37D0                           l4105 3868  
                         l4025 1BF2                           l4017 1BB8                           l4009 1B44  
                         l3331 2454                           l3323 23B6                           l3315 2610  
                         l3307 258E                           l3403 2104                           l3091 34EC  
                         l3083 34A2                           l3163 1DDE                           l3075 369E  
                         l3067 2C70                           l3059 2C38                           l3147 1640  
                         l3139 1608                           l3251 11EA                           l3243 11A0  
                         l3235 1124                           l4203 387E                           l4043 3578  
                         l4035 3550                           l4131 37E2                           l4123 37DA  
                         l4115 37D2                           l4107 37BC                           l4027 1C00  
                         l4019 1BBA                           l4211 3368                           l3341 24E8  
                         l3333 245A                           l3325 23BA                           l3317 2612  
                         l3309 2590                           l3421 2226                           l3413 21AC  
                         l3085 34A6                           l3181 1E94                           l3173 1E3A  
                         l3165 1DFA                           l3157 1DC2                           l3077 36B8  
                         l3069 2C9C                           l3149 164C                           l3261 128C  
                         l3245 11AE                           l3237 1144                           l3229 10C4  
                         l3501 1754                           l5021 2784                           l4141 38A4  
                         l4045 3580                           l4037 355C                           l4133 37E4  
                         l4125 37DC                           l4117 37D4                           l4109 37C2  
                         l4029 1C02                           l4221 3098                           l4213 303C  
                         l4205 3334                           l4301 3294                           l3343 24EA  
                         l3335 24D8                           l3327 244A                           l3319 2618  
                         l3423 2232                           l3415 21D8                           l3407 213A  
                         l3079 371A                           l3087 34BA                           l3191 1F1A  
                         l3175 1E50                           l3167 1E30                           l3159 1DD6  
                         l3095 13B0                           l3271 133E                           l3263 12D4  
                         l3255 1232                           l3247 11BC                           l3239 1146  
                         l3511 178C                           l3503 1762                           l5023 283A  
                         l3351 2758                           l4047 3582                           l4039 356C  
                         l4143 388E                           l4135 37E6                           l4127 37DE  
                         l4119 37D6                           l4231 35D4                           l4223 30AA  
                         l4215 3050                           l4207 334A                           l4303 32A6  
                         l4311 3506                           l3345 24F0                           l3337 24E0  
                         l3329 2452                           l3441 2A74                           l3425 2238  
                         l3409 2192                           l3089 34E8                           l3193 1F2C  
                         l3185 1ECA                           l3177 1E58                           l3169 1E34  
                         l3097 13D0                           l3273 1352                           l3249 11DC  
                         l3257 1244                           l5025 10F6                           l3521 17CE  
                         l3513 179A                           l3505 176E                           l3361 27C6  
                         l4137 3882                           l4049 3584                           l4153 3898  
                         l3601 2D7C                           l4081 317C                           l4129 37E0  
                         l4161 343E                           l4241 35F2                           l4233 35D8  
                         l4145 38A0                           l4225 30B6                           l4217 305E  
                         l4209 3366                           l4305 32B4                           l4313 351A  
                         l3339 24E2                           l3443 2A78                           l3427 223C  
                         l3419 21F2                           l5027 1E7E                           l3179 1E60  
                         l3099 13F8                           l3267 130C                           l3259 1268  
                         l3283 1378                           l3531 1806                           l3523 17DA  
                         l3515 17A6                           l3507 177C                           l3363 27D8  
                         l3355 2770                           l3347 2752                           l3611 37FE  
                         l4139 388A                           l3603 2D82                           l4083 3194  
                         l4091 3854                           l4171 3448                           l4163 3440  
                         l4155 33F8                           l4243 3606                           l4235 35DE  
                         l4219 3070                           l4307 32C8                           l4315 3520  
                         l3461 2B0C                           l5029 2AB4                           l3445 2A82  
                         l3453 2AA0                           l3189 1F08                           l3285 139C  
                         l3269 1330                           l3277 135E                           l3541 1846  
                         l3533 1812                           l3525 17E8                           l3517 17B4  
                         l3509 1788                           l3373 2826                           l3365 27EC  
                         l3357 27A2                           l3349 2756                           l3613 3800  
                         l3605 2D82                           l4085 31A6                           l4093 385C  
                         l3621 2F1A                           l4173 344A                           l4165 3442  
                         l4157 33FE                           l4237 35E2                           l4229 35D0  
                         l3701 0E0A                           l4317 3538                           l4309 34F4  
                         l3447 2A8C                           l3455 2ADA                           l3279 136C  
                         l3199 1044                           l3543 1854                           l3535 1820  
                         l3527 17F4                           l3519 17C0                           l3471 169E  
                         l3615 38A8                           l3367 27FE                           l3359 27B4  
                         l3607 37EC                           l3551 2CD6                           l4087 31B8  
                         l4079 316C                           l4095 385E                           l3631 2F64  
                         l3623 2F22                           l4175 344C                           l4167 3444  
                         l4159 343C                           l4239 35EE                           l3711 0E56  
                         l3703 0E1A                           l3391 36E0                           l4271 35C0  
                         l3457 2AE4                           l3449 2A96                           l4601 348E  
                         l3537 182C                           l3529 17F8                           l3481 16DC  
                         l3473 16B0                           l3545 1860                           l3369 280E  
                         l3609 37F4                           l3561 2D08                           l3553 2CE6  
                         l4089 31D6                           l4097 3860                           l3633 2F74  
                         l3625 2F2E                           l3617 2EF4                           l4169 3446  
                         l3721 0EA0                           l3713 0E64                           l3705 0E2A  
                         l3641 0CB6                           l3801 08FE                           l3393 36F2  
                         l4265 3588                           l3459 2B08                           l3547 1864  
                         l3539 183A                           l3491 171C                           l3483 16E8  
                         l3475 16B4                           l3467 168E                           l3571 2D12  
                         l3563 2D0A                           l4099 3862                           l3635 2F76  
                         l3627 2F3C                           l3619 2F04                           l4611 2E5E  
                         l3731 0EE6                           l3723 0EB2                           l3715 0E70  
                         l3707 0E32                           l3651 0CF6                           l3643 0CC4  
                         l3811 0954                           l3803 090E                           l3395 3700  
                         l4267 3594                           l3397 20DA                           l2941 2B6C  
                         l3493 1720                           l3485 16F6                           l3477 16C2  
                         l3469 169A                           l3581 2D58                           l3573 2D24  
                         l3565 2D0C                           l3549 2CCA                           l3637 2F80  
                         l3629 2F46                           l4621 2E92                           l4613 2E62  
                         l4605 2E42                           l3741 0F46                           l3725 0EC8  
                         l3733 0EF8                           l3717 0E8E                           l3709 0E42  
                         l3661 0D1C                           l3653 0CF8                           l3645 0CC6  
                         l3901 0C94                           l3821 098E                           l3813 0964  
                         l3805 091E                           l4701 1878                           l4293 3260  
                         l4269 35A6                           ?_pad 0017                           l2943 2B8A  
                         l2935 2B3E                           l2951 375E                           l3495 172E  
                         l3487 1702                           l3479 16CE                           l4199 386C  
                         l3591 2D70                           l3583 2D5A                           l3575 2D4E  
                         l3567 2D0E                           l3559 2D02                           l4631 2ECC  
                         l4623 2E9A                           l4615 2E70                           l4607 2E48  
                         l3751 0FB4                           l3735 0F06                           l3727 0ECE  
                         l3719 0E90                           l3671 0D5C                           l3663 0D2A  
                         l3647 0CD6                           l3655 0D00                           l3639 0CAA  
                         l3903 0C98                           l3831 09E0                           l3823 09A4  
                         l3807 092E                           l4711 1A46                           l4703 18B6  
                         l4295 3264                           l2945 2BC0                           l2937 2B50  
                         l2961 3666                           l2953 3762                           l3497 173A  
                         l3489 1710                           l4721 2982                           l3593 2D70  
                         l3585 2D5C                           l3577 2D54                           l3569 2D10  
                         l4625 2EA8                           l4633 2ED2                           l4617 2E78  
                         l4609 2E56                           l3761 101E                           l3745 0F70  
                         l3753 0FB8                           l3737 0F0A                           l3729 0ED8  
                         l3681 0D9C                           l3673 0D5E                           l3665 0D2C  
                         l3657 0D10                           l3649 0CE6                           l3841 0A26  
                         l3833 09EE                           l3825 09B0                           l3817 0978  
                         l3809 0934                           l4641 286C                           l4705 1934  
                         l4713 32CE                           l4297 326A                           l4801 2632  
                         l2939 2B62                           l2963 3678                           l2955 377A  
                         l3499 1748                           l4731 29E6                           l4723 29A2  
                         l3595 2D76                           l3587 2D5E                           l3579 2D56  
                         l4635 2EE2                           l4627 2EBE                           l4619 2E8A  
                         l3763 1022                           l3755 0FD2                           l3747 0F7C  
                         l3739 0F18                           l3691 0DCC                           l3683 0DA4  
                         l3667 0D3C                           l3675 0D66                           l3659 0D16  
                         l3851 0A94                           l3843 0A40                           l3835 09FA  
                         l3827 09C8                           l3819 0984                           l4651 28C4  
                         l4643 2884                           l4707 1982                           l4715 32F0  
                         l4299 3282                           l4811 26A8                           l4803 264A  
                         l2981 1F88                           l2973 1F52                           l2965 367C  
                         l2949 3752                           l4733 2A10                           l4725 29B8  
                         l3597 2D76                           l3589 2D70                           l4637 2EEA  
                         l4629 2EC6                           l3765 1030                           l3757 0FE8  
                         l3749 0F8A                           l3693 0DCC                           l3685 0DA8  
                         l3677 0D76                           l3669 0D4C                           l3861 0B2A  
                         l3853 0ABE                           l3845 0A50                           l3837 0A0A  
                         l3829 09D4                           l3781 089A                           l4653 28D4  
                         l4709 1A1A                           l4717 331A                           l4741 30DA  
                         l4821 2706                           l4813 26AE                           l4805 265C  
                         l2967 3814                           l2991 1FE4                           l2983 1F96  
                         l2975 1F56                           l2959 365A                           l4591 33D2  
                         l4735 2A30                           l4727 29C4                           l4719 2974  
                         l3599 2D7C                           l3767 1036                           l3759 1002  
                         l3679 0D8C                           l3871 0B6A                           l3863 0B38  
                         l3855 0AF4                           l3847 0A6C                           l3839 0A16  
                         l3791 08D2                           l3783 089C                           l4663 28FE  
                         l4655 28D8                           l4647 2898                           l4751 313C  
                         l4743 3104                           l4823 270C                           l4815 26B6  
                         l4807 268A                           l4831 3788                           l2969 3830  
                         l2993 1FEC                           l2985 1FB6                           l2977 1F64  
                         l4585 3396                           l4593 3450                           l4729 29D6  
                         l4737 2A48                           l3769 1038                           l3697 0DE0  
                         l3689 0DBC                           l3881 0BDC                           l3873 0B98  
                         l3865 0B4A                           l3857 0B02                           l3849 0A78  
                         l3793 08E2                           l3785 08AC                           l3777 0880  
                         l4681 2962                           l4673 2926                           l4665 2908  
                         l4657 28E6                           l4649 28C2                           l4753 3142  
                         l4745 3118                           l4761 31F0                           l4825 2724  
                         l4817 26BC                           l4809 26A6                           l4841 3796  
                         l4833 378C                           l2995 2000                           l2987 1FBA  
                         l2979 1F84                           l4587 339E                           l4595 3462  
                         l4739 2A5C                           l3699 0DFA                           l3891 0C52  
                         l3883 0C06                           l3867 0B58                           l3859 0B20  
                         l3795 08E8                           l3787 08BC                           l3779 088C  
                         l4675 2932                           l4667 2912                           l4691 1CB6  
                         l4755 3150                           l4747 3130                           l4771 3226  
                         l4763 31F6                           l4827 2740                           l4819 26D8  
                         l4835 378E                           l2997 200E                           l2989 1FC6  
                         l4589 33AC                           l4597 346A                           l3893 0C6E  
                         l3877 0BC2                           l3885 0C0A                           l3869 0B5C  
                         l3797 08EE                           l3789 08CC                           l4677 2942  
                         l4693 1D40                           l4685 1C14                           l4757 3152  
                         l4749 3138                           l4773 322C                           l4765 31FA  
                         l4829 2746                           l4781 2D8A                           l4837 3790  
                         l2999 2020                           l4599 3472                           l3895 0C7E  
                         l3887 0C24                           l3879 0BCE                           l3799 08FC  
                         l4679 2952                           l3991 1A80                           l4695 1D88  
                         l4687 1C36                           l4759 3160                           l4775 3244  
                         l4767 3200                           l4791 2DD8                           l4783 2D98  
                         l4839 3792                           l3897 0C8C                           l3889 0C38  
                         l3993 1AC6                           l4697 1D8E                           l4689 1C5E  
                         l4777 3250                           l4769 3218                           l4793 2DF4  
                         l4785 2DA4                           l3899 0C8E                           l3995 1ADC  
                         l3987 1A62                           l4699 1DBE                           l4779 325A  
                         l4795 2E32                           l4787 2DBE                           l3989 1A72  
                         l4797 2E38                           l4789 2DCC                           l3999 1AF0  
                         l4799 262C                           STR_1 0820                           STR_2 086A  
                         STR_3 0854                           STR_4 0873                           STR_5 0879  
                         STR_6 0812                           STR_7 087B                           STR_8 0848  
                         STR_9 0801                           u2100 377A                           u2101 3776  
                         u2110 369C                           u2111 3698                           u2120 1F64  
                         u2200 2294                           u3000 17B4                           u2121 1F60  
                         u2201 2290                           u3001 17B0                           u2130 1F96  
                         u2210 22D2                           u3010 17CE                           u2131 1F92  
                         u2211 22CE                           u3011 17CA                           u2300 374A  
                         u2220 22FC                           u2060 2B50                           u3020 17E8  
                         u3100 2F1A                           u2301 3744                           u2141 1FC0  
                         u2221 22F8                           u2061 2B4C                           u3021 17E4  
                         u3101 2F16                           u2310 374C                           u2150 1FE4  
                         u2230 232A                           u2070 2B62                           u3030 1806  
                         u3110 2F3C                           u2151 1FE0                           u2231 2326  
                         u2071 2B5E                           u3031 1802                           u3111 2F38  
                         u2320 34BA                           u2160 200E                           u2240 2372  
                         u2080 2B8A                           u2400 147E                           u3040 1820  
                         u3120 2F64                           u3200 0DCC                           u2321 34B6  
                         u2161 200A                           u2241 236E                           u2081 2B86  
                         u2401 147A                           u3041 181C                           u3121 2F60  
                         u3201 0DC8                           u2330 34E8                           u2170 204E  
                         u2090 2BC0                           u2250 2C16                           u2410 15A8  
                         u3050 183A                           u3210 0E42                           u3130 0CC4  
                         u2331 34E4                           u2171 204A                           u2091 2BBC  
                         u2251 2C12                           u2411 15A4                           u3051 1836  
                         u3211 0E3E                           u3131 0CC0                           u2500 1E30  
                         u2180 2098                           u2260 2C38                           u2420 15C6  
                         u2340 13E0                           u3060 1854                           u3300 0F5C  
                         u3220 0E64                           u3140 0CD6                           u2501 1E2C  
                         u2181 2094                           u2261 2C34                           u2421 15C2  
                         u2341 13DA                           u3061 1850                           u3301 0F58  
                         u3221 0E60                           u3141 0CD2                           u2510 1E4C  
                         u2190 2262                           u2270 2C8E                           u2430 15E0  
                         u2350 13E2                           u4110 33EE                           u3070 1876  
                         u3310 0F70                           u3230 0E8E                           u3150 0CE6  
                         u2511 1E48                           u2191 225E                           u2271 2C8A  
                         u2431 15DC                           u4111 33EA                           u3071 1872  
                         u3311 0F6C                           u3231 0E8A                           u3151 0CE2  
                         u2520 1F02                           u2280 2C9C                           u2440 15FA  
                         u2360 13F8                           u2600 11AE                           u3080 2D36  
                         u4120 2E56                           u3320 0F8A                           u3240 0EB2  
                         u3160 0D2A                           u3400 090E                           u4200 28E6  
                         u2521 1EFC                           u2281 2C98                           u2441 15F6  
                         u2361 13F4                           u2601 11AA                           u3081 2D32  
                         u4121 2E52                           u3321 0F86                           u3241 0EAE  
                         u3161 0D26                           u3401 090A                           u4201 28E2  
                         u2530 1F04                           u2290 36B8                           u2450 1608  
                         u2370 1426                           u2610 122A                           u3090 3812  
                         u4130 2E70                           u3330 0FD2                           u3250 0EC8  
                         u3170 0D3C                           u3410 091E                           u4210 28FA  
                         u2291 36B4                           u2451 1604                           u2371 1422  
                         u2611 1224                           u3091 380E                           u4131 2E6C  
                         u3331 0FCE                           u3251 0EC4                           u3171 0D38  
                         u3411 091A                           u4211 28F6                           u2540 1F1A  
                         u2460 161A                           u2380 1442                           u2620 122C  
                         u4140 2E8A                           u3340 1002                           u3260 0EE6  
                         u3180 0D4C                           u3500 0BC2                           u3420 0954  
                         u4220 2922                           u4300 3118                           u2541 1F16  
                         u2461 1616                           u2381 143E                           u4141 2E86  
                         u3341 0FFE                           u3261 0EE2                           u3181 0D48  
                         u3501 0BBE                           u3421 0950                           u4221 291E  
                         u4301 3114                           u2550 1F2C                           u2470 1628  
                         u2390 1470                           u2630 1244                           u4150 2EA8  
                         u3350 1030                           u3270 0F06                           u3190 0D8C  
                         u3510 0BDC                           u3430 0964                           u4230 2942  
                         u4310 3130                           u2551 1F28                           u2471 1624  
                         u2391 146C                           u2631 1240                           u4151 2EA4  
                         u3351 102C                           u3271 0F02                           u3191 0D88  
                         u3511 0BD8                           u3431 0960                           u4231 293E  
                         u4311 312C                           u2480 1640                           u2640 1268  
                         u2560 1068                           u4160 2EBE                           u3280 0F18  
                         u3520 0C24                           u3440 0ADE                           u3360 089A  
                         u4240 2952                           u4320 268A                           u2705 23C2  
                         u2481 163C                           u2641 1264                           u2561 1064  
                         u4161 2EBA                           u3281 0F14                           u3521 0C20  
                         u3361 0896                           u4241 294E                           u4321 2686  
                         u2490 1DFA                           u2650 128C                           u2570 1136  
                         u4170 2EE2                           u3290 0F46                           u3530 0C52  
                         u3450 0B38                           u3370 08AC                           u2810 3710  
                         u4250 1D88                           u4330 2706                           u2715 23E6  
                         u2491 1DF6                           u2651 1288                           u2571 1132  
                         u4171 2EDE                           u3291 0F42                           u3531 0C4E  
                         u3451 0B34                           u3371 08A8                           u2811 370C  
                         u4251 1D84                           u4331 2702                           u2820 20F4  
                         u2660 1330                           u2580 1144                           u2900 16B0  
                         u3540 0C8C                           u3460 0B58                           u3380 08BC  
                         u4180 2884                           u3700 1ADC                           u4260 1DBE  
                         u2725 240C                           u2821 20F0                           u2661 132C  
                         u2581 1140                           u2901 16AC                           u3541 0C88  
                         u3461 0B54                           u3445 0AD4                           u3381 08B8  
                         u4181 2880                           u3701 1AD8                           u4261 1DBA  
                         u2830 2136                           u2590 116A                           u2910 16C2  
                         u4270 29D6                           u3470 0B6A                           u3390 08FC  
                         u4190 28B8                           u3710 1B32                           u2735 2430  
                         u2831 2132                           u2591 1166                           u2911 16BE  
                         u4271 29D2                           u3471 0B66                           u3391 08F8  
                         u3711 1B2E                           u2840 21A8                           u2920 16DC  
                         u4280 29E6                           u2760 27B4                           u3480 0B98  
                         u3720 1B7C                           u2745 2464                           u2841 21A4  
                         u2921 16D8                           u4281 29E2                           u2761 27B0  
                         u3481 0B94                           u3721 1B78                           u2850 21EE  
                         u2930 16F6                           u4290 2A5C                           u2770 27D8  
                         u3810 3432                           u3490 0BAE                           u3730 1B9A  
                         u2755 24A8                           u2675 2510                           u2851 21EA  
                         u2931 16F2                           u4291 2A58                           u2771 27D4  
                         u3491 0BAA                           u4195 28AE                           u3731 1B96  
                         u4507 3238                           u2860 224E                           u2940 1710  
                         u2780 27FE                           u3740 1BAA                           u4348 37A0  
                         u2685 252A                           u2861 224A                           u2941 170C  
                         u2781 27FA                           u3741 1BA6                           u4517 352A  
                         u4349 37B4                           u2870 2B04                           u2950 172E  
                         u2790 2866                           u3750 1BB8                           u2695 2550  
                         u2951 172A                           u2791 2862                           u4607 2D50  
                         u3815 3428                           u3751 1BB4                           u4527 3274  
                         u2880 2B2C                           u2960 1748                           u3760 1BF2  
                         u3680 1A72                           u3920 35A6                           u2961 1744  
                         u4617 2D66                           u3761 1BEE                           u3681 1A6E  
                         u4537 36F8                           u3921 35A2                           u2890 2B3C  
                         u2970 1762                           u3770 1C00                           u3690 1A80  
                         u3850 334A                           u3930 35C0                           u4707 244C  
                         u2891 2B38                           u2971 175E                           u4627 27BA  
                         u4547 3186                           u3771 1BFC                           u3691 1A7C  
                         u3851 3346                           u4467 263C                           u3931 35BC  
                         _RCIE 007CED                           u2980 177C                           u3780 3550  
                         u3860 3394                           u3940 32C8                           _RCIF 007CF5  
                         u4717 2456                           u2877 2AFA                           u2981 1778  
                         u4637 27DE                           u3781 354C                           u4557 31C2  
                         u3861 3390                           u3941 32C4                           u4477 26C6  
                         u2990 179A                           u3870 3070                           u3950 351A  
                         u4727 24DA                           u2887 2B22                           u2991 1796  
                         u4647 2804                           u4567 31E0                           u3871 306C  
                         u3951 3516                           u4487 2716                           u3880 3098  
                         u4737 24E4                           u4657 2588                           u4577 2CDC  
                         u3881 3094                           u4497 320C                           u3890 30AA  
                         u4747 24EC                           u4667 2592                           u4587 2D04  
                         u3891 30A6                           u4757 24F6                           u4677 260A  
                         u4597 2D1A                           u4687 2614                           u4697 2620  
                         i1l99 00AC                           _TMR0 000FD6                           _TMR2 000FCC  
                         _TMR3 000FB2                           abs@a 0019                           _dbuf 0064  
                         _atoi 1DC2                           _main 3788                           _dtoa 13B0  
                         _isrH 0008                           _isrL 0018                           _prec 0053  
                         _nout 0060                           pad@i 001E                           pad@p 001B  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 0020  
                         fsr2l 000FD9                           btemp 0058                           prodh 000FF4  
                         prodl 000FF3                           start 00BC                ___fldiv@new_exp 0043  
 __end_of_appStateRecolectData 316C                __end_of_Lcd_Cmd 262C                __end_of_Lcd_Out 2B3E  
                 ___param_bank 000000                     _Lcd_Chr_CP 23B4           __size_of_appLCD_Init 0084  
               ??_confirmacion 0011        __size_of_appCounterInit 000A                          ??_abs 001B  
                        ??_pad 001D        __size_of_appCounterStop 0004                 setServo@pulsos 000B  
                ___fltol@sign1 0094                __end_of___aodiv 20DA                          ?_atoi 000E  
                        ?_main 0001                          ?_dtoa 0022                __end_of___aomod 23B4  
                        ?_isrH 0001                          ?_isrL 0001                __end_of_adcInit 3588  
              __end_of___fldiv 1044                          _ADRES 000FC3                          STR_10 083B  
                        STR_11 0839                          STR_12 082E                          STR_13 082E  
                        STR_14 0860                          STR_15 0860                __end_of___awmod 2EF4  
              __end_of___flmul 0CAA                __end_of___fltol 2974                __end_of___lldiv 2F98  
                        i2l110 3030        __end_of_appStateInitial 35D0                          _RCREG 000FAE  
                 vfpfcnvrt@fmt 0048                          _SPBRG 000FAF                          _PORTB 000F81  
                        _TRISB 000F93                          _TXREG 000FAD                __end_of_appInit 3616  
        appSubGetData@cantidad 00BA                          _datos 00C0                          _flags 0055  
                        _fputc 2B3E                          _fputs 365A                __end_of_isdigit 3752  
                        atoi@n 001B                          pad@fp 0017                          atoi@s 000E  
                        _width 0062                          _putch 38AC                          dtoa@d 0024  
                        dtoa@i 0044                          dtoa@n 003C                          dtoa@p 0036  
                        dtoa@s 003A                          dtoa@w 0038                __end_of_teclado 1878  
              __end_of_isspace 34F4                          pclath 000FFA                          tablat 000FF5  
              __end_of_warning 32CE                          ttemp5 0059                          ttemp6 005C  
                        ttemp7 0060                          status 000FD8                          wtemp8 0059  
              __end_of_sprintf 34A2           __end_of_appTimerInit 37EA           __end_of_appTimerStop 38A8  
             __end_of_Lcd_Init 2D8A                    isrH@counter 0057                __initialization 3616  
                 __end_of_atoi 1F52                   __end_of_main 37BC                   __end_of_dtoa 168E  
                 __end_of_isrH 303C                   __end_of_isrL 00BC                         ??_atoi 0010  
                       ??_main 0053                         ??_dtoa 002C                         ??_isrH 0001  
                       ??_isrL 0004       __size_of_appCounterStart 0004                  __activetblptr 000002  
               _appGetElements 31F0          __end_of_setServoAngle 286C                         ?_fputc 0007  
                       ?_fputs 0010          __size_of_appISRConfig 0008                         ?_putch 0001  
                       i1l4851 0048                         i1l4843 0026                         i1l4853 005A  
                       i1l4861 008C                         i1l4845 0034                         i1l4863 009C  
                       i1l4855 006A                         i1l4847 0042                         i1l4865 00A4  
                       i1l4857 007C                         i1l4849 0044                         i1l4859 0080  
                       i2l4871 2FBE                         i2l4881 2FEA                         i2l4873 2FC0  
                       i2l4883 3018                         i2l4875 2FC6                         i2l4867 2FA2  
                       i2l4885 301E                         i2l4869 2FB0                         i2l4877 2FCE  
                       i2l4887 3024                         i2l4879 2FDC                         i2l4889 302C  
                    ??_Lcd_Cmd 0007                  vfpfcnvrt@done 009C                         _TMR0IE 007F95  
                       _TMR0IF 007F92                         _TMR3IE 007D01                         _TMR3IF 007D09  
                    ??_Lcd_Out 000D               __end_of___xxtofl 1C14                   vfprintf@cfmt 0050  
            ?_appSubGiveElemts 000F                    ?_Lcd_Chr_CP 0001                         _appADC 1C14  
                    ??___aodiv 0017                      ??___aomod 0017                         ___wmul 3814  
                    ??_adcInit 0007                      ??___fldiv 003A                      ??___awmod 0053  
                    ??___flmul 0021                         _appBat 1878                      ??___fltol 004F  
                    ??___lldiv 000F               __end_of_readUART 2750             ??_appSubGiveElemts 0011  
                       _memcmp 303C                         _memset 20DA                         clear_0 363C  
              ___awmod@divisor 0098                      ??_appInit 0018         __end_of_appGetElements 3260  
              ___awmod@counter 009A                         pad@buf 0019                         _puerto 0084  
             __end_of_sendData 3396                         dtoa@fp 0022                         _strlen 3752  
             __end_of_setServo 3814                   _appISRConfig 3898                         fputc@c 0007  
             ?_appStateInitial 0001                         fputs@c 0014                         fputs@i 0015  
                       fputs@s 0010                      ??_isdigit 0009                      ??_teclado 0009  
                 __mediumconst 0000                      ??_isspace 0009                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8           _appStateRecolectData 30DA  
            adcGetValue@PinADC 000A                         putch@c 0001          __end_of_appSubGetData 2A72  
                    ??_warning 0011               __end_of_vfprintf 33F8                      ??_sprintf 0053  
         __end_of_confirmacion 353E                   ___xxtofl@arg 0015                   ___xxtofl@exp 0014  
           setServoAngle@angle 000A                   ___xxtofl@val 000B                     __accesstop 0060  
      __end_of__initialization 364C          __end_of_appTimerStart 388E                  ___rparam_used 000001  
                   ___fltol@f1 004B                 __pcstackCOMRAM 0001                   __pidataBANK0 383A  
               _appCounterInit 388E                 _appCounterStop 38A0                  __end_of_fputc 2C08  
                __end_of_fputs 369E                  __end_of_putch 38AE             __size_of_appElemts 0066  
              ?_appGetElements 0001                  ??_adcGetValue 0009          ?_appStateRecolectData 0001  
                    ?_Lcd_Init 0001              ??_appCounterStart 0007                        ??_fputc 000B  
                      ??_fputs 0014            __size_of_Lcd_Chr_CP 014E                        ??_putch 0007  
        __size_of_appTimerInit 002E                     __pbssBANK0 0060               setServoAngle@pin 0007  
        __size_of_appTimerStop 0004       __size_of_sendinformation 00B8         __end_of_appCounterInit 3898  
           fp__sendinformation 000E         __end_of_appCounterStop 38A4                        ?_appADC 00B8  
                      ?___wmul 0007                        ?_appBat 00B8                        ?_memcmp 0007  
                      ?_memset 0007                     appADC@data 00B8             __size_of_uart_Init 0058  
                      ?_strlen 0007             __size_of_servoInit 0018                   _appTimerInit 37BC  
                    ?___xxtofl 000B                   _appTimerStop 38A4             __size_of_vfpfcnvrt 036C  
                   ??_Lcd_Init 000A            __end_of_adcGetValue 371A                      ?_readUART 0001  
            __end_of_appElemts 3334                        _Lcd_Cmd 2502                    setServo@pin 000C  
                      _Lcd_Out 2A72        appSubGetData@data_Inout 00B8                      ?_sendData 000B  
                ??_appLCD_Init 0011                        __Hparam 0000                      ?_setServo 000B  
                      __Lparam 0000                ?_appCounterInit 0007                ?_appCounterStop 0001  
                      ___aodiv 1F52                        ___aomod 2250                        _adcInit 353E  
                      ___fldiv 0CAA                        ___awmod 2E42                        ___flmul 0880  
                      ___fltol 286C                __size_of_appADC 01AE                        ___lldiv 2EF4  
              __size_of___wmul 0026                __size_of_appBat 01E8                      ?_vfprintf 00A0  
                   appBat@data 00B8                   __psmallconst 0800                        __pcinit 3616  
              __size_of_memcmp 009E                __size_of_memset 0176                        _appInit 35D0  
                      __ramtop 0800                        __ptext0 3788                        __ptext1 2D8A  
                      __ptext2 3588                        __ptext3 262C                        __ptext4 31F0  
                      __ptext5 30DA                        __ptext6 34F4                        __ptext7 3260  
                      __ptext8 3334                        __ptext9 303C                      _T0CONbits 000FD5  
              __size_of_strlen 0036                      _T2CONbits 000FCA                   __size_of_abs 0040  
                 __size_of_pad 00C2         ??_appStateRecolectData 0053                        _isdigit 371A  
                   ??___xxtofl 000F                      _T3CONbits 000FB1               ___awmod@dividend 0096  
        __size_of_confirmacion 004A                        _teclado 168E                        _isspace 34A2  
                      _warning 3260                        atoi@neg 0014                        _sprintf 3450  
               __pintcode_body 2F98           end_of_initialization 364C                        memcmp@l 000E  
                      memcmp@n 000B                     ??_readUART 0013                        memcmp@r 0010  
                      fputc@fp 0009                        memset@c 0009                        memset@k 000F  
                      memset@n 000B                        memset@s 0011                  __Lmediumconst 0000  
                      int_func 2F98                        fputs@fp 0012              __end_of_uart_Init 3450  
                   ??_sendData 000D                ___lldiv@divisor 000B              __end_of_servoInit 386C  
                   ??_setServo 000D                ___lldiv@counter 0013           appCounterInit@reload 0007  
            __end_of_vfpfcnvrt 13B0                      Lcd_Init@i 000B                      _RCSTAbits 000FAB  
                 ??_Lcd_Chr_CP 0007                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 0050                  appElemts@data 00B8                   _confirmacion 34F4  
          __end_of_appLCD_Init 31F0                        strlen@a 0009                        strlen@s 0007  
            ??_sendinformation 0053                      _PORTAbits 000F80                      _PORTBbits 000F81  
                  _adcGetValue 36DE                  ___xxtofl@sign 0013                      _TRISAbits 000F92  
                    _TRISCbits 000F94                      _TRISDbits 000F95      __size_of_appSubGiveElemts 0016  
                    _TRISEbits 000F96                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
           __end_of_Lcd_Chr_CP 2502                     fp__warning 000E                    ___flmul@grs 0026  
                    _TXSTAbits 000FAC         __size_of_setServoAngle 011C                  setServo@angle 000D  
             ??_appGetElements 00BD                 __end_of_appADC 1DC2                    vfpfcnvrt@ap 004A  
                  vfpfcnvrt@fp 0046                    vfpfcnvrt@ll 0094                 __end_of___wmul 383A  
               __end_of_appBat 1A60                    _BAUDCONbits 000FB8                _appCounterStart 38A8  
               __end_of_memcmp 30DA                 __end_of_memset 2250                 __end_of_strlen 3788  
          start_initialization 3616                    __end_of_abs 36DE                    __end_of_pad 2CCA  
                Lcd_Out@buffer 000B       __size_of_appStateInitial 0048              __size_of_Lcd_Init 00C0  
           fp__appStateInitial 000E                    _appLCD_Init 316C                    vfprintf@fmt 00A2  
                     ??_appADC 0053                       ??___wmul 000B                       ??_appBat 00BA  
                  _appBat$2655 00BC         __size_of_appSubGetData 00FE                    __pdataBANK0 00C0  
                     ??_memcmp 000D                       ??_memset 000D                     memset@dest 0007  
                     ??_strlen 0009                   sendData@data 000B                      ___fldiv@a 0036  
                    ___fldiv@b 0032         __size_of_appTimerStart 000C                      ___flmul@a 001D  
                    ___flmul@b 0019                    __pbssCOMRAM 0053                  __pcstackBANK0 0094  
             ___aodiv@dividend 0007                  _setServoAngle 2750              __size_of___xxtofl 01B4  
      fp__appStateRecolectData 000E                       ?_Lcd_Cmd 0001               ??_appCounterInit 0009  
                     ?_Lcd_Out 000A               ??_appCounterStop 0007                      _atoi$2375 0016  
                    _atoi$2376 001A                      _atoi$2377 0018              __size_of_readUART 0124  
                    _appElemts 32CE                      _dtoa$2340 0034        __end_of_appCounterStart 38AC  
            __size_of_sendData 0062                      __pintcode 0008                       ?___aodiv 0007  
                     ?___aomod 0007              __size_of_setServo 002A                       ?_adcInit 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0019                       ?___awmod 0096  
                     ?___flmul 0019                       ?___fltol 004B                       ?___lldiv 0007  
                  __pintcodelo 0018                       ?_appInit 0001              __size_of_vfprintf 0062  
                  __smallconst 0800                       ?_isdigit 0007                   teclado@valor 0007  
                     ?_teclado 0007                 ?_setServoAngle 0007                       ?_isspace 0007  
             _appSubGiveElemts 386C                       ?_warning 0001                       ?_sprintf 00A6  
                _appSubGetData 2974                 __size_of_fputc 00CA                 __size_of_fputs 0044  
               __size_of_putch 0002                 ___wmul@product 000B                       _LATAbits 000F89  
                     _LATCbits 000F8B                       _LATDbits 000F8C                       _LATEbits 000F8D  
                _appTimerStart 3882                       _IPR1bits 000F9F                       _IPR2bits 000FA2  
                     _PIE1bits 000F9D                       _PIE2bits 000FA0                _sendinformation 2D8A  
            ??_appStateInitial 000F                     ?_appElemts 00B8                       i1u440_20 009C  
                     i1u440_21 0098                       i1u435_20 0034                       i1u435_21 0030  
                     i1u436_20 0042                       i1u436_21 003E                       i1u437_20 005A  
                     i1u437_21 0056                       i1u438_20 006A                       i1u438_21 0066  
                     i1u439_20 007C                       i1u439_21 0078                       i2u441_40 2FB0  
                     i2u441_41 2FAC                       _PIR1bits 000F9E                       i2u442_40 2FBE  
                     i2u442_41 2FBA                       i2u443_40 2FDC                       i2u443_41 2FD8  
                     _PIR2bits 000FA1                       i2u444_40 2FEA                       i2u444_41 2FE6  
                     i2u445_40 3018                       i2u445_41 3014                       _GO_nDONE 007E11  
                    _uart_Init 33F8                       _RCONbits 000FD0                       Lcd_Out@x 000A  
                     Lcd_Out@y 000F                      _servoInit 3854                      _vfpfcnvrt 1044  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0007                  ?_appISRConfig 0001                   ?_adcGetValue 0007  
__size_of_appStateRecolectData 0092                   _isspace$2393 000D                       _Lcd_Init 2CCA  
               ?_appSubGetData 00B8                    _INTCON2bits 000FF1                      copy_data0 362A  
               ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A               __size_of_Lcd_Out 00CC  
                     __Hrparam 0000                  uart_Init@baud 0014                     vfprintf@ap 00A4  
                     __Lrparam 0000                     vfprintf@fp 00A0               ?_appCounterStart 0001  
                   ?_uart_Init 0014                     ?_servoInit 0001               __size_of___aodiv 0188  
             __size_of___aomod 0164               __size_of_adcInit 004A               __size_of___fldiv 039A  
             __size_of___awmod 00B2               __size_of___flmul 042A               __size_of___fltol 0108  
                appADC@lm35val 00BA               __size_of___lldiv 00A4                     ?_vfpfcnvrt 0046  
              ___aodiv@divisor 000F                 ??_appISRConfig 0007                ___aodiv@counter 0017  
             __size_of_appInit 0046                ??_setServoAngle 0008                     sprintf@fmt 00A8  
                    sendData@i 000F                       ___xxtofl 1A60               __size_of_isdigit 0038  
               Lcd_Chr_CP@data 0009               __size_of_teclado 01EA               __size_of_isspace 0052  
                     __ptext10 32CE                       __ptext11 38A0                       __ptext20 35D0  
                     __ptext12 1878                       __ptext21 33F8                       __ptext13 1C14  
                     __ptext30 38A4                       __ptext22 2EF4                       __ptext14 36DE  
                     __ptext31 3882                       __ptext23 3854                       __ptext15 1A60  
                     __ptext40 1044                       __ptext32 386C                       __ptext24 37BC  
                     __ptext16 286C                       __ptext41 13B0                       __ptext33 37EA  
                     __ptext25 316C                       __ptext17 0880                       __ptext50 1DC2  
                     __ptext42 2C08                       __ptext34 2750                       __ptext26 2CCA  
                     __ptext18 0CAA                       __ptext51 34A2                       __ptext43 3752  
                     __ptext35 38A8                       __ptext27 3898                       __ptext19 2E42  
                     __ptext52 371A                       __ptext44 365A                       __ptext36 2974  
                     __ptext28 388E                       __ptext53 3814                       __ptext45 2B3E  
                     __ptext37 168E                       __ptext29 353E                       __ptext54 20DA  
                     __ptext46 38AC                       __ptext38 3450                       __ptext55 2A72  
                     __ptext47 369E                       __ptext39 3396                       __ptext56 2502  
                     __ptext48 2250                       __ptext57 23B4                       __ptext49 1F52  
             __size_of_warning 006E        __end_of_sendinformation 2E42               __size_of_sprintf 0052  
                    setServo@i 000E                       _readUART 262C                    Lcd_Cmd@data 0009  
                __size_of_atoi 0190                  __size_of_main 0034                  __size_of_dtoa 02DE  
                __size_of_isrH 3034                  __size_of_isrL 00A4                       _sendData 3334  
                  ??_appElemts 0053                   ?_appLCD_Init 0001                       _setServo 37EA  
                     int$flags 0058                       _vfprintf 3396               ___aomod@dividend 0007  
           appSubGetData@inout 00BC                  ?_appTimerInit 0001                    Lcd_Out@data 0010  
               _vfpfcnvrt$2355 009E                  ?_appTimerStop 0001                     _INTCONbits 000FF2  
              ??_appSubGetData 0053                       memcmp@vl 0007                       memcmp@vr 0009  
                     isdigit@c 0007                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 00B0                ??_appTimerStart 0007                       isspace@c 0007  
             ___lldiv@dividend 0007           appSubGiveElemts@data 000F                fp__confirmacion 000E  
     __end_of_appSubGiveElemts 3882                    ??_uart_Init 0018                    ??_servoInit 0007  
              ___aomod@divisor 000F                    ??_vfpfcnvrt 004C                ___aomod@counter 0017  
               ??_appTimerInit 0007                       sprintf@f 00B2                       sprintf@s 00A6  
               ??_appTimerStop 0007               ___lldiv@quotient 000F        __size_of_appGetElements 0070  
            fp__appGetElements 000E           __size_of_adcGetValue 003C                _appStateInitial 3588  
             ?_sendinformation 0001                   ___aodiv@sign 0018           __end_of_appISRConfig 38A0  
                 ___aomod@sign 0018  
