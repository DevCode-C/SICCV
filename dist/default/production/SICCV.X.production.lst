

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 02 02:43:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72  0000                     
    73                           ; Version 2.20
    74                           ; Generated 12/02/2020 GMT
    75                           ; 
    76                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F4550 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataBANK0
   109  003356                     __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for _datos
   113  003356  00                 	db	0
   114  003357  0000               	dw	0
   115  003359  00                 	db	0
   116  00335A  0000               	dw	0
   117  00335C  00                 	db	0
   118  00335D  00                 	db	0
   119  00335E  00                 	db	0
   120  00335F  00                 	db	0
   121  003360  00                 	db	0
   122  003361  00                 	db	0
   123  003362  00                 	db	0
   124  003363  00                 	db	0
   125  003364  00                 	db	0
   126  003365  00                 	db	0
   127  003366  00                 	db	0
   128  003367  00                 	db	0
   129  003368  00                 	db	0
   130  003369  00                 	db	0
   131  00336A  00                 	db	0
   132  00336B  00                 	db	0
   133  00336C  00                 	db	0
   134  00336D  80                 	db	low _appStateInitial
   135  00336E  30                 	db	high _appStateInitial
   136  0000                     _TMR0	set	4054
   137  0000                     _TMR3	set	4018
   138  0000                     _ADRES	set	4035
   139  0000                     _PORTAbits	set	3968
   140  0000                     _RCONbits	set	4048
   141  0000                     _PIE2bits	set	4000
   142  0000                     _IPR2bits	set	4002
   143  0000                     _PIR2bits	set	4001
   144  0000                     _INTCONbits	set	4082
   145  0000                     _T0CONbits	set	4053
   146  0000                     _T3CONbits	set	4017
   147  0000                     _LATEbits	set	3981
   148  0000                     _PIR1bits	set	3998
   149  0000                     _PR2	set	4043
   150  0000                     _TMR2	set	4044
   151  0000                     _TRISEbits	set	3990
   152  0000                     _T2CONbits	set	4042
   153  0000                     _LATDbits	set	3980
   154  0000                     _TRISDbits	set	3989
   155  0000                     _PORTBbits	set	3969
   156  0000                     _PORTB	set	3969
   157  0000                     _LATAbits	set	3977
   158  0000                     _TRISAbits	set	3986
   159  0000                     _INTCON2bits	set	4081
   160  0000                     _TRISB	set	3987
   161  0000                     _LATCbits	set	3979
   162  0000                     _TRISCbits	set	3988
   163  0000                     _ADCON0bits	set	4034
   164  0000                     _ADCON2bits	set	4032
   165  0000                     _ADCON1bits	set	4033
   166  0000                     _TMR0IF	set	32658
   167  0000                     _TMR0IE	set	32661
   168  0000                     _TMR3IF	set	32009
   169  0000                     _TMR3IE	set	32001
   170  0000                     _GO_nDONE	set	32273
   171                           
   172                           	psect	smallconst
   173  000800                     __psmallconst:
   174                           	callstack 0
   175  000800  00                 	db	0
   176  000801                     STR_9:
   177  000801  52                 	db	82	;'R'
   178  000802  65                 	db	101	;'e'
   179  000803  63                 	db	99	;'c'
   180  000804  61                 	db	97	;'a'
   181  000805  72                 	db	114	;'r'
   182  000806  67                 	db	103	;'g'
   183  000807  61                 	db	97	;'a'
   184  000808  20                 	db	32
   185  000809  50                 	db	80	;'P'
   186  00080A  6F                 	db	111	;'o'
   187  00080B  72                 	db	114	;'r'
   188  00080C  66                 	db	102	;'f'
   189  00080D  61                 	db	97	;'a'
   190  00080E  76                 	db	118	;'v'
   191  00080F  6F                 	db	111	;'o'
   192  000810  72                 	db	114	;'r'
   193  000811  00                 	db	0
   194  000812                     STR_6:
   195  000812  43                 	db	67	;'C'
   196  000813  20                 	db	32
   197  000814  64                 	db	100	;'d'
   198  000815  65                 	db	101	;'e'
   199  000816  20                 	db	32
   200  000817  76                 	db	118	;'v'
   201  000818  61                 	db	97	;'a'
   202  000819  63                 	db	99	;'c'
   203  00081A  75                 	db	117	;'u'
   204  00081B  6E                 	db	110	;'n'
   205  00081C  61                 	db	97	;'a'
   206  00081D  73                 	db	115	;'s'
   207  00081E  3A                 	db	58	;':'
   208  00081F  00                 	db	0
   209  000820                     STR_1:
   210  000820  54                 	db	84	;'T'
   211  000821  3A                 	db	58	;':'
   212  000822  25                 	db	37
   213  000823  30                 	db	48	;'0'
   214  000824  32                 	db	50	;'2'
   215  000825  64                 	db	100	;'d'
   216  000826  2E                 	db	46
   217  000827  25                 	db	37
   218  000828  30                 	db	48	;'0'
   219  000829  32                 	db	50	;'2'
   220  00082A  64                 	db	100	;'d'
   221  00082B  20                 	db	32
   222  00082C  43                 	db	67	;'C'
   223  00082D  00                 	db	0
   224  00082E                     STR_8:
   225  00082E  53                 	db	83	;'S'
   226  00082F  69                 	db	105	;'i'
   227  000830  6E                 	db	110	;'n'
   228  000831  20                 	db	32
   229  000832  76                 	db	118	;'v'
   230  000833  61                 	db	97	;'a'
   231  000834  63                 	db	99	;'c'
   232  000835  75                 	db	117	;'u'
   233  000836  6E                 	db	110	;'n'
   234  000837  61                 	db	97	;'a'
   235  000838  73                 	db	115	;'s'
   236  000839  00                 	db	0
   237  00083A                     STR_3:
   238  00083A  42                 	db	66	;'B'
   239  00083B  69                 	db	105	;'i'
   240  00083C  65                 	db	101	;'e'
   241  00083D  6E                 	db	110	;'n'
   242  00083E  76                 	db	118	;'v'
   243  00083F  65                 	db	101	;'e'
   244  000840  6E                 	db	110	;'n'
   245  000841  69                 	db	105	;'i'
   246  000842  64                 	db	100	;'d'
   247  000843  6F                 	db	111	;'o'
   248  000844  73                 	db	115	;'s'
   249  000845  00                 	db	0
   250  000846                     STR_2:
   251  000846  42                 	db	66	;'B'
   252  000847  61                 	db	97	;'a'
   253  000848  74                 	db	116	;'t'
   254  000849  3A                 	db	58	;':'
   255  00084A  25                 	db	37
   256  00084B  30                 	db	48	;'0'
   257  00084C  32                 	db	50	;'2'
   258  00084D  64                 	db	100	;'d'
   259  00084E  00                 	db	0
   260  00084F                     STR_4:
   261  00084F  53                 	db	83	;'S'
   262  000850  49                 	db	73	;'I'
   263  000851  43                 	db	67	;'C'
   264  000852  43                 	db	67	;'C'
   265  000853  56                 	db	86	;'V'
   266  000854  00                 	db	0
   267  000855                     STR_5:
   268  000855  23                 	db	35
   269  000856  3A                 	db	58	;':'
   270  000857  25                 	db	37
   271  000858  64                 	db	100	;'d'
   272  000859  00                 	db	0
   273  00085A  00                 	db	0	; dummy byte at the end
   274  0000                     
   275                           ; #config settings
   276                           
   277                           	psect	cinit
   278  003152                     __pcinit:
   279                           	callstack 0
   280  003152                     start_initialization:
   281                           	callstack 0
   282  003152                     __initialization:
   283                           	callstack 0
   284                           
   285                           ; Initialize objects allocated to BANK0 (25 bytes)
   286                           ; load TBLPTR registers with __pidataBANK0
   287  003152  0E56               	movlw	low __pidataBANK0
   288  003154  6EF6               	movwf	tblptrl,c
   289  003156  0E33               	movlw	high __pidataBANK0
   290  003158  6EF7               	movwf	tblptrh,c
   291  00315A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   292  00315C  6EF8               	movwf	tblptru,c
   293  00315E  EE00  F0B8         	lfsr	0,__pdataBANK0
   294  003162  EE10 F019          	lfsr	1,25
   295  003166                     copy_data0:
   296  003166  0009               	tblrd		*+
   297  003168  CFF5 FFEE          	movff	tablat,postinc0
   298  00316C  50E5               	movf	postdec1,w,c
   299  00316E  50E1               	movf	fsr1l,w,c
   300  003170  E1FA               	bnz	copy_data0
   301                           
   302                           ; Clear objects allocated to BANK0 (42 bytes)
   303  003172  EE00  F08E         	lfsr	0,__pbssBANK0
   304  003176  0E2A               	movlw	42
   305  003178                     clear_0:
   306  003178  6AEE               	clrf	postinc0,c
   307  00317A  06E8               	decf	wreg,f,c
   308  00317C  E1FD               	bnz	clear_0
   309                           
   310                           ; Clear objects allocated to COMRAM (4 bytes)
   311  00317E  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   312  003180  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   313  003182  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   314  003184  6A58               	clrf	__pbssCOMRAM& (0+255),c
   315  003186                     end_of_initialization:
   316                           	callstack 0
   317  003186                     __end_of__initialization:
   318                           	callstack 0
   319  003186  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   320  003188  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   321  00318A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   322  00318C  6EF8               	movwf	tblptru,c
   323  00318E  0100               	movlb	0
   324  003190  EF02  F017         	goto	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMRAM
   327  000058                     __pbssCOMRAM:
   328                           	callstack 0
   329  000058                     _prec:
   330                           	callstack 0
   331  000058                     	ds	2
   332  00005A                     _flags:
   333                           	callstack 0
   334  00005A                     	ds	2
   335                           
   336                           	psect	bssBANK0
   337  00008E                     __pbssBANK0:
   338                           	callstack 0
   339  00008E                     	ds	6
   340  000094                     _nout:
   341                           	callstack 0
   342  000094                     	ds	2
   343  000096                     _width:
   344                           	callstack 0
   345  000096                     	ds	2
   346  000098                     _dbuf:
   347                           	callstack 0
   348  000098                     	ds	32
   349                           
   350                           	psect	dataBANK0
   351  0000B8                     __pdataBANK0:
   352                           	callstack 0
   353  0000B8                     _datos:
   354                           	callstack 0
   355  0000B8                     	ds	25
   356                           
   357                           	psect	cstackBANK0
   358  000060                     __pcstackBANK0:
   359                           	callstack 0
   360  000060                     vfpfcnvrt@ll:
   361                           	callstack 0
   362                           
   363                           ; 8 bytes @ 0x0
   364  000060                     	ds	8
   365  000068                     vfpfcnvrt@done:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x8
   369  000068                     	ds	2
   370  00006A                     _vfpfcnvrt$1999:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xA
   374  00006A                     	ds	2
   375  00006C                     ?_vfprintf:
   376                           	callstack 0
   377  00006C                     vfprintf@fp:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xC
   381  00006C                     	ds	2
   382  00006E                     vfprintf@fmt:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xE
   386  00006E                     	ds	2
   387  000070                     vfprintf@ap:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x10
   391  000070                     	ds	2
   392  000072                     ?_sprintf:
   393                           	callstack 0
   394  000072                     sprintf@s:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x12
   398  000072                     	ds	2
   399  000074                     sprintf@fmt:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x14
   403  000074                     	ds	8
   404  00007C                     sprintf@ap:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x1C
   408  00007C                     	ds	2
   409  00007E                     sprintf@f:
   410                           	callstack 0
   411                           
   412                           ; 6 bytes @ 0x1E
   413  00007E                     	ds	6
   414  000084                     appADC@data:
   415                           	callstack 0
   416  000084                     appBat@data:
   417                           	callstack 0
   418  000084                     appElemts@elements:
   419                           	callstack 0
   420  000084                     appSubGetData@data_Inout:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x24
   424  000084                     	ds	2
   425  000086                     ??_appBat:
   426  000086                     appSubGetData@cantidad:
   427                           	callstack 0
   428  000086                     appADC@lm35val:
   429                           	callstack 0
   430  000086                     appElemts@dataout:
   431                           	callstack 0
   432                           
   433                           ; 6 bytes @ 0x26
   434  000086                     	ds	2
   435  000088                     appSubGetData@inout:
   436                           	callstack 0
   437  000088                     _appBat$2296:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x28
   441  000088                     	ds	1
   442  000089                     ??_appGetElements:
   443                           
   444                           ; 1 bytes @ 0x29
   445  000089                     	ds	3
   446  00008C                     ??_main:
   447                           
   448                           ; 1 bytes @ 0x2C
   449  00008C                     	ds	2
   450                           
   451                           	psect	cstackCOMRAM
   452  000001                     __pcstackCOMRAM:
   453                           	callstack 0
   454  000001                     ??_isrL:
   455  000001                     
   456                           ; 1 bytes @ 0x0
   457  000001                     	ds	3
   458  000004                     ??_Lcd_Cmd:
   459  000004                     ??_Lcd_Chr_CP:
   460  000004                     ??_adcInit:
   461  000004                     ?_strlen:
   462                           	callstack 0
   463  000004                     ?_isdigit:
   464                           	callstack 0
   465  000004                     ?_isspace:
   466                           	callstack 0
   467  000004                     ?_adcGetValue:
   468                           	callstack 0
   469  000004                     ?___wmul:
   470                           	callstack 0
   471  000004                     ?___aodiv:
   472                           	callstack 0
   473  000004                     ?___aomod:
   474                           	callstack 0
   475  000004                     setServoAngle@pin:
   476                           	callstack 0
   477  000004                     teclado@valor:
   478                           	callstack 0
   479  000004                     appCounterInit@reload:
   480                           	callstack 0
   481  000004                     ___wmul@multiplier:
   482                           	callstack 0
   483  000004                     memset@dest:
   484                           	callstack 0
   485  000004                     isdigit@c:
   486                           	callstack 0
   487  000004                     isspace@c:
   488                           	callstack 0
   489  000004                     fputc@c:
   490                           	callstack 0
   491  000004                     strlen@s:
   492                           	callstack 0
   493  000004                     ___aodiv@dividend:
   494                           	callstack 0
   495  000004                     ___aomod@dividend:
   496                           	callstack 0
   497                           
   498                           ; 8 bytes @ 0x3
   499  000004                     	ds	1
   500  000005                     ??_setServoAngle:
   501  000005                     adcInit@ADC_PINs:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x4
   505  000005                     	ds	1
   506  000006                     ??_isdigit:
   507  000006                     ??_isspace:
   508  000006                     ??_adcGetValue:
   509  000006                     Lcd_Chr_CP@data:
   510                           	callstack 0
   511  000006                     Lcd_Cmd@data:
   512                           	callstack 0
   513  000006                     ___wmul@multiplicand:
   514                           	callstack 0
   515  000006                     memset@c:
   516                           	callstack 0
   517  000006                     fputc@fp:
   518                           	callstack 0
   519  000006                     strlen@a:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x5
   523  000006                     	ds	1
   524  000007                     ??_Lcd_Init:
   525  000007                     adcGetValue@PinADC:
   526                           	callstack 0
   527  000007                     Lcd_Out@x:
   528                           	callstack 0
   529  000007                     setServoAngle@angle:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x6
   533  000007                     	ds	1
   534  000008                     ??_fputc:
   535  000008                     ?___xxtofl:
   536                           	callstack 0
   537  000008                     Lcd_Init@i:
   538                           	callstack 0
   539  000008                     setServo@pulsos:
   540                           	callstack 0
   541  000008                     Lcd_Out@buffer:
   542                           	callstack 0
   543  000008                     ___wmul@product:
   544                           	callstack 0
   545  000008                     memset@n:
   546                           	callstack 0
   547  000008                     ___xxtofl@val:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x7
   551  000008                     	ds	1
   552  000009                     setServo@pin:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x8
   556  000009                     	ds	1
   557  00000A                     ??_memset:
   558  00000A                     ??_Lcd_Out:
   559  00000A                     setServo@angle:
   560                           	callstack 0
   561  00000A                     _isspace$2037:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x9
   565  00000A                     	ds	1
   566  00000B                     ?_atoi:
   567                           	callstack 0
   568  00000B                     setServo@i:
   569                           	callstack 0
   570  00000B                     atoi@s:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0xA
   574  00000B                     	ds	1
   575  00000C                     ??___xxtofl:
   576  00000C                     Lcd_Out@y:
   577                           	callstack 0
   578  00000C                     appSubGiveElemts@data:
   579                           	callstack 0
   580  00000C                     memset@k:
   581                           	callstack 0
   582  00000C                     ___aodiv@divisor:
   583                           	callstack 0
   584  00000C                     ___aomod@divisor:
   585                           	callstack 0
   586                           
   587                           ; 8 bytes @ 0xB
   588  00000C                     	ds	1
   589  00000D                     ??_atoi:
   590  00000D                     Lcd_Out@data:
   591                           	callstack 0
   592  00000D                     fputs@s:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0xC
   596  00000D                     	ds	1
   597  00000E                     ??_warning:
   598  00000E                     ??_appLCD_Init:
   599  00000E                     memset@s:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0xD
   603  00000E                     	ds	1
   604  00000F                     fputs@fp:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0xE
   608  00000F                     	ds	1
   609  000010                     ___xxtofl@sign:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0xF
   613  000010                     	ds	1
   614  000011                     ___xxtofl@exp:
   615                           	callstack 0
   616  000011                     fputs@c:
   617                           	callstack 0
   618  000011                     atoi@neg:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x10
   622  000011                     	ds	1
   623  000012                     fputs@i:
   624                           	callstack 0
   625  000012                     ___xxtofl@arg:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x11
   629  000012                     	ds	1
   630  000013                     _atoi$2019:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x12
   634  000013                     	ds	1
   635  000014                     ?_pad:
   636                           	callstack 0
   637  000014                     ___aodiv@counter:
   638                           	callstack 0
   639  000014                     ___aomod@counter:
   640                           	callstack 0
   641  000014                     pad@fp:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x13
   645  000014                     	ds	1
   646  000015                     ___aodiv@sign:
   647                           	callstack 0
   648  000015                     ___aomod@sign:
   649                           	callstack 0
   650  000015                     _atoi$2021:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x14
   654  000015                     	ds	1
   655  000016                     ?_abs:
   656                           	callstack 0
   657  000016                     ?___flmul:
   658                           	callstack 0
   659  000016                     pad@buf:
   660                           	callstack 0
   661  000016                     abs@a:
   662                           	callstack 0
   663  000016                     ___flmul@b:
   664                           	callstack 0
   665  000016                     ___aodiv@quotient:
   666                           	callstack 0
   667                           
   668                           ; 8 bytes @ 0x15
   669  000016                     	ds	1
   670  000017                     _atoi$2020:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x16
   674  000017                     	ds	1
   675  000018                     ??_abs:
   676  000018                     pad@p:
   677                           	callstack 0
   678  000018                     atoi@n:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x17
   682  000018                     	ds	2
   683  00001A                     ??_pad:
   684  00001A                     ___flmul@a:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x19
   688  00001A                     	ds	1
   689  00001B                     pad@i:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x1A
   693  00001B                     	ds	2
   694  00001D                     pad@w:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x1C
   698  00001D                     	ds	1
   699  00001E                     ??___flmul:
   700                           
   701                           ; 1 bytes @ 0x1D
   702  00001E                     	ds	1
   703  00001F                     ?_dtoa:
   704                           	callstack 0
   705  00001F                     dtoa@fp:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x1E
   709  00001F                     	ds	2
   710  000021                     dtoa@d:
   711                           	callstack 0
   712                           
   713                           ; 8 bytes @ 0x20
   714  000021                     	ds	1
   715  000022                     ___flmul@sign:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x21
   719  000022                     	ds	1
   720  000023                     ___flmul@grs:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x22
   724  000023                     	ds	4
   725  000027                     ___flmul@aexp:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x26
   729  000027                     	ds	1
   730  000028                     ___flmul@bexp:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x27
   734  000028                     	ds	1
   735  000029                     ??_dtoa:
   736  000029                     ___flmul@prod:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0x28
   740  000029                     	ds	4
   741  00002D                     ___flmul@temp:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x2C
   745  00002D                     	ds	2
   746  00002F                     ?___fldiv:
   747                           	callstack 0
   748  00002F                     ___fldiv@b:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x2E
   752  00002F                     	ds	2
   753  000031                     _dtoa$1984:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x30
   757  000031                     	ds	2
   758  000033                     dtoa@p:
   759                           	callstack 0
   760  000033                     ___fldiv@a:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x32
   764  000033                     	ds	2
   765  000035                     dtoa@w:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x34
   769  000035                     	ds	2
   770  000037                     ??___fldiv:
   771  000037                     dtoa@s:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x36
   775  000037                     	ds	2
   776  000039                     dtoa@n:
   777                           	callstack 0
   778                           
   779                           ; 8 bytes @ 0x38
   780  000039                     	ds	2
   781  00003B                     ___fldiv@rem:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x3A
   785  00003B                     	ds	4
   786  00003F                     ___fldiv@sign:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x3E
   790  00003F                     	ds	1
   791  000040                     ___fldiv@new_exp:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x3F
   795  000040                     	ds	1
   796  000041                     dtoa@i:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x40
   800  000041                     	ds	1
   801  000042                     ___fldiv@grs:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x41
   805  000042                     	ds	1
   806  000043                     ?_vfpfcnvrt:
   807                           	callstack 0
   808  000043                     vfpfcnvrt@fp:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x42
   812  000043                     	ds	2
   813  000045                     vfpfcnvrt@fmt:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x44
   817  000045                     	ds	1
   818  000046                     ___fldiv@bexp:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x45
   822  000046                     	ds	1
   823  000047                     ___fldiv@aexp:
   824                           	callstack 0
   825  000047                     vfpfcnvrt@ap:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x46
   829  000047                     	ds	1
   830  000048                     ?___fltol:
   831                           	callstack 0
   832  000048                     ___fltol@f1:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x47
   836  000048                     	ds	1
   837  000049                     ??_vfpfcnvrt:
   838                           
   839                           ; 1 bytes @ 0x48
   840  000049                     	ds	3
   841  00004C                     ??___fltol:
   842                           
   843                           ; 1 bytes @ 0x4B
   844  00004C                     	ds	1
   845  00004D                     vfprintf@cfmt:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x4C
   849  00004D                     	ds	3
   850  000050                     ___fltol@sign1:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x4F
   854  000050                     	ds	1
   855  000051                     ___fltol@exp1:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x50
   859  000051                     	ds	1
   860  000052                     ?___awmod:
   861                           	callstack 0
   862  000052                     ___awmod@dividend:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x51
   866  000052                     	ds	2
   867  000054                     ___awmod@divisor:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x53
   871  000054                     	ds	2
   872  000056                     ___awmod@counter:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x55
   876  000056                     	ds	1
   877  000057                     ___awmod@sign:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x56
   881  000057                     	ds	1
   882  000058                     
   883                           ; 1 bytes @ 0x57
   884 ;;
   885 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   886 ;;
   887 ;; *************** function _main *****************
   888 ;; Defined at:
   889 ;;		line 12 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   903 ;;      Params:         0       0       0       0       0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0
   905 ;;      Temps:          0       2       0       0       0       0       0       0       0
   906 ;;      Totals:         0       2       0       0       0       0       0       0       0
   907 ;;Total ram usage:        2 bytes
   908 ;; Hardware stack levels required when called:   12
   909 ;; This function calls:
   910 ;;		_appGetElements
   911 ;;		_appInit
   912 ;;		_appStateInitial
   913 ;;		_appStateRecolectData
   914 ;;		_warning
   915 ;; This function is called by:
   916 ;;		Startup code after reset
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text0
   921  002E04                     __ptext0:
   922                           	callstack 0
   923  002E04                     _main:
   924                           	callstack 19
   925  002E04                     
   926                           ;main.c: 14:     TRISB = 0xF0;
   927  002E04  0EF0               	movlw	240
   928  002E06  6E93               	movwf	147,c	;volatile
   929  002E08                     
   930                           ;main.c: 15:     INTCON2bits.RBPU = 0;
   931  002E08  9EF1               	bcf	241,7,c	;volatile
   932  002E0A                     
   933                           ;main.c: 16:     TRISAbits.TRISA2 = 0;
   934  002E0A  9492               	bcf	146,2,c	;volatile
   935  002E0C                     
   936                           ;main.c: 17:     TRISAbits.TRISA5 = 0;
   937  002E0C  9A92               	bcf	146,5,c	;volatile
   938  002E0E                     
   939                           ;main.c: 18:     appInit();
   940  002E0E  EC84  F019         	call	_appInit	;wreg free
   941  002E12                     l4661:
   942                           
   943                           ;main.c: 20:     {;main.c: 21:         LATAbits.LA2= !LATAbits.LA2;
   944  002E12  A489               	btfss	137,2,c	;volatile
   945  002E14  EF0E  F017         	goto	u4551
   946  002E18  EF13  F017         	goto	u4550
   947  002E1C                     u4551:
   948  002E1C  0100               	movlb	0	; () banked
   949  002E1E  6B8C               	clrf	??_main& (0+255),b
   950  002E20  2B8C               	incf	??_main& (0+255),f,b
   951  002E22  EF15  F017         	goto	u4568
   952  002E26                     u4550:
   953  002E26  0100               	movlb	0	; () banked
   954  002E28  6B8C               	clrf	??_main& (0+255),b
   955  002E2A                     u4568:
   956  002E2A  478C               	rlncf	??_main& (0+255),f,b
   957  002E2C  478C               	rlncf	??_main& (0+255),f,b
   958  002E2E  5089               	movf	137,w,c	;volatile
   959  002E30  198C               	xorwf	??_main& (0+255),w,b
   960  002E32  0BFB               	andlw	-5
   961  002E34  198C               	xorwf	??_main& (0+255),w,b
   962  002E36  6E89               	movwf	137,c	;volatile
   963  002E38                     
   964                           ; BSR set to: 0
   965                           ;main.c: 22:         _delay((unsigned long)((100)*(12000000/4000.0)));
   966  002E38  0E02               	movlw	2
   967  002E3A  0100               	movlb	0	; () banked
   968  002E3C  6F8D               	movwf	(??_main+1)& (0+255),b
   969  002E3E  0E86               	movlw	134
   970  002E40  6F8C               	movwf	??_main& (0+255),b
   971  002E42  0E99               	movlw	153
   972  002E44                     u4647:
   973  002E44  2EE8               	decfsz	wreg,f,c
   974  002E46  D7FE               	bra	u4647
   975  002E48  2F8C               	decfsz	??_main& (0+255),f,b
   976  002E4A  D7FC               	bra	u4647
   977  002E4C  2F8D               	decfsz	(??_main+1)& (0+255),f,b
   978  002E4E  D7FA               	bra	u4647
   979  002E50                     
   980                           ;main.c: 23:         datos.nextFunc();
   981  002E50  EE20  F0CF         	lfsr	2,_datos+23
   982  002E54  D802               	call	u4578
   983  002E56  EF37  F017         	goto	u4579
   984  002E5A                     u4578:
   985  002E5A  0005               	push	
   986  002E5C  6EFA               	movwf	pclath,c
   987  002E5E  50DE               	movf	postinc2,w,c
   988  002E60  6EFD               	movwf	tosl,c
   989  002E62  50DE               	movf	postinc2,w,c
   990  002E64  6EFE               	movwf	tosh,c
   991  002E66  50F8               	movf	tblptru,w,c
   992  002E68  6EFF               	movwf	tosu,c
   993  002E6A  50FA               	movf	pclath,w,c
   994  002E6C  0012               	return		;indir
   995  002E6E                     u4579:
   996  002E6E  EF09  F017         	goto	l4661
   997  002E72  EF5E  F000         	goto	start
   998  002E76                     __end_of_main:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _appGetElements *****************
  1002 ;; Defined at:
  1003 ;;		line 67 in file "app.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1017 ;;      Params:         0       0       0       0       0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1019 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1020 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1021 ;;Total ram usage:        2 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:   11
  1024 ;; This function calls:
  1025 ;;		_Lcd_Cmd
  1026 ;;		_appSubGetData
  1027 ;;		_appSubGiveElemts
  1028 ;;		_appTimerStart
  1029 ;;		_appTimerStop
  1030 ;; This function is called by:
  1031 ;;		_isrL
  1032 ;;		_main
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text1
  1037  002E76                     __ptext1:
  1038                           	callstack 0
  1039  002E76                     _appGetElements:
  1040                           	callstack 19
  1041  002E76                     
  1042                           ;app.c: 69:     datos.state = 2;
  1043  002E76  0E02               	movlw	2
  1044  002E78  0100               	movlb	0	; () banked
  1045  002E7A  6FBB               	movwf	(_datos+3)& (0+255),b
  1046  002E7C                     
  1047                           ; BSR set to: 0
  1048                           ;app.c: 70:     appTimerStop();
  1049  002E7C  ECE0  F019         	call	_appTimerStop	;wreg free
  1050  002E80                     
  1051                           ;app.c: 71:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1052  002E80  0E01               	movlw	1
  1053  002E82  EC6E  F012         	call	_Lcd_Cmd
  1054  002E86  0E02               	movlw	2
  1055  002E88  0100               	movlb	0	; () banked
  1056  002E8A  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
  1057  002E8C  0E86               	movlw	134
  1058  002E8E  6F89               	movwf	??_appGetElements& (0+255),b
  1059  002E90  0E99               	movlw	153
  1060  002E92                     u4657:
  1061  002E92  2EE8               	decfsz	wreg,f,c
  1062  002E94  D7FE               	bra	u4657
  1063  002E96  2F89               	decfsz	??_appGetElements& (0+255),f,b
  1064  002E98  D7FC               	bra	u4657
  1065  002E9A  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1066  002E9C  D7FA               	bra	u4657
  1067  002E9E                     
  1068                           ;app.c: 72:     appSubGetData(&datos);
  1069  002E9E  0EB8               	movlw	low _datos
  1070  002EA0  0100               	movlb	0	; () banked
  1071  002EA2  6F84               	movwf	appSubGetData@data_Inout& (0+255),b
  1072  002EA4  0E00               	movlw	high _datos
  1073  002EA6  6F85               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1074  002EA8  EC14  F014         	call	_appSubGetData	;wreg free
  1075  002EAC                     
  1076                           ;app.c: 73:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1077  002EAC  0E01               	movlw	1
  1078  002EAE  EC6E  F012         	call	_Lcd_Cmd
  1079  002EB2  0E02               	movlw	2
  1080  002EB4  0100               	movlb	0	; () banked
  1081  002EB6  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
  1082  002EB8  0E86               	movlw	134
  1083  002EBA  6F89               	movwf	??_appGetElements& (0+255),b
  1084  002EBC  0E99               	movlw	153
  1085  002EBE                     u4667:
  1086  002EBE  2EE8               	decfsz	wreg,f,c
  1087  002EC0  D7FE               	bra	u4667
  1088  002EC2  2F89               	decfsz	??_appGetElements& (0+255),f,b
  1089  002EC4  D7FC               	bra	u4667
  1090  002EC6  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1091  002EC8  D7FA               	bra	u4667
  1092  002ECA                     
  1093                           ;app.c: 74:     appSubGiveElemts(&datos);
  1094  002ECA  0EB8               	movlw	low _datos
  1095  002ECC  6E0C               	movwf	appSubGiveElemts@data^0,c
  1096  002ECE  0E00               	movlw	high _datos
  1097  002ED0  6E0D               	movwf	(appSubGiveElemts@data+1)^0,c
  1098  002ED2  ECC4  F019         	call	_appSubGiveElemts	;wreg free
  1099  002ED6                     
  1100                           ;app.c: 75:     datos.nextFunc = appStateInitial;
  1101  002ED6  0E80               	movlw	low _appStateInitial
  1102  002ED8  0100               	movlb	0	; () banked
  1103  002EDA  6FCF               	movwf	(_datos+23)& (0+255),b
  1104  002EDC  0E30               	movlw	high _appStateInitial
  1105  002EDE  6FD0               	movwf	(_datos+24)& (0+255),b
  1106  002EE0                     
  1107                           ; BSR set to: 0
  1108                           ;app.c: 77:     appTimerStart();
  1109  002EE0  ECCF  F019         	call	_appTimerStart	;wreg free
  1110  002EE4  0012               	return		;funcret
  1111  002EE6                     __end_of_appGetElements:
  1112                           	callstack 0
  1113                           
  1114 ;; *************** function _appStateRecolectData *****************
  1115 ;; Defined at:
  1116 ;;		line 33 in file "app.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1134 ;;Total ram usage:        0 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:   11
  1137 ;; This function calls:
  1138 ;;		_appADC
  1139 ;;		_appBat
  1140 ;;		_appCounterStop
  1141 ;;		_appElemts
  1142 ;;		_setServo
  1143 ;; This function is called by:
  1144 ;;		_isrL
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text2
  1150  002CEE                     __ptext2:
  1151                           	callstack 0
  1152  002CEE                     _appStateRecolectData:
  1153                           	callstack 19
  1154  002CEE                     
  1155                           ;app.c: 35:     appADC(&datos);
  1156  002CEE  0EB8               	movlw	low _datos
  1157  002CF0  0100               	movlb	0	; () banked
  1158  002CF2  6F84               	movwf	appADC@data& (0+255),b
  1159  002CF4  0E00               	movlw	high _datos
  1160  002CF6  6F85               	movwf	(appADC@data+1)& (0+255),b
  1161  002CF8  ECF8  F00D         	call	_appADC	;wreg free
  1162                           
  1163                           ;app.c: 36:     appBat(&datos);
  1164  002CFC  0EB8               	movlw	low _datos
  1165  002CFE  0100               	movlb	0	; () banked
  1166  002D00  6F84               	movwf	appBat@data& (0+255),b
  1167  002D02  0E00               	movlw	high _datos
  1168  002D04  6F85               	movwf	(appBat@data+1)& (0+255),b
  1169  002D06  EC2A  F00C         	call	_appBat	;wreg free
  1170                           
  1171                           ;app.c: 37:     appElemts(&datos.elements);
  1172  002D0A  0EB9               	movlw	low (_datos+1)
  1173  002D0C  0100               	movlb	0	; () banked
  1174  002D0E  6F84               	movwf	appElemts@elements& (0+255),b
  1175  002D10  0E00               	movlw	high (_datos+1)
  1176  002D12  6F85               	movwf	(appElemts@elements+1)& (0+255),b
  1177  002D14  EC64  F018         	call	_appElemts	;wreg free
  1178  002D18                     
  1179                           ;app.c: 38:     if(datos.state == 2)
  1180  002D18  0E02               	movlw	2
  1181  002D1A  0100               	movlb	0	; () banked
  1182  002D1C  19BB               	xorwf	(_datos+3)& (0+255),w,b
  1183  002D1E  A4D8               	btfss	status,2,c
  1184  002D20  EF94  F016         	goto	u4531
  1185  002D24  EF96  F016         	goto	u4530
  1186  002D28                     u4531:
  1187  002D28  EFBA  F016         	goto	l4629
  1188  002D2C                     u4530:
  1189  002D2C                     
  1190                           ; BSR set to: 0
  1191                           ;app.c: 39:     {;app.c: 40:         if(datos.elements == TMR0)
  1192  002D2C  50D6               	movf	214,w,c	;volatile
  1193  002D2E  19B9               	xorwf	(_datos+1)& (0+255),w,b
  1194  002D30  E107               	bnz	u4541
  1195  002D32  50D7               	movf	215,w,c	;volatile
  1196  002D34  19BA               	xorwf	(_datos+2)& (0+255),w,b
  1197  002D36  A4D8               	btfss	status,2,c
  1198  002D38  EFA0  F016         	goto	u4541
  1199  002D3C  EFA2  F016         	goto	u4540
  1200  002D40                     u4541:
  1201  002D40  EFBA  F016         	goto	l4629
  1202  002D44                     u4540:
  1203  002D44                     
  1204                           ; BSR set to: 0
  1205                           ;app.c: 41:         {;app.c: 42:             datos.elements = (int16_t)TMR0;
  1206  002D44  CFD6 F0B9          	movff	4054,_datos+1	;volatile
  1207  002D48  CFD7 F0BA          	movff	4055,_datos+2	;volatile
  1208  002D4C                     
  1209                           ; BSR set to: 0
  1210                           ;app.c: 43:             appCounterStop();
  1211  002D4C  ECDE  F019         	call	_appCounterStop	;wreg free
  1212  002D50                     
  1213                           ;app.c: 44:             datos.state = 0;
  1214  002D50  0E00               	movlw	0
  1215  002D52  0100               	movlb	0	; () banked
  1216  002D54  6FBB               	movwf	(_datos+3)& (0+255),b
  1217  002D56                     
  1218                           ; BSR set to: 0
  1219                           ;app.c: 45:             setServo(33,10,2);
  1220  002D56  0E0A               	movlw	10
  1221  002D58  6E08               	movwf	setServo@pulsos^0,c
  1222  002D5A  0E02               	movlw	2
  1223  002D5C  6E09               	movwf	setServo@pin^0,c
  1224  002D5E  0E21               	movlw	33
  1225  002D60  EC6F  F019         	call	_setServo
  1226  002D64                     
  1227                           ;app.c: 46:             LATAbits.LA5 = 0;
  1228  002D64  9A89               	bcf	137,5,c	;volatile
  1229  002D66                     
  1230                           ;app.c: 47:             setServo(45,10,0);
  1231  002D66  0E0A               	movlw	10
  1232  002D68  6E08               	movwf	setServo@pulsos^0,c
  1233  002D6A  0E00               	movlw	0
  1234  002D6C  6E09               	movwf	setServo@pin^0,c
  1235  002D6E  0E2D               	movlw	45
  1236  002D70  EC6F  F019         	call	_setServo
  1237  002D74                     l4629:
  1238                           
  1239                           ;app.c: 50:     datos.nextFunc = appStateInitial;
  1240  002D74  0E80               	movlw	low _appStateInitial
  1241  002D76  0100               	movlb	0	; () banked
  1242  002D78  6FCF               	movwf	(_datos+23)& (0+255),b
  1243  002D7A  0E30               	movlw	high _appStateInitial
  1244  002D7C  6FD0               	movwf	(_datos+24)& (0+255),b
  1245  002D7E                     
  1246                           ; BSR set to: 0
  1247  002D7E  0012               	return		;funcret
  1248  002D80                     __end_of_appStateRecolectData:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _appStateInitial *****************
  1252 ;; Defined at:
  1253 ;;		line 52 in file "app.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    4
  1274 ;; This function calls:
  1275 ;;		_setServo
  1276 ;;		_teclado
  1277 ;; This function is called by:
  1278 ;;		_appStateRecolectData
  1279 ;;		_appGetElements
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text3
  1285  003080                     __ptext3:
  1286                           	callstack 0
  1287  003080                     _appStateInitial:
  1288                           	callstack 26
  1289  003080                     
  1290                           ;app.c: 55:     teclado(&datos.character);
  1291  003080  0EBE               	movlw	low (_datos+6)
  1292  003082  6E04               	movwf	teclado@valor^0,c
  1293  003084  0E00               	movlw	high (_datos+6)
  1294  003086  6E05               	movwf	(teclado@valor+1)^0,c
  1295  003088  EC35  F00B         	call	_teclado	;wreg free
  1296  00308C                     
  1297                           ;app.c: 56:     if(datos.character != 0)
  1298  00308C  0100               	movlb	0	; () banked
  1299  00308E  51BE               	movf	(_datos+6)& (0+255),w,b
  1300  003090  B4D8               	btfsc	status,2,c
  1301  003092  EF4D  F018         	goto	u3711
  1302  003096  EF4F  F018         	goto	u3710
  1303  00309A                     u3711:
  1304  00309A  EF55  F018         	goto	l339
  1305  00309E                     u3710:
  1306  00309E                     
  1307                           ; BSR set to: 0
  1308                           ;app.c: 57:     {;app.c: 58:         datos.state = 1;
  1309  00309E  0E01               	movlw	1
  1310  0030A0  6FBB               	movwf	(_datos+3)& (0+255),b
  1311                           
  1312                           ;app.c: 59:         datos.character = 0;
  1313  0030A2  0E00               	movlw	0
  1314  0030A4  6FBE               	movwf	(_datos+6)& (0+255),b
  1315                           
  1316                           ;app.c: 60:     }
  1317  0030A6  EF63  F018         	goto	l342
  1318  0030AA                     l339:
  1319                           
  1320                           ; BSR set to: 0
  1321  0030AA  A680               	btfss	128,3,c	;volatile
  1322  0030AC  EF5A  F018         	goto	u3721
  1323  0030B0  EF5C  F018         	goto	u3720
  1324  0030B4                     u3721:
  1325  0030B4  EF63  F018         	goto	l342
  1326  0030B8                     u3720:
  1327  0030B8                     
  1328                           ; BSR set to: 0
  1329                           ;app.c: 62:     {;app.c: 63:         setServo(33,10,0);
  1330  0030B8  0E0A               	movlw	10
  1331  0030BA  6E08               	movwf	setServo@pulsos^0,c
  1332  0030BC  0E00               	movlw	0
  1333  0030BE  6E09               	movwf	setServo@pin^0,c
  1334  0030C0  0E21               	movlw	33
  1335  0030C2  EC6F  F019         	call	_setServo
  1336  0030C6                     l342:
  1337  0030C6  0012               	return		;funcret
  1338  0030C8                     __end_of_appStateInitial:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _warning *****************
  1342 ;; Defined at:
  1343 ;;		line 109 in file "app.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1359 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1360 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1361 ;;Total ram usage:        2 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    4
  1364 ;; This function calls:
  1365 ;;		_Lcd_Cmd
  1366 ;;		_Lcd_Out
  1367 ;; This function is called by:
  1368 ;;		_isrH
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text4
  1374  002FEC                     __ptext4:
  1375                           	callstack 0
  1376  002FEC                     _warning:
  1377                           	callstack 26
  1378  002FEC                     
  1379                           ;app.c: 111:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1380  002FEC  0E01               	movlw	1
  1381  002FEE  EC6E  F012         	call	_Lcd_Cmd
  1382  002FF2  0E02               	movlw	2
  1383  002FF4  6E0F               	movwf	(??_warning+1)^0,c
  1384  002FF6  0E86               	movlw	134
  1385  002FF8  6E0E               	movwf	??_warning^0,c
  1386  002FFA  0E99               	movlw	153
  1387  002FFC                     u4677:
  1388  002FFC  2EE8               	decfsz	wreg,f,c
  1389  002FFE  D7FE               	bra	u4677
  1390  003000  2E0E               	decfsz	??_warning^0,f,c
  1391  003002  D7FC               	bra	u4677
  1392  003004  2E0F               	decfsz	(??_warning+1)^0,f,c
  1393  003006  D7FA               	bra	u4677
  1394  003008  F000               	nop	
  1395  00300A                     
  1396                           ;app.c: 112:     LATAbits.LA5 = 0;
  1397  00300A  9A89               	bcf	137,5,c	;volatile
  1398  00300C                     l3989:
  1399                           
  1400                           ;app.c: 114:     {;app.c: 115:         Lcd_Out(1,0, (const int8_t*)"Sin vacunas");
  1401  00300C  0E00               	movlw	0
  1402  00300E  6E07               	movwf	Lcd_Out@x^0,c
  1403  003010  0E2E               	movlw	low STR_8
  1404  003012  6E08               	movwf	Lcd_Out@buffer^0,c
  1405  003014  0E08               	movlw	high STR_8
  1406  003016  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1407  003018  0E01               	movlw	1
  1408  00301A  EC93  F014         	call	_Lcd_Out
  1409  00301E                     
  1410                           ;app.c: 116:         Lcd_Out(2,0, (const int8_t*)"Recarga Porfavor");
  1411  00301E  0E00               	movlw	0
  1412  003020  6E07               	movwf	Lcd_Out@x^0,c
  1413  003022  0E01               	movlw	low STR_9
  1414  003024  6E08               	movwf	Lcd_Out@buffer^0,c
  1415  003026  0E08               	movlw	high STR_9
  1416  003028  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1417  00302A  0E02               	movlw	2
  1418  00302C  EC93  F014         	call	_Lcd_Out
  1419  003030  EF06  F018         	goto	l3989
  1420  003034  0012               	return		;funcret
  1421  003036                     __end_of_warning:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _appElemts *****************
  1425 ;; Defined at:
  1426 ;;		line 151 in file "servo.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  elements        2   36[BANK0 ] PTR const short 
  1429 ;;		 -> datos.elements(2), datos(25), 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  dataout         6   38[BANK0 ] unsigned char [6]
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1441 ;;      Params:         0       2       0       0       0       0       0       0       0
  1442 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1444 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1445 ;;Total ram usage:        8 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:   10
  1448 ;; This function calls:
  1449 ;;		_Lcd_Out
  1450 ;;		_sprintf
  1451 ;; This function is called by:
  1452 ;;		_appStateRecolectData
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text5
  1457  0030C8                     __ptext5:
  1458                           	callstack 0
  1459  0030C8                     _appElemts:
  1460                           	callstack 19
  1461  0030C8                     
  1462                           ;servo.c: 151: void appElemts(const int16_t * elements);servo.c: 152: {;servo.c: 153:   
      +                            uint8_t dataout[6] = {0};
  1463  0030C8  EE20  F086         	lfsr	2,appElemts@dataout
  1464  0030CC  0E05               	movlw	5
  1465  0030CE                     u4491:
  1466  0030CE  6ADE               	clrf	postinc2,c
  1467  0030D0  06E8               	decf	wreg,f,c
  1468  0030D2  E2FD               	bc	u4491
  1469  0030D4                     
  1470                           ;servo.c: 154:     sprintf((char *)dataout,"#:%d",(256 - (TMR0)));
  1471  0030D4  0E86               	movlw	low appElemts@dataout
  1472  0030D6  0100               	movlb	0	; () banked
  1473  0030D8  6F72               	movwf	sprintf@s& (0+255),b
  1474  0030DA  0E00               	movlw	high appElemts@dataout
  1475  0030DC  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1476  0030DE  0E55               	movlw	low STR_5
  1477  0030E0  6F74               	movwf	sprintf@fmt& (0+255),b
  1478  0030E2  0E08               	movlw	high STR_5
  1479  0030E4  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1480  0030E6  50D6               	movf	214,w,c	;volatile
  1481  0030E8  0800               	sublw	0
  1482  0030EA  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1483  0030EC  50D7               	movf	215,w,c	;volatile
  1484  0030EE  A0D8               	btfss	status,0,c
  1485  0030F0  2AE8               	incf	wreg,f,c
  1486  0030F2  0801               	sublw	1
  1487  0030F4  6F77               	movwf	(?_sprintf+5)& (0+255),b
  1488  0030F6  ECA4  F017         	call	_sprintf	;wreg free
  1489  0030FA                     
  1490                           ;servo.c: 155:     Lcd_Out(2,10, (int8_t*)dataout);
  1491  0030FA  0E0A               	movlw	10
  1492  0030FC  6E07               	movwf	Lcd_Out@x^0,c
  1493  0030FE  0E86               	movlw	low appElemts@dataout
  1494  003100  6E08               	movwf	Lcd_Out@buffer^0,c
  1495  003102  0E00               	movlw	high appElemts@dataout
  1496  003104  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1497  003106  0E02               	movlw	2
  1498  003108  EC93  F014         	call	_Lcd_Out
  1499  00310C  0012               	return		;funcret
  1500  00310E                     __end_of_appElemts:
  1501                           	callstack 0
  1502                           
  1503 ;; *************** function _appCounterStop *****************
  1504 ;; Defined at:
  1505 ;;		line 146 in file "servo.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		None
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    2
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_appStateRecolectData
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text6
  1534  0033BC                     __ptext6:
  1535                           	callstack 0
  1536  0033BC                     _appCounterStop:
  1537                           	callstack 27
  1538  0033BC                     
  1539                           ;servo.c: 148:     T0CONbits.TMR0ON = 0;
  1540  0033BC  9ED5               	bcf	213,7,c	;volatile
  1541  0033BE  0012               	return		;funcret
  1542  0033C0                     __end_of_appCounterStop:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _appBat *****************
  1546 ;; Defined at:
  1547 ;;		line 73 in file "adc.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  data            2   36[BANK0 ] PTR struct _state
  1550 ;;		 -> datos(25), 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1562 ;;      Params:         0       2       0       0       0       0       0       0       0
  1563 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1564 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1565 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1566 ;;Total ram usage:        8 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:   10
  1569 ;; This function calls:
  1570 ;;		_Lcd_Out
  1571 ;;		___fldiv
  1572 ;;		___flmul
  1573 ;;		___fltol
  1574 ;;		___xxtofl
  1575 ;;		_adcGetValue
  1576 ;;		_memset
  1577 ;;		_sprintf
  1578 ;; This function is called by:
  1579 ;;		_appStateRecolectData
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text7
  1584  001854                     __ptext7:
  1585                           	callstack 0
  1586  001854                     _appBat:
  1587                           	callstack 19
  1588  001854                     
  1589                           ;adc.c: 73: void appBat(StateMachine *data);adc.c: 74: {;adc.c: 75:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1590  001854  0E07               	movlw	7
  1591  001856  0100               	movlb	0	; () banked
  1592  001858  2584               	addwf	appBat@data& (0+255),w,b
  1593  00185A  6E04               	movwf	memset@dest^0,c
  1594  00185C  0E00               	movlw	0
  1595  00185E  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1596  001860  6E05               	movwf	(memset@dest+1)^0,c
  1597  001862  0E00               	movlw	0
  1598  001864  6E07               	movwf	(memset@c+1)^0,c
  1599  001866  0E00               	movlw	0
  1600  001868  6E06               	movwf	memset@c^0,c
  1601  00186A  0E00               	movlw	0
  1602  00186C  6E09               	movwf	(memset@n+1)^0,c
  1603  00186E  0E10               	movlw	16
  1604  001870  6E08               	movwf	memset@n^0,c
  1605  001872  EC5A  F010         	call	_memset	;wreg free
  1606                           
  1607                           ;adc.c: 80:     data->bat = adcGetValue(1);
  1608  001876  0E01               	movlw	1
  1609  001878  ECEA  F018         	call	_adcGetValue
  1610  00187C  0100               	movlb	0	; () banked
  1611  00187E  EE20 F004          	lfsr	2,4
  1612  001882  5184               	movf	appBat@data& (0+255),w,b
  1613  001884  26D9               	addwf	fsr2l,f,c
  1614  001886  5185               	movf	(appBat@data+1)& (0+255),w,b
  1615  001888  22DA               	addwfc	fsr2h,f,c
  1616  00188A  C004  FFDE         	movff	?_adcGetValue,postinc2
  1617  00188E  C005  FFDD         	movff	?_adcGetValue+1,postdec2
  1618  001892                     
  1619                           ; BSR set to: 0
  1620                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1621  001892  0E00               	movlw	0
  1622  001894  6E33               	movwf	___fldiv@a^0,c
  1623  001896  0E00               	movlw	0
  1624  001898  6E34               	movwf	(___fldiv@a+1)^0,c
  1625  00189A  0E80               	movlw	128
  1626  00189C  6E35               	movwf	(___fldiv@a+2)^0,c
  1627  00189E  0E44               	movlw	68
  1628  0018A0  6E36               	movwf	(___fldiv@a+3)^0,c
  1629  0018A2  0E00               	movlw	0
  1630  0018A4  6E1A               	movwf	___flmul@a^0,c
  1631  0018A6  0E00               	movlw	0
  1632  0018A8  6E1B               	movwf	(___flmul@a+1)^0,c
  1633  0018AA  0EA0               	movlw	160
  1634  0018AC  6E1C               	movwf	(___flmul@a+2)^0,c
  1635  0018AE  0E40               	movlw	64
  1636  0018B0  6E1D               	movwf	(___flmul@a+3)^0,c
  1637  0018B2  EE20 F004          	lfsr	2,4
  1638  0018B6  5184               	movf	appBat@data& (0+255),w,b
  1639  0018B8  26D9               	addwf	fsr2l,f,c
  1640  0018BA  5185               	movf	(appBat@data+1)& (0+255),w,b
  1641  0018BC  22DA               	addwfc	fsr2h,f,c
  1642  0018BE  CFDE F086          	movff	postinc2,??_appBat
  1643  0018C2  CFDD F087          	movff	postdec2,??_appBat+1
  1644  0018C6  C086  F008         	movff	??_appBat,___xxtofl@val
  1645  0018CA  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1646  0018CE  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1647  0018D0  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1648  0018D2  0E00               	movlw	0
  1649  0018D4  EC1E  F00D         	call	___xxtofl
  1650  0018D8  C008  F016         	movff	?___xxtofl,___flmul@b
  1651  0018DC  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1652  0018E0  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1653  0018E4  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1654  0018E8  EC2E  F004         	call	___flmul	;wreg free
  1655  0018EC  C016  F02F         	movff	?___flmul,___fldiv@b
  1656  0018F0  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1657  0018F4  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1658  0018F8  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1659  0018FC  EC43  F006         	call	___fldiv	;wreg free
  1660  001900  C02F  F088         	movff	?___fldiv,_appBat$2296
  1661  001904  C030  F089         	movff	?___fldiv+1,_appBat$2296+1
  1662  001908  C031  F08A         	movff	?___fldiv+2,_appBat$2296+2
  1663  00190C  C032  F08B         	movff	?___fldiv+3,_appBat$2296+3
  1664  001910                     
  1665                           ;adc.c: 81:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1666  001910  0E00               	movlw	0
  1667  001912  6E1A               	movwf	___flmul@a^0,c
  1668  001914  0E00               	movlw	0
  1669  001916  6E1B               	movwf	(___flmul@a+1)^0,c
  1670  001918  0EC8               	movlw	200
  1671  00191A  6E1C               	movwf	(___flmul@a+2)^0,c
  1672  00191C  0E42               	movlw	66
  1673  00191E  6E1D               	movwf	(___flmul@a+3)^0,c
  1674  001920  C088  F016         	movff	_appBat$2296,___flmul@b
  1675  001924  C089  F017         	movff	_appBat$2296+1,___flmul@b+1
  1676  001928  C08A  F018         	movff	_appBat$2296+2,___flmul@b+2
  1677  00192C  C08B  F019         	movff	_appBat$2296+3,___flmul@b+3
  1678  001930  EC2E  F004         	call	___flmul	;wreg free
  1679  001934  C016  F048         	movff	?___flmul,___fltol@f1
  1680  001938  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1681  00193C  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1682  001940  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1683  001944  EC91  F013         	call	___fltol	;wreg free
  1684  001948  0100               	movlb	0	; () banked
  1685  00194A  EE20 F004          	lfsr	2,4
  1686  00194E  5184               	movf	appBat@data& (0+255),w,b
  1687  001950  26D9               	addwf	fsr2l,f,c
  1688  001952  5185               	movf	(appBat@data+1)& (0+255),w,b
  1689  001954  22DA               	addwfc	fsr2h,f,c
  1690  001956  C048  FFDE         	movff	?___fltol,postinc2
  1691  00195A  C049  FFDD         	movff	?___fltol+1,postdec2
  1692  00195E                     
  1693                           ; BSR set to: 0
  1694                           ;adc.c: 82:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  1695  00195E  0E00               	movlw	0
  1696  001960  6E33               	movwf	___fldiv@a^0,c
  1697  001962  0E00               	movlw	0
  1698  001964  6E34               	movwf	(___fldiv@a+1)^0,c
  1699  001966  0EFA               	movlw	250
  1700  001968  6E35               	movwf	(___fldiv@a+2)^0,c
  1701  00196A  0E43               	movlw	67
  1702  00196C  6E36               	movwf	(___fldiv@a+3)^0,c
  1703  00196E  0E00               	movlw	0
  1704  001970  6E1A               	movwf	___flmul@a^0,c
  1705  001972  0E00               	movlw	0
  1706  001974  6E1B               	movwf	(___flmul@a+1)^0,c
  1707  001976  0EC8               	movlw	200
  1708  001978  6E1C               	movwf	(___flmul@a+2)^0,c
  1709  00197A  0E42               	movlw	66
  1710  00197C  6E1D               	movwf	(___flmul@a+3)^0,c
  1711  00197E  EE20 F004          	lfsr	2,4
  1712  001982  5184               	movf	appBat@data& (0+255),w,b
  1713  001984  26D9               	addwf	fsr2l,f,c
  1714  001986  5185               	movf	(appBat@data+1)& (0+255),w,b
  1715  001988  22DA               	addwfc	fsr2h,f,c
  1716  00198A  CFDE F086          	movff	postinc2,??_appBat
  1717  00198E  CFDD F087          	movff	postdec2,??_appBat+1
  1718  001992  C086  F008         	movff	??_appBat,___xxtofl@val
  1719  001996  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1720  00199A  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1721  00199C  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1722  00199E  0E00               	movlw	0
  1723  0019A0  EC1E  F00D         	call	___xxtofl
  1724  0019A4  C008  F016         	movff	?___xxtofl,___flmul@b
  1725  0019A8  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1726  0019AC  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1727  0019B0  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1728  0019B4  EC2E  F004         	call	___flmul	;wreg free
  1729  0019B8  C016  F02F         	movff	?___flmul,___fldiv@b
  1730  0019BC  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1731  0019C0  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1732  0019C4  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1733  0019C8  EC43  F006         	call	___fldiv	;wreg free
  1734  0019CC  C02F  F048         	movff	?___fldiv,___fltol@f1
  1735  0019D0  C030  F049         	movff	?___fldiv+1,___fltol@f1+1
  1736  0019D4  C031  F04A         	movff	?___fldiv+2,___fltol@f1+2
  1737  0019D8  C032  F04B         	movff	?___fldiv+3,___fltol@f1+3
  1738  0019DC  EC91  F013         	call	___fltol	;wreg free
  1739  0019E0  0100               	movlb	0	; () banked
  1740  0019E2  EE20 F004          	lfsr	2,4
  1741  0019E6  5184               	movf	appBat@data& (0+255),w,b
  1742  0019E8  26D9               	addwf	fsr2l,f,c
  1743  0019EA  5185               	movf	(appBat@data+1)& (0+255),w,b
  1744  0019EC  22DA               	addwfc	fsr2h,f,c
  1745  0019EE  C048  FFDE         	movff	?___fltol,postinc2
  1746  0019F2  C049  FFDD         	movff	?___fltol+1,postdec2
  1747  0019F6                     
  1748                           ; BSR set to: 0
  1749                           ;adc.c: 83:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  1750  0019F6  0E07               	movlw	7
  1751  0019F8  2584               	addwf	appBat@data& (0+255),w,b
  1752  0019FA  6F72               	movwf	sprintf@s& (0+255),b
  1753  0019FC  0E00               	movlw	0
  1754  0019FE  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1755  001A00  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1756  001A02  0E46               	movlw	low STR_2
  1757  001A04  6F74               	movwf	sprintf@fmt& (0+255),b
  1758  001A06  0E08               	movlw	high STR_2
  1759  001A08  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1760  001A0A  EE20 F004          	lfsr	2,4
  1761  001A0E  5184               	movf	appBat@data& (0+255),w,b
  1762  001A10  26D9               	addwf	fsr2l,f,c
  1763  001A12  5185               	movf	(appBat@data+1)& (0+255),w,b
  1764  001A14  22DA               	addwfc	fsr2h,f,c
  1765  001A16  CFDE F076          	movff	postinc2,?_sprintf+4
  1766  001A1A  CFDD F077          	movff	postdec2,?_sprintf+5
  1767  001A1E  ECA4  F017         	call	_sprintf	;wreg free
  1768  001A22                     
  1769                           ;adc.c: 84:     Lcd_Out(2,0, (int8_t*)data->display);
  1770  001A22  0E00               	movlw	0
  1771  001A24  6E07               	movwf	Lcd_Out@x^0,c
  1772  001A26  0E07               	movlw	7
  1773  001A28  0100               	movlb	0	; () banked
  1774  001A2A  2584               	addwf	appBat@data& (0+255),w,b
  1775  001A2C  6E08               	movwf	Lcd_Out@buffer^0,c
  1776  001A2E  0E00               	movlw	0
  1777  001A30  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1778  001A32  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1779  001A34  0E02               	movlw	2
  1780  001A36  EC93  F014         	call	_Lcd_Out
  1781  001A3A  0012               	return		;funcret
  1782  001A3C                     __end_of_appBat:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _appADC *****************
  1786 ;; Defined at:
  1787 ;;		line 55 in file "adc.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  data            2   36[BANK0 ] PTR struct _state
  1790 ;;		 -> datos(25), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  lm35val         4   38[BANK0 ] float 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1802 ;;      Params:         0       2       0       0       0       0       0       0       0
  1803 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1805 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1806 ;;Total ram usage:        6 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:   10
  1809 ;; This function calls:
  1810 ;;		_Lcd_Out
  1811 ;;		___awmod
  1812 ;;		___fldiv
  1813 ;;		___flmul
  1814 ;;		___fltol
  1815 ;;		___xxtofl
  1816 ;;		_adcGetValue
  1817 ;;		_memset
  1818 ;;		_sprintf
  1819 ;; This function is called by:
  1820 ;;		_appStateRecolectData
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text8
  1825  001BF0                     __ptext8:
  1826                           	callstack 0
  1827  001BF0                     _appADC:
  1828                           	callstack 19
  1829  001BF0                     
  1830                           ;adc.c: 55: void appADC(StateMachine *data);adc.c: 56: {;adc.c: 57:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1831  001BF0  0E07               	movlw	7
  1832  001BF2  0100               	movlb	0	; () banked
  1833  001BF4  2584               	addwf	appADC@data& (0+255),w,b
  1834  001BF6  6E04               	movwf	memset@dest^0,c
  1835  001BF8  0E00               	movlw	0
  1836  001BFA  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1837  001BFC  6E05               	movwf	(memset@dest+1)^0,c
  1838  001BFE  0E00               	movlw	0
  1839  001C00  6E07               	movwf	(memset@c+1)^0,c
  1840  001C02  0E00               	movlw	0
  1841  001C04  6E06               	movwf	memset@c^0,c
  1842  001C06  0E00               	movlw	0
  1843  001C08  6E09               	movwf	(memset@n+1)^0,c
  1844  001C0A  0E10               	movlw	16
  1845  001C0C  6E08               	movwf	memset@n^0,c
  1846  001C0E  EC5A  F010         	call	_memset	;wreg free
  1847  001C12                     
  1848                           ;adc.c: 58:     float lm35val = adcGetValue(0);
  1849  001C12  0E00               	movlw	0
  1850  001C14  ECEA  F018         	call	_adcGetValue
  1851  001C18  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1852  001C1C  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1853  001C20  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1854  001C22  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1855  001C24  0E00               	movlw	0
  1856  001C26  EC1E  F00D         	call	___xxtofl
  1857  001C2A  C008  F086         	movff	?___xxtofl,appADC@lm35val
  1858  001C2E  C009  F087         	movff	?___xxtofl+1,appADC@lm35val+1
  1859  001C32  C00A  F088         	movff	?___xxtofl+2,appADC@lm35val+2
  1860  001C36  C00B  F089         	movff	?___xxtofl+3,appADC@lm35val+3
  1861  001C3A                     
  1862                           ;adc.c: 59:     lm35val = (float)((lm35val*4.88)/10.0);
  1863  001C3A  0EF6               	movlw	246
  1864  001C3C  6E1A               	movwf	___flmul@a^0,c
  1865  001C3E  0E28               	movlw	40
  1866  001C40  6E1B               	movwf	(___flmul@a+1)^0,c
  1867  001C42  0E9C               	movlw	156
  1868  001C44  6E1C               	movwf	(___flmul@a+2)^0,c
  1869  001C46  0E40               	movlw	64
  1870  001C48  6E1D               	movwf	(___flmul@a+3)^0,c
  1871  001C4A  C086  F016         	movff	appADC@lm35val,___flmul@b
  1872  001C4E  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1873  001C52  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1874  001C56  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1875  001C5A  EC2E  F004         	call	___flmul	;wreg free
  1876  001C5E  C016  F02F         	movff	?___flmul,___fldiv@b
  1877  001C62  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1878  001C66  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1879  001C6A  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1880  001C6E  0E00               	movlw	0
  1881  001C70  6E33               	movwf	___fldiv@a^0,c
  1882  001C72  0E00               	movlw	0
  1883  001C74  6E34               	movwf	(___fldiv@a+1)^0,c
  1884  001C76  0E20               	movlw	32
  1885  001C78  6E35               	movwf	(___fldiv@a+2)^0,c
  1886  001C7A  0E41               	movlw	65
  1887  001C7C  6E36               	movwf	(___fldiv@a+3)^0,c
  1888  001C7E  EC43  F006         	call	___fldiv	;wreg free
  1889  001C82  C02F  F086         	movff	?___fldiv,appADC@lm35val
  1890  001C86  C030  F087         	movff	?___fldiv+1,appADC@lm35val+1
  1891  001C8A  C031  F088         	movff	?___fldiv+2,appADC@lm35val+2
  1892  001C8E  C032  F089         	movff	?___fldiv+3,appADC@lm35val+3
  1893  001C92                     
  1894                           ;adc.c: 61:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  1895  001C92  0E07               	movlw	7
  1896  001C94  0100               	movlb	0	; () banked
  1897  001C96  2584               	addwf	appADC@data& (0+255),w,b
  1898  001C98  6F72               	movwf	sprintf@s& (0+255),b
  1899  001C9A  0E00               	movlw	0
  1900  001C9C  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1901  001C9E  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1902  001CA0  0E20               	movlw	low STR_1
  1903  001CA2  6F74               	movwf	sprintf@fmt& (0+255),b
  1904  001CA4  0E08               	movlw	high STR_1
  1905  001CA6  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1906  001CA8  C086  F048         	movff	appADC@lm35val,___fltol@f1
  1907  001CAC  C087  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1908  001CB0  C088  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1909  001CB4  C089  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1910  001CB8  EC91  F013         	call	___fltol	;wreg free
  1911  001CBC  5048               	movf	?___fltol^0,w,c
  1912  001CBE  0100               	movlb	0	; () banked
  1913  001CC0  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1914  001CC2  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1915  001CC4  0E00               	movlw	0
  1916  001CC6  6E1A               	movwf	___flmul@a^0,c
  1917  001CC8  0E00               	movlw	0
  1918  001CCA  6E1B               	movwf	(___flmul@a+1)^0,c
  1919  001CCC  0EC8               	movlw	200
  1920  001CCE  6E1C               	movwf	(___flmul@a+2)^0,c
  1921  001CD0  0E42               	movlw	66
  1922  001CD2  6E1D               	movwf	(___flmul@a+3)^0,c
  1923  001CD4  C086  F016         	movff	appADC@lm35val,___flmul@b
  1924  001CD8  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1925  001CDC  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1926  001CE0  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1927  001CE4  EC2E  F004         	call	___flmul	;wreg free
  1928  001CE8  C016  F048         	movff	?___flmul,___fltol@f1
  1929  001CEC  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1930  001CF0  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1931  001CF4  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1932  001CF8  EC91  F013         	call	___fltol	;wreg free
  1933  001CFC  5048               	movf	?___fltol^0,w,c
  1934  001CFE  6E52               	movwf	___awmod@dividend^0,c
  1935  001D00  6A53               	clrf	(___awmod@dividend+1)^0,c
  1936  001D02  0E00               	movlw	0
  1937  001D04  6E55               	movwf	(___awmod@divisor+1)^0,c
  1938  001D06  0E64               	movlw	100
  1939  001D08  6E54               	movwf	___awmod@divisor^0,c
  1940  001D0A  EC1F  F016         	call	___awmod	;wreg free
  1941  001D0E  5052               	movf	?___awmod^0,w,c
  1942  001D10  0100               	movlb	0	; () banked
  1943  001D12  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1944  001D14  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1945  001D16  ECA4  F017         	call	_sprintf	;wreg free
  1946  001D1A                     
  1947                           ;adc.c: 62:     Lcd_Out(1,0, (int8_t*)data->display);
  1948  001D1A  0E00               	movlw	0
  1949  001D1C  6E07               	movwf	Lcd_Out@x^0,c
  1950  001D1E  0E07               	movlw	7
  1951  001D20  0100               	movlb	0	; () banked
  1952  001D22  2584               	addwf	appADC@data& (0+255),w,b
  1953  001D24  6E08               	movwf	Lcd_Out@buffer^0,c
  1954  001D26  0E00               	movlw	0
  1955  001D28  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1956  001D2A  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1957  001D2C  0E01               	movlw	1
  1958  001D2E  EC93  F014         	call	_Lcd_Out
  1959                           
  1960                           ;adc.c: 63:     if(((int)lm35val < 2))
  1961  001D32  C086  F048         	movff	appADC@lm35val,___fltol@f1
  1962  001D36  C087  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1963  001D3A  C088  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1964  001D3E  C089  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1965  001D42  EC91  F013         	call	___fltol	;wreg free
  1966  001D46  BE49               	btfsc	(?___fltol+1)^0,7,c
  1967  001D48  EFB1  F00E         	goto	u4470
  1968  001D4C  5049               	movf	(?___fltol+1)^0,w,c
  1969  001D4E  E107               	bnz	u4471
  1970  001D50  0E02               	movlw	2
  1971  001D52  5C48               	subwf	?___fltol^0,w,c
  1972  001D54  B0D8               	btfsc	status,0,c
  1973  001D56  EFAF  F00E         	goto	u4471
  1974  001D5A  EFB1  F00E         	goto	u4470
  1975  001D5E                     u4471:
  1976  001D5E  EFB4  F00E         	goto	l4567
  1977  001D62                     u4470:
  1978  001D62                     
  1979                           ;adc.c: 64:     {;adc.c: 65:         LATCbits.LATC1 = 0;
  1980  001D62  928B               	bcf	139,1,c	;volatile
  1981                           
  1982                           ;adc.c: 66:     }
  1983  001D64  EFCD  F00E         	goto	l39
  1984  001D68                     l4567:
  1985  001D68  C086  F048         	movff	appADC@lm35val,___fltol@f1
  1986  001D6C  C087  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1987  001D70  C088  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1988  001D74  C089  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1989  001D78  EC91  F013         	call	___fltol	;wreg free
  1990  001D7C  BE49               	btfsc	(?___fltol+1)^0,7,c
  1991  001D7E  EFCA  F00E         	goto	u4481
  1992  001D82  5049               	movf	(?___fltol+1)^0,w,c
  1993  001D84  E109               	bnz	u4480
  1994  001D86  0E07               	movlw	7
  1995  001D88  5C48               	subwf	?___fltol^0,w,c
  1996  001D8A  A0D8               	btfss	status,0,c
  1997  001D8C  EFCA  F00E         	goto	u4481
  1998  001D90  EFCC  F00E         	goto	u4480
  1999  001D94                     u4481:
  2000  001D94  EFCD  F00E         	goto	l39
  2001  001D98                     u4480:
  2002  001D98                     
  2003                           ;adc.c: 68:     {;adc.c: 69:         LATCbits.LATC1 = 1;
  2004  001D98  828B               	bsf	139,1,c	;volatile
  2005  001D9A                     l39:
  2006  001D9A  0012               	return		;funcret
  2007  001D9C                     __end_of_appADC:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _adcGetValue *****************
  2011 ;; Defined at:
  2012 ;;		line 44 in file "adc.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  PinADC          1    wreg     unsigned char 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  PinADC          1    6[COMRAM] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  2    3[COMRAM] unsigned short 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2026 ;;      Params:         2       0       0       0       0       0       0       0       0
  2027 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2028 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2029 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2030 ;;Total ram usage:        4 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    2
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_appADC
  2037 ;;		_appBat
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text9
  2042  0031D4                     __ptext9:
  2043                           	callstack 0
  2044  0031D4                     _adcGetValue:
  2045                           	callstack 26
  2046                           
  2047                           ;incstack = 0
  2048                           ;adcGetValue@PinADC stored from wreg
  2049  0031D4  6E07               	movwf	adcGetValue@PinADC^0,c
  2050  0031D6                     
  2051                           ;adc.c: 44: uint16_t adcGetValue(uint8_t PinADC);adc.c: 45: {;adc.c: 46:     ADCON0bits.
      +                          CHS = PinADC;
  2052  0031D6  C007  F006         	movff	adcGetValue@PinADC,??_adcGetValue
  2053  0031DA  4606               	rlncf	??_adcGetValue^0,f,c
  2054  0031DC  4606               	rlncf	??_adcGetValue^0,f,c
  2055  0031DE  50C2               	movf	194,w,c	;volatile
  2056  0031E0  1806               	xorwf	??_adcGetValue^0,w,c
  2057  0031E2  0BC3               	andlw	-61
  2058  0031E4  1806               	xorwf	??_adcGetValue^0,w,c
  2059  0031E6  6EC2               	movwf	194,c	;volatile
  2060  0031E8                     
  2061                           ;adc.c: 47:     _delay((unsigned long)((2)*(12000000/4000.0)));
  2062  0031E8  0E08               	movlw	8
  2063  0031EA  6E06               	movwf	??_adcGetValue^0,c
  2064  0031EC  0ECA               	movlw	202
  2065  0031EE                     u4687:
  2066  0031EE  2EE8               	decfsz	wreg,f,c
  2067  0031F0  D7FE               	bra	u4687
  2068  0031F2  2E06               	decfsz	??_adcGetValue^0,f,c
  2069  0031F4  D7FC               	bra	u4687
  2070  0031F6                     
  2071                           ;adc.c: 48:     GO_nDONE = 1;
  2072  0031F6  82C2               	bsf	4034,1,c	;volatile
  2073  0031F8                     l30:
  2074                           
  2075                           ;adc.c: 49:     while(ADCON0bits.GO_DONE)
  2076  0031F8  B2C2               	btfsc	194,1,c	;volatile
  2077  0031FA  EF01  F019         	goto	u2681
  2078  0031FE  EF03  F019         	goto	u2680
  2079  003202                     u2681:
  2080  003202  EFFC  F018         	goto	l30
  2081  003206                     u2680:
  2082  003206                     
  2083                           ;adc.c: 52:     return ADRES;
  2084  003206  CFC3 F004          	movff	4035,?_adcGetValue	;volatile
  2085  00320A  CFC4 F005          	movff	4036,?_adcGetValue+1	;volatile
  2086  00320E  0012               	return		;funcret
  2087  003210                     __end_of_adcGetValue:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function ___xxtofl *****************
  2091 ;; Defined at:
  2092 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  sign            1    wreg     unsigned char 
  2095 ;;  val             4    7[COMRAM] long 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  sign            1   15[COMRAM] unsigned char 
  2098 ;;  arg             4   17[COMRAM] unsigned long 
  2099 ;;  exp             1   16[COMRAM] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  4    7[COMRAM] unsigned char 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2109 ;;      Params:         4       0       0       0       0       0       0       0       0
  2110 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2111 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2112 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2113 ;;Total ram usage:       14 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    2
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_appADC
  2120 ;;		_appBat
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text10
  2125  001A3C                     __ptext10:
  2126                           	callstack 0
  2127  001A3C                     ___xxtofl:
  2128                           	callstack 26
  2129                           
  2130                           ;incstack = 0
  2131                           ;___xxtofl@sign stored from wreg
  2132  001A3C  6E10               	movwf	___xxtofl@sign^0,c
  2133  001A3E  5010               	movf	___xxtofl@sign^0,w,c
  2134  001A40  B4D8               	btfsc	status,2,c
  2135  001A42  EF25  F00D         	goto	u3521
  2136  001A46  EF27  F00D         	goto	u3520
  2137  001A4A                     u3521:
  2138  001A4A  EF49  F00D         	goto	l1019
  2139  001A4E                     u3520:
  2140  001A4E  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2141  001A50  EF2E  F00D         	goto	u3530
  2142  001A54  EF2C  F00D         	goto	u3531
  2143  001A58                     u3531:
  2144  001A58  EF49  F00D         	goto	l1019
  2145  001A5C                     u3530:
  2146  001A5C  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  2147  001A60  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  2148  001A64  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  2149  001A68  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  2150  001A6C  1E0C               	comf	??___xxtofl^0,f,c
  2151  001A6E  1E0D               	comf	(??___xxtofl+1)^0,f,c
  2152  001A70  1E0E               	comf	(??___xxtofl+2)^0,f,c
  2153  001A72  1E0F               	comf	(??___xxtofl+3)^0,f,c
  2154  001A74  2A0C               	incf	??___xxtofl^0,f,c
  2155  001A76  0E00               	movlw	0
  2156  001A78  220D               	addwfc	(??___xxtofl+1)^0,f,c
  2157  001A7A  220E               	addwfc	(??___xxtofl+2)^0,f,c
  2158  001A7C  220F               	addwfc	(??___xxtofl+3)^0,f,c
  2159  001A7E  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  2160  001A82  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  2161  001A86  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  2162  001A8A  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  2163  001A8E  EF51  F00D         	goto	l3731
  2164  001A92                     l1019:
  2165  001A92  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  2166  001A96  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2167  001A9A  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2168  001A9E  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2169  001AA2                     l3731:
  2170  001AA2  5008               	movf	___xxtofl@val^0,w,c
  2171  001AA4  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  2172  001AA6  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  2173  001AA8  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  2174  001AAA  A4D8               	btfss	status,2,c
  2175  001AAC  EF5A  F00D         	goto	u3541
  2176  001AB0  EF5C  F00D         	goto	u3540
  2177  001AB4                     u3541:
  2178  001AB4  EF66  F00D         	goto	l3737
  2179  001AB8                     u3540:
  2180  001AB8  0E00               	movlw	0
  2181  001ABA  6E08               	movwf	?___xxtofl^0,c
  2182  001ABC  0E00               	movlw	0
  2183  001ABE  6E09               	movwf	(?___xxtofl+1)^0,c
  2184  001AC0  0E00               	movlw	0
  2185  001AC2  6E0A               	movwf	(?___xxtofl+2)^0,c
  2186  001AC4  0E00               	movlw	0
  2187  001AC6  6E0B               	movwf	(?___xxtofl+3)^0,c
  2188  001AC8  EFF7  F00D         	goto	l1022
  2189  001ACC                     l3737:
  2190  001ACC  0E96               	movlw	150
  2191  001ACE  6E11               	movwf	___xxtofl@exp^0,c
  2192  001AD0  EF70  F00D         	goto	l3741
  2193  001AD4                     l3739:
  2194  001AD4  2A11               	incf	___xxtofl@exp^0,f,c
  2195  001AD6  90D8               	bcf	status,0,c
  2196  001AD8  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2197  001ADA  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2198  001ADC  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2199  001ADE  3212               	rrcf	___xxtofl@arg^0,f,c
  2200  001AE0                     l3741:
  2201  001AE0  0E00               	movlw	0
  2202  001AE2  1412               	andwf	___xxtofl@arg^0,w,c
  2203  001AE4  6E0C               	movwf	??___xxtofl^0,c
  2204  001AE6  0E00               	movlw	0
  2205  001AE8  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2206  001AEA  6E0D               	movwf	(??___xxtofl+1)^0,c
  2207  001AEC  0E00               	movlw	0
  2208  001AEE  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2209  001AF0  6E0E               	movwf	(??___xxtofl+2)^0,c
  2210  001AF2  0EFE               	movlw	254
  2211  001AF4  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2212  001AF6  6E0F               	movwf	(??___xxtofl+3)^0,c
  2213  001AF8  500C               	movf	??___xxtofl^0,w,c
  2214  001AFA  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2215  001AFC  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2216  001AFE  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2217  001B00  A4D8               	btfss	status,2,c
  2218  001B02  EF85  F00D         	goto	u3551
  2219  001B06  EF87  F00D         	goto	u3550
  2220  001B0A                     u3551:
  2221  001B0A  EF6A  F00D         	goto	l3739
  2222  001B0E                     u3550:
  2223  001B0E  EF95  F00D         	goto	l1026
  2224  001B12                     l3743:
  2225  001B12  2A11               	incf	___xxtofl@exp^0,f,c
  2226  001B14  0E01               	movlw	1
  2227  001B16  2612               	addwf	___xxtofl@arg^0,f,c
  2228  001B18  0E00               	movlw	0
  2229  001B1A  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  2230  001B1C  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  2231  001B1E  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  2232  001B20  90D8               	bcf	status,0,c
  2233  001B22  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2234  001B24  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2235  001B26  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2236  001B28  3212               	rrcf	___xxtofl@arg^0,f,c
  2237  001B2A                     l1026:
  2238  001B2A  0E00               	movlw	0
  2239  001B2C  1412               	andwf	___xxtofl@arg^0,w,c
  2240  001B2E  6E0C               	movwf	??___xxtofl^0,c
  2241  001B30  0E00               	movlw	0
  2242  001B32  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2243  001B34  6E0D               	movwf	(??___xxtofl+1)^0,c
  2244  001B36  0E00               	movlw	0
  2245  001B38  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2246  001B3A  6E0E               	movwf	(??___xxtofl+2)^0,c
  2247  001B3C  0EFF               	movlw	255
  2248  001B3E  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2249  001B40  6E0F               	movwf	(??___xxtofl+3)^0,c
  2250  001B42  500C               	movf	??___xxtofl^0,w,c
  2251  001B44  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2252  001B46  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2253  001B48  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2254  001B4A  A4D8               	btfss	status,2,c
  2255  001B4C  EFAA  F00D         	goto	u3561
  2256  001B50  EFAC  F00D         	goto	u3560
  2257  001B54                     u3561:
  2258  001B54  EF89  F00D         	goto	l3743
  2259  001B58                     u3560:
  2260  001B58  EFB4  F00D         	goto	l3751
  2261  001B5C                     l3749:
  2262  001B5C  0611               	decf	___xxtofl@exp^0,f,c
  2263  001B5E  90D8               	bcf	status,0,c
  2264  001B60  3612               	rlcf	___xxtofl@arg^0,f,c
  2265  001B62  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  2266  001B64  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  2267  001B66  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  2268  001B68                     l3751:
  2269  001B68  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  2270  001B6A  EFB9  F00D         	goto	u3571
  2271  001B6E  EFBB  F00D         	goto	u3570
  2272  001B72                     u3571:
  2273  001B72  EFC3  F00D         	goto	l1033
  2274  001B76                     u3570:
  2275  001B76  0E02               	movlw	2
  2276  001B78  6011               	cpfslt	___xxtofl@exp^0,c
  2277  001B7A  EFC1  F00D         	goto	u3581
  2278  001B7E  EFC3  F00D         	goto	u3580
  2279  001B82                     u3581:
  2280  001B82  EFAE  F00D         	goto	l3749
  2281  001B86                     u3580:
  2282  001B86                     l1033:
  2283  001B86  B011               	btfsc	___xxtofl@exp^0,0,c
  2284  001B88  EFC8  F00D         	goto	u3591
  2285  001B8C  EFCA  F00D         	goto	u3590
  2286  001B90                     u3591:
  2287  001B90  EFCB  F00D         	goto	l3757
  2288  001B94                     u3590:
  2289  001B94  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  2290  001B96                     l3757:
  2291  001B96  90D8               	bcf	status,0,c
  2292  001B98  3211               	rrcf	___xxtofl@exp^0,f,c
  2293  001B9A  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  2294  001B9E  6A0D               	clrf	(??___xxtofl+1)^0,c
  2295  001BA0  6A0E               	clrf	(??___xxtofl+2)^0,c
  2296  001BA2  6A0F               	clrf	(??___xxtofl+3)^0,c
  2297  001BA4  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  2298  001BA8  6A0E               	clrf	(??___xxtofl+2)^0,c
  2299  001BAA  6A0D               	clrf	(??___xxtofl+1)^0,c
  2300  001BAC  6A0C               	clrf	??___xxtofl^0,c
  2301  001BAE  500C               	movf	??___xxtofl^0,w,c
  2302  001BB0  1212               	iorwf	___xxtofl@arg^0,f,c
  2303  001BB2  500D               	movf	(??___xxtofl+1)^0,w,c
  2304  001BB4  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  2305  001BB6  500E               	movf	(??___xxtofl+2)^0,w,c
  2306  001BB8  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  2307  001BBA  500F               	movf	(??___xxtofl+3)^0,w,c
  2308  001BBC  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  2309  001BBE  5010               	movf	___xxtofl@sign^0,w,c
  2310  001BC0  B4D8               	btfsc	status,2,c
  2311  001BC2  EFE5  F00D         	goto	u3601
  2312  001BC6  EFE7  F00D         	goto	u3600
  2313  001BCA                     u3601:
  2314  001BCA  EFEF  F00D         	goto	l3767
  2315  001BCE                     u3600:
  2316  001BCE  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2317  001BD0  EFEE  F00D         	goto	u3610
  2318  001BD4  EFEC  F00D         	goto	u3611
  2319  001BD8                     u3611:
  2320  001BD8  EFEF  F00D         	goto	l3767
  2321  001BDC                     u3610:
  2322  001BDC  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  2323  001BDE                     l3767:
  2324  001BDE  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  2325  001BE2  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  2326  001BE6  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  2327  001BEA  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  2328  001BEE                     l1022:
  2329  001BEE  0012               	return		;funcret
  2330  001BF0                     __end_of___xxtofl:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function ___fltol *****************
  2334 ;; Defined at:
  2335 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  f1              4   71[COMRAM] unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  exp1            1   80[COMRAM] unsigned char 
  2340 ;;  sign1           1   79[COMRAM] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  4   71[COMRAM] long 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2350 ;;      Params:         4       0       0       0       0       0       0       0       0
  2351 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2352 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2353 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2354 ;;Total ram usage:       10 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    2
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_appADC
  2361 ;;		_appBat
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text11
  2366  002722                     __ptext11:
  2367                           	callstack 0
  2368  002722                     ___fltol:
  2369                           	callstack 26
  2370  002722  344A               	rlcf	(___fltol@f1+2)^0,w,c
  2371  002724  344B               	rlcf	(___fltol@f1+3)^0,w,c
  2372  002726  6E51               	movwf	___fltol@exp1^0,c
  2373  002728  5051               	movf	___fltol@exp1^0,w,c
  2374  00272A  A4D8               	btfss	status,2,c
  2375  00272C  EF9A  F013         	goto	u3451
  2376  002730  EF9C  F013         	goto	u3450
  2377  002734                     u3451:
  2378  002734  EFA6  F013         	goto	l3687
  2379  002738                     u3450:
  2380  002738                     l3683:
  2381  002738  0E00               	movlw	0
  2382  00273A  6E48               	movwf	?___fltol^0,c
  2383  00273C  0E00               	movlw	0
  2384  00273E  6E49               	movwf	(?___fltol+1)^0,c
  2385  002740  0E00               	movlw	0
  2386  002742  6E4A               	movwf	(?___fltol+2)^0,c
  2387  002744  0E00               	movlw	0
  2388  002746  6E4B               	movwf	(?___fltol+3)^0,c
  2389  002748  EF13  F014         	goto	l661
  2390  00274C                     l3687:
  2391  00274C  C048  F04C         	movff	___fltol@f1,??___fltol
  2392  002750  C049  F04D         	movff	___fltol@f1+1,??___fltol+1
  2393  002754  C04A  F04E         	movff	___fltol@f1+2,??___fltol+2
  2394  002758  C04B  F04F         	movff	___fltol@f1+3,??___fltol+3
  2395  00275C  0E20               	movlw	32
  2396  00275E  EFB6  F013         	goto	u3460
  2397  002762                     u3465:
  2398  002762  90D8               	bcf	status,0,c
  2399  002764  324F               	rrcf	(??___fltol+3)^0,f,c
  2400  002766  324E               	rrcf	(??___fltol+2)^0,f,c
  2401  002768  324D               	rrcf	(??___fltol+1)^0,f,c
  2402  00276A  324C               	rrcf	??___fltol^0,f,c
  2403  00276C                     u3460:
  2404  00276C  2EE8               	decfsz	wreg,f,c
  2405  00276E  EFB1  F013         	goto	u3465
  2406  002772  504C               	movf	??___fltol^0,w,c
  2407  002774  6E50               	movwf	___fltol@sign1^0,c
  2408  002776  8E4A               	bsf	(___fltol@f1+2)^0,7,c
  2409  002778  0EFF               	movlw	255
  2410  00277A  1648               	andwf	___fltol@f1^0,f,c
  2411  00277C  0EFF               	movlw	255
  2412  00277E  1649               	andwf	(___fltol@f1+1)^0,f,c
  2413  002780  0EFF               	movlw	255
  2414  002782  164A               	andwf	(___fltol@f1+2)^0,f,c
  2415  002784  0E00               	movlw	0
  2416  002786  164B               	andwf	(___fltol@f1+3)^0,f,c
  2417  002788  0E96               	movlw	150
  2418  00278A  5E51               	subwf	___fltol@exp1^0,f,c
  2419  00278C  BE51               	btfsc	___fltol@exp1^0,7,c
  2420  00278E  EFCD  F013         	goto	u3470
  2421  002792  EFCB  F013         	goto	u3471
  2422  002796                     u3471:
  2423  002796  EFE3  F013         	goto	l3707
  2424  00279A                     u3470:
  2425  00279A  5051               	movf	___fltol@exp1^0,w,c
  2426  00279C  0A80               	xorlw	128
  2427  00279E  0F97               	addlw	151
  2428  0027A0  B0D8               	btfsc	status,0,c
  2429  0027A2  EFD5  F013         	goto	u3481
  2430  0027A6  EFD7  F013         	goto	u3480
  2431  0027AA                     u3481:
  2432  0027AA  EFD9  F013         	goto	l3703
  2433  0027AE                     u3480:
  2434  0027AE  EF9C  F013         	goto	l3683
  2435  0027B2                     l3703:
  2436  0027B2  90D8               	bcf	status,0,c
  2437  0027B4  324B               	rrcf	(___fltol@f1+3)^0,f,c
  2438  0027B6  324A               	rrcf	(___fltol@f1+2)^0,f,c
  2439  0027B8  3249               	rrcf	(___fltol@f1+1)^0,f,c
  2440  0027BA  3248               	rrcf	___fltol@f1^0,f,c
  2441  0027BC  3E51               	incfsz	___fltol@exp1^0,f,c
  2442  0027BE  EFD9  F013         	goto	l3703
  2443  0027C2  EFFB  F013         	goto	l3717
  2444  0027C6                     l3707:
  2445  0027C6  0E1F               	movlw	31
  2446  0027C8  6451               	cpfsgt	___fltol@exp1^0,c
  2447  0027CA  EFE9  F013         	goto	u3491
  2448  0027CE  EFEB  F013         	goto	u3490
  2449  0027D2                     u3491:
  2450  0027D2  EFF3  F013         	goto	l3715
  2451  0027D6                     u3490:
  2452  0027D6  EF9C  F013         	goto	l3683
  2453  0027DA                     l3713:
  2454  0027DA  90D8               	bcf	status,0,c
  2455  0027DC  3648               	rlcf	___fltol@f1^0,f,c
  2456  0027DE  3649               	rlcf	(___fltol@f1+1)^0,f,c
  2457  0027E0  364A               	rlcf	(___fltol@f1+2)^0,f,c
  2458  0027E2  364B               	rlcf	(___fltol@f1+3)^0,f,c
  2459  0027E4  0651               	decf	___fltol@exp1^0,f,c
  2460  0027E6                     l3715:
  2461  0027E6  5051               	movf	___fltol@exp1^0,w,c
  2462  0027E8  A4D8               	btfss	status,2,c
  2463  0027EA  EFF9  F013         	goto	u3501
  2464  0027EE  EFFB  F013         	goto	u3500
  2465  0027F2                     u3501:
  2466  0027F2  EFED  F013         	goto	l3713
  2467  0027F6                     u3500:
  2468  0027F6                     l3717:
  2469  0027F6  5050               	movf	___fltol@sign1^0,w,c
  2470  0027F8  B4D8               	btfsc	status,2,c
  2471  0027FA  EF01  F014         	goto	u3511
  2472  0027FE  EF03  F014         	goto	u3510
  2473  002802                     u3511:
  2474  002802  EF0B  F014         	goto	l3721
  2475  002806                     u3510:
  2476  002806  1E4B               	comf	(___fltol@f1+3)^0,f,c
  2477  002808  1E4A               	comf	(___fltol@f1+2)^0,f,c
  2478  00280A  1E49               	comf	(___fltol@f1+1)^0,f,c
  2479  00280C  6C48               	negf	___fltol@f1^0,c
  2480  00280E  0E00               	movlw	0
  2481  002810  2249               	addwfc	(___fltol@f1+1)^0,f,c
  2482  002812  224A               	addwfc	(___fltol@f1+2)^0,f,c
  2483  002814  224B               	addwfc	(___fltol@f1+3)^0,f,c
  2484  002816                     l3721:
  2485  002816  C048  F048         	movff	___fltol@f1,?___fltol
  2486  00281A  C049  F049         	movff	___fltol@f1+1,?___fltol+1
  2487  00281E  C04A  F04A         	movff	___fltol@f1+2,?___fltol+2
  2488  002822  C04B  F04B         	movff	___fltol@f1+3,?___fltol+3
  2489  002826                     l661:
  2490  002826  0012               	return		;funcret
  2491  002828                     __end_of___fltol:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function ___flmul *****************
  2495 ;; Defined at:
  2496 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  b               4   21[COMRAM] long 
  2499 ;;  a               4   25[COMRAM] long 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  prod            4   40[COMRAM] struct .
  2502 ;;  grs             4   34[COMRAM] unsigned long 
  2503 ;;  temp            2   44[COMRAM] struct .
  2504 ;;  bexp            1   39[COMRAM] unsigned char 
  2505 ;;  aexp            1   38[COMRAM] unsigned char 
  2506 ;;  sign            1   33[COMRAM] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  4   21[COMRAM] unsigned char 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0, prodl, prodh
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2516 ;;      Params:         8       0       0       0       0       0       0       0       0
  2517 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2518 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2519 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2520 ;;Total ram usage:       25 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    2
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_appADC
  2527 ;;		_appBat
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text12
  2532  00085C                     __ptext12:
  2533                           	callstack 0
  2534  00085C                     ___flmul:
  2535                           	callstack 26
  2536  00085C  5019               	movf	(___flmul@b+3)^0,w,c
  2537  00085E  0B80               	andlw	128
  2538  000860  6E22               	movwf	___flmul@sign^0,c
  2539  000862  5019               	movf	(___flmul@b+3)^0,w,c
  2540  000864  2419               	addwf	(___flmul@b+3)^0,w,c
  2541  000866  6E28               	movwf	___flmul@bexp^0,c
  2542  000868  AE18               	btfss	(___flmul@b+2)^0,7,c
  2543  00086A  EF39  F004         	goto	u3201
  2544  00086E  EF3B  F004         	goto	u3200
  2545  000872                     u3201:
  2546  000872  EF3C  F004         	goto	l3521
  2547  000876                     u3200:
  2548  000876  8028               	bsf	___flmul@bexp^0,0,c
  2549  000878                     l3521:
  2550  000878  5028               	movf	___flmul@bexp^0,w,c
  2551  00087A  B4D8               	btfsc	status,2,c
  2552  00087C  EF42  F004         	goto	u3211
  2553  000880  EF44  F004         	goto	u3210
  2554  000884                     u3211:
  2555  000884  EF57  F004         	goto	l3529
  2556  000888                     u3210:
  2557  000888  2828               	incf	___flmul@bexp^0,w,c
  2558  00088A  A4D8               	btfss	status,2,c
  2559  00088C  EF4A  F004         	goto	u3221
  2560  000890  EF4C  F004         	goto	u3220
  2561  000894                     u3221:
  2562  000894  EF54  F004         	goto	l3527
  2563  000898                     u3220:
  2564  000898  0E00               	movlw	0
  2565  00089A  6E16               	movwf	___flmul@b^0,c
  2566  00089C  0E00               	movlw	0
  2567  00089E  6E17               	movwf	(___flmul@b+1)^0,c
  2568  0008A0  0E00               	movlw	0
  2569  0008A2  6E18               	movwf	(___flmul@b+2)^0,c
  2570  0008A4  0E00               	movlw	0
  2571  0008A6  6E19               	movwf	(___flmul@b+3)^0,c
  2572  0008A8                     l3527:
  2573  0008A8  8E18               	bsf	(___flmul@b+2)^0,7,c
  2574  0008AA  EF5F  F004         	goto	l3531
  2575  0008AE                     l3529:
  2576  0008AE  0E00               	movlw	0
  2577  0008B0  6E16               	movwf	___flmul@b^0,c
  2578  0008B2  0E00               	movlw	0
  2579  0008B4  6E17               	movwf	(___flmul@b+1)^0,c
  2580  0008B6  0E00               	movlw	0
  2581  0008B8  6E18               	movwf	(___flmul@b+2)^0,c
  2582  0008BA  0E00               	movlw	0
  2583  0008BC  6E19               	movwf	(___flmul@b+3)^0,c
  2584  0008BE                     l3531:
  2585  0008BE  501D               	movf	(___flmul@a+3)^0,w,c
  2586  0008C0  0B80               	andlw	128
  2587  0008C2  1A22               	xorwf	___flmul@sign^0,f,c
  2588  0008C4  501D               	movf	(___flmul@a+3)^0,w,c
  2589  0008C6  241D               	addwf	(___flmul@a+3)^0,w,c
  2590  0008C8  6E27               	movwf	___flmul@aexp^0,c
  2591  0008CA  AE1C               	btfss	(___flmul@a+2)^0,7,c
  2592  0008CC  EF6A  F004         	goto	u3231
  2593  0008D0  EF6C  F004         	goto	u3230
  2594  0008D4                     u3231:
  2595  0008D4  EF6D  F004         	goto	l3539
  2596  0008D8                     u3230:
  2597  0008D8  8027               	bsf	___flmul@aexp^0,0,c
  2598  0008DA                     l3539:
  2599  0008DA  5027               	movf	___flmul@aexp^0,w,c
  2600  0008DC  B4D8               	btfsc	status,2,c
  2601  0008DE  EF73  F004         	goto	u3241
  2602  0008E2  EF75  F004         	goto	u3240
  2603  0008E6                     u3241:
  2604  0008E6  EF88  F004         	goto	l3547
  2605  0008EA                     u3240:
  2606  0008EA  2827               	incf	___flmul@aexp^0,w,c
  2607  0008EC  A4D8               	btfss	status,2,c
  2608  0008EE  EF7B  F004         	goto	u3251
  2609  0008F2  EF7D  F004         	goto	u3250
  2610  0008F6                     u3251:
  2611  0008F6  EF85  F004         	goto	l3545
  2612  0008FA                     u3250:
  2613  0008FA  0E00               	movlw	0
  2614  0008FC  6E1A               	movwf	___flmul@a^0,c
  2615  0008FE  0E00               	movlw	0
  2616  000900  6E1B               	movwf	(___flmul@a+1)^0,c
  2617  000902  0E00               	movlw	0
  2618  000904  6E1C               	movwf	(___flmul@a+2)^0,c
  2619  000906  0E00               	movlw	0
  2620  000908  6E1D               	movwf	(___flmul@a+3)^0,c
  2621  00090A                     l3545:
  2622  00090A  8E1C               	bsf	(___flmul@a+2)^0,7,c
  2623  00090C  EF90  F004         	goto	l978
  2624  000910                     l3547:
  2625  000910  0E00               	movlw	0
  2626  000912  6E1A               	movwf	___flmul@a^0,c
  2627  000914  0E00               	movlw	0
  2628  000916  6E1B               	movwf	(___flmul@a+1)^0,c
  2629  000918  0E00               	movlw	0
  2630  00091A  6E1C               	movwf	(___flmul@a+2)^0,c
  2631  00091C  0E00               	movlw	0
  2632  00091E  6E1D               	movwf	(___flmul@a+3)^0,c
  2633  000920                     l978:
  2634  000920  5027               	movf	___flmul@aexp^0,w,c
  2635  000922  B4D8               	btfsc	status,2,c
  2636  000924  EF96  F004         	goto	u3261
  2637  000928  EF98  F004         	goto	u3260
  2638  00092C                     u3261:
  2639  00092C  EFA0  F004         	goto	l3551
  2640  000930                     u3260:
  2641  000930  5028               	movf	___flmul@bexp^0,w,c
  2642  000932  A4D8               	btfss	status,2,c
  2643  000934  EF9E  F004         	goto	u3271
  2644  000938  EFA0  F004         	goto	u3270
  2645  00093C                     u3271:
  2646  00093C  EFAA  F004         	goto	l3555
  2647  000940                     u3270:
  2648  000940                     l3551:
  2649  000940  0E00               	movlw	0
  2650  000942  6E16               	movwf	?___flmul^0,c
  2651  000944  0E00               	movlw	0
  2652  000946  6E17               	movwf	(?___flmul+1)^0,c
  2653  000948  0E00               	movlw	0
  2654  00094A  6E18               	movwf	(?___flmul+2)^0,c
  2655  00094C  0E00               	movlw	0
  2656  00094E  6E19               	movwf	(?___flmul+3)^0,c
  2657  000950  EF42  F006         	goto	l982
  2658  000954                     l3555:
  2659  000954  501C               	movf	(___flmul@a+2)^0,w,c
  2660  000956  0216               	mulwf	___flmul@b^0,c
  2661  000958  CFF3 F02D          	movff	prodl,___flmul@temp
  2662  00095C  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2663  000960  502D               	movf	___flmul@temp^0,w,c
  2664  000962  6E23               	movwf	___flmul@grs^0,c
  2665  000964  6A24               	clrf	(___flmul@grs+1)^0,c
  2666  000966  6A25               	clrf	(___flmul@grs+2)^0,c
  2667  000968  6A26               	clrf	(___flmul@grs+3)^0,c
  2668  00096A  502E               	movf	(___flmul@temp+1)^0,w,c
  2669  00096C  6E29               	movwf	___flmul@prod^0,c
  2670  00096E  6A2A               	clrf	(___flmul@prod+1)^0,c
  2671  000970  6A2B               	clrf	(___flmul@prod+2)^0,c
  2672  000972  6A2C               	clrf	(___flmul@prod+3)^0,c
  2673  000974  501B               	movf	(___flmul@a+1)^0,w,c
  2674  000976  0217               	mulwf	(___flmul@b+1)^0,c
  2675  000978  CFF3 F02D          	movff	prodl,___flmul@temp
  2676  00097C  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2677  000980  502D               	movf	___flmul@temp^0,w,c
  2678  000982  2623               	addwf	___flmul@grs^0,f,c
  2679  000984  0E00               	movlw	0
  2680  000986  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2681  000988  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2682  00098A  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2683  00098C  502E               	movf	(___flmul@temp+1)^0,w,c
  2684  00098E  2629               	addwf	___flmul@prod^0,f,c
  2685  000990  0E00               	movlw	0
  2686  000992  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2687  000994  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2688  000996  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2689  000998  501A               	movf	___flmul@a^0,w,c
  2690  00099A  0218               	mulwf	(___flmul@b+2)^0,c
  2691  00099C  CFF3 F02D          	movff	prodl,___flmul@temp
  2692  0009A0  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2693  0009A4  502D               	movf	___flmul@temp^0,w,c
  2694  0009A6  2623               	addwf	___flmul@grs^0,f,c
  2695  0009A8  0E00               	movlw	0
  2696  0009AA  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2697  0009AC  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2698  0009AE  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2699  0009B0  502E               	movf	(___flmul@temp+1)^0,w,c
  2700  0009B2  2629               	addwf	___flmul@prod^0,f,c
  2701  0009B4  0E00               	movlw	0
  2702  0009B6  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2703  0009B8  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2704  0009BA  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2705  0009BC  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2706  0009C0  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2707  0009C4  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2708  0009C8  6A23               	clrf	___flmul@grs^0,c
  2709  0009CA  501A               	movf	___flmul@a^0,w,c
  2710  0009CC  0217               	mulwf	(___flmul@b+1)^0,c
  2711  0009CE  CFF3 F02D          	movff	prodl,___flmul@temp
  2712  0009D2  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2713  0009D6  502D               	movf	___flmul@temp^0,w,c
  2714  0009D8  2623               	addwf	___flmul@grs^0,f,c
  2715  0009DA  502E               	movf	(___flmul@temp+1)^0,w,c
  2716  0009DC  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2717  0009DE  0E00               	movlw	0
  2718  0009E0  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2719  0009E2  0E00               	movlw	0
  2720  0009E4  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2721  0009E6  501B               	movf	(___flmul@a+1)^0,w,c
  2722  0009E8  0216               	mulwf	___flmul@b^0,c
  2723  0009EA  CFF3 F02D          	movff	prodl,___flmul@temp
  2724  0009EE  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2725  0009F2  502D               	movf	___flmul@temp^0,w,c
  2726  0009F4  2623               	addwf	___flmul@grs^0,f,c
  2727  0009F6  502E               	movf	(___flmul@temp+1)^0,w,c
  2728  0009F8  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2729  0009FA  0E00               	movlw	0
  2730  0009FC  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2731  0009FE  0E00               	movlw	0
  2732  000A00  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2733  000A02  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2734  000A06  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2735  000A0A  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2736  000A0E  6A23               	clrf	___flmul@grs^0,c
  2737  000A10  501A               	movf	___flmul@a^0,w,c
  2738  000A12  0216               	mulwf	___flmul@b^0,c
  2739  000A14  CFF3 F02D          	movff	prodl,___flmul@temp
  2740  000A18  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2741  000A1C  502D               	movf	___flmul@temp^0,w,c
  2742  000A1E  2623               	addwf	___flmul@grs^0,f,c
  2743  000A20  502E               	movf	(___flmul@temp+1)^0,w,c
  2744  000A22  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2745  000A24  0E00               	movlw	0
  2746  000A26  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2747  000A28  0E00               	movlw	0
  2748  000A2A  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2749  000A2C  501C               	movf	(___flmul@a+2)^0,w,c
  2750  000A2E  0217               	mulwf	(___flmul@b+1)^0,c
  2751  000A30  CFF3 F02D          	movff	prodl,___flmul@temp
  2752  000A34  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2753  000A38  502D               	movf	___flmul@temp^0,w,c
  2754  000A3A  2629               	addwf	___flmul@prod^0,f,c
  2755  000A3C  502E               	movf	(___flmul@temp+1)^0,w,c
  2756  000A3E  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2757  000A40  0E00               	movlw	0
  2758  000A42  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2759  000A44  0E00               	movlw	0
  2760  000A46  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2761  000A48  501B               	movf	(___flmul@a+1)^0,w,c
  2762  000A4A  0218               	mulwf	(___flmul@b+2)^0,c
  2763  000A4C  CFF3 F02D          	movff	prodl,___flmul@temp
  2764  000A50  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2765  000A54  502D               	movf	___flmul@temp^0,w,c
  2766  000A56  2629               	addwf	___flmul@prod^0,f,c
  2767  000A58  502E               	movf	(___flmul@temp+1)^0,w,c
  2768  000A5A  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2769  000A5C  0E00               	movlw	0
  2770  000A5E  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2771  000A60  0E00               	movlw	0
  2772  000A62  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2773  000A64  501C               	movf	(___flmul@a+2)^0,w,c
  2774  000A66  0218               	mulwf	(___flmul@b+2)^0,c
  2775  000A68  CFF3 F02D          	movff	prodl,___flmul@temp
  2776  000A6C  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2777  000A70  502D               	movf	___flmul@temp^0,w,c
  2778  000A72  6E1E               	movwf	??___flmul^0,c
  2779  000A74  502E               	movf	(___flmul@temp+1)^0,w,c
  2780  000A76  6E1F               	movwf	(??___flmul+1)^0,c
  2781  000A78  6A20               	clrf	(??___flmul+2)^0,c
  2782  000A7A  6A21               	clrf	(??___flmul+3)^0,c
  2783  000A7C  C020  F021         	movff	??___flmul+2,??___flmul+3
  2784  000A80  C01F  F020         	movff	??___flmul+1,??___flmul+2
  2785  000A84  C01E  F01F         	movff	??___flmul,??___flmul+1
  2786  000A88  6A1E               	clrf	??___flmul^0,c
  2787  000A8A  501E               	movf	??___flmul^0,w,c
  2788  000A8C  2629               	addwf	___flmul@prod^0,f,c
  2789  000A8E  501F               	movf	(??___flmul+1)^0,w,c
  2790  000A90  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2791  000A92  5020               	movf	(??___flmul+2)^0,w,c
  2792  000A94  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2793  000A96  5021               	movf	(??___flmul+3)^0,w,c
  2794  000A98  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2795  000A9A  C023  F01E         	movff	___flmul@grs,??___flmul
  2796  000A9E  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  2797  000AA2  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  2798  000AA6  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  2799  000AAA  0E19               	movlw	25
  2800  000AAC  EF5D  F005         	goto	u3280
  2801  000AB0                     u3285:
  2802  000AB0  90D8               	bcf	status,0,c
  2803  000AB2  3221               	rrcf	(??___flmul+3)^0,f,c
  2804  000AB4  3220               	rrcf	(??___flmul+2)^0,f,c
  2805  000AB6  321F               	rrcf	(??___flmul+1)^0,f,c
  2806  000AB8  321E               	rrcf	??___flmul^0,f,c
  2807  000ABA                     u3280:
  2808  000ABA  2EE8               	decfsz	wreg,f,c
  2809  000ABC  EF58  F005         	goto	u3285
  2810  000AC0  501E               	movf	??___flmul^0,w,c
  2811  000AC2  2629               	addwf	___flmul@prod^0,f,c
  2812  000AC4  501F               	movf	(??___flmul+1)^0,w,c
  2813  000AC6  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2814  000AC8  5020               	movf	(??___flmul+2)^0,w,c
  2815  000ACA  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2816  000ACC  5021               	movf	(??___flmul+3)^0,w,c
  2817  000ACE  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2818  000AD0  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2819  000AD4  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2820  000AD8  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2821  000ADC  6A23               	clrf	___flmul@grs^0,c
  2822  000ADE  5027               	movf	___flmul@aexp^0,w,c
  2823  000AE0  C028  F01E         	movff	___flmul@bexp,??___flmul
  2824  000AE4  6A1F               	clrf	(??___flmul+1)^0,c
  2825  000AE6  261E               	addwf	??___flmul^0,f,c
  2826  000AE8  0E00               	movlw	0
  2827  000AEA  221F               	addwfc	(??___flmul+1)^0,f,c
  2828  000AEC  0E82               	movlw	130
  2829  000AEE  241E               	addwf	??___flmul^0,w,c
  2830  000AF0  6E2D               	movwf	___flmul@temp^0,c
  2831  000AF2  0EFF               	movlw	255
  2832  000AF4  201F               	addwfc	(??___flmul+1)^0,w,c
  2833  000AF6  6E2E               	movwf	(___flmul@temp+1)^0,c
  2834  000AF8  EF93  F005         	goto	l3603
  2835  000AFC                     l3597:
  2836  000AFC  90D8               	bcf	status,0,c
  2837  000AFE  3629               	rlcf	___flmul@prod^0,f,c
  2838  000B00  362A               	rlcf	(___flmul@prod+1)^0,f,c
  2839  000B02  362B               	rlcf	(___flmul@prod+2)^0,f,c
  2840  000B04  362C               	rlcf	(___flmul@prod+3)^0,f,c
  2841  000B06  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2842  000B08  EF88  F005         	goto	u3291
  2843  000B0C  EF8A  F005         	goto	u3290
  2844  000B10                     u3291:
  2845  000B10  EF8B  F005         	goto	l985
  2846  000B14                     u3290:
  2847  000B14  8029               	bsf	___flmul@prod^0,0,c
  2848  000B16                     l985:
  2849  000B16  90D8               	bcf	status,0,c
  2850  000B18  3623               	rlcf	___flmul@grs^0,f,c
  2851  000B1A  3624               	rlcf	(___flmul@grs+1)^0,f,c
  2852  000B1C  3625               	rlcf	(___flmul@grs+2)^0,f,c
  2853  000B1E  3626               	rlcf	(___flmul@grs+3)^0,f,c
  2854  000B20  062D               	decf	___flmul@temp^0,f,c
  2855  000B22  A0D8               	btfss	status,0,c
  2856  000B24  062E               	decf	(___flmul@temp+1)^0,f,c
  2857  000B26                     l3603:
  2858  000B26  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  2859  000B28  EF98  F005         	goto	u3301
  2860  000B2C  EF9A  F005         	goto	u3300
  2861  000B30                     u3301:
  2862  000B30  EF7E  F005         	goto	l3597
  2863  000B34                     u3300:
  2864  000B34  0E00               	movlw	0
  2865  000B36  6E27               	movwf	___flmul@aexp^0,c
  2866  000B38  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2867  000B3A  EFA1  F005         	goto	u3311
  2868  000B3E  EFA3  F005         	goto	u3310
  2869  000B42                     u3311:
  2870  000B42  EFC7  F005         	goto	l987
  2871  000B46                     u3310:
  2872  000B46  0EFF               	movlw	255
  2873  000B48  1423               	andwf	___flmul@grs^0,w,c
  2874  000B4A  6E1E               	movwf	??___flmul^0,c
  2875  000B4C  0EFF               	movlw	255
  2876  000B4E  1424               	andwf	(___flmul@grs+1)^0,w,c
  2877  000B50  6E1F               	movwf	(??___flmul+1)^0,c
  2878  000B52  0EFF               	movlw	255
  2879  000B54  1425               	andwf	(___flmul@grs+2)^0,w,c
  2880  000B56  6E20               	movwf	(??___flmul+2)^0,c
  2881  000B58  0E7F               	movlw	127
  2882  000B5A  1426               	andwf	(___flmul@grs+3)^0,w,c
  2883  000B5C  6E21               	movwf	(??___flmul+3)^0,c
  2884  000B5E  501E               	movf	??___flmul^0,w,c
  2885  000B60  101F               	iorwf	(??___flmul+1)^0,w,c
  2886  000B62  1020               	iorwf	(??___flmul+2)^0,w,c
  2887  000B64  1021               	iorwf	(??___flmul+3)^0,w,c
  2888  000B66  B4D8               	btfsc	status,2,c
  2889  000B68  EFB8  F005         	goto	u3321
  2890  000B6C  EFBA  F005         	goto	u3320
  2891  000B70                     u3321:
  2892  000B70  EFBE  F005         	goto	l988
  2893  000B74                     u3320:
  2894  000B74                     l3611:
  2895  000B74  0E01               	movlw	1
  2896  000B76  6E27               	movwf	___flmul@aexp^0,c
  2897  000B78  EFC7  F005         	goto	l987
  2898  000B7C                     l988:
  2899  000B7C  A029               	btfss	___flmul@prod^0,0,c
  2900  000B7E  EFC3  F005         	goto	u3331
  2901  000B82  EFC5  F005         	goto	u3330
  2902  000B86                     u3331:
  2903  000B86  EFC7  F005         	goto	l987
  2904  000B8A                     u3330:
  2905  000B8A  EFBA  F005         	goto	l3611
  2906  000B8E                     l987:
  2907  000B8E  5027               	movf	___flmul@aexp^0,w,c
  2908  000B90  B4D8               	btfsc	status,2,c
  2909  000B92  EFCD  F005         	goto	u3341
  2910  000B96  EFCF  F005         	goto	u3340
  2911  000B9A                     u3341:
  2912  000B9A  EFF3  F005         	goto	l3623
  2913  000B9E                     u3340:
  2914  000B9E  0E01               	movlw	1
  2915  000BA0  2629               	addwf	___flmul@prod^0,f,c
  2916  000BA2  0E00               	movlw	0
  2917  000BA4  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2918  000BA6  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2919  000BA8  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2920  000BAA  A02C               	btfss	(___flmul@prod+3)^0,0,c
  2921  000BAC  EFDA  F005         	goto	u3351
  2922  000BB0  EFDC  F005         	goto	u3350
  2923  000BB4                     u3351:
  2924  000BB4  EFF3  F005         	goto	l3623
  2925  000BB8                     u3350:
  2926  000BB8  C029  F01E         	movff	___flmul@prod,??___flmul
  2927  000BBC  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  2928  000BC0  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  2929  000BC4  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  2930  000BC8  3421               	rlcf	(??___flmul+3)^0,w,c
  2931  000BCA  3221               	rrcf	(??___flmul+3)^0,f,c
  2932  000BCC  3220               	rrcf	(??___flmul+2)^0,f,c
  2933  000BCE  321F               	rrcf	(??___flmul+1)^0,f,c
  2934  000BD0  321E               	rrcf	??___flmul^0,f,c
  2935  000BD2  C01E  F029         	movff	??___flmul,___flmul@prod
  2936  000BD6  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  2937  000BDA  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  2938  000BDE  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  2939  000BE2  4A2D               	infsnz	___flmul@temp^0,f,c
  2940  000BE4  2A2E               	incf	(___flmul@temp+1)^0,f,c
  2941  000BE6                     l3623:
  2942  000BE6  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2943  000BE8  EFFE  F005         	goto	u3361
  2944  000BEC  502E               	movf	(___flmul@temp+1)^0,w,c
  2945  000BEE  E108               	bnz	u3360
  2946  000BF0  282D               	incf	___flmul@temp^0,w,c
  2947  000BF2  A0D8               	btfss	status,0,c
  2948  000BF4  EFFE  F005         	goto	u3361
  2949  000BF8  EF00  F006         	goto	u3360
  2950  000BFC                     u3361:
  2951  000BFC  EF0A  F006         	goto	l3627
  2952  000C00                     u3360:
  2953  000C00  0E00               	movlw	0
  2954  000C02  6E29               	movwf	___flmul@prod^0,c
  2955  000C04  0E00               	movlw	0
  2956  000C06  6E2A               	movwf	(___flmul@prod+1)^0,c
  2957  000C08  0E80               	movlw	128
  2958  000C0A  6E2B               	movwf	(___flmul@prod+2)^0,c
  2959  000C0C  0E7F               	movlw	127
  2960  000C0E  6E2C               	movwf	(___flmul@prod+3)^0,c
  2961  000C10  EF38  F006         	goto	l3639
  2962  000C14                     l3627:
  2963  000C14  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2964  000C16  EF17  F006         	goto	u3370
  2965  000C1A  502E               	movf	(___flmul@temp+1)^0,w,c
  2966  000C1C  E106               	bnz	u3371
  2967  000C1E  042D               	decf	___flmul@temp^0,w,c
  2968  000C20  B0D8               	btfsc	status,0,c
  2969  000C22  EF15  F006         	goto	u3371
  2970  000C26  EF17  F006         	goto	u3370
  2971  000C2A                     u3371:
  2972  000C2A  EF23  F006         	goto	l995
  2973  000C2E                     u3370:
  2974  000C2E  0E00               	movlw	0
  2975  000C30  6E29               	movwf	___flmul@prod^0,c
  2976  000C32  0E00               	movlw	0
  2977  000C34  6E2A               	movwf	(___flmul@prod+1)^0,c
  2978  000C36  0E00               	movlw	0
  2979  000C38  6E2B               	movwf	(___flmul@prod+2)^0,c
  2980  000C3A  0E00               	movlw	0
  2981  000C3C  6E2C               	movwf	(___flmul@prod+3)^0,c
  2982  000C3E  0E00               	movlw	0
  2983  000C40  6E22               	movwf	___flmul@sign^0,c
  2984  000C42  EF38  F006         	goto	l3639
  2985  000C46                     l995:
  2986  000C46  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  2987  000C4A  0EFF               	movlw	255
  2988  000C4C  1629               	andwf	___flmul@prod^0,f,c
  2989  000C4E  0EFF               	movlw	255
  2990  000C50  162A               	andwf	(___flmul@prod+1)^0,f,c
  2991  000C52  0E7F               	movlw	127
  2992  000C54  162B               	andwf	(___flmul@prod+2)^0,f,c
  2993  000C56  0E00               	movlw	0
  2994  000C58  162C               	andwf	(___flmul@prod+3)^0,f,c
  2995  000C5A  A028               	btfss	___flmul@bexp^0,0,c
  2996  000C5C  EF32  F006         	goto	u3381
  2997  000C60  EF34  F006         	goto	u3380
  2998  000C64                     u3381:
  2999  000C64  EF35  F006         	goto	l3637
  3000  000C68                     u3380:
  3001  000C68  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  3002  000C6A                     l3637:
  3003  000C6A  90D8               	bcf	status,0,c
  3004  000C6C  3028               	rrcf	___flmul@bexp^0,w,c
  3005  000C6E  6E2C               	movwf	(___flmul@prod+3)^0,c
  3006  000C70                     l3639:
  3007  000C70  5022               	movf	___flmul@sign^0,w,c
  3008  000C72  122C               	iorwf	(___flmul@prod+3)^0,f,c
  3009  000C74  C029  F016         	movff	___flmul@prod,?___flmul
  3010  000C78  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  3011  000C7C  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  3012  000C80  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  3013  000C84                     l982:
  3014  000C84  0012               	return		;funcret
  3015  000C86                     __end_of___flmul:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function ___fldiv *****************
  3019 ;; Defined at:
  3020 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  b               4   46[COMRAM] unsigned char 
  3023 ;;  a               4   50[COMRAM] unsigned char 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  grs             4   65[COMRAM] unsigned long 
  3026 ;;  rem             4   58[COMRAM] unsigned long 
  3027 ;;  new_exp         2   63[COMRAM] short 
  3028 ;;  aexp            1   70[COMRAM] unsigned char 
  3029 ;;  bexp            1   69[COMRAM] unsigned char 
  3030 ;;  sign            1   62[COMRAM] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  4   46[COMRAM] unsigned char 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3040 ;;      Params:         8       0       0       0       0       0       0       0       0
  3041 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3042 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3043 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3044 ;;Total ram usage:       25 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    2
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_appADC
  3051 ;;		_appBat
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text13
  3056  000C86                     __ptext13:
  3057                           	callstack 0
  3058  000C86                     ___fldiv:
  3059                           	callstack 26
  3060  000C86  5032               	movf	(___fldiv@b+3)^0,w,c
  3061  000C88  0B80               	andlw	128
  3062  000C8A  6E3F               	movwf	___fldiv@sign^0,c
  3063  000C8C  5032               	movf	(___fldiv@b+3)^0,w,c
  3064  000C8E  2432               	addwf	(___fldiv@b+3)^0,w,c
  3065  000C90  6E46               	movwf	___fldiv@bexp^0,c
  3066  000C92  AE31               	btfss	(___fldiv@b+2)^0,7,c
  3067  000C94  EF4E  F006         	goto	u2971
  3068  000C98  EF50  F006         	goto	u2970
  3069  000C9C                     u2971:
  3070  000C9C  EF51  F006         	goto	l3383
  3071  000CA0                     u2970:
  3072  000CA0  8046               	bsf	___fldiv@bexp^0,0,c
  3073  000CA2                     l3383:
  3074  000CA2  5046               	movf	___fldiv@bexp^0,w,c
  3075  000CA4  B4D8               	btfsc	status,2,c
  3076  000CA6  EF57  F006         	goto	u2981
  3077  000CAA  EF59  F006         	goto	u2980
  3078  000CAE                     u2981:
  3079  000CAE  EF6E  F006         	goto	l3393
  3080  000CB2                     u2980:
  3081  000CB2  2846               	incf	___fldiv@bexp^0,w,c
  3082  000CB4  A4D8               	btfss	status,2,c
  3083  000CB6  EF5F  F006         	goto	u2991
  3084  000CBA  EF61  F006         	goto	u2990
  3085  000CBE                     u2991:
  3086  000CBE  EF69  F006         	goto	l3389
  3087  000CC2                     u2990:
  3088  000CC2  0E00               	movlw	0
  3089  000CC4  6E2F               	movwf	___fldiv@b^0,c
  3090  000CC6  0E00               	movlw	0
  3091  000CC8  6E30               	movwf	(___fldiv@b+1)^0,c
  3092  000CCA  0E00               	movlw	0
  3093  000CCC  6E31               	movwf	(___fldiv@b+2)^0,c
  3094  000CCE  0E00               	movlw	0
  3095  000CD0  6E32               	movwf	(___fldiv@b+3)^0,c
  3096  000CD2                     l3389:
  3097  000CD2  8E31               	bsf	(___fldiv@b+2)^0,7,c
  3098  000CD4  0E00               	movlw	0
  3099  000CD6  6E32               	movwf	(___fldiv@b+3)^0,c
  3100  000CD8  EF76  F006         	goto	l3395
  3101  000CDC                     l3393:
  3102  000CDC  0E00               	movlw	0
  3103  000CDE  6E2F               	movwf	___fldiv@b^0,c
  3104  000CE0  0E00               	movlw	0
  3105  000CE2  6E30               	movwf	(___fldiv@b+1)^0,c
  3106  000CE4  0E00               	movlw	0
  3107  000CE6  6E31               	movwf	(___fldiv@b+2)^0,c
  3108  000CE8  0E00               	movlw	0
  3109  000CEA  6E32               	movwf	(___fldiv@b+3)^0,c
  3110  000CEC                     l3395:
  3111  000CEC  5036               	movf	(___fldiv@a+3)^0,w,c
  3112  000CEE  0B80               	andlw	128
  3113  000CF0  1A3F               	xorwf	___fldiv@sign^0,f,c
  3114  000CF2  5036               	movf	(___fldiv@a+3)^0,w,c
  3115  000CF4  2436               	addwf	(___fldiv@a+3)^0,w,c
  3116  000CF6  6E47               	movwf	___fldiv@aexp^0,c
  3117  000CF8  AE35               	btfss	(___fldiv@a+2)^0,7,c
  3118  000CFA  EF81  F006         	goto	u3001
  3119  000CFE  EF83  F006         	goto	u3000
  3120  000D02                     u3001:
  3121  000D02  EF84  F006         	goto	l3403
  3122  000D06                     u3000:
  3123  000D06  8047               	bsf	___fldiv@aexp^0,0,c
  3124  000D08                     l3403:
  3125  000D08  5047               	movf	___fldiv@aexp^0,w,c
  3126  000D0A  B4D8               	btfsc	status,2,c
  3127  000D0C  EF8A  F006         	goto	u3011
  3128  000D10  EF8C  F006         	goto	u3010
  3129  000D14                     u3011:
  3130  000D14  EFA1  F006         	goto	l3413
  3131  000D18                     u3010:
  3132  000D18  2847               	incf	___fldiv@aexp^0,w,c
  3133  000D1A  A4D8               	btfss	status,2,c
  3134  000D1C  EF92  F006         	goto	u3021
  3135  000D20  EF94  F006         	goto	u3020
  3136  000D24                     u3021:
  3137  000D24  EF9C  F006         	goto	l3409
  3138  000D28                     u3020:
  3139  000D28  0E00               	movlw	0
  3140  000D2A  6E33               	movwf	___fldiv@a^0,c
  3141  000D2C  0E00               	movlw	0
  3142  000D2E  6E34               	movwf	(___fldiv@a+1)^0,c
  3143  000D30  0E00               	movlw	0
  3144  000D32  6E35               	movwf	(___fldiv@a+2)^0,c
  3145  000D34  0E00               	movlw	0
  3146  000D36  6E36               	movwf	(___fldiv@a+3)^0,c
  3147  000D38                     l3409:
  3148  000D38  8E35               	bsf	(___fldiv@a+2)^0,7,c
  3149  000D3A  0E00               	movlw	0
  3150  000D3C  6E36               	movwf	(___fldiv@a+3)^0,c
  3151  000D3E  EFA9  F006         	goto	l3415
  3152  000D42                     l3413:
  3153  000D42  0E00               	movlw	0
  3154  000D44  6E33               	movwf	___fldiv@a^0,c
  3155  000D46  0E00               	movlw	0
  3156  000D48  6E34               	movwf	(___fldiv@a+1)^0,c
  3157  000D4A  0E00               	movlw	0
  3158  000D4C  6E35               	movwf	(___fldiv@a+2)^0,c
  3159  000D4E  0E00               	movlw	0
  3160  000D50  6E36               	movwf	(___fldiv@a+3)^0,c
  3161  000D52                     l3415:
  3162  000D52  5033               	movf	___fldiv@a^0,w,c
  3163  000D54  1034               	iorwf	(___fldiv@a+1)^0,w,c
  3164  000D56  1035               	iorwf	(___fldiv@a+2)^0,w,c
  3165  000D58  1036               	iorwf	(___fldiv@a+3)^0,w,c
  3166  000D5A  A4D8               	btfss	status,2,c
  3167  000D5C  EFB2  F006         	goto	u3031
  3168  000D60  EFB4  F006         	goto	u3030
  3169  000D64                     u3031:
  3170  000D64  EFCC  F006         	goto	l3427
  3171  000D68                     u3030:
  3172  000D68  0E00               	movlw	0
  3173  000D6A  6E2F               	movwf	___fldiv@b^0,c
  3174  000D6C  0E00               	movlw	0
  3175  000D6E  6E30               	movwf	(___fldiv@b+1)^0,c
  3176  000D70  0E00               	movlw	0
  3177  000D72  6E31               	movwf	(___fldiv@b+2)^0,c
  3178  000D74  0E00               	movlw	0
  3179  000D76  6E32               	movwf	(___fldiv@b+3)^0,c
  3180  000D78  0E80               	movlw	128
  3181  000D7A  1231               	iorwf	(___fldiv@b+2)^0,f,c
  3182  000D7C  0E7F               	movlw	127
  3183  000D7E  1232               	iorwf	(___fldiv@b+3)^0,f,c
  3184  000D80                     l3421:
  3185  000D80  503F               	movf	___fldiv@sign^0,w,c
  3186  000D82  1232               	iorwf	(___fldiv@b+3)^0,f,c
  3187  000D84  C02F  F02F         	movff	___fldiv@b,?___fldiv
  3188  000D88  C030  F030         	movff	___fldiv@b+1,?___fldiv+1
  3189  000D8C  C031  F031         	movff	___fldiv@b+2,?___fldiv+2
  3190  000D90  C032  F032         	movff	___fldiv@b+3,?___fldiv+3
  3191  000D94  EF0F  F008         	goto	l946
  3192  000D98                     l3427:
  3193  000D98  5046               	movf	___fldiv@bexp^0,w,c
  3194  000D9A  A4D8               	btfss	status,2,c
  3195  000D9C  EFD2  F006         	goto	u3041
  3196  000DA0  EFD4  F006         	goto	u3040
  3197  000DA4                     u3041:
  3198  000DA4  EFDE  F006         	goto	l3435
  3199  000DA8                     u3040:
  3200  000DA8  0E00               	movlw	0
  3201  000DAA  6E2F               	movwf	?___fldiv^0,c
  3202  000DAC  0E00               	movlw	0
  3203  000DAE  6E30               	movwf	(?___fldiv+1)^0,c
  3204  000DB0  0E00               	movlw	0
  3205  000DB2  6E31               	movwf	(?___fldiv+2)^0,c
  3206  000DB4  0E00               	movlw	0
  3207  000DB6  6E32               	movwf	(?___fldiv+3)^0,c
  3208  000DB8  EF0F  F008         	goto	l946
  3209  000DBC                     l3435:
  3210  000DBC  5047               	movf	___fldiv@aexp^0,w,c
  3211  000DBE  C046  F037         	movff	___fldiv@bexp,??___fldiv
  3212  000DC2  6A38               	clrf	(??___fldiv+1)^0,c
  3213  000DC4  5E37               	subwf	??___fldiv^0,f,c
  3214  000DC6  0E00               	movlw	0
  3215  000DC8  5A38               	subwfb	(??___fldiv+1)^0,f,c
  3216  000DCA  0E7F               	movlw	127
  3217  000DCC  2437               	addwf	??___fldiv^0,w,c
  3218  000DCE  6E40               	movwf	___fldiv@new_exp^0,c
  3219  000DD0  0E00               	movlw	0
  3220  000DD2  2038               	addwfc	(??___fldiv+1)^0,w,c
  3221  000DD4  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3222  000DD6  C02F  F03B         	movff	___fldiv@b,___fldiv@rem
  3223  000DDA  C030  F03C         	movff	___fldiv@b+1,___fldiv@rem+1
  3224  000DDE  C031  F03D         	movff	___fldiv@b+2,___fldiv@rem+2
  3225  000DE2  C032  F03E         	movff	___fldiv@b+3,___fldiv@rem+3
  3226  000DE6  0E00               	movlw	0
  3227  000DE8  6E2F               	movwf	___fldiv@b^0,c
  3228  000DEA  0E00               	movlw	0
  3229  000DEC  6E30               	movwf	(___fldiv@b+1)^0,c
  3230  000DEE  0E00               	movlw	0
  3231  000DF0  6E31               	movwf	(___fldiv@b+2)^0,c
  3232  000DF2  0E00               	movlw	0
  3233  000DF4  6E32               	movwf	(___fldiv@b+3)^0,c
  3234  000DF6  0E00               	movlw	0
  3235  000DF8  6E42               	movwf	___fldiv@grs^0,c
  3236  000DFA  0E00               	movlw	0
  3237  000DFC  6E43               	movwf	(___fldiv@grs+1)^0,c
  3238  000DFE  0E00               	movlw	0
  3239  000E00  6E44               	movwf	(___fldiv@grs+2)^0,c
  3240  000E02  0E00               	movlw	0
  3241  000E04  6E45               	movwf	(___fldiv@grs+3)^0,c
  3242  000E06  0E00               	movlw	0
  3243  000E08  6E47               	movwf	___fldiv@aexp^0,c
  3244  000E0A  EF3F  F007         	goto	l948
  3245  000E0E                     l3445:
  3246  000E0E  5047               	movf	___fldiv@aexp^0,w,c
  3247  000E10  B4D8               	btfsc	status,2,c
  3248  000E12  EF0D  F007         	goto	u3051
  3249  000E16  EF0F  F007         	goto	u3050
  3250  000E1A                     u3051:
  3251  000E1A  EF26  F007         	goto	l3453
  3252  000E1E                     u3050:
  3253  000E1E  90D8               	bcf	status,0,c
  3254  000E20  363B               	rlcf	___fldiv@rem^0,f,c
  3255  000E22  363C               	rlcf	(___fldiv@rem+1)^0,f,c
  3256  000E24  363D               	rlcf	(___fldiv@rem+2)^0,f,c
  3257  000E26  363E               	rlcf	(___fldiv@rem+3)^0,f,c
  3258  000E28  90D8               	bcf	status,0,c
  3259  000E2A  362F               	rlcf	___fldiv@b^0,f,c
  3260  000E2C  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3261  000E2E  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3262  000E30  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3263  000E32  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3264  000E34  EF1E  F007         	goto	u3061
  3265  000E38  EF20  F007         	goto	u3060
  3266  000E3C                     u3061:
  3267  000E3C  EF21  F007         	goto	l951
  3268  000E40                     u3060:
  3269  000E40  802F               	bsf	___fldiv@b^0,0,c
  3270  000E42                     l951:
  3271  000E42  90D8               	bcf	status,0,c
  3272  000E44  3642               	rlcf	___fldiv@grs^0,f,c
  3273  000E46  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3274  000E48  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3275  000E4A  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3276  000E4C                     l3453:
  3277  000E4C  5033               	movf	___fldiv@a^0,w,c
  3278  000E4E  5C3B               	subwf	___fldiv@rem^0,w,c
  3279  000E50  5034               	movf	(___fldiv@a+1)^0,w,c
  3280  000E52  583C               	subwfb	(___fldiv@rem+1)^0,w,c
  3281  000E54  5035               	movf	(___fldiv@a+2)^0,w,c
  3282  000E56  583D               	subwfb	(___fldiv@rem+2)^0,w,c
  3283  000E58  5036               	movf	(___fldiv@a+3)^0,w,c
  3284  000E5A  583E               	subwfb	(___fldiv@rem+3)^0,w,c
  3285  000E5C  A0D8               	btfss	status,0,c
  3286  000E5E  EF33  F007         	goto	u3071
  3287  000E62  EF35  F007         	goto	u3070
  3288  000E66                     u3071:
  3289  000E66  EF3E  F007         	goto	l3459
  3290  000E6A                     u3070:
  3291  000E6A  8C45               	bsf	(___fldiv@grs+3)^0,6,c
  3292  000E6C  5033               	movf	___fldiv@a^0,w,c
  3293  000E6E  5E3B               	subwf	___fldiv@rem^0,f,c
  3294  000E70  5034               	movf	(___fldiv@a+1)^0,w,c
  3295  000E72  5A3C               	subwfb	(___fldiv@rem+1)^0,f,c
  3296  000E74  5035               	movf	(___fldiv@a+2)^0,w,c
  3297  000E76  5A3D               	subwfb	(___fldiv@rem+2)^0,f,c
  3298  000E78  5036               	movf	(___fldiv@a+3)^0,w,c
  3299  000E7A  5A3E               	subwfb	(___fldiv@rem+3)^0,f,c
  3300  000E7C                     l3459:
  3301  000E7C  2A47               	incf	___fldiv@aexp^0,f,c
  3302  000E7E                     l948:
  3303  000E7E  0E19               	movlw	25
  3304  000E80  6447               	cpfsgt	___fldiv@aexp^0,c
  3305  000E82  EF45  F007         	goto	u3081
  3306  000E86  EF47  F007         	goto	u3080
  3307  000E8A                     u3081:
  3308  000E8A  EF07  F007         	goto	l3445
  3309  000E8E                     u3080:
  3310  000E8E  503B               	movf	___fldiv@rem^0,w,c
  3311  000E90  103C               	iorwf	(___fldiv@rem+1)^0,w,c
  3312  000E92  103D               	iorwf	(___fldiv@rem+2)^0,w,c
  3313  000E94  103E               	iorwf	(___fldiv@rem+3)^0,w,c
  3314  000E96  B4D8               	btfsc	status,2,c
  3315  000E98  EF50  F007         	goto	u3091
  3316  000E9C  EF52  F007         	goto	u3090
  3317  000EA0                     u3091:
  3318  000EA0  EF6A  F007         	goto	l3471
  3319  000EA4                     u3090:
  3320  000EA4  8042               	bsf	___fldiv@grs^0,0,c
  3321  000EA6  EF6A  F007         	goto	l3471
  3322  000EAA                     l3465:
  3323  000EAA  90D8               	bcf	status,0,c
  3324  000EAC  362F               	rlcf	___fldiv@b^0,f,c
  3325  000EAE  3630               	rlcf	(___fldiv@b+1)^0,f,c
  3326  000EB0  3631               	rlcf	(___fldiv@b+2)^0,f,c
  3327  000EB2  3632               	rlcf	(___fldiv@b+3)^0,f,c
  3328  000EB4  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3329  000EB6  EF5F  F007         	goto	u3101
  3330  000EBA  EF61  F007         	goto	u3100
  3331  000EBE                     u3101:
  3332  000EBE  EF62  F007         	goto	l957
  3333  000EC2                     u3100:
  3334  000EC2  802F               	bsf	___fldiv@b^0,0,c
  3335  000EC4                     l957:
  3336  000EC4  90D8               	bcf	status,0,c
  3337  000EC6  3642               	rlcf	___fldiv@grs^0,f,c
  3338  000EC8  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3339  000ECA  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3340  000ECC  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3341  000ECE  0640               	decf	___fldiv@new_exp^0,f,c
  3342  000ED0  A0D8               	btfss	status,0,c
  3343  000ED2  0641               	decf	(___fldiv@new_exp+1)^0,f,c
  3344  000ED4                     l3471:
  3345  000ED4  AE31               	btfss	(___fldiv@b+2)^0,7,c
  3346  000ED6  EF6F  F007         	goto	u3111
  3347  000EDA  EF71  F007         	goto	u3110
  3348  000EDE                     u3111:
  3349  000EDE  EF55  F007         	goto	l3465
  3350  000EE2                     u3110:
  3351  000EE2  0E00               	movlw	0
  3352  000EE4  6E47               	movwf	___fldiv@aexp^0,c
  3353  000EE6  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3354  000EE8  EF78  F007         	goto	u3121
  3355  000EEC  EF7A  F007         	goto	u3120
  3356  000EF0                     u3121:
  3357  000EF0  EF9E  F007         	goto	l959
  3358  000EF4                     u3120:
  3359  000EF4  0EFF               	movlw	255
  3360  000EF6  1442               	andwf	___fldiv@grs^0,w,c
  3361  000EF8  6E37               	movwf	??___fldiv^0,c
  3362  000EFA  0EFF               	movlw	255
  3363  000EFC  1443               	andwf	(___fldiv@grs+1)^0,w,c
  3364  000EFE  6E38               	movwf	(??___fldiv+1)^0,c
  3365  000F00  0EFF               	movlw	255
  3366  000F02  1444               	andwf	(___fldiv@grs+2)^0,w,c
  3367  000F04  6E39               	movwf	(??___fldiv+2)^0,c
  3368  000F06  0E7F               	movlw	127
  3369  000F08  1445               	andwf	(___fldiv@grs+3)^0,w,c
  3370  000F0A  6E3A               	movwf	(??___fldiv+3)^0,c
  3371  000F0C  5037               	movf	??___fldiv^0,w,c
  3372  000F0E  1038               	iorwf	(??___fldiv+1)^0,w,c
  3373  000F10  1039               	iorwf	(??___fldiv+2)^0,w,c
  3374  000F12  103A               	iorwf	(??___fldiv+3)^0,w,c
  3375  000F14  B4D8               	btfsc	status,2,c
  3376  000F16  EF8F  F007         	goto	u3131
  3377  000F1A  EF91  F007         	goto	u3130
  3378  000F1E                     u3131:
  3379  000F1E  EF95  F007         	goto	l960
  3380  000F22                     u3130:
  3381  000F22                     l3479:
  3382  000F22  0E01               	movlw	1
  3383  000F24  6E47               	movwf	___fldiv@aexp^0,c
  3384  000F26  EF9E  F007         	goto	l959
  3385  000F2A                     l960:
  3386  000F2A  A02F               	btfss	___fldiv@b^0,0,c
  3387  000F2C  EF9A  F007         	goto	u3141
  3388  000F30  EF9C  F007         	goto	u3140
  3389  000F34                     u3141:
  3390  000F34  EF9E  F007         	goto	l959
  3391  000F38                     u3140:
  3392  000F38  EF91  F007         	goto	l3479
  3393  000F3C                     l959:
  3394  000F3C  5047               	movf	___fldiv@aexp^0,w,c
  3395  000F3E  B4D8               	btfsc	status,2,c
  3396  000F40  EFA4  F007         	goto	u3151
  3397  000F44  EFA6  F007         	goto	u3150
  3398  000F48                     u3151:
  3399  000F48  EFCA  F007         	goto	l3491
  3400  000F4C                     u3150:
  3401  000F4C  0E01               	movlw	1
  3402  000F4E  262F               	addwf	___fldiv@b^0,f,c
  3403  000F50  0E00               	movlw	0
  3404  000F52  2230               	addwfc	(___fldiv@b+1)^0,f,c
  3405  000F54  2231               	addwfc	(___fldiv@b+2)^0,f,c
  3406  000F56  2232               	addwfc	(___fldiv@b+3)^0,f,c
  3407  000F58  A032               	btfss	(___fldiv@b+3)^0,0,c
  3408  000F5A  EFB1  F007         	goto	u3161
  3409  000F5E  EFB3  F007         	goto	u3160
  3410  000F62                     u3161:
  3411  000F62  EFCA  F007         	goto	l3491
  3412  000F66                     u3160:
  3413  000F66  C02F  F037         	movff	___fldiv@b,??___fldiv
  3414  000F6A  C030  F038         	movff	___fldiv@b+1,??___fldiv+1
  3415  000F6E  C031  F039         	movff	___fldiv@b+2,??___fldiv+2
  3416  000F72  C032  F03A         	movff	___fldiv@b+3,??___fldiv+3
  3417  000F76  343A               	rlcf	(??___fldiv+3)^0,w,c
  3418  000F78  323A               	rrcf	(??___fldiv+3)^0,f,c
  3419  000F7A  3239               	rrcf	(??___fldiv+2)^0,f,c
  3420  000F7C  3238               	rrcf	(??___fldiv+1)^0,f,c
  3421  000F7E  3237               	rrcf	??___fldiv^0,f,c
  3422  000F80  C037  F02F         	movff	??___fldiv,___fldiv@b
  3423  000F84  C038  F030         	movff	??___fldiv+1,___fldiv@b+1
  3424  000F88  C039  F031         	movff	??___fldiv+2,___fldiv@b+2
  3425  000F8C  C03A  F032         	movff	??___fldiv+3,___fldiv@b+3
  3426  000F90  4A40               	infsnz	___fldiv@new_exp^0,f,c
  3427  000F92  2A41               	incf	(___fldiv@new_exp+1)^0,f,c
  3428  000F94                     l3491:
  3429  000F94  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3430  000F96  EFD5  F007         	goto	u3171
  3431  000F9A  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3432  000F9C  E108               	bnz	u3170
  3433  000F9E  2840               	incf	___fldiv@new_exp^0,w,c
  3434  000FA0  A0D8               	btfss	status,0,c
  3435  000FA2  EFD5  F007         	goto	u3171
  3436  000FA6  EFD7  F007         	goto	u3170
  3437  000FAA                     u3171:
  3438  000FAA  EFE2  F007         	goto	l3495
  3439  000FAE                     u3170:
  3440  000FAE  0E00               	movlw	0
  3441  000FB0  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3442  000FB2  6840               	setf	___fldiv@new_exp^0,c
  3443  000FB4  0E00               	movlw	0
  3444  000FB6  6E2F               	movwf	___fldiv@b^0,c
  3445  000FB8  0E00               	movlw	0
  3446  000FBA  6E30               	movwf	(___fldiv@b+1)^0,c
  3447  000FBC  0E00               	movlw	0
  3448  000FBE  6E31               	movwf	(___fldiv@b+2)^0,c
  3449  000FC0  0E00               	movlw	0
  3450  000FC2  6E32               	movwf	(___fldiv@b+3)^0,c
  3451  000FC4                     l3495:
  3452  000FC4  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3453  000FC6  EFEF  F007         	goto	u3180
  3454  000FCA  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3455  000FCC  E106               	bnz	u3181
  3456  000FCE  0440               	decf	___fldiv@new_exp^0,w,c
  3457  000FD0  B0D8               	btfsc	status,0,c
  3458  000FD2  EFED  F007         	goto	u3181
  3459  000FD6  EFEF  F007         	goto	u3180
  3460  000FDA                     u3181:
  3461  000FDA  EFFD  F007         	goto	l3499
  3462  000FDE                     u3180:
  3463  000FDE  0E00               	movlw	0
  3464  000FE0  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3465  000FE2  0E00               	movlw	0
  3466  000FE4  6E40               	movwf	___fldiv@new_exp^0,c
  3467  000FE6  0E00               	movlw	0
  3468  000FE8  6E2F               	movwf	___fldiv@b^0,c
  3469  000FEA  0E00               	movlw	0
  3470  000FEC  6E30               	movwf	(___fldiv@b+1)^0,c
  3471  000FEE  0E00               	movlw	0
  3472  000FF0  6E31               	movwf	(___fldiv@b+2)^0,c
  3473  000FF2  0E00               	movlw	0
  3474  000FF4  6E32               	movwf	(___fldiv@b+3)^0,c
  3475  000FF6  0E00               	movlw	0
  3476  000FF8  6E3F               	movwf	___fldiv@sign^0,c
  3477  000FFA                     l3499:
  3478  000FFA  C040  F046         	movff	___fldiv@new_exp,___fldiv@bexp
  3479  000FFE  A046               	btfss	___fldiv@bexp^0,0,c
  3480  001000  EF04  F008         	goto	u3191
  3481  001004  EF06  F008         	goto	u3190
  3482  001008                     u3191:
  3483  001008  EF09  F008         	goto	l3505
  3484  00100C                     u3190:
  3485  00100C  8E31               	bsf	(___fldiv@b+2)^0,7,c
  3486  00100E  EF0A  F008         	goto	l3507
  3487  001012                     l3505:
  3488  001012  9E31               	bcf	(___fldiv@b+2)^0,7,c
  3489  001014                     l3507:
  3490  001014  90D8               	bcf	status,0,c
  3491  001016  3046               	rrcf	___fldiv@bexp^0,w,c
  3492  001018  6E32               	movwf	(___fldiv@b+3)^0,c
  3493  00101A  EFC0  F006         	goto	l3421
  3494  00101E                     l946:
  3495  00101E  0012               	return		;funcret
  3496  001020                     __end_of___fldiv:
  3497                           	callstack 0
  3498                           
  3499 ;; *************** function ___awmod *****************
  3500 ;; Defined at:
  3501 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  dividend        2   81[COMRAM] int 
  3504 ;;  divisor         2   83[COMRAM] int 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  sign            1   86[COMRAM] unsigned char 
  3507 ;;  counter         1   85[COMRAM] unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  2   81[COMRAM] int 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3517 ;;      Params:         4       0       0       0       0       0       0       0       0
  3518 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3520 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3521 ;;Total ram usage:        6 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    2
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_appADC
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text14
  3532  002C3E                     __ptext14:
  3533                           	callstack 0
  3534  002C3E                     ___awmod:
  3535                           	callstack 26
  3536  002C3E  0E00               	movlw	0
  3537  002C40  6E57               	movwf	___awmod@sign^0,c
  3538  002C42  BE53               	btfsc	(___awmod@dividend+1)^0,7,c
  3539  002C44  EF28  F016         	goto	u3390
  3540  002C48  EF26  F016         	goto	u3391
  3541  002C4C                     u3391:
  3542  002C4C  EF2E  F016         	goto	l3653
  3543  002C50                     u3390:
  3544  002C50  6C52               	negf	___awmod@dividend^0,c
  3545  002C52  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3546  002C54  B0D8               	btfsc	status,0,c
  3547  002C56  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3548  002C58  0E01               	movlw	1
  3549  002C5A  6E57               	movwf	___awmod@sign^0,c
  3550  002C5C                     l3653:
  3551  002C5C  BE55               	btfsc	(___awmod@divisor+1)^0,7,c
  3552  002C5E  EF35  F016         	goto	u3400
  3553  002C62  EF33  F016         	goto	u3401
  3554  002C66                     u3401:
  3555  002C66  EF39  F016         	goto	l3657
  3556  002C6A                     u3400:
  3557  002C6A  6C54               	negf	___awmod@divisor^0,c
  3558  002C6C  1E55               	comf	(___awmod@divisor+1)^0,f,c
  3559  002C6E  B0D8               	btfsc	status,0,c
  3560  002C70  2A55               	incf	(___awmod@divisor+1)^0,f,c
  3561  002C72                     l3657:
  3562  002C72  5054               	movf	___awmod@divisor^0,w,c
  3563  002C74  1055               	iorwf	(___awmod@divisor+1)^0,w,c
  3564  002C76  B4D8               	btfsc	status,2,c
  3565  002C78  EF40  F016         	goto	u3411
  3566  002C7C  EF42  F016         	goto	u3410
  3567  002C80                     u3411:
  3568  002C80  EF66  F016         	goto	l3673
  3569  002C84                     u3410:
  3570  002C84  0E01               	movlw	1
  3571  002C86  6E56               	movwf	___awmod@counter^0,c
  3572  002C88  EF4A  F016         	goto	l3663
  3573  002C8C                     l3661:
  3574  002C8C  90D8               	bcf	status,0,c
  3575  002C8E  3654               	rlcf	___awmod@divisor^0,f,c
  3576  002C90  3655               	rlcf	(___awmod@divisor+1)^0,f,c
  3577  002C92  2A56               	incf	___awmod@counter^0,f,c
  3578  002C94                     l3663:
  3579  002C94  AE55               	btfss	(___awmod@divisor+1)^0,7,c
  3580  002C96  EF4F  F016         	goto	u3421
  3581  002C9A  EF51  F016         	goto	u3420
  3582  002C9E                     u3421:
  3583  002C9E  EF46  F016         	goto	l3661
  3584  002CA2                     u3420:
  3585  002CA2                     l3665:
  3586  002CA2  5054               	movf	___awmod@divisor^0,w,c
  3587  002CA4  5C52               	subwf	___awmod@dividend^0,w,c
  3588  002CA6  5055               	movf	(___awmod@divisor+1)^0,w,c
  3589  002CA8  5853               	subwfb	(___awmod@dividend+1)^0,w,c
  3590  002CAA  A0D8               	btfss	status,0,c
  3591  002CAC  EF5A  F016         	goto	u3431
  3592  002CB0  EF5C  F016         	goto	u3430
  3593  002CB4                     u3431:
  3594  002CB4  EF60  F016         	goto	l3669
  3595  002CB8                     u3430:
  3596  002CB8  5054               	movf	___awmod@divisor^0,w,c
  3597  002CBA  5E52               	subwf	___awmod@dividend^0,f,c
  3598  002CBC  5055               	movf	(___awmod@divisor+1)^0,w,c
  3599  002CBE  5A53               	subwfb	(___awmod@dividend+1)^0,f,c
  3600  002CC0                     l3669:
  3601  002CC0  90D8               	bcf	status,0,c
  3602  002CC2  3255               	rrcf	(___awmod@divisor+1)^0,f,c
  3603  002CC4  3254               	rrcf	___awmod@divisor^0,f,c
  3604  002CC6  2E56               	decfsz	___awmod@counter^0,f,c
  3605  002CC8  EF51  F016         	goto	l3665
  3606  002CCC                     l3673:
  3607  002CCC  5057               	movf	___awmod@sign^0,w,c
  3608  002CCE  B4D8               	btfsc	status,2,c
  3609  002CD0  EF6C  F016         	goto	u3441
  3610  002CD4  EF6E  F016         	goto	u3440
  3611  002CD8                     u3441:
  3612  002CD8  EF72  F016         	goto	l3677
  3613  002CDC                     u3440:
  3614  002CDC  6C52               	negf	___awmod@dividend^0,c
  3615  002CDE  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3616  002CE0  B0D8               	btfsc	status,0,c
  3617  002CE2  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3618  002CE4                     l3677:
  3619  002CE4  C052  F052         	movff	___awmod@dividend,?___awmod
  3620  002CE8  C053  F053         	movff	___awmod@dividend+1,?___awmod+1
  3621  002CEC  0012               	return		;funcret
  3622  002CEE                     __end_of___awmod:
  3623                           	callstack 0
  3624                           
  3625 ;; *************** function _appInit *****************
  3626 ;; Defined at:
  3627 ;;		line 11 in file "app.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3641 ;;      Params:         0       0       0       0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3645 ;;Total ram usage:        0 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    5
  3648 ;; This function calls:
  3649 ;;		_adcInit
  3650 ;;		_appCounterInit
  3651 ;;		_appISRConfig
  3652 ;;		_appLCD_Init
  3653 ;;		_appTimerInit
  3654 ;;		_appTimerStart
  3655 ;;		_servoInit
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text15
  3662  003308                     __ptext15:
  3663                           	callstack 0
  3664  003308                     _appInit:
  3665                           	callstack 25
  3666  003308                     
  3667                           ;app.c: 13:     appISRConfig();
  3668  003308  ECDA  F019         	call	_appISRConfig	;wreg free
  3669  00330C                     
  3670                           ;app.c: 14:     appLCD_Init();
  3671  00330C  ECC0  F016         	call	_appLCD_Init	;wreg free
  3672  003310                     
  3673                           ;app.c: 15:     adcInit(2);
  3674  003310  0E02               	movlw	2
  3675  003312  EC1B  F018         	call	_adcInit
  3676  003316                     
  3677                           ;app.c: 16:     appTimerInit();
  3678  003316  EC58  F019         	call	_appTimerInit	;wreg free
  3679  00331A                     
  3680                           ;app.c: 17:     appCounterInit(0);
  3681  00331A  0E00               	movlw	0
  3682  00331C  6E05               	movwf	(appCounterInit@reload+1)^0,c
  3683  00331E  0E00               	movlw	0
  3684  003320  6E04               	movwf	appCounterInit@reload^0,c
  3685  003322  ECD5  F019         	call	_appCounterInit	;wreg free
  3686  003326                     
  3687                           ;app.c: 18:     servoInit();
  3688  003326  ECB8  F019         	call	_servoInit	;wreg free
  3689  00332A                     
  3690                           ;app.c: 19:     appTimerStart();
  3691  00332A  ECCF  F019         	call	_appTimerStart	;wreg free
  3692  00332E  0012               	return		;funcret
  3693  003330                     __end_of_appInit:
  3694                           	callstack 0
  3695                           
  3696 ;; *************** function _servoInit *****************
  3697 ;; Defined at:
  3698 ;;		line 3 in file "servo.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3712 ;;      Params:         0       0       0       0       0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    2
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_appInit
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text16
  3727  003370                     __ptext16:
  3728                           	callstack 0
  3729  003370                     _servoInit:
  3730                           	callstack 27
  3731  003370                     
  3732                           ;servo.c: 9:     T2CONbits.T2CKPS = 0b10;
  3733  003370  50CA               	movf	202,w,c	;volatile
  3734  003372  0BFC               	andlw	-4
  3735  003374  0902               	iorlw	2
  3736  003376  6ECA               	movwf	202,c	;volatile
  3737  003378                     
  3738                           ;servo.c: 10:     T2CONbits.T2OUTPS0 = 1;
  3739  003378  86CA               	bsf	202,3,c	;volatile
  3740  00337A                     
  3741                           ;servo.c: 11:     T2CONbits.T2OUTPS1 = 1;
  3742  00337A  88CA               	bsf	202,4,c	;volatile
  3743  00337C                     
  3744                           ;servo.c: 12:     T2CONbits.T2OUTPS2 = 1;
  3745  00337C  8ACA               	bsf	202,5,c	;volatile
  3746  00337E                     
  3747                           ;servo.c: 13:     T2CONbits.T2OUTPS3 = 1;
  3748  00337E  8CCA               	bsf	202,6,c	;volatile
  3749  003380                     
  3750                           ;servo.c: 14:     TRISEbits.TRISE0 = 0;
  3751  003380  9096               	bcf	150,0,c	;volatile
  3752  003382                     
  3753                           ;servo.c: 15:     TRISEbits.TRISE1 = 0;
  3754  003382  9296               	bcf	150,1,c	;volatile
  3755  003384                     
  3756                           ;servo.c: 16:     TRISEbits.TRISE2 = 0;
  3757  003384  9496               	bcf	150,2,c	;volatile
  3758  003386  0012               	return		;funcret
  3759  003388                     __end_of_servoInit:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _appTimerInit *****************
  3763 ;; Defined at:
  3764 ;;		line 84 in file "servo.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    2
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_appInit
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text17
  3793  0032B0                     __ptext17:
  3794                           	callstack 0
  3795  0032B0                     _appTimerInit:
  3796                           	callstack 27
  3797  0032B0                     
  3798                           ;servo.c: 89:     T3CONbits.TMR3ON = 0;
  3799  0032B0  90B1               	bcf	177,0,c	;volatile
  3800                           
  3801                           ;servo.c: 90:     T3CONbits.RD16 = 1;
  3802  0032B2  8EB1               	bsf	177,7,c	;volatile
  3803                           
  3804                           ;servo.c: 91:     T3CONbits.TMR3CS = 0;
  3805  0032B4  92B1               	bcf	177,1,c	;volatile
  3806  0032B6                     
  3807                           ;servo.c: 92:     T3CONbits.T3CKPS = 0b11;
  3808  0032B6  0E30               	movlw	48
  3809  0032B8  12B1               	iorwf	177,f,c	;volatile
  3810  0032BA                     
  3811                           ;servo.c: 93:     T3CONbits.T3NSYNC = 1;
  3812  0032BA  84B1               	bsf	177,2,c	;volatile
  3813                           
  3814                           ;servo.c: 94:     TMR3 = 20536;
  3815  0032BC  0E50               	movlw	80
  3816  0032BE  6EB3               	movwf	179,c	;volatile
  3817  0032C0  0E38               	movlw	56
  3818  0032C2  6EB2               	movwf	178,c	;volatile
  3819  0032C4                     
  3820                           ;servo.c: 99:     T0CONbits.TMR0ON = 0;
  3821  0032C4  9ED5               	bcf	213,7,c	;volatile
  3822  0032C6                     
  3823                           ;servo.c: 100:     T0CONbits.T08BIT = 1;
  3824  0032C6  8CD5               	bsf	213,6,c	;volatile
  3825  0032C8                     
  3826                           ;servo.c: 101:     T0CONbits.T0CS = 1;
  3827  0032C8  8AD5               	bsf	213,5,c	;volatile
  3828  0032CA                     
  3829                           ;servo.c: 102:     T0CONbits.T0SE = 0;
  3830  0032CA  98D5               	bcf	213,4,c	;volatile
  3831  0032CC                     
  3832                           ;servo.c: 103:     T0CONbits.PSA = 1;
  3833  0032CC  86D5               	bsf	213,3,c	;volatile
  3834  0032CE                     
  3835                           ;servo.c: 105:     TRISAbits.TRISA4 = 1;
  3836  0032CE  8892               	bsf	146,4,c	;volatile
  3837  0032D0                     
  3838                           ;servo.c: 111:     INTCONbits.TMR0IE = 1;
  3839  0032D0  8AF2               	bsf	242,5,c	;volatile
  3840  0032D2                     
  3841                           ;servo.c: 112:     INTCONbits.TMR0IF = 0;
  3842  0032D2  94F2               	bcf	242,2,c	;volatile
  3843  0032D4                     
  3844                           ;servo.c: 113:     INTCON2bits.TMR0IP = 1;
  3845  0032D4  84F1               	bsf	241,2,c	;volatile
  3846  0032D6                     
  3847                           ;servo.c: 119:     PIR2bits.TMR3IF = 0;
  3848  0032D6  92A1               	bcf	161,1,c	;volatile
  3849  0032D8                     
  3850                           ;servo.c: 120:     IPR2bits.TMR3IP = 0;
  3851  0032D8  92A2               	bcf	162,1,c	;volatile
  3852  0032DA                     
  3853                           ;servo.c: 121:     PIE2bits.TMR3IE = 1;
  3854  0032DA  82A0               	bsf	160,1,c	;volatile
  3855  0032DC  0012               	return		;funcret
  3856  0032DE                     __end_of_appTimerInit:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _appLCD_Init *****************
  3860 ;; Defined at:
  3861 ;;		line 197 in file "flex_lcd.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3877 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3878 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3879 ;;Total ram usage:        2 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    4
  3882 ;; This function calls:
  3883 ;;		_Lcd_Cmd
  3884 ;;		_Lcd_Init
  3885 ;;		_Lcd_Out
  3886 ;; This function is called by:
  3887 ;;		_appInit
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text18
  3892  002D80                     __ptext18:
  3893                           	callstack 0
  3894  002D80                     _appLCD_Init:
  3895                           	callstack 25
  3896  002D80                     
  3897                           ;flex_lcd.c: 199:     Lcd_Init();
  3898  002D80  ECBF  F015         	call	_Lcd_Init	;wreg free
  3899                           
  3900                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  3901  002D84  0E01               	movlw	1
  3902  002D86  EC6E  F012         	call	_Lcd_Cmd
  3903                           
  3904                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  3905  002D8A  0E0C               	movlw	12
  3906  002D8C  EC6E  F012         	call	_Lcd_Cmd
  3907  002D90                     
  3908                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  3909  002D90  0E02               	movlw	2
  3910  002D92  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3911  002D94  0E86               	movlw	134
  3912  002D96  6E0E               	movwf	??_appLCD_Init^0,c
  3913  002D98  0E99               	movlw	153
  3914  002D9A                     u4697:
  3915  002D9A  2EE8               	decfsz	wreg,f,c
  3916  002D9C  D7FE               	bra	u4697
  3917  002D9E  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3918  002DA0  D7FC               	bra	u4697
  3919  002DA2  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3920  002DA4  D7FA               	bra	u4697
  3921  002DA6  F000               	nop	
  3922  002DA8                     
  3923                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  3924  002DA8  0E03               	movlw	3
  3925  002DAA  6E07               	movwf	Lcd_Out@x^0,c
  3926  002DAC  0E3A               	movlw	low STR_3
  3927  002DAE  6E08               	movwf	Lcd_Out@buffer^0,c
  3928  002DB0  0E08               	movlw	high STR_3
  3929  002DB2  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3930  002DB4  0E01               	movlw	1
  3931  002DB6  EC93  F014         	call	_Lcd_Out
  3932  002DBA                     
  3933                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  3934  002DBA  0E06               	movlw	6
  3935  002DBC  6E07               	movwf	Lcd_Out@x^0,c
  3936  002DBE  0E4F               	movlw	low STR_4
  3937  002DC0  6E08               	movwf	Lcd_Out@buffer^0,c
  3938  002DC2  0E08               	movlw	high STR_4
  3939  002DC4  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3940  002DC6  0E02               	movlw	2
  3941  002DC8  EC93  F014         	call	_Lcd_Out
  3942  002DCC                     
  3943                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  3944  002DCC  0E1F               	movlw	31
  3945  002DCE  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3946  002DD0  0E71               	movlw	113
  3947  002DD2  6E0E               	movwf	??_appLCD_Init^0,c
  3948  002DD4  0E1E               	movlw	30
  3949  002DD6                     u4707:
  3950  002DD6  2EE8               	decfsz	wreg,f,c
  3951  002DD8  D7FE               	bra	u4707
  3952  002DDA  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3953  002DDC  D7FC               	bra	u4707
  3954  002DDE  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3955  002DE0  D7FA               	bra	u4707
  3956  002DE2  D000               	nop2	
  3957                           
  3958                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  3959  002DE4  0E01               	movlw	1
  3960  002DE6  EC6E  F012         	call	_Lcd_Cmd
  3961  002DEA  0E02               	movlw	2
  3962  002DEC  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3963  002DEE  0E86               	movlw	134
  3964  002DF0  6E0E               	movwf	??_appLCD_Init^0,c
  3965  002DF2  0E99               	movlw	153
  3966  002DF4                     u4717:
  3967  002DF4  2EE8               	decfsz	wreg,f,c
  3968  002DF6  D7FE               	bra	u4717
  3969  002DF8  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3970  002DFA  D7FC               	bra	u4717
  3971  002DFC  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3972  002DFE  D7FA               	bra	u4717
  3973  002E00  F000               	nop	
  3974  002E02  0012               	return		;funcret
  3975  002E04                     __end_of_appLCD_Init:
  3976                           	callstack 0
  3977                           
  3978 ;; *************** function _Lcd_Init *****************
  3979 ;; Defined at:
  3980 ;;		line 31 in file "flex_lcd.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  i               1    7[COMRAM] unsigned char 
  3985 ;;  data            1    0        unsigned char 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0
  3996 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3997 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3998 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3999 ;;Total ram usage:        3 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    3
  4002 ;; This function calls:
  4003 ;;		_Lcd_Cmd
  4004 ;; This function is called by:
  4005 ;;		_appLCD_Init
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text19
  4010  002B7E                     __ptext19:
  4011                           	callstack 0
  4012  002B7E                     _Lcd_Init:
  4013                           	callstack 25
  4014  002B7E                     
  4015                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  4016  002B7E  9E95               	bcf	149,7,c	;volatile
  4017                           
  4018                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  4019  002B80  9C95               	bcf	149,6,c	;volatile
  4020                           
  4021                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  4022  002B82  9A95               	bcf	149,5,c	;volatile
  4023                           
  4024                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  4025  002B84  9895               	bcf	149,4,c	;volatile
  4026                           
  4027                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  4028  002B86  9695               	bcf	149,3,c	;volatile
  4029                           
  4030                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  4031  002B88  9495               	bcf	149,2,c	;volatile
  4032  002B8A                     
  4033                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  4034  002B8A  0E85               	movlw	133
  4035  002B8C  6E07               	movwf	??_Lcd_Init^0,c
  4036  002B8E  0E76               	movlw	118
  4037  002B90                     u4727:
  4038  002B90  2EE8               	decfsz	wreg,f,c
  4039  002B92  D7FE               	bra	u4727
  4040  002B94  2E07               	decfsz	??_Lcd_Init^0,f,c
  4041  002B96  D7FC               	bra	u4727
  4042  002B98  D000               	nop2	
  4043  002B9A                     
  4044                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  4045  002B9A  0E00               	movlw	0
  4046  002B9C  6E08               	movwf	Lcd_Init@i^0,c
  4047  002B9E                     l139:
  4048                           
  4049                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  4050  002B9E  9E8C               	bcf	140,7,c	;volatile
  4051                           
  4052                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  4053  002BA0  9C8C               	bcf	140,6,c	;volatile
  4054                           
  4055                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  4056  002BA2  8A8C               	bsf	140,5,c	;volatile
  4057                           
  4058                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  4059  002BA4  888C               	bsf	140,4,c	;volatile
  4060                           
  4061                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  4062  002BA6  968C               	bcf	140,3,c	;volatile
  4063                           
  4064                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  4065  002BA8  948C               	bcf	140,2,c	;volatile
  4066                           
  4067                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  4068  002BAA  9E8C               	bcf	140,7,c	;volatile
  4069                           
  4070                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  4071  002BAC  9C8C               	bcf	140,6,c	;volatile
  4072                           
  4073                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  4074  002BAE  8A8C               	bsf	140,5,c	;volatile
  4075                           
  4076                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  4077  002BB0  888C               	bsf	140,4,c	;volatile
  4078                           
  4079                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  4080  002BB2  868C               	bsf	140,3,c	;volatile
  4081                           
  4082                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  4083  002BB4  948C               	bcf	140,2,c	;volatile
  4084  002BB6                     
  4085                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  4086  002BB6  0E05               	movlw	5
  4087  002BB8                     u4737:
  4088  002BB8  2EE8               	decfsz	wreg,f,c
  4089  002BBA  D7FE               	bra	u4737
  4090  002BBC                     
  4091                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  4092  002BBC  9E8C               	bcf	140,7,c	;volatile
  4093  002BBE                     
  4094                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  4095  002BBE  9C8C               	bcf	140,6,c	;volatile
  4096  002BC0                     
  4097                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  4098  002BC0  8A8C               	bsf	140,5,c	;volatile
  4099  002BC2                     
  4100                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  4101  002BC2  888C               	bsf	140,4,c	;volatile
  4102  002BC4                     
  4103                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  4104  002BC4  968C               	bcf	140,3,c	;volatile
  4105  002BC6                     
  4106                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  4107  002BC6  948C               	bcf	140,2,c	;volatile
  4108                           
  4109                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  4110  002BC8  0E16               	movlw	22
  4111  002BCA  6E07               	movwf	??_Lcd_Init^0,c
  4112  002BCC  0E6C               	movlw	108
  4113  002BCE                     u4747:
  4114  002BCE  2EE8               	decfsz	wreg,f,c
  4115  002BD0  D7FE               	bra	u4747
  4116  002BD2  2E07               	decfsz	??_Lcd_Init^0,f,c
  4117  002BD4  D7FC               	bra	u4747
  4118  002BD6  D000               	nop2	
  4119  002BD8                     
  4120                           ;flex_lcd.c: 61:     }
  4121  002BD8  2A08               	incf	Lcd_Init@i^0,f,c
  4122  002BDA  0E03               	movlw	3
  4123  002BDC  6408               	cpfsgt	Lcd_Init@i^0,c
  4124  002BDE  EFF3  F015         	goto	u2951
  4125  002BE2  EFF5  F015         	goto	u2950
  4126  002BE6                     u2951:
  4127  002BE6  EFCF  F015         	goto	l139
  4128  002BEA                     u2950:
  4129  002BEA                     
  4130                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  4131  002BEA  9E8C               	bcf	140,7,c	;volatile
  4132                           
  4133                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  4134  002BEC  9C8C               	bcf	140,6,c	;volatile
  4135                           
  4136                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  4137  002BEE  8A8C               	bsf	140,5,c	;volatile
  4138                           
  4139                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  4140  002BF0  988C               	bcf	140,4,c	;volatile
  4141                           
  4142                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  4143  002BF2  968C               	bcf	140,3,c	;volatile
  4144                           
  4145                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  4146  002BF4  948C               	bcf	140,2,c	;volatile
  4147                           
  4148                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  4149  002BF6  9E8C               	bcf	140,7,c	;volatile
  4150                           
  4151                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  4152  002BF8  9C8C               	bcf	140,6,c	;volatile
  4153                           
  4154                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  4155  002BFA  8A8C               	bsf	140,5,c	;volatile
  4156                           
  4157                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  4158  002BFC  988C               	bcf	140,4,c	;volatile
  4159                           
  4160                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  4161  002BFE  868C               	bsf	140,3,c	;volatile
  4162                           
  4163                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  4164  002C00  948C               	bcf	140,2,c	;volatile
  4165  002C02                     
  4166                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  4167  002C02  0E05               	movlw	5
  4168  002C04                     u4757:
  4169  002C04  2EE8               	decfsz	wreg,f,c
  4170  002C06  D7FE               	bra	u4757
  4171  002C08                     
  4172                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  4173  002C08  9E8C               	bcf	140,7,c	;volatile
  4174  002C0A                     
  4175                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  4176  002C0A  9C8C               	bcf	140,6,c	;volatile
  4177  002C0C                     
  4178                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  4179  002C0C  8A8C               	bsf	140,5,c	;volatile
  4180  002C0E                     
  4181                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  4182  002C0E  988C               	bcf	140,4,c	;volatile
  4183  002C10                     
  4184                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  4185  002C10  968C               	bcf	140,3,c	;volatile
  4186  002C12                     
  4187                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  4188  002C12  948C               	bcf	140,2,c	;volatile
  4189                           
  4190                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  4191  002C14  0E16               	movlw	22
  4192  002C16  6E07               	movwf	??_Lcd_Init^0,c
  4193  002C18  0E6C               	movlw	108
  4194  002C1A                     u4767:
  4195  002C1A  2EE8               	decfsz	wreg,f,c
  4196  002C1C  D7FE               	bra	u4767
  4197  002C1E  2E07               	decfsz	??_Lcd_Init^0,f,c
  4198  002C20  D7FC               	bra	u4767
  4199  002C22  D000               	nop2	
  4200  002C24                     
  4201                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  4202  002C24  0E28               	movlw	40
  4203  002C26  EC6E  F012         	call	_Lcd_Cmd
  4204  002C2A                     
  4205                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  4206  002C2A  0E10               	movlw	16
  4207  002C2C  EC6E  F012         	call	_Lcd_Cmd
  4208  002C30                     
  4209                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  4210  002C30  0E01               	movlw	1
  4211  002C32  EC6E  F012         	call	_Lcd_Cmd
  4212  002C36                     
  4213                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  4214  002C36  0E0F               	movlw	15
  4215  002C38  EC6E  F012         	call	_Lcd_Cmd
  4216  002C3C  0012               	return		;funcret
  4217  002C3E                     __end_of_Lcd_Init:
  4218                           	callstack 0
  4219                           
  4220 ;; *************** function _appISRConfig *****************
  4221 ;; Defined at:
  4222 ;;		line 23 in file "app.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		None
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4236 ;;      Params:         0       0       0       0       0       0       0       0       0
  4237 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4239 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4240 ;;Total ram usage:        0 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    2
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_appInit
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text20
  4251  0033B4                     __ptext20:
  4252                           	callstack 0
  4253  0033B4                     _appISRConfig:
  4254                           	callstack 27
  4255  0033B4                     
  4256                           ;app.c: 28:     RCONbits.IPEN = 1;
  4257  0033B4  8ED0               	bsf	208,7,c	;volatile
  4258                           
  4259                           ;app.c: 29:     INTCONbits.GIE_GIEH = 1;
  4260  0033B6  8EF2               	bsf	242,7,c	;volatile
  4261                           
  4262                           ;app.c: 30:     INTCONbits.PEIE_GIEL = 1;
  4263  0033B8  8CF2               	bsf	242,6,c	;volatile
  4264  0033BA  0012               	return		;funcret
  4265  0033BC                     __end_of_appISRConfig:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _appCounterInit *****************
  4269 ;; Defined at:
  4270 ;;		line 134 in file "servo.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  reload          2    3[COMRAM] unsigned short 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		None
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4284 ;;      Params:         2       0       0       0       0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4287 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        2 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    2
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_appInit
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text21
  4299  0033AA                     __ptext21:
  4300                           	callstack 0
  4301  0033AA                     _appCounterInit:
  4302                           	callstack 27
  4303  0033AA                     
  4304                           ;servo.c: 134: void appCounterInit(uint16_t reload);servo.c: 135: {;servo.c: 137:     TM
      +                          R0 = reload;
  4305  0033AA  C004  FFD6         	movff	appCounterInit@reload,4054	;volatile
  4306  0033AE  C005  FFD7         	movff	appCounterInit@reload+1,4055	;volatile
  4307  0033B2  0012               	return		;funcret
  4308  0033B4                     __end_of_appCounterInit:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _adcInit *****************
  4312 ;; Defined at:
  4313 ;;		line 10 in file "adc.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  ADC_PINs        1    wreg     unsigned char 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  ADC_PINs        1    4[COMRAM] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0
  4328 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4329 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4330 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4331 ;;Total ram usage:        2 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    2
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_appInit
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text22
  4342  003036                     __ptext22:
  4343                           	callstack 0
  4344  003036                     _adcInit:
  4345                           	callstack 27
  4346                           
  4347                           ;incstack = 0
  4348                           ;adcInit@ADC_PINs stored from wreg
  4349  003036  6E05               	movwf	adcInit@ADC_PINs^0,c
  4350  003038                     
  4351                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  4352  003038  5005               	movf	adcInit@ADC_PINs^0,w,c
  4353  00303A  A4D8               	btfss	status,2,c
  4354  00303C  EF22  F018         	goto	u3621
  4355  003040  EF24  F018         	goto	u3620
  4356  003044                     u3621:
  4357  003044  EF2A  F018         	goto	l3775
  4358  003048                     u3620:
  4359  003048                     
  4360                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  4361  003048  50C1               	movf	193,w,c	;volatile
  4362  00304A  0BF0               	andlw	-16
  4363  00304C  090E               	iorlw	14
  4364  00304E  6EC1               	movwf	193,c	;volatile
  4365                           
  4366                           ;adc.c: 16:     }
  4367  003050  EF32  F018         	goto	l3777
  4368  003054                     l3775:
  4369                           
  4370                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  4371  003054  5005               	movf	adcInit@ADC_PINs^0,w,c
  4372  003056  080F               	sublw	15
  4373  003058  6E04               	movwf	??_adcInit^0,c
  4374  00305A  50C1               	movf	193,w,c	;volatile
  4375  00305C  1804               	xorwf	??_adcInit^0,w,c
  4376  00305E  0BF0               	andlw	-16
  4377  003060  1804               	xorwf	??_adcInit^0,w,c
  4378  003062  6EC1               	movwf	193,c	;volatile
  4379  003064                     l3777:
  4380                           
  4381                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  4382  003064  0ECF               	movlw	-49
  4383  003066  16C1               	andwf	193,f,c	;volatile
  4384  003068                     
  4385                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  4386  003068  50C0               	movf	192,w,c	;volatile
  4387  00306A  0BC7               	andlw	-57
  4388  00306C  0910               	iorlw	16
  4389  00306E  6EC0               	movwf	192,c	;volatile
  4390  003070                     
  4391                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  4392  003070  50C0               	movf	192,w,c	;volatile
  4393  003072  0BF8               	andlw	-8
  4394  003074  0903               	iorlw	3
  4395  003076  6EC0               	movwf	192,c	;volatile
  4396  003078                     
  4397                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  4398  003078  8EC0               	bsf	192,7,c	;volatile
  4399  00307A                     
  4400                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  4401  00307A  80C2               	bsf	194,0,c	;volatile
  4402  00307C                     
  4403                           ;adc.c: 41:     TRISCbits.TRISC1 = 0;
  4404  00307C  9294               	bcf	148,1,c	;volatile
  4405  00307E  0012               	return		;funcret
  4406  003080                     __end_of_adcInit:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _appTimerStop *****************
  4410 ;; Defined at:
  4411 ;;		line 129 in file "servo.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		None
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4425 ;;      Params:         0       0       0       0       0       0       0       0       0
  4426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4428 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4429 ;;Total ram usage:        0 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    2
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_appGetElements
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text23
  4440  0033C0                     __ptext23:
  4441                           	callstack 0
  4442  0033C0                     _appTimerStop:
  4443                           	callstack 27
  4444  0033C0                     
  4445                           ;servo.c: 131:     T3CONbits.TMR3ON = 0;
  4446  0033C0  90B1               	bcf	177,0,c	;volatile
  4447  0033C2  0012               	return		;funcret
  4448  0033C4                     __end_of_appTimerStop:
  4449                           	callstack 0
  4450                           
  4451 ;; *************** function _appTimerStart *****************
  4452 ;; Defined at:
  4453 ;;		line 123 in file "servo.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4470 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4471 ;;Total ram usage:        0 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    2
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_appInit
  4478 ;;		_appGetElements
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text24
  4483  00339E                     __ptext24:
  4484                           	callstack 0
  4485  00339E                     _appTimerStart:
  4486                           	callstack 27
  4487  00339E                     
  4488                           ;servo.c: 125:     TMR3 = 20536;
  4489  00339E  0E50               	movlw	80
  4490  0033A0  6EB3               	movwf	179,c	;volatile
  4491  0033A2  0E38               	movlw	56
  4492  0033A4  6EB2               	movwf	178,c	;volatile
  4493  0033A6                     
  4494                           ;servo.c: 126:     T3CONbits.TMR3ON = 1;
  4495  0033A6  80B1               	bsf	177,0,c	;volatile
  4496  0033A8  0012               	return		;funcret
  4497  0033AA                     __end_of_appTimerStart:
  4498                           	callstack 0
  4499                           
  4500 ;; *************** function _appSubGiveElemts *****************
  4501 ;; Defined at:
  4502 ;;		line 102 in file "app.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  data            2   11[COMRAM] PTR struct _state
  4505 ;;		 -> datos(25), 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4517 ;;      Params:         2       0       0       0       0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4520 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4521 ;;Total ram usage:        2 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    4
  4524 ;; This function calls:
  4525 ;;		_appCounterStart
  4526 ;;		_setServo
  4527 ;; This function is called by:
  4528 ;;		_appGetElements
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text25
  4533  003388                     __ptext25:
  4534                           	callstack 0
  4535  003388                     _appSubGiveElemts:
  4536                           	callstack 25
  4537  003388                     
  4538                           ;app.c: 102: void appSubGiveElemts(StateMachine *data);app.c: 103: {;app.c: 104:     app
      +                          CounterStart();
  4539  003388  ECE2  F019         	call	_appCounterStart	;wreg free
  4540  00338C                     
  4541                           ;app.c: 105:     setServo(39,10,2);
  4542  00338C  0E0A               	movlw	10
  4543  00338E  6E08               	movwf	setServo@pulsos^0,c
  4544  003390  0E02               	movlw	2
  4545  003392  6E09               	movwf	setServo@pin^0,c
  4546  003394  0E27               	movlw	39
  4547  003396  EC6F  F019         	call	_setServo
  4548  00339A                     
  4549                           ;app.c: 106:     LATAbits.LA5 = 1;
  4550  00339A  8A89               	bsf	137,5,c	;volatile
  4551  00339C  0012               	return		;funcret
  4552  00339E                     __end_of_appSubGiveElemts:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function _setServo *****************
  4556 ;; Defined at:
  4557 ;;		line 76 in file "servo.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  angle           1    wreg     unsigned char 
  4560 ;;  pulsos          1    7[COMRAM] unsigned char 
  4561 ;;  pin             1    8[COMRAM] unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  angle           1    9[COMRAM] unsigned char 
  4564 ;;  i               1   10[COMRAM] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4574 ;;      Params:         2       0       0       0       0       0       0       0       0
  4575 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4577 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4578 ;;Total ram usage:        4 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    3
  4581 ;; This function calls:
  4582 ;;		_setServoAngle
  4583 ;; This function is called by:
  4584 ;;		_appStateRecolectData
  4585 ;;		_appStateInitial
  4586 ;;		_appSubGiveElemts
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text26
  4591  0032DE                     __ptext26:
  4592                           	callstack 0
  4593  0032DE                     _setServo:
  4594                           	callstack 26
  4595                           
  4596                           ;incstack = 0
  4597                           ;setServo@angle stored from wreg
  4598  0032DE  6E0A               	movwf	setServo@angle^0,c
  4599  0032E0                     
  4600                           ;servo.c: 76: void setServo(uint8_t angle, uint8_t pulsos, uint8_t pin);servo.c: 77: {;s
      +                          ervo.c: 78:     for(uint8_t i = 0; i < pulsos; i++)
  4601  0032E0  0E00               	movlw	0
  4602  0032E2  6E0B               	movwf	setServo@i^0,c
  4603  0032E4  EF7A  F019         	goto	l3373
  4604  0032E8                     l3369:
  4605                           
  4606                           ;servo.c: 79:     {;servo.c: 80:         setServoAngle(angle, pin);
  4607  0032E8  C009  F004         	movff	setServo@pin,setServoAngle@pin
  4608  0032EC  500A               	movf	setServo@angle^0,w,c
  4609  0032EE  EC03  F013         	call	_setServoAngle
  4610  0032F2                     
  4611                           ;servo.c: 81:     }
  4612  0032F2  2A0B               	incf	setServo@i^0,f,c
  4613  0032F4                     l3373:
  4614  0032F4  5008               	movf	setServo@pulsos^0,w,c
  4615  0032F6  5C0B               	subwf	setServo@i^0,w,c
  4616  0032F8  A0D8               	btfss	status,0,c
  4617  0032FA  EF81  F019         	goto	u2961
  4618  0032FE  EF83  F019         	goto	u2960
  4619  003302                     u2961:
  4620  003302  EF74  F019         	goto	l3369
  4621  003306                     u2960:
  4622  003306  0012               	return		;funcret
  4623  003308                     __end_of_setServo:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _setServoAngle *****************
  4627 ;; Defined at:
  4628 ;;		line 19 in file "servo.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  angle           1    wreg     unsigned char 
  4631 ;;  pin             1    3[COMRAM] unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  angle           1    6[COMRAM] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4643 ;;      Params:         1       0       0       0       0       0       0       0       0
  4644 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4645 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4646 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4647 ;;Total ram usage:        4 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    2
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_setServo
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text27
  4658  002606                     __ptext27:
  4659                           	callstack 0
  4660  002606                     _setServoAngle:
  4661                           	callstack 26
  4662                           
  4663                           ;incstack = 0
  4664                           ;setServoAngle@angle stored from wreg
  4665  002606  6E07               	movwf	setServoAngle@angle^0,c
  4666  002608                     
  4667                           ;servo.c: 19: void setServoAngle(uint8_t angle, uint8_t pin);servo.c: 20: {;servo.c: 22:
      +                               TMR2 = angle;
  4668  002608  C007  FFCC         	movff	setServoAngle@angle,4044	;volatile
  4669  00260C                     
  4670                           ;servo.c: 23:     PR2 = 255;
  4671  00260C  68CB               	setf	203,c	;volatile
  4672  00260E                     
  4673                           ;servo.c: 25:     PIR1bits.TMR2IF = 0;
  4674  00260E  929E               	bcf	158,1,c	;volatile
  4675                           
  4676                           ;servo.c: 27:     switch(pin)
  4677  002610  EF13  F013         	goto	l3115
  4678  002614                     l221:
  4679                           
  4680                           ;servo.c: 30:             LATEbits.LATE0 = 1;
  4681  002614  808D               	bsf	141,0,c	;volatile
  4682                           
  4683                           ;servo.c: 31:             break;
  4684  002616  EF2C  F013         	goto	l3117
  4685  00261A                     l223:
  4686                           
  4687                           ;servo.c: 33:             LATEbits.LATE1 = 1;
  4688  00261A  828D               	bsf	141,1,c	;volatile
  4689                           
  4690                           ;servo.c: 34:             break;
  4691  00261C  EF2C  F013         	goto	l3117
  4692  002620                     l224:
  4693                           
  4694                           ;servo.c: 36:             LATEbits.LATE2 = 1;
  4695  002620  848D               	bsf	141,2,c	;volatile
  4696                           
  4697                           ;servo.c: 37:             break;
  4698  002622  EF2C  F013         	goto	l3117
  4699  002626                     l3115:
  4700  002626  5004               	movf	setServoAngle@pin^0,w,c
  4701  002628  6E05               	movwf	??_setServoAngle^0,c
  4702  00262A  6A06               	clrf	(??_setServoAngle+1)^0,c
  4703                           
  4704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4705                           ; Switch size 1, requested type "simple"
  4706                           ; Number of cases is 1, Range of values is 0 to 0
  4707                           ; switch strategies available:
  4708                           ; Name         Instructions Cycles
  4709                           ; simple_byte            4     3 (average)
  4710                           ;	Chosen strategy is simple_byte
  4711  00262C  5006               	movf	(??_setServoAngle+1)^0,w,c
  4712  00262E  0A00               	xorlw	0	; case 0
  4713  002630  B4D8               	btfsc	status,2,c
  4714  002632  EF1D  F013         	goto	l4821
  4715  002636  EF2C  F013         	goto	l3117
  4716  00263A                     l4821:
  4717                           
  4718                           ; Switch size 1, requested type "simple"
  4719                           ; Number of cases is 3, Range of values is 0 to 2
  4720                           ; switch strategies available:
  4721                           ; Name         Instructions Cycles
  4722                           ; simple_byte           10     6 (average)
  4723                           ;	Chosen strategy is simple_byte
  4724  00263A  5005               	movf	??_setServoAngle^0,w,c
  4725  00263C  0A00               	xorlw	0	; case 0
  4726  00263E  B4D8               	btfsc	status,2,c
  4727  002640  EF0A  F013         	goto	l221
  4728  002644  0A01               	xorlw	1	; case 1
  4729  002646  B4D8               	btfsc	status,2,c
  4730  002648  EF0D  F013         	goto	l223
  4731  00264C  0A03               	xorlw	3	; case 2
  4732  00264E  B4D8               	btfsc	status,2,c
  4733  002650  EF10  F013         	goto	l224
  4734  002654  EF2C  F013         	goto	l3117
  4735  002658                     l3117:
  4736                           
  4737                           ;servo.c: 40:     if(angle == 45)
  4738  002658  0E2D               	movlw	45
  4739  00265A  1807               	xorwf	setServoAngle@angle^0,w,c
  4740  00265C  A4D8               	btfss	status,2,c
  4741  00265E  EF33  F013         	goto	u2631
  4742  002662  EF35  F013         	goto	u2630
  4743  002666                     u2631:
  4744  002666  EF3E  F013         	goto	l3121
  4745  00266A                     u2630:
  4746  00266A                     
  4747                           ;servo.c: 41:     {;servo.c: 42:         _delay((unsigned long)((2000)*(12000000/4000000
      +                          .0)));
  4748  00266A  0E08               	movlw	8
  4749  00266C  6E05               	movwf	??_setServoAngle^0,c
  4750  00266E  0ECA               	movlw	202
  4751  002670                     u4777:
  4752  002670  2EE8               	decfsz	wreg,f,c
  4753  002672  D7FE               	bra	u4777
  4754  002674  2E05               	decfsz	??_setServoAngle^0,f,c
  4755  002676  D7FC               	bra	u4777
  4756                           
  4757                           ;servo.c: 43:     }
  4758  002678  EF62  F013         	goto	l3129
  4759  00267C                     l3121:
  4760  00267C  0E21               	movlw	33
  4761  00267E  1807               	xorwf	setServoAngle@angle^0,w,c
  4762  002680  A4D8               	btfss	status,2,c
  4763  002682  EF45  F013         	goto	u2641
  4764  002686  EF47  F013         	goto	u2640
  4765  00268A                     u2641:
  4766  00268A  EF51  F013         	goto	l3125
  4767  00268E                     u2640:
  4768  00268E                     
  4769                           ;servo.c: 45:     {;servo.c: 46:         _delay((unsigned long)((1000)*(12000000/4000000
      +                          .0)));
  4770  00268E  0E04               	movlw	4
  4771  002690  6E05               	movwf	??_setServoAngle^0,c
  4772  002692  0EE4               	movlw	228
  4773  002694                     u4787:
  4774  002694  2EE8               	decfsz	wreg,f,c
  4775  002696  D7FE               	bra	u4787
  4776  002698  2E05               	decfsz	??_setServoAngle^0,f,c
  4777  00269A  D7FC               	bra	u4787
  4778  00269C  D000               	nop2	
  4779                           
  4780                           ;servo.c: 47:     }
  4781  00269E  EF62  F013         	goto	l3129
  4782  0026A2                     l3125:
  4783  0026A2  0E27               	movlw	39
  4784  0026A4  1807               	xorwf	setServoAngle@angle^0,w,c
  4785  0026A6  A4D8               	btfss	status,2,c
  4786  0026A8  EF58  F013         	goto	u2651
  4787  0026AC  EF5A  F013         	goto	u2650
  4788  0026B0                     u2651:
  4789  0026B0  EF62  F013         	goto	l3129
  4790  0026B4                     u2650:
  4791  0026B4                     
  4792                           ;servo.c: 49:     {;servo.c: 50:         _delay((unsigned long)((1500)*(12000000/4000000
      +                          .0)));
  4793  0026B4  0E06               	movlw	6
  4794  0026B6  6E05               	movwf	??_setServoAngle^0,c
  4795  0026B8  0ED7               	movlw	215
  4796  0026BA                     u4797:
  4797  0026BA  2EE8               	decfsz	wreg,f,c
  4798  0026BC  D7FE               	bra	u4797
  4799  0026BE  2E05               	decfsz	??_setServoAngle^0,f,c
  4800  0026C0  D7FC               	bra	u4797
  4801  0026C2  F000               	nop	
  4802  0026C4                     l3129:
  4803                           
  4804                           ;servo.c: 53:     T2CONbits.TMR2ON = 1;
  4805  0026C4  84CA               	bsf	202,2,c	;volatile
  4806                           
  4807                           ;servo.c: 54:     while(!PIR1bits.TMR2IF)
  4808  0026C6  EF87  F013         	goto	l230
  4809  0026CA                     l233:
  4810                           
  4811                           ;servo.c: 59:                 LATEbits.LATE0 = 0;
  4812  0026CA  908D               	bcf	141,0,c	;volatile
  4813                           
  4814                           ;servo.c: 60:                 break;
  4815  0026CC  EF87  F013         	goto	l230
  4816  0026D0                     l235:
  4817                           
  4818                           ;servo.c: 62:                 LATEbits.LATE1 = 0;
  4819  0026D0  928D               	bcf	141,1,c	;volatile
  4820                           
  4821                           ;servo.c: 63:                 break;
  4822  0026D2  EF87  F013         	goto	l230
  4823  0026D6                     l236:
  4824                           
  4825                           ;servo.c: 65:                 LATEbits.LATE2 = 0;
  4826  0026D6  948D               	bcf	141,2,c	;volatile
  4827                           
  4828                           ;servo.c: 66:                 break;
  4829  0026D8  EF87  F013         	goto	l230
  4830  0026DC                     l3133:
  4831  0026DC  5004               	movf	setServoAngle@pin^0,w,c
  4832  0026DE  6E05               	movwf	??_setServoAngle^0,c
  4833  0026E0  6A06               	clrf	(??_setServoAngle+1)^0,c
  4834                           
  4835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4836                           ; Switch size 1, requested type "simple"
  4837                           ; Number of cases is 1, Range of values is 0 to 0
  4838                           ; switch strategies available:
  4839                           ; Name         Instructions Cycles
  4840                           ; simple_byte            4     3 (average)
  4841                           ;	Chosen strategy is simple_byte
  4842  0026E2  5006               	movf	(??_setServoAngle+1)^0,w,c
  4843  0026E4  0A00               	xorlw	0	; case 0
  4844  0026E6  B4D8               	btfsc	status,2,c
  4845  0026E8  EF78  F013         	goto	l4823
  4846  0026EC  EF87  F013         	goto	l230
  4847  0026F0                     l4823:
  4848                           
  4849                           ; Switch size 1, requested type "simple"
  4850                           ; Number of cases is 3, Range of values is 0 to 2
  4851                           ; switch strategies available:
  4852                           ; Name         Instructions Cycles
  4853                           ; simple_byte           10     6 (average)
  4854                           ;	Chosen strategy is simple_byte
  4855  0026F0  5005               	movf	??_setServoAngle^0,w,c
  4856  0026F2  0A00               	xorlw	0	; case 0
  4857  0026F4  B4D8               	btfsc	status,2,c
  4858  0026F6  EF65  F013         	goto	l233
  4859  0026FA  0A01               	xorlw	1	; case 1
  4860  0026FC  B4D8               	btfsc	status,2,c
  4861  0026FE  EF68  F013         	goto	l235
  4862  002702  0A03               	xorlw	3	; case 2
  4863  002704  B4D8               	btfsc	status,2,c
  4864  002706  EF6B  F013         	goto	l236
  4865  00270A  EF87  F013         	goto	l230
  4866  00270E                     l230:
  4867                           
  4868                           ;servo.c: 54:     while(!PIR1bits.TMR2IF)
  4869  00270E  A29E               	btfss	158,1,c	;volatile
  4870  002710  EF8C  F013         	goto	u2661
  4871  002714  EF8E  F013         	goto	u2660
  4872  002718                     u2661:
  4873  002718  EF6E  F013         	goto	l3133
  4874  00271C                     u2660:
  4875  00271C                     
  4876                           ;servo.c: 70:     T2CONbits.TMR2ON = 0;
  4877  00271C  94CA               	bcf	202,2,c	;volatile
  4878                           
  4879                           ;servo.c: 71:     PIR1bits.TMR2IF = 0;
  4880  00271E  929E               	bcf	158,1,c	;volatile
  4881  002720  0012               	return		;funcret
  4882  002722                     __end_of_setServoAngle:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _appCounterStart *****************
  4886 ;; Defined at:
  4887 ;;		line 140 in file "servo.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		None
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4904 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    2
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_appSubGiveElemts
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text28
  4916  0033C4                     __ptext28:
  4917                           	callstack 0
  4918  0033C4                     _appCounterStart:
  4919                           	callstack 26
  4920  0033C4                     
  4921                           ;servo.c: 143:     T0CONbits.TMR0ON = 1;
  4922  0033C4  8ED5               	bsf	213,7,c	;volatile
  4923  0033C6  0012               	return		;funcret
  4924  0033C8                     __end_of_appCounterStart:
  4925                           	callstack 0
  4926                           
  4927 ;; *************** function _appSubGetData *****************
  4928 ;; Defined at:
  4929 ;;		line 82 in file "app.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  4932 ;;		 -> datos(25), 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  cantidad        2   38[BANK0 ] unsigned short 
  4935 ;;  inout           1   40[BANK0 ] unsigned char 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      void 
  4938 ;; Registers used:
  4939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4945 ;;      Params:         0       2       0       0       0       0       0       0       0
  4946 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4948 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4949 ;;Total ram usage:        5 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:   10
  4952 ;; This function calls:
  4953 ;;		_Lcd_Out
  4954 ;;		___wmul
  4955 ;;		_memset
  4956 ;;		_sprintf
  4957 ;;		_teclado
  4958 ;; This function is called by:
  4959 ;;		_appGetElements
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text29
  4964  002828                     __ptext29:
  4965                           	callstack 0
  4966  002828                     _appSubGetData:
  4967                           	callstack 19
  4968  002828                     
  4969                           ;app.c: 82: void appSubGetData(StateMachine *data_Inout);app.c: 83: {;app.c: 84:     uin
      +                          t16_t cantidad = 0;
  4970  002828  0E00               	movlw	0
  4971  00282A  0100               	movlb	0	; () banked
  4972  00282C  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  4973  00282E  0E00               	movlw	0
  4974  002830  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  4975                           
  4976                           ;app.c: 85:     uint8_t inout = 0;
  4977  002832  0E00               	movlw	0
  4978  002834  6F88               	movwf	appSubGetData@inout& (0+255),b
  4979  002836                     
  4980                           ; BSR set to: 0
  4981                           ;app.c: 86:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  4982  002836  0E07               	movlw	7
  4983  002838  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4984  00283A  6E04               	movwf	memset@dest^0,c
  4985  00283C  0E00               	movlw	0
  4986  00283E  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4987  002840  6E05               	movwf	(memset@dest+1)^0,c
  4988  002842  0E00               	movlw	0
  4989  002844  6E07               	movwf	(memset@c+1)^0,c
  4990  002846  0E00               	movlw	0
  4991  002848  6E06               	movwf	memset@c^0,c
  4992  00284A  0E00               	movlw	0
  4993  00284C  6E09               	movwf	(memset@n+1)^0,c
  4994  00284E  0E10               	movlw	16
  4995  002850  6E08               	movwf	memset@n^0,c
  4996  002852  EC5A  F010         	call	_memset	;wreg free
  4997  002856                     
  4998                           ;app.c: 87:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  4999  002856  0E00               	movlw	0
  5000  002858  6E07               	movwf	Lcd_Out@x^0,c
  5001  00285A  0E12               	movlw	low STR_6
  5002  00285C  6E08               	movwf	Lcd_Out@buffer^0,c
  5003  00285E  0E08               	movlw	high STR_6
  5004  002860  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  5005  002862  0E01               	movlw	1
  5006  002864  EC93  F014         	call	_Lcd_Out
  5007                           
  5008                           ;app.c: 88:     while(inout != '*')
  5009  002868  EF7E  F014         	goto	l4607
  5010  00286C                     l4595:
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;app.c: 89:     {;app.c: 90:         teclado(&inout);
  5014  00286C  0E88               	movlw	low appSubGetData@inout
  5015  00286E  6E04               	movwf	teclado@valor^0,c
  5016  002870  0E00               	movlw	high appSubGetData@inout
  5017  002872  6E05               	movwf	(teclado@valor+1)^0,c
  5018  002874  EC35  F00B         	call	_teclado	;wreg free
  5019  002878                     
  5020                           ;app.c: 92:         if((inout >= '0') && (inout <= '9'))
  5021  002878  0E2F               	movlw	47
  5022  00287A  0100               	movlb	0	; () banked
  5023  00287C  6588               	cpfsgt	appSubGetData@inout& (0+255),b
  5024  00287E  EF43  F014         	goto	u4501
  5025  002882  EF45  F014         	goto	u4500
  5026  002886                     u4501:
  5027  002886  EF62  F014         	goto	l4603
  5028  00288A                     u4500:
  5029  00288A                     
  5030                           ; BSR set to: 0
  5031  00288A  0E3A               	movlw	58
  5032  00288C  6188               	cpfslt	appSubGetData@inout& (0+255),b
  5033  00288E  EF4B  F014         	goto	u4511
  5034  002892  EF4D  F014         	goto	u4510
  5035  002896                     u4511:
  5036  002896  EF62  F014         	goto	l4603
  5037  00289A                     u4510:
  5038  00289A                     
  5039                           ; BSR set to: 0
  5040                           ;app.c: 93:         {;app.c: 94:             cantidad = (cantidad*10)+(inout - 48);
  5041  00289A  C086  F004         	movff	appSubGetData@cantidad,___wmul@multiplier
  5042  00289E  C087  F005         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  5043  0028A2  0E00               	movlw	0
  5044  0028A4  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  5045  0028A6  0E0A               	movlw	10
  5046  0028A8  6E06               	movwf	___wmul@multiplicand^0,c
  5047  0028AA  EC98  F019         	call	___wmul	;wreg free
  5048  0028AE  0100               	movlb	0	; () banked
  5049  0028B0  5188               	movf	appSubGetData@inout& (0+255),w,b
  5050  0028B2  2604               	addwf	?___wmul^0,f,c
  5051  0028B4  0E00               	movlw	0
  5052  0028B6  2205               	addwfc	(?___wmul+1)^0,f,c
  5053  0028B8  0ED0               	movlw	208
  5054  0028BA  2404               	addwf	?___wmul^0,w,c
  5055  0028BC  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  5056  0028BE  0EFF               	movlw	255
  5057  0028C0  2005               	addwfc	(?___wmul+1)^0,w,c
  5058  0028C2  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  5059  0028C4                     l4603:
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;app.c: 96:         sprintf((char *)data_Inout->display,"%d",cantidad);
  5063  0028C4  0E07               	movlw	7
  5064  0028C6  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  5065  0028C8  6F72               	movwf	sprintf@s& (0+255),b
  5066  0028CA  0E00               	movlw	0
  5067  0028CC  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  5068  0028CE  6F73               	movwf	(sprintf@s+1)& (0+255),b
  5069  0028D0  0E57               	movlw	low (STR_5+2)
  5070  0028D2  6F74               	movwf	sprintf@fmt& (0+255),b
  5071  0028D4  0E08               	movlw	high (STR_5+2)
  5072  0028D6  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  5073  0028D8  C086  F076         	movff	appSubGetData@cantidad,?_sprintf+4
  5074  0028DC  C087  F077         	movff	appSubGetData@cantidad+1,?_sprintf+5
  5075  0028E0  ECA4  F017         	call	_sprintf	;wreg free
  5076  0028E4                     
  5077                           ;app.c: 97:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  5078  0028E4  0E00               	movlw	0
  5079  0028E6  6E07               	movwf	Lcd_Out@x^0,c
  5080  0028E8  0E07               	movlw	7
  5081  0028EA  0100               	movlb	0	; () banked
  5082  0028EC  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  5083  0028EE  6E08               	movwf	Lcd_Out@buffer^0,c
  5084  0028F0  0E00               	movlw	0
  5085  0028F2  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  5086  0028F4  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  5087  0028F6  0E02               	movlw	2
  5088  0028F8  EC93  F014         	call	_Lcd_Out
  5089  0028FC                     l4607:
  5090                           
  5091                           ;app.c: 88:     while(inout != '*')
  5092  0028FC  0E2A               	movlw	42
  5093  0028FE  0100               	movlb	0	; () banked
  5094  002900  1988               	xorwf	appSubGetData@inout& (0+255),w,b
  5095  002902  A4D8               	btfss	status,2,c
  5096  002904  EF86  F014         	goto	u4521
  5097  002908  EF88  F014         	goto	u4520
  5098  00290C                     u4521:
  5099  00290C  EF36  F014         	goto	l4595
  5100  002910                     u4520:
  5101  002910                     
  5102                           ; BSR set to: 0
  5103                           ;app.c: 99:     data_Inout->elements += (int16_t)cantidad;
  5104  002910  EE20 F001          	lfsr	2,1
  5105  002914  5184               	movf	appSubGetData@data_Inout& (0+255),w,b
  5106  002916  26D9               	addwf	fsr2l,f,c
  5107  002918  5185               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  5108  00291A  22DA               	addwfc	fsr2h,f,c
  5109  00291C  5186               	movf	appSubGetData@cantidad& (0+255),w,b
  5110  00291E  26DE               	addwf	postinc2,f,c
  5111  002920  5187               	movf	(appSubGetData@cantidad+1)& (0+255),w,b
  5112  002922  22DD               	addwfc	postdec2,f,c
  5113  002924                     
  5114                           ; BSR set to: 0
  5115  002924  0012               	return		;funcret
  5116  002926                     __end_of_appSubGetData:
  5117                           	callstack 0
  5118                           
  5119 ;; *************** function _teclado *****************
  5120 ;; Defined at:
  5121 ;;		line 10 in file "teclado.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  valor           2    3[COMRAM] PTR unsigned char 
  5124 ;;		 -> appSubGetData@inout(1), datos(25), 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5136 ;;      Params:         2       0       0       0       0       0       0       0       0
  5137 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5139 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5140 ;;Total ram usage:        2 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    2
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_appStateInitial
  5147 ;;		_appSubGetData
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text30
  5152  00166A                     __ptext30:
  5153                           	callstack 0
  5154  00166A                     _teclado:
  5155                           	callstack 27
  5156  00166A                     
  5157                           ;teclado.c: 11:     *valor = 0;
  5158  00166A  C004  FFD9         	movff	teclado@valor,fsr2l
  5159  00166E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5160  001672  0E00               	movlw	0
  5161  001674  6EDF               	movwf	indf2,c
  5162  001676                     
  5163                           ;teclado.c: 12:     PORTB=0xF0;
  5164  001676  0EF0               	movlw	240
  5165  001678  6E81               	movwf	129,c	;volatile
  5166  00167A                     
  5167                           ;teclado.c: 13:     if(PORTB != 0xF0){
  5168  00167A  0EF0               	movlw	240
  5169  00167C  1881               	xorwf	129,w,c	;volatile
  5170  00167E  B4D8               	btfsc	status,2,c
  5171  001680  EF44  F00B         	goto	u2771
  5172  001684  EF46  F00B         	goto	u2770
  5173  001688                     u2771:
  5174  001688  EF1E  F00C         	goto	l3305
  5175  00168C                     u2770:
  5176  00168C                     
  5177                           ;teclado.c: 14:         PORTB=0xFE;
  5178  00168C  0EFE               	movlw	254
  5179  00168E  6E81               	movwf	129,c	;volatile
  5180  001690                     
  5181                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  5182  001690  B881               	btfsc	129,4,c	;volatile
  5183  001692  EF4D  F00B         	goto	u2781
  5184  001696  EF4F  F00B         	goto	u2780
  5185  00169A                     u2781:
  5186  00169A  EF55  F00B         	goto	l3239
  5187  00169E                     u2780:
  5188  00169E  C004  FFD9         	movff	teclado@valor,fsr2l
  5189  0016A2  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5190  0016A6  0E2A               	movlw	42
  5191  0016A8  6EDF               	movwf	indf2,c
  5192  0016AA                     l3239:
  5193                           
  5194                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  5195  0016AA  BA81               	btfsc	129,5,c	;volatile
  5196  0016AC  EF5A  F00B         	goto	u2791
  5197  0016B0  EF5C  F00B         	goto	u2790
  5198  0016B4                     u2791:
  5199  0016B4  EF62  F00B         	goto	l3243
  5200  0016B8                     u2790:
  5201  0016B8  C004  FFD9         	movff	teclado@valor,fsr2l
  5202  0016BC  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5203  0016C0  0E30               	movlw	48
  5204  0016C2  6EDF               	movwf	indf2,c
  5205  0016C4                     l3243:
  5206                           
  5207                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  5208  0016C4  BC81               	btfsc	129,6,c	;volatile
  5209  0016C6  EF67  F00B         	goto	u2801
  5210  0016CA  EF69  F00B         	goto	u2800
  5211  0016CE                     u2801:
  5212  0016CE  EF6F  F00B         	goto	l3247
  5213  0016D2                     u2800:
  5214  0016D2  C004  FFD9         	movff	teclado@valor,fsr2l
  5215  0016D6  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5216  0016DA  0E23               	movlw	35
  5217  0016DC  6EDF               	movwf	indf2,c
  5218  0016DE                     l3247:
  5219                           
  5220                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  5221  0016DE  BE81               	btfsc	129,7,c	;volatile
  5222  0016E0  EF74  F00B         	goto	u2811
  5223  0016E4  EF76  F00B         	goto	u2810
  5224  0016E8                     u2811:
  5225  0016E8  EF7C  F00B         	goto	l3251
  5226  0016EC                     u2810:
  5227  0016EC  C004  FFD9         	movff	teclado@valor,fsr2l
  5228  0016F0  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5229  0016F4  0E44               	movlw	68
  5230  0016F6  6EDF               	movwf	indf2,c
  5231  0016F8                     l3251:
  5232                           
  5233                           ;teclado.c: 19:         PORTB=0xFD;
  5234  0016F8  0EFD               	movlw	253
  5235  0016FA  6E81               	movwf	129,c	;volatile
  5236  0016FC                     
  5237                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  5238  0016FC  B881               	btfsc	129,4,c	;volatile
  5239  0016FE  EF83  F00B         	goto	u2821
  5240  001702  EF85  F00B         	goto	u2820
  5241  001706                     u2821:
  5242  001706  EF8B  F00B         	goto	l3257
  5243  00170A                     u2820:
  5244  00170A  C004  FFD9         	movff	teclado@valor,fsr2l
  5245  00170E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5246  001712  0E37               	movlw	55
  5247  001714  6EDF               	movwf	indf2,c
  5248  001716                     l3257:
  5249                           
  5250                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  5251  001716  BA81               	btfsc	129,5,c	;volatile
  5252  001718  EF90  F00B         	goto	u2831
  5253  00171C  EF92  F00B         	goto	u2830
  5254  001720                     u2831:
  5255  001720  EF98  F00B         	goto	l3261
  5256  001724                     u2830:
  5257  001724  C004  FFD9         	movff	teclado@valor,fsr2l
  5258  001728  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5259  00172C  0E38               	movlw	56
  5260  00172E  6EDF               	movwf	indf2,c
  5261  001730                     l3261:
  5262                           
  5263                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  5264  001730  BC81               	btfsc	129,6,c	;volatile
  5265  001732  EF9D  F00B         	goto	u2841
  5266  001736  EF9F  F00B         	goto	u2840
  5267  00173A                     u2841:
  5268  00173A  EFA5  F00B         	goto	l3265
  5269  00173E                     u2840:
  5270  00173E  C004  FFD9         	movff	teclado@valor,fsr2l
  5271  001742  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5272  001746  0E39               	movlw	57
  5273  001748  6EDF               	movwf	indf2,c
  5274  00174A                     l3265:
  5275                           
  5276                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  5277  00174A  BE81               	btfsc	129,7,c	;volatile
  5278  00174C  EFAA  F00B         	goto	u2851
  5279  001750  EFAC  F00B         	goto	u2850
  5280  001754                     u2851:
  5281  001754  EFB2  F00B         	goto	l3269
  5282  001758                     u2850:
  5283  001758  C004  FFD9         	movff	teclado@valor,fsr2l
  5284  00175C  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5285  001760  0E43               	movlw	67
  5286  001762  6EDF               	movwf	indf2,c
  5287  001764                     l3269:
  5288                           
  5289                           ;teclado.c: 24:         PORTB=0xFB;
  5290  001764  0EFB               	movlw	251
  5291  001766  6E81               	movwf	129,c	;volatile
  5292  001768                     
  5293                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  5294  001768  B881               	btfsc	129,4,c	;volatile
  5295  00176A  EFB9  F00B         	goto	u2861
  5296  00176E  EFBB  F00B         	goto	u2860
  5297  001772                     u2861:
  5298  001772  EFC1  F00B         	goto	l3275
  5299  001776                     u2860:
  5300  001776  C004  FFD9         	movff	teclado@valor,fsr2l
  5301  00177A  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5302  00177E  0E34               	movlw	52
  5303  001780  6EDF               	movwf	indf2,c
  5304  001782                     l3275:
  5305                           
  5306                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  5307  001782  BA81               	btfsc	129,5,c	;volatile
  5308  001784  EFC6  F00B         	goto	u2871
  5309  001788  EFC8  F00B         	goto	u2870
  5310  00178C                     u2871:
  5311  00178C  EFCE  F00B         	goto	l3279
  5312  001790                     u2870:
  5313  001790  C004  FFD9         	movff	teclado@valor,fsr2l
  5314  001794  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5315  001798  0E35               	movlw	53
  5316  00179A  6EDF               	movwf	indf2,c
  5317  00179C                     l3279:
  5318                           
  5319                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  5320  00179C  BC81               	btfsc	129,6,c	;volatile
  5321  00179E  EFD3  F00B         	goto	u2881
  5322  0017A2  EFD5  F00B         	goto	u2880
  5323  0017A6                     u2881:
  5324  0017A6  EFDB  F00B         	goto	l3283
  5325  0017AA                     u2880:
  5326  0017AA  C004  FFD9         	movff	teclado@valor,fsr2l
  5327  0017AE  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5328  0017B2  0E36               	movlw	54
  5329  0017B4  6EDF               	movwf	indf2,c
  5330  0017B6                     l3283:
  5331                           
  5332                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  5333  0017B6  BE81               	btfsc	129,7,c	;volatile
  5334  0017B8  EFE0  F00B         	goto	u2891
  5335  0017BC  EFE2  F00B         	goto	u2890
  5336  0017C0                     u2891:
  5337  0017C0  EFE8  F00B         	goto	l3287
  5338  0017C4                     u2890:
  5339  0017C4  C004  FFD9         	movff	teclado@valor,fsr2l
  5340  0017C8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5341  0017CC  0E42               	movlw	66
  5342  0017CE  6EDF               	movwf	indf2,c
  5343  0017D0                     l3287:
  5344                           
  5345                           ;teclado.c: 29:         PORTB=0xF7;
  5346  0017D0  0EF7               	movlw	247
  5347  0017D2  6E81               	movwf	129,c	;volatile
  5348  0017D4                     
  5349                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  5350  0017D4  B881               	btfsc	129,4,c	;volatile
  5351  0017D6  EFEF  F00B         	goto	u2901
  5352  0017DA  EFF1  F00B         	goto	u2900
  5353  0017DE                     u2901:
  5354  0017DE  EFF7  F00B         	goto	l3293
  5355  0017E2                     u2900:
  5356  0017E2  C004  FFD9         	movff	teclado@valor,fsr2l
  5357  0017E6  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5358  0017EA  0E31               	movlw	49
  5359  0017EC  6EDF               	movwf	indf2,c
  5360  0017EE                     l3293:
  5361                           
  5362                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  5363  0017EE  BA81               	btfsc	129,5,c	;volatile
  5364  0017F0  EFFC  F00B         	goto	u2911
  5365  0017F4  EFFE  F00B         	goto	u2910
  5366  0017F8                     u2911:
  5367  0017F8  EF04  F00C         	goto	l3297
  5368  0017FC                     u2910:
  5369  0017FC  C004  FFD9         	movff	teclado@valor,fsr2l
  5370  001800  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5371  001804  0E32               	movlw	50
  5372  001806  6EDF               	movwf	indf2,c
  5373  001808                     l3297:
  5374                           
  5375                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  5376  001808  BC81               	btfsc	129,6,c	;volatile
  5377  00180A  EF09  F00C         	goto	u2921
  5378  00180E  EF0B  F00C         	goto	u2920
  5379  001812                     u2921:
  5380  001812  EF11  F00C         	goto	l3301
  5381  001816                     u2920:
  5382  001816  C004  FFD9         	movff	teclado@valor,fsr2l
  5383  00181A  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5384  00181E  0E33               	movlw	51
  5385  001820  6EDF               	movwf	indf2,c
  5386  001822                     l3301:
  5387                           
  5388                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  5389  001822  BE81               	btfsc	129,7,c	;volatile
  5390  001824  EF16  F00C         	goto	u2931
  5391  001828  EF18  F00C         	goto	u2930
  5392  00182C                     u2931:
  5393  00182C  EF1E  F00C         	goto	l3305
  5394  001830                     u2930:
  5395  001830  C004  FFD9         	movff	teclado@valor,fsr2l
  5396  001834  C005  FFDA         	movff	teclado@valor+1,fsr2h
  5397  001838  0E41               	movlw	65
  5398  00183A  6EDF               	movwf	indf2,c
  5399  00183C                     l3305:
  5400                           
  5401                           ;teclado.c: 35:     PORTB = 0xF0;
  5402  00183C  0EF0               	movlw	240
  5403  00183E  6E81               	movwf	129,c	;volatile
  5404  001840                     l3307:
  5405  001840  0EF0               	movlw	240
  5406  001842  1881               	xorwf	129,w,c	;volatile
  5407  001844  A4D8               	btfss	status,2,c
  5408  001846  EF27  F00C         	goto	u2941
  5409  00184A  EF29  F00C         	goto	u2940
  5410  00184E                     u2941:
  5411  00184E  EF20  F00C         	goto	l3307
  5412  001852                     u2940:
  5413  001852  0012               	return		;funcret
  5414  001854                     __end_of_teclado:
  5415                           	callstack 0
  5416                           
  5417 ;; *************** function _sprintf *****************
  5418 ;; Defined at:
  5419 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  s               2   18[BANK0 ] PTR unsigned char 
  5422 ;;		 -> appElemts@dataout(6), datos(25), 
  5423 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  5424 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  f               6   30[BANK0 ] struct _IO_FILE
  5427 ;;  ap              2   28[BANK0 ] PTR void [1]
  5428 ;;		 -> ?_sprintf(2), 
  5429 ;;  ret             2    0        int 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  2   18[BANK0 ] int 
  5432 ;; Registers used:
  5433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5439 ;;      Params:         0       8       0       0       0       0       0       0       0
  5440 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5442 ;;      Totals:         0      18       0       0       0       0       0       0       0
  5443 ;;Total ram usage:       18 bytes
  5444 ;; Hardware stack levels used:    1
  5445 ;; Hardware stack levels required when called:    9
  5446 ;; This function calls:
  5447 ;;		_vfprintf
  5448 ;; This function is called by:
  5449 ;;		_appADC
  5450 ;;		_appBat
  5451 ;;		_appElemts
  5452 ;;		_appSubGetData
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           	psect	text31
  5457  002F48                     __ptext31:
  5458                           	callstack 0
  5459  002F48                     _sprintf:
  5460                           	callstack 19
  5461  002F48  0E76               	movlw	low (?_sprintf+4)
  5462  002F4A  0100               	movlb	0	; () banked
  5463  002F4C  6F7C               	movwf	sprintf@ap& (0+255),b
  5464  002F4E  0E00               	movlw	high (?_sprintf+4)
  5465  002F50  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  5466  002F52  C072  F07E         	movff	sprintf@s,sprintf@f
  5467  002F56  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  5468  002F5A                     
  5469                           ; BSR set to: 0
  5470  002F5A  0E00               	movlw	0
  5471  002F5C  6F81               	movwf	(sprintf@f+3)& (0+255),b
  5472  002F5E  0E00               	movlw	0
  5473  002F60  6F80               	movwf	(sprintf@f+2)& (0+255),b
  5474  002F62                     
  5475                           ; BSR set to: 0
  5476  002F62  0E00               	movlw	0
  5477  002F64  6F83               	movwf	(sprintf@f+5)& (0+255),b
  5478  002F66  0E00               	movlw	0
  5479  002F68  6F82               	movwf	(sprintf@f+4)& (0+255),b
  5480  002F6A                     
  5481                           ; BSR set to: 0
  5482  002F6A  0E7E               	movlw	low sprintf@f
  5483  002F6C  6F6C               	movwf	vfprintf@fp& (0+255),b
  5484  002F6E  0E00               	movlw	high sprintf@f
  5485  002F70  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  5486  002F72  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  5487  002F76  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5488  002F7A  0E7C               	movlw	low sprintf@ap
  5489  002F7C  6F70               	movwf	vfprintf@ap& (0+255),b
  5490  002F7E  0E00               	movlw	high sprintf@ap
  5491  002F80  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  5492  002F82  EC73  F017         	call	_vfprintf	;wreg free
  5493  002F86  0100               	movlb	0	; () banked
  5494  002F88  5180               	movf	(sprintf@f+2)& (0+255),w,b
  5495  002F8A  2572               	addwf	sprintf@s& (0+255),w,b
  5496  002F8C  6ED9               	movwf	fsr2l,c
  5497  002F8E  5181               	movf	(sprintf@f+3)& (0+255),w,b
  5498  002F90  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  5499  002F92  6EDA               	movwf	fsr2h,c
  5500  002F94  0E00               	movlw	0
  5501  002F96  6EDF               	movwf	indf2,c
  5502  002F98                     
  5503                           ; BSR set to: 0
  5504  002F98  0012               	return		;funcret
  5505  002F9A                     __end_of_sprintf:
  5506                           	callstack 0
  5507                           
  5508 ;; *************** function _vfprintf *****************
  5509 ;; Defined at:
  5510 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  5513 ;;		 -> sprintf@f(6), 
  5514 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  5515 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  5516 ;;  ap              2   16[BANK0 ] PTR PTR void 
  5517 ;;		 -> sprintf@ap(2), 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  5520 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  2   12[BANK0 ] int 
  5523 ;; Registers used:
  5524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5530 ;;      Params:         0       6       0       0       0       0       0       0       0
  5531 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5533 ;;      Totals:         2       6       0       0       0       0       0       0       0
  5534 ;;Total ram usage:        8 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    8
  5537 ;; This function calls:
  5538 ;;		_vfpfcnvrt
  5539 ;; This function is called by:
  5540 ;;		_sprintf
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text32
  5545  002EE6                     __ptext32:
  5546                           	callstack 0
  5547  002EE6                     _vfprintf:
  5548                           	callstack 19
  5549  002EE6                     
  5550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5551  002EE6  C06E  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  5552  002EEA  C06F  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5553  002EEE                     
  5554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5555  002EEE  0E00               	movlw	0
  5556  002EF0  0100               	movlb	0	; () banked
  5557  002EF2  6F95               	movwf	(_nout+1)& (0+255),b
  5558  002EF4  0E00               	movlw	0
  5559  002EF6  6F94               	movwf	_nout& (0+255),b
  5560                           
  5561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5562  002EF8  EF91  F017         	goto	l4541
  5563  002EFC                     l4539:
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5567  002EFC  C06C  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  5568  002F00  C06D  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5569  002F04  0E4D               	movlw	low vfprintf@cfmt
  5570  002F06  6E45               	movwf	vfpfcnvrt@fmt^0,c
  5571  002F08  0E00               	movlw	high vfprintf@cfmt
  5572  002F0A  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5573  002F0C  C070  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  5574  002F10  C071  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5575  002F14  EC10  F008         	call	_vfpfcnvrt	;wreg free
  5576  002F18  5043               	movf	?_vfpfcnvrt^0,w,c
  5577  002F1A  0100               	movlb	0	; () banked
  5578  002F1C  2794               	addwf	_nout& (0+255),f,b
  5579  002F1E  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  5580  002F20  2395               	addwfc	(_nout+1)& (0+255),f,b
  5581  002F22                     l4541:
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5585  002F22  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  5586  002F26  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5587  002F2A                     	if	0	;tblptru may be non-zero
  5588  002F2A                     	endif
  5589  002F2A                     	if	0	;tblptru may be non-zero
  5590  002F2A                     	endif
  5591  002F2A  0008               	tblrd		*
  5592  002F2C  50F5               	movf	tablat,w,c
  5593  002F2E  0900               	iorlw	0
  5594  002F30  A4D8               	btfss	status,2,c
  5595  002F32  EF9D  F017         	goto	u4461
  5596  002F36  EF9F  F017         	goto	u4460
  5597  002F3A                     u4461:
  5598  002F3A  EF7E  F017         	goto	l4539
  5599  002F3E                     u4460:
  5600  002F3E                     
  5601                           ; BSR set to: 0
  5602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5603  002F3E  C094  F06C         	movff	_nout,?_vfprintf
  5604  002F42  C095  F06D         	movff	_nout+1,?_vfprintf+1
  5605  002F46                     
  5606                           ; BSR set to: 0
  5607  002F46  0012               	return		;funcret
  5608  002F48                     __end_of_vfprintf:
  5609                           	callstack 0
  5610                           
  5611 ;; *************** function _vfpfcnvrt *****************
  5612 ;; Defined at:
  5613 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  5616 ;;		 -> sprintf@f(6), 
  5617 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  5618 ;;		 -> vfprintf@cfmt(2), 
  5619 ;;  ap              2   70[COMRAM] PTR PTR void 
  5620 ;;		 -> sprintf@ap(2), 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  ll              8    0[BANK0 ] long long 
  5623 ;;  llu             8    0        unsigned long long 
  5624 ;;  f               4    0        unsigned long long 
  5625 ;;  vp              3    0        PTR void 
  5626 ;;  ct              3    0        unsigned char [3]
  5627 ;;  cp              3    0        PTR unsigned char 
  5628 ;;  done            2    8[BANK0 ] int 
  5629 ;;  i               2    0        int 
  5630 ;;  c               1    0        unsigned char 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  2   66[COMRAM] int 
  5633 ;; Registers used:
  5634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5640 ;;      Params:         6       0       0       0       0       0       0       0       0
  5641 ;;      Locals:         0      12       0       0       0       0       0       0       0
  5642 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5643 ;;      Totals:        10      12       0       0       0       0       0       0       0
  5644 ;;Total ram usage:       22 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; Hardware stack levels required when called:    7
  5647 ;; This function calls:
  5648 ;;		_atoi
  5649 ;;		_dtoa
  5650 ;;		_fputc
  5651 ;;		_isdigit
  5652 ;; This function is called by:
  5653 ;;		_vfprintf
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text33
  5658  001020                     __ptext33:
  5659                           	callstack 0
  5660  001020                     _vfpfcnvrt:
  5661                           	callstack 19
  5662  001020                     
  5663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5664  001020  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5665  001024  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5666  001028  CFDE FFF6          	movff	postinc2,tblptrl
  5667  00102C  CFDD FFF7          	movff	postdec2,tblptrh
  5668  001030                     	if	0	;tblptru may be non-zero
  5669  001030                     	endif
  5670  001030                     	if	0	;tblptru may be non-zero
  5671  001030                     	endif
  5672  001030  0008               	tblrd		*
  5673  001032  50F5               	movf	tablat,w,c
  5674  001034  0A25               	xorlw	37
  5675  001036  A4D8               	btfss	status,2,c
  5676  001038  EF20  F008         	goto	u4351
  5677  00103C  EF22  F008         	goto	u4350
  5678  001040                     u4351:
  5679  001040  EFAA  F009         	goto	l4517
  5680  001044                     u4350:
  5681  001044                     
  5682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5683  001044  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5684  001048  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5685  00104C  2ADE               	incf	postinc2,f,c
  5686  00104E  0E00               	movlw	0
  5687  001050  22DD               	addwfc	postdec2,f,c
  5688  001052                     
  5689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5690  001052  0E00               	movlw	0
  5691  001054  0100               	movlb	0	; () banked
  5692  001056  6F97               	movwf	(_width+1)& (0+255),b
  5693  001058  0E00               	movlw	0
  5694  00105A  6F96               	movwf	_width& (0+255),b
  5695  00105C  C096  F05A         	movff	_width,_flags
  5696  001060  C097  F05B         	movff	_width+1,_flags+1
  5697  001064                     
  5698                           ; BSR set to: 0
  5699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5700  001064  6858               	setf	_prec^0,c
  5701  001066  6859               	setf	(_prec+1)^0,c
  5702  001068                     
  5703                           ; BSR set to: 0
  5704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  5705  001068  0E00               	movlw	0
  5706  00106A  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5707  00106C  0E00               	movlw	0
  5708  00106E  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  5709                           
  5710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5711  001070  EF80  F008         	goto	l4469
  5712  001074                     l4443:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  5716  001074  805A               	bsf	_flags^0,0,c
  5717  001076                     l4445:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  5721  001076  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5722  00107A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5723  00107E  2ADE               	incf	postinc2,f,c
  5724  001080  0E00               	movlw	0
  5725  001082  22DD               	addwfc	postdec2,f,c
  5726                           
  5727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  5728  001084  EF80  F008         	goto	l4469
  5729  001088                     l4447:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  5733  001088  825A               	bsf	_flags^0,1,c
  5734  00108A  EF3B  F008         	goto	l4445
  5735  00108E                     l4451:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  5739  00108E  845A               	bsf	_flags^0,2,c
  5740  001090  EF3B  F008         	goto	l4445
  5741  001094                     l4455:
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  5745  001094  865A               	bsf	_flags^0,3,c
  5746  001096  EF3B  F008         	goto	l4445
  5747  00109A                     l4459:
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  5751  00109A  885A               	bsf	_flags^0,4,c
  5752  00109C  EF3B  F008         	goto	l4445
  5753  0010A0                     l4463:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  5757  0010A0  0E00               	movlw	0
  5758  0010A2  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5759  0010A4  0E01               	movlw	1
  5760  0010A6  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  5761                           
  5762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  5763  0010A8  EF80  F008         	goto	l4469
  5764  0010AC                     l4467:
  5765                           
  5766                           ; BSR set to: 0
  5767  0010AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5768  0010B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5769  0010B4  CFDE FFF6          	movff	postinc2,tblptrl
  5770  0010B8  CFDD FFF7          	movff	postdec2,tblptrh
  5771  0010BC                     	if	0	;tblptru may be non-zero
  5772  0010BC                     	endif
  5773  0010BC                     	if	0	;tblptru may be non-zero
  5774  0010BC                     	endif
  5775  0010BC  0008               	tblrd		*
  5776  0010BE  50F5               	movf	tablat,w,c
  5777  0010C0  6E49               	movwf	??_vfpfcnvrt^0,c
  5778  0010C2  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  5779                           
  5780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5781                           ; Switch size 1, requested type "simple"
  5782                           ; Number of cases is 1, Range of values is 0 to 0
  5783                           ; switch strategies available:
  5784                           ; Name         Instructions Cycles
  5785                           ; simple_byte            4     3 (average)
  5786                           ;	Chosen strategy is simple_byte
  5787  0010C4  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  5788  0010C6  0A00               	xorlw	0	; case 0
  5789  0010C8  B4D8               	btfsc	status,2,c
  5790  0010CA  EF69  F008         	goto	l4825
  5791  0010CE  EF50  F008         	goto	l4463
  5792  0010D2                     l4825:
  5793                           
  5794                           ; BSR set to: 0
  5795                           ; Switch size 1, requested type "simple"
  5796                           ; Number of cases is 5, Range of values is 32 to 48
  5797                           ; switch strategies available:
  5798                           ; Name         Instructions Cycles
  5799                           ; simple_byte           16     9 (average)
  5800                           ;	Chosen strategy is simple_byte
  5801  0010D2  5049               	movf	??_vfpfcnvrt^0,w,c
  5802  0010D4  0A20               	xorlw	32	; case 32
  5803  0010D6  B4D8               	btfsc	status,2,c
  5804  0010D8  EF4A  F008         	goto	l4455
  5805  0010DC  0A03               	xorlw	3	; case 35
  5806  0010DE  B4D8               	btfsc	status,2,c
  5807  0010E0  EF4D  F008         	goto	l4459
  5808  0010E4  0A08               	xorlw	8	; case 43
  5809  0010E6  B4D8               	btfsc	status,2,c
  5810  0010E8  EF47  F008         	goto	l4451
  5811  0010EC  0A06               	xorlw	6	; case 45
  5812  0010EE  B4D8               	btfsc	status,2,c
  5813  0010F0  EF3A  F008         	goto	l4443
  5814  0010F4  0A1D               	xorlw	29	; case 48
  5815  0010F6  B4D8               	btfsc	status,2,c
  5816  0010F8  EF44  F008         	goto	l4447
  5817  0010FC  EF50  F008         	goto	l4463
  5818  001100                     l4469:
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  5822  001100  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  5823  001102  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5824  001104  B4D8               	btfsc	status,2,c
  5825  001106  EF87  F008         	goto	u4361
  5826  00110A  EF89  F008         	goto	u4360
  5827  00110E                     u4361:
  5828  00110E  EF56  F008         	goto	l4467
  5829  001112                     u4360:
  5830  001112                     
  5831                           ; BSR set to: 0
  5832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  5833  001112  A05A               	btfss	_flags^0,0,c
  5834  001114  EF8E  F008         	goto	u4371
  5835  001118  EF90  F008         	goto	u4370
  5836  00111C                     u4371:
  5837  00111C  EF91  F008         	goto	l4473
  5838  001120                     u4370:
  5839  001120                     
  5840                           ; BSR set to: 0
  5841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  5842  001120  925A               	bcf	_flags^0,1,c
  5843  001122                     l4473:
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  5847  001122  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5848  001126  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5849  00112A  CFDE FFF6          	movff	postinc2,tblptrl
  5850  00112E  CFDD FFF7          	movff	postdec2,tblptrh
  5851  001132                     	if	0	;tblptru may be non-zero
  5852  001132                     	endif
  5853  001132                     	if	0	;tblptru may be non-zero
  5854  001132                     	endif
  5855  001132  0008               	tblrd		*
  5856  001134  50F5               	movf	tablat,w,c
  5857  001136  0A2A               	xorlw	42
  5858  001138  A4D8               	btfss	status,2,c
  5859  00113A  EFA1  F008         	goto	u4381
  5860  00113E  EFA3  F008         	goto	u4380
  5861  001142                     u4381:
  5862  001142  EFCC  F008         	goto	l4481
  5863  001146                     u4380:
  5864  001146                     
  5865                           ; BSR set to: 0
  5866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  5867  001146  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5868  00114A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5869  00114E  2ADE               	incf	postinc2,f,c
  5870  001150  0E00               	movlw	0
  5871  001152  22DD               	addwfc	postdec2,f,c
  5872                           
  5873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5874  001154  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5875  001158  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5876  00115C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5877  001160  0E02               	movlw	2
  5878  001162  26DE               	addwf	postinc2,f,c
  5879  001164  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5880  001168  0E00               	movlw	0
  5881  00116A  22DD               	addwfc	postdec2,f,c
  5882  00116C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5883  001170  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5884  001174  CFDE F096          	movff	postinc2,_width
  5885  001178  CFDD F097          	movff	postdec2,_width+1
  5886  00117C                     
  5887                           ; BSR set to: 0
  5888                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  5889  00117C  BF97               	btfsc	(_width+1)& (0+255),7,b
  5890  00117E  EFC5  F008         	goto	u4390
  5891  001182  EFC3  F008         	goto	u4391
  5892  001186                     u4391:
  5893  001186  EF10  F009         	goto	l4491
  5894  00118A                     u4390:
  5895  00118A                     
  5896                           ; BSR set to: 0
  5897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  5898  00118A  805A               	bsf	_flags^0,0,c
  5899                           
  5900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  5901  00118C  6D96               	negf	_width& (0+255),b
  5902  00118E  1F97               	comf	(_width+1)& (0+255),f,b
  5903  001190  B0D8               	btfsc	status,0,c
  5904  001192  2B97               	incf	(_width+1)& (0+255),f,b
  5905  001194  EF10  F009         	goto	l4491
  5906  001198                     l4481:
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  5910  001198  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5911  00119C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5912  0011A0  CFDE F00B          	movff	postinc2,atoi@s
  5913  0011A4  CFDD F00C          	movff	postdec2,atoi@s+1
  5914  0011A8  ECCE  F00E         	call	_atoi	;wreg free
  5915  0011AC  C00B  F096         	movff	?_atoi,_width
  5916  0011B0  C00C  F097         	movff	?_atoi+1,_width+1
  5917                           
  5918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5919  0011B4  EFE3  F008         	goto	l4485
  5920  0011B8                     l4483:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  5924  0011B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5925  0011BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5926  0011C0  2ADE               	incf	postinc2,f,c
  5927  0011C2  0E00               	movlw	0
  5928  0011C4  22DD               	addwfc	postdec2,f,c
  5929  0011C6                     l4485:
  5930  0011C6  0ED0               	movlw	208
  5931  0011C8  6E49               	movwf	??_vfpfcnvrt^0,c
  5932  0011CA  0EFF               	movlw	255
  5933  0011CC  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  5934  0011CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5935  0011D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5936  0011D6  CFDE FFF6          	movff	postinc2,tblptrl
  5937  0011DA  CFDD FFF7          	movff	postdec2,tblptrh
  5938  0011DE                     	if	0	;tblptru may be non-zero
  5939  0011DE                     	endif
  5940  0011DE                     	if	0	;tblptru may be non-zero
  5941  0011DE                     	endif
  5942  0011DE  0008               	tblrd		*
  5943  0011E0  50F5               	movf	tablat,w,c
  5944  0011E2  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5945  0011E4  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  5946  0011E6  5049               	movf	??_vfpfcnvrt^0,w,c
  5947  0011E8  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5948  0011EA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  5949  0011EC  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5950  0011EE  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  5951  0011F0  E10A               	bnz	u4400
  5952  0011F2  0E0A               	movlw	10
  5953  0011F4  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5954  0011F6  A0D8               	btfss	status,0,c
  5955  0011F8  EF00  F009         	goto	u4401
  5956  0011FC  EF03  F009         	goto	u4400
  5957  001200                     u4401:
  5958  001200  0E01               	movlw	1
  5959  001202  EF04  F009         	goto	u4410
  5960  001206                     u4400:
  5961  001206  0E00               	movlw	0
  5962  001208                     u4410:
  5963  001208  0100               	movlb	0	; () banked
  5964  00120A  6F6A               	movwf	_vfpfcnvrt$1999& (0+255),b
  5965  00120C  6B6B               	clrf	(_vfpfcnvrt$1999+1)& (0+255),b
  5966  00120E                     
  5967                           ; BSR set to: 0
  5968  00120E  516A               	movf	_vfpfcnvrt$1999& (0+255),w,b
  5969  001210  116B               	iorwf	(_vfpfcnvrt$1999+1)& (0+255),w,b
  5970  001212  A4D8               	btfss	status,2,c
  5971  001214  EF0E  F009         	goto	u4421
  5972  001218  EF10  F009         	goto	u4420
  5973  00121C                     u4421:
  5974  00121C  EFDC  F008         	goto	l4483
  5975  001220                     u4420:
  5976  001220                     l4491:
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5980  001220  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5981  001224  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5982  001228  CFDE FFF6          	movff	postinc2,tblptrl
  5983  00122C  CFDD FFF7          	movff	postdec2,tblptrh
  5984  001230                     	if	0	;tblptru may be non-zero
  5985  001230                     	endif
  5986  001230                     	if	0	;tblptru may be non-zero
  5987  001230                     	endif
  5988  001230  0008               	tblrd		*
  5989  001232  50F5               	movf	tablat,w,c
  5990  001234  0A64               	xorlw	100
  5991  001236  B4D8               	btfsc	status,2,c
  5992  001238  EF20  F009         	goto	u4431
  5993  00123C  EF22  F009         	goto	u4430
  5994  001240                     u4431:
  5995  001240  EF34  F009         	goto	l4495
  5996  001244                     u4430:
  5997  001244                     
  5998                           ; BSR set to: 0
  5999  001244  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6000  001248  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6001  00124C  CFDE FFF6          	movff	postinc2,tblptrl
  6002  001250  CFDD FFF7          	movff	postdec2,tblptrh
  6003  001254                     	if	0	;tblptru may be non-zero
  6004  001254                     	endif
  6005  001254                     	if	0	;tblptru may be non-zero
  6006  001254                     	endif
  6007  001254  0008               	tblrd		*
  6008  001256  50F5               	movf	tablat,w,c
  6009  001258  0A69               	xorlw	105
  6010  00125A  A4D8               	btfss	status,2,c
  6011  00125C  EF32  F009         	goto	u4441
  6012  001260  EF34  F009         	goto	u4440
  6013  001264                     u4441:
  6014  001264  EF74  F009         	goto	l4501
  6015  001268                     u4440:
  6016  001268                     l4495:
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6020  001268  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6021  00126C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6022  001270  2ADE               	incf	postinc2,f,c
  6023  001272  0E00               	movlw	0
  6024  001274  22DD               	addwfc	postdec2,f,c
  6025                           
  6026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6027  001276  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6028  00127A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6029  00127E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6030  001282  0E02               	movlw	2
  6031  001284  26DE               	addwf	postinc2,f,c
  6032  001286  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6033  00128A  0E00               	movlw	0
  6034  00128C  22DD               	addwfc	postdec2,f,c
  6035  00128E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6036  001292  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6037  001296  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  6038  00129A  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  6039  00129E  0E00               	movlw	0
  6040  0012A0  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6041  0012A2  0EFF               	movlw	-1
  6042  0012A4  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6043  0012A6  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6044  0012A8  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6045  0012AA  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6046  0012AC  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6047  0012AE  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6048  0012B0                     
  6049                           ; BSR set to: 0
  6050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6051  0012B0  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  6052  0012B4  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6053  0012B8  C060  F021         	movff	vfpfcnvrt@ll,dtoa@d
  6054  0012BC  C061  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6055  0012C0  C062  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6056  0012C4  C063  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6057  0012C8  C064  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6058  0012CC  C065  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6059  0012D0  C066  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6060  0012D4  C067  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6061  0012D8  ECC6  F009         	call	_dtoa	;wreg free
  6062  0012DC  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  6063  0012E0  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6064  0012E4  EFC5  F009         	goto	l1143
  6065  0012E8                     l4501:
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6069  0012E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6070  0012EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6071  0012F0  CFDE FFF6          	movff	postinc2,tblptrl
  6072  0012F4  CFDD FFF7          	movff	postdec2,tblptrh
  6073  0012F8                     	if	0	;tblptru may be non-zero
  6074  0012F8                     	endif
  6075  0012F8                     	if	0	;tblptru may be non-zero
  6076  0012F8                     	endif
  6077  0012F8  0008               	tblrd		*
  6078  0012FA  50F5               	movf	tablat,w,c
  6079  0012FC  0A25               	xorlw	37
  6080  0012FE  A4D8               	btfss	status,2,c
  6081  001300  EF84  F009         	goto	u4451
  6082  001304  EF86  F009         	goto	u4450
  6083  001308                     u4451:
  6084  001308  EF9D  F009         	goto	l4511
  6085  00130C                     u4450:
  6086  00130C                     
  6087                           ; BSR set to: 0
  6088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6089  00130C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6090  001310  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6091  001314  2ADE               	incf	postinc2,f,c
  6092  001316  0E00               	movlw	0
  6093  001318  22DD               	addwfc	postdec2,f,c
  6094  00131A                     
  6095                           ; BSR set to: 0
  6096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6097  00131A  0E00               	movlw	0
  6098  00131C  6E05               	movwf	(fputc@c+1)^0,c
  6099  00131E  0E25               	movlw	37
  6100  001320  6E04               	movwf	fputc@c^0,c
  6101  001322  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6102  001326  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6103  00132A  ECF9  F014         	call	_fputc	;wreg free
  6104  00132E                     l4507:
  6105                           
  6106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6107  00132E  0E00               	movlw	0
  6108  001330  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  6109  001332  0E01               	movlw	1
  6110  001334  6E43               	movwf	?_vfpfcnvrt^0,c
  6111  001336  EFC5  F009         	goto	l1143
  6112  00133A                     l4511:
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6116  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6117  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6118  001342  2ADE               	incf	postinc2,f,c
  6119  001344  0E00               	movlw	0
  6120  001346  22DD               	addwfc	postdec2,f,c
  6121  001348                     
  6122                           ; BSR set to: 0
  6123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6124  001348  0E00               	movlw	0
  6125  00134A  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  6126  00134C  0E00               	movlw	0
  6127  00134E  6E43               	movwf	?_vfpfcnvrt^0,c
  6128  001350  EFC5  F009         	goto	l1143
  6129  001354                     l4517:
  6130                           
  6131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6132  001354  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6133  001358  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6134  00135C  CFDE FFF6          	movff	postinc2,tblptrl
  6135  001360  CFDD FFF7          	movff	postdec2,tblptrh
  6136  001364                     	if	0	;tblptru may be non-zero
  6137  001364                     	endif
  6138  001364                     	if	0	;tblptru may be non-zero
  6139  001364                     	endif
  6140  001364  0008               	tblrd		*
  6141  001366  50F5               	movf	tablat,w,c
  6142  001368  6E04               	movwf	fputc@c^0,c
  6143  00136A  6A05               	clrf	(fputc@c+1)^0,c
  6144  00136C  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  6145  001370  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6146  001374  ECF9  F014         	call	_fputc	;wreg free
  6147  001378                     
  6148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6149  001378  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6150  00137C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6151  001380  2ADE               	incf	postinc2,f,c
  6152  001382  0E00               	movlw	0
  6153  001384  22DD               	addwfc	postdec2,f,c
  6154  001386  EF97  F009         	goto	l4507
  6155  00138A                     l1143:
  6156  00138A  0012               	return		;funcret
  6157  00138C                     __end_of_vfpfcnvrt:
  6158                           	callstack 0
  6159                           
  6160 ;; *************** function _dtoa *****************
  6161 ;; Defined at:
  6162 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  6165 ;;		 -> sprintf@f(6), 
  6166 ;;  d               8   32[COMRAM] long long 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  n               8   56[COMRAM] long long 
  6169 ;;  i               2   64[COMRAM] int 
  6170 ;;  s               2   54[COMRAM] int 
  6171 ;;  w               2   52[COMRAM] int 
  6172 ;;  p               2   50[COMRAM] int 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  2   30[COMRAM] int 
  6175 ;; Registers used:
  6176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6182 ;;      Params:        10       0       0       0       0       0       0       0       0
  6183 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6184 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6185 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6186 ;;Total ram usage:       36 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    6
  6189 ;; This function calls:
  6190 ;;		___aodiv
  6191 ;;		___aomod
  6192 ;;		_abs
  6193 ;;		_pad
  6194 ;; This function is called by:
  6195 ;;		_vfpfcnvrt
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text34
  6200  00138C                     __ptext34:
  6201                           	callstack 0
  6202  00138C                     _dtoa:
  6203                           	callstack 19
  6204  00138C                     
  6205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6206  00138C  C021  F039         	movff	dtoa@d,dtoa@n
  6207  001390  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  6208  001394  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  6209  001398  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  6210  00139C  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  6211  0013A0  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  6212  0013A4  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  6213  0013A8  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  6214  0013AC                     
  6215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6216  0013AC  BE40               	btfsc	(dtoa@n+7)^0,7,c
  6217  0013AE  EFDB  F009         	goto	u4131
  6218  0013B2  EFDE  F009         	goto	u4130
  6219  0013B6                     u4131:
  6220  0013B6  0E01               	movlw	1
  6221  0013B8  EFDF  F009         	goto	u4140
  6222  0013BC                     u4130:
  6223  0013BC  0E00               	movlw	0
  6224  0013BE                     u4140:
  6225  0013BE  6E37               	movwf	dtoa@s^0,c
  6226  0013C0  6A38               	clrf	(dtoa@s+1)^0,c
  6227                           
  6228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6229  0013C2  5037               	movf	dtoa@s^0,w,c
  6230  0013C4  1038               	iorwf	(dtoa@s+1)^0,w,c
  6231  0013C6  B4D8               	btfsc	status,2,c
  6232  0013C8  EFE8  F009         	goto	u4151
  6233  0013CC  EFEA  F009         	goto	u4150
  6234  0013D0                     u4151:
  6235  0013D0  EFFA  F009         	goto	l4335
  6236  0013D4                     u4150:
  6237  0013D4                     
  6238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6239  0013D4  1E40               	comf	(dtoa@n+7)^0,f,c
  6240  0013D6  1E3F               	comf	(dtoa@n+6)^0,f,c
  6241  0013D8  1E3E               	comf	(dtoa@n+5)^0,f,c
  6242  0013DA  1E3D               	comf	(dtoa@n+4)^0,f,c
  6243  0013DC  1E3C               	comf	(dtoa@n+3)^0,f,c
  6244  0013DE  1E3B               	comf	(dtoa@n+2)^0,f,c
  6245  0013E0  1E3A               	comf	(dtoa@n+1)^0,f,c
  6246  0013E2  6C39               	negf	dtoa@n^0,c
  6247  0013E4  0E00               	movlw	0
  6248  0013E6  223A               	addwfc	(dtoa@n+1)^0,f,c
  6249  0013E8  223B               	addwfc	(dtoa@n+2)^0,f,c
  6250  0013EA  223C               	addwfc	(dtoa@n+3)^0,f,c
  6251  0013EC  223D               	addwfc	(dtoa@n+4)^0,f,c
  6252  0013EE  223E               	addwfc	(dtoa@n+5)^0,f,c
  6253  0013F0  223F               	addwfc	(dtoa@n+6)^0,f,c
  6254  0013F2  2240               	addwfc	(dtoa@n+7)^0,f,c
  6255  0013F4                     l4335:
  6256                           
  6257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6258  0013F4  BE59               	btfsc	(_prec+1)^0,7,c
  6259  0013F6  EFFF  F009         	goto	u4161
  6260  0013FA  EF01  F00A         	goto	u4160
  6261  0013FE                     u4161:
  6262  0013FE  EF02  F00A         	goto	l4339
  6263  001402                     u4160:
  6264  001402                     
  6265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6266  001402  925A               	bcf	_flags^0,1,c
  6267  001404                     l4339:
  6268                           
  6269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6270  001404  BE59               	btfsc	(_prec+1)^0,7,c
  6271  001406  EF0F  F00A         	goto	u4170
  6272  00140A  5059               	movf	(_prec+1)^0,w,c
  6273  00140C  E106               	bnz	u4171
  6274  00140E  0458               	decf	_prec^0,w,c
  6275  001410  B0D8               	btfsc	status,0,c
  6276  001412  EF0D  F00A         	goto	u4171
  6277  001416  EF0F  F00A         	goto	u4170
  6278  00141A                     u4171:
  6279  00141A  EF15  F00A         	goto	l1094
  6280  00141E                     u4170:
  6281  00141E  0E00               	movlw	0
  6282  001420  6E34               	movwf	(dtoa@p+1)^0,c
  6283  001422  0E01               	movlw	1
  6284  001424  6E33               	movwf	dtoa@p^0,c
  6285  001426  EF19  F00A         	goto	l1096
  6286  00142A                     l1094:
  6287  00142A  C058  F033         	movff	_prec,dtoa@p
  6288  00142E  C059  F034         	movff	_prec+1,dtoa@p+1
  6289  001432                     l1096:
  6290                           
  6291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6292  001432  C096  F035         	movff	_width,dtoa@w
  6293  001436  C097  F036         	movff	_width+1,dtoa@w+1
  6294  00143A                     
  6295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6296  00143A  5037               	movf	dtoa@s^0,w,c
  6297  00143C  1038               	iorwf	(dtoa@s+1)^0,w,c
  6298  00143E  A4D8               	btfss	status,2,c
  6299  001440  EF24  F00A         	goto	u4181
  6300  001444  EF26  F00A         	goto	u4180
  6301  001448                     u4181:
  6302  001448  EF2D  F00A         	goto	l4347
  6303  00144C                     u4180:
  6304  00144C  A45A               	btfss	_flags^0,2,c
  6305  00144E  EF2B  F00A         	goto	u4191
  6306  001452  EF2D  F00A         	goto	u4190
  6307  001456                     u4191:
  6308  001456  EF30  F00A         	goto	l4349
  6309  00145A                     u4190:
  6310  00145A                     l4347:
  6311                           
  6312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  6313  00145A  0635               	decf	dtoa@w^0,f,c
  6314  00145C  A0D8               	btfss	status,0,c
  6315  00145E  0636               	decf	(dtoa@w+1)^0,f,c
  6316  001460                     l4349:
  6317                           
  6318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6319  001460  0E00               	movlw	0
  6320  001462  6E42               	movwf	(dtoa@i+1)^0,c
  6321  001464  0E1F               	movlw	31
  6322  001466  6E41               	movwf	dtoa@i^0,c
  6323  001468                     
  6324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6325  001468  0E00               	movlw	0
  6326  00146A  0100               	movlb	0	; () banked
  6327  00146C  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6328                           
  6329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6330  00146E  EFB5  F00A         	goto	l4363
  6331  001472                     l4353:
  6332                           
  6333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  6334  001472  0641               	decf	dtoa@i^0,f,c
  6335  001474  A0D8               	btfss	status,0,c
  6336  001476  0642               	decf	(dtoa@i+1)^0,f,c
  6337  001478                     
  6338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6339  001478  0E98               	movlw	low _dbuf
  6340  00147A  2441               	addwf	dtoa@i^0,w,c
  6341  00147C  6ED9               	movwf	fsr2l,c
  6342  00147E  0E00               	movlw	high _dbuf
  6343  001480  2042               	addwfc	(dtoa@i+1)^0,w,c
  6344  001482  6EDA               	movwf	fsr2h,c
  6345  001484  C039  F004         	movff	dtoa@n,___aomod@dividend
  6346  001488  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  6347  00148C  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  6348  001490  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  6349  001494  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  6350  001498  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  6351  00149C  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  6352  0014A0  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  6353  0014A4  0E0A               	movlw	10
  6354  0014A6  6E0C               	movwf	___aomod@divisor^0,c
  6355  0014A8  0E00               	movlw	0
  6356  0014AA  6E0D               	movwf	(___aomod@divisor+1)^0,c
  6357  0014AC  0E00               	movlw	0
  6358  0014AE  6E0E               	movwf	(___aomod@divisor+2)^0,c
  6359  0014B0  0E00               	movlw	0
  6360  0014B2  6E0F               	movwf	(___aomod@divisor+3)^0,c
  6361  0014B4  0E00               	movlw	0
  6362  0014B6  6E10               	movwf	(___aomod@divisor+4)^0,c
  6363  0014B8  0E00               	movlw	0
  6364  0014BA  6E11               	movwf	(___aomod@divisor+5)^0,c
  6365  0014BC  0E00               	movlw	0
  6366  0014BE  6E12               	movwf	(___aomod@divisor+6)^0,c
  6367  0014C0  0E00               	movlw	0
  6368  0014C2  6E13               	movwf	(___aomod@divisor+7)^0,c
  6369  0014C4  EC15  F011         	call	___aomod	;wreg free
  6370  0014C8  C004  F029         	movff	?___aomod,??_dtoa
  6371  0014CC  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  6372  0014D0  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  6373  0014D4  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  6374  0014D8  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  6375  0014DC  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  6376  0014E0  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  6377  0014E4  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  6378  0014E8  C029  F016         	movff	??_dtoa,abs@a
  6379  0014EC  C02B  F017         	movff	??_dtoa+2,abs@a+1
  6380  0014F0  ECCA  F018         	call	_abs	;wreg free
  6381  0014F4  5016               	movf	?_abs^0,w,c
  6382  0014F6  0F30               	addlw	48
  6383  0014F8  6EDF               	movwf	indf2,c
  6384  0014FA                     
  6385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  6386  0014FA  0633               	decf	dtoa@p^0,f,c
  6387  0014FC  A0D8               	btfss	status,0,c
  6388  0014FE  0634               	decf	(dtoa@p+1)^0,f,c
  6389  001500                     
  6390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  6391  001500  0635               	decf	dtoa@w^0,f,c
  6392  001502  A0D8               	btfss	status,0,c
  6393  001504  0636               	decf	(dtoa@w+1)^0,f,c
  6394  001506                     
  6395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6396  001506  C039  F004         	movff	dtoa@n,___aodiv@dividend
  6397  00150A  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  6398  00150E  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  6399  001512  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  6400  001516  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  6401  00151A  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  6402  00151E  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  6403  001522  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  6404  001526  0E0A               	movlw	10
  6405  001528  6E0C               	movwf	___aodiv@divisor^0,c
  6406  00152A  0E00               	movlw	0
  6407  00152C  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  6408  00152E  0E00               	movlw	0
  6409  001530  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  6410  001532  0E00               	movlw	0
  6411  001534  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  6412  001536  0E00               	movlw	0
  6413  001538  6E10               	movwf	(___aodiv@divisor+4)^0,c
  6414  00153A  0E00               	movlw	0
  6415  00153C  6E11               	movwf	(___aodiv@divisor+5)^0,c
  6416  00153E  0E00               	movlw	0
  6417  001540  6E12               	movwf	(___aodiv@divisor+6)^0,c
  6418  001542  0E00               	movlw	0
  6419  001544  6E13               	movwf	(___aodiv@divisor+7)^0,c
  6420  001546  EC96  F00F         	call	___aodiv	;wreg free
  6421  00154A  C004  F039         	movff	?___aodiv,dtoa@n
  6422  00154E  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  6423  001552  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  6424  001556  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  6425  00155A  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  6426  00155E  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  6427  001562  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  6428  001566  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  6429  00156A                     l4363:
  6430                           
  6431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6432  00156A  BE42               	btfsc	(dtoa@i+1)^0,7,c
  6433  00156C  EFC0  F00A         	goto	u4201
  6434  001570  5042               	movf	(dtoa@i+1)^0,w,c
  6435  001572  E108               	bnz	u4200
  6436  001574  0441               	decf	dtoa@i^0,w,c
  6437  001576  A0D8               	btfss	status,0,c
  6438  001578  EFC0  F00A         	goto	u4201
  6439  00157C  EFC2  F00A         	goto	u4200
  6440  001580                     u4201:
  6441  001580  EFF2  F00A         	goto	l4373
  6442  001584                     u4200:
  6443  001584  5039               	movf	dtoa@n^0,w,c
  6444  001586  103A               	iorwf	(dtoa@n+1)^0,w,c
  6445  001588  103B               	iorwf	(dtoa@n+2)^0,w,c
  6446  00158A  103C               	iorwf	(dtoa@n+3)^0,w,c
  6447  00158C  103D               	iorwf	(dtoa@n+4)^0,w,c
  6448  00158E  103E               	iorwf	(dtoa@n+5)^0,w,c
  6449  001590  103F               	iorwf	(dtoa@n+6)^0,w,c
  6450  001592  1040               	iorwf	(dtoa@n+7)^0,w,c
  6451  001594  A4D8               	btfss	status,2,c
  6452  001596  EFCF  F00A         	goto	u4211
  6453  00159A  EFD1  F00A         	goto	u4210
  6454  00159E                     u4211:
  6455  00159E  EF39  F00A         	goto	l4353
  6456  0015A2                     u4210:
  6457  0015A2  BE34               	btfsc	(dtoa@p+1)^0,7,c
  6458  0015A4  EFDE  F00A         	goto	u4220
  6459  0015A8  5034               	movf	(dtoa@p+1)^0,w,c
  6460  0015AA  E106               	bnz	u4221
  6461  0015AC  0433               	decf	dtoa@p^0,w,c
  6462  0015AE  B0D8               	btfsc	status,0,c
  6463  0015B0  EFDC  F00A         	goto	u4221
  6464  0015B4  EFDE  F00A         	goto	u4220
  6465  0015B8                     u4221:
  6466  0015B8  EF39  F00A         	goto	l4353
  6467  0015BC                     u4220:
  6468  0015BC  BE36               	btfsc	(dtoa@w+1)^0,7,c
  6469  0015BE  EFE9  F00A         	goto	u4231
  6470  0015C2  5036               	movf	(dtoa@w+1)^0,w,c
  6471  0015C4  E108               	bnz	u4230
  6472  0015C6  0435               	decf	dtoa@w^0,w,c
  6473  0015C8  A0D8               	btfss	status,0,c
  6474  0015CA  EFE9  F00A         	goto	u4231
  6475  0015CE  EFEB  F00A         	goto	u4230
  6476  0015D2                     u4231:
  6477  0015D2  EFF2  F00A         	goto	l4373
  6478  0015D6                     u4230:
  6479  0015D6  B25A               	btfsc	_flags^0,1,c
  6480  0015D8  EFF0  F00A         	goto	u4241
  6481  0015DC  EFF2  F00A         	goto	u4240
  6482  0015E0                     u4241:
  6483  0015E0  EF39  F00A         	goto	l4353
  6484  0015E4                     u4240:
  6485  0015E4                     l4373:
  6486                           
  6487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6488  0015E4  5037               	movf	dtoa@s^0,w,c
  6489  0015E6  1038               	iorwf	(dtoa@s+1)^0,w,c
  6490  0015E8  A4D8               	btfss	status,2,c
  6491  0015EA  EFF9  F00A         	goto	u4251
  6492  0015EE  EFFB  F00A         	goto	u4250
  6493  0015F2                     u4251:
  6494  0015F2  EF02  F00B         	goto	l4377
  6495  0015F6                     u4250:
  6496  0015F6  A45A               	btfss	_flags^0,2,c
  6497  0015F8  EF00  F00B         	goto	u4261
  6498  0015FC  EF02  F00B         	goto	u4260
  6499  001600                     u4261:
  6500  001600  EF20  F00B         	goto	l4387
  6501  001604                     u4260:
  6502  001604                     l4377:
  6503                           
  6504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  6505  001604  0641               	decf	dtoa@i^0,f,c
  6506  001606  A0D8               	btfss	status,0,c
  6507  001608  0642               	decf	(dtoa@i+1)^0,f,c
  6508  00160A                     
  6509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6510  00160A  5037               	movf	dtoa@s^0,w,c
  6511  00160C  1038               	iorwf	(dtoa@s+1)^0,w,c
  6512  00160E  A4D8               	btfss	status,2,c
  6513  001610  EF0C  F00B         	goto	u4271
  6514  001614  EF0E  F00B         	goto	u4270
  6515  001618                     u4271:
  6516  001618  EF14  F00B         	goto	l4383
  6517  00161C                     u4270:
  6518  00161C  0E00               	movlw	0
  6519  00161E  6E32               	movwf	(_dtoa$1984+1)^0,c
  6520  001620  0E2B               	movlw	43
  6521  001622  6E31               	movwf	_dtoa$1984^0,c
  6522  001624  EF18  F00B         	goto	l4385
  6523  001628                     l4383:
  6524  001628  0E00               	movlw	0
  6525  00162A  6E32               	movwf	(_dtoa$1984+1)^0,c
  6526  00162C  0E2D               	movlw	45
  6527  00162E  6E31               	movwf	_dtoa$1984^0,c
  6528  001630                     l4385:
  6529  001630  0E98               	movlw	low _dbuf
  6530  001632  2441               	addwf	dtoa@i^0,w,c
  6531  001634  6ED9               	movwf	fsr2l,c
  6532  001636  0E00               	movlw	high _dbuf
  6533  001638  2042               	addwfc	(dtoa@i+1)^0,w,c
  6534  00163A  6EDA               	movwf	fsr2h,c
  6535  00163C  C031  FFDF         	movff	_dtoa$1984,indf2
  6536  001640                     l4387:
  6537                           
  6538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6539  001640  C01F  F014         	movff	dtoa@fp,pad@fp
  6540  001644  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  6541  001648  0E98               	movlw	low _dbuf
  6542  00164A  2441               	addwf	dtoa@i^0,w,c
  6543  00164C  6E16               	movwf	pad@buf^0,c
  6544  00164E  0E00               	movlw	high _dbuf
  6545  001650  2042               	addwfc	(dtoa@i+1)^0,w,c
  6546  001652  6E17               	movwf	(pad@buf+1)^0,c
  6547  001654  C035  F018         	movff	dtoa@w,pad@p
  6548  001658  C036  F019         	movff	dtoa@w+1,pad@p+1
  6549  00165C  EC5E  F015         	call	_pad	;wreg free
  6550  001660  C014  F01F         	movff	?_pad,?_dtoa
  6551  001664  C015  F020         	movff	?_pad+1,?_dtoa+1
  6552  001668  0012               	return		;funcret
  6553  00166A                     __end_of_dtoa:
  6554                           	callstack 0
  6555                           
  6556 ;; *************** function _pad *****************
  6557 ;; Defined at:
  6558 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  6561 ;;		 -> sprintf@f(6), 
  6562 ;;  buf             2   21[COMRAM] PTR unsigned char 
  6563 ;;		 -> dbuf(32), 
  6564 ;;  p               2   23[COMRAM] int 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  w               2   28[COMRAM] int 
  6567 ;;  i               2   26[COMRAM] int 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  2   19[COMRAM] int 
  6570 ;; Registers used:
  6571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6577 ;;      Params:         6       0       0       0       0       0       0       0       0
  6578 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6579 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6580 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6581 ;;Total ram usage:       11 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    5
  6584 ;; This function calls:
  6585 ;;		_fputc
  6586 ;;		_fputs
  6587 ;;		_strlen
  6588 ;; This function is called by:
  6589 ;;		_dtoa
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text35
  6594  002ABC                     __ptext35:
  6595                           	callstack 0
  6596  002ABC                     _pad:
  6597                           	callstack 19
  6598  002ABC                     
  6599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6600  002ABC  A05A               	btfss	_flags^0,0,c
  6601  002ABE  EF63  F015         	goto	u4041
  6602  002AC2  EF65  F015         	goto	u4040
  6603  002AC6                     u4041:
  6604  002AC6  EF6F  F015         	goto	l4291
  6605  002ACA                     u4040:
  6606  002ACA                     
  6607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6608  002ACA  C016  F00D         	movff	pad@buf,fputs@s
  6609  002ACE  C017  F00E         	movff	pad@buf+1,fputs@s+1
  6610  002AD2  C014  F00F         	movff	pad@fp,fputs@fp
  6611  002AD6  C015  F010         	movff	pad@fp+1,fputs@fp+1
  6612  002ADA  EC87  F018         	call	_fputs	;wreg free
  6613  002ADE                     l4291:
  6614                           
  6615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6616  002ADE  BE19               	btfsc	(pad@p+1)^0,7,c
  6617  002AE0  EF74  F015         	goto	u4051
  6618  002AE4  EF76  F015         	goto	u4050
  6619  002AE8                     u4051:
  6620  002AE8  EF7C  F015         	goto	l4295
  6621  002AEC                     u4050:
  6622  002AEC  C018  F01D         	movff	pad@p,pad@w
  6623  002AF0  C019  F01E         	movff	pad@p+1,pad@w+1
  6624  002AF4  EF80  F015         	goto	l1083
  6625  002AF8                     l4295:
  6626  002AF8  0E00               	movlw	0
  6627  002AFA  6E1E               	movwf	(pad@w+1)^0,c
  6628  002AFC  0E00               	movlw	0
  6629  002AFE  6E1D               	movwf	pad@w^0,c
  6630  002B00                     l1083:
  6631                           
  6632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6633  002B00  0E00               	movlw	0
  6634  002B02  6E1C               	movwf	(pad@i+1)^0,c
  6635  002B04  0E00               	movlw	0
  6636  002B06  6E1B               	movwf	pad@i^0,c
  6637                           
  6638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6639  002B08  EF92  F015         	goto	l4301
  6640  002B0C                     l4297:
  6641                           
  6642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6643  002B0C  0E00               	movlw	0
  6644  002B0E  6E05               	movwf	(fputc@c+1)^0,c
  6645  002B10  0E20               	movlw	32
  6646  002B12  6E04               	movwf	fputc@c^0,c
  6647  002B14  C014  F006         	movff	pad@fp,fputc@fp
  6648  002B18  C015  F007         	movff	pad@fp+1,fputc@fp+1
  6649  002B1C  ECF9  F014         	call	_fputc	;wreg free
  6650  002B20                     
  6651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6652  002B20  4A1B               	infsnz	pad@i^0,f,c
  6653  002B22  2A1C               	incf	(pad@i+1)^0,f,c
  6654  002B24                     l4301:
  6655                           
  6656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6657  002B24  501D               	movf	pad@w^0,w,c
  6658  002B26  5C1B               	subwf	pad@i^0,w,c
  6659  002B28  501C               	movf	(pad@i+1)^0,w,c
  6660  002B2A  0A80               	xorlw	128
  6661  002B2C  6E1A               	movwf	??_pad^0,c
  6662  002B2E  501E               	movf	(pad@w+1)^0,w,c
  6663  002B30  0A80               	xorlw	128
  6664  002B32  581A               	subwfb	??_pad^0,w,c
  6665  002B34  A0D8               	btfss	status,0,c
  6666  002B36  EF9F  F015         	goto	u4061
  6667  002B3A  EFA1  F015         	goto	u4060
  6668  002B3E                     u4061:
  6669  002B3E  EF86  F015         	goto	l4297
  6670  002B42                     u4060:
  6671  002B42                     
  6672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6673  002B42  B05A               	btfsc	_flags^0,0,c
  6674  002B44  EFA6  F015         	goto	u4071
  6675  002B48  EFA8  F015         	goto	u4070
  6676  002B4C                     u4071:
  6677  002B4C  EFB2  F015         	goto	l4305
  6678  002B50                     u4070:
  6679  002B50                     
  6680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6681  002B50  C016  F00D         	movff	pad@buf,fputs@s
  6682  002B54  C017  F00E         	movff	pad@buf+1,fputs@s+1
  6683  002B58  C014  F00F         	movff	pad@fp,fputs@fp
  6684  002B5C  C015  F010         	movff	pad@fp+1,fputs@fp+1
  6685  002B60  EC87  F018         	call	_fputs	;wreg free
  6686  002B64                     l4305:
  6687                           
  6688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6689  002B64  C016  F004         	movff	pad@buf,strlen@s
  6690  002B68  C017  F005         	movff	pad@buf+1,strlen@s+1
  6691  002B6C  EC24  F019         	call	_strlen	;wreg free
  6692  002B70  501D               	movf	pad@w^0,w,c
  6693  002B72  2404               	addwf	?_strlen^0,w,c
  6694  002B74  6E14               	movwf	?_pad^0,c
  6695  002B76  501E               	movf	(pad@w+1)^0,w,c
  6696  002B78  2005               	addwfc	(?_strlen+1)^0,w,c
  6697  002B7A  6E15               	movwf	(?_pad+1)^0,c
  6698  002B7C  0012               	return		;funcret
  6699  002B7E                     __end_of_pad:
  6700                           	callstack 0
  6701                           
  6702 ;; *************** function _strlen *****************
  6703 ;; Defined at:
  6704 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  s               2    3[COMRAM] PTR const unsigned char 
  6707 ;;		 -> dbuf(32), 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  a               2    5[COMRAM] PTR const unsigned char 
  6710 ;;		 -> dbuf(32), 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  2    3[COMRAM] unsigned int 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6720 ;;      Params:         2       0       0       0       0       0       0       0       0
  6721 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6723 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6724 ;;Total ram usage:        4 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    2
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_pad
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text36
  6735  003248                     __ptext36:
  6736                           	callstack 0
  6737  003248                     _strlen:
  6738                           	callstack 21
  6739  003248  C004  F006         	movff	strlen@s,strlen@a
  6740  00324C  C005  F007         	movff	strlen@s+1,strlen@a+1
  6741  003250  EF2C  F019         	goto	l4195
  6742  003254                     l4193:
  6743  003254  4A04               	infsnz	strlen@s^0,f,c
  6744  003256  2A05               	incf	(strlen@s+1)^0,f,c
  6745  003258                     l4195:
  6746  003258  C004  FFD9         	movff	strlen@s,fsr2l
  6747  00325C  C005  FFDA         	movff	strlen@s+1,fsr2h
  6748  003260  50DF               	movf	indf2,w,c
  6749  003262  A4D8               	btfss	status,2,c
  6750  003264  EF36  F019         	goto	u3901
  6751  003268  EF38  F019         	goto	u3900
  6752  00326C                     u3901:
  6753  00326C  EF2A  F019         	goto	l4193
  6754  003270                     u3900:
  6755  003270  5006               	movf	strlen@a^0,w,c
  6756  003272  5C04               	subwf	strlen@s^0,w,c
  6757  003274  6E04               	movwf	?_strlen^0,c
  6758  003276  5007               	movf	(strlen@a+1)^0,w,c
  6759  003278  5805               	subwfb	(strlen@s+1)^0,w,c
  6760  00327A  6E05               	movwf	(?_strlen+1)^0,c
  6761  00327C  0012               	return		;funcret
  6762  00327E                     __end_of_strlen:
  6763                           	callstack 0
  6764                           
  6765 ;; *************** function _fputs *****************
  6766 ;; Defined at:
  6767 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6770 ;;		 -> dbuf(32), 
  6771 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  6772 ;;		 -> sprintf@f(6), 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  i               2   17[COMRAM] int 
  6775 ;;  c               1   16[COMRAM] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  2   12[COMRAM] int 
  6778 ;; Registers used:
  6779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6785 ;;      Params:         4       0       0       0       0       0       0       0       0
  6786 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6788 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6789 ;;Total ram usage:        7 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    4
  6792 ;; This function calls:
  6793 ;;		_fputc
  6794 ;; This function is called by:
  6795 ;;		_pad
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text37
  6800  00310E                     __ptext37:
  6801                           	callstack 0
  6802  00310E                     _fputs:
  6803                           	callstack 19
  6804  00310E  0E00               	movlw	0
  6805  003110  6E13               	movwf	(fputs@i+1)^0,c
  6806  003112  0E00               	movlw	0
  6807  003114  6E12               	movwf	fputs@i^0,c
  6808  003116  EF98  F018         	goto	l4189
  6809  00311A                     l4185:
  6810  00311A  C011  F004         	movff	fputs@c,fputc@c
  6811  00311E  6A05               	clrf	(fputc@c+1)^0,c
  6812  003120  C00F  F006         	movff	fputs@fp,fputc@fp
  6813  003124  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  6814  003128  ECF9  F014         	call	_fputc	;wreg free
  6815  00312C  4A12               	infsnz	fputs@i^0,f,c
  6816  00312E  2A13               	incf	(fputs@i+1)^0,f,c
  6817  003130                     l4189:
  6818  003130  5012               	movf	fputs@i^0,w,c
  6819  003132  240D               	addwf	fputs@s^0,w,c
  6820  003134  6ED9               	movwf	fsr2l,c
  6821  003136  5013               	movf	(fputs@i+1)^0,w,c
  6822  003138  200E               	addwfc	(fputs@s+1)^0,w,c
  6823  00313A  6EDA               	movwf	fsr2h,c
  6824  00313C  50DF               	movf	indf2,w,c
  6825  00313E  6E11               	movwf	fputs@c^0,c
  6826  003140  5011               	movf	fputs@c^0,w,c
  6827  003142  A4D8               	btfss	status,2,c
  6828  003144  EFA6  F018         	goto	u3891
  6829  003148  EFA8  F018         	goto	u3890
  6830  00314C                     u3891:
  6831  00314C  EF8D  F018         	goto	l4185
  6832  003150                     u3890:
  6833  003150  0012               	return		;funcret
  6834  003152                     __end_of_fputs:
  6835                           	callstack 0
  6836                           
  6837 ;; *************** function _fputc *****************
  6838 ;; Defined at:
  6839 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  c               2    3[COMRAM] int 
  6842 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  6843 ;;		 -> sprintf@f(6), 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  2    3[COMRAM] int 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6855 ;;      Params:         4       0       0       0       0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6857 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6858 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6859 ;;Total ram usage:        9 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    3
  6862 ;; This function calls:
  6863 ;;		_putch
  6864 ;; This function is called by:
  6865 ;;		_pad
  6866 ;;		_vfpfcnvrt
  6867 ;;		_fputs
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text38
  6872  0029F2                     __ptext38:
  6873                           	callstack 0
  6874  0029F2                     _fputc:
  6875                           	callstack 22
  6876  0029F2  5006               	movf	fputc@fp^0,w,c
  6877  0029F4  1007               	iorwf	(fputc@fp+1)^0,w,c
  6878  0029F6  B4D8               	btfsc	status,2,c
  6879  0029F8  EF00  F015         	goto	u3851
  6880  0029FC  EF02  F015         	goto	u3850
  6881  002A00                     u3851:
  6882  002A00  EF0B  F015         	goto	l4173
  6883  002A04                     u3850:
  6884  002A04  5006               	movf	fputc@fp^0,w,c
  6885  002A06  1007               	iorwf	(fputc@fp+1)^0,w,c
  6886  002A08  A4D8               	btfss	status,2,c
  6887  002A0A  EF09  F015         	goto	u3861
  6888  002A0E  EF0B  F015         	goto	u3860
  6889  002A12                     u3861:
  6890  002A12  EF10  F015         	goto	l4175
  6891  002A16                     u3860:
  6892  002A16                     l4173:
  6893  002A16  5004               	movf	fputc@c^0,w,c
  6894  002A18  ECE4  F019         	call	_putch
  6895  002A1C  EF5D  F015         	goto	l1214
  6896  002A20                     l4175:
  6897  002A20  EE20 F004          	lfsr	2,4
  6898  002A24  5006               	movf	fputc@fp^0,w,c
  6899  002A26  26D9               	addwf	fsr2l,f,c
  6900  002A28  5007               	movf	(fputc@fp+1)^0,w,c
  6901  002A2A  22DA               	addwfc	fsr2h,f,c
  6902  002A2C  50DE               	movf	postinc2,w,c
  6903  002A2E  10DE               	iorwf	postinc2,w,c
  6904  002A30  B4D8               	btfsc	status,2,c
  6905  002A32  EF1D  F015         	goto	u3871
  6906  002A36  EF1F  F015         	goto	u3870
  6907  002A3A                     u3871:
  6908  002A3A  EF3A  F015         	goto	l4179
  6909  002A3E                     u3870:
  6910  002A3E  EE20 F004          	lfsr	2,4
  6911  002A42  5006               	movf	fputc@fp^0,w,c
  6912  002A44  26D9               	addwf	fsr2l,f,c
  6913  002A46  5007               	movf	(fputc@fp+1)^0,w,c
  6914  002A48  22DA               	addwfc	fsr2h,f,c
  6915  002A4A  EE10 F002          	lfsr	1,2
  6916  002A4E  5006               	movf	fputc@fp^0,w,c
  6917  002A50  26E1               	addwf	fsr1l,f,c
  6918  002A52  5007               	movf	(fputc@fp+1)^0,w,c
  6919  002A54  22E2               	addwfc	fsr1h,f,c
  6920  002A56  50DE               	movf	postinc2,w,c
  6921  002A58  5CE6               	subwf	postinc1,w,c
  6922  002A5A  50E6               	movf	postinc1,w,c
  6923  002A5C  0A80               	xorlw	128
  6924  002A5E  6E0C               	movwf	(??_fputc+4)^0,c
  6925  002A60  50DE               	movf	postinc2,w,c
  6926  002A62  0A80               	xorlw	128
  6927  002A64  580C               	subwfb	(??_fputc+4)^0,w,c
  6928  002A66  B0D8               	btfsc	status,0,c
  6929  002A68  EF38  F015         	goto	u3881
  6930  002A6C  EF3A  F015         	goto	u3880
  6931  002A70                     u3881:
  6932  002A70  EF5D  F015         	goto	l1214
  6933  002A74                     u3880:
  6934  002A74                     l4179:
  6935  002A74  EE20 F002          	lfsr	2,2
  6936  002A78  5006               	movf	fputc@fp^0,w,c
  6937  002A7A  26D9               	addwf	fsr2l,f,c
  6938  002A7C  5007               	movf	(fputc@fp+1)^0,w,c
  6939  002A7E  22DA               	addwfc	fsr2h,f,c
  6940  002A80  CFDE F008          	movff	postinc2,??_fputc
  6941  002A84  CFDD F009          	movff	postdec2,??_fputc+1
  6942  002A88  C006  FFD9         	movff	fputc@fp,fsr2l
  6943  002A8C  C007  FFDA         	movff	fputc@fp+1,fsr2h
  6944  002A90  CFDE F00A          	movff	postinc2,??_fputc+2
  6945  002A94  CFDD F00B          	movff	postdec2,??_fputc+3
  6946  002A98  5008               	movf	??_fputc^0,w,c
  6947  002A9A  240A               	addwf	(??_fputc+2)^0,w,c
  6948  002A9C  6ED9               	movwf	fsr2l,c
  6949  002A9E  5009               	movf	(??_fputc+1)^0,w,c
  6950  002AA0  200B               	addwfc	(??_fputc+3)^0,w,c
  6951  002AA2  6EDA               	movwf	fsr2h,c
  6952  002AA4  C004  FFDF         	movff	fputc@c,indf2
  6953  002AA8  EE20 F002          	lfsr	2,2
  6954  002AAC  5006               	movf	fputc@fp^0,w,c
  6955  002AAE  26D9               	addwf	fsr2l,f,c
  6956  002AB0  5007               	movf	(fputc@fp+1)^0,w,c
  6957  002AB2  22DA               	addwfc	fsr2h,f,c
  6958  002AB4  2ADE               	incf	postinc2,f,c
  6959  002AB6  0E00               	movlw	0
  6960  002AB8  22DD               	addwfc	postdec2,f,c
  6961  002ABA                     l1214:
  6962  002ABA  0012               	return		;funcret
  6963  002ABC                     __end_of_fputc:
  6964                           	callstack 0
  6965                           
  6966 ;; *************** function _putch *****************
  6967 ;; Defined at:
  6968 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  c               1    wreg     unsigned char 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  c               1    0[COMRAM] unsigned char 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6982 ;;      Params:         0       0       0       0       0       0       0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6985 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    2
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_fputc
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text39
  6997  0033C8                     __ptext39:
  6998                           	callstack 0
  6999  0033C8                     _putch:
  7000                           	callstack 22
  7001  0033C8  0012               	return		;funcret
  7002  0033CA                     __end_of_putch:
  7003                           	callstack 0
  7004                           
  7005 ;; *************** function _abs *****************
  7006 ;; Defined at:
  7007 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  a               2   21[COMRAM] int 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  2   21[COMRAM] int 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7021 ;;      Params:         2       0       0       0       0       0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7023 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7024 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7025 ;;Total ram usage:        4 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; Hardware stack levels required when called:    2
  7028 ;; This function calls:
  7029 ;;		Nothing
  7030 ;; This function is called by:
  7031 ;;		_dtoa
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text40
  7036  003194                     __ptext40:
  7037                           	callstack 0
  7038  003194                     _abs:
  7039                           	callstack 22
  7040  003194  BE17               	btfsc	(abs@a+1)^0,7,c
  7041  003196  EFD7  F018         	goto	u4080
  7042  00319A  5017               	movf	(abs@a+1)^0,w,c
  7043  00319C  E106               	bnz	u4081
  7044  00319E  0416               	decf	abs@a^0,w,c
  7045  0031A0  B0D8               	btfsc	status,0,c
  7046  0031A2  EFD5  F018         	goto	u4081
  7047  0031A6  EFD7  F018         	goto	u4080
  7048  0031AA                     u4081:
  7049  0031AA  EFE5  F018         	goto	l1154
  7050  0031AE                     u4080:
  7051  0031AE  C016  F018         	movff	abs@a,??_abs
  7052  0031B2  C017  F019         	movff	abs@a+1,??_abs+1
  7053  0031B6  1E18               	comf	??_abs^0,f,c
  7054  0031B8  1E19               	comf	(??_abs+1)^0,f,c
  7055  0031BA  4A18               	infsnz	??_abs^0,f,c
  7056  0031BC  2A19               	incf	(??_abs+1)^0,f,c
  7057  0031BE  C018  F016         	movff	??_abs,?_abs
  7058  0031C2  C019  F017         	movff	??_abs+1,?_abs+1
  7059  0031C6  EFE9  F018         	goto	l1157
  7060  0031CA                     l1154:
  7061  0031CA  C016  F016         	movff	abs@a,?_abs
  7062  0031CE  C017  F017         	movff	abs@a+1,?_abs+1
  7063  0031D2                     l1157:
  7064  0031D2  0012               	return		;funcret
  7065  0031D4                     __end_of_abs:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function ___aomod *****************
  7069 ;; Defined at:
  7070 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  dividend        8    3[COMRAM] long long 
  7073 ;;  divisor         8   11[COMRAM] long long 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;  sign            1   20[COMRAM] unsigned char 
  7076 ;;  counter         1   19[COMRAM] unsigned char 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  8    3[COMRAM] long long 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7086 ;;      Params:        16       0       0       0       0       0       0       0       0
  7087 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7089 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7090 ;;Total ram usage:       18 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    2
  7093 ;; This function calls:
  7094 ;;		Nothing
  7095 ;; This function is called by:
  7096 ;;		_dtoa
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text41
  7101  00222A                     __ptext41:
  7102                           	callstack 0
  7103  00222A                     ___aomod:
  7104                           	callstack 22
  7105  00222A  0E00               	movlw	0
  7106  00222C  6E15               	movwf	___aomod@sign^0,c
  7107  00222E  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  7108  002230  EF1E  F011         	goto	u3980
  7109  002234  EF1C  F011         	goto	u3981
  7110  002238                     u3981:
  7111  002238  EF30  F011         	goto	l4259
  7112  00223C                     u3980:
  7113  00223C  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  7114  00223E  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  7115  002240  1E09               	comf	(___aomod@dividend+5)^0,f,c
  7116  002242  1E08               	comf	(___aomod@dividend+4)^0,f,c
  7117  002244  1E07               	comf	(___aomod@dividend+3)^0,f,c
  7118  002246  1E06               	comf	(___aomod@dividend+2)^0,f,c
  7119  002248  1E05               	comf	(___aomod@dividend+1)^0,f,c
  7120  00224A  6C04               	negf	___aomod@dividend^0,c
  7121  00224C  0E00               	movlw	0
  7122  00224E  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  7123  002250  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  7124  002252  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  7125  002254  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  7126  002256  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  7127  002258  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  7128  00225A  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  7129  00225C  0E01               	movlw	1
  7130  00225E  6E15               	movwf	___aomod@sign^0,c
  7131  002260                     l4259:
  7132  002260  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  7133  002262  EF37  F011         	goto	u3990
  7134  002266  EF35  F011         	goto	u3991
  7135  00226A                     u3991:
  7136  00226A  EF47  F011         	goto	l4263
  7137  00226E                     u3990:
  7138  00226E  1E13               	comf	(___aomod@divisor+7)^0,f,c
  7139  002270  1E12               	comf	(___aomod@divisor+6)^0,f,c
  7140  002272  1E11               	comf	(___aomod@divisor+5)^0,f,c
  7141  002274  1E10               	comf	(___aomod@divisor+4)^0,f,c
  7142  002276  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  7143  002278  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  7144  00227A  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  7145  00227C  6C0C               	negf	___aomod@divisor^0,c
  7146  00227E  0E00               	movlw	0
  7147  002280  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  7148  002282  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  7149  002284  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  7150  002286  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  7151  002288  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  7152  00228A  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  7153  00228C  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  7154  00228E                     l4263:
  7155  00228E  500C               	movf	___aomod@divisor^0,w,c
  7156  002290  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  7157  002292  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  7158  002294  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  7159  002296  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  7160  002298  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  7161  00229A  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  7162  00229C  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  7163  00229E  B4D8               	btfsc	status,2,c
  7164  0022A0  EF54  F011         	goto	u4001
  7165  0022A4  EF56  F011         	goto	u4000
  7166  0022A8                     u4001:
  7167  0022A8  EF9E  F011         	goto	l4279
  7168  0022AC                     u4000:
  7169  0022AC  0E01               	movlw	1
  7170  0022AE  6E14               	movwf	___aomod@counter^0,c
  7171  0022B0  EF64  F011         	goto	l4269
  7172  0022B4                     l4267:
  7173  0022B4  90D8               	bcf	status,0,c
  7174  0022B6  360C               	rlcf	___aomod@divisor^0,f,c
  7175  0022B8  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  7176  0022BA  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  7177  0022BC  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  7178  0022BE  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  7179  0022C0  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  7180  0022C2  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  7181  0022C4  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  7182  0022C6  2A14               	incf	___aomod@counter^0,f,c
  7183  0022C8                     l4269:
  7184  0022C8  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  7185  0022CA  EF69  F011         	goto	u4011
  7186  0022CE  EF6B  F011         	goto	u4010
  7187  0022D2                     u4011:
  7188  0022D2  EF5A  F011         	goto	l4267
  7189  0022D6                     u4010:
  7190  0022D6                     l4271:
  7191  0022D6  500C               	movf	___aomod@divisor^0,w,c
  7192  0022D8  5C04               	subwf	___aomod@dividend^0,w,c
  7193  0022DA  500D               	movf	(___aomod@divisor+1)^0,w,c
  7194  0022DC  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  7195  0022DE  500E               	movf	(___aomod@divisor+2)^0,w,c
  7196  0022E0  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  7197  0022E2  500F               	movf	(___aomod@divisor+3)^0,w,c
  7198  0022E4  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  7199  0022E6  5010               	movf	(___aomod@divisor+4)^0,w,c
  7200  0022E8  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  7201  0022EA  5011               	movf	(___aomod@divisor+5)^0,w,c
  7202  0022EC  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  7203  0022EE  5012               	movf	(___aomod@divisor+6)^0,w,c
  7204  0022F0  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  7205  0022F2  5013               	movf	(___aomod@divisor+7)^0,w,c
  7206  0022F4  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  7207  0022F6  A0D8               	btfss	status,0,c
  7208  0022F8  EF80  F011         	goto	u4021
  7209  0022FC  EF82  F011         	goto	u4020
  7210  002300                     u4021:
  7211  002300  EF92  F011         	goto	l4275
  7212  002304                     u4020:
  7213  002304  500C               	movf	___aomod@divisor^0,w,c
  7214  002306  5E04               	subwf	___aomod@dividend^0,f,c
  7215  002308  500D               	movf	(___aomod@divisor+1)^0,w,c
  7216  00230A  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  7217  00230C  500E               	movf	(___aomod@divisor+2)^0,w,c
  7218  00230E  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  7219  002310  500F               	movf	(___aomod@divisor+3)^0,w,c
  7220  002312  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  7221  002314  5010               	movf	(___aomod@divisor+4)^0,w,c
  7222  002316  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  7223  002318  5011               	movf	(___aomod@divisor+5)^0,w,c
  7224  00231A  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  7225  00231C  5012               	movf	(___aomod@divisor+6)^0,w,c
  7226  00231E  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  7227  002320  5013               	movf	(___aomod@divisor+7)^0,w,c
  7228  002322  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  7229  002324                     l4275:
  7230  002324  90D8               	bcf	status,0,c
  7231  002326  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  7232  002328  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  7233  00232A  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  7234  00232C  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  7235  00232E  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  7236  002330  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  7237  002332  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  7238  002334  320C               	rrcf	___aomod@divisor^0,f,c
  7239  002336  2E14               	decfsz	___aomod@counter^0,f,c
  7240  002338  EF6B  F011         	goto	l4271
  7241  00233C                     l4279:
  7242  00233C  5015               	movf	___aomod@sign^0,w,c
  7243  00233E  B4D8               	btfsc	status,2,c
  7244  002340  EFA4  F011         	goto	u4031
  7245  002344  EFA6  F011         	goto	u4030
  7246  002348                     u4031:
  7247  002348  EFB6  F011         	goto	l4283
  7248  00234C                     u4030:
  7249  00234C  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  7250  00234E  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  7251  002350  1E09               	comf	(___aomod@dividend+5)^0,f,c
  7252  002352  1E08               	comf	(___aomod@dividend+4)^0,f,c
  7253  002354  1E07               	comf	(___aomod@dividend+3)^0,f,c
  7254  002356  1E06               	comf	(___aomod@dividend+2)^0,f,c
  7255  002358  1E05               	comf	(___aomod@dividend+1)^0,f,c
  7256  00235A  6C04               	negf	___aomod@dividend^0,c
  7257  00235C  0E00               	movlw	0
  7258  00235E  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  7259  002360  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  7260  002362  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  7261  002364  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  7262  002366  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  7263  002368  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  7264  00236A  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  7265  00236C                     l4283:
  7266  00236C  C004  F004         	movff	___aomod@dividend,?___aomod
  7267  002370  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  7268  002374  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  7269  002378  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  7270  00237C  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  7271  002380  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  7272  002384  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  7273  002388  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  7274  00238C  0012               	return		;funcret
  7275  00238E                     __end_of___aomod:
  7276                           	callstack 0
  7277                           
  7278 ;; *************** function ___aodiv *****************
  7279 ;; Defined at:
  7280 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  dividend        8    3[COMRAM] long long 
  7283 ;;  divisor         8   11[COMRAM] long long 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  quotient        8   21[COMRAM] long long 
  7286 ;;  sign            1   20[COMRAM] unsigned char 
  7287 ;;  counter         1   19[COMRAM] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  8    3[COMRAM] long long 
  7290 ;; Registers used:
  7291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7297 ;;      Params:        16       0       0       0       0       0       0       0       0
  7298 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7300 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7301 ;;Total ram usage:       26 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    2
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_dtoa
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text42
  7312  001F2C                     __ptext42:
  7313                           	callstack 0
  7314  001F2C                     ___aodiv:
  7315                           	callstack 22
  7316  001F2C  0E00               	movlw	0
  7317  001F2E  6E15               	movwf	___aodiv@sign^0,c
  7318  001F30  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  7319  001F32  EF9F  F00F         	goto	u3910
  7320  001F36  EF9D  F00F         	goto	u3911
  7321  001F3A                     u3911:
  7322  001F3A  EFB1  F00F         	goto	l4215
  7323  001F3E                     u3910:
  7324  001F3E  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  7325  001F40  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  7326  001F42  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  7327  001F44  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  7328  001F46  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  7329  001F48  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  7330  001F4A  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  7331  001F4C  6C0C               	negf	___aodiv@divisor^0,c
  7332  001F4E  0E00               	movlw	0
  7333  001F50  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  7334  001F52  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  7335  001F54  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  7336  001F56  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  7337  001F58  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  7338  001F5A  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  7339  001F5C  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  7340  001F5E  0E01               	movlw	1
  7341  001F60  6E15               	movwf	___aodiv@sign^0,c
  7342  001F62                     l4215:
  7343  001F62  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  7344  001F64  EFB8  F00F         	goto	u3920
  7345  001F68  EFB6  F00F         	goto	u3921
  7346  001F6C                     u3921:
  7347  001F6C  EFCA  F00F         	goto	l4221
  7348  001F70                     u3920:
  7349  001F70  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  7350  001F72  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  7351  001F74  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  7352  001F76  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  7353  001F78  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  7354  001F7A  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  7355  001F7C  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  7356  001F7E  6C04               	negf	___aodiv@dividend^0,c
  7357  001F80  0E00               	movlw	0
  7358  001F82  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  7359  001F84  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  7360  001F86  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  7361  001F88  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  7362  001F8A  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  7363  001F8C  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  7364  001F8E  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  7365  001F90  0E01               	movlw	1
  7366  001F92  1A15               	xorwf	___aodiv@sign^0,f,c
  7367  001F94                     l4221:
  7368  001F94  EE20  F016         	lfsr	2,___aodiv@quotient
  7369  001F98  0E07               	movlw	7
  7370  001F9A                     u3931:
  7371  001F9A  6ADE               	clrf	postinc2,c
  7372  001F9C  06E8               	decf	wreg,f,c
  7373  001F9E  E2FD               	bc	u3931
  7374  001FA0  500C               	movf	___aodiv@divisor^0,w,c
  7375  001FA2  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  7376  001FA4  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  7377  001FA6  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  7378  001FA8  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  7379  001FAA  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  7380  001FAC  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  7381  001FAE  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  7382  001FB0  B4D8               	btfsc	status,2,c
  7383  001FB2  EFDD  F00F         	goto	u3941
  7384  001FB6  EFDF  F00F         	goto	u3940
  7385  001FBA                     u3941:
  7386  001FBA  EF31  F010         	goto	l4243
  7387  001FBE                     u3940:
  7388  001FBE  0E01               	movlw	1
  7389  001FC0  6E14               	movwf	___aodiv@counter^0,c
  7390  001FC2  EFED  F00F         	goto	l4229
  7391  001FC6                     l4227:
  7392  001FC6  90D8               	bcf	status,0,c
  7393  001FC8  360C               	rlcf	___aodiv@divisor^0,f,c
  7394  001FCA  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  7395  001FCC  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  7396  001FCE  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  7397  001FD0  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  7398  001FD2  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  7399  001FD4  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  7400  001FD6  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  7401  001FD8  2A14               	incf	___aodiv@counter^0,f,c
  7402  001FDA                     l4229:
  7403  001FDA  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  7404  001FDC  EFF2  F00F         	goto	u3951
  7405  001FE0  EFF4  F00F         	goto	u3950
  7406  001FE4                     u3951:
  7407  001FE4  EFE3  F00F         	goto	l4227
  7408  001FE8                     u3950:
  7409  001FE8                     l4231:
  7410  001FE8  90D8               	bcf	status,0,c
  7411  001FEA  3616               	rlcf	___aodiv@quotient^0,f,c
  7412  001FEC  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  7413  001FEE  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  7414  001FF0  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  7415  001FF2  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  7416  001FF4  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  7417  001FF6  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  7418  001FF8  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  7419  001FFA  500C               	movf	___aodiv@divisor^0,w,c
  7420  001FFC  5C04               	subwf	___aodiv@dividend^0,w,c
  7421  001FFE  500D               	movf	(___aodiv@divisor+1)^0,w,c
  7422  002000  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  7423  002002  500E               	movf	(___aodiv@divisor+2)^0,w,c
  7424  002004  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  7425  002006  500F               	movf	(___aodiv@divisor+3)^0,w,c
  7426  002008  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  7427  00200A  5010               	movf	(___aodiv@divisor+4)^0,w,c
  7428  00200C  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  7429  00200E  5011               	movf	(___aodiv@divisor+5)^0,w,c
  7430  002010  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  7431  002012  5012               	movf	(___aodiv@divisor+6)^0,w,c
  7432  002014  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  7433  002016  5013               	movf	(___aodiv@divisor+7)^0,w,c
  7434  002018  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  7435  00201A  A0D8               	btfss	status,0,c
  7436  00201C  EF12  F010         	goto	u3961
  7437  002020  EF14  F010         	goto	u3960
  7438  002024                     u3961:
  7439  002024  EF25  F010         	goto	l4239
  7440  002028                     u3960:
  7441  002028  500C               	movf	___aodiv@divisor^0,w,c
  7442  00202A  5E04               	subwf	___aodiv@dividend^0,f,c
  7443  00202C  500D               	movf	(___aodiv@divisor+1)^0,w,c
  7444  00202E  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  7445  002030  500E               	movf	(___aodiv@divisor+2)^0,w,c
  7446  002032  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  7447  002034  500F               	movf	(___aodiv@divisor+3)^0,w,c
  7448  002036  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  7449  002038  5010               	movf	(___aodiv@divisor+4)^0,w,c
  7450  00203A  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  7451  00203C  5011               	movf	(___aodiv@divisor+5)^0,w,c
  7452  00203E  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  7453  002040  5012               	movf	(___aodiv@divisor+6)^0,w,c
  7454  002042  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  7455  002044  5013               	movf	(___aodiv@divisor+7)^0,w,c
  7456  002046  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  7457  002048  8016               	bsf	___aodiv@quotient^0,0,c
  7458  00204A                     l4239:
  7459  00204A  90D8               	bcf	status,0,c
  7460  00204C  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  7461  00204E  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  7462  002050  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  7463  002052  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  7464  002054  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  7465  002056  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  7466  002058  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  7467  00205A  320C               	rrcf	___aodiv@divisor^0,f,c
  7468  00205C  2E14               	decfsz	___aodiv@counter^0,f,c
  7469  00205E  EFF4  F00F         	goto	l4231
  7470  002062                     l4243:
  7471  002062  5015               	movf	___aodiv@sign^0,w,c
  7472  002064  B4D8               	btfsc	status,2,c
  7473  002066  EF37  F010         	goto	u3971
  7474  00206A  EF39  F010         	goto	u3970
  7475  00206E                     u3971:
  7476  00206E  EF49  F010         	goto	l4247
  7477  002072                     u3970:
  7478  002072  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  7479  002074  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  7480  002076  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  7481  002078  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  7482  00207A  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  7483  00207C  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  7484  00207E  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  7485  002080  6C16               	negf	___aodiv@quotient^0,c
  7486  002082  0E00               	movlw	0
  7487  002084  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  7488  002086  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  7489  002088  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  7490  00208A  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  7491  00208C  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  7492  00208E  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  7493  002090  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  7494  002092                     l4247:
  7495  002092  C016  F004         	movff	___aodiv@quotient,?___aodiv
  7496  002096  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  7497  00209A  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  7498  00209E  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  7499  0020A2  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  7500  0020A6  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  7501  0020AA  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  7502  0020AE  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  7503  0020B2  0012               	return		;funcret
  7504  0020B4                     __end_of___aodiv:
  7505                           	callstack 0
  7506                           
  7507 ;; *************** function _atoi *****************
  7508 ;; Defined at:
  7509 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7512 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  n               2   23[COMRAM] int 
  7515 ;;  neg             2   16[COMRAM] int 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  2   10[COMRAM] int 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7525 ;;      Params:         2       0       0       0       0       0       0       0       0
  7526 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7527 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7528 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7529 ;;Total ram usage:       15 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:    3
  7532 ;; This function calls:
  7533 ;;		___wmul
  7534 ;;		_isdigit
  7535 ;;		_isspace
  7536 ;; This function is called by:
  7537 ;;		_vfpfcnvrt
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text43
  7542  001D9C                     __ptext43:
  7543                           	callstack 0
  7544  001D9C                     _atoi:
  7545                           	callstack 22
  7546  001D9C  0E00               	movlw	0
  7547  001D9E  6E19               	movwf	(atoi@n+1)^0,c
  7548  001DA0  0E00               	movlw	0
  7549  001DA2  6E18               	movwf	atoi@n^0,c
  7550  001DA4  0E00               	movlw	0
  7551  001DA6  6E12               	movwf	(atoi@neg+1)^0,c
  7552  001DA8  0E00               	movlw	0
  7553  001DAA  6E11               	movwf	atoi@neg^0,c
  7554  001DAC  EFDA  F00E         	goto	l4395
  7555  001DB0                     l4393:
  7556  001DB0  4A0B               	infsnz	atoi@s^0,f,c
  7557  001DB2  2A0C               	incf	(atoi@s+1)^0,f,c
  7558  001DB4                     l4395:
  7559  001DB4  0E01               	movlw	1
  7560  001DB6  6E17               	movwf	_atoi$2020^0,c
  7561  001DB8  C00B  FFF6         	movff	atoi@s,tblptrl
  7562  001DBC  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7563  001DC0                     	if	0	;tblptru may be non-zero
  7564  001DC0                     	endif
  7565  001DC0                     	if	0	;tblptru may be non-zero
  7566  001DC0                     	endif
  7567  001DC0  0008               	tblrd		*
  7568  001DC2  50F5               	movf	tablat,w,c
  7569  001DC4  0A20               	xorlw	32
  7570  001DC6  B4D8               	btfsc	status,2,c
  7571  001DC8  EFE8  F00E         	goto	u4281
  7572  001DCC  EFEA  F00E         	goto	u4280
  7573  001DD0                     u4281:
  7574  001DD0  EF07  F00F         	goto	l4403
  7575  001DD4                     u4280:
  7576  001DD4  0EF7               	movlw	247
  7577  001DD6  6E0D               	movwf	??_atoi^0,c
  7578  001DD8  0EFF               	movlw	255
  7579  001DDA  6E0E               	movwf	(??_atoi+1)^0,c
  7580  001DDC  C00B  FFF6         	movff	atoi@s,tblptrl
  7581  001DE0  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7582  001DE4                     	if	0	;tblptru may be non-zero
  7583  001DE4                     	endif
  7584  001DE4                     	if	0	;tblptru may be non-zero
  7585  001DE4                     	endif
  7586  001DE4  0008               	tblrd		*
  7587  001DE6  50F5               	movf	tablat,w,c
  7588  001DE8  6E0F               	movwf	(??_atoi+2)^0,c
  7589  001DEA  6A10               	clrf	(??_atoi+3)^0,c
  7590  001DEC  500D               	movf	??_atoi^0,w,c
  7591  001DEE  260F               	addwf	(??_atoi+2)^0,f,c
  7592  001DF0  500E               	movf	(??_atoi+1)^0,w,c
  7593  001DF2  2210               	addwfc	(??_atoi+3)^0,f,c
  7594  001DF4  5010               	movf	(??_atoi+3)^0,w,c
  7595  001DF6  E109               	bnz	u4290
  7596  001DF8  0E05               	movlw	5
  7597  001DFA  5C0F               	subwf	(??_atoi+2)^0,w,c
  7598  001DFC  A0D8               	btfss	status,0,c
  7599  001DFE  EF03  F00F         	goto	u4291
  7600  001E02  EF05  F00F         	goto	u4290
  7601  001E06                     u4291:
  7602  001E06  EF07  F00F         	goto	l4403
  7603  001E0A                     u4290:
  7604  001E0A  0E00               	movlw	0
  7605  001E0C  6E17               	movwf	_atoi$2020^0,c
  7606  001E0E                     l4403:
  7607  001E0E  C017  F013         	movff	_atoi$2020,_atoi$2019
  7608  001E12  6A14               	clrf	(_atoi$2019+1)^0,c
  7609  001E14  5013               	movf	_atoi$2019^0,w,c
  7610  001E16  1014               	iorwf	(_atoi$2019+1)^0,w,c
  7611  001E18  A4D8               	btfss	status,2,c
  7612  001E1A  EF11  F00F         	goto	u4301
  7613  001E1E  EF13  F00F         	goto	u4300
  7614  001E22                     u4301:
  7615  001E22  EFD8  F00E         	goto	l4393
  7616  001E26                     u4300:
  7617  001E26  EF1D  F00F         	goto	l4413
  7618  001E2A                     l4409:
  7619  001E2A  0E00               	movlw	0
  7620  001E2C  6E12               	movwf	(atoi@neg+1)^0,c
  7621  001E2E  0E01               	movlw	1
  7622  001E30  6E11               	movwf	atoi@neg^0,c
  7623  001E32                     l4411:
  7624  001E32  4A0B               	infsnz	atoi@s^0,f,c
  7625  001E34  2A0C               	incf	(atoi@s+1)^0,f,c
  7626  001E36  EF52  F00F         	goto	l4419
  7627  001E3A                     l4413:
  7628  001E3A  C00B  FFF6         	movff	atoi@s,tblptrl
  7629  001E3E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7630  001E42                     	if	0	;tblptru may be non-zero
  7631  001E42                     	endif
  7632  001E42                     	if	0	;tblptru may be non-zero
  7633  001E42                     	endif
  7634  001E42  0008               	tblrd		*
  7635  001E44  50F5               	movf	tablat,w,c
  7636  001E46  6E0D               	movwf	??_atoi^0,c
  7637  001E48  6A0E               	clrf	(??_atoi+1)^0,c
  7638                           
  7639                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7640                           ; Switch size 1, requested type "simple"
  7641                           ; Number of cases is 1, Range of values is 0 to 0
  7642                           ; switch strategies available:
  7643                           ; Name         Instructions Cycles
  7644                           ; simple_byte            4     3 (average)
  7645                           ;	Chosen strategy is simple_byte
  7646  001E4A  500E               	movf	(??_atoi+1)^0,w,c
  7647  001E4C  0A00               	xorlw	0	; case 0
  7648  001E4E  B4D8               	btfsc	status,2,c
  7649  001E50  EF2C  F00F         	goto	l4827
  7650  001E54  EF52  F00F         	goto	l4419
  7651  001E58                     l4827:
  7652                           
  7653                           ; Switch size 1, requested type "simple"
  7654                           ; Number of cases is 2, Range of values is 43 to 45
  7655                           ; switch strategies available:
  7656                           ; Name         Instructions Cycles
  7657                           ; simple_byte            7     4 (average)
  7658                           ;	Chosen strategy is simple_byte
  7659  001E58  500D               	movf	??_atoi^0,w,c
  7660  001E5A  0A2B               	xorlw	43	; case 43
  7661  001E5C  B4D8               	btfsc	status,2,c
  7662  001E5E  EF19  F00F         	goto	l4411
  7663  001E62  0A06               	xorlw	6	; case 45
  7664  001E64  B4D8               	btfsc	status,2,c
  7665  001E66  EF15  F00F         	goto	l4409
  7666  001E6A  EF52  F00F         	goto	l4419
  7667  001E6E                     l4415:
  7668  001E6E  C018  F004         	movff	atoi@n,___wmul@multiplier
  7669  001E72  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  7670  001E76  0E00               	movlw	0
  7671  001E78  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  7672  001E7A  0E0A               	movlw	10
  7673  001E7C  6E06               	movwf	___wmul@multiplicand^0,c
  7674  001E7E  EC98  F019         	call	___wmul	;wreg free
  7675  001E82  C00B  FFF6         	movff	atoi@s,tblptrl
  7676  001E86  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7677  001E8A                     	if	0	;tblptru may be non-zero
  7678  001E8A                     	endif
  7679  001E8A                     	if	0	;tblptru may be non-zero
  7680  001E8A                     	endif
  7681  001E8A  0008               	tblrd		*
  7682  001E8C  50F5               	movf	tablat,w,c
  7683  001E8E  5E04               	subwf	?___wmul^0,f,c
  7684  001E90  0E00               	movlw	0
  7685  001E92  5A05               	subwfb	(?___wmul+1)^0,f,c
  7686  001E94  0E30               	movlw	48
  7687  001E96  2404               	addwf	?___wmul^0,w,c
  7688  001E98  6E18               	movwf	atoi@n^0,c
  7689  001E9A  0E00               	movlw	0
  7690  001E9C  2005               	addwfc	(?___wmul+1)^0,w,c
  7691  001E9E  6E19               	movwf	(atoi@n+1)^0,c
  7692  001EA0  EF19  F00F         	goto	l4411
  7693  001EA4                     l4419:
  7694  001EA4  0ED0               	movlw	208
  7695  001EA6  6E0D               	movwf	??_atoi^0,c
  7696  001EA8  0EFF               	movlw	255
  7697  001EAA  6E0E               	movwf	(??_atoi+1)^0,c
  7698  001EAC  C00B  FFF6         	movff	atoi@s,tblptrl
  7699  001EB0  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7700  001EB4                     	if	0	;tblptru may be non-zero
  7701  001EB4                     	endif
  7702  001EB4                     	if	0	;tblptru may be non-zero
  7703  001EB4                     	endif
  7704  001EB4  0008               	tblrd		*
  7705  001EB6  50F5               	movf	tablat,w,c
  7706  001EB8  6E0F               	movwf	(??_atoi+2)^0,c
  7707  001EBA  6A10               	clrf	(??_atoi+3)^0,c
  7708  001EBC  500D               	movf	??_atoi^0,w,c
  7709  001EBE  260F               	addwf	(??_atoi+2)^0,f,c
  7710  001EC0  500E               	movf	(??_atoi+1)^0,w,c
  7711  001EC2  2210               	addwfc	(??_atoi+3)^0,f,c
  7712  001EC4  5010               	movf	(??_atoi+3)^0,w,c
  7713  001EC6  E10A               	bnz	u4310
  7714  001EC8  0E0A               	movlw	10
  7715  001ECA  5C0F               	subwf	(??_atoi+2)^0,w,c
  7716  001ECC  A0D8               	btfss	status,0,c
  7717  001ECE  EF6B  F00F         	goto	u4311
  7718  001ED2  EF6E  F00F         	goto	u4310
  7719  001ED6                     u4311:
  7720  001ED6  0E01               	movlw	1
  7721  001ED8  EF6F  F00F         	goto	u4320
  7722  001EDC                     u4310:
  7723  001EDC  0E00               	movlw	0
  7724  001EDE                     u4320:
  7725  001EDE  6E15               	movwf	_atoi$2021^0,c
  7726  001EE0  6A16               	clrf	(_atoi$2021+1)^0,c
  7727  001EE2  5015               	movf	_atoi$2021^0,w,c
  7728  001EE4  1016               	iorwf	(_atoi$2021+1)^0,w,c
  7729  001EE6  A4D8               	btfss	status,2,c
  7730  001EE8  EF78  F00F         	goto	u4331
  7731  001EEC  EF7A  F00F         	goto	u4330
  7732  001EF0                     u4331:
  7733  001EF0  EF37  F00F         	goto	l4415
  7734  001EF4                     u4330:
  7735  001EF4  5011               	movf	atoi@neg^0,w,c
  7736  001EF6  1012               	iorwf	(atoi@neg+1)^0,w,c
  7737  001EF8  A4D8               	btfss	status,2,c
  7738  001EFA  EF81  F00F         	goto	u4341
  7739  001EFE  EF83  F00F         	goto	u4340
  7740  001F02                     u4341:
  7741  001F02  EF91  F00F         	goto	l1185
  7742  001F06                     u4340:
  7743  001F06  C018  F00D         	movff	atoi@n,??_atoi
  7744  001F0A  C019  F00E         	movff	atoi@n+1,??_atoi+1
  7745  001F0E  1E0D               	comf	??_atoi^0,f,c
  7746  001F10  1E0E               	comf	(??_atoi+1)^0,f,c
  7747  001F12  4A0D               	infsnz	??_atoi^0,f,c
  7748  001F14  2A0E               	incf	(??_atoi+1)^0,f,c
  7749  001F16  C00D  F00B         	movff	??_atoi,?_atoi
  7750  001F1A  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  7751  001F1E  EF95  F00F         	goto	l1188
  7752  001F22                     l1185:
  7753  001F22  C018  F00B         	movff	atoi@n,?_atoi
  7754  001F26  C019  F00C         	movff	atoi@n+1,?_atoi+1
  7755  001F2A                     l1188:
  7756  001F2A  0012               	return		;funcret
  7757  001F2C                     __end_of_atoi:
  7758                           	callstack 0
  7759                           
  7760 ;; *************** function _isspace *****************
  7761 ;; Defined at:
  7762 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  c               2    3[COMRAM] int 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  2    3[COMRAM] int 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7776 ;;      Params:         2       0       0       0       0       0       0       0       0
  7777 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7778 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7779 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7780 ;;Total ram usage:        7 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:    2
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		_atoi
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text44
  7791  002F9A                     __ptext44:
  7792                           	callstack 0
  7793  002F9A                     _isspace:
  7794                           	callstack 22
  7795  002F9A  0E01               	movlw	1
  7796  002F9C  6E0A               	movwf	_isspace$2037^0,c
  7797  002F9E  0E20               	movlw	32
  7798  002FA0  1804               	xorwf	isspace@c^0,w,c
  7799  002FA2  1005               	iorwf	(isspace@c+1)^0,w,c
  7800  002FA4  B4D8               	btfsc	status,2,c
  7801  002FA6  EFD7  F017         	goto	u4111
  7802  002FAA  EFD9  F017         	goto	u4110
  7803  002FAE                     u4111:
  7804  002FAE  EFF2  F017         	goto	l4325
  7805  002FB2                     u4110:
  7806  002FB2  0EF7               	movlw	247
  7807  002FB4  6E06               	movwf	??_isspace^0,c
  7808  002FB6  0EFF               	movlw	255
  7809  002FB8  6E07               	movwf	(??_isspace+1)^0,c
  7810  002FBA  C004  F008         	movff	isspace@c,??_isspace+2
  7811  002FBE  C005  F009         	movff	isspace@c+1,??_isspace+3
  7812  002FC2  5006               	movf	??_isspace^0,w,c
  7813  002FC4  2608               	addwf	(??_isspace+2)^0,f,c
  7814  002FC6  5007               	movf	(??_isspace+1)^0,w,c
  7815  002FC8  2209               	addwfc	(??_isspace+3)^0,f,c
  7816  002FCA  5009               	movf	(??_isspace+3)^0,w,c
  7817  002FCC  E109               	bnz	u4120
  7818  002FCE  0E05               	movlw	5
  7819  002FD0  5C08               	subwf	(??_isspace+2)^0,w,c
  7820  002FD2  A0D8               	btfss	status,0,c
  7821  002FD4  EFEE  F017         	goto	u4121
  7822  002FD8  EFF0  F017         	goto	u4120
  7823  002FDC                     u4121:
  7824  002FDC  EFF2  F017         	goto	l4325
  7825  002FE0                     u4120:
  7826  002FE0  0E00               	movlw	0
  7827  002FE2  6E0A               	movwf	_isspace$2037^0,c
  7828  002FE4                     l4325:
  7829  002FE4  C00A  F004         	movff	_isspace$2037,?_isspace
  7830  002FE8  6A05               	clrf	(?_isspace+1)^0,c
  7831  002FEA  0012               	return		;funcret
  7832  002FEC                     __end_of_isspace:
  7833                           	callstack 0
  7834                           
  7835 ;; *************** function _isdigit *****************
  7836 ;; Defined at:
  7837 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  c               2    3[COMRAM] int 
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;		None
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  2    3[COMRAM] int 
  7844 ;; Registers used:
  7845 ;;		wreg, status,2, status,0
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7851 ;;      Params:         2       0       0       0       0       0       0       0       0
  7852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7853 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7854 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7855 ;;Total ram usage:        6 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; Hardware stack levels required when called:    2
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_vfpfcnvrt
  7862 ;;		_atoi
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text45
  7867  003210                     __ptext45:
  7868                           	callstack 0
  7869  003210                     _isdigit:
  7870                           	callstack 23
  7871  003210  0ED0               	movlw	208
  7872  003212  6E06               	movwf	??_isdigit^0,c
  7873  003214  0EFF               	movlw	255
  7874  003216  6E07               	movwf	(??_isdigit+1)^0,c
  7875  003218  C004  F008         	movff	isdigit@c,??_isdigit+2
  7876  00321C  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  7877  003220  5006               	movf	??_isdigit^0,w,c
  7878  003222  2608               	addwf	(??_isdigit+2)^0,f,c
  7879  003224  5007               	movf	(??_isdigit+1)^0,w,c
  7880  003226  2209               	addwfc	(??_isdigit+3)^0,f,c
  7881  003228  5009               	movf	(??_isdigit+3)^0,w,c
  7882  00322A  E10A               	bnz	u4090
  7883  00322C  0E0A               	movlw	10
  7884  00322E  5C08               	subwf	(??_isdigit+2)^0,w,c
  7885  003230  A0D8               	btfss	status,0,c
  7886  003232  EF1D  F019         	goto	u4091
  7887  003236  EF20  F019         	goto	u4090
  7888  00323A                     u4091:
  7889  00323A  0E01               	movlw	1
  7890  00323C  EF21  F019         	goto	u4100
  7891  003240                     u4090:
  7892  003240  0E00               	movlw	0
  7893  003242                     u4100:
  7894  003242  6E04               	movwf	?_isdigit^0,c
  7895  003244  6A05               	clrf	(?_isdigit+1)^0,c
  7896  003246  0012               	return		;funcret
  7897  003248                     __end_of_isdigit:
  7898                           	callstack 0
  7899                           
  7900 ;; *************** function ___wmul *****************
  7901 ;; Defined at:
  7902 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;  multiplier      2    3[COMRAM] unsigned int 
  7905 ;;  multiplicand    2    5[COMRAM] unsigned int 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  product         2    7[COMRAM] unsigned int 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2    3[COMRAM] unsigned int 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0, prodl, prodh
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7917 ;;      Params:         4       0       0       0       0       0       0       0       0
  7918 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7920 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7921 ;;Total ram usage:        6 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:    2
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_appSubGetData
  7928 ;;		_atoi
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           	psect	text46
  7933  003330                     __ptext46:
  7934                           	callstack 0
  7935  003330                     ___wmul:
  7936                           	callstack 22
  7937  003330  5004               	movf	___wmul@multiplier^0,w,c
  7938  003332  0206               	mulwf	___wmul@multiplicand^0,c
  7939  003334  CFF3 F008          	movff	prodl,___wmul@product
  7940  003338  CFF4 F009          	movff	prodh,___wmul@product+1
  7941  00333C  5004               	movf	___wmul@multiplier^0,w,c
  7942  00333E  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  7943  003340  50F3               	movf	243,w,c
  7944  003342  2609               	addwf	(___wmul@product+1)^0,f,c
  7945  003344  5005               	movf	(___wmul@multiplier+1)^0,w,c
  7946  003346  0206               	mulwf	___wmul@multiplicand^0,c
  7947  003348  50F3               	movf	243,w,c
  7948  00334A  2609               	addwf	(___wmul@product+1)^0,f,c
  7949  00334C  C008  F004         	movff	___wmul@product,?___wmul
  7950  003350  C009  F005         	movff	___wmul@product+1,?___wmul+1
  7951  003354  0012               	return		;funcret
  7952  003356                     __end_of___wmul:
  7953                           	callstack 0
  7954                           
  7955 ;; *************** function _memset *****************
  7956 ;; Defined at:
  7957 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;  dest            2    3[COMRAM] PTR void 
  7960 ;;		 -> datos(25), 
  7961 ;;  c               2    5[COMRAM] int 
  7962 ;;  n               2    7[COMRAM] unsigned int 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  s               2   13[COMRAM] PTR unsigned char 
  7965 ;;		 -> datos(25), 
  7966 ;;  k               2   11[COMRAM] unsigned int 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  2    3[COMRAM] PTR void 
  7969 ;; Registers used:
  7970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7976 ;;      Params:         6       0       0       0       0       0       0       0       0
  7977 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7978 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7979 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7980 ;;Total ram usage:       12 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    2
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_appADC
  7987 ;;		_appBat
  7988 ;;		_appSubGetData
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text47
  7993  0020B4                     __ptext47:
  7994                           	callstack 0
  7995  0020B4                     _memset:
  7996                           	callstack 26
  7997  0020B4  C004  F00E         	movff	memset@dest,memset@s
  7998  0020B8  C005  F00F         	movff	memset@dest+1,memset@s+1
  7999  0020BC  5008               	movf	memset@n^0,w,c
  8000  0020BE  1009               	iorwf	(memset@n+1)^0,w,c
  8001  0020C0  A4D8               	btfss	status,2,c
  8002  0020C2  EF65  F010         	goto	u2691
  8003  0020C6  EF67  F010         	goto	u2690
  8004  0020CA                     u2691:
  8005  0020CA  EF69  F010         	goto	l3161
  8006  0020CE                     u2690:
  8007  0020CE  EF14  F011         	goto	l1039
  8008  0020D2                     l3161:
  8009  0020D2  C00E  FFD9         	movff	memset@s,fsr2l
  8010  0020D6  C00F  FFDA         	movff	memset@s+1,fsr2h
  8011  0020DA  C006  FFDF         	movff	memset@c,indf2
  8012  0020DE  5008               	movf	memset@n^0,w,c
  8013  0020E0  240E               	addwf	memset@s^0,w,c
  8014  0020E2  6E0A               	movwf	??_memset^0,c
  8015  0020E4  5009               	movf	(memset@n+1)^0,w,c
  8016  0020E6  200F               	addwfc	(memset@s+1)^0,w,c
  8017  0020E8  6E0B               	movwf	(??_memset+1)^0,c
  8018  0020EA  0EFF               	movlw	255
  8019  0020EC  240A               	addwf	??_memset^0,w,c
  8020  0020EE  6ED9               	movwf	fsr2l,c
  8021  0020F0  0EFF               	movlw	255
  8022  0020F2  200B               	addwfc	(??_memset+1)^0,w,c
  8023  0020F4  6EDA               	movwf	fsr2h,c
  8024  0020F6  C006  FFDF         	movff	memset@c,indf2
  8025  0020FA  5009               	movf	(memset@n+1)^0,w,c
  8026  0020FC  E107               	bnz	u2701
  8027  0020FE  0E03               	movlw	3
  8028  002100  5C08               	subwf	memset@n^0,w,c
  8029  002102  B0D8               	btfsc	status,0,c
  8030  002104  EF86  F010         	goto	u2701
  8031  002108  EF88  F010         	goto	u2700
  8032  00210C                     u2701:
  8033  00210C  EF8A  F010         	goto	l3167
  8034  002110                     u2700:
  8035  002110  EF14  F011         	goto	l1039
  8036  002114                     l3167:
  8037  002114  EE20 F001          	lfsr	2,1
  8038  002118  500E               	movf	memset@s^0,w,c
  8039  00211A  26D9               	addwf	fsr2l,f,c
  8040  00211C  500F               	movf	(memset@s+1)^0,w,c
  8041  00211E  22DA               	addwfc	fsr2h,f,c
  8042  002120  C006  FFDF         	movff	memset@c,indf2
  8043  002124  EE20 F002          	lfsr	2,2
  8044  002128  500E               	movf	memset@s^0,w,c
  8045  00212A  26D9               	addwf	fsr2l,f,c
  8046  00212C  500F               	movf	(memset@s+1)^0,w,c
  8047  00212E  22DA               	addwfc	fsr2h,f,c
  8048  002130  C006  FFDF         	movff	memset@c,indf2
  8049  002134  5008               	movf	memset@n^0,w,c
  8050  002136  240E               	addwf	memset@s^0,w,c
  8051  002138  6E0A               	movwf	??_memset^0,c
  8052  00213A  5009               	movf	(memset@n+1)^0,w,c
  8053  00213C  200F               	addwfc	(memset@s+1)^0,w,c
  8054  00213E  6E0B               	movwf	(??_memset+1)^0,c
  8055  002140  0EFE               	movlw	254
  8056  002142  240A               	addwf	??_memset^0,w,c
  8057  002144  6ED9               	movwf	fsr2l,c
  8058  002146  0EFF               	movlw	255
  8059  002148  200B               	addwfc	(??_memset+1)^0,w,c
  8060  00214A  6EDA               	movwf	fsr2h,c
  8061  00214C  C006  FFDF         	movff	memset@c,indf2
  8062  002150  5008               	movf	memset@n^0,w,c
  8063  002152  240E               	addwf	memset@s^0,w,c
  8064  002154  6E0A               	movwf	??_memset^0,c
  8065  002156  5009               	movf	(memset@n+1)^0,w,c
  8066  002158  200F               	addwfc	(memset@s+1)^0,w,c
  8067  00215A  6E0B               	movwf	(??_memset+1)^0,c
  8068  00215C  0EFD               	movlw	253
  8069  00215E  240A               	addwf	??_memset^0,w,c
  8070  002160  6ED9               	movwf	fsr2l,c
  8071  002162  0EFF               	movlw	255
  8072  002164  200B               	addwfc	(??_memset+1)^0,w,c
  8073  002166  6EDA               	movwf	fsr2h,c
  8074  002168  C006  FFDF         	movff	memset@c,indf2
  8075  00216C  5009               	movf	(memset@n+1)^0,w,c
  8076  00216E  E107               	bnz	u2711
  8077  002170  0E07               	movlw	7
  8078  002172  5C08               	subwf	memset@n^0,w,c
  8079  002174  B0D8               	btfsc	status,0,c
  8080  002176  EFBF  F010         	goto	u2711
  8081  00217A  EFC1  F010         	goto	u2710
  8082  00217E                     u2711:
  8083  00217E  EFC3  F010         	goto	l3173
  8084  002182                     u2710:
  8085  002182  EF14  F011         	goto	l1039
  8086  002186                     l3173:
  8087  002186  EE20 F003          	lfsr	2,3
  8088  00218A  500E               	movf	memset@s^0,w,c
  8089  00218C  26D9               	addwf	fsr2l,f,c
  8090  00218E  500F               	movf	(memset@s+1)^0,w,c
  8091  002190  22DA               	addwfc	fsr2h,f,c
  8092  002192  C006  FFDF         	movff	memset@c,indf2
  8093  002196  5008               	movf	memset@n^0,w,c
  8094  002198  240E               	addwf	memset@s^0,w,c
  8095  00219A  6E0A               	movwf	??_memset^0,c
  8096  00219C  5009               	movf	(memset@n+1)^0,w,c
  8097  00219E  200F               	addwfc	(memset@s+1)^0,w,c
  8098  0021A0  6E0B               	movwf	(??_memset+1)^0,c
  8099  0021A2  0EFC               	movlw	252
  8100  0021A4  240A               	addwf	??_memset^0,w,c
  8101  0021A6  6ED9               	movwf	fsr2l,c
  8102  0021A8  0EFF               	movlw	255
  8103  0021AA  200B               	addwfc	(??_memset+1)^0,w,c
  8104  0021AC  6EDA               	movwf	fsr2h,c
  8105  0021AE  C006  FFDF         	movff	memset@c,indf2
  8106  0021B2  5009               	movf	(memset@n+1)^0,w,c
  8107  0021B4  E107               	bnz	u2721
  8108  0021B6  0E09               	movlw	9
  8109  0021B8  5C08               	subwf	memset@n^0,w,c
  8110  0021BA  B0D8               	btfsc	status,0,c
  8111  0021BC  EFE2  F010         	goto	u2721
  8112  0021C0  EFE4  F010         	goto	u2720
  8113  0021C4                     u2721:
  8114  0021C4  EFE6  F010         	goto	l3179
  8115  0021C8                     u2720:
  8116  0021C8  EF14  F011         	goto	l1039
  8117  0021CC                     l3179:
  8118  0021CC  C00E  F00A         	movff	memset@s,??_memset
  8119  0021D0  C00F  F00B         	movff	memset@s+1,??_memset+1
  8120  0021D4  1E0A               	comf	??_memset^0,f,c
  8121  0021D6  1E0B               	comf	(??_memset+1)^0,f,c
  8122  0021D8  4A0A               	infsnz	??_memset^0,f,c
  8123  0021DA  2A0B               	incf	(??_memset+1)^0,f,c
  8124  0021DC  0E03               	movlw	3
  8125  0021DE  140A               	andwf	??_memset^0,w,c
  8126  0021E0  6E0C               	movwf	memset@k^0,c
  8127  0021E2  6A0D               	clrf	(memset@k+1)^0,c
  8128  0021E4  500C               	movf	memset@k^0,w,c
  8129  0021E6  260E               	addwf	memset@s^0,f,c
  8130  0021E8  500D               	movf	(memset@k+1)^0,w,c
  8131  0021EA  220F               	addwfc	(memset@s+1)^0,f,c
  8132  0021EC  500C               	movf	memset@k^0,w,c
  8133  0021EE  5E08               	subwf	memset@n^0,f,c
  8134  0021F0  500D               	movf	(memset@k+1)^0,w,c
  8135  0021F2  5A09               	subwfb	(memset@n+1)^0,f,c
  8136  0021F4  0EFC               	movlw	252
  8137  0021F6  1608               	andwf	memset@n^0,f,c
  8138  0021F8  0EFF               	movlw	255
  8139  0021FA  1609               	andwf	(memset@n+1)^0,f,c
  8140  0021FC  EF0B  F011         	goto	l3187
  8141  002200                     l3181:
  8142  002200  C00E  FFD9         	movff	memset@s,fsr2l
  8143  002204  C00F  FFDA         	movff	memset@s+1,fsr2h
  8144  002208  C006  FFDF         	movff	memset@c,indf2
  8145  00220C  0608               	decf	memset@n^0,f,c
  8146  00220E  A0D8               	btfss	status,0,c
  8147  002210  0609               	decf	(memset@n+1)^0,f,c
  8148  002212  4A0E               	infsnz	memset@s^0,f,c
  8149  002214  2A0F               	incf	(memset@s+1)^0,f,c
  8150  002216                     l3187:
  8151  002216  5008               	movf	memset@n^0,w,c
  8152  002218  1009               	iorwf	(memset@n+1)^0,w,c
  8153  00221A  A4D8               	btfss	status,2,c
  8154  00221C  EF12  F011         	goto	u2731
  8155  002220  EF14  F011         	goto	u2730
  8156  002224                     u2731:
  8157  002224  EF00  F011         	goto	l3181
  8158  002228                     u2730:
  8159  002228                     l1039:
  8160  002228  0012               	return		;funcret
  8161  00222A                     __end_of_memset:
  8162                           	callstack 0
  8163                           
  8164 ;; *************** function _Lcd_Out *****************
  8165 ;; Defined at:
  8166 ;;		line 95 in file "flex_lcd.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  y               1    wreg     unsigned char 
  8169 ;;  x               1    6[COMRAM] unsigned char 
  8170 ;;  buffer          2    7[COMRAM] PTR const char 
  8171 ;;		 -> STR_9(17), STR_8(12), STR_6(14), appElemts@dataout(6), 
  8172 ;;		 -> STR_4(6), STR_3(12), datos.display(16), datos(25), 
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  y               1   11[COMRAM] unsigned char 
  8175 ;;  data            1   12[COMRAM] unsigned char 
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  1    wreg      void 
  8178 ;; Registers used:
  8179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8185 ;;      Params:         3       0       0       0       0       0       0       0       0
  8186 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8187 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8188 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8189 ;;Total ram usage:        7 bytes
  8190 ;; Hardware stack levels used:    1
  8191 ;; Hardware stack levels required when called:    3
  8192 ;; This function calls:
  8193 ;;		_Lcd_Chr_CP
  8194 ;;		_Lcd_Cmd
  8195 ;; This function is called by:
  8196 ;;		_appADC
  8197 ;;		_appBat
  8198 ;;		_appLCD_Init
  8199 ;;		_appElemts
  8200 ;;		_appSubGetData
  8201 ;;		_warning
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text48
  8206  002926                     __ptext48:
  8207                           	callstack 0
  8208  002926                     _Lcd_Out:
  8209                           	callstack 26
  8210                           
  8211                           ;incstack = 0
  8212                           ;Lcd_Out@y stored from wreg
  8213  002926  6E0C               	movwf	Lcd_Out@y^0,c
  8214  002928                     
  8215                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  8216  002928  EFAA  F014         	goto	l3213
  8217  00292C                     l3203:
  8218                           
  8219                           ;flex_lcd.c: 101:             data = 128 + x;
  8220  00292C  5007               	movf	Lcd_Out@x^0,w,c
  8221  00292E  0F80               	addlw	128
  8222  002930  6E0D               	movwf	Lcd_Out@data^0,c
  8223                           
  8224                           ;flex_lcd.c: 102:             break;
  8225  002932  EFC7  F014         	goto	l3215
  8226  002936                     l3205:
  8227                           
  8228                           ;flex_lcd.c: 104:             data = 192 + x;
  8229  002936  5007               	movf	Lcd_Out@x^0,w,c
  8230  002938  0FC0               	addlw	192
  8231  00293A  6E0D               	movwf	Lcd_Out@data^0,c
  8232                           
  8233                           ;flex_lcd.c: 105:             break;
  8234  00293C  EFC7  F014         	goto	l3215
  8235  002940                     l3207:
  8236                           
  8237                           ;flex_lcd.c: 107:             data = 148 + x;
  8238  002940  5007               	movf	Lcd_Out@x^0,w,c
  8239  002942  0F94               	addlw	148
  8240  002944  6E0D               	movwf	Lcd_Out@data^0,c
  8241                           
  8242                           ;flex_lcd.c: 108:             break;
  8243  002946  EFC7  F014         	goto	l3215
  8244  00294A                     l3209:
  8245                           
  8246                           ;flex_lcd.c: 110:             data = 212 + x;
  8247  00294A  5007               	movf	Lcd_Out@x^0,w,c
  8248  00294C  0FD4               	addlw	212
  8249  00294E  6E0D               	movwf	Lcd_Out@data^0,c
  8250                           
  8251                           ;flex_lcd.c: 111:             break;
  8252  002950  EFC7  F014         	goto	l3215
  8253  002954                     l3213:
  8254  002954  500C               	movf	Lcd_Out@y^0,w,c
  8255  002956  6E0A               	movwf	??_Lcd_Out^0,c
  8256  002958  6A0B               	clrf	(??_Lcd_Out+1)^0,c
  8257                           
  8258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8259                           ; Switch size 1, requested type "simple"
  8260                           ; Number of cases is 1, Range of values is 0 to 0
  8261                           ; switch strategies available:
  8262                           ; Name         Instructions Cycles
  8263                           ; simple_byte            4     3 (average)
  8264                           ;	Chosen strategy is simple_byte
  8265  00295A  500B               	movf	(??_Lcd_Out+1)^0,w,c
  8266  00295C  0A00               	xorlw	0	; case 0
  8267  00295E  B4D8               	btfsc	status,2,c
  8268  002960  EFB4  F014         	goto	l4829
  8269  002964  EFC7  F014         	goto	l3215
  8270  002968                     l4829:
  8271                           
  8272                           ; Switch size 1, requested type "simple"
  8273                           ; Number of cases is 4, Range of values is 1 to 4
  8274                           ; switch strategies available:
  8275                           ; Name         Instructions Cycles
  8276                           ; simple_byte           13     7 (average)
  8277                           ;	Chosen strategy is simple_byte
  8278  002968  500A               	movf	??_Lcd_Out^0,w,c
  8279  00296A  0A01               	xorlw	1	; case 1
  8280  00296C  B4D8               	btfsc	status,2,c
  8281  00296E  EF96  F014         	goto	l3203
  8282  002972  0A03               	xorlw	3	; case 2
  8283  002974  B4D8               	btfsc	status,2,c
  8284  002976  EF9B  F014         	goto	l3205
  8285  00297A  0A01               	xorlw	1	; case 3
  8286  00297C  B4D8               	btfsc	status,2,c
  8287  00297E  EFA0  F014         	goto	l3207
  8288  002982  0A07               	xorlw	7	; case 4
  8289  002984  B4D8               	btfsc	status,2,c
  8290  002986  EFA5  F014         	goto	l3209
  8291  00298A  EFC7  F014         	goto	l3215
  8292  00298E                     l3215:
  8293                           
  8294                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  8295  00298E  500D               	movf	Lcd_Out@data^0,w,c
  8296  002990  EC6E  F012         	call	_Lcd_Cmd
  8297                           
  8298                           ;flex_lcd.c: 116:     while(*buffer)
  8299  002994  EFE0  F014         	goto	l3221
  8300  002998                     l3217:
  8301                           
  8302                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  8303  002998  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  8304  00299C  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  8305  0029A0  6AF8               	clrf	tblptru,c
  8306  0029A2  0E07               	movlw	(high __ramtop+-1)
  8307  0029A4  64F7               	cpfsgt	tblptrh,c
  8308  0029A6  D003               	bra	u2747
  8309  0029A8  0008               	tblrd		*
  8310  0029AA  50F5               	movf	tablat,w,c
  8311  0029AC  D005               	bra	u2740
  8312  0029AE                     u2747:
  8313  0029AE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8314  0029B2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8315  0029B6  50E7               	movf	indf1,w,c
  8316  0029B8                     u2740:
  8317  0029B8  ECC7  F011         	call	_Lcd_Chr_CP
  8318  0029BC                     
  8319                           ;flex_lcd.c: 119:         buffer++;
  8320  0029BC  4A08               	infsnz	Lcd_Out@buffer^0,f,c
  8321  0029BE  2A09               	incf	(Lcd_Out@buffer+1)^0,f,c
  8322  0029C0                     l3221:
  8323                           
  8324                           ;flex_lcd.c: 116:     while(*buffer)
  8325  0029C0  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  8326  0029C4  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  8327  0029C8  6AF8               	clrf	tblptru,c
  8328  0029CA  0E07               	movlw	(high __ramtop+-1)
  8329  0029CC  64F7               	cpfsgt	tblptrh,c
  8330  0029CE  D003               	bra	u2757
  8331  0029D0  0008               	tblrd		*
  8332  0029D2  50F5               	movf	tablat,w,c
  8333  0029D4  D005               	bra	u2750
  8334  0029D6                     u2757:
  8335  0029D6  CFF6 FFE1          	movff	tblptrl,fsr1l
  8336  0029DA  CFF7 FFE2          	movff	tblptrh,fsr1h
  8337  0029DE  50E7               	movf	indf1,w,c
  8338  0029E0                     u2750:
  8339  0029E0  0900               	iorlw	0
  8340  0029E2  A4D8               	btfss	status,2,c
  8341  0029E4  EFF6  F014         	goto	u2761
  8342  0029E8  EFF8  F014         	goto	u2760
  8343  0029EC                     u2761:
  8344  0029EC  EFCC  F014         	goto	l3217
  8345  0029F0                     u2760:
  8346  0029F0  0012               	return		;funcret
  8347  0029F2                     __end_of_Lcd_Out:
  8348                           	callstack 0
  8349                           
  8350 ;; *************** function _Lcd_Cmd *****************
  8351 ;; Defined at:
  8352 ;;		line 175 in file "flex_lcd.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  data            1    wreg     unsigned char 
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;  data            1    5[COMRAM] unsigned char 
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  1    wreg      void 
  8359 ;; Registers used:
  8360 ;;		wreg, status,2, status,0
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8366 ;;      Params:         0       0       0       0       0       0       0       0       0
  8367 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8368 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8369 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8370 ;;Total ram usage:        3 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; Hardware stack levels required when called:    2
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_Lcd_Init
  8377 ;;		_Lcd_Out
  8378 ;;		_appLCD_Init
  8379 ;;		_appGetElements
  8380 ;;		_warning
  8381 ;;		_Lcd_Out2
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           	psect	text49
  8386  0024DC                     __ptext49:
  8387                           	callstack 0
  8388  0024DC                     _Lcd_Cmd:
  8389                           	callstack 26
  8390                           
  8391                           ;incstack = 0
  8392                           ;Lcd_Cmd@data stored from wreg
  8393  0024DC  6E06               	movwf	Lcd_Cmd@data^0,c
  8394  0024DE                     
  8395                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  8396  0024DE  968C               	bcf	140,3,c	;volatile
  8397  0024E0  948C               	bcf	140,2,c	;volatile
  8398  0024E2                     
  8399                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  8400  0024E2  6A04               	clrf	??_Lcd_Cmd^0,c
  8401  0024E4  AE06               	btfss	Lcd_Cmd@data^0,7,c
  8402  0024E6  D001               	bra	u2545
  8403  0024E8  2A04               	incf	??_Lcd_Cmd^0,f,c
  8404  0024EA                     u2545:
  8405  0024EA  0E01               	movlw	1
  8406  0024EC  1604               	andwf	??_Lcd_Cmd^0,f,c
  8407  0024EE  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8408  0024F0  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8409  0024F2  508C               	movf	140,w,c	;volatile
  8410  0024F4  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8411  0024F6  0B7F               	andlw	-129
  8412  0024F8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8413  0024FA  6E8C               	movwf	140,c	;volatile
  8414                           
  8415                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  8416  0024FC  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8417  002500  0E06               	movlw	6
  8418  002502  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  8419  002504                     u2555:
  8420  002504  90D8               	bcf	status,0,c
  8421  002506  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8422  002508  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  8423  00250A  EF82  F012         	goto	u2555
  8424  00250E  0E01               	movlw	1
  8425  002510  1604               	andwf	??_Lcd_Cmd^0,f,c
  8426  002512  3A04               	swapf	??_Lcd_Cmd^0,f,c
  8427  002514  4604               	rlncf	??_Lcd_Cmd^0,f,c
  8428  002516  4604               	rlncf	??_Lcd_Cmd^0,f,c
  8429  002518  508C               	movf	140,w,c	;volatile
  8430  00251A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8431  00251C  0BBF               	andlw	-65
  8432  00251E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8433  002520  6E8C               	movwf	140,c	;volatile
  8434                           
  8435                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  8436  002522  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8437  002526  0E05               	movlw	5
  8438  002528  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  8439  00252A                     u2565:
  8440  00252A  90D8               	bcf	status,0,c
  8441  00252C  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8442  00252E  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  8443  002530  EF95  F012         	goto	u2565
  8444  002534  0E01               	movlw	1
  8445  002536  1604               	andwf	??_Lcd_Cmd^0,f,c
  8446  002538  3A04               	swapf	??_Lcd_Cmd^0,f,c
  8447  00253A  4604               	rlncf	??_Lcd_Cmd^0,f,c
  8448  00253C  508C               	movf	140,w,c	;volatile
  8449  00253E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8450  002540  0BDF               	andlw	-33
  8451  002542  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8452  002544  6E8C               	movwf	140,c	;volatile
  8453                           
  8454                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  8455  002546  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8456  00254A  3A04               	swapf	??_Lcd_Cmd^0,f,c
  8457  00254C  0E0F               	movlw	15
  8458  00254E  1604               	andwf	??_Lcd_Cmd^0,f,c
  8459  002550  0E01               	movlw	1
  8460  002552  1604               	andwf	??_Lcd_Cmd^0,f,c
  8461  002554  3A04               	swapf	??_Lcd_Cmd^0,f,c
  8462  002556  508C               	movf	140,w,c	;volatile
  8463  002558  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8464  00255A  0BEF               	andlw	-17
  8465  00255C  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8466  00255E  6E8C               	movwf	140,c	;volatile
  8467  002560                     
  8468                           ;flex_lcd.c: 182:     _delay(10);
  8469  002560  0E03               	movlw	3
  8470  002562                     u4807:
  8471  002562  2EE8               	decfsz	wreg,f,c
  8472  002564  D7FE               	bra	u4807
  8473  002566  F000               	nop	
  8474  002568                     
  8475                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  8476  002568  868C               	bsf	140,3,c	;volatile
  8477  00256A                     
  8478                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8479  00256A  0E05               	movlw	5
  8480  00256C                     u4817:
  8481  00256C  2EE8               	decfsz	wreg,f,c
  8482  00256E  D7FE               	bra	u4817
  8483  002570                     
  8484                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  8485  002570  968C               	bcf	140,3,c	;volatile
  8486                           
  8487                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  8488  002572  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8489  002576  90D8               	bcf	status,0,c
  8490  002578  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8491  00257A  90D8               	bcf	status,0,c
  8492  00257C  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8493  00257E  90D8               	bcf	status,0,c
  8494  002580  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8495  002582  0E01               	movlw	1
  8496  002584  1604               	andwf	??_Lcd_Cmd^0,f,c
  8497  002586  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8498  002588  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8499  00258A  508C               	movf	140,w,c	;volatile
  8500  00258C  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8501  00258E  0B7F               	andlw	-129
  8502  002590  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8503  002592  6E8C               	movwf	140,c	;volatile
  8504                           
  8505                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  8506  002594  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8507  002598  90D8               	bcf	status,0,c
  8508  00259A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8509  00259C  90D8               	bcf	status,0,c
  8510  00259E  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8511  0025A0  0E01               	movlw	1
  8512  0025A2  1604               	andwf	??_Lcd_Cmd^0,f,c
  8513  0025A4  3A04               	swapf	??_Lcd_Cmd^0,f,c
  8514  0025A6  4604               	rlncf	??_Lcd_Cmd^0,f,c
  8515  0025A8  4604               	rlncf	??_Lcd_Cmd^0,f,c
  8516  0025AA  508C               	movf	140,w,c	;volatile
  8517  0025AC  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8518  0025AE  0BBF               	andlw	-65
  8519  0025B0  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8520  0025B2  6E8C               	movwf	140,c	;volatile
  8521                           
  8522                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  8523  0025B4  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8524  0025B8  90D8               	bcf	status,0,c
  8525  0025BA  3204               	rrcf	??_Lcd_Cmd^0,f,c
  8526  0025BC  0E01               	movlw	1
  8527  0025BE  1604               	andwf	??_Lcd_Cmd^0,f,c
  8528  0025C0  3A04               	swapf	??_Lcd_Cmd^0,f,c
  8529  0025C2  4604               	rlncf	??_Lcd_Cmd^0,f,c
  8530  0025C4  508C               	movf	140,w,c	;volatile
  8531  0025C6  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8532  0025C8  0BDF               	andlw	-33
  8533  0025CA  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8534  0025CC  6E8C               	movwf	140,c	;volatile
  8535                           
  8536                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  8537  0025CE  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8538  0025D2  0E01               	movlw	1
  8539  0025D4  1604               	andwf	??_Lcd_Cmd^0,f,c
  8540  0025D6  3A04               	swapf	??_Lcd_Cmd^0,f,c
  8541  0025D8  508C               	movf	140,w,c	;volatile
  8542  0025DA  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8543  0025DC  0BEF               	andlw	-17
  8544  0025DE  1804               	xorwf	??_Lcd_Cmd^0,w,c
  8545  0025E0  6E8C               	movwf	140,c	;volatile
  8546  0025E2                     
  8547                           ;flex_lcd.c: 190:     _delay(10);
  8548  0025E2  0E03               	movlw	3
  8549  0025E4                     u4827:
  8550  0025E4  2EE8               	decfsz	wreg,f,c
  8551  0025E6  D7FE               	bra	u4827
  8552  0025E8  F000               	nop	
  8553  0025EA                     
  8554                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  8555  0025EA  868C               	bsf	140,3,c	;volatile
  8556  0025EC                     
  8557                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8558  0025EC  0E05               	movlw	5
  8559  0025EE                     u4837:
  8560  0025EE  2EE8               	decfsz	wreg,f,c
  8561  0025F0  D7FE               	bra	u4837
  8562  0025F2                     
  8563                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  8564  0025F2  968C               	bcf	140,3,c	;volatile
  8565  0025F4                     
  8566                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8567  0025F4  0E16               	movlw	22
  8568  0025F6  6E04               	movwf	??_Lcd_Cmd^0,c
  8569  0025F8  0E6C               	movlw	108
  8570  0025FA                     u4847:
  8571  0025FA  2EE8               	decfsz	wreg,f,c
  8572  0025FC  D7FE               	bra	u4847
  8573  0025FE  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  8574  002600  D7FC               	bra	u4847
  8575  002602  D000               	nop2	
  8576  002604  0012               	return		;funcret
  8577  002606                     __end_of_Lcd_Cmd:
  8578                           	callstack 0
  8579                           
  8580 ;; *************** function _Lcd_Chr_CP *****************
  8581 ;; Defined at:
  8582 ;;		line 151 in file "flex_lcd.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  data            1    wreg     char 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  data            1    5[COMRAM] char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, status,2, status,0
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0
  8597 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8598 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8599 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8600 ;;Total ram usage:        3 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:    2
  8603 ;; This function calls:
  8604 ;;		Nothing
  8605 ;; This function is called by:
  8606 ;;		_Lcd_Out
  8607 ;;		_Lcd_Out2
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text50
  8612  00238E                     __ptext50:
  8613                           	callstack 0
  8614  00238E                     _Lcd_Chr_CP:
  8615                           	callstack 26
  8616                           
  8617                           ;incstack = 0
  8618                           ;Lcd_Chr_CP@data stored from wreg
  8619  00238E  6E06               	movwf	Lcd_Chr_CP@data^0,c
  8620  002390                     
  8621                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  8622  002390  968C               	bcf	140,3,c	;volatile
  8623                           
  8624                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  8625  002392  848C               	bsf	140,2,c	;volatile
  8626  002394                     
  8627                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  8628  002394  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8629  002398  0E07               	movlw	7
  8630  00239A  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8631  00239C                     u2575:
  8632  00239C  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8633  00239E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8634  0023A0  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8635  0023A2  EFCE  F011         	goto	u2575
  8636  0023A6  0E01               	movlw	1
  8637  0023A8  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8638  0023AA  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8639  0023AC  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8640  0023AE  508C               	movf	140,w,c	;volatile
  8641  0023B0  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8642  0023B2  0B7F               	andlw	-129
  8643  0023B4  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8644  0023B6  6E8C               	movwf	140,c	;volatile
  8645                           
  8646                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  8647  0023B8  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8648  0023BC  0E06               	movlw	6
  8649  0023BE  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8650  0023C0                     u2585:
  8651  0023C0  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8652  0023C2  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8653  0023C4  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8654  0023C6  EFE0  F011         	goto	u2585
  8655  0023CA  0E01               	movlw	1
  8656  0023CC  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8657  0023CE  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8658  0023D0  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8659  0023D2  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8660  0023D4  508C               	movf	140,w,c	;volatile
  8661  0023D6  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8662  0023D8  0BBF               	andlw	-65
  8663  0023DA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8664  0023DC  6E8C               	movwf	140,c	;volatile
  8665                           
  8666                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  8667  0023DE  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8668  0023E2  0E05               	movlw	5
  8669  0023E4  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8670  0023E6                     u2595:
  8671  0023E6  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8672  0023E8  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8673  0023EA  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8674  0023EC  EFF3  F011         	goto	u2595
  8675  0023F0  0E01               	movlw	1
  8676  0023F2  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8677  0023F4  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8678  0023F6  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8679  0023F8  508C               	movf	140,w,c	;volatile
  8680  0023FA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8681  0023FC  0BDF               	andlw	-33
  8682  0023FE  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8683  002400  6E8C               	movwf	140,c	;volatile
  8684                           
  8685                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  8686  002402  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8687  002406  0E04               	movlw	4
  8688  002408  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8689  00240A                     u2605:
  8690  00240A  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8691  00240C  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8692  00240E  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8693  002410  EF05  F012         	goto	u2605
  8694  002414  0E01               	movlw	1
  8695  002416  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8696  002418  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8697  00241A  508C               	movf	140,w,c	;volatile
  8698  00241C  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8699  00241E  0BEF               	andlw	-17
  8700  002420  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8701  002422  6E8C               	movwf	140,c	;volatile
  8702  002424                     
  8703                           ;flex_lcd.c: 159:     _delay(10);
  8704  002424  0E03               	movlw	3
  8705  002426                     u4857:
  8706  002426  2EE8               	decfsz	wreg,f,c
  8707  002428  D7FE               	bra	u4857
  8708  00242A  F000               	nop	
  8709  00242C                     
  8710                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  8711  00242C  868C               	bsf	140,3,c	;volatile
  8712  00242E                     
  8713                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8714  00242E  0E05               	movlw	5
  8715  002430                     u4867:
  8716  002430  2EE8               	decfsz	wreg,f,c
  8717  002432  D7FE               	bra	u4867
  8718  002434                     
  8719                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  8720  002434  968C               	bcf	140,3,c	;volatile
  8721                           
  8722                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  8723  002436  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8724  00243A  0E03               	movlw	3
  8725  00243C  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8726  00243E                     u2615:
  8727  00243E  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8728  002440  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8729  002442  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8730  002444  EF1F  F012         	goto	u2615
  8731  002448  0E01               	movlw	1
  8732  00244A  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8733  00244C  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8734  00244E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8735  002450  508C               	movf	140,w,c	;volatile
  8736  002452  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8737  002454  0B7F               	andlw	-129
  8738  002456  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8739  002458  6E8C               	movwf	140,c	;volatile
  8740                           
  8741                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  8742  00245A  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8743  00245E  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8744  002460  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8745  002462  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8746  002464  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8747  002466  0E01               	movlw	1
  8748  002468  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8749  00246A  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8750  00246C  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8751  00246E  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8752  002470  508C               	movf	140,w,c	;volatile
  8753  002472  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8754  002474  0BBF               	andlw	-65
  8755  002476  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8756  002478  6E8C               	movwf	140,c	;volatile
  8757                           
  8758                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  8759  00247A  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8760  00247E  0E01               	movlw	1
  8761  002480  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8762  002482                     u2625:
  8763  002482  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  8764  002484  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  8765  002486  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8766  002488  EF41  F012         	goto	u2625
  8767  00248C  0E01               	movlw	1
  8768  00248E  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8769  002490  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8770  002492  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  8771  002494  508C               	movf	140,w,c	;volatile
  8772  002496  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8773  002498  0BDF               	andlw	-33
  8774  00249A  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8775  00249C  6E8C               	movwf	140,c	;volatile
  8776                           
  8777                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  8778  00249E  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8779  0024A2  0E01               	movlw	1
  8780  0024A4  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  8781  0024A6  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  8782  0024A8  508C               	movf	140,w,c	;volatile
  8783  0024AA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8784  0024AC  0BEF               	andlw	-17
  8785  0024AE  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  8786  0024B0  6E8C               	movwf	140,c	;volatile
  8787  0024B2                     
  8788                           ;flex_lcd.c: 167:     _delay(10);
  8789  0024B2  0E03               	movlw	3
  8790  0024B4                     u4877:
  8791  0024B4  2EE8               	decfsz	wreg,f,c
  8792  0024B6  D7FE               	bra	u4877
  8793  0024B8  F000               	nop	
  8794  0024BA                     
  8795                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  8796  0024BA  868C               	bsf	140,3,c	;volatile
  8797  0024BC                     
  8798                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8799  0024BC  0E05               	movlw	5
  8800  0024BE                     u4887:
  8801  0024BE  2EE8               	decfsz	wreg,f,c
  8802  0024C0  D7FE               	bra	u4887
  8803  0024C2                     
  8804                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  8805  0024C2  968C               	bcf	140,3,c	;volatile
  8806  0024C4                     
  8807                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  8808  0024C4  0E05               	movlw	5
  8809  0024C6                     u4897:
  8810  0024C6  2EE8               	decfsz	wreg,f,c
  8811  0024C8  D7FE               	bra	u4897
  8812  0024CA                     
  8813                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  8814  0024CA  0E16               	movlw	22
  8815  0024CC  6E04               	movwf	??_Lcd_Chr_CP^0,c
  8816  0024CE  0E6C               	movlw	108
  8817  0024D0                     u4907:
  8818  0024D0  2EE8               	decfsz	wreg,f,c
  8819  0024D2  D7FE               	bra	u4907
  8820  0024D4  2E04               	decfsz	??_Lcd_Chr_CP^0,f,c
  8821  0024D6  D7FC               	bra	u4907
  8822  0024D8  D000               	nop2	
  8823  0024DA  0012               	return		;funcret
  8824  0024DC                     __end_of_Lcd_Chr_CP:
  8825                           	callstack 0
  8826                           
  8827 ;; *************** function _isrL *****************
  8828 ;; Defined at:
  8829 ;;		line 29 in file "main.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;		None
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;		None
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		wreg, status,2, status,0
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8843 ;;      Params:         0       0       0       0       0       0       0       0       0
  8844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8845 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8846 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8847 ;;Total ram usage:        3 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    1
  8850 ;; This function calls:
  8851 ;;		Nothing
  8852 ;; This function is called by:
  8853 ;;		Interrupt level 1
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           	psect	intcodelo
  8858  000018                     __pintcodelo:
  8859                           	callstack 0
  8860  000018                     _isrL:
  8861                           	callstack 19
  8862                           
  8863                           ;incstack = 0
  8864  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8865  00001A  CFD8 F001          	movff	status,??_isrL
  8866  00001E  CFE8 F002          	movff	wreg,??_isrL+1
  8867  000022  CFE0 F003          	movff	bsr,??_isrL+2
  8868  000026                     
  8869                           ;main.c: 31:     if(TMR3IE && TMR3IF)
  8870  000026  A2A0               	btfss	4000,1,c	;volatile
  8871  000028  EF18  F000         	goto	i1u458_21
  8872  00002C  EF1A  F000         	goto	i1u458_20
  8873  000030                     i1u458_21:
  8874  000030  EF56  F000         	goto	i1l93
  8875  000034                     i1u458_20:
  8876  000034  A2A1               	btfss	4001,1,c	;volatile
  8877  000036  EF1F  F000         	goto	i1u459_21
  8878  00003A  EF21  F000         	goto	i1u459_20
  8879  00003E                     i1u459_21:
  8880  00003E  EF56  F000         	goto	i1l93
  8881  000042                     i1u459_20:
  8882  000042                     
  8883                           ;main.c: 32:     {;main.c: 33:         TMR3IF = 0;
  8884  000042  92A1               	bcf	4001,1,c	;volatile
  8885  000044                     
  8886                           ;main.c: 34:         datos.counter++;
  8887  000044  0100               	movlb	0	; () banked
  8888  000046  2BB8               	incf	_datos& (0+255),f,b
  8889  000048                     
  8890                           ; BSR set to: 0
  8891                           ;main.c: 35:         if((datos.counter == 5) && (datos.state == 0 || datos.state == 2))
  8892  000048  0E05               	movlw	5
  8893  00004A  19B8               	xorwf	_datos& (0+255),w,b
  8894  00004C  A4D8               	btfss	status,2,c
  8895  00004E  EF2B  F000         	goto	i1u460_21
  8896  000052  EF2D  F000         	goto	i1u460_20
  8897  000056                     i1u460_21:
  8898  000056  EF46  F000         	goto	i1l4685
  8899  00005A                     i1u460_20:
  8900  00005A                     
  8901                           ; BSR set to: 0
  8902  00005A  51BB               	movf	(_datos+3)& (0+255),w,b
  8903  00005C  B4D8               	btfsc	status,2,c
  8904  00005E  EF33  F000         	goto	i1u461_21
  8905  000062  EF35  F000         	goto	i1u461_20
  8906  000066                     i1u461_21:
  8907  000066  EF3E  F000         	goto	i1l4681
  8908  00006A                     i1u461_20:
  8909  00006A                     
  8910                           ; BSR set to: 0
  8911  00006A  0E02               	movlw	2
  8912  00006C  19BB               	xorwf	(_datos+3)& (0+255),w,b
  8913  00006E  A4D8               	btfss	status,2,c
  8914  000070  EF3C  F000         	goto	i1u462_21
  8915  000074  EF3E  F000         	goto	i1u462_20
  8916  000078                     i1u462_21:
  8917  000078  EF46  F000         	goto	i1l4685
  8918  00007C                     i1u462_20:
  8919  00007C                     i1l4681:
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;main.c: 36:         {;main.c: 37:             datos.counter = 0;
  8923  00007C  0E00               	movlw	0
  8924  00007E  6FB8               	movwf	_datos& (0+255),b
  8925  000080                     
  8926                           ; BSR set to: 0
  8927                           ;main.c: 38:             datos.nextFunc = appStateRecolectData;
  8928  000080  0EEE               	movlw	low _appStateRecolectData
  8929  000082  6FCF               	movwf	(_datos+23)& (0+255),b
  8930  000084  0E2C               	movlw	high _appStateRecolectData
  8931  000086  6FD0               	movwf	(_datos+24)& (0+255),b
  8932                           
  8933                           ;main.c: 39:         }
  8934  000088  EF52  F000         	goto	i1l4689
  8935  00008C                     i1l4685:
  8936                           
  8937                           ; BSR set to: 0
  8938  00008C  05BB               	decf	(_datos+3)& (0+255),w,b
  8939  00008E  A4D8               	btfss	status,2,c
  8940  000090  EF4C  F000         	goto	i1u463_21
  8941  000094  EF4E  F000         	goto	i1u463_20
  8942  000098                     i1u463_21:
  8943  000098  EF52  F000         	goto	i1l4689
  8944  00009C                     i1u463_20:
  8945  00009C                     
  8946                           ; BSR set to: 0
  8947                           ;main.c: 41:         {;main.c: 42:             datos.nextFunc = appGetElements;
  8948  00009C  0E76               	movlw	low _appGetElements
  8949  00009E  6FCF               	movwf	(_datos+23)& (0+255),b
  8950  0000A0  0E2E               	movlw	high _appGetElements
  8951  0000A2  6FD0               	movwf	(_datos+24)& (0+255),b
  8952  0000A4                     i1l4689:
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;main.c: 44:         TMR3 = 20536;
  8956  0000A4  0E50               	movlw	80
  8957  0000A6  6EB3               	movwf	179,c	;volatile
  8958  0000A8  0E38               	movlw	56
  8959  0000AA  6EB2               	movwf	178,c	;volatile
  8960  0000AC                     i1l93:
  8961  0000AC  C003  FFE0         	movff	??_isrL+2,bsr
  8962  0000B0  C002  FFE8         	movff	??_isrL+1,wreg
  8963  0000B4  C001  FFD8         	movff	??_isrL,status
  8964  0000B8  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8965  0000BA  0010               	retfie	
  8966  0000BC                     __end_of_isrL:
  8967                           	callstack 0
  8968                           
  8969 ;; *************** function _isrH *****************
  8970 ;; Defined at:
  8971 ;;		line 47 in file "main.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		wreg, status,2, status,0
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8985 ;;      Params:         0       0       0       0       0       0       0       0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8988 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8989 ;;Total ram usage:        0 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; This function calls:
  8992 ;;		Nothing
  8993 ;; This function is called by:
  8994 ;;		Interrupt level 2
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	intcode
  8999  000008                     __pintcode:
  9000                           	callstack 0
  9001  000008                     _isrH:
  9002                           	callstack 19
  9003                           
  9004                           ;incstack = 0
  9005  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9006  00000A  ED3F  F019         	call	int_func,f	;refresh shadow registers
  9007  00000E                     
  9008                           	psect	intcode_body
  9009  00327E                     __pintcode_body:
  9010                           	callstack 19
  9011  00327E                     int_func:
  9012                           	callstack 19
  9013  00327E  0006               	pop		; remove dummy address from shadow register refresh
  9014  003280                     
  9015                           ;main.c: 49:     if(TMR0IE && TMR0IF)
  9016  003280  AAF2               	btfss	4082,5,c	;volatile
  9017  003282  EF45  F019         	goto	i2u382_41
  9018  003286  EF47  F019         	goto	i2u382_40
  9019  00328A                     i2u382_41:
  9020  00328A  EF56  F019         	goto	i2l99
  9021  00328E                     i2u382_40:
  9022  00328E  A4F2               	btfss	4082,2,c	;volatile
  9023  003290  EF4C  F019         	goto	i2u383_41
  9024  003294  EF4E  F019         	goto	i2u383_40
  9025  003298                     i2u383_41:
  9026  003298  EF56  F019         	goto	i2l99
  9027  00329C                     i2u383_40:
  9028  00329C                     
  9029                           ;main.c: 50:     {;main.c: 51:         TMR0IF = 0;
  9030  00329C  94F2               	bcf	4082,2,c	;volatile
  9031  00329E                     
  9032                           ;main.c: 52:         datos.state = 10;
  9033  00329E  0E0A               	movlw	10
  9034  0032A0  0100               	movlb	0	; () banked
  9035  0032A2  6FBB               	movwf	(_datos+3)& (0+255),b
  9036  0032A4                     
  9037                           ; BSR set to: 0
  9038                           ;main.c: 53:         datos.nextFunc = warning;
  9039  0032A4  0EEC               	movlw	low _warning
  9040  0032A6  6FCF               	movwf	(_datos+23)& (0+255),b
  9041  0032A8  0E2F               	movlw	high _warning
  9042  0032AA  6FD0               	movwf	(_datos+24)& (0+255),b
  9043  0032AC                     i2l99:
  9044  0032AC  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9045  0032AE  0011               	retfie		f
  9046  0032B0                     __end_of_isrH:
  9047                           	callstack 0
  9048                           
  9049                           	psect	rparam
  9050  0000                     
  9051                           	psect	temp
  9052  00005C                     btemp:
  9053                           	callstack 0
  9054  00005C                     	ds	1
  9055  0000                     int$flags	set	btemp
  9056  0000                     wtemp8	set	btemp+1
  9057  0000                     ttemp5	set	btemp+1
  9058  0000                     ttemp6	set	btemp+4
  9059  0000                     ttemp7	set	btemp+8
  9060                           
  9061                           	psect	idloc
  9062                           
  9063                           ;Config register IDLOC0 @ 0x200000
  9064                           ;	unspecified, using default values
  9065  200000                     	org	2097152
  9066  200000  FF                 	db	255
  9067                           
  9068                           ;Config register IDLOC1 @ 0x200001
  9069                           ;	unspecified, using default values
  9070  200001                     	org	2097153
  9071  200001  FF                 	db	255
  9072                           
  9073                           ;Config register IDLOC2 @ 0x200002
  9074                           ;	unspecified, using default values
  9075  200002                     	org	2097154
  9076  200002  FF                 	db	255
  9077                           
  9078                           ;Config register IDLOC3 @ 0x200003
  9079                           ;	unspecified, using default values
  9080  200003                     	org	2097155
  9081  200003  FF                 	db	255
  9082                           
  9083                           ;Config register IDLOC4 @ 0x200004
  9084                           ;	unspecified, using default values
  9085  200004                     	org	2097156
  9086  200004  FF                 	db	255
  9087                           
  9088                           ;Config register IDLOC5 @ 0x200005
  9089                           ;	unspecified, using default values
  9090  200005                     	org	2097157
  9091  200005  FF                 	db	255
  9092                           
  9093                           ;Config register IDLOC6 @ 0x200006
  9094                           ;	unspecified, using default values
  9095  200006                     	org	2097158
  9096  200006  FF                 	db	255
  9097                           
  9098                           ;Config register IDLOC7 @ 0x200007
  9099                           ;	unspecified, using default values
  9100  200007                     	org	2097159
  9101  200007  FF                 	db	255
  9102                           
  9103                           	psect	config
  9104                           
  9105                           ;Config register CONFIG1L @ 0x300000
  9106                           ;	PLL Prescaler Selection bits
  9107                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9108                           ;	System Clock Postscaler Selection bits
  9109                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9110                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9111                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9112  300000                     	org	3145728
  9113  300000  00                 	db	0
  9114                           
  9115                           ;Config register CONFIG1H @ 0x300001
  9116                           ;	Oscillator Selection bits
  9117                           ;	FOSC = HS, HS oscillator (HS)
  9118                           ;	Fail-Safe Clock Monitor Enable bit
  9119                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9120                           ;	Internal/External Oscillator Switchover bit
  9121                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9122  300001                     	org	3145729
  9123  300001  0C                 	db	12
  9124                           
  9125                           ;Config register CONFIG2L @ 0x300002
  9126                           ;	Power-up Timer Enable bit
  9127                           ;	PWRT = OFF, PWRT disabled
  9128                           ;	Brown-out Reset Enable bits
  9129                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9130                           ;	Brown-out Reset Voltage bits
  9131                           ;	BORV = 3, Minimum setting 2.05V
  9132                           ;	USB Voltage Regulator Enable bit
  9133                           ;	VREGEN = OFF, USB voltage regulator disabled
  9134  300002                     	org	3145730
  9135  300002  19                 	db	25
  9136                           
  9137                           ;Config register CONFIG2H @ 0x300003
  9138                           ;	Watchdog Timer Enable bit
  9139                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9140                           ;	Watchdog Timer Postscale Select bits
  9141                           ;	WDTPS = 32768, 1:32768
  9142  300003                     	org	3145731
  9143  300003  1E                 	db	30
  9144                           
  9145                           ; Padding undefined space
  9146  300004                     	org	3145732
  9147  300004  FF                 	db	255
  9148                           
  9149                           ;Config register CONFIG3H @ 0x300005
  9150                           ;	CCP2 MUX bit
  9151                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9152                           ;	PORTB A/D Enable bit
  9153                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9154                           ;	Low-Power Timer 1 Oscillator Enable bit
  9155                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9156                           ;	MCLR Pin Enable bit
  9157                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9158  300005                     	org	3145733
  9159  300005  81                 	db	129
  9160                           
  9161                           ;Config register CONFIG4L @ 0x300006
  9162                           ;	Stack Full/Underflow Reset Enable bit
  9163                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9164                           ;	Single-Supply ICSP Enable bit
  9165                           ;	LVP = OFF, Single-Supply ICSP disabled
  9166                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9167                           ;	ICPRT = OFF, ICPORT disabled
  9168                           ;	Extended Instruction Set Enable bit
  9169                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9170                           ;	Background Debugger Enable bit
  9171                           ;	DEBUG = 0x1, unprogrammed default
  9172  300006                     	org	3145734
  9173  300006  81                 	db	129
  9174                           
  9175                           ; Padding undefined space
  9176  300007                     	org	3145735
  9177  300007  FF                 	db	255
  9178                           
  9179                           ;Config register CONFIG5L @ 0x300008
  9180                           ;	Code Protection bit
  9181                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9182                           ;	Code Protection bit
  9183                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9184                           ;	Code Protection bit
  9185                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9186                           ;	Code Protection bit
  9187                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9188  300008                     	org	3145736
  9189  300008  0F                 	db	15
  9190                           
  9191                           ;Config register CONFIG5H @ 0x300009
  9192                           ;	Boot Block Code Protection bit
  9193                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9194                           ;	Data EEPROM Code Protection bit
  9195                           ;	CPD = OFF, Data EEPROM is not code-protected
  9196  300009                     	org	3145737
  9197  300009  C0                 	db	192
  9198                           
  9199                           ;Config register CONFIG6L @ 0x30000A
  9200                           ;	Write Protection bit
  9201                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9202                           ;	Write Protection bit
  9203                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9204                           ;	Write Protection bit
  9205                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9206                           ;	Write Protection bit
  9207                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9208  30000A                     	org	3145738
  9209  30000A  0F                 	db	15
  9210                           
  9211                           ;Config register CONFIG6H @ 0x30000B
  9212                           ;	Configuration Register Write Protection bit
  9213                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9214                           ;	Boot Block Write Protection bit
  9215                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9216                           ;	Data EEPROM Write Protection bit
  9217                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9218  30000B                     	org	3145739
  9219  30000B  E0                 	db	224
  9220                           
  9221                           ;Config register CONFIG7L @ 0x30000C
  9222                           ;	Table Read Protection bit
  9223                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9224                           ;	Table Read Protection bit
  9225                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9226                           ;	Table Read Protection bit
  9227                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9228                           ;	Table Read Protection bit
  9229                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9230  30000C                     	org	3145740
  9231  30000C  0F                 	db	15
  9232                           
  9233                           ;Config register CONFIG7H @ 0x30000D
  9234                           ;	Boot Block Table Read Protection bit
  9235                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9236  30000D                     	org	3145741
  9237  30000D  40                 	db	64
  9238                           tosu	equ	0xFFF
  9239                           tosh	equ	0xFFE
  9240                           tosl	equ	0xFFD
  9241                           stkptr	equ	0xFFC
  9242                           pclatu	equ	0xFFB
  9243                           pclath	equ	0xFFA
  9244                           pcl	equ	0xFF9
  9245                           tblptru	equ	0xFF8
  9246                           tblptrh	equ	0xFF7
  9247                           tblptrl	equ	0xFF6
  9248                           tablat	equ	0xFF5
  9249                           prodh	equ	0xFF4
  9250                           prodl	equ	0xFF3
  9251                           indf0	equ	0xFEF
  9252                           postinc0	equ	0xFEE
  9253                           postdec0	equ	0xFED
  9254                           preinc0	equ	0xFEC
  9255                           plusw0	equ	0xFEB
  9256                           fsr0h	equ	0xFEA
  9257                           fsr0l	equ	0xFE9
  9258                           wreg	equ	0xFE8
  9259                           indf1	equ	0xFE7
  9260                           postinc1	equ	0xFE6
  9261                           postdec1	equ	0xFE5
  9262                           preinc1	equ	0xFE4
  9263                           plusw1	equ	0xFE3
  9264                           fsr1h	equ	0xFE2
  9265                           fsr1l	equ	0xFE1
  9266                           bsr	equ	0xFE0
  9267                           indf2	equ	0xFDF
  9268                           postinc2	equ	0xFDE
  9269                           postdec2	equ	0xFDD
  9270                           preinc2	equ	0xFDC
  9271                           plusw2	equ	0xFDB
  9272                           fsr2h	equ	0xFDA
  9273                           fsr2l	equ	0xFD9
  9274                           status	equ	0xFD8

Data Sizes:
    Strings     89
    Constant    0
    Data        25
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      91
    BANK0           160     46     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    appSubGiveElemts@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@elements	PTR const short  size(2) Largest target is 25
		 -> datos.elements(BANK0[2]), datos(BANK0[25]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1901_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_9(CODE[17]), STR_8(CODE[12]), STR_6(CODE[14]), appElemts@dataout(BANK0[6]), 
		 -> STR_4(CODE[6]), STR_3(CODE[12]), datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    S196_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> warning(), appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _warning->_Lcd_Out
    _appADC->___awmod
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_setServo
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _appSubGiveElemts->_setServo
    _setServo->_setServoAngle
    _sprintf->___awmod
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appBat
    _appStateRecolectData->_appElemts
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   79239
                                             44 BANK0      2     2      0
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
                            _warning *
 ---------------------------------------------------------------------------------
 (1) _warning                                              2     2      0    2077
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   55370
                             _appADC
                             _appBat
                     _appCounterStop
                          _appElemts
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            8     6      2   13647
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appCounterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   20214
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20603
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                              7 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     631
                                             71 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             46 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             81 COMRAM     6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0    1432
                           _setServo
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    2534
                            _adcInit
                     _appCounterInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
                          _servoInit
 ---------------------------------------------------------------------------------
 (2) _servoInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2392
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              6 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appCounterInit                                       2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   17826
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                   _appSubGiveElemts
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGiveElemts                                     2     0      2     982
                                             11 COMRAM     2     0      2
                    _appCounterStart
                           _setServo
 ---------------------------------------------------------------------------------
 (2) _setServo                                             4     2      2     906
                                              7 COMRAM     4     2      2
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (3) _setServoAngle                                        4     3      1     208
                                              3 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _appCounterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   16668
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   11573
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   10541
                                             76 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   10011
                                             66 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1795
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     692
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1403
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    1901
                                              6 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appSubGiveElemts
       _appCounterStart
       _setServo
         _setServoAngle
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appCounterInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
     _servoInit
   _appStateInitial *
     _setServo
       _setServoAngle
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appCounterStop
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _setServo
       _setServoAngle
   _warning *
     _Lcd_Cmd
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      20        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 02 02:43:41 2021

                 ___fldiv@aexp 0047                   ___fldiv@bexp 0046                   ___fldiv@sign 003F  
                           l30 31F8                             l32 3206                             l33 320E  
                           l42 1A3A                             l27 307E                             l39 1D9A  
                           bsr 000FE0            ___wmul@multiplicand 0006                            l140 2BEA  
                          l221 2614                            l141 2C3C                            l126 1852  
                          l230 270E                            l223 261A                            l224 2620  
                          l233 26CA                            l217 3386                            l170 24DA  
                          l154 29F0                            l250 33A8                            l235 26D0  
                          l331 33BA                            l139 2B9E                            l236 26D6  
                          l244 3306                            l173 2604                            l237 271C  
                          l253 33C2                            l238 2720                            l262 33BE  
                          l342 30C6                            l247 32DC                            l352 2924  
                          l256 33B2                            l176 2E02                            l328 332E  
                          l336 2D7E                            l345 2EE4                            l259 33C6  
                          l355 339C                            l267 310C                            l339 30AA  
                          l364 3354                            l608 2CEC                            l491 238C  
                          l661 2826                            l478 20B2                            l951 0E42  
                          l960 0F2A                            l946 101E                            l948 0E7E  
                          l957 0EC4                            l982 0C84                            l959 0F3C  
                          l985 0B16                            l978 0920                            l995 0C46  
                          l987 0B8E                            l988 0B7C                adcInit@ADC_PINs 0005  
                          _PR2 000FCB                            _abs 3194                            _pad 2ABC  
                 ___awmod@sign 0057                            tosl 000FFD                            wreg 000FE8  
                 ___flmul@aexp 0027                   ___flmul@bexp 0028                   ___flmul@sign 0022  
                 ___flmul@temp 002D                   ___flmul@prod 0029                   ___fltol@exp1 0051  
                         l1022 1BEE                           l1033 1B86                           l1114 1668  
                         l1026 1B2A                           l1019 1A92                           ?_abs 0016  
                         l1052 2F98                           l1214 2ABA                           l1222 3150  
                         l1150 2F46                           l1039 2228                           l1231 327C  
                         l1143 138A                           l1128 1112                           l1225 33C8  
                         l1154 31CA                           l1083 2B00                           l3101 24C2  
                         l1157 31D2                           l1149 2F3E                           l1086 2B42  
                         l1094 142A                           l3103 24C4                           l1191 3246  
                         l3111 260E                           l1088 2B7C                           l1096 1432  
                         l3105 24CA                           l3201 2928                           l1185 1F22  
                         l3121 267C                           l3203 292C                           l3123 268E  
                         l3115 2626                           l3107 2608                           l1188 1F2A  
                         l3061 24DE                           l3221 29C0                           l3205 2936  
                         l3213 2954                           l3301 1822                           l3133 26DC  
                         l3125 26A2                           l3117 2658                           l3109 260C  
                         l3071 2570                           l3063 24E2                           l3207 2940  
                         l3215 298E                           l1199 2FEA                           l3303 1830  
                         l3231 167A                           l3127 26B4                           l3119 266A  
                         l3311 2B8A                           l3151 31D6                           l3081 25F4  
                         l3073 25E2                           l3065 2560                           l3217 2998  
                         l3209 294A                           l3161 20D2                           l4201 3330  
                         l3241 16B8                           l3233 168C                           l3305 183C  
                         l3129 26C4                           l3321 2BBC                           l3313 2B9A  
                         l3401 0D06                           l3153 31E8                           l3091 242E  
                         l3083 2390                           l3075 25EA                           l3067 2568  
                         l3219 29BC                           l3163 20DE                           l4203 334C  
                         l4211 1F3E                           l3307 1840                           l3251 16F8  
                         l3243 16C4                           l3235 1690                           l3227 166A  
                         l3331 2BC6                           l3323 2BBE                           l3411 0D3A  
                         l3403 0D08                           l3155 31F6                           l3093 2434  
                         l3085 2394                           l3077 25EC                           l3069 256A  
                         l3181 2200                           l3173 2186                           l3157 20B4  
                         l4221 1F94                           l4213 1F5E                           l4301 2B24  
                         l3261 1730                           l3253 16FC                           l3245 16D2  
                         l3237 169E                           l3229 1676                           l3341 2C0C  
                         l3333 2BD8                           l3325 2BC0                           l3309 2B7E  
                         l3501 0FFE                           l3421 0D80                           l3405 0D18  
                         l3413 0D42                           l3095 24B2                           l3087 2424  
                         l3079 25F2                           l3183 220C                           l3175 21B2  
                         l3167 2114                           l4231 1FE8                           l4223 1FA0  
                         l4215 1F62                           l4207 1F2C                           l4311 31AE  
                         l4303 2B50                           l3271 1768                           l3263 173E  
                         l3255 170A                           l3247 16DE                           l3239 16AA  
                         l3351 2C24                           l3343 2C0E                           l3335 2C02  
                         l3327 2BC2                           l3319 2BB6                           l3503 100C  
                         l3431 0DA8                           l3423 0D84                           l3415 0D52  
                         l3407 0D28                           l3097 24BA                           l3089 242C  
                         l3185 2212                           l3169 216C                           l4313 3210  
                         l4321 2FB2                           l4401 1E0A                           l4241 205C  
                         l4233 1FFA                           l4225 1FBE                           l4217 1F70  
                         l4209 1F30                           l4305 2B64                           l3281 17AA  
                         l3273 1776                           l3265 174A                           l3257 1716  
                         l3249 16EC                           l3361 2C30                           l3353 2C24  
                         l3345 2C10                           l3337 2C08                           l3329 2BC4  
                         l3505 1012                           l3441 0DF6                           l3417 0D68  
                         l3409 0D38                           l3601 0B14                           l3521 0878  
                         l3099 24BC                           l3187 2216                           l3179 21CC  
                         l4323 2FE0                           l4411 1E32                           l4403 1E0E  
                         l4235 2028                           l4227 1FC6                           l4243 2062  
                         l4219 1F90                           l4251 222A                           l4171 2A04  
                         l4331 13AC                           l3291 17E2                           l3283 17B6  
                         l3275 1782                           l3267 1758                           l3259 1724  
                         l3371 32F2                           l3363 2C36                           l3355 2C2A  
                         l3347 2C12                           l3339 2C0A                           l3507 1014  
                         l3451 0E40                           l3443 0E06                           l3435 0DBC  
                         l3419 0D78                           l3427 0D98                           l3611 0B74  
                         l3603 0B26                           l3531 08BE                           l3523 0888  
                         l3515 085C                           l4325 2FE4                           l4317 2F9A  
                         l4413 1E3A                           l4245 2072                           l4237 2048  
                         l4229 1FDA                           l4261 226E                           l4253 222E  
                         l4309 3194                           l4173 2A16                           l4341 141E  
                         l4333 13D4                           l4501 12E8                           l3293 17EE  
                         l3285 17C4                           l3277 1790                           l3269 1764  
                         l3373 32F4                           l3365 2C36                           l3357 2C2A  
                         l3349 2C24                           l3461 0E8E                           l3453 0E4C  
                         l3445 0E0E                           l3437 0DD6                           l3429 0DA8  
                         l3381 0CA0                           l3621 0BE2                           l3605 0B34  
                         l3541 08EA                           l3533 08C4                           l3525 0898  
                         l3517 0868                           l4319 2F9E                           l4423 1EE2  
                         l4415 1E6E                           l4407 1E14                           l4247 2092  
                         l4239 204A                           l4271 22D6                           l4263 228E  
                         l4255 223C                           l4175 2A20                           l4183 310E  
                         l4191 3248                           l4351 1468                           l4343 143A  
                         l4335 13F4                           l4503 130C                           l4511 133A  
                         l3295 17FC                           l3287 17D0                           l3279 179C  
                         l3375 33C4                           l3367 32E0                           l3359 2C30  
                         l3463 0EA4                           l3471 0ED4                           l3455 0E6A  
                         l3447 0E1E                           l3439 0DE6                           l3391 0CD4  
                         l3383 0CA2                           l3631 0C4A                           l3615 0B9E  
                         l3623 0BE6                           l3607 0B38                           l3551 0940  
                         l3543 08FA                           l3535 08CA                           l3527 08A8  
                         l3519 0876                           l3703 27B2                           l4425 1EF4  
                         l4409 1E2A                           l4281 234C                           l4273 2304  
                         l4265 22AC                           l4257 225C                           l4177 2A3E  
                         l4169 29F2                           l4185 311A                           l4193 3254  
                         l4361 1506                           l4353 1472                           l4345 144C  
                         l4337 1402                           l4329 138C                           l4513 1348  
                         l4505 131A                           l4441 1068                           l4433 1020  
                         l3297 1808                           l3289 17D4                           l4601 289A  
                         l3369 32E8                           l3473 0EE2                           l3465 0EAA  
                         l3457 0E6C                           l3449 0E32                           l3385 0CB2  
                         l3393 0CDC                           l3377 0C86                           l3641 0C74  
                         l3633 0C5A                           l3625 0C00                           l3617 0BAA  
                         l3609 0B46                           l3561 0980                           l3545 090A  
                         l3537 08D8                           l3529 08AE                           l3721 2816  
                         l3713 27DA                           l3705 27BC                           l4427 1F06  
                         l4419 1EA4                           l4283 236C                           l4275 2324  
                         l4267 22B4                           l4259 2260                           l4179 2A74  
                         l4187 312C                           l4195 3258                           l4291 2ADE  
                         l4371 15D6                           l4355 1478                           l4363 156A  
                         l4347 145A                           l4339 1404                           l4507 132E  
                         l4451 108E                           l4443 1074                           l4435 1044  
                         l3299 1816                           l4603 28C4                           l3651 2C58  
                         l3483 0F4C                           l3491 0F94                           l3475 0EE6  
                         l3467 0EB4                           l3459 0E7C                           l3395 0CEC  
                         l3387 0CC2                           l3379 0C92                           l3635 0C68  
                         l3627 0C14                           l3619 0BB8                           l3571 09CA  
                         l3563 098C                           l3555 0954                           l3547 0910  
                         l3539 08DA                           l3715 27E6                           l3707 27C6  
                         l3731 1AA2                           l4611 2CEE                           l4277 2336  
                         l4269 22C8                           l4189 3130                           l4197 3270  
                         l4293 2AEC                           l4381 161C                           l4365 1584  
                         l4373 15E4                           l4357 14FA                           l4349 1460  
                         l4445 1076                           l4437 1052                           l4517 1354  
                         l4541 2F22                           l4605 28E4                           l3821 2DA8  
                         l3661 2C8C                           l3653 2C5C                           l3645 2C3E  
                         l3493 0FAE                           l3485 0F58                           l3477 0EF4  
                         l3469 0EC2                           l3397 0CF2                           l3389 0CD2  
                         l3637 0C6A                           l3629 0C2E                           l3581 0A1C  
                         l3573 09D6                           l3565 09A4                           l3557 0960  
                         l3549 0930                           l3717 27F6                           l3741 1AE0  
                         l3733 1AB8                           l3725 1A3E                           l4621 2D50  
                         l4613 2D18                           ?_pad 0014                           l4391 1D9C  
                         l4279 233C                           l4295 2AF8                           l4287 2ABC  
                         l4383 1628                           l4375 15F6                           l4367 15A2  
                         l4359 1500                           l4519 1378                           l4471 1120  
                         l4463 10A0                           l4455 1094                           l4447 1088  
                         l4439 1064                           l4535 2EE6                           l4551 2F86  
                         l4543 2F48                           l4607 28FC                           l3823 2DBA  
                         l3831 3378                           l3671 2CC6                           l3663 2C94  
                         l3655 2C6A                           l3647 2C42                           l3495 0FC4  
                         l3487 0F66                           l3479 0F22                           l3399 0CF8  
                         l3639 0C70                           l3591 0A9A                           l3583 0A2C  
                         l3575 09E6                           l3567 09B0                           l3559 096A  
                         l3719 2806                           l3751 1B68                           l3743 1B12  
                         l3727 1A4E                           l4623 2D56                           l4615 2D2C  
                         l4631 2E76                           l4393 1DB0                           l4297 2B0C  
                         l4289 2ACA                           l4385 1630                           l4377 1604  
                         l4369 15BC                           l4481 1198                           l4473 1122  
                         l4537 2EEE                           l4545 2F5A                           l4609 2910  
                         l3825 2DCC                           l3817 2D80                           l3841 3382  
                         l3833 337A                           l3921 3308                           l3665 2CA2  
                         l3673 2CCC                           l3657 2C72                           l3649 2C50  
                         l3497 0FDE                           l3489 0F90                           l3593 0AD0  
                         l3585 0A48                           l3577 09F2                           l3569 09BC  
                         l3681 2722                           l3761 1BBE                           l3753 1B76  
                         l3745 1B14                           l3737 1ACC                           l3729 1A5C  
                         l4561 1C92                           l4625 2D64                           l4617 2D44  
                         l4641 2EAC                           l4633 2E7C                           l4395 1DB4  
                         l4299 2B20                           l4379 160A                           l4387 1640  
                         l4483 11B8                           l4491 1220                           l4475 1146  
                         l4467 10AC                           l4459 109A                           l4539 2EFC  
                         l4547 2F62                           l3915 3388                           l3771 3038  
                         l3827 2DEA                           l3819 2D90                           l3851 32C4  
                         l3843 3384                           l3835 337C                           l3931 3326  
                         l3923 330C                           l3675 2CDC                           l3667 2CB8  
                         l3659 2C84                           l3499 0FFA                           l3595 0ADE  
                         l3587 0A54                           l3579 0A02                           l3691 2778  
                         l3683 2738                           l3763 1BCE                           l3755 1B94  
                         l3747 1B20                           l3739 1AD4                           l4563 1D1A  
                         l4555 1BF0                           l4571 1854                           l4627 2D66  
                         l4619 2D4C                           l4643 2EB2                           l4635 2E80  
                         l4651 2E04                           l4397 1DB8                           l4493 1244  
                         l4485 11C6                           l4477 117C                           l4469 1100  
                         l4549 2F6A                           l4821 263A                           l3917 338C  
                         l3781 3070                           l3773 3048                           l3861 32CE  
                         l3853 32C6                           l3845 32B0                           l3837 337E  
                         l3829 3370                           l3933 332A                           l3925 3310  
                         l3677 2CE4                           l3669 2CC0                           l3597 0AFC  
                         l3589 0A70                           l3693 2788                           l3765 1BDC  
                         l3757 1B96                           l3749 1B5C                           l4565 1D62  
                         l4557 1C12                           l4581 1A22                           l4573 1892  
                         l4629 2D74                           l4645 2ECA                           l4637 2E86  
                         l4661 2E12                           l4653 2E08                           l4399 1DD4  
                         l4495 1268                           l4479 118A                           l4591 2836  
                         l4823 26F0                           l3919 339A                           l3783 3078  
                         l3775 3054                           l3871 32D8                           l3863 32D0  
                         l3855 32C8                           l3847 32B6                           l3839 3380  
                         l3927 3316                           l3599 0B06                           l3695 278C  
                         l3687 274C                           l3767 1BDE                           l3759 1B9A  
                         l4567 1D68                           l4559 1C3A                           l4575 1910  
                         l4583 30C8                           l4647 2ED6                           l4639 2E9E  
                         l4663 2E38                           l4655 2E0A                           l4497 12B0  
                         l4489 120E                           l4825 10D2                           l4593 2856  
                         l3785 307A                           l3777 3064                           l3881 33AA  
                         l3873 32DA                           l3865 32D2                           l3857 32CA  
                         l3849 32BA                           l3929 331A                           l3697 279A  
                         l3689 2776                           l4569 1D98                           l4577 195E  
                         l4585 30D4                           l3961 30B8                           l4649 2EE0  
                         l4665 2E50                           l4657 2E0C                           l4827 1E58  
                         l4595 286C                           l3875 339E                           l3787 307C  
                         l3779 3068                           l3891 33B4                           l3867 32D4  
                         l3859 32CC                           l4579 19F6                           l3883 33BC  
                         l4587 30FA                           l3955 3080                           l4659 2E0E  
                         l4829 2968                           l4597 2878                           l4589 2828  
                         l3877 33A6                           l3869 32D6                           l3957 308C  
                         l4599 288A                           l3879 33C0                           l3991 301E  
                         l3983 2FEC                           l3959 309E                           l3985 2FF2  
                         l3987 300A                           l3989 300C                           STR_1 0820  
                         STR_2 0846                           STR_3 083A                           STR_4 084F  
                         STR_5 0855                           STR_6 0812                           STR_7 0857  
                         STR_8 082E                           STR_9 0801                           u3000 0D06  
                         u3001 0D02                           u3010 0D18                           u3011 0D14  
                         u3100 0EC2                           u3020 0D28                           u3101 0EBE  
                         u3021 0D24                           u3110 0EE2                           u3030 0D68  
                         u3111 0EDE                           u3031 0D64                           u4000 22AC  
                         u3120 0EF4                           u3040 0DA8                           u3200 0876  
                         u4001 22A8                           u3121 0EF0                           u3041 0DA4  
                         u3201 0872                           u4010 22D6                           u3130 0F22  
                         u3050 0E1E                           u3210 0888                           u4011 22D2  
                         u3131 0F1E                           u3051 0E1A                           u3211 0884  
                         u4100 3242                           u4020 2304                           u3140 0F38  
                         u3060 0E40                           u3300 0B34                           u3220 0898  
                         u4021 2300                           u3141 0F34                           u3061 0E3C  
                         u3301 0B30                           u3221 0894                           u4110 2FB2  
                         u4030 234C                           u3150 0F4C                           u3070 0E6A  
                         u3310 0B46                           u3230 08D8                           u4111 2FAE  
                         u4031 2348                           u3151 0F48                           u3071 0E66  
                         u3311 0B42                           u3231 08D4                           u4120 2FE0  
                         u4040 2ACA                           u4200 1584                           u3400 2C6A  
                         u3160 0F66                           u3080 0E8E                           u3320 0B74  
                         u3240 08EA                           u4121 2FDC                           u4041 2AC6  
                         u4201 1580                           u3401 2C66                           u3161 0F62  
                         u3081 0E8A                           u3321 0B70                           u3241 08E6  
                         u4050 2AEC                           u4210 15A2                           u4130 13BC  
                         u3410 2C84                           u3170 0FAE                           u3090 0EA4  
                         u3330 0B8A                           u3250 08FA                           u4051 2AE8  
                         u4211 159E                           u4131 13B6                           u3411 2C80  
                         u3171 0FAA                           u3091 0EA0                           u3331 0B86  
                         u3251 08F6                           u2700 2110                           u4300 1E26  
                         u4060 2B42                           u4220 15BC                           u4140 13BE  
                         u3420 2CA2                           u3180 0FDE                           u3340 0B9E  
                         u3260 0930                           u3500 27F6                           u2605 240A  
                         u2701 210C                           u4301 1E22                           u4061 2B3E  
                         u4221 15B8                           u3421 2C9E                           u3181 0FDA  
                         u3341 0B9A                           u3261 092C                           u3501 27F2  
                         u2710 2182                           u4310 1EDC                           u4070 2B50  
                         u4230 15D6                           u4150 13D4                           u2630 266A  
                         u3430 2CB8                           u3190 100C                           u3350 0BB8  
                         u3270 0940                           u3510 2806                           u2615 243E  
                         u2711 217E                           u4311 1ED6                           u4071 2B4C  
                         u4231 15D2                           u4151 13D0                           u2631 2666  
                         u3431 2CB4                           u3191 1008                           u3351 0BB4  
                         u3271 093C                           u3511 2802                           u2720 21C8  
                         u4320 1EDE                           u4080 31AE                           u4240 15E4  
                         u4160 1402                           u4400 1206                           u2800 16D2  
                         u2640 268E                           u3440 2CDC                           u3360 0C00  
                         u3280 0ABA                           u3600 1BCE                           u3520 1A4E  
                         u2625 2482                           u2545 24EA                           u2721 21C4  
                         u4081 31AA                           u4241 15E0                           u4161 13FE  
                         u4401 1200                           u2801 16CE                           u2641 268A  
                         u3441 2CD8                           u3361 0BFC                           u3601 1BCA  
                         u3521 1A4A                           u2730 2228                           u4090 3240  
                         u4330 1EF4                           u4250 15F6                           u4170 141E  
                         u4410 1208                           u2810 16EC                           u2650 26B4  
                         u3370 0C2E                           u3290 0B14                           u3450 2738  
                         u3610 1BDC                           u3530 1A5C                           u2555 2504  
                         u2731 2224                           u4091 323A                           u4331 1EF0  
                         u4251 15F2                           u4171 141A                           u2811 16E8  
                         u2651 26B0                           u3371 0C2A                           u3291 0B10  
                         u3451 2734                           u3611 1BD8                           u3531 1A58  
                         u2740 29B8                           u4340 1F06                           u4260 1604  
                         u4180 144C                           u4420 1220                           u2900 17E2  
                         u2820 170A                           u4500 288A                           u2660 271C  
                         u3620 3048                           u3380 0C68                           u3460 276C  
                         u3540 1AB8                           u2565 252A                           u4341 1F02  
                         u4261 1600                           u4181 1448                           u4421 121C  
                         u2901 17DE                           u2821 1706                           u4501 2886  
                         u2661 2718                           u3621 3044                           u3381 0C64  
                         u3285 0AB0                           u3541 1AB4                           u2750 29E0  
                         u4270 161C                           u4190 145A                           u4430 1244  
                         u4350 1044                           u2910 17FC                           u2830 1724  
                         u4510 289A                           u3390 2C50                           u3470 279A  
                         u3550 1B0E                           u3710 309E                           u2575 239C  
                         u4271 1618                           u4191 1456                           u4431 1240  
                         u4351 1040                           u2911 17F8                           u2831 1720  
                         u4511 2896                           u3391 2C4C                           u3471 2796  
                         u3551 1B0A                           u3711 309A                           u2760 29F0  
                         u4280 1DD4                           u4440 1268                           u4360 1112  
                         u2920 1816                           u2840 173E                           u4520 2910  
                         u3480 27AE                           u3560 1B58                           u2680 3206  
                         u3720 30B8                           u2585 23C0                           u2761 29EC  
                         u4281 1DD0                           u4441 1264                           u4361 110E  
                         u2921 1812                           u2841 173A                           u4521 290C  
                         u3481 27AA                           u3465 2762                           u3561 1B54  
                         u2681 3202                           u3721 30B4                           u2690 20CE  
                         u4290 1E0A                           u4450 130C                           u4370 1120  
                         u2930 1830                           u2850 1758                           u2770 168C  
                         u3490 27D6                           u3570 1B76                           u4530 2D2C  
                         u2595 23E6                           u2747 29AE                           u2691 20CA  
                         u4291 1E06                           u4451 1308                           u4371 111C  
                         u2931 182C                           u2851 1754                           u2771 1688  
                         u3491 27D2                           u3571 1B72                           u4531 2D28  
                         u3900 3270                           u4380 1146                           u4460 2F3E  
                         u2940 1852                           u2860 1776                           u2780 169E  
                         u3580 1B86                           u4540 2D44                           u2757 29D6  
                         u3901 326C                           u4381 1142                           u4461 2F3A  
                         u2941 184E                           u2861 1772                           u2781 169A  
                         u3581 1B82                           u4541 2D40                           u3910 1F3E  
                         u4390 118A                           u2870 1790                           u2790 16B8  
                         u2950 2BEA                           u3590 1B94                           u4470 1D62  
                         u4550 2E26                           u3911 1F3A                           u4391 1186  
                         u2871 178C                           u2791 16B4                           u2951 2BE6  
                         u3591 1B90                           u4471 1D5E                           u4551 2E1C  
                         u3920 1F70                           u2880 17AA                           u2960 3306  
                         u4480 1D98                           u3921 1F6C                           u2881 17A6  
                         u2961 3302                           u4481 1D94                           u3850 2A04  
                         u2890 17C4                           u2970 0CA0                           u3931 1F9A  
                         u3851 2A00                           u2891 17C0                           u4707 2DD6  
                         u2971 0C9C                           u4491 30CE                           u3940 1FBE  
                         u3860 2A16                           u2980 0CB2                           u3941 1FBA  
                         u3861 2A12                           u4717 2DF4                           u2981 0CAE  
                         u3950 1FE8                           u3870 2A3E                           u2990 0CC2  
                         u4807 2562                           u3951 1FE4                           u3871 2A3A  
                         u4727 2B90                           u2991 0CBE                           u4647 2E44  
                         u3960 2028                           u3880 2A74                           u4568 2E2A  
                         u4817 256C                           u3961 2024                           u3881 2A70  
                         u4737 2BB8                           u4657 2E92                           u3970 2072  
                         u3890 3150                           u4578 2E5A                           u4907 24D0  
                         u4827 25E4                           u3971 206E                           u3891 314C  
                         u4747 2BCE                           u4667 2EBE                           u4579 2E6E  
                         u3980 223C                           i1l93 00AC                           u4837 25EE  
                         u3981 2238                           u4757 2C04                           u4677 2FFC  
                         u3990 226E                           u4847 25FA                           u3991 226A  
                         u4767 2C1A                           u4687 31EE                           u4857 2426  
                         u4777 2670                           u4697 2D9A                           u4867 2430  
                         u4787 2694                           u4877 24B4                           u4797 26BA  
                         u4887 24BE                           u4897 24C6                           i2l99 32AC  
                         _TMR0 000FD6                           _TMR2 000FCC                           _TMR3 000FB2  
                         abs@a 0016                           _dbuf 0098                           _atoi 1D9C  
                         _main 2E04                           _dtoa 138C                           _isrH 0008  
                         _isrL 0018                           _prec 0058                           _nout 0094  
                         pad@i 001B                           pad@p 0018                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001D                           fsr2l 000FD9  
                         btemp 005C                           prodh 000FF4                           prodl 000FF3  
                         start 00BC                ___fldiv@new_exp 0040   __end_of_appStateRecolectData 2D80  
              __end_of_Lcd_Cmd 2606                __end_of_Lcd_Out 29F2                   ___param_bank 000000  
                   _Lcd_Chr_CP 238E           __size_of_appLCD_Init 0084        __size_of_appCounterInit 000A  
                        ??_abs 0018                          ??_pad 001A        __size_of_appCounterStop 0004  
               setServo@pulsos 0008                  ___fltol@sign1 0050                __end_of___aodiv 20B4  
                        ?_atoi 000B                          ?_main 0001                          ?_dtoa 001F  
              __end_of___aomod 238E                          ?_isrH 0001                          ?_isrL 0001  
              __end_of_adcInit 3080                __end_of___fldiv 1020                          _ADRES 000FC3  
              __end_of___awmod 2CEE                __end_of___flmul 0C86                __end_of___fltol 2828  
      __end_of_appStateInitial 30C8                   vfpfcnvrt@fmt 0045                          _PORTB 000F81  
                        _TRISB 000F93                __end_of_appInit 3330          appSubGetData@cantidad 0086  
                        _datos 00B8                          _flags 005A                          _fputc 29F2  
                        _fputs 310E                __end_of_isdigit 3248                          atoi@n 0018  
                        pad@fp 0014                          atoi@s 000B                          _width 0096  
                        _putch 33C8                          dtoa@d 0021                          dtoa@i 0041  
                        dtoa@n 0039                          dtoa@p 0033                          dtoa@s 0037  
                        dtoa@w 0035                __end_of_teclado 1854                __end_of_isspace 2FEC  
                        pclath 000FFA                          tablat 000FF5                __end_of_warning 3036  
                        ttemp5 005D                          ttemp6 0060                          ttemp7 0064  
                        status 000FD8                          wtemp8 005D                __end_of_sprintf 2F9A  
         __end_of_appTimerInit 32DE           __end_of_appTimerStop 33C4               __end_of_Lcd_Init 2C3E  
              __initialization 3152                   __end_of_atoi 1F2C                   __end_of_main 2E76  
                 __end_of_dtoa 166A                   __end_of_isrH 32B0                   __end_of_isrL 00BC  
                       ??_atoi 000D                         ??_main 008C                         ??_dtoa 0029  
                       ??_isrH 0001                         ??_isrL 0001       __size_of_appCounterStart 0004  
                __activetblptr 000002                 _appGetElements 2E76          __end_of_setServoAngle 2722  
                       ?_fputc 0004                         ?_fputs 000D          __size_of_appISRConfig 0008  
                       ?_putch 0001                         i1l4671 0042                         i2l4041 32A4  
                       i2l4033 3280                         i1l4681 007C                         i1l4673 0044  
                       i2l4035 328E                         i1l4683 0080                         i1l4675 0048  
                       i1l4667 0026                         i2l4037 329C                         i1l4677 005A  
                       i1l4685 008C                         i1l4669 0034                         i2l4039 329E  
                       i1l4687 009C                         i1l4679 006A                         i1l4689 00A4  
                    ??_Lcd_Cmd 0004                  vfpfcnvrt@done 0068                         _TMR0IE 007F95  
                       _TMR0IF 007F92                         _TMR3IE 007D01                         _TMR3IF 007D09  
                    ??_Lcd_Out 000A               __end_of___xxtofl 1BF0                   vfprintf@cfmt 004D  
            ?_appSubGiveElemts 000C                    ?_Lcd_Chr_CP 0001                         _appADC 1BF0  
                    ??___aodiv 0014                      ??___aomod 0014                         ___wmul 3330  
                    ??_adcInit 0004                      ??___fldiv 0037                      ??___awmod 0056  
                    ??___flmul 001E                         _appBat 1854                      ??___fltol 004C  
           ??_appSubGiveElemts 000E                         _memset 20B4                         clear_0 3178  
              ___awmod@divisor 0054                      ??_appInit 0010         __end_of_appGetElements 2EE6  
              ___awmod@counter 0056                         pad@buf 0016                         dtoa@fp 001F  
                       _strlen 3248               __end_of_setServo 3308                   _appISRConfig 33B4  
                       fputc@c 0004               ?_appStateInitial 0001                         fputs@c 0011  
                       fputs@i 0012                         fputs@s 000D                      ??_isdigit 0006  
                    ??_teclado 0006                   __mediumconst 0000                      ??_isspace 0006  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         _appStateRecolectData 2CEE              adcGetValue@PinADC 0007                         putch@c 0001  
        __end_of_appSubGetData 2926                      ??_warning 000E               __end_of_vfprintf 2F48  
                    ??_sprintf 0058                   ___xxtofl@arg 0012                   ___xxtofl@exp 0011  
           setServoAngle@angle 0007                   ___xxtofl@val 0008                     __accesstop 0060  
      __end_of__initialization 3186          __end_of_appTimerStart 33AA                  ___rparam_used 000001  
                   ___fltol@f1 0048                 __pcstackCOMRAM 0001                   __pidataBANK0 3356  
               _appCounterInit 33AA                 _appCounterStop 33BC                  __end_of_fputc 2ABC  
                __end_of_fputs 3152                  __end_of_putch 33CA             __size_of_appElemts 0046  
              ?_appGetElements 0001                  ??_adcGetValue 0006          ?_appStateRecolectData 0001  
                    ?_Lcd_Init 0001              ??_appCounterStart 0004                        ??_fputc 0008  
                      ??_fputs 0011            __size_of_Lcd_Chr_CP 014E                        ??_putch 0004  
        __size_of_appTimerInit 002E                     __pbssBANK0 008E               setServoAngle@pin 0004  
        __size_of_appTimerStop 0004         __end_of_appCounterInit 33B4         __end_of_appCounterStop 33C0  
                      ?_appADC 0084                        ?___wmul 0004                        ?_appBat 0084  
                      ?_memset 0004                     appADC@data 0084                        ?_strlen 0004  
           __size_of_servoInit 0018                   _appTimerInit 32B0                      ?___xxtofl 0008  
                 _appTimerStop 33C0             __size_of_vfpfcnvrt 036C                     ??_Lcd_Init 0007  
          __end_of_adcGetValue 3210              __end_of_appElemts 310E                        _Lcd_Cmd 24DC  
                  setServo@pin 0009                        _Lcd_Out 2926        appSubGetData@data_Inout 0084  
                ??_appLCD_Init 000E                        __Hparam 0000                      ?_setServo 0008  
                      __Lparam 0000                ?_appCounterInit 0004                ?_appCounterStop 0001  
                      ___aodiv 1F2C                        ___aomod 222A                        _adcInit 3036  
                      ___fldiv 0C86                        ___awmod 2C3E                        ___flmul 085C  
                      ___fltol 2722                __size_of_appADC 01AC                __size_of___wmul 0026  
              __size_of_appBat 01E8                      ?_vfprintf 006C                     appBat@data 0084  
                 __psmallconst 0800                        __pcinit 3152                __size_of_memset 0176  
                      _appInit 3308                        __ramtop 0800                        __ptext0 2E04  
                      __ptext1 2E76                        __ptext2 2CEE                        __ptext3 3080  
                      __ptext4 2FEC                        __ptext5 30C8                        __ptext6 33BC  
                      __ptext7 1854                        __ptext8 1BF0                        __ptext9 31D4  
                    _T0CONbits 000FD5                __size_of_strlen 0036                      _T2CONbits 000FCA  
                 __size_of_abs 0040                   __size_of_pad 00C2         ??_appStateRecolectData 0058  
                      _isdigit 3210                     ??___xxtofl 000C                      _T3CONbits 000FB1  
             ___awmod@dividend 0052                        _teclado 166A                        _isspace 2F9A  
                      _warning 2FEC                        atoi@neg 0011                        _sprintf 2F48  
               __pintcode_body 327E           end_of_initialization 3186                        fputc@fp 0006  
                      memset@c 0006                        memset@k 000C                        memset@n 0008  
                      memset@s 000E                  __Lmediumconst 0000                        int_func 327E  
                      fputs@fp 000F              __end_of_servoInit 3388                     ??_setServo 000A  
         appCounterInit@reload 0004              __end_of_vfpfcnvrt 138C                      Lcd_Init@i 0008  
                 ??_Lcd_Chr_CP 0004                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 004D            __end_of_appLCD_Init 2E04                        strlen@a 0006  
                      strlen@s 0004                      _PORTAbits 000F80                      _PORTBbits 000F81  
                  _adcGetValue 31D4                  ___xxtofl@sign 0010                      _TRISAbits 000F92  
                    _TRISCbits 000F94                      _TRISDbits 000F95      __size_of_appSubGiveElemts 0016  
                    _TRISEbits 000F96                    ___fldiv@grs 0042                    ___fldiv@rem 003B  
           __end_of_Lcd_Chr_CP 24DC                     fp__warning 000E                    ___flmul@grs 0023  
       __size_of_setServoAngle 011C                  setServo@angle 000A               ??_appGetElements 0089  
               __end_of_appADC 1D9C                    vfpfcnvrt@ap 0047                    vfpfcnvrt@fp 0043  
                  vfpfcnvrt@ll 0060                 __end_of___wmul 3356                 __end_of_appBat 1A3C  
              _appCounterStart 33C4                 __end_of_memset 222A                 __end_of_strlen 327E  
          start_initialization 3152                    __end_of_abs 31D4                    __end_of_pad 2B7E  
                Lcd_Out@buffer 0008       __size_of_appStateInitial 0048              __size_of_Lcd_Init 00C0  
           fp__appStateInitial 000E                    _appLCD_Init 2D80                    vfprintf@fmt 006E  
                     ??_appADC 0058                       ??___wmul 0008                       ??_appBat 0086  
                  _appBat$2296 0088         __size_of_appSubGetData 00FE                    __pdataBANK0 00B8  
                     ??_memset 000A                     memset@dest 0004                       ??_strlen 0006  
                    ___fldiv@a 0033                      ___fldiv@b 002F         __size_of_appTimerStart 000C  
                    ___flmul@a 001A                      ___flmul@b 0016                    __pbssCOMRAM 0058  
                __pcstackBANK0 0060               ___aodiv@dividend 0004                  _setServoAngle 2606  
            __size_of___xxtofl 01B4        fp__appStateRecolectData 000E                       ?_Lcd_Cmd 0001  
             ??_appCounterInit 0006                       ?_Lcd_Out 0007               ??_appCounterStop 0004  
                    _atoi$2020 0017                      _atoi$2021 0015                      _atoi$2019 0013  
                    _appElemts 30C8                      _dtoa$1984 0031        __end_of_appCounterStart 33C8  
            appElemts@elements 0084                      __pintcode 0008                       ?___aodiv 0004  
                     ?___aomod 0004              __size_of_setServo 002A                       ?_adcInit 0001  
                     ?___fldiv 002F               ___aodiv@quotient 0016                       ?___awmod 0052  
                     ?___flmul 0016                       ?___fltol 0048                    __pintcodelo 0018  
                     ?_appInit 0001              __size_of_vfprintf 0062                    __smallconst 0800  
                     ?_isdigit 0004                   teclado@valor 0004                       ?_teclado 0004  
               ?_setServoAngle 0004                       ?_isspace 0004               _appSubGiveElemts 3388  
                     ?_warning 0001                       ?_sprintf 0072                  _appSubGetData 2828  
               __size_of_fputc 00CA                 __size_of_fputs 0044                 __size_of_putch 0002  
               ___wmul@product 0008                       _LATAbits 000F89                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _LATEbits 000F8D                  _appTimerStart 339E  
                     _IPR2bits 000FA2                       _PIE2bits 000FA0              ??_appStateInitial 000C  
                   ?_appElemts 0084                       i1u460_20 005A                       i1u460_21 0056  
                     i1u461_20 006A                       i1u461_21 0066                       i1u462_20 007C  
                     i1u462_21 0078                       i1u463_20 009C                       i1u463_21 0098  
                     i1u458_20 0034                       i1u458_21 0030                       i1u459_20 0042  
                     i1u459_21 003E                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     i2u382_40 328E                       i2u382_41 328A                       i2u383_40 329C  
                     i2u383_41 3298                       _GO_nDONE 007E11                       _RCONbits 000FD0  
                     Lcd_Out@x 0007                       Lcd_Out@y 000C                      _servoInit 3370  
                    _vfpfcnvrt 1020                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0004                  ?_appISRConfig 0001  
                 ?_adcGetValue 0004                   _isspace$2037 000A  __size_of_appStateRecolectData 0092  
                     _Lcd_Init 2B7E                 ?_appSubGetData 0084                    _INTCON2bits 000FF1  
                    copy_data0 3166                 ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A  
             __size_of_Lcd_Out 00CC                       __Hrparam 0000                     vfprintf@ap 0070  
                     __Lrparam 0000                     vfprintf@fp 006C               ?_appCounterStart 0001  
                   ?_servoInit 0001               __size_of___aodiv 0188               __size_of___aomod 0164  
             __size_of_adcInit 004A               __size_of___fldiv 039A               __size_of___awmod 00B0  
             __size_of___flmul 042A               __size_of___fltol 0106                  appADC@lm35val 0086  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000C                 ??_appISRConfig 0004  
              ___aodiv@counter 0014               __size_of_appInit 0028                ??_setServoAngle 0005  
                   sprintf@fmt 0074                       ___xxtofl 1A3C               appElemts@dataout 0086  
             __size_of_isdigit 0038                 Lcd_Chr_CP@data 0006               __size_of_teclado 01EA  
             __size_of_isspace 0052                       __ptext10 1A3C                       __ptext11 2722  
                     __ptext20 33B4                       __ptext12 085C                       __ptext21 33AA  
                     __ptext13 0C86                       __ptext30 166A                       __ptext22 3036  
                     __ptext14 2C3E                       __ptext31 2F48                       __ptext23 33C0  
                     __ptext15 3308                       __ptext40 3194                       __ptext32 2EE6  
                     __ptext24 339E                       __ptext16 3370                       __ptext41 222A  
                     __ptext33 1020                       __ptext25 3388                       __ptext17 32B0  
                     __ptext50 238E                       __ptext42 1F2C                       __ptext34 138C  
                     __ptext26 32DE                       __ptext18 2D80                       __ptext43 1D9C  
                     __ptext35 2ABC                       __ptext27 2606                       __ptext19 2B7E  
                     __ptext44 2F9A                       __ptext36 3248                       __ptext28 33C4  
                     __ptext45 3210                       __ptext37 310E                       __ptext29 2828  
                     __ptext46 3330                       __ptext38 29F2                       __ptext47 20B4  
                     __ptext39 33C8                       __ptext48 2926                       __ptext49 24DC  
             __size_of_warning 004A               __size_of_sprintf 0052                      setServo@i 000B  
                  Lcd_Cmd@data 0006                  __size_of_atoi 0190                  __size_of_main 0072  
                __size_of_dtoa 02DE                  __size_of_isrH 32A8                  __size_of_isrL 00A4  
                  ??_appElemts 0058                   ?_appLCD_Init 0001                       _setServo 32DE  
                     int$flags 005C                       _vfprintf 2EE6               ___aomod@dividend 0004  
           appSubGetData@inout 0088                  ?_appTimerInit 0001                    Lcd_Out@data 000D  
               _vfpfcnvrt$1999 006A                  ?_appTimerStop 0001                     _INTCONbits 000FF2  
              ??_appSubGetData 0058                       isdigit@c 0004                       intlevel1 0000  
                     intlevel2 0000                      sprintf@ap 007C                ??_appTimerStart 0004  
                     isspace@c 0004           appSubGiveElemts@data 000C       __end_of_appSubGiveElemts 339E  
               appElemts@F3571 008E                    ??_servoInit 0004                ___aomod@divisor 000C  
                  ??_vfpfcnvrt 0049                ___aomod@counter 0014                 ??_appTimerInit 0004  
                     sprintf@f 007E                       sprintf@s 0072                 ??_appTimerStop 0004  
      __size_of_appGetElements 0070              fp__appGetElements 000E           __size_of_adcGetValue 003C  
              _appStateInitial 3080                   ___aodiv@sign 0015           __end_of_appISRConfig 33BC  
                 ___aomod@sign 0015  
