

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 30 22:02:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.20
    66                           ; Generated 12/02/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4550 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataBANK0
   101  00302E                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _datos
   105  00302E  00                 	db	0
   106  00302F  00FF               	dw	255
   107  003031  00                 	db	0
   108  003032  0000               	dw	0
   109  003034  00                 	db	0
   110  003035  00                 	db	0
   111  003036  00                 	db	0
   112  003037  00                 	db	0
   113  003038  00                 	db	0
   114  003039  00                 	db	0
   115  00303A  00                 	db	0
   116  00303B  00                 	db	0
   117  00303C  00                 	db	0
   118  00303D  00                 	db	0
   119  00303E  00                 	db	0
   120  00303F  00                 	db	0
   121  003040  00                 	db	0
   122  003041  00                 	db	0
   123  003042  00                 	db	0
   124  003043  00                 	db	0
   125  003044  00                 	db	0
   126  003045  E0                 	db	low _appStateInitial
   127  003046  2F                 	db	high _appStateInitial
   128  0000                     _TMR3	set	4018
   129  0000                     _ADRES	set	4035
   130  0000                     _INTCONbits	set	4082
   131  0000                     _RCONbits	set	4048
   132  0000                     _PIE2bits	set	4000
   133  0000                     _IPR2bits	set	4002
   134  0000                     _PIR2bits	set	4001
   135  0000                     _T3CONbits	set	4017
   136  0000                     _LATBbits	set	3978
   137  0000                     _PIR1bits	set	3998
   138  0000                     _PR2	set	4043
   139  0000                     _TMR2	set	4044
   140  0000                     _TRISBbits	set	3987
   141  0000                     _T2CONbits	set	4042
   142  0000                     _LATDbits	set	3980
   143  0000                     _TRISDbits	set	3989
   144  0000                     _PORTBbits	set	3969
   145  0000                     _PORTB	set	3969
   146  0000                     _LATAbits	set	3977
   147  0000                     _TRISAbits	set	3986
   148  0000                     _INTCON2bits	set	4081
   149  0000                     _TRISB	set	3987
   150  0000                     _ADCON0bits	set	4034
   151  0000                     _ADCON2bits	set	4032
   152  0000                     _ADCON1bits	set	4033
   153  0000                     _TMR3IF	set	32009
   154  0000                     _TMR3IE	set	32001
   155  0000                     _GO_nDONE	set	32273
   156                           
   157                           	psect	smallconst
   158  000800                     __psmallconst:
   159                           	callstack 0
   160  000800  00                 	db	0
   161  000801                     STR_6:
   162  000801  43                 	db	67	;'C'
   163  000802  20                 	db	32
   164  000803  64                 	db	100	;'d'
   165  000804  65                 	db	101	;'e'
   166  000805  20                 	db	32
   167  000806  76                 	db	118	;'v'
   168  000807  61                 	db	97	;'a'
   169  000808  63                 	db	99	;'c'
   170  000809  75                 	db	117	;'u'
   171  00080A  6E                 	db	110	;'n'
   172  00080B  61                 	db	97	;'a'
   173  00080C  73                 	db	115	;'s'
   174  00080D  3A                 	db	58	;':'
   175  00080E  00                 	db	0
   176  00080F                     STR_1:
   177  00080F  54                 	db	84	;'T'
   178  000810  3A                 	db	58	;':'
   179  000811  25                 	db	37
   180  000812  30                 	db	48	;'0'
   181  000813  32                 	db	50	;'2'
   182  000814  64                 	db	100	;'d'
   183  000815  2E                 	db	46
   184  000816  25                 	db	37
   185  000817  30                 	db	48	;'0'
   186  000818  32                 	db	50	;'2'
   187  000819  64                 	db	100	;'d'
   188  00081A  20                 	db	32
   189  00081B  43                 	db	67	;'C'
   190  00081C  00                 	db	0
   191  00081D                     STR_3:
   192  00081D  42                 	db	66	;'B'
   193  00081E  69                 	db	105	;'i'
   194  00081F  65                 	db	101	;'e'
   195  000820  6E                 	db	110	;'n'
   196  000821  76                 	db	118	;'v'
   197  000822  65                 	db	101	;'e'
   198  000823  6E                 	db	110	;'n'
   199  000824  69                 	db	105	;'i'
   200  000825  64                 	db	100	;'d'
   201  000826  6F                 	db	111	;'o'
   202  000827  73                 	db	115	;'s'
   203  000828  00                 	db	0
   204  000829                     STR_2:
   205  000829  42                 	db	66	;'B'
   206  00082A  61                 	db	97	;'a'
   207  00082B  74                 	db	116	;'t'
   208  00082C  3A                 	db	58	;':'
   209  00082D  25                 	db	37
   210  00082E  30                 	db	48	;'0'
   211  00082F  32                 	db	50	;'2'
   212  000830  64                 	db	100	;'d'
   213  000831  00                 	db	0
   214  000832                     STR_4:
   215  000832  53                 	db	83	;'S'
   216  000833  49                 	db	73	;'I'
   217  000834  43                 	db	67	;'C'
   218  000835  43                 	db	67	;'C'
   219  000836  56                 	db	86	;'V'
   220  000837  00                 	db	0
   221  000838                     STR_5:
   222  000838  23                 	db	35
   223  000839  3A                 	db	58	;':'
   224  00083A  25                 	db	37
   225  00083B  64                 	db	100	;'d'
   226  00083C  00                 	db	0
   227  00083D  00                 	db	0	; dummy byte at the end
   228  0000                     
   229                           ; #config settings
   230                           
   231                           	psect	cinit
   232  002E7E                     __pcinit:
   233                           	callstack 0
   234  002E7E                     start_initialization:
   235                           	callstack 0
   236  002E7E                     __initialization:
   237                           	callstack 0
   238                           
   239                           ; Initialize objects allocated to BANK0 (25 bytes)
   240                           ; load TBLPTR registers with __pidataBANK0
   241  002E7E  0E2E               	movlw	low __pidataBANK0
   242  002E80  6EF6               	movwf	tblptrl,c
   243  002E82  0E30               	movlw	high __pidataBANK0
   244  002E84  6EF7               	movwf	tblptrh,c
   245  002E86  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   246  002E88  6EF8               	movwf	tblptru,c
   247  002E8A  EE00  F0B8         	lfsr	0,__pdataBANK0
   248  002E8E  EE10 F019          	lfsr	1,25
   249  002E92                     copy_data0:
   250  002E92  0009               	tblrd		*+
   251  002E94  CFF5 FFEE          	movff	tablat,postinc0
   252  002E98  50E5               	movf	postdec1,w,c
   253  002E9A  50E1               	movf	fsr1l,w,c
   254  002E9C  E1FA               	bnz	copy_data0
   255                           
   256                           ; Clear objects allocated to BANK0 (42 bytes)
   257  002E9E  EE00  F08E         	lfsr	0,__pbssBANK0
   258  002EA2  0E2A               	movlw	42
   259  002EA4                     clear_0:
   260  002EA4  6AEE               	clrf	postinc0,c
   261  002EA6  06E8               	decf	wreg,f,c
   262  002EA8  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to COMRAM (4 bytes)
   265  002EAA  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   266  002EAC  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   267  002EAE  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   268  002EB0  6A58               	clrf	__pbssCOMRAM& (0+255),c
   269  002EB2                     end_of_initialization:
   270                           	callstack 0
   271  002EB2                     __end_of__initialization:
   272                           	callstack 0
   273  002EB2  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274  002EB4  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275  002EB6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  002EB8  6EF8               	movwf	tblptru,c
   277  002EBA  0100               	movlb	0
   278  002EBC  EFE8  F015         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281  000058                     __pbssCOMRAM:
   282                           	callstack 0
   283  000058                     _prec:
   284                           	callstack 0
   285  000058                     	ds	2
   286  00005A                     _flags:
   287                           	callstack 0
   288  00005A                     	ds	2
   289                           
   290                           	psect	bssBANK0
   291  00008E                     __pbssBANK0:
   292                           	callstack 0
   293  00008E                     	ds	6
   294  000094                     _nout:
   295                           	callstack 0
   296  000094                     	ds	2
   297  000096                     _width:
   298                           	callstack 0
   299  000096                     	ds	2
   300  000098                     _dbuf:
   301                           	callstack 0
   302  000098                     	ds	32
   303                           
   304                           	psect	dataBANK0
   305  0000B8                     __pdataBANK0:
   306                           	callstack 0
   307  0000B8                     _datos:
   308                           	callstack 0
   309  0000B8                     	ds	25
   310                           
   311                           	psect	cstackBANK0
   312  000060                     __pcstackBANK0:
   313                           	callstack 0
   314  000060                     vfpfcnvrt@ll:
   315                           	callstack 0
   316                           
   317                           ; 8 bytes @ 0x0
   318  000060                     	ds	8
   319  000068                     vfpfcnvrt@done:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x8
   323  000068                     	ds	2
   324  00006A                     _vfpfcnvrt$1734:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0xA
   328  00006A                     	ds	2
   329  00006C                     ?_vfprintf:
   330                           	callstack 0
   331  00006C                     vfprintf@fp:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xC
   335  00006C                     	ds	2
   336  00006E                     vfprintf@fmt:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0xE
   340  00006E                     	ds	2
   341  000070                     vfprintf@ap:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x10
   345  000070                     	ds	2
   346  000072                     ?_sprintf:
   347                           	callstack 0
   348  000072                     sprintf@s:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x12
   352  000072                     	ds	2
   353  000074                     sprintf@fmt:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x14
   357  000074                     	ds	8
   358  00007C                     sprintf@ap:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x1C
   362  00007C                     	ds	2
   363  00007E                     sprintf@f:
   364                           	callstack 0
   365                           
   366                           ; 6 bytes @ 0x1E
   367  00007E                     	ds	6
   368  000084                     appADC@data:
   369                           	callstack 0
   370  000084                     appBat@data:
   371                           	callstack 0
   372  000084                     appElemts@elements:
   373                           	callstack 0
   374  000084                     appSubGetData@data_Inout:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x24
   378  000084                     	ds	2
   379  000086                     ??_appBat:
   380  000086                     appSubGetData@cantidad:
   381                           	callstack 0
   382  000086                     appADC@lm35val:
   383                           	callstack 0
   384  000086                     appElemts@dataout:
   385                           	callstack 0
   386                           
   387                           ; 6 bytes @ 0x26
   388  000086                     	ds	2
   389  000088                     appSubGetData@inout:
   390                           	callstack 0
   391  000088                     _appBat$2033:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x28
   395  000088                     	ds	1
   396  000089                     ??_appGetElements:
   397                           
   398                           ; 1 bytes @ 0x29
   399  000089                     	ds	3
   400  00008C                     ??_main:
   401                           
   402                           ; 1 bytes @ 0x2C
   403  00008C                     	ds	2
   404                           
   405                           	psect	cstackCOMRAM
   406  000001                     __pcstackCOMRAM:
   407                           	callstack 0
   408  000001                     ??_isrL:
   409  000001                     
   410                           ; 1 bytes @ 0x0
   411  000001                     	ds	3
   412  000004                     ??_Lcd_Cmd:
   413  000004                     ??_Lcd_Chr_CP:
   414  000004                     ??_adcInit:
   415  000004                     ?_strlen:
   416                           	callstack 0
   417  000004                     ?_isdigit:
   418                           	callstack 0
   419  000004                     ?_isspace:
   420                           	callstack 0
   421  000004                     ?_adcGetValue:
   422                           	callstack 0
   423  000004                     ?___wmul:
   424                           	callstack 0
   425  000004                     ?___aodiv:
   426                           	callstack 0
   427  000004                     ?___aomod:
   428                           	callstack 0
   429  000004                     teclado@valor:
   430                           	callstack 0
   431  000004                     ___wmul@multiplier:
   432                           	callstack 0
   433  000004                     memset@dest:
   434                           	callstack 0
   435  000004                     isdigit@c:
   436                           	callstack 0
   437  000004                     isspace@c:
   438                           	callstack 0
   439  000004                     fputc@c:
   440                           	callstack 0
   441  000004                     strlen@s:
   442                           	callstack 0
   443  000004                     ___aodiv@dividend:
   444                           	callstack 0
   445  000004                     ___aomod@dividend:
   446                           	callstack 0
   447                           
   448                           ; 8 bytes @ 0x3
   449  000004                     	ds	1
   450  000005                     adcInit@ADC_PINs:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x4
   454  000005                     	ds	1
   455  000006                     ??_isdigit:
   456  000006                     ??_isspace:
   457  000006                     ??_adcGetValue:
   458  000006                     Lcd_Chr_CP@data:
   459                           	callstack 0
   460  000006                     Lcd_Cmd@data:
   461                           	callstack 0
   462  000006                     ___wmul@multiplicand:
   463                           	callstack 0
   464  000006                     memset@c:
   465                           	callstack 0
   466  000006                     fputc@fp:
   467                           	callstack 0
   468  000006                     strlen@a:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x5
   472  000006                     	ds	1
   473  000007                     ??_Lcd_Init:
   474  000007                     adcGetValue@PinADC:
   475                           	callstack 0
   476  000007                     Lcd_Out@x:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x6
   480  000007                     	ds	1
   481  000008                     ??_fputc:
   482  000008                     ?___xxtofl:
   483                           	callstack 0
   484  000008                     Lcd_Init@i:
   485                           	callstack 0
   486  000008                     Lcd_Out@buffer:
   487                           	callstack 0
   488  000008                     ___wmul@product:
   489                           	callstack 0
   490  000008                     memset@n:
   491                           	callstack 0
   492  000008                     ___xxtofl@val:
   493                           	callstack 0
   494                           
   495                           ; 4 bytes @ 0x7
   496  000008                     	ds	2
   497  00000A                     ??_memset:
   498  00000A                     ??_Lcd_Out:
   499  00000A                     _isspace$1772:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x9
   503  00000A                     	ds	1
   504  00000B                     ?_atoi:
   505                           	callstack 0
   506  00000B                     atoi@s:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xA
   510  00000B                     	ds	1
   511  00000C                     ??___xxtofl:
   512  00000C                     Lcd_Out@y:
   513                           	callstack 0
   514  00000C                     memset@k:
   515                           	callstack 0
   516  00000C                     ___aodiv@divisor:
   517                           	callstack 0
   518  00000C                     ___aomod@divisor:
   519                           	callstack 0
   520                           
   521                           ; 8 bytes @ 0xB
   522  00000C                     	ds	1
   523  00000D                     ??_atoi:
   524  00000D                     Lcd_Out@data:
   525                           	callstack 0
   526  00000D                     fputs@s:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xC
   530  00000D                     	ds	1
   531  00000E                     ??_appLCD_Init:
   532  00000E                     memset@s:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xD
   536  00000E                     	ds	1
   537  00000F                     fputs@fp:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0xE
   541  00000F                     	ds	1
   542  000010                     ___xxtofl@sign:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0xF
   546  000010                     	ds	1
   547  000011                     ___xxtofl@exp:
   548                           	callstack 0
   549  000011                     fputs@c:
   550                           	callstack 0
   551  000011                     atoi@neg:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x10
   555  000011                     	ds	1
   556  000012                     fputs@i:
   557                           	callstack 0
   558  000012                     ___xxtofl@arg:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x11
   562  000012                     	ds	1
   563  000013                     _atoi$1754:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x12
   567  000013                     	ds	1
   568  000014                     ?_pad:
   569                           	callstack 0
   570  000014                     ___aodiv@counter:
   571                           	callstack 0
   572  000014                     ___aomod@counter:
   573                           	callstack 0
   574  000014                     pad@fp:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x13
   578  000014                     	ds	1
   579  000015                     ___aodiv@sign:
   580                           	callstack 0
   581  000015                     ___aomod@sign:
   582                           	callstack 0
   583  000015                     _atoi$1756:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587  000015                     	ds	1
   588  000016                     ?_abs:
   589                           	callstack 0
   590  000016                     ?___flmul:
   591                           	callstack 0
   592  000016                     pad@buf:
   593                           	callstack 0
   594  000016                     abs@a:
   595                           	callstack 0
   596  000016                     ___flmul@b:
   597                           	callstack 0
   598  000016                     ___aodiv@quotient:
   599                           	callstack 0
   600                           
   601                           ; 8 bytes @ 0x15
   602  000016                     	ds	1
   603  000017                     _atoi$1755:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x16
   607  000017                     	ds	1
   608  000018                     ??_abs:
   609  000018                     pad@p:
   610                           	callstack 0
   611  000018                     atoi@n:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x17
   615  000018                     	ds	2
   616  00001A                     ??_pad:
   617  00001A                     ___flmul@a:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x19
   621  00001A                     	ds	1
   622  00001B                     pad@i:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x1A
   626  00001B                     	ds	2
   627  00001D                     pad@w:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x1C
   631  00001D                     	ds	1
   632  00001E                     ??___flmul:
   633                           
   634                           ; 1 bytes @ 0x1D
   635  00001E                     	ds	1
   636  00001F                     ?_dtoa:
   637                           	callstack 0
   638  00001F                     dtoa@fp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x1E
   642  00001F                     	ds	2
   643  000021                     dtoa@d:
   644                           	callstack 0
   645                           
   646                           ; 8 bytes @ 0x20
   647  000021                     	ds	1
   648  000022                     ___flmul@sign:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x21
   652  000022                     	ds	1
   653  000023                     ___flmul@grs:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x22
   657  000023                     	ds	4
   658  000027                     ___flmul@aexp:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x26
   662  000027                     	ds	1
   663  000028                     ___flmul@bexp:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x27
   667  000028                     	ds	1
   668  000029                     ??_dtoa:
   669  000029                     ___flmul@prod:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x28
   673  000029                     	ds	4
   674  00002D                     ___flmul@temp:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x2C
   678  00002D                     	ds	2
   679  00002F                     ?___fldiv:
   680                           	callstack 0
   681  00002F                     ___fldiv@b:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x2E
   685  00002F                     	ds	2
   686  000031                     _dtoa$1719:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x30
   690  000031                     	ds	2
   691  000033                     dtoa@p:
   692                           	callstack 0
   693  000033                     ___fldiv@a:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x32
   697  000033                     	ds	2
   698  000035                     dtoa@w:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x34
   702  000035                     	ds	2
   703  000037                     ??___fldiv:
   704  000037                     dtoa@s:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x36
   708  000037                     	ds	2
   709  000039                     dtoa@n:
   710                           	callstack 0
   711                           
   712                           ; 8 bytes @ 0x38
   713  000039                     	ds	2
   714  00003B                     ___fldiv@rem:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x3A
   718  00003B                     	ds	4
   719  00003F                     ___fldiv@sign:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x3E
   723  00003F                     	ds	1
   724  000040                     ___fldiv@new_exp:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x3F
   728  000040                     	ds	1
   729  000041                     dtoa@i:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x40
   733  000041                     	ds	1
   734  000042                     ___fldiv@grs:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x41
   738  000042                     	ds	1
   739  000043                     ?_vfpfcnvrt:
   740                           	callstack 0
   741  000043                     vfpfcnvrt@fp:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x42
   745  000043                     	ds	2
   746  000045                     vfpfcnvrt@fmt:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x44
   750  000045                     	ds	1
   751  000046                     ___fldiv@bexp:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x45
   755  000046                     	ds	1
   756  000047                     ___fldiv@aexp:
   757                           	callstack 0
   758  000047                     vfpfcnvrt@ap:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x46
   762  000047                     	ds	1
   763  000048                     ?___fltol:
   764                           	callstack 0
   765  000048                     ___fltol@f1:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x47
   769  000048                     	ds	1
   770  000049                     ??_vfpfcnvrt:
   771                           
   772                           ; 1 bytes @ 0x48
   773  000049                     	ds	3
   774  00004C                     ??___fltol:
   775                           
   776                           ; 1 bytes @ 0x4B
   777  00004C                     	ds	1
   778  00004D                     vfprintf@cfmt:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x4C
   782  00004D                     	ds	3
   783  000050                     ___fltol@sign1:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x4F
   787  000050                     	ds	1
   788  000051                     ___fltol@exp1:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x50
   792  000051                     	ds	1
   793  000052                     ?___awmod:
   794                           	callstack 0
   795  000052                     ___awmod@dividend:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x51
   799  000052                     	ds	2
   800  000054                     ___awmod@divisor:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x53
   804  000054                     	ds	2
   805  000056                     ___awmod@counter:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x55
   809  000056                     	ds	1
   810  000057                     ___awmod@sign:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x56
   814  000057                     	ds	1
   815  000058                     
   816                           ; 1 bytes @ 0x57
   817 ;;
   818 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   819 ;;
   820 ;; *************** function _main *****************
   821 ;; Defined at:
   822 ;;		line 12 in file "main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   836 ;;      Params:         0       0       0       0       0       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0       0       0       0       0
   838 ;;      Temps:          0       2       0       0       0       0       0       0       0
   839 ;;      Totals:         0       2       0       0       0       0       0       0       0
   840 ;;Total ram usage:        2 bytes
   841 ;; Hardware stack levels required when called:   12
   842 ;; This function calls:
   843 ;;		_appGetElements
   844 ;;		_appInit
   845 ;;		_appStateInitial
   846 ;;		_appStateRecolectData
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text0
   853  002BD0                     __ptext0:
   854                           	callstack 0
   855  002BD0                     _main:
   856                           	callstack 19
   857  002BD0                     
   858                           ;main.c: 14:     TRISB = 0xF0;
   859  002BD0  0EF0               	movlw	240
   860  002BD2  6E93               	movwf	147,c	;volatile
   861  002BD4                     
   862                           ;main.c: 15:     INTCON2bits.RBPU = 0;
   863  002BD4  9EF1               	bcf	241,7,c	;volatile
   864  002BD6                     
   865                           ;main.c: 16:     TRISAbits.TRISA3 = 0;
   866  002BD6  9692               	bcf	146,3,c	;volatile
   867  002BD8                     
   868                           ;main.c: 17:     appInit();
   869  002BD8  EC24  F018         	call	_appInit	;wreg free
   870  002BDC                     l4227:
   871                           
   872                           ;main.c: 19:     {;main.c: 20:         LATAbits.LA3 = !LATAbits.LA3;
   873  002BDC  A689               	btfss	137,3,c	;volatile
   874  002BDE  EFF3  F015         	goto	u4311
   875  002BE2  EFF8  F015         	goto	u4310
   876  002BE6                     u4311:
   877  002BE6  0100               	movlb	0	; () banked
   878  002BE8  6B8C               	clrf	??_main& (0+255),b
   879  002BEA  2B8C               	incf	??_main& (0+255),f,b
   880  002BEC  EFFA  F015         	goto	u4328
   881  002BF0                     u4310:
   882  002BF0  0100               	movlb	0	; () banked
   883  002BF2  6B8C               	clrf	??_main& (0+255),b
   884  002BF4                     u4328:
   885  002BF4  478C               	rlncf	??_main& (0+255),f,b
   886  002BF6  478C               	rlncf	??_main& (0+255),f,b
   887  002BF8  478C               	rlncf	??_main& (0+255),f,b
   888  002BFA  5089               	movf	137,w,c	;volatile
   889  002BFC  198C               	xorwf	??_main& (0+255),w,b
   890  002BFE  0BF7               	andlw	-9
   891  002C00  198C               	xorwf	??_main& (0+255),w,b
   892  002C02  6E89               	movwf	137,c	;volatile
   893  002C04                     
   894                           ; BSR set to: 0
   895                           ;main.c: 21:         _delay((unsigned long)((100)*(12000000/4000.0)));
   896  002C04  0E02               	movlw	2
   897  002C06  0100               	movlb	0	; () banked
   898  002C08  6F8D               	movwf	(??_main+1)& (0+255),b
   899  002C0A  0E86               	movlw	134
   900  002C0C  6F8C               	movwf	??_main& (0+255),b
   901  002C0E  0E99               	movlw	153
   902  002C10                     u4397:
   903  002C10  2EE8               	decfsz	wreg,f,c
   904  002C12  D7FE               	bra	u4397
   905  002C14  2F8C               	decfsz	??_main& (0+255),f,b
   906  002C16  D7FC               	bra	u4397
   907  002C18  2F8D               	decfsz	(??_main+1)& (0+255),f,b
   908  002C1A  D7FA               	bra	u4397
   909  002C1C                     
   910                           ;main.c: 22:         datos.nextFunc();
   911  002C1C  EE20  F0CF         	lfsr	2,_datos+23
   912  002C20  D802               	call	u4338
   913  002C22  EF1D  F016         	goto	u4339
   914  002C26                     u4338:
   915  002C26  0005               	push	
   916  002C28  6EFA               	movwf	pclath,c
   917  002C2A  50DE               	movf	postinc2,w,c
   918  002C2C  6EFD               	movwf	tosl,c
   919  002C2E  50DE               	movf	postinc2,w,c
   920  002C30  6EFE               	movwf	tosh,c
   921  002C32  50F8               	movf	tblptru,w,c
   922  002C34  6EFF               	movwf	tosu,c
   923  002C36  50FA               	movf	pclath,w,c
   924  002C38  0012               	return		;indir
   925  002C3A                     u4339:
   926  002C3A  EFEE  F015         	goto	l4227
   927  002C3E  EF55  F000         	goto	start
   928  002C42                     __end_of_main:
   929                           	callstack 0
   930                           
   931 ;; *************** function _appGetElements *****************
   932 ;; Defined at:
   933 ;;		line 41 in file "app.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         0       0       0       0       0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0
   949 ;;      Temps:          0       2       0       0       0       0       0       0       0
   950 ;;      Totals:         0       2       0       0       0       0       0       0       0
   951 ;;Total ram usage:        2 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:   11
   954 ;; This function calls:
   955 ;;		_Lcd_Cmd
   956 ;;		_appSubGetData
   957 ;;		_appTimerStart
   958 ;;		_appTimerStop
   959 ;; This function is called by:
   960 ;;		_isrL
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text1
   966  002C42                     __ptext1:
   967                           	callstack 0
   968  002C42                     _appGetElements:
   969                           	callstack 19
   970  002C42                     
   971                           ;app.c: 43:     datos.state = 0;
   972  002C42  0E00               	movlw	0
   973  002C44  0100               	movlb	0	; () banked
   974  002C46  6FBB               	movwf	(_datos+3)& (0+255),b
   975  002C48                     
   976                           ; BSR set to: 0
   977                           ;app.c: 44:     appTimerStop();
   978  002C48  EC47  F018         	call	_appTimerStop	;wreg free
   979  002C4C                     
   980                           ;app.c: 45:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
   981  002C4C  0E01               	movlw	1
   982  002C4E  EC2B  F012         	call	_Lcd_Cmd
   983  002C52  0E02               	movlw	2
   984  002C54  0100               	movlb	0	; () banked
   985  002C56  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
   986  002C58  0E86               	movlw	134
   987  002C5A  6F89               	movwf	??_appGetElements& (0+255),b
   988  002C5C  0E99               	movlw	153
   989  002C5E                     u4407:
   990  002C5E  2EE8               	decfsz	wreg,f,c
   991  002C60  D7FE               	bra	u4407
   992  002C62  2F89               	decfsz	??_appGetElements& (0+255),f,b
   993  002C64  D7FC               	bra	u4407
   994  002C66  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
   995  002C68  D7FA               	bra	u4407
   996  002C6A                     
   997                           ;app.c: 46:     appSubGetData(&datos);
   998  002C6A  0EB8               	movlw	low _datos
   999  002C6C  0100               	movlb	0	; () banked
  1000  002C6E  6F84               	movwf	appSubGetData@data_Inout& (0+255),b
  1001  002C70  0E00               	movlw	high _datos
  1002  002C72  6F85               	movwf	(appSubGetData@data_Inout+1)& (0+255),b
  1003  002C74  EC43  F013         	call	_appSubGetData	;wreg free
  1004  002C78                     
  1005                           ;app.c: 47:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  1006  002C78  0E01               	movlw	1
  1007  002C7A  EC2B  F012         	call	_Lcd_Cmd
  1008  002C7E  0E02               	movlw	2
  1009  002C80  0100               	movlb	0	; () banked
  1010  002C82  6F8A               	movwf	(??_appGetElements+1)& (0+255),b
  1011  002C84  0E86               	movlw	134
  1012  002C86  6F89               	movwf	??_appGetElements& (0+255),b
  1013  002C88  0E99               	movlw	153
  1014  002C8A                     u4417:
  1015  002C8A  2EE8               	decfsz	wreg,f,c
  1016  002C8C  D7FE               	bra	u4417
  1017  002C8E  2F89               	decfsz	??_appGetElements& (0+255),f,b
  1018  002C90  D7FC               	bra	u4417
  1019  002C92  2F8A               	decfsz	(??_appGetElements+1)& (0+255),f,b
  1020  002C94  D7FA               	bra	u4417
  1021  002C96                     
  1022                           ;app.c: 48:     datos.nextFunc = appStateInitial;
  1023  002C96  0EE0               	movlw	low _appStateInitial
  1024  002C98  0100               	movlb	0	; () banked
  1025  002C9A  6FCF               	movwf	(_datos+23)& (0+255),b
  1026  002C9C  0E2F               	movlw	high _appStateInitial
  1027  002C9E  6FD0               	movwf	(_datos+24)& (0+255),b
  1028  002CA0                     
  1029                           ; BSR set to: 0
  1030                           ;app.c: 49:     appTimerStart();
  1031  002CA0  EC3A  F018         	call	_appTimerStart	;wreg free
  1032  002CA4  0012               	return		;funcret
  1033  002CA6                     __end_of_appGetElements:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _appStateInitial *****************
  1037 ;; Defined at:
  1038 ;;		line 30 in file "app.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    3
  1059 ;; This function calls:
  1060 ;;		_teclado
  1061 ;; This function is called by:
  1062 ;;		_appStateRecolectData
  1063 ;;		_appGetElements
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text2
  1069  002FE0                     __ptext2:
  1070                           	callstack 0
  1071  002FE0                     _appStateInitial:
  1072                           	callstack 27
  1073  002FE0                     
  1074                           ;app.c: 33:     teclado(&datos.character);
  1075  002FE0  0EBE               	movlw	low (_datos+6)
  1076  002FE2  6E04               	movwf	teclado@valor^0,c
  1077  002FE4  0E00               	movlw	high (_datos+6)
  1078  002FE6  6E05               	movwf	(teclado@valor+1)^0,c
  1079  002FE8  EC26  F00B         	call	_teclado	;wreg free
  1080  002FEC                     
  1081                           ;app.c: 34:     if(datos.character != 0)
  1082  002FEC  0100               	movlb	0	; () banked
  1083  002FEE  51BE               	movf	(_datos+6)& (0+255),w,b
  1084  002FF0  B4D8               	btfsc	status,2,c
  1085  002FF2  EFFD  F017         	goto	u3551
  1086  002FF6  EFFF  F017         	goto	u3550
  1087  002FFA                     u3551:
  1088  002FFA  EF03  F018         	goto	l256
  1089  002FFE                     u3550:
  1090  002FFE                     
  1091                           ; BSR set to: 0
  1092                           ;app.c: 35:     {;app.c: 36:         datos.state = 1;
  1093  002FFE  0E01               	movlw	1
  1094  003000  6FBB               	movwf	(_datos+3)& (0+255),b
  1095                           
  1096                           ;app.c: 37:         datos.character = 0;
  1097  003002  0E00               	movlw	0
  1098  003004  6FBE               	movwf	(_datos+6)& (0+255),b
  1099  003006                     l256:
  1100                           
  1101                           ; BSR set to: 0
  1102  003006  0012               	return		;funcret
  1103  003008                     __end_of_appStateInitial:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _appStateRecolectData *****************
  1107 ;; Defined at:
  1108 ;;		line 23 in file "app.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1125 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:   11
  1129 ;; This function calls:
  1130 ;;		_appADC
  1131 ;;		_appBat
  1132 ;;		_appElemts
  1133 ;; This function is called by:
  1134 ;;		_isrL
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text3
  1140  002F74                     __ptext3:
  1141                           	callstack 0
  1142  002F74                     _appStateRecolectData:
  1143                           	callstack 19
  1144  002F74                     
  1145                           ;app.c: 25:     appADC(&datos);
  1146  002F74  0EB8               	movlw	low _datos
  1147  002F76  0100               	movlb	0	; () banked
  1148  002F78  6F84               	movwf	appADC@data& (0+255),b
  1149  002F7A  0E00               	movlw	high _datos
  1150  002F7C  6F85               	movwf	(appADC@data+1)& (0+255),b
  1151  002F7E  EC89  F011         	call	_appADC	;wreg free
  1152                           
  1153                           ;app.c: 26:     appBat(&datos);
  1154  002F82  0EB8               	movlw	low _datos
  1155  002F84  0100               	movlb	0	; () banked
  1156  002F86  6F84               	movwf	appBat@data& (0+255),b
  1157  002F88  0E00               	movlw	high _datos
  1158  002F8A  6F85               	movwf	(appBat@data+1)& (0+255),b
  1159  002F8C  EC1B  F00C         	call	_appBat	;wreg free
  1160                           
  1161                           ;app.c: 27:     appElemts(&datos.elements);
  1162  002F90  0EB9               	movlw	low (_datos+1)
  1163  002F92  0100               	movlb	0	; () banked
  1164  002F94  6F84               	movwf	appElemts@elements& (0+255),b
  1165  002F96  0E00               	movlw	high (_datos+1)
  1166  002F98  6F85               	movwf	(appElemts@elements+1)& (0+255),b
  1167  002F9A  ECFA  F016         	call	_appElemts	;wreg free
  1168  002F9E                     
  1169                           ;app.c: 28:     datos.nextFunc = appStateInitial;
  1170  002F9E  0EE0               	movlw	low _appStateInitial
  1171  002FA0  0100               	movlb	0	; () banked
  1172  002FA2  6FCF               	movwf	(_datos+23)& (0+255),b
  1173  002FA4  0E2F               	movlw	high _appStateInitial
  1174  002FA6  6FD0               	movwf	(_datos+24)& (0+255),b
  1175  002FA8                     
  1176                           ; BSR set to: 0
  1177  002FA8  0012               	return		;funcret
  1178  002FAA                     __end_of_appStateRecolectData:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _appElemts *****************
  1182 ;; Defined at:
  1183 ;;		line 83 in file "servo.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  elements        2   36[BANK0 ] PTR const short 
  1186 ;;		 -> datos.elements(2), datos(25), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  dataout         6   38[BANK0 ] unsigned char [6]
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1198 ;;      Params:         0       2       0       0       0       0       0       0       0
  1199 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1201 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1202 ;;Total ram usage:        8 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:   10
  1205 ;; This function calls:
  1206 ;;		_Lcd_Out
  1207 ;;		_sprintf
  1208 ;; This function is called by:
  1209 ;;		_appStateRecolectData
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text4
  1214  002DF4                     __ptext4:
  1215                           	callstack 0
  1216  002DF4                     _appElemts:
  1217                           	callstack 19
  1218  002DF4                     
  1219                           ;servo.c: 83: void appElemts(const int16_t * elements);servo.c: 84: {;servo.c: 85:     u
      +                          int8_t dataout[6] = {0};
  1220  002DF4  EE20  F086         	lfsr	2,appElemts@dataout
  1221  002DF8  0E05               	movlw	5
  1222  002DFA                     u4271:
  1223  002DFA  6ADE               	clrf	postinc2,c
  1224  002DFC  06E8               	decf	wreg,f,c
  1225  002DFE  E2FD               	bc	u4271
  1226  002E00                     
  1227                           ;servo.c: 86:     sprintf((char *)dataout,"#:%d",*elements);
  1228  002E00  0E86               	movlw	low appElemts@dataout
  1229  002E02  0100               	movlb	0	; () banked
  1230  002E04  6F72               	movwf	sprintf@s& (0+255),b
  1231  002E06  0E00               	movlw	high appElemts@dataout
  1232  002E08  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1233  002E0A  0E38               	movlw	low STR_5
  1234  002E0C  6F74               	movwf	sprintf@fmt& (0+255),b
  1235  002E0E  0E08               	movlw	high STR_5
  1236  002E10  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1237  002E12  C084  FFD9         	movff	appElemts@elements,fsr2l
  1238  002E16  C085  FFDA         	movff	appElemts@elements+1,fsr2h
  1239  002E1A  CFDE F076          	movff	postinc2,?_sprintf+4
  1240  002E1E  CFDD F077          	movff	postdec2,?_sprintf+5
  1241  002E22  EC84  F016         	call	_sprintf	;wreg free
  1242  002E26                     
  1243                           ;servo.c: 87:     Lcd_Out(2,10, (int8_t*)dataout);
  1244  002E26  0E0A               	movlw	10
  1245  002E28  6E07               	movwf	Lcd_Out@x^0,c
  1246  002E2A  0E86               	movlw	low appElemts@dataout
  1247  002E2C  6E08               	movwf	Lcd_Out@buffer^0,c
  1248  002E2E  0E00               	movlw	high appElemts@dataout
  1249  002E30  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1250  002E32  0E02               	movlw	2
  1251  002E34  ECC2  F013         	call	_Lcd_Out
  1252  002E38  0012               	return		;funcret
  1253  002E3A                     __end_of_appElemts:
  1254                           	callstack 0
  1255                           
  1256 ;; *************** function _appBat *****************
  1257 ;; Defined at:
  1258 ;;		line 63 in file "adc.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  data            2   36[BANK0 ] PTR struct _state
  1261 ;;		 -> datos(25), 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1273 ;;      Params:         0       2       0       0       0       0       0       0       0
  1274 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1275 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1276 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1277 ;;Total ram usage:        8 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:   10
  1280 ;; This function calls:
  1281 ;;		_Lcd_Out
  1282 ;;		___fldiv
  1283 ;;		___flmul
  1284 ;;		___fltol
  1285 ;;		___xxtofl
  1286 ;;		_adcGetValue
  1287 ;;		_memset
  1288 ;;		_sprintf
  1289 ;; This function is called by:
  1290 ;;		_appStateRecolectData
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text5
  1295  001836                     __ptext5:
  1296                           	callstack 0
  1297  001836                     _appBat:
  1298                           	callstack 19
  1299  001836                     
  1300                           ;adc.c: 63: void appBat(StateMachine *data);adc.c: 64: {;adc.c: 65:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1301  001836  0E07               	movlw	7
  1302  001838  0100               	movlb	0	; () banked
  1303  00183A  2584               	addwf	appBat@data& (0+255),w,b
  1304  00183C  6E04               	movwf	memset@dest^0,c
  1305  00183E  0E00               	movlw	0
  1306  001840  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1307  001842  6E05               	movwf	(memset@dest+1)^0,c
  1308  001844  0E00               	movlw	0
  1309  001846  6E07               	movwf	(memset@c+1)^0,c
  1310  001848  0E00               	movlw	0
  1311  00184A  6E06               	movwf	memset@c^0,c
  1312  00184C  0E00               	movlw	0
  1313  00184E  6E09               	movwf	(memset@n+1)^0,c
  1314  001850  0E10               	movlw	16
  1315  001852  6E08               	movwf	memset@n^0,c
  1316  001854  EC75  F00F         	call	_memset	;wreg free
  1317                           
  1318                           ;adc.c: 70:     data->bat = adcGetValue(1);
  1319  001858  0E01               	movlw	1
  1320  00185A  EC80  F017         	call	_adcGetValue
  1321  00185E  0100               	movlb	0	; () banked
  1322  001860  EE20 F004          	lfsr	2,4
  1323  001864  5184               	movf	appBat@data& (0+255),w,b
  1324  001866  26D9               	addwf	fsr2l,f,c
  1325  001868  5185               	movf	(appBat@data+1)& (0+255),w,b
  1326  00186A  22DA               	addwfc	fsr2h,f,c
  1327  00186C  C004  FFDE         	movff	?_adcGetValue,postinc2
  1328  001870  C005  FFDD         	movff	?_adcGetValue+1,postdec2
  1329  001874                     
  1330                           ; BSR set to: 0
  1331                           ;adc.c: 71:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1332  001874  0E00               	movlw	0
  1333  001876  6E33               	movwf	___fldiv@a^0,c
  1334  001878  0E00               	movlw	0
  1335  00187A  6E34               	movwf	(___fldiv@a+1)^0,c
  1336  00187C  0E80               	movlw	128
  1337  00187E  6E35               	movwf	(___fldiv@a+2)^0,c
  1338  001880  0E44               	movlw	68
  1339  001882  6E36               	movwf	(___fldiv@a+3)^0,c
  1340  001884  0E00               	movlw	0
  1341  001886  6E1A               	movwf	___flmul@a^0,c
  1342  001888  0E00               	movlw	0
  1343  00188A  6E1B               	movwf	(___flmul@a+1)^0,c
  1344  00188C  0EA0               	movlw	160
  1345  00188E  6E1C               	movwf	(___flmul@a+2)^0,c
  1346  001890  0E40               	movlw	64
  1347  001892  6E1D               	movwf	(___flmul@a+3)^0,c
  1348  001894  EE20 F004          	lfsr	2,4
  1349  001898  5184               	movf	appBat@data& (0+255),w,b
  1350  00189A  26D9               	addwf	fsr2l,f,c
  1351  00189C  5185               	movf	(appBat@data+1)& (0+255),w,b
  1352  00189E  22DA               	addwfc	fsr2h,f,c
  1353  0018A0  CFDE F086          	movff	postinc2,??_appBat
  1354  0018A4  CFDD F087          	movff	postdec2,??_appBat+1
  1355  0018A8  C086  F008         	movff	??_appBat,___xxtofl@val
  1356  0018AC  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1357  0018B0  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1358  0018B2  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1359  0018B4  0E00               	movlw	0
  1360  0018B6  EC0F  F00D         	call	___xxtofl
  1361  0018BA  C008  F016         	movff	?___xxtofl,___flmul@b
  1362  0018BE  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1363  0018C2  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1364  0018C6  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1365  0018CA  EC1F  F004         	call	___flmul	;wreg free
  1366  0018CE  C016  F02F         	movff	?___flmul,___fldiv@b
  1367  0018D2  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1368  0018D6  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1369  0018DA  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1370  0018DE  EC34  F006         	call	___fldiv	;wreg free
  1371  0018E2  C02F  F088         	movff	?___fldiv,_appBat$2033
  1372  0018E6  C030  F089         	movff	?___fldiv+1,_appBat$2033+1
  1373  0018EA  C031  F08A         	movff	?___fldiv+2,_appBat$2033+2
  1374  0018EE  C032  F08B         	movff	?___fldiv+3,_appBat$2033+3
  1375  0018F2                     
  1376                           ;adc.c: 71:     data->bat = (uint16_t)(((data->bat *5.0)/1024.0)*100);
  1377  0018F2  0E00               	movlw	0
  1378  0018F4  6E1A               	movwf	___flmul@a^0,c
  1379  0018F6  0E00               	movlw	0
  1380  0018F8  6E1B               	movwf	(___flmul@a+1)^0,c
  1381  0018FA  0EC8               	movlw	200
  1382  0018FC  6E1C               	movwf	(___flmul@a+2)^0,c
  1383  0018FE  0E42               	movlw	66
  1384  001900  6E1D               	movwf	(___flmul@a+3)^0,c
  1385  001902  C088  F016         	movff	_appBat$2033,___flmul@b
  1386  001906  C089  F017         	movff	_appBat$2033+1,___flmul@b+1
  1387  00190A  C08A  F018         	movff	_appBat$2033+2,___flmul@b+2
  1388  00190E  C08B  F019         	movff	_appBat$2033+3,___flmul@b+3
  1389  001912  EC1F  F004         	call	___flmul	;wreg free
  1390  001916  C016  F048         	movff	?___flmul,___fltol@f1
  1391  00191A  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1392  00191E  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1393  001922  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1394  001926  ECC0  F012         	call	___fltol	;wreg free
  1395  00192A  0100               	movlb	0	; () banked
  1396  00192C  EE20 F004          	lfsr	2,4
  1397  001930  5184               	movf	appBat@data& (0+255),w,b
  1398  001932  26D9               	addwf	fsr2l,f,c
  1399  001934  5185               	movf	(appBat@data+1)& (0+255),w,b
  1400  001936  22DA               	addwfc	fsr2h,f,c
  1401  001938  C048  FFDE         	movff	?___fltol,postinc2
  1402  00193C  C049  FFDD         	movff	?___fltol+1,postdec2
  1403  001940                     
  1404                           ; BSR set to: 0
  1405                           ;adc.c: 72:     data->bat = (uint16_t)((data->bat*100.0)/500.0);
  1406  001940  0E00               	movlw	0
  1407  001942  6E33               	movwf	___fldiv@a^0,c
  1408  001944  0E00               	movlw	0
  1409  001946  6E34               	movwf	(___fldiv@a+1)^0,c
  1410  001948  0EFA               	movlw	250
  1411  00194A  6E35               	movwf	(___fldiv@a+2)^0,c
  1412  00194C  0E43               	movlw	67
  1413  00194E  6E36               	movwf	(___fldiv@a+3)^0,c
  1414  001950  0E00               	movlw	0
  1415  001952  6E1A               	movwf	___flmul@a^0,c
  1416  001954  0E00               	movlw	0
  1417  001956  6E1B               	movwf	(___flmul@a+1)^0,c
  1418  001958  0EC8               	movlw	200
  1419  00195A  6E1C               	movwf	(___flmul@a+2)^0,c
  1420  00195C  0E42               	movlw	66
  1421  00195E  6E1D               	movwf	(___flmul@a+3)^0,c
  1422  001960  EE20 F004          	lfsr	2,4
  1423  001964  5184               	movf	appBat@data& (0+255),w,b
  1424  001966  26D9               	addwf	fsr2l,f,c
  1425  001968  5185               	movf	(appBat@data+1)& (0+255),w,b
  1426  00196A  22DA               	addwfc	fsr2h,f,c
  1427  00196C  CFDE F086          	movff	postinc2,??_appBat
  1428  001970  CFDD F087          	movff	postdec2,??_appBat+1
  1429  001974  C086  F008         	movff	??_appBat,___xxtofl@val
  1430  001978  C087  F009         	movff	??_appBat+1,___xxtofl@val+1
  1431  00197C  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1432  00197E  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1433  001980  0E00               	movlw	0
  1434  001982  EC0F  F00D         	call	___xxtofl
  1435  001986  C008  F016         	movff	?___xxtofl,___flmul@b
  1436  00198A  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1437  00198E  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1438  001992  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1439  001996  EC1F  F004         	call	___flmul	;wreg free
  1440  00199A  C016  F02F         	movff	?___flmul,___fldiv@b
  1441  00199E  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1442  0019A2  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1443  0019A6  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1444  0019AA  EC34  F006         	call	___fldiv	;wreg free
  1445  0019AE  C02F  F048         	movff	?___fldiv,___fltol@f1
  1446  0019B2  C030  F049         	movff	?___fldiv+1,___fltol@f1+1
  1447  0019B6  C031  F04A         	movff	?___fldiv+2,___fltol@f1+2
  1448  0019BA  C032  F04B         	movff	?___fldiv+3,___fltol@f1+3
  1449  0019BE  ECC0  F012         	call	___fltol	;wreg free
  1450  0019C2  0100               	movlb	0	; () banked
  1451  0019C4  EE20 F004          	lfsr	2,4
  1452  0019C8  5184               	movf	appBat@data& (0+255),w,b
  1453  0019CA  26D9               	addwf	fsr2l,f,c
  1454  0019CC  5185               	movf	(appBat@data+1)& (0+255),w,b
  1455  0019CE  22DA               	addwfc	fsr2h,f,c
  1456  0019D0  C048  FFDE         	movff	?___fltol,postinc2
  1457  0019D4  C049  FFDD         	movff	?___fltol+1,postdec2
  1458  0019D8                     
  1459                           ; BSR set to: 0
  1460                           ;adc.c: 73:     sprintf((char *)data->display,"Bat:%02d",(data->bat));
  1461  0019D8  0E07               	movlw	7
  1462  0019DA  2584               	addwf	appBat@data& (0+255),w,b
  1463  0019DC  6F72               	movwf	sprintf@s& (0+255),b
  1464  0019DE  0E00               	movlw	0
  1465  0019E0  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1466  0019E2  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1467  0019E4  0E29               	movlw	low STR_2
  1468  0019E6  6F74               	movwf	sprintf@fmt& (0+255),b
  1469  0019E8  0E08               	movlw	high STR_2
  1470  0019EA  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1471  0019EC  EE20 F004          	lfsr	2,4
  1472  0019F0  5184               	movf	appBat@data& (0+255),w,b
  1473  0019F2  26D9               	addwf	fsr2l,f,c
  1474  0019F4  5185               	movf	(appBat@data+1)& (0+255),w,b
  1475  0019F6  22DA               	addwfc	fsr2h,f,c
  1476  0019F8  CFDE F076          	movff	postinc2,?_sprintf+4
  1477  0019FC  CFDD F077          	movff	postdec2,?_sprintf+5
  1478  001A00  EC84  F016         	call	_sprintf	;wreg free
  1479  001A04                     
  1480                           ;adc.c: 74:     Lcd_Out(2,0, (int8_t*)data->display);
  1481  001A04  0E00               	movlw	0
  1482  001A06  6E07               	movwf	Lcd_Out@x^0,c
  1483  001A08  0E07               	movlw	7
  1484  001A0A  0100               	movlb	0	; () banked
  1485  001A0C  2584               	addwf	appBat@data& (0+255),w,b
  1486  001A0E  6E08               	movwf	Lcd_Out@buffer^0,c
  1487  001A10  0E00               	movlw	0
  1488  001A12  2185               	addwfc	(appBat@data+1)& (0+255),w,b
  1489  001A14  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1490  001A16  0E02               	movlw	2
  1491  001A18  ECC2  F013         	call	_Lcd_Out
  1492  001A1C  0012               	return		;funcret
  1493  001A1E                     __end_of_appBat:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _appADC *****************
  1497 ;; Defined at:
  1498 ;;		line 53 in file "adc.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  data            2   36[BANK0 ] PTR struct _state
  1501 ;;		 -> datos(25), 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  lm35val         4   38[BANK0 ] float 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1513 ;;      Params:         0       2       0       0       0       0       0       0       0
  1514 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1516 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1517 ;;Total ram usage:        6 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:   10
  1520 ;; This function calls:
  1521 ;;		_Lcd_Out
  1522 ;;		___awmod
  1523 ;;		___fldiv
  1524 ;;		___flmul
  1525 ;;		___fltol
  1526 ;;		___xxtofl
  1527 ;;		_adcGetValue
  1528 ;;		_memset
  1529 ;;		_sprintf
  1530 ;; This function is called by:
  1531 ;;		_appStateRecolectData
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text6
  1536  002312                     __ptext6:
  1537                           	callstack 0
  1538  002312                     _appADC:
  1539                           	callstack 19
  1540  002312                     
  1541                           ;adc.c: 53: void appADC(StateMachine *data);adc.c: 54: {;adc.c: 55:     memset(data->dis
      +                          play,0,sizeof(data->display));
  1542  002312  0E07               	movlw	7
  1543  002314  0100               	movlb	0	; () banked
  1544  002316  2584               	addwf	appADC@data& (0+255),w,b
  1545  002318  6E04               	movwf	memset@dest^0,c
  1546  00231A  0E00               	movlw	0
  1547  00231C  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1548  00231E  6E05               	movwf	(memset@dest+1)^0,c
  1549  002320  0E00               	movlw	0
  1550  002322  6E07               	movwf	(memset@c+1)^0,c
  1551  002324  0E00               	movlw	0
  1552  002326  6E06               	movwf	memset@c^0,c
  1553  002328  0E00               	movlw	0
  1554  00232A  6E09               	movwf	(memset@n+1)^0,c
  1555  00232C  0E10               	movlw	16
  1556  00232E  6E08               	movwf	memset@n^0,c
  1557  002330  EC75  F00F         	call	_memset	;wreg free
  1558  002334                     
  1559                           ;adc.c: 56:     float lm35val = adcGetValue(0);
  1560  002334  0E00               	movlw	0
  1561  002336  EC80  F017         	call	_adcGetValue
  1562  00233A  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1563  00233E  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1564  002342  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1565  002344  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1566  002346  0E00               	movlw	0
  1567  002348  EC0F  F00D         	call	___xxtofl
  1568  00234C  C008  F086         	movff	?___xxtofl,appADC@lm35val
  1569  002350  C009  F087         	movff	?___xxtofl+1,appADC@lm35val+1
  1570  002354  C00A  F088         	movff	?___xxtofl+2,appADC@lm35val+2
  1571  002358  C00B  F089         	movff	?___xxtofl+3,appADC@lm35val+3
  1572  00235C                     
  1573                           ;adc.c: 57:     lm35val = (float)((lm35val*4.88)/10.0);
  1574  00235C  0EF6               	movlw	246
  1575  00235E  6E1A               	movwf	___flmul@a^0,c
  1576  002360  0E28               	movlw	40
  1577  002362  6E1B               	movwf	(___flmul@a+1)^0,c
  1578  002364  0E9C               	movlw	156
  1579  002366  6E1C               	movwf	(___flmul@a+2)^0,c
  1580  002368  0E40               	movlw	64
  1581  00236A  6E1D               	movwf	(___flmul@a+3)^0,c
  1582  00236C  C086  F016         	movff	appADC@lm35val,___flmul@b
  1583  002370  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1584  002374  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1585  002378  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1586  00237C  EC1F  F004         	call	___flmul	;wreg free
  1587  002380  C016  F02F         	movff	?___flmul,___fldiv@b
  1588  002384  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  1589  002388  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  1590  00238C  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  1591  002390  0E00               	movlw	0
  1592  002392  6E33               	movwf	___fldiv@a^0,c
  1593  002394  0E00               	movlw	0
  1594  002396  6E34               	movwf	(___fldiv@a+1)^0,c
  1595  002398  0E20               	movlw	32
  1596  00239A  6E35               	movwf	(___fldiv@a+2)^0,c
  1597  00239C  0E41               	movlw	65
  1598  00239E  6E36               	movwf	(___fldiv@a+3)^0,c
  1599  0023A0  EC34  F006         	call	___fldiv	;wreg free
  1600  0023A4  C02F  F086         	movff	?___fldiv,appADC@lm35val
  1601  0023A8  C030  F087         	movff	?___fldiv+1,appADC@lm35val+1
  1602  0023AC  C031  F088         	movff	?___fldiv+2,appADC@lm35val+2
  1603  0023B0  C032  F089         	movff	?___fldiv+3,appADC@lm35val+3
  1604  0023B4                     
  1605                           ;adc.c: 59:     sprintf((char *)data->display,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)
      +                          ((uint8_t)(lm35val*100)%100));
  1606  0023B4  0E07               	movlw	7
  1607  0023B6  0100               	movlb	0	; () banked
  1608  0023B8  2584               	addwf	appADC@data& (0+255),w,b
  1609  0023BA  6F72               	movwf	sprintf@s& (0+255),b
  1610  0023BC  0E00               	movlw	0
  1611  0023BE  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1612  0023C0  6F73               	movwf	(sprintf@s+1)& (0+255),b
  1613  0023C2  0E0F               	movlw	low STR_1
  1614  0023C4  6F74               	movwf	sprintf@fmt& (0+255),b
  1615  0023C6  0E08               	movlw	high STR_1
  1616  0023C8  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1617  0023CA  C086  F048         	movff	appADC@lm35val,___fltol@f1
  1618  0023CE  C087  F049         	movff	appADC@lm35val+1,___fltol@f1+1
  1619  0023D2  C088  F04A         	movff	appADC@lm35val+2,___fltol@f1+2
  1620  0023D6  C089  F04B         	movff	appADC@lm35val+3,___fltol@f1+3
  1621  0023DA  ECC0  F012         	call	___fltol	;wreg free
  1622  0023DE  5048               	movf	?___fltol^0,w,c
  1623  0023E0  0100               	movlb	0	; () banked
  1624  0023E2  6F76               	movwf	(?_sprintf+4)& (0+255),b
  1625  0023E4  6B77               	clrf	(?_sprintf+5)& (0+255),b
  1626  0023E6  0E00               	movlw	0
  1627  0023E8  6E1A               	movwf	___flmul@a^0,c
  1628  0023EA  0E00               	movlw	0
  1629  0023EC  6E1B               	movwf	(___flmul@a+1)^0,c
  1630  0023EE  0EC8               	movlw	200
  1631  0023F0  6E1C               	movwf	(___flmul@a+2)^0,c
  1632  0023F2  0E42               	movlw	66
  1633  0023F4  6E1D               	movwf	(___flmul@a+3)^0,c
  1634  0023F6  C086  F016         	movff	appADC@lm35val,___flmul@b
  1635  0023FA  C087  F017         	movff	appADC@lm35val+1,___flmul@b+1
  1636  0023FE  C088  F018         	movff	appADC@lm35val+2,___flmul@b+2
  1637  002402  C089  F019         	movff	appADC@lm35val+3,___flmul@b+3
  1638  002406  EC1F  F004         	call	___flmul	;wreg free
  1639  00240A  C016  F048         	movff	?___flmul,___fltol@f1
  1640  00240E  C017  F049         	movff	?___flmul+1,___fltol@f1+1
  1641  002412  C018  F04A         	movff	?___flmul+2,___fltol@f1+2
  1642  002416  C019  F04B         	movff	?___flmul+3,___fltol@f1+3
  1643  00241A  ECC0  F012         	call	___fltol	;wreg free
  1644  00241E  5048               	movf	?___fltol^0,w,c
  1645  002420  6E52               	movwf	___awmod@dividend^0,c
  1646  002422  6A53               	clrf	(___awmod@dividend+1)^0,c
  1647  002424  0E00               	movlw	0
  1648  002426  6E55               	movwf	(___awmod@divisor+1)^0,c
  1649  002428  0E64               	movlw	100
  1650  00242A  6E54               	movwf	___awmod@divisor^0,c
  1651  00242C  EC4E  F015         	call	___awmod	;wreg free
  1652  002430  5052               	movf	?___awmod^0,w,c
  1653  002432  0100               	movlb	0	; () banked
  1654  002434  6F78               	movwf	(?_sprintf+6)& (0+255),b
  1655  002436  6B79               	clrf	(?_sprintf+7)& (0+255),b
  1656  002438  EC84  F016         	call	_sprintf	;wreg free
  1657  00243C                     
  1658                           ;adc.c: 60:     Lcd_Out(1,0, (int8_t*)data->display);
  1659  00243C  0E00               	movlw	0
  1660  00243E  6E07               	movwf	Lcd_Out@x^0,c
  1661  002440  0E07               	movlw	7
  1662  002442  0100               	movlb	0	; () banked
  1663  002444  2584               	addwf	appADC@data& (0+255),w,b
  1664  002446  6E08               	movwf	Lcd_Out@buffer^0,c
  1665  002448  0E00               	movlw	0
  1666  00244A  2185               	addwfc	(appADC@data+1)& (0+255),w,b
  1667  00244C  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1668  00244E  0E01               	movlw	1
  1669  002450  ECC2  F013         	call	_Lcd_Out
  1670  002454  0012               	return		;funcret
  1671  002456                     __end_of_appADC:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _adcGetValue *****************
  1675 ;; Defined at:
  1676 ;;		line 42 in file "adc.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  PinADC          1    wreg     unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  PinADC          1    6[COMRAM] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  2    3[COMRAM] unsigned short 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1690 ;;      Params:         2       0       0       0       0       0       0       0       0
  1691 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1692 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1693 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1694 ;;Total ram usage:        4 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    2
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_appADC
  1701 ;;		_appBat
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text7
  1706  002F00                     __ptext7:
  1707                           	callstack 0
  1708  002F00                     _adcGetValue:
  1709                           	callstack 26
  1710                           
  1711                           ;incstack = 0
  1712                           ;adcGetValue@PinADC stored from wreg
  1713  002F00  6E07               	movwf	adcGetValue@PinADC^0,c
  1714  002F02                     
  1715                           ;adc.c: 42: uint16_t adcGetValue(uint8_t PinADC);adc.c: 43: {;adc.c: 44:     ADCON0bits.
      +                          CHS = PinADC;
  1716  002F02  C007  F006         	movff	adcGetValue@PinADC,??_adcGetValue
  1717  002F06  4606               	rlncf	??_adcGetValue^0,f,c
  1718  002F08  4606               	rlncf	??_adcGetValue^0,f,c
  1719  002F0A  50C2               	movf	194,w,c	;volatile
  1720  002F0C  1806               	xorwf	??_adcGetValue^0,w,c
  1721  002F0E  0BC3               	andlw	-61
  1722  002F10  1806               	xorwf	??_adcGetValue^0,w,c
  1723  002F12  6EC2               	movwf	194,c	;volatile
  1724  002F14                     
  1725                           ;adc.c: 45:     _delay((unsigned long)((2)*(12000000/4000.0)));
  1726  002F14  0E08               	movlw	8
  1727  002F16  6E06               	movwf	??_adcGetValue^0,c
  1728  002F18  0ECA               	movlw	202
  1729  002F1A                     u4427:
  1730  002F1A  2EE8               	decfsz	wreg,f,c
  1731  002F1C  D7FE               	bra	u4427
  1732  002F1E  2E06               	decfsz	??_adcGetValue^0,f,c
  1733  002F20  D7FC               	bra	u4427
  1734  002F22                     
  1735                           ;adc.c: 46:     GO_nDONE = 1;
  1736  002F22  82C2               	bsf	4034,1,c	;volatile
  1737  002F24                     l26:
  1738                           
  1739                           ;adc.c: 47:     while(ADCON0bits.GO_DONE)
  1740  002F24  B2C2               	btfsc	194,1,c	;volatile
  1741  002F26  EF97  F017         	goto	u2571
  1742  002F2A  EF99  F017         	goto	u2570
  1743  002F2E                     u2571:
  1744  002F2E  EF92  F017         	goto	l26
  1745  002F32                     u2570:
  1746  002F32                     
  1747                           ;adc.c: 50:     return ADRES;
  1748  002F32  CFC3 F004          	movff	4035,?_adcGetValue	;volatile
  1749  002F36  CFC4 F005          	movff	4036,?_adcGetValue+1	;volatile
  1750  002F3A  0012               	return		;funcret
  1751  002F3C                     __end_of_adcGetValue:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function ___xxtofl *****************
  1755 ;; Defined at:
  1756 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  sign            1    wreg     unsigned char 
  1759 ;;  val             4    7[COMRAM] long 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  sign            1   15[COMRAM] unsigned char 
  1762 ;;  arg             4   17[COMRAM] unsigned long 
  1763 ;;  exp             1   16[COMRAM] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  4    7[COMRAM] unsigned char 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1773 ;;      Params:         4       0       0       0       0       0       0       0       0
  1774 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1775 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1776 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1777 ;;Total ram usage:       14 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    2
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_appADC
  1784 ;;		_appBat
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text8
  1789  001A1E                     __ptext8:
  1790                           	callstack 0
  1791  001A1E                     ___xxtofl:
  1792                           	callstack 26
  1793                           
  1794                           ;incstack = 0
  1795                           ;___xxtofl@sign stored from wreg
  1796  001A1E  6E10               	movwf	___xxtofl@sign^0,c
  1797  001A20  5010               	movf	___xxtofl@sign^0,w,c
  1798  001A22  B4D8               	btfsc	status,2,c
  1799  001A24  EF16  F00D         	goto	u3401
  1800  001A28  EF18  F00D         	goto	u3400
  1801  001A2C                     u3401:
  1802  001A2C  EF3A  F00D         	goto	l941
  1803  001A30                     u3400:
  1804  001A30  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  1805  001A32  EF1F  F00D         	goto	u3410
  1806  001A36  EF1D  F00D         	goto	u3411
  1807  001A3A                     u3411:
  1808  001A3A  EF3A  F00D         	goto	l941
  1809  001A3E                     u3410:
  1810  001A3E  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  1811  001A42  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  1812  001A46  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  1813  001A4A  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  1814  001A4E  1E0C               	comf	??___xxtofl^0,f,c
  1815  001A50  1E0D               	comf	(??___xxtofl+1)^0,f,c
  1816  001A52  1E0E               	comf	(??___xxtofl+2)^0,f,c
  1817  001A54  1E0F               	comf	(??___xxtofl+3)^0,f,c
  1818  001A56  2A0C               	incf	??___xxtofl^0,f,c
  1819  001A58  0E00               	movlw	0
  1820  001A5A  220D               	addwfc	(??___xxtofl+1)^0,f,c
  1821  001A5C  220E               	addwfc	(??___xxtofl+2)^0,f,c
  1822  001A5E  220F               	addwfc	(??___xxtofl+3)^0,f,c
  1823  001A60  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  1824  001A64  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  1825  001A68  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  1826  001A6C  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  1827  001A70  EF42  F00D         	goto	l3463
  1828  001A74                     l941:
  1829  001A74  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  1830  001A78  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1831  001A7C  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1832  001A80  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1833  001A84                     l3463:
  1834  001A84  5008               	movf	___xxtofl@val^0,w,c
  1835  001A86  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  1836  001A88  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  1837  001A8A  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  1838  001A8C  A4D8               	btfss	status,2,c
  1839  001A8E  EF4B  F00D         	goto	u3421
  1840  001A92  EF4D  F00D         	goto	u3420
  1841  001A96                     u3421:
  1842  001A96  EF57  F00D         	goto	l3469
  1843  001A9A                     u3420:
  1844  001A9A  0E00               	movlw	0
  1845  001A9C  6E08               	movwf	?___xxtofl^0,c
  1846  001A9E  0E00               	movlw	0
  1847  001AA0  6E09               	movwf	(?___xxtofl+1)^0,c
  1848  001AA2  0E00               	movlw	0
  1849  001AA4  6E0A               	movwf	(?___xxtofl+2)^0,c
  1850  001AA6  0E00               	movlw	0
  1851  001AA8  6E0B               	movwf	(?___xxtofl+3)^0,c
  1852  001AAA  EFE8  F00D         	goto	l944
  1853  001AAE                     l3469:
  1854  001AAE  0E96               	movlw	150
  1855  001AB0  6E11               	movwf	___xxtofl@exp^0,c
  1856  001AB2  EF61  F00D         	goto	l3473
  1857  001AB6                     l3471:
  1858  001AB6  2A11               	incf	___xxtofl@exp^0,f,c
  1859  001AB8  90D8               	bcf	status,0,c
  1860  001ABA  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  1861  001ABC  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  1862  001ABE  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  1863  001AC0  3212               	rrcf	___xxtofl@arg^0,f,c
  1864  001AC2                     l3473:
  1865  001AC2  0E00               	movlw	0
  1866  001AC4  1412               	andwf	___xxtofl@arg^0,w,c
  1867  001AC6  6E0C               	movwf	??___xxtofl^0,c
  1868  001AC8  0E00               	movlw	0
  1869  001ACA  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  1870  001ACC  6E0D               	movwf	(??___xxtofl+1)^0,c
  1871  001ACE  0E00               	movlw	0
  1872  001AD0  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  1873  001AD2  6E0E               	movwf	(??___xxtofl+2)^0,c
  1874  001AD4  0EFE               	movlw	254
  1875  001AD6  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  1876  001AD8  6E0F               	movwf	(??___xxtofl+3)^0,c
  1877  001ADA  500C               	movf	??___xxtofl^0,w,c
  1878  001ADC  100D               	iorwf	(??___xxtofl+1)^0,w,c
  1879  001ADE  100E               	iorwf	(??___xxtofl+2)^0,w,c
  1880  001AE0  100F               	iorwf	(??___xxtofl+3)^0,w,c
  1881  001AE2  A4D8               	btfss	status,2,c
  1882  001AE4  EF76  F00D         	goto	u3431
  1883  001AE8  EF78  F00D         	goto	u3430
  1884  001AEC                     u3431:
  1885  001AEC  EF5B  F00D         	goto	l3471
  1886  001AF0                     u3430:
  1887  001AF0  EF86  F00D         	goto	l948
  1888  001AF4                     l3475:
  1889  001AF4  2A11               	incf	___xxtofl@exp^0,f,c
  1890  001AF6  0E01               	movlw	1
  1891  001AF8  2612               	addwf	___xxtofl@arg^0,f,c
  1892  001AFA  0E00               	movlw	0
  1893  001AFC  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  1894  001AFE  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  1895  001B00  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  1896  001B02  90D8               	bcf	status,0,c
  1897  001B04  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  1898  001B06  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  1899  001B08  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  1900  001B0A  3212               	rrcf	___xxtofl@arg^0,f,c
  1901  001B0C                     l948:
  1902  001B0C  0E00               	movlw	0
  1903  001B0E  1412               	andwf	___xxtofl@arg^0,w,c
  1904  001B10  6E0C               	movwf	??___xxtofl^0,c
  1905  001B12  0E00               	movlw	0
  1906  001B14  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  1907  001B16  6E0D               	movwf	(??___xxtofl+1)^0,c
  1908  001B18  0E00               	movlw	0
  1909  001B1A  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  1910  001B1C  6E0E               	movwf	(??___xxtofl+2)^0,c
  1911  001B1E  0EFF               	movlw	255
  1912  001B20  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  1913  001B22  6E0F               	movwf	(??___xxtofl+3)^0,c
  1914  001B24  500C               	movf	??___xxtofl^0,w,c
  1915  001B26  100D               	iorwf	(??___xxtofl+1)^0,w,c
  1916  001B28  100E               	iorwf	(??___xxtofl+2)^0,w,c
  1917  001B2A  100F               	iorwf	(??___xxtofl+3)^0,w,c
  1918  001B2C  A4D8               	btfss	status,2,c
  1919  001B2E  EF9B  F00D         	goto	u3441
  1920  001B32  EF9D  F00D         	goto	u3440
  1921  001B36                     u3441:
  1922  001B36  EF7A  F00D         	goto	l3475
  1923  001B3A                     u3440:
  1924  001B3A  EFA5  F00D         	goto	l3483
  1925  001B3E                     l3481:
  1926  001B3E  0611               	decf	___xxtofl@exp^0,f,c
  1927  001B40  90D8               	bcf	status,0,c
  1928  001B42  3612               	rlcf	___xxtofl@arg^0,f,c
  1929  001B44  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  1930  001B46  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  1931  001B48  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  1932  001B4A                     l3483:
  1933  001B4A  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  1934  001B4C  EFAA  F00D         	goto	u3451
  1935  001B50  EFAC  F00D         	goto	u3450
  1936  001B54                     u3451:
  1937  001B54  EFB4  F00D         	goto	l955
  1938  001B58                     u3450:
  1939  001B58  0E02               	movlw	2
  1940  001B5A  6011               	cpfslt	___xxtofl@exp^0,c
  1941  001B5C  EFB2  F00D         	goto	u3461
  1942  001B60  EFB4  F00D         	goto	u3460
  1943  001B64                     u3461:
  1944  001B64  EF9F  F00D         	goto	l3481
  1945  001B68                     u3460:
  1946  001B68                     l955:
  1947  001B68  B011               	btfsc	___xxtofl@exp^0,0,c
  1948  001B6A  EFB9  F00D         	goto	u3471
  1949  001B6E  EFBB  F00D         	goto	u3470
  1950  001B72                     u3471:
  1951  001B72  EFBC  F00D         	goto	l3489
  1952  001B76                     u3470:
  1953  001B76  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  1954  001B78                     l3489:
  1955  001B78  90D8               	bcf	status,0,c
  1956  001B7A  3211               	rrcf	___xxtofl@exp^0,f,c
  1957  001B7C  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  1958  001B80  6A0D               	clrf	(??___xxtofl+1)^0,c
  1959  001B82  6A0E               	clrf	(??___xxtofl+2)^0,c
  1960  001B84  6A0F               	clrf	(??___xxtofl+3)^0,c
  1961  001B86  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  1962  001B8A  6A0E               	clrf	(??___xxtofl+2)^0,c
  1963  001B8C  6A0D               	clrf	(??___xxtofl+1)^0,c
  1964  001B8E  6A0C               	clrf	??___xxtofl^0,c
  1965  001B90  500C               	movf	??___xxtofl^0,w,c
  1966  001B92  1212               	iorwf	___xxtofl@arg^0,f,c
  1967  001B94  500D               	movf	(??___xxtofl+1)^0,w,c
  1968  001B96  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  1969  001B98  500E               	movf	(??___xxtofl+2)^0,w,c
  1970  001B9A  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  1971  001B9C  500F               	movf	(??___xxtofl+3)^0,w,c
  1972  001B9E  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  1973  001BA0  5010               	movf	___xxtofl@sign^0,w,c
  1974  001BA2  B4D8               	btfsc	status,2,c
  1975  001BA4  EFD6  F00D         	goto	u3481
  1976  001BA8  EFD8  F00D         	goto	u3480
  1977  001BAC                     u3481:
  1978  001BAC  EFE0  F00D         	goto	l3499
  1979  001BB0                     u3480:
  1980  001BB0  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  1981  001BB2  EFDF  F00D         	goto	u3490
  1982  001BB6  EFDD  F00D         	goto	u3491
  1983  001BBA                     u3491:
  1984  001BBA  EFE0  F00D         	goto	l3499
  1985  001BBE                     u3490:
  1986  001BBE  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  1987  001BC0                     l3499:
  1988  001BC0  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  1989  001BC4  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  1990  001BC8  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  1991  001BCC  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  1992  001BD0                     l944:
  1993  001BD0  0012               	return		;funcret
  1994  001BD2                     __end_of___xxtofl:
  1995                           	callstack 0
  1996                           
  1997 ;; *************** function ___fltol *****************
  1998 ;; Defined at:
  1999 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  f1              4   71[COMRAM] unsigned char 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  exp1            1   80[COMRAM] unsigned char 
  2004 ;;  sign1           1   79[COMRAM] unsigned char 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  4   71[COMRAM] long 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2, status,0
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2014 ;;      Params:         4       0       0       0       0       0       0       0       0
  2015 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2016 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2017 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2018 ;;Total ram usage:       10 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    2
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_appADC
  2025 ;;		_appBat
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text9
  2030  002580                     __ptext9:
  2031                           	callstack 0
  2032  002580                     ___fltol:
  2033                           	callstack 26
  2034  002580  344A               	rlcf	(___fltol@f1+2)^0,w,c
  2035  002582  344B               	rlcf	(___fltol@f1+3)^0,w,c
  2036  002584  6E51               	movwf	___fltol@exp1^0,c
  2037  002586  5051               	movf	___fltol@exp1^0,w,c
  2038  002588  A4D8               	btfss	status,2,c
  2039  00258A  EFC9  F012         	goto	u3331
  2040  00258E  EFCB  F012         	goto	u3330
  2041  002592                     u3331:
  2042  002592  EFD5  F012         	goto	l3419
  2043  002596                     u3330:
  2044  002596                     l3415:
  2045  002596  0E00               	movlw	0
  2046  002598  6E48               	movwf	?___fltol^0,c
  2047  00259A  0E00               	movlw	0
  2048  00259C  6E49               	movwf	(?___fltol+1)^0,c
  2049  00259E  0E00               	movlw	0
  2050  0025A0  6E4A               	movwf	(?___fltol+2)^0,c
  2051  0025A2  0E00               	movlw	0
  2052  0025A4  6E4B               	movwf	(?___fltol+3)^0,c
  2053  0025A6  EF42  F013         	goto	l583
  2054  0025AA                     l3419:
  2055  0025AA  C048  F04C         	movff	___fltol@f1,??___fltol
  2056  0025AE  C049  F04D         	movff	___fltol@f1+1,??___fltol+1
  2057  0025B2  C04A  F04E         	movff	___fltol@f1+2,??___fltol+2
  2058  0025B6  C04B  F04F         	movff	___fltol@f1+3,??___fltol+3
  2059  0025BA  0E20               	movlw	32
  2060  0025BC  EFE5  F012         	goto	u3340
  2061  0025C0                     u3345:
  2062  0025C0  90D8               	bcf	status,0,c
  2063  0025C2  324F               	rrcf	(??___fltol+3)^0,f,c
  2064  0025C4  324E               	rrcf	(??___fltol+2)^0,f,c
  2065  0025C6  324D               	rrcf	(??___fltol+1)^0,f,c
  2066  0025C8  324C               	rrcf	??___fltol^0,f,c
  2067  0025CA                     u3340:
  2068  0025CA  2EE8               	decfsz	wreg,f,c
  2069  0025CC  EFE0  F012         	goto	u3345
  2070  0025D0  504C               	movf	??___fltol^0,w,c
  2071  0025D2  6E50               	movwf	___fltol@sign1^0,c
  2072  0025D4  8E4A               	bsf	(___fltol@f1+2)^0,7,c
  2073  0025D6  0EFF               	movlw	255
  2074  0025D8  1648               	andwf	___fltol@f1^0,f,c
  2075  0025DA  0EFF               	movlw	255
  2076  0025DC  1649               	andwf	(___fltol@f1+1)^0,f,c
  2077  0025DE  0EFF               	movlw	255
  2078  0025E0  164A               	andwf	(___fltol@f1+2)^0,f,c
  2079  0025E2  0E00               	movlw	0
  2080  0025E4  164B               	andwf	(___fltol@f1+3)^0,f,c
  2081  0025E6  0E96               	movlw	150
  2082  0025E8  5E51               	subwf	___fltol@exp1^0,f,c
  2083  0025EA  BE51               	btfsc	___fltol@exp1^0,7,c
  2084  0025EC  EFFC  F012         	goto	u3350
  2085  0025F0  EFFA  F012         	goto	u3351
  2086  0025F4                     u3351:
  2087  0025F4  EF12  F013         	goto	l3439
  2088  0025F8                     u3350:
  2089  0025F8  5051               	movf	___fltol@exp1^0,w,c
  2090  0025FA  0A80               	xorlw	128
  2091  0025FC  0F97               	addlw	151
  2092  0025FE  B0D8               	btfsc	status,0,c
  2093  002600  EF04  F013         	goto	u3361
  2094  002604  EF06  F013         	goto	u3360
  2095  002608                     u3361:
  2096  002608  EF08  F013         	goto	l3435
  2097  00260C                     u3360:
  2098  00260C  EFCB  F012         	goto	l3415
  2099  002610                     l3435:
  2100  002610  90D8               	bcf	status,0,c
  2101  002612  324B               	rrcf	(___fltol@f1+3)^0,f,c
  2102  002614  324A               	rrcf	(___fltol@f1+2)^0,f,c
  2103  002616  3249               	rrcf	(___fltol@f1+1)^0,f,c
  2104  002618  3248               	rrcf	___fltol@f1^0,f,c
  2105  00261A  3E51               	incfsz	___fltol@exp1^0,f,c
  2106  00261C  EF08  F013         	goto	l3435
  2107  002620  EF2A  F013         	goto	l3449
  2108  002624                     l3439:
  2109  002624  0E1F               	movlw	31
  2110  002626  6451               	cpfsgt	___fltol@exp1^0,c
  2111  002628  EF18  F013         	goto	u3371
  2112  00262C  EF1A  F013         	goto	u3370
  2113  002630                     u3371:
  2114  002630  EF22  F013         	goto	l3447
  2115  002634                     u3370:
  2116  002634  EFCB  F012         	goto	l3415
  2117  002638                     l3445:
  2118  002638  90D8               	bcf	status,0,c
  2119  00263A  3648               	rlcf	___fltol@f1^0,f,c
  2120  00263C  3649               	rlcf	(___fltol@f1+1)^0,f,c
  2121  00263E  364A               	rlcf	(___fltol@f1+2)^0,f,c
  2122  002640  364B               	rlcf	(___fltol@f1+3)^0,f,c
  2123  002642  0651               	decf	___fltol@exp1^0,f,c
  2124  002644                     l3447:
  2125  002644  5051               	movf	___fltol@exp1^0,w,c
  2126  002646  A4D8               	btfss	status,2,c
  2127  002648  EF28  F013         	goto	u3381
  2128  00264C  EF2A  F013         	goto	u3380
  2129  002650                     u3381:
  2130  002650  EF1C  F013         	goto	l3445
  2131  002654                     u3380:
  2132  002654                     l3449:
  2133  002654  5050               	movf	___fltol@sign1^0,w,c
  2134  002656  B4D8               	btfsc	status,2,c
  2135  002658  EF30  F013         	goto	u3391
  2136  00265C  EF32  F013         	goto	u3390
  2137  002660                     u3391:
  2138  002660  EF3A  F013         	goto	l3453
  2139  002664                     u3390:
  2140  002664  1E4B               	comf	(___fltol@f1+3)^0,f,c
  2141  002666  1E4A               	comf	(___fltol@f1+2)^0,f,c
  2142  002668  1E49               	comf	(___fltol@f1+1)^0,f,c
  2143  00266A  6C48               	negf	___fltol@f1^0,c
  2144  00266C  0E00               	movlw	0
  2145  00266E  2249               	addwfc	(___fltol@f1+1)^0,f,c
  2146  002670  224A               	addwfc	(___fltol@f1+2)^0,f,c
  2147  002672  224B               	addwfc	(___fltol@f1+3)^0,f,c
  2148  002674                     l3453:
  2149  002674  C048  F048         	movff	___fltol@f1,?___fltol
  2150  002678  C049  F049         	movff	___fltol@f1+1,?___fltol+1
  2151  00267C  C04A  F04A         	movff	___fltol@f1+2,?___fltol+2
  2152  002680  C04B  F04B         	movff	___fltol@f1+3,?___fltol+3
  2153  002684                     l583:
  2154  002684  0012               	return		;funcret
  2155  002686                     __end_of___fltol:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function ___flmul *****************
  2159 ;; Defined at:
  2160 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  b               4   21[COMRAM] long 
  2163 ;;  a               4   25[COMRAM] long 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  prod            4   40[COMRAM] struct .
  2166 ;;  grs             4   34[COMRAM] unsigned long 
  2167 ;;  temp            2   44[COMRAM] struct .
  2168 ;;  bexp            1   39[COMRAM] unsigned char 
  2169 ;;  aexp            1   38[COMRAM] unsigned char 
  2170 ;;  sign            1   33[COMRAM] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  4   21[COMRAM] unsigned char 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0, prodl, prodh
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2180 ;;      Params:         8       0       0       0       0       0       0       0       0
  2181 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2182 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2183 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2184 ;;Total ram usage:       25 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    2
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_appADC
  2191 ;;		_appBat
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text10
  2196  00083E                     __ptext10:
  2197                           	callstack 0
  2198  00083E                     ___flmul:
  2199                           	callstack 26
  2200  00083E  5019               	movf	(___flmul@b+3)^0,w,c
  2201  000840  0B80               	andlw	128
  2202  000842  6E22               	movwf	___flmul@sign^0,c
  2203  000844  5019               	movf	(___flmul@b+3)^0,w,c
  2204  000846  2419               	addwf	(___flmul@b+3)^0,w,c
  2205  000848  6E28               	movwf	___flmul@bexp^0,c
  2206  00084A  AE18               	btfss	(___flmul@b+2)^0,7,c
  2207  00084C  EF2A  F004         	goto	u3081
  2208  000850  EF2C  F004         	goto	u3080
  2209  000854                     u3081:
  2210  000854  EF2D  F004         	goto	l3253
  2211  000858                     u3080:
  2212  000858  8028               	bsf	___flmul@bexp^0,0,c
  2213  00085A                     l3253:
  2214  00085A  5028               	movf	___flmul@bexp^0,w,c
  2215  00085C  B4D8               	btfsc	status,2,c
  2216  00085E  EF33  F004         	goto	u3091
  2217  000862  EF35  F004         	goto	u3090
  2218  000866                     u3091:
  2219  000866  EF48  F004         	goto	l3261
  2220  00086A                     u3090:
  2221  00086A  2828               	incf	___flmul@bexp^0,w,c
  2222  00086C  A4D8               	btfss	status,2,c
  2223  00086E  EF3B  F004         	goto	u3101
  2224  000872  EF3D  F004         	goto	u3100
  2225  000876                     u3101:
  2226  000876  EF45  F004         	goto	l3259
  2227  00087A                     u3100:
  2228  00087A  0E00               	movlw	0
  2229  00087C  6E16               	movwf	___flmul@b^0,c
  2230  00087E  0E00               	movlw	0
  2231  000880  6E17               	movwf	(___flmul@b+1)^0,c
  2232  000882  0E00               	movlw	0
  2233  000884  6E18               	movwf	(___flmul@b+2)^0,c
  2234  000886  0E00               	movlw	0
  2235  000888  6E19               	movwf	(___flmul@b+3)^0,c
  2236  00088A                     l3259:
  2237  00088A  8E18               	bsf	(___flmul@b+2)^0,7,c
  2238  00088C  EF50  F004         	goto	l3263
  2239  000890                     l3261:
  2240  000890  0E00               	movlw	0
  2241  000892  6E16               	movwf	___flmul@b^0,c
  2242  000894  0E00               	movlw	0
  2243  000896  6E17               	movwf	(___flmul@b+1)^0,c
  2244  000898  0E00               	movlw	0
  2245  00089A  6E18               	movwf	(___flmul@b+2)^0,c
  2246  00089C  0E00               	movlw	0
  2247  00089E  6E19               	movwf	(___flmul@b+3)^0,c
  2248  0008A0                     l3263:
  2249  0008A0  501D               	movf	(___flmul@a+3)^0,w,c
  2250  0008A2  0B80               	andlw	128
  2251  0008A4  1A22               	xorwf	___flmul@sign^0,f,c
  2252  0008A6  501D               	movf	(___flmul@a+3)^0,w,c
  2253  0008A8  241D               	addwf	(___flmul@a+3)^0,w,c
  2254  0008AA  6E27               	movwf	___flmul@aexp^0,c
  2255  0008AC  AE1C               	btfss	(___flmul@a+2)^0,7,c
  2256  0008AE  EF5B  F004         	goto	u3111
  2257  0008B2  EF5D  F004         	goto	u3110
  2258  0008B6                     u3111:
  2259  0008B6  EF5E  F004         	goto	l3271
  2260  0008BA                     u3110:
  2261  0008BA  8027               	bsf	___flmul@aexp^0,0,c
  2262  0008BC                     l3271:
  2263  0008BC  5027               	movf	___flmul@aexp^0,w,c
  2264  0008BE  B4D8               	btfsc	status,2,c
  2265  0008C0  EF64  F004         	goto	u3121
  2266  0008C4  EF66  F004         	goto	u3120
  2267  0008C8                     u3121:
  2268  0008C8  EF79  F004         	goto	l3279
  2269  0008CC                     u3120:
  2270  0008CC  2827               	incf	___flmul@aexp^0,w,c
  2271  0008CE  A4D8               	btfss	status,2,c
  2272  0008D0  EF6C  F004         	goto	u3131
  2273  0008D4  EF6E  F004         	goto	u3130
  2274  0008D8                     u3131:
  2275  0008D8  EF76  F004         	goto	l3277
  2276  0008DC                     u3130:
  2277  0008DC  0E00               	movlw	0
  2278  0008DE  6E1A               	movwf	___flmul@a^0,c
  2279  0008E0  0E00               	movlw	0
  2280  0008E2  6E1B               	movwf	(___flmul@a+1)^0,c
  2281  0008E4  0E00               	movlw	0
  2282  0008E6  6E1C               	movwf	(___flmul@a+2)^0,c
  2283  0008E8  0E00               	movlw	0
  2284  0008EA  6E1D               	movwf	(___flmul@a+3)^0,c
  2285  0008EC                     l3277:
  2286  0008EC  8E1C               	bsf	(___flmul@a+2)^0,7,c
  2287  0008EE  EF81  F004         	goto	l900
  2288  0008F2                     l3279:
  2289  0008F2  0E00               	movlw	0
  2290  0008F4  6E1A               	movwf	___flmul@a^0,c
  2291  0008F6  0E00               	movlw	0
  2292  0008F8  6E1B               	movwf	(___flmul@a+1)^0,c
  2293  0008FA  0E00               	movlw	0
  2294  0008FC  6E1C               	movwf	(___flmul@a+2)^0,c
  2295  0008FE  0E00               	movlw	0
  2296  000900  6E1D               	movwf	(___flmul@a+3)^0,c
  2297  000902                     l900:
  2298  000902  5027               	movf	___flmul@aexp^0,w,c
  2299  000904  B4D8               	btfsc	status,2,c
  2300  000906  EF87  F004         	goto	u3141
  2301  00090A  EF89  F004         	goto	u3140
  2302  00090E                     u3141:
  2303  00090E  EF91  F004         	goto	l3283
  2304  000912                     u3140:
  2305  000912  5028               	movf	___flmul@bexp^0,w,c
  2306  000914  A4D8               	btfss	status,2,c
  2307  000916  EF8F  F004         	goto	u3151
  2308  00091A  EF91  F004         	goto	u3150
  2309  00091E                     u3151:
  2310  00091E  EF9B  F004         	goto	l3287
  2311  000922                     u3150:
  2312  000922                     l3283:
  2313  000922  0E00               	movlw	0
  2314  000924  6E16               	movwf	?___flmul^0,c
  2315  000926  0E00               	movlw	0
  2316  000928  6E17               	movwf	(?___flmul+1)^0,c
  2317  00092A  0E00               	movlw	0
  2318  00092C  6E18               	movwf	(?___flmul+2)^0,c
  2319  00092E  0E00               	movlw	0
  2320  000930  6E19               	movwf	(?___flmul+3)^0,c
  2321  000932  EF33  F006         	goto	l904
  2322  000936                     l3287:
  2323  000936  501C               	movf	(___flmul@a+2)^0,w,c
  2324  000938  0216               	mulwf	___flmul@b^0,c
  2325  00093A  CFF3 F02D          	movff	prodl,___flmul@temp
  2326  00093E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2327  000942  502D               	movf	___flmul@temp^0,w,c
  2328  000944  6E23               	movwf	___flmul@grs^0,c
  2329  000946  6A24               	clrf	(___flmul@grs+1)^0,c
  2330  000948  6A25               	clrf	(___flmul@grs+2)^0,c
  2331  00094A  6A26               	clrf	(___flmul@grs+3)^0,c
  2332  00094C  502E               	movf	(___flmul@temp+1)^0,w,c
  2333  00094E  6E29               	movwf	___flmul@prod^0,c
  2334  000950  6A2A               	clrf	(___flmul@prod+1)^0,c
  2335  000952  6A2B               	clrf	(___flmul@prod+2)^0,c
  2336  000954  6A2C               	clrf	(___flmul@prod+3)^0,c
  2337  000956  501B               	movf	(___flmul@a+1)^0,w,c
  2338  000958  0217               	mulwf	(___flmul@b+1)^0,c
  2339  00095A  CFF3 F02D          	movff	prodl,___flmul@temp
  2340  00095E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2341  000962  502D               	movf	___flmul@temp^0,w,c
  2342  000964  2623               	addwf	___flmul@grs^0,f,c
  2343  000966  0E00               	movlw	0
  2344  000968  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2345  00096A  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2346  00096C  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2347  00096E  502E               	movf	(___flmul@temp+1)^0,w,c
  2348  000970  2629               	addwf	___flmul@prod^0,f,c
  2349  000972  0E00               	movlw	0
  2350  000974  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2351  000976  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2352  000978  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2353  00097A  501A               	movf	___flmul@a^0,w,c
  2354  00097C  0218               	mulwf	(___flmul@b+2)^0,c
  2355  00097E  CFF3 F02D          	movff	prodl,___flmul@temp
  2356  000982  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2357  000986  502D               	movf	___flmul@temp^0,w,c
  2358  000988  2623               	addwf	___flmul@grs^0,f,c
  2359  00098A  0E00               	movlw	0
  2360  00098C  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2361  00098E  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2362  000990  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2363  000992  502E               	movf	(___flmul@temp+1)^0,w,c
  2364  000994  2629               	addwf	___flmul@prod^0,f,c
  2365  000996  0E00               	movlw	0
  2366  000998  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2367  00099A  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2368  00099C  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2369  00099E  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2370  0009A2  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2371  0009A6  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2372  0009AA  6A23               	clrf	___flmul@grs^0,c
  2373  0009AC  501A               	movf	___flmul@a^0,w,c
  2374  0009AE  0217               	mulwf	(___flmul@b+1)^0,c
  2375  0009B0  CFF3 F02D          	movff	prodl,___flmul@temp
  2376  0009B4  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2377  0009B8  502D               	movf	___flmul@temp^0,w,c
  2378  0009BA  2623               	addwf	___flmul@grs^0,f,c
  2379  0009BC  502E               	movf	(___flmul@temp+1)^0,w,c
  2380  0009BE  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2381  0009C0  0E00               	movlw	0
  2382  0009C2  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2383  0009C4  0E00               	movlw	0
  2384  0009C6  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2385  0009C8  501B               	movf	(___flmul@a+1)^0,w,c
  2386  0009CA  0216               	mulwf	___flmul@b^0,c
  2387  0009CC  CFF3 F02D          	movff	prodl,___flmul@temp
  2388  0009D0  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2389  0009D4  502D               	movf	___flmul@temp^0,w,c
  2390  0009D6  2623               	addwf	___flmul@grs^0,f,c
  2391  0009D8  502E               	movf	(___flmul@temp+1)^0,w,c
  2392  0009DA  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2393  0009DC  0E00               	movlw	0
  2394  0009DE  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2395  0009E0  0E00               	movlw	0
  2396  0009E2  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2397  0009E4  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2398  0009E8  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2399  0009EC  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2400  0009F0  6A23               	clrf	___flmul@grs^0,c
  2401  0009F2  501A               	movf	___flmul@a^0,w,c
  2402  0009F4  0216               	mulwf	___flmul@b^0,c
  2403  0009F6  CFF3 F02D          	movff	prodl,___flmul@temp
  2404  0009FA  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2405  0009FE  502D               	movf	___flmul@temp^0,w,c
  2406  000A00  2623               	addwf	___flmul@grs^0,f,c
  2407  000A02  502E               	movf	(___flmul@temp+1)^0,w,c
  2408  000A04  2224               	addwfc	(___flmul@grs+1)^0,f,c
  2409  000A06  0E00               	movlw	0
  2410  000A08  2225               	addwfc	(___flmul@grs+2)^0,f,c
  2411  000A0A  0E00               	movlw	0
  2412  000A0C  2226               	addwfc	(___flmul@grs+3)^0,f,c
  2413  000A0E  501C               	movf	(___flmul@a+2)^0,w,c
  2414  000A10  0217               	mulwf	(___flmul@b+1)^0,c
  2415  000A12  CFF3 F02D          	movff	prodl,___flmul@temp
  2416  000A16  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2417  000A1A  502D               	movf	___flmul@temp^0,w,c
  2418  000A1C  2629               	addwf	___flmul@prod^0,f,c
  2419  000A1E  502E               	movf	(___flmul@temp+1)^0,w,c
  2420  000A20  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2421  000A22  0E00               	movlw	0
  2422  000A24  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2423  000A26  0E00               	movlw	0
  2424  000A28  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2425  000A2A  501B               	movf	(___flmul@a+1)^0,w,c
  2426  000A2C  0218               	mulwf	(___flmul@b+2)^0,c
  2427  000A2E  CFF3 F02D          	movff	prodl,___flmul@temp
  2428  000A32  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2429  000A36  502D               	movf	___flmul@temp^0,w,c
  2430  000A38  2629               	addwf	___flmul@prod^0,f,c
  2431  000A3A  502E               	movf	(___flmul@temp+1)^0,w,c
  2432  000A3C  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2433  000A3E  0E00               	movlw	0
  2434  000A40  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2435  000A42  0E00               	movlw	0
  2436  000A44  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2437  000A46  501C               	movf	(___flmul@a+2)^0,w,c
  2438  000A48  0218               	mulwf	(___flmul@b+2)^0,c
  2439  000A4A  CFF3 F02D          	movff	prodl,___flmul@temp
  2440  000A4E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  2441  000A52  502D               	movf	___flmul@temp^0,w,c
  2442  000A54  6E1E               	movwf	??___flmul^0,c
  2443  000A56  502E               	movf	(___flmul@temp+1)^0,w,c
  2444  000A58  6E1F               	movwf	(??___flmul+1)^0,c
  2445  000A5A  6A20               	clrf	(??___flmul+2)^0,c
  2446  000A5C  6A21               	clrf	(??___flmul+3)^0,c
  2447  000A5E  C020  F021         	movff	??___flmul+2,??___flmul+3
  2448  000A62  C01F  F020         	movff	??___flmul+1,??___flmul+2
  2449  000A66  C01E  F01F         	movff	??___flmul,??___flmul+1
  2450  000A6A  6A1E               	clrf	??___flmul^0,c
  2451  000A6C  501E               	movf	??___flmul^0,w,c
  2452  000A6E  2629               	addwf	___flmul@prod^0,f,c
  2453  000A70  501F               	movf	(??___flmul+1)^0,w,c
  2454  000A72  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2455  000A74  5020               	movf	(??___flmul+2)^0,w,c
  2456  000A76  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2457  000A78  5021               	movf	(??___flmul+3)^0,w,c
  2458  000A7A  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2459  000A7C  C023  F01E         	movff	___flmul@grs,??___flmul
  2460  000A80  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  2461  000A84  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  2462  000A88  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  2463  000A8C  0E19               	movlw	25
  2464  000A8E  EF4E  F005         	goto	u3160
  2465  000A92                     u3165:
  2466  000A92  90D8               	bcf	status,0,c
  2467  000A94  3221               	rrcf	(??___flmul+3)^0,f,c
  2468  000A96  3220               	rrcf	(??___flmul+2)^0,f,c
  2469  000A98  321F               	rrcf	(??___flmul+1)^0,f,c
  2470  000A9A  321E               	rrcf	??___flmul^0,f,c
  2471  000A9C                     u3160:
  2472  000A9C  2EE8               	decfsz	wreg,f,c
  2473  000A9E  EF49  F005         	goto	u3165
  2474  000AA2  501E               	movf	??___flmul^0,w,c
  2475  000AA4  2629               	addwf	___flmul@prod^0,f,c
  2476  000AA6  501F               	movf	(??___flmul+1)^0,w,c
  2477  000AA8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2478  000AAA  5020               	movf	(??___flmul+2)^0,w,c
  2479  000AAC  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2480  000AAE  5021               	movf	(??___flmul+3)^0,w,c
  2481  000AB0  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2482  000AB2  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  2483  000AB6  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  2484  000ABA  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  2485  000ABE  6A23               	clrf	___flmul@grs^0,c
  2486  000AC0  5027               	movf	___flmul@aexp^0,w,c
  2487  000AC2  C028  F01E         	movff	___flmul@bexp,??___flmul
  2488  000AC6  6A1F               	clrf	(??___flmul+1)^0,c
  2489  000AC8  261E               	addwf	??___flmul^0,f,c
  2490  000ACA  0E00               	movlw	0
  2491  000ACC  221F               	addwfc	(??___flmul+1)^0,f,c
  2492  000ACE  0E82               	movlw	130
  2493  000AD0  241E               	addwf	??___flmul^0,w,c
  2494  000AD2  6E2D               	movwf	___flmul@temp^0,c
  2495  000AD4  0EFF               	movlw	255
  2496  000AD6  201F               	addwfc	(??___flmul+1)^0,w,c
  2497  000AD8  6E2E               	movwf	(___flmul@temp+1)^0,c
  2498  000ADA  EF84  F005         	goto	l3335
  2499  000ADE                     l3329:
  2500  000ADE  90D8               	bcf	status,0,c
  2501  000AE0  3629               	rlcf	___flmul@prod^0,f,c
  2502  000AE2  362A               	rlcf	(___flmul@prod+1)^0,f,c
  2503  000AE4  362B               	rlcf	(___flmul@prod+2)^0,f,c
  2504  000AE6  362C               	rlcf	(___flmul@prod+3)^0,f,c
  2505  000AE8  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2506  000AEA  EF79  F005         	goto	u3171
  2507  000AEE  EF7B  F005         	goto	u3170
  2508  000AF2                     u3171:
  2509  000AF2  EF7C  F005         	goto	l907
  2510  000AF6                     u3170:
  2511  000AF6  8029               	bsf	___flmul@prod^0,0,c
  2512  000AF8                     l907:
  2513  000AF8  90D8               	bcf	status,0,c
  2514  000AFA  3623               	rlcf	___flmul@grs^0,f,c
  2515  000AFC  3624               	rlcf	(___flmul@grs+1)^0,f,c
  2516  000AFE  3625               	rlcf	(___flmul@grs+2)^0,f,c
  2517  000B00  3626               	rlcf	(___flmul@grs+3)^0,f,c
  2518  000B02  062D               	decf	___flmul@temp^0,f,c
  2519  000B04  A0D8               	btfss	status,0,c
  2520  000B06  062E               	decf	(___flmul@temp+1)^0,f,c
  2521  000B08                     l3335:
  2522  000B08  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  2523  000B0A  EF89  F005         	goto	u3181
  2524  000B0E  EF8B  F005         	goto	u3180
  2525  000B12                     u3181:
  2526  000B12  EF6F  F005         	goto	l3329
  2527  000B16                     u3180:
  2528  000B16  0E00               	movlw	0
  2529  000B18  6E27               	movwf	___flmul@aexp^0,c
  2530  000B1A  AE26               	btfss	(___flmul@grs+3)^0,7,c
  2531  000B1C  EF92  F005         	goto	u3191
  2532  000B20  EF94  F005         	goto	u3190
  2533  000B24                     u3191:
  2534  000B24  EFB8  F005         	goto	l909
  2535  000B28                     u3190:
  2536  000B28  0EFF               	movlw	255
  2537  000B2A  1423               	andwf	___flmul@grs^0,w,c
  2538  000B2C  6E1E               	movwf	??___flmul^0,c
  2539  000B2E  0EFF               	movlw	255
  2540  000B30  1424               	andwf	(___flmul@grs+1)^0,w,c
  2541  000B32  6E1F               	movwf	(??___flmul+1)^0,c
  2542  000B34  0EFF               	movlw	255
  2543  000B36  1425               	andwf	(___flmul@grs+2)^0,w,c
  2544  000B38  6E20               	movwf	(??___flmul+2)^0,c
  2545  000B3A  0E7F               	movlw	127
  2546  000B3C  1426               	andwf	(___flmul@grs+3)^0,w,c
  2547  000B3E  6E21               	movwf	(??___flmul+3)^0,c
  2548  000B40  501E               	movf	??___flmul^0,w,c
  2549  000B42  101F               	iorwf	(??___flmul+1)^0,w,c
  2550  000B44  1020               	iorwf	(??___flmul+2)^0,w,c
  2551  000B46  1021               	iorwf	(??___flmul+3)^0,w,c
  2552  000B48  B4D8               	btfsc	status,2,c
  2553  000B4A  EFA9  F005         	goto	u3201
  2554  000B4E  EFAB  F005         	goto	u3200
  2555  000B52                     u3201:
  2556  000B52  EFAF  F005         	goto	l910
  2557  000B56                     u3200:
  2558  000B56                     l3343:
  2559  000B56  0E01               	movlw	1
  2560  000B58  6E27               	movwf	___flmul@aexp^0,c
  2561  000B5A  EFB8  F005         	goto	l909
  2562  000B5E                     l910:
  2563  000B5E  A029               	btfss	___flmul@prod^0,0,c
  2564  000B60  EFB4  F005         	goto	u3211
  2565  000B64  EFB6  F005         	goto	u3210
  2566  000B68                     u3211:
  2567  000B68  EFB8  F005         	goto	l909
  2568  000B6C                     u3210:
  2569  000B6C  EFAB  F005         	goto	l3343
  2570  000B70                     l909:
  2571  000B70  5027               	movf	___flmul@aexp^0,w,c
  2572  000B72  B4D8               	btfsc	status,2,c
  2573  000B74  EFBE  F005         	goto	u3221
  2574  000B78  EFC0  F005         	goto	u3220
  2575  000B7C                     u3221:
  2576  000B7C  EFE4  F005         	goto	l3355
  2577  000B80                     u3220:
  2578  000B80  0E01               	movlw	1
  2579  000B82  2629               	addwf	___flmul@prod^0,f,c
  2580  000B84  0E00               	movlw	0
  2581  000B86  222A               	addwfc	(___flmul@prod+1)^0,f,c
  2582  000B88  222B               	addwfc	(___flmul@prod+2)^0,f,c
  2583  000B8A  222C               	addwfc	(___flmul@prod+3)^0,f,c
  2584  000B8C  A02C               	btfss	(___flmul@prod+3)^0,0,c
  2585  000B8E  EFCB  F005         	goto	u3231
  2586  000B92  EFCD  F005         	goto	u3230
  2587  000B96                     u3231:
  2588  000B96  EFE4  F005         	goto	l3355
  2589  000B9A                     u3230:
  2590  000B9A  C029  F01E         	movff	___flmul@prod,??___flmul
  2591  000B9E  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  2592  000BA2  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  2593  000BA6  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  2594  000BAA  3421               	rlcf	(??___flmul+3)^0,w,c
  2595  000BAC  3221               	rrcf	(??___flmul+3)^0,f,c
  2596  000BAE  3220               	rrcf	(??___flmul+2)^0,f,c
  2597  000BB0  321F               	rrcf	(??___flmul+1)^0,f,c
  2598  000BB2  321E               	rrcf	??___flmul^0,f,c
  2599  000BB4  C01E  F029         	movff	??___flmul,___flmul@prod
  2600  000BB8  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  2601  000BBC  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  2602  000BC0  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  2603  000BC4  4A2D               	infsnz	___flmul@temp^0,f,c
  2604  000BC6  2A2E               	incf	(___flmul@temp+1)^0,f,c
  2605  000BC8                     l3355:
  2606  000BC8  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2607  000BCA  EFEF  F005         	goto	u3241
  2608  000BCE  502E               	movf	(___flmul@temp+1)^0,w,c
  2609  000BD0  E108               	bnz	u3240
  2610  000BD2  282D               	incf	___flmul@temp^0,w,c
  2611  000BD4  A0D8               	btfss	status,0,c
  2612  000BD6  EFEF  F005         	goto	u3241
  2613  000BDA  EFF1  F005         	goto	u3240
  2614  000BDE                     u3241:
  2615  000BDE  EFFB  F005         	goto	l3359
  2616  000BE2                     u3240:
  2617  000BE2  0E00               	movlw	0
  2618  000BE4  6E29               	movwf	___flmul@prod^0,c
  2619  000BE6  0E00               	movlw	0
  2620  000BE8  6E2A               	movwf	(___flmul@prod+1)^0,c
  2621  000BEA  0E80               	movlw	128
  2622  000BEC  6E2B               	movwf	(___flmul@prod+2)^0,c
  2623  000BEE  0E7F               	movlw	127
  2624  000BF0  6E2C               	movwf	(___flmul@prod+3)^0,c
  2625  000BF2  EF29  F006         	goto	l3371
  2626  000BF6                     l3359:
  2627  000BF6  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  2628  000BF8  EF08  F006         	goto	u3250
  2629  000BFC  502E               	movf	(___flmul@temp+1)^0,w,c
  2630  000BFE  E106               	bnz	u3251
  2631  000C00  042D               	decf	___flmul@temp^0,w,c
  2632  000C02  B0D8               	btfsc	status,0,c
  2633  000C04  EF06  F006         	goto	u3251
  2634  000C08  EF08  F006         	goto	u3250
  2635  000C0C                     u3251:
  2636  000C0C  EF14  F006         	goto	l917
  2637  000C10                     u3250:
  2638  000C10  0E00               	movlw	0
  2639  000C12  6E29               	movwf	___flmul@prod^0,c
  2640  000C14  0E00               	movlw	0
  2641  000C16  6E2A               	movwf	(___flmul@prod+1)^0,c
  2642  000C18  0E00               	movlw	0
  2643  000C1A  6E2B               	movwf	(___flmul@prod+2)^0,c
  2644  000C1C  0E00               	movlw	0
  2645  000C1E  6E2C               	movwf	(___flmul@prod+3)^0,c
  2646  000C20  0E00               	movlw	0
  2647  000C22  6E22               	movwf	___flmul@sign^0,c
  2648  000C24  EF29  F006         	goto	l3371
  2649  000C28                     l917:
  2650  000C28  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  2651  000C2C  0EFF               	movlw	255
  2652  000C2E  1629               	andwf	___flmul@prod^0,f,c
  2653  000C30  0EFF               	movlw	255
  2654  000C32  162A               	andwf	(___flmul@prod+1)^0,f,c
  2655  000C34  0E7F               	movlw	127
  2656  000C36  162B               	andwf	(___flmul@prod+2)^0,f,c
  2657  000C38  0E00               	movlw	0
  2658  000C3A  162C               	andwf	(___flmul@prod+3)^0,f,c
  2659  000C3C  A028               	btfss	___flmul@bexp^0,0,c
  2660  000C3E  EF23  F006         	goto	u3261
  2661  000C42  EF25  F006         	goto	u3260
  2662  000C46                     u3261:
  2663  000C46  EF26  F006         	goto	l3369
  2664  000C4A                     u3260:
  2665  000C4A  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  2666  000C4C                     l3369:
  2667  000C4C  90D8               	bcf	status,0,c
  2668  000C4E  3028               	rrcf	___flmul@bexp^0,w,c
  2669  000C50  6E2C               	movwf	(___flmul@prod+3)^0,c
  2670  000C52                     l3371:
  2671  000C52  5022               	movf	___flmul@sign^0,w,c
  2672  000C54  122C               	iorwf	(___flmul@prod+3)^0,f,c
  2673  000C56  C029  F016         	movff	___flmul@prod,?___flmul
  2674  000C5A  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  2675  000C5E  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  2676  000C62  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  2677  000C66                     l904:
  2678  000C66  0012               	return		;funcret
  2679  000C68                     __end_of___flmul:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function ___fldiv *****************
  2683 ;; Defined at:
  2684 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  b               4   46[COMRAM] unsigned char 
  2687 ;;  a               4   50[COMRAM] unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  grs             4   65[COMRAM] unsigned long 
  2690 ;;  rem             4   58[COMRAM] unsigned long 
  2691 ;;  new_exp         2   63[COMRAM] short 
  2692 ;;  aexp            1   70[COMRAM] unsigned char 
  2693 ;;  bexp            1   69[COMRAM] unsigned char 
  2694 ;;  sign            1   62[COMRAM] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  4   46[COMRAM] unsigned char 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2704 ;;      Params:         8       0       0       0       0       0       0       0       0
  2705 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2706 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2707 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2708 ;;Total ram usage:       25 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    2
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_appADC
  2715 ;;		_appBat
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text11
  2720  000C68                     __ptext11:
  2721                           	callstack 0
  2722  000C68                     ___fldiv:
  2723                           	callstack 26
  2724  000C68  5032               	movf	(___fldiv@b+3)^0,w,c
  2725  000C6A  0B80               	andlw	128
  2726  000C6C  6E3F               	movwf	___fldiv@sign^0,c
  2727  000C6E  5032               	movf	(___fldiv@b+3)^0,w,c
  2728  000C70  2432               	addwf	(___fldiv@b+3)^0,w,c
  2729  000C72  6E46               	movwf	___fldiv@bexp^0,c
  2730  000C74  AE31               	btfss	(___fldiv@b+2)^0,7,c
  2731  000C76  EF3F  F006         	goto	u2851
  2732  000C7A  EF41  F006         	goto	u2850
  2733  000C7E                     u2851:
  2734  000C7E  EF42  F006         	goto	l3115
  2735  000C82                     u2850:
  2736  000C82  8046               	bsf	___fldiv@bexp^0,0,c
  2737  000C84                     l3115:
  2738  000C84  5046               	movf	___fldiv@bexp^0,w,c
  2739  000C86  B4D8               	btfsc	status,2,c
  2740  000C88  EF48  F006         	goto	u2861
  2741  000C8C  EF4A  F006         	goto	u2860
  2742  000C90                     u2861:
  2743  000C90  EF5F  F006         	goto	l3125
  2744  000C94                     u2860:
  2745  000C94  2846               	incf	___fldiv@bexp^0,w,c
  2746  000C96  A4D8               	btfss	status,2,c
  2747  000C98  EF50  F006         	goto	u2871
  2748  000C9C  EF52  F006         	goto	u2870
  2749  000CA0                     u2871:
  2750  000CA0  EF5A  F006         	goto	l3121
  2751  000CA4                     u2870:
  2752  000CA4  0E00               	movlw	0
  2753  000CA6  6E2F               	movwf	___fldiv@b^0,c
  2754  000CA8  0E00               	movlw	0
  2755  000CAA  6E30               	movwf	(___fldiv@b+1)^0,c
  2756  000CAC  0E00               	movlw	0
  2757  000CAE  6E31               	movwf	(___fldiv@b+2)^0,c
  2758  000CB0  0E00               	movlw	0
  2759  000CB2  6E32               	movwf	(___fldiv@b+3)^0,c
  2760  000CB4                     l3121:
  2761  000CB4  8E31               	bsf	(___fldiv@b+2)^0,7,c
  2762  000CB6  0E00               	movlw	0
  2763  000CB8  6E32               	movwf	(___fldiv@b+3)^0,c
  2764  000CBA  EF67  F006         	goto	l3127
  2765  000CBE                     l3125:
  2766  000CBE  0E00               	movlw	0
  2767  000CC0  6E2F               	movwf	___fldiv@b^0,c
  2768  000CC2  0E00               	movlw	0
  2769  000CC4  6E30               	movwf	(___fldiv@b+1)^0,c
  2770  000CC6  0E00               	movlw	0
  2771  000CC8  6E31               	movwf	(___fldiv@b+2)^0,c
  2772  000CCA  0E00               	movlw	0
  2773  000CCC  6E32               	movwf	(___fldiv@b+3)^0,c
  2774  000CCE                     l3127:
  2775  000CCE  5036               	movf	(___fldiv@a+3)^0,w,c
  2776  000CD0  0B80               	andlw	128
  2777  000CD2  1A3F               	xorwf	___fldiv@sign^0,f,c
  2778  000CD4  5036               	movf	(___fldiv@a+3)^0,w,c
  2779  000CD6  2436               	addwf	(___fldiv@a+3)^0,w,c
  2780  000CD8  6E47               	movwf	___fldiv@aexp^0,c
  2781  000CDA  AE35               	btfss	(___fldiv@a+2)^0,7,c
  2782  000CDC  EF72  F006         	goto	u2881
  2783  000CE0  EF74  F006         	goto	u2880
  2784  000CE4                     u2881:
  2785  000CE4  EF75  F006         	goto	l3135
  2786  000CE8                     u2880:
  2787  000CE8  8047               	bsf	___fldiv@aexp^0,0,c
  2788  000CEA                     l3135:
  2789  000CEA  5047               	movf	___fldiv@aexp^0,w,c
  2790  000CEC  B4D8               	btfsc	status,2,c
  2791  000CEE  EF7B  F006         	goto	u2891
  2792  000CF2  EF7D  F006         	goto	u2890
  2793  000CF6                     u2891:
  2794  000CF6  EF92  F006         	goto	l3145
  2795  000CFA                     u2890:
  2796  000CFA  2847               	incf	___fldiv@aexp^0,w,c
  2797  000CFC  A4D8               	btfss	status,2,c
  2798  000CFE  EF83  F006         	goto	u2901
  2799  000D02  EF85  F006         	goto	u2900
  2800  000D06                     u2901:
  2801  000D06  EF8D  F006         	goto	l3141
  2802  000D0A                     u2900:
  2803  000D0A  0E00               	movlw	0
  2804  000D0C  6E33               	movwf	___fldiv@a^0,c
  2805  000D0E  0E00               	movlw	0
  2806  000D10  6E34               	movwf	(___fldiv@a+1)^0,c
  2807  000D12  0E00               	movlw	0
  2808  000D14  6E35               	movwf	(___fldiv@a+2)^0,c
  2809  000D16  0E00               	movlw	0
  2810  000D18  6E36               	movwf	(___fldiv@a+3)^0,c
  2811  000D1A                     l3141:
  2812  000D1A  8E35               	bsf	(___fldiv@a+2)^0,7,c
  2813  000D1C  0E00               	movlw	0
  2814  000D1E  6E36               	movwf	(___fldiv@a+3)^0,c
  2815  000D20  EF9A  F006         	goto	l3147
  2816  000D24                     l3145:
  2817  000D24  0E00               	movlw	0
  2818  000D26  6E33               	movwf	___fldiv@a^0,c
  2819  000D28  0E00               	movlw	0
  2820  000D2A  6E34               	movwf	(___fldiv@a+1)^0,c
  2821  000D2C  0E00               	movlw	0
  2822  000D2E  6E35               	movwf	(___fldiv@a+2)^0,c
  2823  000D30  0E00               	movlw	0
  2824  000D32  6E36               	movwf	(___fldiv@a+3)^0,c
  2825  000D34                     l3147:
  2826  000D34  5033               	movf	___fldiv@a^0,w,c
  2827  000D36  1034               	iorwf	(___fldiv@a+1)^0,w,c
  2828  000D38  1035               	iorwf	(___fldiv@a+2)^0,w,c
  2829  000D3A  1036               	iorwf	(___fldiv@a+3)^0,w,c
  2830  000D3C  A4D8               	btfss	status,2,c
  2831  000D3E  EFA3  F006         	goto	u2911
  2832  000D42  EFA5  F006         	goto	u2910
  2833  000D46                     u2911:
  2834  000D46  EFBD  F006         	goto	l3159
  2835  000D4A                     u2910:
  2836  000D4A  0E00               	movlw	0
  2837  000D4C  6E2F               	movwf	___fldiv@b^0,c
  2838  000D4E  0E00               	movlw	0
  2839  000D50  6E30               	movwf	(___fldiv@b+1)^0,c
  2840  000D52  0E00               	movlw	0
  2841  000D54  6E31               	movwf	(___fldiv@b+2)^0,c
  2842  000D56  0E00               	movlw	0
  2843  000D58  6E32               	movwf	(___fldiv@b+3)^0,c
  2844  000D5A  0E80               	movlw	128
  2845  000D5C  1231               	iorwf	(___fldiv@b+2)^0,f,c
  2846  000D5E  0E7F               	movlw	127
  2847  000D60  1232               	iorwf	(___fldiv@b+3)^0,f,c
  2848  000D62                     l3153:
  2849  000D62  503F               	movf	___fldiv@sign^0,w,c
  2850  000D64  1232               	iorwf	(___fldiv@b+3)^0,f,c
  2851  000D66  C02F  F02F         	movff	___fldiv@b,?___fldiv
  2852  000D6A  C030  F030         	movff	___fldiv@b+1,?___fldiv+1
  2853  000D6E  C031  F031         	movff	___fldiv@b+2,?___fldiv+2
  2854  000D72  C032  F032         	movff	___fldiv@b+3,?___fldiv+3
  2855  000D76  EF00  F008         	goto	l868
  2856  000D7A                     l3159:
  2857  000D7A  5046               	movf	___fldiv@bexp^0,w,c
  2858  000D7C  A4D8               	btfss	status,2,c
  2859  000D7E  EFC3  F006         	goto	u2921
  2860  000D82  EFC5  F006         	goto	u2920
  2861  000D86                     u2921:
  2862  000D86  EFCF  F006         	goto	l3167
  2863  000D8A                     u2920:
  2864  000D8A  0E00               	movlw	0
  2865  000D8C  6E2F               	movwf	?___fldiv^0,c
  2866  000D8E  0E00               	movlw	0
  2867  000D90  6E30               	movwf	(?___fldiv+1)^0,c
  2868  000D92  0E00               	movlw	0
  2869  000D94  6E31               	movwf	(?___fldiv+2)^0,c
  2870  000D96  0E00               	movlw	0
  2871  000D98  6E32               	movwf	(?___fldiv+3)^0,c
  2872  000D9A  EF00  F008         	goto	l868
  2873  000D9E                     l3167:
  2874  000D9E  5047               	movf	___fldiv@aexp^0,w,c
  2875  000DA0  C046  F037         	movff	___fldiv@bexp,??___fldiv
  2876  000DA4  6A38               	clrf	(??___fldiv+1)^0,c
  2877  000DA6  5E37               	subwf	??___fldiv^0,f,c
  2878  000DA8  0E00               	movlw	0
  2879  000DAA  5A38               	subwfb	(??___fldiv+1)^0,f,c
  2880  000DAC  0E7F               	movlw	127
  2881  000DAE  2437               	addwf	??___fldiv^0,w,c
  2882  000DB0  6E40               	movwf	___fldiv@new_exp^0,c
  2883  000DB2  0E00               	movlw	0
  2884  000DB4  2038               	addwfc	(??___fldiv+1)^0,w,c
  2885  000DB6  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  2886  000DB8  C02F  F03B         	movff	___fldiv@b,___fldiv@rem
  2887  000DBC  C030  F03C         	movff	___fldiv@b+1,___fldiv@rem+1
  2888  000DC0  C031  F03D         	movff	___fldiv@b+2,___fldiv@rem+2
  2889  000DC4  C032  F03E         	movff	___fldiv@b+3,___fldiv@rem+3
  2890  000DC8  0E00               	movlw	0
  2891  000DCA  6E2F               	movwf	___fldiv@b^0,c
  2892  000DCC  0E00               	movlw	0
  2893  000DCE  6E30               	movwf	(___fldiv@b+1)^0,c
  2894  000DD0  0E00               	movlw	0
  2895  000DD2  6E31               	movwf	(___fldiv@b+2)^0,c
  2896  000DD4  0E00               	movlw	0
  2897  000DD6  6E32               	movwf	(___fldiv@b+3)^0,c
  2898  000DD8  0E00               	movlw	0
  2899  000DDA  6E42               	movwf	___fldiv@grs^0,c
  2900  000DDC  0E00               	movlw	0
  2901  000DDE  6E43               	movwf	(___fldiv@grs+1)^0,c
  2902  000DE0  0E00               	movlw	0
  2903  000DE2  6E44               	movwf	(___fldiv@grs+2)^0,c
  2904  000DE4  0E00               	movlw	0
  2905  000DE6  6E45               	movwf	(___fldiv@grs+3)^0,c
  2906  000DE8  0E00               	movlw	0
  2907  000DEA  6E47               	movwf	___fldiv@aexp^0,c
  2908  000DEC  EF30  F007         	goto	l870
  2909  000DF0                     l3177:
  2910  000DF0  5047               	movf	___fldiv@aexp^0,w,c
  2911  000DF2  B4D8               	btfsc	status,2,c
  2912  000DF4  EFFE  F006         	goto	u2931
  2913  000DF8  EF00  F007         	goto	u2930
  2914  000DFC                     u2931:
  2915  000DFC  EF17  F007         	goto	l3185
  2916  000E00                     u2930:
  2917  000E00  90D8               	bcf	status,0,c
  2918  000E02  363B               	rlcf	___fldiv@rem^0,f,c
  2919  000E04  363C               	rlcf	(___fldiv@rem+1)^0,f,c
  2920  000E06  363D               	rlcf	(___fldiv@rem+2)^0,f,c
  2921  000E08  363E               	rlcf	(___fldiv@rem+3)^0,f,c
  2922  000E0A  90D8               	bcf	status,0,c
  2923  000E0C  362F               	rlcf	___fldiv@b^0,f,c
  2924  000E0E  3630               	rlcf	(___fldiv@b+1)^0,f,c
  2925  000E10  3631               	rlcf	(___fldiv@b+2)^0,f,c
  2926  000E12  3632               	rlcf	(___fldiv@b+3)^0,f,c
  2927  000E14  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  2928  000E16  EF0F  F007         	goto	u2941
  2929  000E1A  EF11  F007         	goto	u2940
  2930  000E1E                     u2941:
  2931  000E1E  EF12  F007         	goto	l873
  2932  000E22                     u2940:
  2933  000E22  802F               	bsf	___fldiv@b^0,0,c
  2934  000E24                     l873:
  2935  000E24  90D8               	bcf	status,0,c
  2936  000E26  3642               	rlcf	___fldiv@grs^0,f,c
  2937  000E28  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  2938  000E2A  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  2939  000E2C  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  2940  000E2E                     l3185:
  2941  000E2E  5033               	movf	___fldiv@a^0,w,c
  2942  000E30  5C3B               	subwf	___fldiv@rem^0,w,c
  2943  000E32  5034               	movf	(___fldiv@a+1)^0,w,c
  2944  000E34  583C               	subwfb	(___fldiv@rem+1)^0,w,c
  2945  000E36  5035               	movf	(___fldiv@a+2)^0,w,c
  2946  000E38  583D               	subwfb	(___fldiv@rem+2)^0,w,c
  2947  000E3A  5036               	movf	(___fldiv@a+3)^0,w,c
  2948  000E3C  583E               	subwfb	(___fldiv@rem+3)^0,w,c
  2949  000E3E  A0D8               	btfss	status,0,c
  2950  000E40  EF24  F007         	goto	u2951
  2951  000E44  EF26  F007         	goto	u2950
  2952  000E48                     u2951:
  2953  000E48  EF2F  F007         	goto	l3191
  2954  000E4C                     u2950:
  2955  000E4C  8C45               	bsf	(___fldiv@grs+3)^0,6,c
  2956  000E4E  5033               	movf	___fldiv@a^0,w,c
  2957  000E50  5E3B               	subwf	___fldiv@rem^0,f,c
  2958  000E52  5034               	movf	(___fldiv@a+1)^0,w,c
  2959  000E54  5A3C               	subwfb	(___fldiv@rem+1)^0,f,c
  2960  000E56  5035               	movf	(___fldiv@a+2)^0,w,c
  2961  000E58  5A3D               	subwfb	(___fldiv@rem+2)^0,f,c
  2962  000E5A  5036               	movf	(___fldiv@a+3)^0,w,c
  2963  000E5C  5A3E               	subwfb	(___fldiv@rem+3)^0,f,c
  2964  000E5E                     l3191:
  2965  000E5E  2A47               	incf	___fldiv@aexp^0,f,c
  2966  000E60                     l870:
  2967  000E60  0E19               	movlw	25
  2968  000E62  6447               	cpfsgt	___fldiv@aexp^0,c
  2969  000E64  EF36  F007         	goto	u2961
  2970  000E68  EF38  F007         	goto	u2960
  2971  000E6C                     u2961:
  2972  000E6C  EFF8  F006         	goto	l3177
  2973  000E70                     u2960:
  2974  000E70  503B               	movf	___fldiv@rem^0,w,c
  2975  000E72  103C               	iorwf	(___fldiv@rem+1)^0,w,c
  2976  000E74  103D               	iorwf	(___fldiv@rem+2)^0,w,c
  2977  000E76  103E               	iorwf	(___fldiv@rem+3)^0,w,c
  2978  000E78  B4D8               	btfsc	status,2,c
  2979  000E7A  EF41  F007         	goto	u2971
  2980  000E7E  EF43  F007         	goto	u2970
  2981  000E82                     u2971:
  2982  000E82  EF5B  F007         	goto	l3203
  2983  000E86                     u2970:
  2984  000E86  8042               	bsf	___fldiv@grs^0,0,c
  2985  000E88  EF5B  F007         	goto	l3203
  2986  000E8C                     l3197:
  2987  000E8C  90D8               	bcf	status,0,c
  2988  000E8E  362F               	rlcf	___fldiv@b^0,f,c
  2989  000E90  3630               	rlcf	(___fldiv@b+1)^0,f,c
  2990  000E92  3631               	rlcf	(___fldiv@b+2)^0,f,c
  2991  000E94  3632               	rlcf	(___fldiv@b+3)^0,f,c
  2992  000E96  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  2993  000E98  EF50  F007         	goto	u2981
  2994  000E9C  EF52  F007         	goto	u2980
  2995  000EA0                     u2981:
  2996  000EA0  EF53  F007         	goto	l879
  2997  000EA4                     u2980:
  2998  000EA4  802F               	bsf	___fldiv@b^0,0,c
  2999  000EA6                     l879:
  3000  000EA6  90D8               	bcf	status,0,c
  3001  000EA8  3642               	rlcf	___fldiv@grs^0,f,c
  3002  000EAA  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  3003  000EAC  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  3004  000EAE  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  3005  000EB0  0640               	decf	___fldiv@new_exp^0,f,c
  3006  000EB2  A0D8               	btfss	status,0,c
  3007  000EB4  0641               	decf	(___fldiv@new_exp+1)^0,f,c
  3008  000EB6                     l3203:
  3009  000EB6  AE31               	btfss	(___fldiv@b+2)^0,7,c
  3010  000EB8  EF60  F007         	goto	u2991
  3011  000EBC  EF62  F007         	goto	u2990
  3012  000EC0                     u2991:
  3013  000EC0  EF46  F007         	goto	l3197
  3014  000EC4                     u2990:
  3015  000EC4  0E00               	movlw	0
  3016  000EC6  6E47               	movwf	___fldiv@aexp^0,c
  3017  000EC8  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  3018  000ECA  EF69  F007         	goto	u3001
  3019  000ECE  EF6B  F007         	goto	u3000
  3020  000ED2                     u3001:
  3021  000ED2  EF8F  F007         	goto	l881
  3022  000ED6                     u3000:
  3023  000ED6  0EFF               	movlw	255
  3024  000ED8  1442               	andwf	___fldiv@grs^0,w,c
  3025  000EDA  6E37               	movwf	??___fldiv^0,c
  3026  000EDC  0EFF               	movlw	255
  3027  000EDE  1443               	andwf	(___fldiv@grs+1)^0,w,c
  3028  000EE0  6E38               	movwf	(??___fldiv+1)^0,c
  3029  000EE2  0EFF               	movlw	255
  3030  000EE4  1444               	andwf	(___fldiv@grs+2)^0,w,c
  3031  000EE6  6E39               	movwf	(??___fldiv+2)^0,c
  3032  000EE8  0E7F               	movlw	127
  3033  000EEA  1445               	andwf	(___fldiv@grs+3)^0,w,c
  3034  000EEC  6E3A               	movwf	(??___fldiv+3)^0,c
  3035  000EEE  5037               	movf	??___fldiv^0,w,c
  3036  000EF0  1038               	iorwf	(??___fldiv+1)^0,w,c
  3037  000EF2  1039               	iorwf	(??___fldiv+2)^0,w,c
  3038  000EF4  103A               	iorwf	(??___fldiv+3)^0,w,c
  3039  000EF6  B4D8               	btfsc	status,2,c
  3040  000EF8  EF80  F007         	goto	u3011
  3041  000EFC  EF82  F007         	goto	u3010
  3042  000F00                     u3011:
  3043  000F00  EF86  F007         	goto	l882
  3044  000F04                     u3010:
  3045  000F04                     l3211:
  3046  000F04  0E01               	movlw	1
  3047  000F06  6E47               	movwf	___fldiv@aexp^0,c
  3048  000F08  EF8F  F007         	goto	l881
  3049  000F0C                     l882:
  3050  000F0C  A02F               	btfss	___fldiv@b^0,0,c
  3051  000F0E  EF8B  F007         	goto	u3021
  3052  000F12  EF8D  F007         	goto	u3020
  3053  000F16                     u3021:
  3054  000F16  EF8F  F007         	goto	l881
  3055  000F1A                     u3020:
  3056  000F1A  EF82  F007         	goto	l3211
  3057  000F1E                     l881:
  3058  000F1E  5047               	movf	___fldiv@aexp^0,w,c
  3059  000F20  B4D8               	btfsc	status,2,c
  3060  000F22  EF95  F007         	goto	u3031
  3061  000F26  EF97  F007         	goto	u3030
  3062  000F2A                     u3031:
  3063  000F2A  EFBB  F007         	goto	l3223
  3064  000F2E                     u3030:
  3065  000F2E  0E01               	movlw	1
  3066  000F30  262F               	addwf	___fldiv@b^0,f,c
  3067  000F32  0E00               	movlw	0
  3068  000F34  2230               	addwfc	(___fldiv@b+1)^0,f,c
  3069  000F36  2231               	addwfc	(___fldiv@b+2)^0,f,c
  3070  000F38  2232               	addwfc	(___fldiv@b+3)^0,f,c
  3071  000F3A  A032               	btfss	(___fldiv@b+3)^0,0,c
  3072  000F3C  EFA2  F007         	goto	u3041
  3073  000F40  EFA4  F007         	goto	u3040
  3074  000F44                     u3041:
  3075  000F44  EFBB  F007         	goto	l3223
  3076  000F48                     u3040:
  3077  000F48  C02F  F037         	movff	___fldiv@b,??___fldiv
  3078  000F4C  C030  F038         	movff	___fldiv@b+1,??___fldiv+1
  3079  000F50  C031  F039         	movff	___fldiv@b+2,??___fldiv+2
  3080  000F54  C032  F03A         	movff	___fldiv@b+3,??___fldiv+3
  3081  000F58  343A               	rlcf	(??___fldiv+3)^0,w,c
  3082  000F5A  323A               	rrcf	(??___fldiv+3)^0,f,c
  3083  000F5C  3239               	rrcf	(??___fldiv+2)^0,f,c
  3084  000F5E  3238               	rrcf	(??___fldiv+1)^0,f,c
  3085  000F60  3237               	rrcf	??___fldiv^0,f,c
  3086  000F62  C037  F02F         	movff	??___fldiv,___fldiv@b
  3087  000F66  C038  F030         	movff	??___fldiv+1,___fldiv@b+1
  3088  000F6A  C039  F031         	movff	??___fldiv+2,___fldiv@b+2
  3089  000F6E  C03A  F032         	movff	??___fldiv+3,___fldiv@b+3
  3090  000F72  4A40               	infsnz	___fldiv@new_exp^0,f,c
  3091  000F74  2A41               	incf	(___fldiv@new_exp+1)^0,f,c
  3092  000F76                     l3223:
  3093  000F76  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3094  000F78  EFC6  F007         	goto	u3051
  3095  000F7C  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3096  000F7E  E108               	bnz	u3050
  3097  000F80  2840               	incf	___fldiv@new_exp^0,w,c
  3098  000F82  A0D8               	btfss	status,0,c
  3099  000F84  EFC6  F007         	goto	u3051
  3100  000F88  EFC8  F007         	goto	u3050
  3101  000F8C                     u3051:
  3102  000F8C  EFD3  F007         	goto	l3227
  3103  000F90                     u3050:
  3104  000F90  0E00               	movlw	0
  3105  000F92  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3106  000F94  6840               	setf	___fldiv@new_exp^0,c
  3107  000F96  0E00               	movlw	0
  3108  000F98  6E2F               	movwf	___fldiv@b^0,c
  3109  000F9A  0E00               	movlw	0
  3110  000F9C  6E30               	movwf	(___fldiv@b+1)^0,c
  3111  000F9E  0E00               	movlw	0
  3112  000FA0  6E31               	movwf	(___fldiv@b+2)^0,c
  3113  000FA2  0E00               	movlw	0
  3114  000FA4  6E32               	movwf	(___fldiv@b+3)^0,c
  3115  000FA6                     l3227:
  3116  000FA6  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3117  000FA8  EFE0  F007         	goto	u3060
  3118  000FAC  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  3119  000FAE  E106               	bnz	u3061
  3120  000FB0  0440               	decf	___fldiv@new_exp^0,w,c
  3121  000FB2  B0D8               	btfsc	status,0,c
  3122  000FB4  EFDE  F007         	goto	u3061
  3123  000FB8  EFE0  F007         	goto	u3060
  3124  000FBC                     u3061:
  3125  000FBC  EFEE  F007         	goto	l3231
  3126  000FC0                     u3060:
  3127  000FC0  0E00               	movlw	0
  3128  000FC2  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  3129  000FC4  0E00               	movlw	0
  3130  000FC6  6E40               	movwf	___fldiv@new_exp^0,c
  3131  000FC8  0E00               	movlw	0
  3132  000FCA  6E2F               	movwf	___fldiv@b^0,c
  3133  000FCC  0E00               	movlw	0
  3134  000FCE  6E30               	movwf	(___fldiv@b+1)^0,c
  3135  000FD0  0E00               	movlw	0
  3136  000FD2  6E31               	movwf	(___fldiv@b+2)^0,c
  3137  000FD4  0E00               	movlw	0
  3138  000FD6  6E32               	movwf	(___fldiv@b+3)^0,c
  3139  000FD8  0E00               	movlw	0
  3140  000FDA  6E3F               	movwf	___fldiv@sign^0,c
  3141  000FDC                     l3231:
  3142  000FDC  C040  F046         	movff	___fldiv@new_exp,___fldiv@bexp
  3143  000FE0  A046               	btfss	___fldiv@bexp^0,0,c
  3144  000FE2  EFF5  F007         	goto	u3071
  3145  000FE6  EFF7  F007         	goto	u3070
  3146  000FEA                     u3071:
  3147  000FEA  EFFA  F007         	goto	l3237
  3148  000FEE                     u3070:
  3149  000FEE  8E31               	bsf	(___fldiv@b+2)^0,7,c
  3150  000FF0  EFFB  F007         	goto	l3239
  3151  000FF4                     l3237:
  3152  000FF4  9E31               	bcf	(___fldiv@b+2)^0,7,c
  3153  000FF6                     l3239:
  3154  000FF6  90D8               	bcf	status,0,c
  3155  000FF8  3046               	rrcf	___fldiv@bexp^0,w,c
  3156  000FFA  6E32               	movwf	(___fldiv@b+3)^0,c
  3157  000FFC  EFB1  F006         	goto	l3153
  3158  001000                     l868:
  3159  001000  0012               	return		;funcret
  3160  001002                     __end_of___fldiv:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function ___awmod *****************
  3164 ;; Defined at:
  3165 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  dividend        2   81[COMRAM] int 
  3168 ;;  divisor         2   83[COMRAM] int 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  sign            1   86[COMRAM] unsigned char 
  3171 ;;  counter         1   85[COMRAM] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  2   81[COMRAM] int 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3181 ;;      Params:         4       0       0       0       0       0       0       0       0
  3182 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3184 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3185 ;;Total ram usage:        6 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    2
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_appADC
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text12
  3196  002A9C                     __ptext12:
  3197                           	callstack 0
  3198  002A9C                     ___awmod:
  3199                           	callstack 26
  3200  002A9C  0E00               	movlw	0
  3201  002A9E  6E57               	movwf	___awmod@sign^0,c
  3202  002AA0  BE53               	btfsc	(___awmod@dividend+1)^0,7,c
  3203  002AA2  EF57  F015         	goto	u3270
  3204  002AA6  EF55  F015         	goto	u3271
  3205  002AAA                     u3271:
  3206  002AAA  EF5D  F015         	goto	l3385
  3207  002AAE                     u3270:
  3208  002AAE  6C52               	negf	___awmod@dividend^0,c
  3209  002AB0  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3210  002AB2  B0D8               	btfsc	status,0,c
  3211  002AB4  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3212  002AB6  0E01               	movlw	1
  3213  002AB8  6E57               	movwf	___awmod@sign^0,c
  3214  002ABA                     l3385:
  3215  002ABA  BE55               	btfsc	(___awmod@divisor+1)^0,7,c
  3216  002ABC  EF64  F015         	goto	u3280
  3217  002AC0  EF62  F015         	goto	u3281
  3218  002AC4                     u3281:
  3219  002AC4  EF68  F015         	goto	l3389
  3220  002AC8                     u3280:
  3221  002AC8  6C54               	negf	___awmod@divisor^0,c
  3222  002ACA  1E55               	comf	(___awmod@divisor+1)^0,f,c
  3223  002ACC  B0D8               	btfsc	status,0,c
  3224  002ACE  2A55               	incf	(___awmod@divisor+1)^0,f,c
  3225  002AD0                     l3389:
  3226  002AD0  5054               	movf	___awmod@divisor^0,w,c
  3227  002AD2  1055               	iorwf	(___awmod@divisor+1)^0,w,c
  3228  002AD4  B4D8               	btfsc	status,2,c
  3229  002AD6  EF6F  F015         	goto	u3291
  3230  002ADA  EF71  F015         	goto	u3290
  3231  002ADE                     u3291:
  3232  002ADE  EF95  F015         	goto	l3405
  3233  002AE2                     u3290:
  3234  002AE2  0E01               	movlw	1
  3235  002AE4  6E56               	movwf	___awmod@counter^0,c
  3236  002AE6  EF79  F015         	goto	l3395
  3237  002AEA                     l3393:
  3238  002AEA  90D8               	bcf	status,0,c
  3239  002AEC  3654               	rlcf	___awmod@divisor^0,f,c
  3240  002AEE  3655               	rlcf	(___awmod@divisor+1)^0,f,c
  3241  002AF0  2A56               	incf	___awmod@counter^0,f,c
  3242  002AF2                     l3395:
  3243  002AF2  AE55               	btfss	(___awmod@divisor+1)^0,7,c
  3244  002AF4  EF7E  F015         	goto	u3301
  3245  002AF8  EF80  F015         	goto	u3300
  3246  002AFC                     u3301:
  3247  002AFC  EF75  F015         	goto	l3393
  3248  002B00                     u3300:
  3249  002B00                     l3397:
  3250  002B00  5054               	movf	___awmod@divisor^0,w,c
  3251  002B02  5C52               	subwf	___awmod@dividend^0,w,c
  3252  002B04  5055               	movf	(___awmod@divisor+1)^0,w,c
  3253  002B06  5853               	subwfb	(___awmod@dividend+1)^0,w,c
  3254  002B08  A0D8               	btfss	status,0,c
  3255  002B0A  EF89  F015         	goto	u3311
  3256  002B0E  EF8B  F015         	goto	u3310
  3257  002B12                     u3311:
  3258  002B12  EF8F  F015         	goto	l3401
  3259  002B16                     u3310:
  3260  002B16  5054               	movf	___awmod@divisor^0,w,c
  3261  002B18  5E52               	subwf	___awmod@dividend^0,f,c
  3262  002B1A  5055               	movf	(___awmod@divisor+1)^0,w,c
  3263  002B1C  5A53               	subwfb	(___awmod@dividend+1)^0,f,c
  3264  002B1E                     l3401:
  3265  002B1E  90D8               	bcf	status,0,c
  3266  002B20  3255               	rrcf	(___awmod@divisor+1)^0,f,c
  3267  002B22  3254               	rrcf	___awmod@divisor^0,f,c
  3268  002B24  2E56               	decfsz	___awmod@counter^0,f,c
  3269  002B26  EF80  F015         	goto	l3397
  3270  002B2A                     l3405:
  3271  002B2A  5057               	movf	___awmod@sign^0,w,c
  3272  002B2C  B4D8               	btfsc	status,2,c
  3273  002B2E  EF9B  F015         	goto	u3321
  3274  002B32  EF9D  F015         	goto	u3320
  3275  002B36                     u3321:
  3276  002B36  EFA1  F015         	goto	l3409
  3277  002B3A                     u3320:
  3278  002B3A  6C52               	negf	___awmod@dividend^0,c
  3279  002B3C  1E53               	comf	(___awmod@dividend+1)^0,f,c
  3280  002B3E  B0D8               	btfsc	status,0,c
  3281  002B40  2A53               	incf	(___awmod@dividend+1)^0,f,c
  3282  002B42                     l3409:
  3283  002B42  C052  F052         	movff	___awmod@dividend,?___awmod
  3284  002B46  C053  F053         	movff	___awmod@dividend+1,?___awmod+1
  3285  002B4A  0012               	return		;funcret
  3286  002B4C                     __end_of___awmod:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _appInit *****************
  3290 ;; Defined at:
  3291 ;;		line 12 in file "app.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    5
  3312 ;; This function calls:
  3313 ;;		_adcInit
  3314 ;;		_appISRConfig
  3315 ;;		_appLCD_Init
  3316 ;;		_appTimerInit
  3317 ;;		_appTimerStart
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text13
  3324  003048                     __ptext13:
  3325                           	callstack 0
  3326  003048                     _appInit:
  3327                           	callstack 25
  3328  003048                     
  3329                           ;app.c: 14:     appISRConfig();
  3330  003048  EC40  F018         	call	_appISRConfig	;wreg free
  3331  00304C                     
  3332                           ;app.c: 15:     appLCD_Init();
  3333  00304C  ECA6  F015         	call	_appLCD_Init	;wreg free
  3334  003050                     
  3335                           ;app.c: 16:     adcInit(2);
  3336  003050  0E02               	movlw	2
  3337  003052  ECD6  F016         	call	_adcInit
  3338  003056                     
  3339                           ;app.c: 17:     appTimerInit();
  3340  003056  EC30  F018         	call	_appTimerInit	;wreg free
  3341  00305A                     
  3342                           ;app.c: 18:     appTimerStart();
  3343  00305A  EC3A  F018         	call	_appTimerStart	;wreg free
  3344  00305E  0012               	return		;funcret
  3345  003060                     __end_of_appInit:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _appTimerInit *****************
  3349 ;; Defined at:
  3350 ;;		line 53 in file "servo.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    2
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_appInit
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text14
  3379  003060                     __ptext14:
  3380                           	callstack 0
  3381  003060                     _appTimerInit:
  3382                           	callstack 27
  3383  003060                     
  3384                           ;servo.c: 58:     T3CONbits.TMR3ON = 0;
  3385  003060  90B1               	bcf	177,0,c	;volatile
  3386                           
  3387                           ;servo.c: 59:     T3CONbits.RD16 = 1;
  3388  003062  8EB1               	bsf	177,7,c	;volatile
  3389                           
  3390                           ;servo.c: 60:     T3CONbits.TMR3CS = 0;
  3391  003064  92B1               	bcf	177,1,c	;volatile
  3392  003066                     
  3393                           ;servo.c: 61:     T3CONbits.T3CKPS = 0b11;
  3394  003066  0E30               	movlw	48
  3395  003068  12B1               	iorwf	177,f,c	;volatile
  3396  00306A                     
  3397                           ;servo.c: 62:     T3CONbits.T3NSYNC = 1;
  3398  00306A  84B1               	bsf	177,2,c	;volatile
  3399  00306C                     
  3400                           ;servo.c: 68:     PIR2bits.TMR3IF = 0;
  3401  00306C  92A1               	bcf	161,1,c	;volatile
  3402  00306E                     
  3403                           ;servo.c: 69:     IPR2bits.TMR3IP = 0;
  3404  00306E  92A2               	bcf	162,1,c	;volatile
  3405  003070                     
  3406                           ;servo.c: 70:     PIE2bits.TMR3IE = 1;
  3407  003070  82A0               	bsf	160,1,c	;volatile
  3408  003072  0012               	return		;funcret
  3409  003074                     __end_of_appTimerInit:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _appLCD_Init *****************
  3413 ;; Defined at:
  3414 ;;		line 197 in file "flex_lcd.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3430 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3431 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3432 ;;Total ram usage:        2 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    4
  3435 ;; This function calls:
  3436 ;;		_Lcd_Cmd
  3437 ;;		_Lcd_Init
  3438 ;;		_Lcd_Out
  3439 ;; This function is called by:
  3440 ;;		_appInit
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text15
  3445  002B4C                     __ptext15:
  3446                           	callstack 0
  3447  002B4C                     _appLCD_Init:
  3448                           	callstack 25
  3449  002B4C                     
  3450                           ;flex_lcd.c: 199:     Lcd_Init();
  3451  002B4C  ECEE  F014         	call	_Lcd_Init	;wreg free
  3452                           
  3453                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  3454  002B50  0E01               	movlw	1
  3455  002B52  EC2B  F012         	call	_Lcd_Cmd
  3456                           
  3457                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  3458  002B56  0E0C               	movlw	12
  3459  002B58  EC2B  F012         	call	_Lcd_Cmd
  3460  002B5C                     
  3461                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  3462  002B5C  0E02               	movlw	2
  3463  002B5E  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3464  002B60  0E86               	movlw	134
  3465  002B62  6E0E               	movwf	??_appLCD_Init^0,c
  3466  002B64  0E99               	movlw	153
  3467  002B66                     u4437:
  3468  002B66  2EE8               	decfsz	wreg,f,c
  3469  002B68  D7FE               	bra	u4437
  3470  002B6A  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3471  002B6C  D7FC               	bra	u4437
  3472  002B6E  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3473  002B70  D7FA               	bra	u4437
  3474  002B72  F000               	nop	
  3475  002B74                     
  3476                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  3477  002B74  0E03               	movlw	3
  3478  002B76  6E07               	movwf	Lcd_Out@x^0,c
  3479  002B78  0E1D               	movlw	low STR_3
  3480  002B7A  6E08               	movwf	Lcd_Out@buffer^0,c
  3481  002B7C  0E08               	movlw	high STR_3
  3482  002B7E  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3483  002B80  0E01               	movlw	1
  3484  002B82  ECC2  F013         	call	_Lcd_Out
  3485  002B86                     
  3486                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  3487  002B86  0E06               	movlw	6
  3488  002B88  6E07               	movwf	Lcd_Out@x^0,c
  3489  002B8A  0E32               	movlw	low STR_4
  3490  002B8C  6E08               	movwf	Lcd_Out@buffer^0,c
  3491  002B8E  0E08               	movlw	high STR_4
  3492  002B90  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  3493  002B92  0E02               	movlw	2
  3494  002B94  ECC2  F013         	call	_Lcd_Out
  3495  002B98                     
  3496                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  3497  002B98  0E1F               	movlw	31
  3498  002B9A  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3499  002B9C  0E71               	movlw	113
  3500  002B9E  6E0E               	movwf	??_appLCD_Init^0,c
  3501  002BA0  0E1E               	movlw	30
  3502  002BA2                     u4447:
  3503  002BA2  2EE8               	decfsz	wreg,f,c
  3504  002BA4  D7FE               	bra	u4447
  3505  002BA6  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3506  002BA8  D7FC               	bra	u4447
  3507  002BAA  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3508  002BAC  D7FA               	bra	u4447
  3509  002BAE  D000               	nop2	
  3510                           
  3511                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  3512  002BB0  0E01               	movlw	1
  3513  002BB2  EC2B  F012         	call	_Lcd_Cmd
  3514  002BB6  0E02               	movlw	2
  3515  002BB8  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  3516  002BBA  0E86               	movlw	134
  3517  002BBC  6E0E               	movwf	??_appLCD_Init^0,c
  3518  002BBE  0E99               	movlw	153
  3519  002BC0                     u4457:
  3520  002BC0  2EE8               	decfsz	wreg,f,c
  3521  002BC2  D7FE               	bra	u4457
  3522  002BC4  2E0E               	decfsz	??_appLCD_Init^0,f,c
  3523  002BC6  D7FC               	bra	u4457
  3524  002BC8  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  3525  002BCA  D7FA               	bra	u4457
  3526  002BCC  F000               	nop	
  3527  002BCE  0012               	return		;funcret
  3528  002BD0                     __end_of_appLCD_Init:
  3529                           	callstack 0
  3530                           
  3531 ;; *************** function _Lcd_Init *****************
  3532 ;; Defined at:
  3533 ;;		line 31 in file "flex_lcd.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  i               1    7[COMRAM] unsigned char 
  3538 ;;  data            1    0        unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0
  3549 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3550 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3551 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3552 ;;Total ram usage:        3 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    3
  3555 ;; This function calls:
  3556 ;;		_Lcd_Cmd
  3557 ;; This function is called by:
  3558 ;;		_appLCD_Init
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text16
  3563  0029DC                     __ptext16:
  3564                           	callstack 0
  3565  0029DC                     _Lcd_Init:
  3566                           	callstack 25
  3567  0029DC                     
  3568                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  3569  0029DC  9E95               	bcf	149,7,c	;volatile
  3570                           
  3571                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  3572  0029DE  9C95               	bcf	149,6,c	;volatile
  3573                           
  3574                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  3575  0029E0  9A95               	bcf	149,5,c	;volatile
  3576                           
  3577                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  3578  0029E2  9895               	bcf	149,4,c	;volatile
  3579                           
  3580                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  3581  0029E4  9695               	bcf	149,3,c	;volatile
  3582                           
  3583                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  3584  0029E6  9495               	bcf	149,2,c	;volatile
  3585  0029E8                     
  3586                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  3587  0029E8  0E85               	movlw	133
  3588  0029EA  6E07               	movwf	??_Lcd_Init^0,c
  3589  0029EC  0E76               	movlw	118
  3590  0029EE                     u4467:
  3591  0029EE  2EE8               	decfsz	wreg,f,c
  3592  0029F0  D7FE               	bra	u4467
  3593  0029F2  2E07               	decfsz	??_Lcd_Init^0,f,c
  3594  0029F4  D7FC               	bra	u4467
  3595  0029F6  D000               	nop2	
  3596  0029F8                     
  3597                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  3598  0029F8  0E00               	movlw	0
  3599  0029FA  6E08               	movwf	Lcd_Init@i^0,c
  3600  0029FC                     l99:
  3601                           
  3602                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  3603  0029FC  9E8C               	bcf	140,7,c	;volatile
  3604                           
  3605                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  3606  0029FE  9C8C               	bcf	140,6,c	;volatile
  3607                           
  3608                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  3609  002A00  8A8C               	bsf	140,5,c	;volatile
  3610                           
  3611                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  3612  002A02  888C               	bsf	140,4,c	;volatile
  3613                           
  3614                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  3615  002A04  968C               	bcf	140,3,c	;volatile
  3616                           
  3617                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  3618  002A06  948C               	bcf	140,2,c	;volatile
  3619                           
  3620                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  3621  002A08  9E8C               	bcf	140,7,c	;volatile
  3622                           
  3623                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  3624  002A0A  9C8C               	bcf	140,6,c	;volatile
  3625                           
  3626                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  3627  002A0C  8A8C               	bsf	140,5,c	;volatile
  3628                           
  3629                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  3630  002A0E  888C               	bsf	140,4,c	;volatile
  3631                           
  3632                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  3633  002A10  868C               	bsf	140,3,c	;volatile
  3634                           
  3635                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  3636  002A12  948C               	bcf	140,2,c	;volatile
  3637  002A14                     
  3638                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  3639  002A14  0E05               	movlw	5
  3640  002A16                     u4477:
  3641  002A16  2EE8               	decfsz	wreg,f,c
  3642  002A18  D7FE               	bra	u4477
  3643  002A1A                     
  3644                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  3645  002A1A  9E8C               	bcf	140,7,c	;volatile
  3646  002A1C                     
  3647                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  3648  002A1C  9C8C               	bcf	140,6,c	;volatile
  3649  002A1E                     
  3650                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  3651  002A1E  8A8C               	bsf	140,5,c	;volatile
  3652  002A20                     
  3653                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  3654  002A20  888C               	bsf	140,4,c	;volatile
  3655  002A22                     
  3656                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  3657  002A22  968C               	bcf	140,3,c	;volatile
  3658  002A24                     
  3659                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  3660  002A24  948C               	bcf	140,2,c	;volatile
  3661                           
  3662                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3663  002A26  0E16               	movlw	22
  3664  002A28  6E07               	movwf	??_Lcd_Init^0,c
  3665  002A2A  0E6C               	movlw	108
  3666  002A2C                     u4487:
  3667  002A2C  2EE8               	decfsz	wreg,f,c
  3668  002A2E  D7FE               	bra	u4487
  3669  002A30  2E07               	decfsz	??_Lcd_Init^0,f,c
  3670  002A32  D7FC               	bra	u4487
  3671  002A34  D000               	nop2	
  3672  002A36                     
  3673                           ;flex_lcd.c: 61:     }
  3674  002A36  2A08               	incf	Lcd_Init@i^0,f,c
  3675  002A38  0E03               	movlw	3
  3676  002A3A  6408               	cpfsgt	Lcd_Init@i^0,c
  3677  002A3C  EF22  F015         	goto	u2841
  3678  002A40  EF24  F015         	goto	u2840
  3679  002A44                     u2841:
  3680  002A44  EFFE  F014         	goto	l99
  3681  002A48                     u2840:
  3682  002A48                     
  3683                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  3684  002A48  9E8C               	bcf	140,7,c	;volatile
  3685                           
  3686                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  3687  002A4A  9C8C               	bcf	140,6,c	;volatile
  3688                           
  3689                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  3690  002A4C  8A8C               	bsf	140,5,c	;volatile
  3691                           
  3692                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  3693  002A4E  988C               	bcf	140,4,c	;volatile
  3694                           
  3695                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  3696  002A50  968C               	bcf	140,3,c	;volatile
  3697                           
  3698                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  3699  002A52  948C               	bcf	140,2,c	;volatile
  3700                           
  3701                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  3702  002A54  9E8C               	bcf	140,7,c	;volatile
  3703                           
  3704                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  3705  002A56  9C8C               	bcf	140,6,c	;volatile
  3706                           
  3707                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  3708  002A58  8A8C               	bsf	140,5,c	;volatile
  3709                           
  3710                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  3711  002A5A  988C               	bcf	140,4,c	;volatile
  3712                           
  3713                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  3714  002A5C  868C               	bsf	140,3,c	;volatile
  3715                           
  3716                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  3717  002A5E  948C               	bcf	140,2,c	;volatile
  3718  002A60                     
  3719                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3720  002A60  0E05               	movlw	5
  3721  002A62                     u4497:
  3722  002A62  2EE8               	decfsz	wreg,f,c
  3723  002A64  D7FE               	bra	u4497
  3724  002A66                     
  3725                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  3726  002A66  9E8C               	bcf	140,7,c	;volatile
  3727  002A68                     
  3728                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  3729  002A68  9C8C               	bcf	140,6,c	;volatile
  3730  002A6A                     
  3731                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  3732  002A6A  8A8C               	bsf	140,5,c	;volatile
  3733  002A6C                     
  3734                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  3735  002A6C  988C               	bcf	140,4,c	;volatile
  3736  002A6E                     
  3737                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  3738  002A6E  968C               	bcf	140,3,c	;volatile
  3739  002A70                     
  3740                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  3741  002A70  948C               	bcf	140,2,c	;volatile
  3742                           
  3743                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3744  002A72  0E16               	movlw	22
  3745  002A74  6E07               	movwf	??_Lcd_Init^0,c
  3746  002A76  0E6C               	movlw	108
  3747  002A78                     u4507:
  3748  002A78  2EE8               	decfsz	wreg,f,c
  3749  002A7A  D7FE               	bra	u4507
  3750  002A7C  2E07               	decfsz	??_Lcd_Init^0,f,c
  3751  002A7E  D7FC               	bra	u4507
  3752  002A80  D000               	nop2	
  3753  002A82                     
  3754                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  3755  002A82  0E28               	movlw	40
  3756  002A84  EC2B  F012         	call	_Lcd_Cmd
  3757  002A88                     
  3758                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  3759  002A88  0E10               	movlw	16
  3760  002A8A  EC2B  F012         	call	_Lcd_Cmd
  3761  002A8E                     
  3762                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  3763  002A8E  0E01               	movlw	1
  3764  002A90  EC2B  F012         	call	_Lcd_Cmd
  3765  002A94                     
  3766                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  3767  002A94  0E0F               	movlw	15
  3768  002A96  EC2B  F012         	call	_Lcd_Cmd
  3769  002A9A  0012               	return		;funcret
  3770  002A9C                     __end_of_Lcd_Init:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _appISRConfig *****************
  3774 ;; Defined at:
  3775 ;;		line 52 in file "app.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		None
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    2
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_appInit
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text17
  3804  003080                     __ptext17:
  3805                           	callstack 0
  3806  003080                     _appISRConfig:
  3807                           	callstack 27
  3808  003080                     
  3809                           ;app.c: 57:     RCONbits.IPEN = 1;
  3810  003080  8ED0               	bsf	208,7,c	;volatile
  3811                           
  3812                           ;app.c: 58:     INTCONbits.GIE_GIEH = 1;
  3813  003082  8EF2               	bsf	242,7,c	;volatile
  3814                           
  3815                           ;app.c: 59:     INTCONbits.PEIE_GIEL = 1;
  3816  003084  8CF2               	bsf	242,6,c	;volatile
  3817  003086  0012               	return		;funcret
  3818  003088                     __end_of_appISRConfig:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _adcInit *****************
  3822 ;; Defined at:
  3823 ;;		line 10 in file "adc.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  ADC_PINs        1    wreg     unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  ADC_PINs        1    4[COMRAM] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0
  3838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3839 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3840 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3841 ;;Total ram usage:        2 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    2
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_appInit
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text18
  3852  002DAC                     __ptext18:
  3853                           	callstack 0
  3854  002DAC                     _adcInit:
  3855                           	callstack 27
  3856                           
  3857                           ;incstack = 0
  3858                           ;adcInit@ADC_PINs stored from wreg
  3859  002DAC  6E05               	movwf	adcInit@ADC_PINs^0,c
  3860  002DAE                     
  3861                           ;adc.c: 10: void adcInit(uint8_t ADC_PINs);adc.c: 11: {;adc.c: 13:     if(ADC_PINs == 0)
  3862  002DAE  5005               	movf	adcInit@ADC_PINs^0,w,c
  3863  002DB0  A4D8               	btfss	status,2,c
  3864  002DB2  EFDD  F016         	goto	u3501
  3865  002DB6  EFDF  F016         	goto	u3500
  3866  002DBA                     u3501:
  3867  002DBA  EFE5  F016         	goto	l3507
  3868  002DBE                     u3500:
  3869  002DBE                     
  3870                           ;adc.c: 14:     {;adc.c: 15:         ADCON1bits.PCFG = 0b1110;
  3871  002DBE  50C1               	movf	193,w,c	;volatile
  3872  002DC0  0BF0               	andlw	-16
  3873  002DC2  090E               	iorlw	14
  3874  002DC4  6EC1               	movwf	193,c	;volatile
  3875                           
  3876                           ;adc.c: 16:     }
  3877  002DC6  EFED  F016         	goto	l3509
  3878  002DCA                     l3507:
  3879                           
  3880                           ;adc.c: 18:     {;adc.c: 19:         ADCON1bits.PCFG = 15 - ADC_PINs;
  3881  002DCA  5005               	movf	adcInit@ADC_PINs^0,w,c
  3882  002DCC  080F               	sublw	15
  3883  002DCE  6E04               	movwf	??_adcInit^0,c
  3884  002DD0  50C1               	movf	193,w,c	;volatile
  3885  002DD2  1804               	xorwf	??_adcInit^0,w,c
  3886  002DD4  0BF0               	andlw	-16
  3887  002DD6  1804               	xorwf	??_adcInit^0,w,c
  3888  002DD8  6EC1               	movwf	193,c	;volatile
  3889  002DDA                     l3509:
  3890                           
  3891                           ;adc.c: 25:     ADCON1bits.VCFG = 0b00;
  3892  002DDA  0ECF               	movlw	-49
  3893  002DDC  16C1               	andwf	193,f,c	;volatile
  3894  002DDE                     
  3895                           ;adc.c: 30:     ADCON2bits.ACQT = 0b010;
  3896  002DDE  50C0               	movf	192,w,c	;volatile
  3897  002DE0  0BC7               	andlw	-57
  3898  002DE2  0910               	iorlw	16
  3899  002DE4  6EC0               	movwf	192,c	;volatile
  3900  002DE6                     
  3901                           ;adc.c: 35:     ADCON2bits.ADCS = 3;
  3902  002DE6  50C0               	movf	192,w,c	;volatile
  3903  002DE8  0BF8               	andlw	-8
  3904  002DEA  0903               	iorlw	3
  3905  002DEC  6EC0               	movwf	192,c	;volatile
  3906  002DEE                     
  3907                           ;adc.c: 38:     ADCON2bits.ADFM = 1;
  3908  002DEE  8EC0               	bsf	192,7,c	;volatile
  3909  002DF0                     
  3910                           ;adc.c: 39:     ADCON0bits.ADON = 1;
  3911  002DF0  80C2               	bsf	194,0,c	;volatile
  3912  002DF2  0012               	return		;funcret
  3913  002DF4                     __end_of_adcInit:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _appTimerStop *****************
  3917 ;; Defined at:
  3918 ;;		line 78 in file "servo.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		None
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3935 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3936 ;;Total ram usage:        0 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    2
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_appGetElements
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text19
  3947  00308E                     __ptext19:
  3948                           	callstack 0
  3949  00308E                     _appTimerStop:
  3950                           	callstack 27
  3951  00308E                     
  3952                           ;servo.c: 80:     T3CONbits.TMR3ON = 0;
  3953  00308E  90B1               	bcf	177,0,c	;volatile
  3954  003090  0012               	return		;funcret
  3955  003092                     __end_of_appTimerStop:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function _appTimerStart *****************
  3959 ;; Defined at:
  3960 ;;		line 72 in file "servo.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    2
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_appInit
  3985 ;;		_appGetElements
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text20
  3990  003074                     __ptext20:
  3991                           	callstack 0
  3992  003074                     _appTimerStart:
  3993                           	callstack 27
  3994  003074                     
  3995                           ;servo.c: 74:     TMR3 = 20536;
  3996  003074  0E50               	movlw	80
  3997  003076  6EB3               	movwf	179,c	;volatile
  3998  003078  0E38               	movlw	56
  3999  00307A  6EB2               	movwf	178,c	;volatile
  4000  00307C                     
  4001                           ;servo.c: 75:     T3CONbits.TMR3ON = 1;
  4002  00307C  80B1               	bsf	177,0,c	;volatile
  4003  00307E  0012               	return		;funcret
  4004  003080                     __end_of_appTimerStart:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _appSubGetData *****************
  4008 ;; Defined at:
  4009 ;;		line 62 in file "app.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  data_Inout      2   36[BANK0 ] PTR struct _state
  4012 ;;		 -> datos(25), 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  cantidad        2   38[BANK0 ] unsigned short 
  4015 ;;  inout           1   40[BANK0 ] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4025 ;;      Params:         0       2       0       0       0       0       0       0       0
  4026 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4028 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4029 ;;Total ram usage:        5 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:   10
  4032 ;; This function calls:
  4033 ;;		_Lcd_Out
  4034 ;;		___wmul
  4035 ;;		_memset
  4036 ;;		_sprintf
  4037 ;;		_teclado
  4038 ;; This function is called by:
  4039 ;;		_appGetElements
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text21
  4044  002686                     __ptext21:
  4045                           	callstack 0
  4046  002686                     _appSubGetData:
  4047                           	callstack 19
  4048  002686                     
  4049                           ;app.c: 62: void appSubGetData(StateMachine *data_Inout);app.c: 63: {;app.c: 64:     uin
      +                          t16_t cantidad = 0;
  4050  002686  0E00               	movlw	0
  4051  002688  0100               	movlb	0	; () banked
  4052  00268A  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  4053  00268C  0E00               	movlw	0
  4054  00268E  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  4055                           
  4056                           ;app.c: 65:     uint8_t inout = 0;
  4057  002690  0E00               	movlw	0
  4058  002692  6F88               	movwf	appSubGetData@inout& (0+255),b
  4059  002694                     
  4060                           ; BSR set to: 0
  4061                           ;app.c: 66:     memset(data_Inout->display,0,sizeof(data_Inout->display));
  4062  002694  0E07               	movlw	7
  4063  002696  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4064  002698  6E04               	movwf	memset@dest^0,c
  4065  00269A  0E00               	movlw	0
  4066  00269C  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4067  00269E  6E05               	movwf	(memset@dest+1)^0,c
  4068  0026A0  0E00               	movlw	0
  4069  0026A2  6E07               	movwf	(memset@c+1)^0,c
  4070  0026A4  0E00               	movlw	0
  4071  0026A6  6E06               	movwf	memset@c^0,c
  4072  0026A8  0E00               	movlw	0
  4073  0026AA  6E09               	movwf	(memset@n+1)^0,c
  4074  0026AC  0E10               	movlw	16
  4075  0026AE  6E08               	movwf	memset@n^0,c
  4076  0026B0  EC75  F00F         	call	_memset	;wreg free
  4077  0026B4                     
  4078                           ;app.c: 67:     Lcd_Out(1,0, (const int8_t*)"C de vacunas:");
  4079  0026B4  0E00               	movlw	0
  4080  0026B6  6E07               	movwf	Lcd_Out@x^0,c
  4081  0026B8  0E01               	movlw	low STR_6
  4082  0026BA  6E08               	movwf	Lcd_Out@buffer^0,c
  4083  0026BC  0E08               	movlw	high STR_6
  4084  0026BE  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  4085  0026C0  0E01               	movlw	1
  4086  0026C2  ECC2  F013         	call	_Lcd_Out
  4087                           
  4088                           ;app.c: 68:     while(inout != '*')
  4089  0026C6  EFAD  F013         	goto	l4193
  4090  0026CA                     l4181:
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;app.c: 69:     {;app.c: 70:         teclado(&inout);
  4094  0026CA  0E88               	movlw	low appSubGetData@inout
  4095  0026CC  6E04               	movwf	teclado@valor^0,c
  4096  0026CE  0E00               	movlw	high appSubGetData@inout
  4097  0026D0  6E05               	movwf	(teclado@valor+1)^0,c
  4098  0026D2  EC26  F00B         	call	_teclado	;wreg free
  4099  0026D6                     
  4100                           ;app.c: 72:         if((inout >= '0') && (inout <= '9'))
  4101  0026D6  0E2F               	movlw	47
  4102  0026D8  0100               	movlb	0	; () banked
  4103  0026DA  6588               	cpfsgt	appSubGetData@inout& (0+255),b
  4104  0026DC  EF72  F013         	goto	u4281
  4105  0026E0  EF74  F013         	goto	u4280
  4106  0026E4                     u4281:
  4107  0026E4  EF91  F013         	goto	l4189
  4108  0026E8                     u4280:
  4109  0026E8                     
  4110                           ; BSR set to: 0
  4111  0026E8  0E3A               	movlw	58
  4112  0026EA  6188               	cpfslt	appSubGetData@inout& (0+255),b
  4113  0026EC  EF7A  F013         	goto	u4291
  4114  0026F0  EF7C  F013         	goto	u4290
  4115  0026F4                     u4291:
  4116  0026F4  EF91  F013         	goto	l4189
  4117  0026F8                     u4290:
  4118  0026F8                     
  4119                           ; BSR set to: 0
  4120                           ;app.c: 73:         {;app.c: 74:             cantidad = (cantidad*10)+(inout - 48);
  4121  0026F8  C086  F004         	movff	appSubGetData@cantidad,___wmul@multiplier
  4122  0026FC  C087  F005         	movff	appSubGetData@cantidad+1,___wmul@multiplier+1
  4123  002700  0E00               	movlw	0
  4124  002702  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  4125  002704  0E0A               	movlw	10
  4126  002706  6E06               	movwf	___wmul@multiplicand^0,c
  4127  002708  EC04  F018         	call	___wmul	;wreg free
  4128  00270C  0100               	movlb	0	; () banked
  4129  00270E  5188               	movf	appSubGetData@inout& (0+255),w,b
  4130  002710  2604               	addwf	?___wmul^0,f,c
  4131  002712  0E00               	movlw	0
  4132  002714  2205               	addwfc	(?___wmul+1)^0,f,c
  4133  002716  0ED0               	movlw	208
  4134  002718  2404               	addwf	?___wmul^0,w,c
  4135  00271A  6F86               	movwf	appSubGetData@cantidad& (0+255),b
  4136  00271C  0EFF               	movlw	255
  4137  00271E  2005               	addwfc	(?___wmul+1)^0,w,c
  4138  002720  6F87               	movwf	(appSubGetData@cantidad+1)& (0+255),b
  4139  002722                     l4189:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;app.c: 76:         sprintf((char *)data_Inout->display,"%d",cantidad);
  4143  002722  0E07               	movlw	7
  4144  002724  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4145  002726  6F72               	movwf	sprintf@s& (0+255),b
  4146  002728  0E00               	movlw	0
  4147  00272A  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4148  00272C  6F73               	movwf	(sprintf@s+1)& (0+255),b
  4149  00272E  0E3A               	movlw	low (STR_5+2)
  4150  002730  6F74               	movwf	sprintf@fmt& (0+255),b
  4151  002732  0E08               	movlw	high (STR_5+2)
  4152  002734  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  4153  002736  C086  F076         	movff	appSubGetData@cantidad,?_sprintf+4
  4154  00273A  C087  F077         	movff	appSubGetData@cantidad+1,?_sprintf+5
  4155  00273E  EC84  F016         	call	_sprintf	;wreg free
  4156  002742                     
  4157                           ;app.c: 77:         Lcd_Out(2,0, (int8_t*)data_Inout->display);
  4158  002742  0E00               	movlw	0
  4159  002744  6E07               	movwf	Lcd_Out@x^0,c
  4160  002746  0E07               	movlw	7
  4161  002748  0100               	movlb	0	; () banked
  4162  00274A  2584               	addwf	appSubGetData@data_Inout& (0+255),w,b
  4163  00274C  6E08               	movwf	Lcd_Out@buffer^0,c
  4164  00274E  0E00               	movlw	0
  4165  002750  2185               	addwfc	(appSubGetData@data_Inout+1)& (0+255),w,b
  4166  002752  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  4167  002754  0E02               	movlw	2
  4168  002756  ECC2  F013         	call	_Lcd_Out
  4169  00275A                     l4193:
  4170                           
  4171                           ;app.c: 68:     while(inout != '*')
  4172  00275A  0E2A               	movlw	42
  4173  00275C  0100               	movlb	0	; () banked
  4174  00275E  1988               	xorwf	appSubGetData@inout& (0+255),w,b
  4175  002760  A4D8               	btfss	status,2,c
  4176  002762  EFB5  F013         	goto	u4301
  4177  002766  EFB7  F013         	goto	u4300
  4178  00276A                     u4301:
  4179  00276A  EF65  F013         	goto	l4181
  4180  00276E                     u4300:
  4181  00276E                     
  4182                           ; BSR set to: 0
  4183                           ;app.c: 79:     data_Inout->elements = (int16_t)cantidad;
  4184  00276E  EE20 F001          	lfsr	2,1
  4185  002772  5184               	movf	appSubGetData@data_Inout& (0+255),w,b
  4186  002774  26D9               	addwf	fsr2l,f,c
  4187  002776  5185               	movf	(appSubGetData@data_Inout+1)& (0+255),w,b
  4188  002778  22DA               	addwfc	fsr2h,f,c
  4189  00277A  C086  FFDE         	movff	appSubGetData@cantidad,postinc2
  4190  00277E  C087  FFDD         	movff	appSubGetData@cantidad+1,postdec2
  4191  002782                     
  4192                           ; BSR set to: 0
  4193  002782  0012               	return		;funcret
  4194  002784                     __end_of_appSubGetData:
  4195                           	callstack 0
  4196                           
  4197 ;; *************** function _teclado *****************
  4198 ;; Defined at:
  4199 ;;		line 10 in file "teclado.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  valor           2    3[COMRAM] PTR unsigned char 
  4202 ;;		 -> appSubGetData@inout(1), datos(25), 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;		None
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      void 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4214 ;;      Params:         2       0       0       0       0       0       0       0       0
  4215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4217 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4218 ;;Total ram usage:        2 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    2
  4221 ;; This function calls:
  4222 ;;		Nothing
  4223 ;; This function is called by:
  4224 ;;		_appStateInitial
  4225 ;;		_appSubGetData
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text22
  4230  00164C                     __ptext22:
  4231                           	callstack 0
  4232  00164C                     _teclado:
  4233                           	callstack 27
  4234  00164C                     
  4235                           ;teclado.c: 11:     *valor = 0;
  4236  00164C  C004  FFD9         	movff	teclado@valor,fsr2l
  4237  001650  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4238  001654  0E00               	movlw	0
  4239  001656  6EDF               	movwf	indf2,c
  4240  001658                     
  4241                           ;teclado.c: 12:     PORTB=0xF0;
  4242  001658  0EF0               	movlw	240
  4243  00165A  6E81               	movwf	129,c	;volatile
  4244  00165C                     
  4245                           ;teclado.c: 13:     if(PORTB != 0xF0){
  4246  00165C  0EF0               	movlw	240
  4247  00165E  1881               	xorwf	129,w,c	;volatile
  4248  001660  B4D8               	btfsc	status,2,c
  4249  001662  EF35  F00B         	goto	u2661
  4250  001666  EF37  F00B         	goto	u2660
  4251  00166A                     u2661:
  4252  00166A  EF0F  F00C         	goto	l3047
  4253  00166E                     u2660:
  4254  00166E                     
  4255                           ;teclado.c: 14:         PORTB=0xFE;
  4256  00166E  0EFE               	movlw	254
  4257  001670  6E81               	movwf	129,c	;volatile
  4258  001672                     
  4259                           ;teclado.c: 15:             if(PORTBbits.RB4==0){*valor = '*';}
  4260  001672  B881               	btfsc	129,4,c	;volatile
  4261  001674  EF3E  F00B         	goto	u2671
  4262  001678  EF40  F00B         	goto	u2670
  4263  00167C                     u2671:
  4264  00167C  EF46  F00B         	goto	l2981
  4265  001680                     u2670:
  4266  001680  C004  FFD9         	movff	teclado@valor,fsr2l
  4267  001684  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4268  001688  0E2A               	movlw	42
  4269  00168A  6EDF               	movwf	indf2,c
  4270  00168C                     l2981:
  4271                           
  4272                           ;teclado.c: 16:             if(PORTBbits.RB5==0){*valor = '0';}
  4273  00168C  BA81               	btfsc	129,5,c	;volatile
  4274  00168E  EF4B  F00B         	goto	u2681
  4275  001692  EF4D  F00B         	goto	u2680
  4276  001696                     u2681:
  4277  001696  EF53  F00B         	goto	l2985
  4278  00169A                     u2680:
  4279  00169A  C004  FFD9         	movff	teclado@valor,fsr2l
  4280  00169E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4281  0016A2  0E30               	movlw	48
  4282  0016A4  6EDF               	movwf	indf2,c
  4283  0016A6                     l2985:
  4284                           
  4285                           ;teclado.c: 17:             if(PORTBbits.RB6==0){*valor = '#';}
  4286  0016A6  BC81               	btfsc	129,6,c	;volatile
  4287  0016A8  EF58  F00B         	goto	u2691
  4288  0016AC  EF5A  F00B         	goto	u2690
  4289  0016B0                     u2691:
  4290  0016B0  EF60  F00B         	goto	l2989
  4291  0016B4                     u2690:
  4292  0016B4  C004  FFD9         	movff	teclado@valor,fsr2l
  4293  0016B8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4294  0016BC  0E23               	movlw	35
  4295  0016BE  6EDF               	movwf	indf2,c
  4296  0016C0                     l2989:
  4297                           
  4298                           ;teclado.c: 18:             if(PORTBbits.RB7==0){*valor = 'D';}
  4299  0016C0  BE81               	btfsc	129,7,c	;volatile
  4300  0016C2  EF65  F00B         	goto	u2701
  4301  0016C6  EF67  F00B         	goto	u2700
  4302  0016CA                     u2701:
  4303  0016CA  EF6D  F00B         	goto	l2993
  4304  0016CE                     u2700:
  4305  0016CE  C004  FFD9         	movff	teclado@valor,fsr2l
  4306  0016D2  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4307  0016D6  0E44               	movlw	68
  4308  0016D8  6EDF               	movwf	indf2,c
  4309  0016DA                     l2993:
  4310                           
  4311                           ;teclado.c: 19:         PORTB=0xFD;
  4312  0016DA  0EFD               	movlw	253
  4313  0016DC  6E81               	movwf	129,c	;volatile
  4314  0016DE                     
  4315                           ;teclado.c: 20:             if(PORTBbits.RB4==0){*valor = '7';}
  4316  0016DE  B881               	btfsc	129,4,c	;volatile
  4317  0016E0  EF74  F00B         	goto	u2711
  4318  0016E4  EF76  F00B         	goto	u2710
  4319  0016E8                     u2711:
  4320  0016E8  EF7C  F00B         	goto	l2999
  4321  0016EC                     u2710:
  4322  0016EC  C004  FFD9         	movff	teclado@valor,fsr2l
  4323  0016F0  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4324  0016F4  0E37               	movlw	55
  4325  0016F6  6EDF               	movwf	indf2,c
  4326  0016F8                     l2999:
  4327                           
  4328                           ;teclado.c: 21:             if(PORTBbits.RB5==0){*valor = '8';}
  4329  0016F8  BA81               	btfsc	129,5,c	;volatile
  4330  0016FA  EF81  F00B         	goto	u2721
  4331  0016FE  EF83  F00B         	goto	u2720
  4332  001702                     u2721:
  4333  001702  EF89  F00B         	goto	l3003
  4334  001706                     u2720:
  4335  001706  C004  FFD9         	movff	teclado@valor,fsr2l
  4336  00170A  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4337  00170E  0E38               	movlw	56
  4338  001710  6EDF               	movwf	indf2,c
  4339  001712                     l3003:
  4340                           
  4341                           ;teclado.c: 22:             if(PORTBbits.RB6==0){*valor = '9';}
  4342  001712  BC81               	btfsc	129,6,c	;volatile
  4343  001714  EF8E  F00B         	goto	u2731
  4344  001718  EF90  F00B         	goto	u2730
  4345  00171C                     u2731:
  4346  00171C  EF96  F00B         	goto	l3007
  4347  001720                     u2730:
  4348  001720  C004  FFD9         	movff	teclado@valor,fsr2l
  4349  001724  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4350  001728  0E39               	movlw	57
  4351  00172A  6EDF               	movwf	indf2,c
  4352  00172C                     l3007:
  4353                           
  4354                           ;teclado.c: 23:             if(PORTBbits.RB7==0){*valor = 'C';}
  4355  00172C  BE81               	btfsc	129,7,c	;volatile
  4356  00172E  EF9B  F00B         	goto	u2741
  4357  001732  EF9D  F00B         	goto	u2740
  4358  001736                     u2741:
  4359  001736  EFA3  F00B         	goto	l3011
  4360  00173A                     u2740:
  4361  00173A  C004  FFD9         	movff	teclado@valor,fsr2l
  4362  00173E  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4363  001742  0E43               	movlw	67
  4364  001744  6EDF               	movwf	indf2,c
  4365  001746                     l3011:
  4366                           
  4367                           ;teclado.c: 24:         PORTB=0xFB;
  4368  001746  0EFB               	movlw	251
  4369  001748  6E81               	movwf	129,c	;volatile
  4370  00174A                     
  4371                           ;teclado.c: 25:             if(PORTBbits.RB4==0){*valor = '4';}
  4372  00174A  B881               	btfsc	129,4,c	;volatile
  4373  00174C  EFAA  F00B         	goto	u2751
  4374  001750  EFAC  F00B         	goto	u2750
  4375  001754                     u2751:
  4376  001754  EFB2  F00B         	goto	l3017
  4377  001758                     u2750:
  4378  001758  C004  FFD9         	movff	teclado@valor,fsr2l
  4379  00175C  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4380  001760  0E34               	movlw	52
  4381  001762  6EDF               	movwf	indf2,c
  4382  001764                     l3017:
  4383                           
  4384                           ;teclado.c: 26:             if(PORTBbits.RB5==0){*valor = '5';}
  4385  001764  BA81               	btfsc	129,5,c	;volatile
  4386  001766  EFB7  F00B         	goto	u2761
  4387  00176A  EFB9  F00B         	goto	u2760
  4388  00176E                     u2761:
  4389  00176E  EFBF  F00B         	goto	l3021
  4390  001772                     u2760:
  4391  001772  C004  FFD9         	movff	teclado@valor,fsr2l
  4392  001776  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4393  00177A  0E35               	movlw	53
  4394  00177C  6EDF               	movwf	indf2,c
  4395  00177E                     l3021:
  4396                           
  4397                           ;teclado.c: 27:             if(PORTBbits.RB6==0){*valor = '6';}
  4398  00177E  BC81               	btfsc	129,6,c	;volatile
  4399  001780  EFC4  F00B         	goto	u2771
  4400  001784  EFC6  F00B         	goto	u2770
  4401  001788                     u2771:
  4402  001788  EFCC  F00B         	goto	l3025
  4403  00178C                     u2770:
  4404  00178C  C004  FFD9         	movff	teclado@valor,fsr2l
  4405  001790  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4406  001794  0E36               	movlw	54
  4407  001796  6EDF               	movwf	indf2,c
  4408  001798                     l3025:
  4409                           
  4410                           ;teclado.c: 28:             if(PORTBbits.RB7==0){*valor = 'B';}
  4411  001798  BE81               	btfsc	129,7,c	;volatile
  4412  00179A  EFD1  F00B         	goto	u2781
  4413  00179E  EFD3  F00B         	goto	u2780
  4414  0017A2                     u2781:
  4415  0017A2  EFD9  F00B         	goto	l3029
  4416  0017A6                     u2780:
  4417  0017A6  C004  FFD9         	movff	teclado@valor,fsr2l
  4418  0017AA  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4419  0017AE  0E42               	movlw	66
  4420  0017B0  6EDF               	movwf	indf2,c
  4421  0017B2                     l3029:
  4422                           
  4423                           ;teclado.c: 29:         PORTB=0xF7;
  4424  0017B2  0EF7               	movlw	247
  4425  0017B4  6E81               	movwf	129,c	;volatile
  4426  0017B6                     
  4427                           ;teclado.c: 30:             if(PORTBbits.RB4==0){*valor = '1';}
  4428  0017B6  B881               	btfsc	129,4,c	;volatile
  4429  0017B8  EFE0  F00B         	goto	u2791
  4430  0017BC  EFE2  F00B         	goto	u2790
  4431  0017C0                     u2791:
  4432  0017C0  EFE8  F00B         	goto	l3035
  4433  0017C4                     u2790:
  4434  0017C4  C004  FFD9         	movff	teclado@valor,fsr2l
  4435  0017C8  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4436  0017CC  0E31               	movlw	49
  4437  0017CE  6EDF               	movwf	indf2,c
  4438  0017D0                     l3035:
  4439                           
  4440                           ;teclado.c: 31:             if(PORTBbits.RB5==0){*valor = '2';}
  4441  0017D0  BA81               	btfsc	129,5,c	;volatile
  4442  0017D2  EFED  F00B         	goto	u2801
  4443  0017D6  EFEF  F00B         	goto	u2800
  4444  0017DA                     u2801:
  4445  0017DA  EFF5  F00B         	goto	l3039
  4446  0017DE                     u2800:
  4447  0017DE  C004  FFD9         	movff	teclado@valor,fsr2l
  4448  0017E2  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4449  0017E6  0E32               	movlw	50
  4450  0017E8  6EDF               	movwf	indf2,c
  4451  0017EA                     l3039:
  4452                           
  4453                           ;teclado.c: 32:             if(PORTBbits.RB6==0){*valor = '3';}
  4454  0017EA  BC81               	btfsc	129,6,c	;volatile
  4455  0017EC  EFFA  F00B         	goto	u2811
  4456  0017F0  EFFC  F00B         	goto	u2810
  4457  0017F4                     u2811:
  4458  0017F4  EF02  F00C         	goto	l3043
  4459  0017F8                     u2810:
  4460  0017F8  C004  FFD9         	movff	teclado@valor,fsr2l
  4461  0017FC  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4462  001800  0E33               	movlw	51
  4463  001802  6EDF               	movwf	indf2,c
  4464  001804                     l3043:
  4465                           
  4466                           ;teclado.c: 33:             if(PORTBbits.RB7==0){*valor = 'A';}
  4467  001804  BE81               	btfsc	129,7,c	;volatile
  4468  001806  EF07  F00C         	goto	u2821
  4469  00180A  EF09  F00C         	goto	u2820
  4470  00180E                     u2821:
  4471  00180E  EF0F  F00C         	goto	l3047
  4472  001812                     u2820:
  4473  001812  C004  FFD9         	movff	teclado@valor,fsr2l
  4474  001816  C005  FFDA         	movff	teclado@valor+1,fsr2h
  4475  00181A  0E41               	movlw	65
  4476  00181C  6EDF               	movwf	indf2,c
  4477  00181E                     l3047:
  4478                           
  4479                           ;teclado.c: 35:     PORTB = 0xF0;
  4480  00181E  0EF0               	movlw	240
  4481  001820  6E81               	movwf	129,c	;volatile
  4482  001822                     l3049:
  4483  001822  0EF0               	movlw	240
  4484  001824  1881               	xorwf	129,w,c	;volatile
  4485  001826  A4D8               	btfss	status,2,c
  4486  001828  EF18  F00C         	goto	u2831
  4487  00182C  EF1A  F00C         	goto	u2830
  4488  001830                     u2831:
  4489  001830  EF11  F00C         	goto	l3049
  4490  001834                     u2830:
  4491  001834  0012               	return		;funcret
  4492  001836                     __end_of_teclado:
  4493                           	callstack 0
  4494                           
  4495 ;; *************** function _sprintf *****************
  4496 ;; Defined at:
  4497 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  s               2   18[BANK0 ] PTR unsigned char 
  4500 ;;		 -> appElemts@dataout(6), datos(25), 
  4501 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  4502 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  f               6   30[BANK0 ] struct _IO_FILE
  4505 ;;  ap              2   28[BANK0 ] PTR void [1]
  4506 ;;		 -> ?_sprintf(2), 
  4507 ;;  ret             2    0        int 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  2   18[BANK0 ] int 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4517 ;;      Params:         0       8       0       0       0       0       0       0       0
  4518 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4520 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4521 ;;Total ram usage:       18 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    9
  4524 ;; This function calls:
  4525 ;;		_vfprintf
  4526 ;; This function is called by:
  4527 ;;		_appADC
  4528 ;;		_appBat
  4529 ;;		_appElemts
  4530 ;;		_appSubGetData
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text23
  4535  002D08                     __ptext23:
  4536                           	callstack 0
  4537  002D08                     _sprintf:
  4538                           	callstack 19
  4539  002D08  0E76               	movlw	low (?_sprintf+4)
  4540  002D0A  0100               	movlb	0	; () banked
  4541  002D0C  6F7C               	movwf	sprintf@ap& (0+255),b
  4542  002D0E  0E00               	movlw	high (?_sprintf+4)
  4543  002D10  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
  4544  002D12  C072  F07E         	movff	sprintf@s,sprintf@f
  4545  002D16  C073  F07F         	movff	sprintf@s+1,sprintf@f+1
  4546  002D1A                     
  4547                           ; BSR set to: 0
  4548  002D1A  0E00               	movlw	0
  4549  002D1C  6F81               	movwf	(sprintf@f+3)& (0+255),b
  4550  002D1E  0E00               	movlw	0
  4551  002D20  6F80               	movwf	(sprintf@f+2)& (0+255),b
  4552  002D22                     
  4553                           ; BSR set to: 0
  4554  002D22  0E00               	movlw	0
  4555  002D24  6F83               	movwf	(sprintf@f+5)& (0+255),b
  4556  002D26  0E00               	movlw	0
  4557  002D28  6F82               	movwf	(sprintf@f+4)& (0+255),b
  4558  002D2A                     
  4559                           ; BSR set to: 0
  4560  002D2A  0E7E               	movlw	low sprintf@f
  4561  002D2C  6F6C               	movwf	vfprintf@fp& (0+255),b
  4562  002D2E  0E00               	movlw	high sprintf@f
  4563  002D30  6F6D               	movwf	(vfprintf@fp+1)& (0+255),b
  4564  002D32  C074  F06E         	movff	sprintf@fmt,vfprintf@fmt
  4565  002D36  C075  F06F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4566  002D3A  0E7C               	movlw	low sprintf@ap
  4567  002D3C  6F70               	movwf	vfprintf@ap& (0+255),b
  4568  002D3E  0E00               	movlw	high sprintf@ap
  4569  002D40  6F71               	movwf	(vfprintf@ap+1)& (0+255),b
  4570  002D42  EC53  F016         	call	_vfprintf	;wreg free
  4571  002D46  0100               	movlb	0	; () banked
  4572  002D48  5180               	movf	(sprintf@f+2)& (0+255),w,b
  4573  002D4A  2572               	addwf	sprintf@s& (0+255),w,b
  4574  002D4C  6ED9               	movwf	fsr2l,c
  4575  002D4E  5181               	movf	(sprintf@f+3)& (0+255),w,b
  4576  002D50  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  4577  002D52  6EDA               	movwf	fsr2h,c
  4578  002D54  0E00               	movlw	0
  4579  002D56  6EDF               	movwf	indf2,c
  4580  002D58                     
  4581                           ; BSR set to: 0
  4582  002D58  0012               	return		;funcret
  4583  002D5A                     __end_of_sprintf:
  4584                           	callstack 0
  4585                           
  4586 ;; *************** function _vfprintf *****************
  4587 ;; Defined at:
  4588 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  4591 ;;		 -> sprintf@f(6), 
  4592 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  4593 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4594 ;;  ap              2   16[BANK0 ] PTR PTR void 
  4595 ;;		 -> sprintf@ap(2), 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  4598 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  2   12[BANK0 ] int 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4608 ;;      Params:         0       6       0       0       0       0       0       0       0
  4609 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4611 ;;      Totals:         2       6       0       0       0       0       0       0       0
  4612 ;;Total ram usage:        8 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    8
  4615 ;; This function calls:
  4616 ;;		_vfpfcnvrt
  4617 ;; This function is called by:
  4618 ;;		_sprintf
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text24
  4623  002CA6                     __ptext24:
  4624                           	callstack 0
  4625  002CA6                     _vfprintf:
  4626                           	callstack 19
  4627  002CA6                     
  4628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4629  002CA6  C06E  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  4630  002CAA  C06F  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4631  002CAE                     
  4632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4633  002CAE  0E00               	movlw	0
  4634  002CB0  0100               	movlb	0	; () banked
  4635  002CB2  6F95               	movwf	(_nout+1)& (0+255),b
  4636  002CB4  0E00               	movlw	0
  4637  002CB6  6F94               	movwf	_nout& (0+255),b
  4638                           
  4639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4640  002CB8  EF71  F016         	goto	l4133
  4641  002CBC                     l4131:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4645  002CBC  C06C  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4646  002CC0  C06D  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4647  002CC4  0E4D               	movlw	low vfprintf@cfmt
  4648  002CC6  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4649  002CC8  0E00               	movlw	high vfprintf@cfmt
  4650  002CCA  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4651  002CCC  C070  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4652  002CD0  C071  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4653  002CD4  EC01  F008         	call	_vfpfcnvrt	;wreg free
  4654  002CD8  5043               	movf	?_vfpfcnvrt^0,w,c
  4655  002CDA  0100               	movlb	0	; () banked
  4656  002CDC  2794               	addwf	_nout& (0+255),f,b
  4657  002CDE  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4658  002CE0  2395               	addwfc	(_nout+1)& (0+255),f,b
  4659  002CE2                     l4133:
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4663  002CE2  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  4664  002CE6  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4665  002CEA                     	if	0	;tblptru may be non-zero
  4666  002CEA                     	endif
  4667  002CEA                     	if	0	;tblptru may be non-zero
  4668  002CEA                     	endif
  4669  002CEA  0008               	tblrd		*
  4670  002CEC  50F5               	movf	tablat,w,c
  4671  002CEE  0900               	iorlw	0
  4672  002CF0  A4D8               	btfss	status,2,c
  4673  002CF2  EF7D  F016         	goto	u4261
  4674  002CF6  EF7F  F016         	goto	u4260
  4675  002CFA                     u4261:
  4676  002CFA  EF5E  F016         	goto	l4131
  4677  002CFE                     u4260:
  4678  002CFE                     
  4679                           ; BSR set to: 0
  4680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4681  002CFE  C094  F06C         	movff	_nout,?_vfprintf
  4682  002D02  C095  F06D         	movff	_nout+1,?_vfprintf+1
  4683  002D06                     
  4684                           ; BSR set to: 0
  4685  002D06  0012               	return		;funcret
  4686  002D08                     __end_of_vfprintf:
  4687                           	callstack 0
  4688                           
  4689 ;; *************** function _vfpfcnvrt *****************
  4690 ;; Defined at:
  4691 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4694 ;;		 -> sprintf@f(6), 
  4695 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4696 ;;		 -> vfprintf@cfmt(2), 
  4697 ;;  ap              2   70[COMRAM] PTR PTR void 
  4698 ;;		 -> sprintf@ap(2), 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  ll              8    0[BANK0 ] long long 
  4701 ;;  llu             8    0        unsigned long long 
  4702 ;;  f               4    0        unsigned long long 
  4703 ;;  vp              3    0        PTR void 
  4704 ;;  ct              3    0        unsigned char [3]
  4705 ;;  cp              3    0        PTR unsigned char 
  4706 ;;  done            2    8[BANK0 ] int 
  4707 ;;  i               2    0        int 
  4708 ;;  c               1    0        unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  2   66[COMRAM] int 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4718 ;;      Params:         6       0       0       0       0       0       0       0       0
  4719 ;;      Locals:         0      12       0       0       0       0       0       0       0
  4720 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4721 ;;      Totals:        10      12       0       0       0       0       0       0       0
  4722 ;;Total ram usage:       22 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    7
  4725 ;; This function calls:
  4726 ;;		_atoi
  4727 ;;		_dtoa
  4728 ;;		_fputc
  4729 ;;		_isdigit
  4730 ;; This function is called by:
  4731 ;;		_vfprintf
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text25
  4736  001002                     __ptext25:
  4737                           	callstack 0
  4738  001002                     _vfpfcnvrt:
  4739                           	callstack 19
  4740  001002                     
  4741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4742  001002  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4743  001006  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4744  00100A  CFDE FFF6          	movff	postinc2,tblptrl
  4745  00100E  CFDD FFF7          	movff	postdec2,tblptrh
  4746  001012                     	if	0	;tblptru may be non-zero
  4747  001012                     	endif
  4748  001012                     	if	0	;tblptru may be non-zero
  4749  001012                     	endif
  4750  001012  0008               	tblrd		*
  4751  001014  50F5               	movf	tablat,w,c
  4752  001016  0A25               	xorlw	37
  4753  001018  A4D8               	btfss	status,2,c
  4754  00101A  EF11  F008         	goto	u4151
  4755  00101E  EF13  F008         	goto	u4150
  4756  001022                     u4151:
  4757  001022  EF9B  F009         	goto	l4109
  4758  001026                     u4150:
  4759  001026                     
  4760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4761  001026  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4762  00102A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4763  00102E  2ADE               	incf	postinc2,f,c
  4764  001030  0E00               	movlw	0
  4765  001032  22DD               	addwfc	postdec2,f,c
  4766  001034                     
  4767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4768  001034  0E00               	movlw	0
  4769  001036  0100               	movlb	0	; () banked
  4770  001038  6F97               	movwf	(_width+1)& (0+255),b
  4771  00103A  0E00               	movlw	0
  4772  00103C  6F96               	movwf	_width& (0+255),b
  4773  00103E  C096  F05A         	movff	_width,_flags
  4774  001042  C097  F05B         	movff	_width+1,_flags+1
  4775  001046                     
  4776                           ; BSR set to: 0
  4777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4778  001046  6858               	setf	_prec^0,c
  4779  001048  6859               	setf	(_prec+1)^0,c
  4780  00104A                     
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4783  00104A  0E00               	movlw	0
  4784  00104C  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4785  00104E  0E00               	movlw	0
  4786  001050  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  4787                           
  4788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4789  001052  EF71  F008         	goto	l4061
  4790  001056                     l4035:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4794  001056  805A               	bsf	_flags^0,0,c
  4795  001058                     l4037:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4799  001058  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4800  00105C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4801  001060  2ADE               	incf	postinc2,f,c
  4802  001062  0E00               	movlw	0
  4803  001064  22DD               	addwfc	postdec2,f,c
  4804                           
  4805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4806  001066  EF71  F008         	goto	l4061
  4807  00106A                     l4039:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4811  00106A  825A               	bsf	_flags^0,1,c
  4812  00106C  EF2C  F008         	goto	l4037
  4813  001070                     l4043:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4817  001070  845A               	bsf	_flags^0,2,c
  4818  001072  EF2C  F008         	goto	l4037
  4819  001076                     l4047:
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4823  001076  865A               	bsf	_flags^0,3,c
  4824  001078  EF2C  F008         	goto	l4037
  4825  00107C                     l4051:
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4829  00107C  885A               	bsf	_flags^0,4,c
  4830  00107E  EF2C  F008         	goto	l4037
  4831  001082                     l4055:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4835  001082  0E00               	movlw	0
  4836  001084  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4837  001086  0E01               	movlw	1
  4838  001088  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  4839                           
  4840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4841  00108A  EF71  F008         	goto	l4061
  4842  00108E                     l4059:
  4843                           
  4844                           ; BSR set to: 0
  4845  00108E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4846  001092  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4847  001096  CFDE FFF6          	movff	postinc2,tblptrl
  4848  00109A  CFDD FFF7          	movff	postdec2,tblptrh
  4849  00109E                     	if	0	;tblptru may be non-zero
  4850  00109E                     	endif
  4851  00109E                     	if	0	;tblptru may be non-zero
  4852  00109E                     	endif
  4853  00109E  0008               	tblrd		*
  4854  0010A0  50F5               	movf	tablat,w,c
  4855  0010A2  6E49               	movwf	??_vfpfcnvrt^0,c
  4856  0010A4  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  4857                           
  4858                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4859                           ; Switch size 1, requested type "simple"
  4860                           ; Number of cases is 1, Range of values is 0 to 0
  4861                           ; switch strategies available:
  4862                           ; Name         Instructions Cycles
  4863                           ; simple_byte            4     3 (average)
  4864                           ;	Chosen strategy is simple_byte
  4865  0010A6  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4866  0010A8  0A00               	xorlw	0	; case 0
  4867  0010AA  B4D8               	btfsc	status,2,c
  4868  0010AC  EF5A  F008         	goto	l4345
  4869  0010B0  EF41  F008         	goto	l4055
  4870  0010B4                     l4345:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ; Switch size 1, requested type "simple"
  4874                           ; Number of cases is 5, Range of values is 32 to 48
  4875                           ; switch strategies available:
  4876                           ; Name         Instructions Cycles
  4877                           ; simple_byte           16     9 (average)
  4878                           ;	Chosen strategy is simple_byte
  4879  0010B4  5049               	movf	??_vfpfcnvrt^0,w,c
  4880  0010B6  0A20               	xorlw	32	; case 32
  4881  0010B8  B4D8               	btfsc	status,2,c
  4882  0010BA  EF3B  F008         	goto	l4047
  4883  0010BE  0A03               	xorlw	3	; case 35
  4884  0010C0  B4D8               	btfsc	status,2,c
  4885  0010C2  EF3E  F008         	goto	l4051
  4886  0010C6  0A08               	xorlw	8	; case 43
  4887  0010C8  B4D8               	btfsc	status,2,c
  4888  0010CA  EF38  F008         	goto	l4043
  4889  0010CE  0A06               	xorlw	6	; case 45
  4890  0010D0  B4D8               	btfsc	status,2,c
  4891  0010D2  EF2B  F008         	goto	l4035
  4892  0010D6  0A1D               	xorlw	29	; case 48
  4893  0010D8  B4D8               	btfsc	status,2,c
  4894  0010DA  EF35  F008         	goto	l4039
  4895  0010DE  EF41  F008         	goto	l4055
  4896  0010E2                     l4061:
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4900  0010E2  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  4901  0010E4  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4902  0010E6  B4D8               	btfsc	status,2,c
  4903  0010E8  EF78  F008         	goto	u4161
  4904  0010EC  EF7A  F008         	goto	u4160
  4905  0010F0                     u4161:
  4906  0010F0  EF47  F008         	goto	l4059
  4907  0010F4                     u4160:
  4908  0010F4                     
  4909                           ; BSR set to: 0
  4910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4911  0010F4  A05A               	btfss	_flags^0,0,c
  4912  0010F6  EF7F  F008         	goto	u4171
  4913  0010FA  EF81  F008         	goto	u4170
  4914  0010FE                     u4171:
  4915  0010FE  EF82  F008         	goto	l4065
  4916  001102                     u4170:
  4917  001102                     
  4918                           ; BSR set to: 0
  4919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4920  001102  925A               	bcf	_flags^0,1,c
  4921  001104                     l4065:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  4925  001104  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4926  001108  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4927  00110C  CFDE FFF6          	movff	postinc2,tblptrl
  4928  001110  CFDD FFF7          	movff	postdec2,tblptrh
  4929  001114                     	if	0	;tblptru may be non-zero
  4930  001114                     	endif
  4931  001114                     	if	0	;tblptru may be non-zero
  4932  001114                     	endif
  4933  001114  0008               	tblrd		*
  4934  001116  50F5               	movf	tablat,w,c
  4935  001118  0A2A               	xorlw	42
  4936  00111A  A4D8               	btfss	status,2,c
  4937  00111C  EF92  F008         	goto	u4181
  4938  001120  EF94  F008         	goto	u4180
  4939  001124                     u4181:
  4940  001124  EFBD  F008         	goto	l4073
  4941  001128                     u4180:
  4942  001128                     
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  4945  001128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4946  00112C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4947  001130  2ADE               	incf	postinc2,f,c
  4948  001132  0E00               	movlw	0
  4949  001134  22DD               	addwfc	postdec2,f,c
  4950                           
  4951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4952  001136  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4953  00113A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4954  00113E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4955  001142  0E02               	movlw	2
  4956  001144  26DE               	addwf	postinc2,f,c
  4957  001146  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4958  00114A  0E00               	movlw	0
  4959  00114C  22DD               	addwfc	postdec2,f,c
  4960  00114E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4961  001152  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4962  001156  CFDE F096          	movff	postinc2,_width
  4963  00115A  CFDD F097          	movff	postdec2,_width+1
  4964  00115E                     
  4965                           ; BSR set to: 0
  4966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  4967  00115E  BF97               	btfsc	(_width+1)& (0+255),7,b
  4968  001160  EFB6  F008         	goto	u4190
  4969  001164  EFB4  F008         	goto	u4191
  4970  001168                     u4191:
  4971  001168  EF01  F009         	goto	l4083
  4972  00116C                     u4190:
  4973  00116C                     
  4974                           ; BSR set to: 0
  4975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  4976  00116C  805A               	bsf	_flags^0,0,c
  4977                           
  4978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  4979  00116E  6D96               	negf	_width& (0+255),b
  4980  001170  1F97               	comf	(_width+1)& (0+255),f,b
  4981  001172  B0D8               	btfsc	status,0,c
  4982  001174  2B97               	incf	(_width+1)& (0+255),f,b
  4983  001176  EF01  F009         	goto	l4083
  4984  00117A                     l4073:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  4988  00117A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4989  00117E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4990  001182  CFDE F00B          	movff	postinc2,atoi@s
  4991  001186  CFDD F00C          	movff	postdec2,atoi@s+1
  4992  00118A  ECE9  F00D         	call	_atoi	;wreg free
  4993  00118E  C00B  F096         	movff	?_atoi,_width
  4994  001192  C00C  F097         	movff	?_atoi+1,_width+1
  4995                           
  4996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4997  001196  EFD4  F008         	goto	l4077
  4998  00119A                     l4075:
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  5002  00119A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5003  00119E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5004  0011A2  2ADE               	incf	postinc2,f,c
  5005  0011A4  0E00               	movlw	0
  5006  0011A6  22DD               	addwfc	postdec2,f,c
  5007  0011A8                     l4077:
  5008  0011A8  0ED0               	movlw	208
  5009  0011AA  6E49               	movwf	??_vfpfcnvrt^0,c
  5010  0011AC  0EFF               	movlw	255
  5011  0011AE  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  5012  0011B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5013  0011B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5014  0011B8  CFDE FFF6          	movff	postinc2,tblptrl
  5015  0011BC  CFDD FFF7          	movff	postdec2,tblptrh
  5016  0011C0                     	if	0	;tblptru may be non-zero
  5017  0011C0                     	endif
  5018  0011C0                     	if	0	;tblptru may be non-zero
  5019  0011C0                     	endif
  5020  0011C0  0008               	tblrd		*
  5021  0011C2  50F5               	movf	tablat,w,c
  5022  0011C4  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5023  0011C6  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  5024  0011C8  5049               	movf	??_vfpfcnvrt^0,w,c
  5025  0011CA  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5026  0011CC  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  5027  0011CE  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5028  0011D0  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  5029  0011D2  E10A               	bnz	u4200
  5030  0011D4  0E0A               	movlw	10
  5031  0011D6  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5032  0011D8  A0D8               	btfss	status,0,c
  5033  0011DA  EFF1  F008         	goto	u4201
  5034  0011DE  EFF4  F008         	goto	u4200
  5035  0011E2                     u4201:
  5036  0011E2  0E01               	movlw	1
  5037  0011E4  EFF5  F008         	goto	u4210
  5038  0011E8                     u4200:
  5039  0011E8  0E00               	movlw	0
  5040  0011EA                     u4210:
  5041  0011EA  0100               	movlb	0	; () banked
  5042  0011EC  6F6A               	movwf	_vfpfcnvrt$1734& (0+255),b
  5043  0011EE  6B6B               	clrf	(_vfpfcnvrt$1734+1)& (0+255),b
  5044  0011F0                     
  5045                           ; BSR set to: 0
  5046  0011F0  516A               	movf	_vfpfcnvrt$1734& (0+255),w,b
  5047  0011F2  116B               	iorwf	(_vfpfcnvrt$1734+1)& (0+255),w,b
  5048  0011F4  A4D8               	btfss	status,2,c
  5049  0011F6  EFFF  F008         	goto	u4221
  5050  0011FA  EF01  F009         	goto	u4220
  5051  0011FE                     u4221:
  5052  0011FE  EFCD  F008         	goto	l4075
  5053  001202                     u4220:
  5054  001202                     l4083:
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5058  001202  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5059  001206  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5060  00120A  CFDE FFF6          	movff	postinc2,tblptrl
  5061  00120E  CFDD FFF7          	movff	postdec2,tblptrh
  5062  001212                     	if	0	;tblptru may be non-zero
  5063  001212                     	endif
  5064  001212                     	if	0	;tblptru may be non-zero
  5065  001212                     	endif
  5066  001212  0008               	tblrd		*
  5067  001214  50F5               	movf	tablat,w,c
  5068  001216  0A64               	xorlw	100
  5069  001218  B4D8               	btfsc	status,2,c
  5070  00121A  EF11  F009         	goto	u4231
  5071  00121E  EF13  F009         	goto	u4230
  5072  001222                     u4231:
  5073  001222  EF25  F009         	goto	l4087
  5074  001226                     u4230:
  5075  001226                     
  5076                           ; BSR set to: 0
  5077  001226  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5078  00122A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5079  00122E  CFDE FFF6          	movff	postinc2,tblptrl
  5080  001232  CFDD FFF7          	movff	postdec2,tblptrh
  5081  001236                     	if	0	;tblptru may be non-zero
  5082  001236                     	endif
  5083  001236                     	if	0	;tblptru may be non-zero
  5084  001236                     	endif
  5085  001236  0008               	tblrd		*
  5086  001238  50F5               	movf	tablat,w,c
  5087  00123A  0A69               	xorlw	105
  5088  00123C  A4D8               	btfss	status,2,c
  5089  00123E  EF23  F009         	goto	u4241
  5090  001242  EF25  F009         	goto	u4240
  5091  001246                     u4241:
  5092  001246  EF65  F009         	goto	l4093
  5093  00124A                     u4240:
  5094  00124A                     l4087:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5098  00124A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5099  00124E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5100  001252  2ADE               	incf	postinc2,f,c
  5101  001254  0E00               	movlw	0
  5102  001256  22DD               	addwfc	postdec2,f,c
  5103                           
  5104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5105  001258  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5106  00125C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5107  001260  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5108  001264  0E02               	movlw	2
  5109  001266  26DE               	addwf	postinc2,f,c
  5110  001268  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5111  00126C  0E00               	movlw	0
  5112  00126E  22DD               	addwfc	postdec2,f,c
  5113  001270  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5114  001274  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5115  001278  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
  5116  00127C  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
  5117  001280  0E00               	movlw	0
  5118  001282  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5119  001284  0EFF               	movlw	-1
  5120  001286  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5121  001288  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5122  00128A  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5123  00128C  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5124  00128E  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5125  001290  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5126  001292                     
  5127                           ; BSR set to: 0
  5128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5129  001292  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  5130  001296  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5131  00129A  C060  F021         	movff	vfpfcnvrt@ll,dtoa@d
  5132  00129E  C061  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5133  0012A2  C062  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5134  0012A6  C063  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5135  0012AA  C064  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5136  0012AE  C065  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5137  0012B2  C066  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5138  0012B6  C067  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5139  0012BA  ECB7  F009         	call	_dtoa	;wreg free
  5140  0012BE  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  5141  0012C2  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5142  0012C6  EFB6  F009         	goto	l1065
  5143  0012CA                     l4093:
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5147  0012CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5148  0012CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5149  0012D2  CFDE FFF6          	movff	postinc2,tblptrl
  5150  0012D6  CFDD FFF7          	movff	postdec2,tblptrh
  5151  0012DA                     	if	0	;tblptru may be non-zero
  5152  0012DA                     	endif
  5153  0012DA                     	if	0	;tblptru may be non-zero
  5154  0012DA                     	endif
  5155  0012DA  0008               	tblrd		*
  5156  0012DC  50F5               	movf	tablat,w,c
  5157  0012DE  0A25               	xorlw	37
  5158  0012E0  A4D8               	btfss	status,2,c
  5159  0012E2  EF75  F009         	goto	u4251
  5160  0012E6  EF77  F009         	goto	u4250
  5161  0012EA                     u4251:
  5162  0012EA  EF8E  F009         	goto	l4103
  5163  0012EE                     u4250:
  5164  0012EE                     
  5165                           ; BSR set to: 0
  5166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5167  0012EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5168  0012F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5169  0012F6  2ADE               	incf	postinc2,f,c
  5170  0012F8  0E00               	movlw	0
  5171  0012FA  22DD               	addwfc	postdec2,f,c
  5172  0012FC                     
  5173                           ; BSR set to: 0
  5174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5175  0012FC  0E00               	movlw	0
  5176  0012FE  6E05               	movwf	(fputc@c+1)^0,c
  5177  001300  0E25               	movlw	37
  5178  001302  6E04               	movwf	fputc@c^0,c
  5179  001304  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5180  001308  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5181  00130C  EC28  F014         	call	_fputc	;wreg free
  5182  001310                     l4099:
  5183                           
  5184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5185  001310  0E00               	movlw	0
  5186  001312  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5187  001314  0E01               	movlw	1
  5188  001316  6E43               	movwf	?_vfpfcnvrt^0,c
  5189  001318  EFB6  F009         	goto	l1065
  5190  00131C                     l4103:
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5194  00131C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5195  001320  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5196  001324  2ADE               	incf	postinc2,f,c
  5197  001326  0E00               	movlw	0
  5198  001328  22DD               	addwfc	postdec2,f,c
  5199  00132A                     
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5202  00132A  0E00               	movlw	0
  5203  00132C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5204  00132E  0E00               	movlw	0
  5205  001330  6E43               	movwf	?_vfpfcnvrt^0,c
  5206  001332  EFB6  F009         	goto	l1065
  5207  001336                     l4109:
  5208                           
  5209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5210  001336  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5211  00133A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5212  00133E  CFDE FFF6          	movff	postinc2,tblptrl
  5213  001342  CFDD FFF7          	movff	postdec2,tblptrh
  5214  001346                     	if	0	;tblptru may be non-zero
  5215  001346                     	endif
  5216  001346                     	if	0	;tblptru may be non-zero
  5217  001346                     	endif
  5218  001346  0008               	tblrd		*
  5219  001348  50F5               	movf	tablat,w,c
  5220  00134A  6E04               	movwf	fputc@c^0,c
  5221  00134C  6A05               	clrf	(fputc@c+1)^0,c
  5222  00134E  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5223  001352  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5224  001356  EC28  F014         	call	_fputc	;wreg free
  5225  00135A                     
  5226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5227  00135A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5228  00135E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5229  001362  2ADE               	incf	postinc2,f,c
  5230  001364  0E00               	movlw	0
  5231  001366  22DD               	addwfc	postdec2,f,c
  5232  001368  EF88  F009         	goto	l4099
  5233  00136C                     l1065:
  5234  00136C  0012               	return		;funcret
  5235  00136E                     __end_of_vfpfcnvrt:
  5236                           	callstack 0
  5237                           
  5238 ;; *************** function _dtoa *****************
  5239 ;; Defined at:
  5240 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5243 ;;		 -> sprintf@f(6), 
  5244 ;;  d               8   32[COMRAM] long long 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  n               8   56[COMRAM] long long 
  5247 ;;  i               2   64[COMRAM] int 
  5248 ;;  s               2   54[COMRAM] int 
  5249 ;;  w               2   52[COMRAM] int 
  5250 ;;  p               2   50[COMRAM] int 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  2   30[COMRAM] int 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5260 ;;      Params:        10       0       0       0       0       0       0       0       0
  5261 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5262 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5263 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5264 ;;Total ram usage:       36 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    6
  5267 ;; This function calls:
  5268 ;;		___aodiv
  5269 ;;		___aomod
  5270 ;;		_abs
  5271 ;;		_pad
  5272 ;; This function is called by:
  5273 ;;		_vfpfcnvrt
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text26
  5278  00136E                     __ptext26:
  5279                           	callstack 0
  5280  00136E                     _dtoa:
  5281                           	callstack 19
  5282  00136E                     
  5283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5284  00136E  C021  F039         	movff	dtoa@d,dtoa@n
  5285  001372  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  5286  001376  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  5287  00137A  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  5288  00137E  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  5289  001382  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  5290  001386  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  5291  00138A  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  5292  00138E                     
  5293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5294  00138E  BE40               	btfsc	(dtoa@n+7)^0,7,c
  5295  001390  EFCC  F009         	goto	u3931
  5296  001394  EFCF  F009         	goto	u3930
  5297  001398                     u3931:
  5298  001398  0E01               	movlw	1
  5299  00139A  EFD0  F009         	goto	u3940
  5300  00139E                     u3930:
  5301  00139E  0E00               	movlw	0
  5302  0013A0                     u3940:
  5303  0013A0  6E37               	movwf	dtoa@s^0,c
  5304  0013A2  6A38               	clrf	(dtoa@s+1)^0,c
  5305                           
  5306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5307  0013A4  5037               	movf	dtoa@s^0,w,c
  5308  0013A6  1038               	iorwf	(dtoa@s+1)^0,w,c
  5309  0013A8  B4D8               	btfsc	status,2,c
  5310  0013AA  EFD9  F009         	goto	u3951
  5311  0013AE  EFDB  F009         	goto	u3950
  5312  0013B2                     u3951:
  5313  0013B2  EFEB  F009         	goto	l3927
  5314  0013B6                     u3950:
  5315  0013B6                     
  5316                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5317  0013B6  1E40               	comf	(dtoa@n+7)^0,f,c
  5318  0013B8  1E3F               	comf	(dtoa@n+6)^0,f,c
  5319  0013BA  1E3E               	comf	(dtoa@n+5)^0,f,c
  5320  0013BC  1E3D               	comf	(dtoa@n+4)^0,f,c
  5321  0013BE  1E3C               	comf	(dtoa@n+3)^0,f,c
  5322  0013C0  1E3B               	comf	(dtoa@n+2)^0,f,c
  5323  0013C2  1E3A               	comf	(dtoa@n+1)^0,f,c
  5324  0013C4  6C39               	negf	dtoa@n^0,c
  5325  0013C6  0E00               	movlw	0
  5326  0013C8  223A               	addwfc	(dtoa@n+1)^0,f,c
  5327  0013CA  223B               	addwfc	(dtoa@n+2)^0,f,c
  5328  0013CC  223C               	addwfc	(dtoa@n+3)^0,f,c
  5329  0013CE  223D               	addwfc	(dtoa@n+4)^0,f,c
  5330  0013D0  223E               	addwfc	(dtoa@n+5)^0,f,c
  5331  0013D2  223F               	addwfc	(dtoa@n+6)^0,f,c
  5332  0013D4  2240               	addwfc	(dtoa@n+7)^0,f,c
  5333  0013D6                     l3927:
  5334                           
  5335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5336  0013D6  BE59               	btfsc	(_prec+1)^0,7,c
  5337  0013D8  EFF0  F009         	goto	u3961
  5338  0013DC  EFF2  F009         	goto	u3960
  5339  0013E0                     u3961:
  5340  0013E0  EFF3  F009         	goto	l3931
  5341  0013E4                     u3960:
  5342  0013E4                     
  5343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5344  0013E4  925A               	bcf	_flags^0,1,c
  5345  0013E6                     l3931:
  5346                           
  5347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5348  0013E6  BE59               	btfsc	(_prec+1)^0,7,c
  5349  0013E8  EF00  F00A         	goto	u3970
  5350  0013EC  5059               	movf	(_prec+1)^0,w,c
  5351  0013EE  E106               	bnz	u3971
  5352  0013F0  0458               	decf	_prec^0,w,c
  5353  0013F2  B0D8               	btfsc	status,0,c
  5354  0013F4  EFFE  F009         	goto	u3971
  5355  0013F8  EF00  F00A         	goto	u3970
  5356  0013FC                     u3971:
  5357  0013FC  EF06  F00A         	goto	l1016
  5358  001400                     u3970:
  5359  001400  0E00               	movlw	0
  5360  001402  6E34               	movwf	(dtoa@p+1)^0,c
  5361  001404  0E01               	movlw	1
  5362  001406  6E33               	movwf	dtoa@p^0,c
  5363  001408  EF0A  F00A         	goto	l1018
  5364  00140C                     l1016:
  5365  00140C  C058  F033         	movff	_prec,dtoa@p
  5366  001410  C059  F034         	movff	_prec+1,dtoa@p+1
  5367  001414                     l1018:
  5368                           
  5369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5370  001414  C096  F035         	movff	_width,dtoa@w
  5371  001418  C097  F036         	movff	_width+1,dtoa@w+1
  5372  00141C                     
  5373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5374  00141C  5037               	movf	dtoa@s^0,w,c
  5375  00141E  1038               	iorwf	(dtoa@s+1)^0,w,c
  5376  001420  A4D8               	btfss	status,2,c
  5377  001422  EF15  F00A         	goto	u3981
  5378  001426  EF17  F00A         	goto	u3980
  5379  00142A                     u3981:
  5380  00142A  EF1E  F00A         	goto	l3939
  5381  00142E                     u3980:
  5382  00142E  A45A               	btfss	_flags^0,2,c
  5383  001430  EF1C  F00A         	goto	u3991
  5384  001434  EF1E  F00A         	goto	u3990
  5385  001438                     u3991:
  5386  001438  EF21  F00A         	goto	l3941
  5387  00143C                     u3990:
  5388  00143C                     l3939:
  5389                           
  5390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5391  00143C  0635               	decf	dtoa@w^0,f,c
  5392  00143E  A0D8               	btfss	status,0,c
  5393  001440  0636               	decf	(dtoa@w+1)^0,f,c
  5394  001442                     l3941:
  5395                           
  5396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5397  001442  0E00               	movlw	0
  5398  001444  6E42               	movwf	(dtoa@i+1)^0,c
  5399  001446  0E1F               	movlw	31
  5400  001448  6E41               	movwf	dtoa@i^0,c
  5401  00144A                     
  5402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5403  00144A  0E00               	movlw	0
  5404  00144C  0100               	movlb	0	; () banked
  5405  00144E  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5406                           
  5407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5408  001450  EFA6  F00A         	goto	l3955
  5409  001454                     l3945:
  5410                           
  5411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5412  001454  0641               	decf	dtoa@i^0,f,c
  5413  001456  A0D8               	btfss	status,0,c
  5414  001458  0642               	decf	(dtoa@i+1)^0,f,c
  5415  00145A                     
  5416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5417  00145A  0E98               	movlw	low _dbuf
  5418  00145C  2441               	addwf	dtoa@i^0,w,c
  5419  00145E  6ED9               	movwf	fsr2l,c
  5420  001460  0E00               	movlw	high _dbuf
  5421  001462  2042               	addwfc	(dtoa@i+1)^0,w,c
  5422  001464  6EDA               	movwf	fsr2h,c
  5423  001466  C039  F004         	movff	dtoa@n,___aomod@dividend
  5424  00146A  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  5425  00146E  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  5426  001472  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  5427  001476  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  5428  00147A  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  5429  00147E  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  5430  001482  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  5431  001486  0E0A               	movlw	10
  5432  001488  6E0C               	movwf	___aomod@divisor^0,c
  5433  00148A  0E00               	movlw	0
  5434  00148C  6E0D               	movwf	(___aomod@divisor+1)^0,c
  5435  00148E  0E00               	movlw	0
  5436  001490  6E0E               	movwf	(___aomod@divisor+2)^0,c
  5437  001492  0E00               	movlw	0
  5438  001494  6E0F               	movwf	(___aomod@divisor+3)^0,c
  5439  001496  0E00               	movlw	0
  5440  001498  6E10               	movwf	(___aomod@divisor+4)^0,c
  5441  00149A  0E00               	movlw	0
  5442  00149C  6E11               	movwf	(___aomod@divisor+5)^0,c
  5443  00149E  0E00               	movlw	0
  5444  0014A0  6E12               	movwf	(___aomod@divisor+6)^0,c
  5445  0014A2  0E00               	movlw	0
  5446  0014A4  6E13               	movwf	(___aomod@divisor+7)^0,c
  5447  0014A6  EC30  F010         	call	___aomod	;wreg free
  5448  0014AA  C004  F029         	movff	?___aomod,??_dtoa
  5449  0014AE  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  5450  0014B2  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  5451  0014B6  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  5452  0014BA  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  5453  0014BE  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  5454  0014C2  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  5455  0014C6  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  5456  0014CA  C029  F016         	movff	??_dtoa,abs@a
  5457  0014CE  C02B  F017         	movff	??_dtoa+2,abs@a+1
  5458  0014D2  EC60  F017         	call	_abs	;wreg free
  5459  0014D6  5016               	movf	?_abs^0,w,c
  5460  0014D8  0F30               	addlw	48
  5461  0014DA  6EDF               	movwf	indf2,c
  5462  0014DC                     
  5463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5464  0014DC  0633               	decf	dtoa@p^0,f,c
  5465  0014DE  A0D8               	btfss	status,0,c
  5466  0014E0  0634               	decf	(dtoa@p+1)^0,f,c
  5467  0014E2                     
  5468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5469  0014E2  0635               	decf	dtoa@w^0,f,c
  5470  0014E4  A0D8               	btfss	status,0,c
  5471  0014E6  0636               	decf	(dtoa@w+1)^0,f,c
  5472  0014E8                     
  5473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5474  0014E8  C039  F004         	movff	dtoa@n,___aodiv@dividend
  5475  0014EC  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  5476  0014F0  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  5477  0014F4  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  5478  0014F8  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  5479  0014FC  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  5480  001500  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  5481  001504  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  5482  001508  0E0A               	movlw	10
  5483  00150A  6E0C               	movwf	___aodiv@divisor^0,c
  5484  00150C  0E00               	movlw	0
  5485  00150E  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  5486  001510  0E00               	movlw	0
  5487  001512  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  5488  001514  0E00               	movlw	0
  5489  001516  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  5490  001518  0E00               	movlw	0
  5491  00151A  6E10               	movwf	(___aodiv@divisor+4)^0,c
  5492  00151C  0E00               	movlw	0
  5493  00151E  6E11               	movwf	(___aodiv@divisor+5)^0,c
  5494  001520  0E00               	movlw	0
  5495  001522  6E12               	movwf	(___aodiv@divisor+6)^0,c
  5496  001524  0E00               	movlw	0
  5497  001526  6E13               	movwf	(___aodiv@divisor+7)^0,c
  5498  001528  ECB1  F00E         	call	___aodiv	;wreg free
  5499  00152C  C004  F039         	movff	?___aodiv,dtoa@n
  5500  001530  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  5501  001534  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  5502  001538  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  5503  00153C  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  5504  001540  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  5505  001544  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  5506  001548  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  5507  00154C                     l3955:
  5508                           
  5509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5510  00154C  BE42               	btfsc	(dtoa@i+1)^0,7,c
  5511  00154E  EFB1  F00A         	goto	u4001
  5512  001552  5042               	movf	(dtoa@i+1)^0,w,c
  5513  001554  E108               	bnz	u4000
  5514  001556  0441               	decf	dtoa@i^0,w,c
  5515  001558  A0D8               	btfss	status,0,c
  5516  00155A  EFB1  F00A         	goto	u4001
  5517  00155E  EFB3  F00A         	goto	u4000
  5518  001562                     u4001:
  5519  001562  EFE3  F00A         	goto	l3965
  5520  001566                     u4000:
  5521  001566  5039               	movf	dtoa@n^0,w,c
  5522  001568  103A               	iorwf	(dtoa@n+1)^0,w,c
  5523  00156A  103B               	iorwf	(dtoa@n+2)^0,w,c
  5524  00156C  103C               	iorwf	(dtoa@n+3)^0,w,c
  5525  00156E  103D               	iorwf	(dtoa@n+4)^0,w,c
  5526  001570  103E               	iorwf	(dtoa@n+5)^0,w,c
  5527  001572  103F               	iorwf	(dtoa@n+6)^0,w,c
  5528  001574  1040               	iorwf	(dtoa@n+7)^0,w,c
  5529  001576  A4D8               	btfss	status,2,c
  5530  001578  EFC0  F00A         	goto	u4011
  5531  00157C  EFC2  F00A         	goto	u4010
  5532  001580                     u4011:
  5533  001580  EF2A  F00A         	goto	l3945
  5534  001584                     u4010:
  5535  001584  BE34               	btfsc	(dtoa@p+1)^0,7,c
  5536  001586  EFCF  F00A         	goto	u4020
  5537  00158A  5034               	movf	(dtoa@p+1)^0,w,c
  5538  00158C  E106               	bnz	u4021
  5539  00158E  0433               	decf	dtoa@p^0,w,c
  5540  001590  B0D8               	btfsc	status,0,c
  5541  001592  EFCD  F00A         	goto	u4021
  5542  001596  EFCF  F00A         	goto	u4020
  5543  00159A                     u4021:
  5544  00159A  EF2A  F00A         	goto	l3945
  5545  00159E                     u4020:
  5546  00159E  BE36               	btfsc	(dtoa@w+1)^0,7,c
  5547  0015A0  EFDA  F00A         	goto	u4031
  5548  0015A4  5036               	movf	(dtoa@w+1)^0,w,c
  5549  0015A6  E108               	bnz	u4030
  5550  0015A8  0435               	decf	dtoa@w^0,w,c
  5551  0015AA  A0D8               	btfss	status,0,c
  5552  0015AC  EFDA  F00A         	goto	u4031
  5553  0015B0  EFDC  F00A         	goto	u4030
  5554  0015B4                     u4031:
  5555  0015B4  EFE3  F00A         	goto	l3965
  5556  0015B8                     u4030:
  5557  0015B8  B25A               	btfsc	_flags^0,1,c
  5558  0015BA  EFE1  F00A         	goto	u4041
  5559  0015BE  EFE3  F00A         	goto	u4040
  5560  0015C2                     u4041:
  5561  0015C2  EF2A  F00A         	goto	l3945
  5562  0015C6                     u4040:
  5563  0015C6                     l3965:
  5564                           
  5565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5566  0015C6  5037               	movf	dtoa@s^0,w,c
  5567  0015C8  1038               	iorwf	(dtoa@s+1)^0,w,c
  5568  0015CA  A4D8               	btfss	status,2,c
  5569  0015CC  EFEA  F00A         	goto	u4051
  5570  0015D0  EFEC  F00A         	goto	u4050
  5571  0015D4                     u4051:
  5572  0015D4  EFF3  F00A         	goto	l3969
  5573  0015D8                     u4050:
  5574  0015D8  A45A               	btfss	_flags^0,2,c
  5575  0015DA  EFF1  F00A         	goto	u4061
  5576  0015DE  EFF3  F00A         	goto	u4060
  5577  0015E2                     u4061:
  5578  0015E2  EF11  F00B         	goto	l3979
  5579  0015E6                     u4060:
  5580  0015E6                     l3969:
  5581                           
  5582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5583  0015E6  0641               	decf	dtoa@i^0,f,c
  5584  0015E8  A0D8               	btfss	status,0,c
  5585  0015EA  0642               	decf	(dtoa@i+1)^0,f,c
  5586  0015EC                     
  5587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5588  0015EC  5037               	movf	dtoa@s^0,w,c
  5589  0015EE  1038               	iorwf	(dtoa@s+1)^0,w,c
  5590  0015F0  A4D8               	btfss	status,2,c
  5591  0015F2  EFFD  F00A         	goto	u4071
  5592  0015F6  EFFF  F00A         	goto	u4070
  5593  0015FA                     u4071:
  5594  0015FA  EF05  F00B         	goto	l3975
  5595  0015FE                     u4070:
  5596  0015FE  0E00               	movlw	0
  5597  001600  6E32               	movwf	(_dtoa$1719+1)^0,c
  5598  001602  0E2B               	movlw	43
  5599  001604  6E31               	movwf	_dtoa$1719^0,c
  5600  001606  EF09  F00B         	goto	l3977
  5601  00160A                     l3975:
  5602  00160A  0E00               	movlw	0
  5603  00160C  6E32               	movwf	(_dtoa$1719+1)^0,c
  5604  00160E  0E2D               	movlw	45
  5605  001610  6E31               	movwf	_dtoa$1719^0,c
  5606  001612                     l3977:
  5607  001612  0E98               	movlw	low _dbuf
  5608  001614  2441               	addwf	dtoa@i^0,w,c
  5609  001616  6ED9               	movwf	fsr2l,c
  5610  001618  0E00               	movlw	high _dbuf
  5611  00161A  2042               	addwfc	(dtoa@i+1)^0,w,c
  5612  00161C  6EDA               	movwf	fsr2h,c
  5613  00161E  C031  FFDF         	movff	_dtoa$1719,indf2
  5614  001622                     l3979:
  5615                           
  5616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5617  001622  C01F  F014         	movff	dtoa@fp,pad@fp
  5618  001626  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  5619  00162A  0E98               	movlw	low _dbuf
  5620  00162C  2441               	addwf	dtoa@i^0,w,c
  5621  00162E  6E16               	movwf	pad@buf^0,c
  5622  001630  0E00               	movlw	high _dbuf
  5623  001632  2042               	addwfc	(dtoa@i+1)^0,w,c
  5624  001634  6E17               	movwf	(pad@buf+1)^0,c
  5625  001636  C035  F018         	movff	dtoa@w,pad@p
  5626  00163A  C036  F019         	movff	dtoa@w+1,pad@p+1
  5627  00163E  EC8D  F014         	call	_pad	;wreg free
  5628  001642  C014  F01F         	movff	?_pad,?_dtoa
  5629  001646  C015  F020         	movff	?_pad+1,?_dtoa+1
  5630  00164A  0012               	return		;funcret
  5631  00164C                     __end_of_dtoa:
  5632                           	callstack 0
  5633                           
  5634 ;; *************** function _pad *****************
  5635 ;; Defined at:
  5636 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  5639 ;;		 -> sprintf@f(6), 
  5640 ;;  buf             2   21[COMRAM] PTR unsigned char 
  5641 ;;		 -> dbuf(32), 
  5642 ;;  p               2   23[COMRAM] int 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  w               2   28[COMRAM] int 
  5645 ;;  i               2   26[COMRAM] int 
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  2   19[COMRAM] int 
  5648 ;; Registers used:
  5649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5655 ;;      Params:         6       0       0       0       0       0       0       0       0
  5656 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5657 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5658 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5659 ;;Total ram usage:       11 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; Hardware stack levels required when called:    5
  5662 ;; This function calls:
  5663 ;;		_fputc
  5664 ;;		_fputs
  5665 ;;		_strlen
  5666 ;; This function is called by:
  5667 ;;		_dtoa
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text27
  5672  00291A                     __ptext27:
  5673                           	callstack 0
  5674  00291A                     _pad:
  5675                           	callstack 19
  5676  00291A                     
  5677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5678  00291A  A05A               	btfss	_flags^0,0,c
  5679  00291C  EF92  F014         	goto	u3841
  5680  002920  EF94  F014         	goto	u3840
  5681  002924                     u3841:
  5682  002924  EF9E  F014         	goto	l3883
  5683  002928                     u3840:
  5684  002928                     
  5685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5686  002928  C016  F00D         	movff	pad@buf,fputs@s
  5687  00292C  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5688  002930  C014  F00F         	movff	pad@fp,fputs@fp
  5689  002934  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5690  002938  EC1D  F017         	call	_fputs	;wreg free
  5691  00293C                     l3883:
  5692                           
  5693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5694  00293C  BE19               	btfsc	(pad@p+1)^0,7,c
  5695  00293E  EFA3  F014         	goto	u3851
  5696  002942  EFA5  F014         	goto	u3850
  5697  002946                     u3851:
  5698  002946  EFAB  F014         	goto	l3887
  5699  00294A                     u3850:
  5700  00294A  C018  F01D         	movff	pad@p,pad@w
  5701  00294E  C019  F01E         	movff	pad@p+1,pad@w+1
  5702  002952  EFAF  F014         	goto	l1005
  5703  002956                     l3887:
  5704  002956  0E00               	movlw	0
  5705  002958  6E1E               	movwf	(pad@w+1)^0,c
  5706  00295A  0E00               	movlw	0
  5707  00295C  6E1D               	movwf	pad@w^0,c
  5708  00295E                     l1005:
  5709                           
  5710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5711  00295E  0E00               	movlw	0
  5712  002960  6E1C               	movwf	(pad@i+1)^0,c
  5713  002962  0E00               	movlw	0
  5714  002964  6E1B               	movwf	pad@i^0,c
  5715                           
  5716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5717  002966  EFC1  F014         	goto	l3893
  5718  00296A                     l3889:
  5719                           
  5720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5721  00296A  0E00               	movlw	0
  5722  00296C  6E05               	movwf	(fputc@c+1)^0,c
  5723  00296E  0E20               	movlw	32
  5724  002970  6E04               	movwf	fputc@c^0,c
  5725  002972  C014  F006         	movff	pad@fp,fputc@fp
  5726  002976  C015  F007         	movff	pad@fp+1,fputc@fp+1
  5727  00297A  EC28  F014         	call	_fputc	;wreg free
  5728  00297E                     
  5729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5730  00297E  4A1B               	infsnz	pad@i^0,f,c
  5731  002980  2A1C               	incf	(pad@i+1)^0,f,c
  5732  002982                     l3893:
  5733                           
  5734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5735  002982  501D               	movf	pad@w^0,w,c
  5736  002984  5C1B               	subwf	pad@i^0,w,c
  5737  002986  501C               	movf	(pad@i+1)^0,w,c
  5738  002988  0A80               	xorlw	128
  5739  00298A  6E1A               	movwf	??_pad^0,c
  5740  00298C  501E               	movf	(pad@w+1)^0,w,c
  5741  00298E  0A80               	xorlw	128
  5742  002990  581A               	subwfb	??_pad^0,w,c
  5743  002992  A0D8               	btfss	status,0,c
  5744  002994  EFCE  F014         	goto	u3861
  5745  002998  EFD0  F014         	goto	u3860
  5746  00299C                     u3861:
  5747  00299C  EFB5  F014         	goto	l3889
  5748  0029A0                     u3860:
  5749  0029A0                     
  5750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5751  0029A0  B05A               	btfsc	_flags^0,0,c
  5752  0029A2  EFD5  F014         	goto	u3871
  5753  0029A6  EFD7  F014         	goto	u3870
  5754  0029AA                     u3871:
  5755  0029AA  EFE1  F014         	goto	l3897
  5756  0029AE                     u3870:
  5757  0029AE                     
  5758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5759  0029AE  C016  F00D         	movff	pad@buf,fputs@s
  5760  0029B2  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5761  0029B6  C014  F00F         	movff	pad@fp,fputs@fp
  5762  0029BA  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5763  0029BE  EC1D  F017         	call	_fputs	;wreg free
  5764  0029C2                     l3897:
  5765                           
  5766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5767  0029C2  C016  F004         	movff	pad@buf,strlen@s
  5768  0029C6  C017  F005         	movff	pad@buf+1,strlen@s+1
  5769  0029CA  ECD5  F017         	call	_strlen	;wreg free
  5770  0029CE  501D               	movf	pad@w^0,w,c
  5771  0029D0  2404               	addwf	?_strlen^0,w,c
  5772  0029D2  6E14               	movwf	?_pad^0,c
  5773  0029D4  501E               	movf	(pad@w+1)^0,w,c
  5774  0029D6  2005               	addwfc	(?_strlen+1)^0,w,c
  5775  0029D8  6E15               	movwf	(?_pad+1)^0,c
  5776  0029DA  0012               	return		;funcret
  5777  0029DC                     __end_of_pad:
  5778                           	callstack 0
  5779                           
  5780 ;; *************** function _strlen *****************
  5781 ;; Defined at:
  5782 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  s               2    3[COMRAM] PTR const unsigned char 
  5785 ;;		 -> dbuf(32), 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  a               2    5[COMRAM] PTR const unsigned char 
  5788 ;;		 -> dbuf(32), 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  2    3[COMRAM] unsigned int 
  5791 ;; Registers used:
  5792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5798 ;;      Params:         2       0       0       0       0       0       0       0       0
  5799 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5801 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5802 ;;Total ram usage:        4 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    2
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_pad
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text28
  5813  002FAA                     __ptext28:
  5814                           	callstack 0
  5815  002FAA                     _strlen:
  5816                           	callstack 21
  5817  002FAA  C004  F006         	movff	strlen@s,strlen@a
  5818  002FAE  C005  F007         	movff	strlen@s+1,strlen@a+1
  5819  002FB2  EFDD  F017         	goto	l3787
  5820  002FB6                     l3785:
  5821  002FB6  4A04               	infsnz	strlen@s^0,f,c
  5822  002FB8  2A05               	incf	(strlen@s+1)^0,f,c
  5823  002FBA                     l3787:
  5824  002FBA  C004  FFD9         	movff	strlen@s,fsr2l
  5825  002FBE  C005  FFDA         	movff	strlen@s+1,fsr2h
  5826  002FC2  50DF               	movf	indf2,w,c
  5827  002FC4  A4D8               	btfss	status,2,c
  5828  002FC6  EFE7  F017         	goto	u3701
  5829  002FCA  EFE9  F017         	goto	u3700
  5830  002FCE                     u3701:
  5831  002FCE  EFDB  F017         	goto	l3785
  5832  002FD2                     u3700:
  5833  002FD2  5006               	movf	strlen@a^0,w,c
  5834  002FD4  5C04               	subwf	strlen@s^0,w,c
  5835  002FD6  6E04               	movwf	?_strlen^0,c
  5836  002FD8  5007               	movf	(strlen@a+1)^0,w,c
  5837  002FDA  5805               	subwfb	(strlen@s+1)^0,w,c
  5838  002FDC  6E05               	movwf	(?_strlen+1)^0,c
  5839  002FDE  0012               	return		;funcret
  5840  002FE0                     __end_of_strlen:
  5841                           	callstack 0
  5842                           
  5843 ;; *************** function _fputs *****************
  5844 ;; Defined at:
  5845 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  s               2   12[COMRAM] PTR const unsigned char 
  5848 ;;		 -> dbuf(32), 
  5849 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  5850 ;;		 -> sprintf@f(6), 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  i               2   17[COMRAM] int 
  5853 ;;  c               1   16[COMRAM] unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  2   12[COMRAM] int 
  5856 ;; Registers used:
  5857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5863 ;;      Params:         4       0       0       0       0       0       0       0       0
  5864 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5866 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5867 ;;Total ram usage:        7 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    4
  5870 ;; This function calls:
  5871 ;;		_fputc
  5872 ;; This function is called by:
  5873 ;;		_pad
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text29
  5878  002E3A                     __ptext29:
  5879                           	callstack 0
  5880  002E3A                     _fputs:
  5881                           	callstack 19
  5882  002E3A  0E00               	movlw	0
  5883  002E3C  6E13               	movwf	(fputs@i+1)^0,c
  5884  002E3E  0E00               	movlw	0
  5885  002E40  6E12               	movwf	fputs@i^0,c
  5886  002E42  EF2E  F017         	goto	l3781
  5887  002E46                     l3777:
  5888  002E46  C011  F004         	movff	fputs@c,fputc@c
  5889  002E4A  6A05               	clrf	(fputc@c+1)^0,c
  5890  002E4C  C00F  F006         	movff	fputs@fp,fputc@fp
  5891  002E50  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  5892  002E54  EC28  F014         	call	_fputc	;wreg free
  5893  002E58  4A12               	infsnz	fputs@i^0,f,c
  5894  002E5A  2A13               	incf	(fputs@i+1)^0,f,c
  5895  002E5C                     l3781:
  5896  002E5C  5012               	movf	fputs@i^0,w,c
  5897  002E5E  240D               	addwf	fputs@s^0,w,c
  5898  002E60  6ED9               	movwf	fsr2l,c
  5899  002E62  5013               	movf	(fputs@i+1)^0,w,c
  5900  002E64  200E               	addwfc	(fputs@s+1)^0,w,c
  5901  002E66  6EDA               	movwf	fsr2h,c
  5902  002E68  50DF               	movf	indf2,w,c
  5903  002E6A  6E11               	movwf	fputs@c^0,c
  5904  002E6C  5011               	movf	fputs@c^0,w,c
  5905  002E6E  A4D8               	btfss	status,2,c
  5906  002E70  EF3C  F017         	goto	u3691
  5907  002E74  EF3E  F017         	goto	u3690
  5908  002E78                     u3691:
  5909  002E78  EF23  F017         	goto	l3777
  5910  002E7C                     u3690:
  5911  002E7C  0012               	return		;funcret
  5912  002E7E                     __end_of_fputs:
  5913                           	callstack 0
  5914                           
  5915 ;; *************** function _fputc *****************
  5916 ;; Defined at:
  5917 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  c               2    3[COMRAM] int 
  5920 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  5921 ;;		 -> sprintf@f(6), 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  2    3[COMRAM] int 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5933 ;;      Params:         4       0       0       0       0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5935 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5936 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5937 ;;Total ram usage:        9 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    3
  5940 ;; This function calls:
  5941 ;;		_putch
  5942 ;; This function is called by:
  5943 ;;		_pad
  5944 ;;		_vfpfcnvrt
  5945 ;;		_fputs
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text30
  5950  002850                     __ptext30:
  5951                           	callstack 0
  5952  002850                     _fputc:
  5953                           	callstack 22
  5954  002850  5006               	movf	fputc@fp^0,w,c
  5955  002852  1007               	iorwf	(fputc@fp+1)^0,w,c
  5956  002854  B4D8               	btfsc	status,2,c
  5957  002856  EF2F  F014         	goto	u3651
  5958  00285A  EF31  F014         	goto	u3650
  5959  00285E                     u3651:
  5960  00285E  EF3A  F014         	goto	l3765
  5961  002862                     u3650:
  5962  002862  5006               	movf	fputc@fp^0,w,c
  5963  002864  1007               	iorwf	(fputc@fp+1)^0,w,c
  5964  002866  A4D8               	btfss	status,2,c
  5965  002868  EF38  F014         	goto	u3661
  5966  00286C  EF3A  F014         	goto	u3660
  5967  002870                     u3661:
  5968  002870  EF3F  F014         	goto	l3767
  5969  002874                     u3660:
  5970  002874                     l3765:
  5971  002874  5004               	movf	fputc@c^0,w,c
  5972  002876  EC49  F018         	call	_putch
  5973  00287A  EF8C  F014         	goto	l1136
  5974  00287E                     l3767:
  5975  00287E  EE20 F004          	lfsr	2,4
  5976  002882  5006               	movf	fputc@fp^0,w,c
  5977  002884  26D9               	addwf	fsr2l,f,c
  5978  002886  5007               	movf	(fputc@fp+1)^0,w,c
  5979  002888  22DA               	addwfc	fsr2h,f,c
  5980  00288A  50DE               	movf	postinc2,w,c
  5981  00288C  10DE               	iorwf	postinc2,w,c
  5982  00288E  B4D8               	btfsc	status,2,c
  5983  002890  EF4C  F014         	goto	u3671
  5984  002894  EF4E  F014         	goto	u3670
  5985  002898                     u3671:
  5986  002898  EF69  F014         	goto	l3771
  5987  00289C                     u3670:
  5988  00289C  EE20 F004          	lfsr	2,4
  5989  0028A0  5006               	movf	fputc@fp^0,w,c
  5990  0028A2  26D9               	addwf	fsr2l,f,c
  5991  0028A4  5007               	movf	(fputc@fp+1)^0,w,c
  5992  0028A6  22DA               	addwfc	fsr2h,f,c
  5993  0028A8  EE10 F002          	lfsr	1,2
  5994  0028AC  5006               	movf	fputc@fp^0,w,c
  5995  0028AE  26E1               	addwf	fsr1l,f,c
  5996  0028B0  5007               	movf	(fputc@fp+1)^0,w,c
  5997  0028B2  22E2               	addwfc	fsr1h,f,c
  5998  0028B4  50DE               	movf	postinc2,w,c
  5999  0028B6  5CE6               	subwf	postinc1,w,c
  6000  0028B8  50E6               	movf	postinc1,w,c
  6001  0028BA  0A80               	xorlw	128
  6002  0028BC  6E0C               	movwf	(??_fputc+4)^0,c
  6003  0028BE  50DE               	movf	postinc2,w,c
  6004  0028C0  0A80               	xorlw	128
  6005  0028C2  580C               	subwfb	(??_fputc+4)^0,w,c
  6006  0028C4  B0D8               	btfsc	status,0,c
  6007  0028C6  EF67  F014         	goto	u3681
  6008  0028CA  EF69  F014         	goto	u3680
  6009  0028CE                     u3681:
  6010  0028CE  EF8C  F014         	goto	l1136
  6011  0028D2                     u3680:
  6012  0028D2                     l3771:
  6013  0028D2  EE20 F002          	lfsr	2,2
  6014  0028D6  5006               	movf	fputc@fp^0,w,c
  6015  0028D8  26D9               	addwf	fsr2l,f,c
  6016  0028DA  5007               	movf	(fputc@fp+1)^0,w,c
  6017  0028DC  22DA               	addwfc	fsr2h,f,c
  6018  0028DE  CFDE F008          	movff	postinc2,??_fputc
  6019  0028E2  CFDD F009          	movff	postdec2,??_fputc+1
  6020  0028E6  C006  FFD9         	movff	fputc@fp,fsr2l
  6021  0028EA  C007  FFDA         	movff	fputc@fp+1,fsr2h
  6022  0028EE  CFDE F00A          	movff	postinc2,??_fputc+2
  6023  0028F2  CFDD F00B          	movff	postdec2,??_fputc+3
  6024  0028F6  5008               	movf	??_fputc^0,w,c
  6025  0028F8  240A               	addwf	(??_fputc+2)^0,w,c
  6026  0028FA  6ED9               	movwf	fsr2l,c
  6027  0028FC  5009               	movf	(??_fputc+1)^0,w,c
  6028  0028FE  200B               	addwfc	(??_fputc+3)^0,w,c
  6029  002900  6EDA               	movwf	fsr2h,c
  6030  002902  C004  FFDF         	movff	fputc@c,indf2
  6031  002906  EE20 F002          	lfsr	2,2
  6032  00290A  5006               	movf	fputc@fp^0,w,c
  6033  00290C  26D9               	addwf	fsr2l,f,c
  6034  00290E  5007               	movf	(fputc@fp+1)^0,w,c
  6035  002910  22DA               	addwfc	fsr2h,f,c
  6036  002912  2ADE               	incf	postinc2,f,c
  6037  002914  0E00               	movlw	0
  6038  002916  22DD               	addwfc	postdec2,f,c
  6039  002918                     l1136:
  6040  002918  0012               	return		;funcret
  6041  00291A                     __end_of_fputc:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function _putch *****************
  6045 ;; Defined at:
  6046 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  c               1    wreg     unsigned char 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;  c               1    0[COMRAM] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      void 
  6053 ;; Registers used:
  6054 ;;		wreg
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6060 ;;      Params:         0       0       0       0       0       0       0       0       0
  6061 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6063 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6064 ;;Total ram usage:        0 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    2
  6067 ;; This function calls:
  6068 ;;		Nothing
  6069 ;; This function is called by:
  6070 ;;		_fputc
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text31
  6075  003092                     __ptext31:
  6076                           	callstack 0
  6077  003092                     _putch:
  6078                           	callstack 22
  6079  003092  0012               	return		;funcret
  6080  003094                     __end_of_putch:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function _abs *****************
  6084 ;; Defined at:
  6085 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  a               2   21[COMRAM] int 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  2   21[COMRAM] int 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6099 ;;      Params:         2       0       0       0       0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6101 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6102 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6103 ;;Total ram usage:        4 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    2
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_dtoa
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text32
  6114  002EC0                     __ptext32:
  6115                           	callstack 0
  6116  002EC0                     _abs:
  6117                           	callstack 22
  6118  002EC0  BE17               	btfsc	(abs@a+1)^0,7,c
  6119  002EC2  EF6D  F017         	goto	u3880
  6120  002EC6  5017               	movf	(abs@a+1)^0,w,c
  6121  002EC8  E106               	bnz	u3881
  6122  002ECA  0416               	decf	abs@a^0,w,c
  6123  002ECC  B0D8               	btfsc	status,0,c
  6124  002ECE  EF6B  F017         	goto	u3881
  6125  002ED2  EF6D  F017         	goto	u3880
  6126  002ED6                     u3881:
  6127  002ED6  EF7B  F017         	goto	l1076
  6128  002EDA                     u3880:
  6129  002EDA  C016  F018         	movff	abs@a,??_abs
  6130  002EDE  C017  F019         	movff	abs@a+1,??_abs+1
  6131  002EE2  1E18               	comf	??_abs^0,f,c
  6132  002EE4  1E19               	comf	(??_abs+1)^0,f,c
  6133  002EE6  4A18               	infsnz	??_abs^0,f,c
  6134  002EE8  2A19               	incf	(??_abs+1)^0,f,c
  6135  002EEA  C018  F016         	movff	??_abs,?_abs
  6136  002EEE  C019  F017         	movff	??_abs+1,?_abs+1
  6137  002EF2  EF7F  F017         	goto	l1079
  6138  002EF6                     l1076:
  6139  002EF6  C016  F016         	movff	abs@a,?_abs
  6140  002EFA  C017  F017         	movff	abs@a+1,?_abs+1
  6141  002EFE                     l1079:
  6142  002EFE  0012               	return		;funcret
  6143  002F00                     __end_of_abs:
  6144                           	callstack 0
  6145                           
  6146 ;; *************** function ___aomod *****************
  6147 ;; Defined at:
  6148 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  dividend        8    3[COMRAM] long long 
  6151 ;;  divisor         8   11[COMRAM] long long 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  sign            1   20[COMRAM] unsigned char 
  6154 ;;  counter         1   19[COMRAM] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  8    3[COMRAM] long long 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6164 ;;      Params:        16       0       0       0       0       0       0       0       0
  6165 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6167 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6168 ;;Total ram usage:       18 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    2
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_dtoa
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text33
  6179  002060                     __ptext33:
  6180                           	callstack 0
  6181  002060                     ___aomod:
  6182                           	callstack 22
  6183  002060  0E00               	movlw	0
  6184  002062  6E15               	movwf	___aomod@sign^0,c
  6185  002064  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  6186  002066  EF39  F010         	goto	u3780
  6187  00206A  EF37  F010         	goto	u3781
  6188  00206E                     u3781:
  6189  00206E  EF4B  F010         	goto	l3851
  6190  002072                     u3780:
  6191  002072  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6192  002074  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6193  002076  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6194  002078  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6195  00207A  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6196  00207C  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6197  00207E  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6198  002080  6C04               	negf	___aomod@dividend^0,c
  6199  002082  0E00               	movlw	0
  6200  002084  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6201  002086  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6202  002088  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6203  00208A  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6204  00208C  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6205  00208E  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6206  002090  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6207  002092  0E01               	movlw	1
  6208  002094  6E15               	movwf	___aomod@sign^0,c
  6209  002096                     l3851:
  6210  002096  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  6211  002098  EF52  F010         	goto	u3790
  6212  00209C  EF50  F010         	goto	u3791
  6213  0020A0                     u3791:
  6214  0020A0  EF62  F010         	goto	l3855
  6215  0020A4                     u3790:
  6216  0020A4  1E13               	comf	(___aomod@divisor+7)^0,f,c
  6217  0020A6  1E12               	comf	(___aomod@divisor+6)^0,f,c
  6218  0020A8  1E11               	comf	(___aomod@divisor+5)^0,f,c
  6219  0020AA  1E10               	comf	(___aomod@divisor+4)^0,f,c
  6220  0020AC  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  6221  0020AE  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  6222  0020B0  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  6223  0020B2  6C0C               	negf	___aomod@divisor^0,c
  6224  0020B4  0E00               	movlw	0
  6225  0020B6  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  6226  0020B8  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  6227  0020BA  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  6228  0020BC  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  6229  0020BE  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  6230  0020C0  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  6231  0020C2  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  6232  0020C4                     l3855:
  6233  0020C4  500C               	movf	___aomod@divisor^0,w,c
  6234  0020C6  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  6235  0020C8  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  6236  0020CA  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  6237  0020CC  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  6238  0020CE  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  6239  0020D0  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  6240  0020D2  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  6241  0020D4  B4D8               	btfsc	status,2,c
  6242  0020D6  EF6F  F010         	goto	u3801
  6243  0020DA  EF71  F010         	goto	u3800
  6244  0020DE                     u3801:
  6245  0020DE  EFB9  F010         	goto	l3871
  6246  0020E2                     u3800:
  6247  0020E2  0E01               	movlw	1
  6248  0020E4  6E14               	movwf	___aomod@counter^0,c
  6249  0020E6  EF7F  F010         	goto	l3861
  6250  0020EA                     l3859:
  6251  0020EA  90D8               	bcf	status,0,c
  6252  0020EC  360C               	rlcf	___aomod@divisor^0,f,c
  6253  0020EE  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  6254  0020F0  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  6255  0020F2  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  6256  0020F4  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  6257  0020F6  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  6258  0020F8  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  6259  0020FA  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  6260  0020FC  2A14               	incf	___aomod@counter^0,f,c
  6261  0020FE                     l3861:
  6262  0020FE  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  6263  002100  EF84  F010         	goto	u3811
  6264  002104  EF86  F010         	goto	u3810
  6265  002108                     u3811:
  6266  002108  EF75  F010         	goto	l3859
  6267  00210C                     u3810:
  6268  00210C                     l3863:
  6269  00210C  500C               	movf	___aomod@divisor^0,w,c
  6270  00210E  5C04               	subwf	___aomod@dividend^0,w,c
  6271  002110  500D               	movf	(___aomod@divisor+1)^0,w,c
  6272  002112  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  6273  002114  500E               	movf	(___aomod@divisor+2)^0,w,c
  6274  002116  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  6275  002118  500F               	movf	(___aomod@divisor+3)^0,w,c
  6276  00211A  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  6277  00211C  5010               	movf	(___aomod@divisor+4)^0,w,c
  6278  00211E  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  6279  002120  5011               	movf	(___aomod@divisor+5)^0,w,c
  6280  002122  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  6281  002124  5012               	movf	(___aomod@divisor+6)^0,w,c
  6282  002126  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  6283  002128  5013               	movf	(___aomod@divisor+7)^0,w,c
  6284  00212A  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  6285  00212C  A0D8               	btfss	status,0,c
  6286  00212E  EF9B  F010         	goto	u3821
  6287  002132  EF9D  F010         	goto	u3820
  6288  002136                     u3821:
  6289  002136  EFAD  F010         	goto	l3867
  6290  00213A                     u3820:
  6291  00213A  500C               	movf	___aomod@divisor^0,w,c
  6292  00213C  5E04               	subwf	___aomod@dividend^0,f,c
  6293  00213E  500D               	movf	(___aomod@divisor+1)^0,w,c
  6294  002140  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  6295  002142  500E               	movf	(___aomod@divisor+2)^0,w,c
  6296  002144  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  6297  002146  500F               	movf	(___aomod@divisor+3)^0,w,c
  6298  002148  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  6299  00214A  5010               	movf	(___aomod@divisor+4)^0,w,c
  6300  00214C  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  6301  00214E  5011               	movf	(___aomod@divisor+5)^0,w,c
  6302  002150  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  6303  002152  5012               	movf	(___aomod@divisor+6)^0,w,c
  6304  002154  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  6305  002156  5013               	movf	(___aomod@divisor+7)^0,w,c
  6306  002158  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  6307  00215A                     l3867:
  6308  00215A  90D8               	bcf	status,0,c
  6309  00215C  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  6310  00215E  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  6311  002160  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  6312  002162  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  6313  002164  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  6314  002166  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  6315  002168  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  6316  00216A  320C               	rrcf	___aomod@divisor^0,f,c
  6317  00216C  2E14               	decfsz	___aomod@counter^0,f,c
  6318  00216E  EF86  F010         	goto	l3863
  6319  002172                     l3871:
  6320  002172  5015               	movf	___aomod@sign^0,w,c
  6321  002174  B4D8               	btfsc	status,2,c
  6322  002176  EFBF  F010         	goto	u3831
  6323  00217A  EFC1  F010         	goto	u3830
  6324  00217E                     u3831:
  6325  00217E  EFD1  F010         	goto	l3875
  6326  002182                     u3830:
  6327  002182  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  6328  002184  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  6329  002186  1E09               	comf	(___aomod@dividend+5)^0,f,c
  6330  002188  1E08               	comf	(___aomod@dividend+4)^0,f,c
  6331  00218A  1E07               	comf	(___aomod@dividend+3)^0,f,c
  6332  00218C  1E06               	comf	(___aomod@dividend+2)^0,f,c
  6333  00218E  1E05               	comf	(___aomod@dividend+1)^0,f,c
  6334  002190  6C04               	negf	___aomod@dividend^0,c
  6335  002192  0E00               	movlw	0
  6336  002194  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  6337  002196  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  6338  002198  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  6339  00219A  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  6340  00219C  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  6341  00219E  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  6342  0021A0  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  6343  0021A2                     l3875:
  6344  0021A2  C004  F004         	movff	___aomod@dividend,?___aomod
  6345  0021A6  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  6346  0021AA  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  6347  0021AE  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  6348  0021B2  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  6349  0021B6  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  6350  0021BA  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  6351  0021BE  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  6352  0021C2  0012               	return		;funcret
  6353  0021C4                     __end_of___aomod:
  6354                           	callstack 0
  6355                           
  6356 ;; *************** function ___aodiv *****************
  6357 ;; Defined at:
  6358 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  dividend        8    3[COMRAM] long long 
  6361 ;;  divisor         8   11[COMRAM] long long 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  quotient        8   21[COMRAM] long long 
  6364 ;;  sign            1   20[COMRAM] unsigned char 
  6365 ;;  counter         1   19[COMRAM] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  8    3[COMRAM] long long 
  6368 ;; Registers used:
  6369 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6375 ;;      Params:        16       0       0       0       0       0       0       0       0
  6376 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6378 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6379 ;;Total ram usage:       26 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    2
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_dtoa
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text34
  6390  001D62                     __ptext34:
  6391                           	callstack 0
  6392  001D62                     ___aodiv:
  6393                           	callstack 22
  6394  001D62  0E00               	movlw	0
  6395  001D64  6E15               	movwf	___aodiv@sign^0,c
  6396  001D66  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  6397  001D68  EFBA  F00E         	goto	u3710
  6398  001D6C  EFB8  F00E         	goto	u3711
  6399  001D70                     u3711:
  6400  001D70  EFCC  F00E         	goto	l3807
  6401  001D74                     u3710:
  6402  001D74  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  6403  001D76  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  6404  001D78  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  6405  001D7A  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  6406  001D7C  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  6407  001D7E  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  6408  001D80  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  6409  001D82  6C0C               	negf	___aodiv@divisor^0,c
  6410  001D84  0E00               	movlw	0
  6411  001D86  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  6412  001D88  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  6413  001D8A  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  6414  001D8C  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  6415  001D8E  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  6416  001D90  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  6417  001D92  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  6418  001D94  0E01               	movlw	1
  6419  001D96  6E15               	movwf	___aodiv@sign^0,c
  6420  001D98                     l3807:
  6421  001D98  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  6422  001D9A  EFD3  F00E         	goto	u3720
  6423  001D9E  EFD1  F00E         	goto	u3721
  6424  001DA2                     u3721:
  6425  001DA2  EFE5  F00E         	goto	l3813
  6426  001DA6                     u3720:
  6427  001DA6  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  6428  001DA8  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  6429  001DAA  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  6430  001DAC  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  6431  001DAE  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  6432  001DB0  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  6433  001DB2  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  6434  001DB4  6C04               	negf	___aodiv@dividend^0,c
  6435  001DB6  0E00               	movlw	0
  6436  001DB8  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  6437  001DBA  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  6438  001DBC  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  6439  001DBE  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  6440  001DC0  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  6441  001DC2  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  6442  001DC4  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  6443  001DC6  0E01               	movlw	1
  6444  001DC8  1A15               	xorwf	___aodiv@sign^0,f,c
  6445  001DCA                     l3813:
  6446  001DCA  EE20  F016         	lfsr	2,___aodiv@quotient
  6447  001DCE  0E07               	movlw	7
  6448  001DD0                     u3731:
  6449  001DD0  6ADE               	clrf	postinc2,c
  6450  001DD2  06E8               	decf	wreg,f,c
  6451  001DD4  E2FD               	bc	u3731
  6452  001DD6  500C               	movf	___aodiv@divisor^0,w,c
  6453  001DD8  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  6454  001DDA  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  6455  001DDC  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  6456  001DDE  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  6457  001DE0  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  6458  001DE2  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  6459  001DE4  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  6460  001DE6  B4D8               	btfsc	status,2,c
  6461  001DE8  EFF8  F00E         	goto	u3741
  6462  001DEC  EFFA  F00E         	goto	u3740
  6463  001DF0                     u3741:
  6464  001DF0  EF4C  F00F         	goto	l3835
  6465  001DF4                     u3740:
  6466  001DF4  0E01               	movlw	1
  6467  001DF6  6E14               	movwf	___aodiv@counter^0,c
  6468  001DF8  EF08  F00F         	goto	l3821
  6469  001DFC                     l3819:
  6470  001DFC  90D8               	bcf	status,0,c
  6471  001DFE  360C               	rlcf	___aodiv@divisor^0,f,c
  6472  001E00  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  6473  001E02  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  6474  001E04  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  6475  001E06  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  6476  001E08  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  6477  001E0A  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  6478  001E0C  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  6479  001E0E  2A14               	incf	___aodiv@counter^0,f,c
  6480  001E10                     l3821:
  6481  001E10  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  6482  001E12  EF0D  F00F         	goto	u3751
  6483  001E16  EF0F  F00F         	goto	u3750
  6484  001E1A                     u3751:
  6485  001E1A  EFFE  F00E         	goto	l3819
  6486  001E1E                     u3750:
  6487  001E1E                     l3823:
  6488  001E1E  90D8               	bcf	status,0,c
  6489  001E20  3616               	rlcf	___aodiv@quotient^0,f,c
  6490  001E22  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  6491  001E24  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  6492  001E26  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  6493  001E28  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  6494  001E2A  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  6495  001E2C  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  6496  001E2E  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  6497  001E30  500C               	movf	___aodiv@divisor^0,w,c
  6498  001E32  5C04               	subwf	___aodiv@dividend^0,w,c
  6499  001E34  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6500  001E36  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  6501  001E38  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6502  001E3A  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  6503  001E3C  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6504  001E3E  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  6505  001E40  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6506  001E42  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  6507  001E44  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6508  001E46  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  6509  001E48  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6510  001E4A  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  6511  001E4C  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6512  001E4E  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  6513  001E50  A0D8               	btfss	status,0,c
  6514  001E52  EF2D  F00F         	goto	u3761
  6515  001E56  EF2F  F00F         	goto	u3760
  6516  001E5A                     u3761:
  6517  001E5A  EF40  F00F         	goto	l3831
  6518  001E5E                     u3760:
  6519  001E5E  500C               	movf	___aodiv@divisor^0,w,c
  6520  001E60  5E04               	subwf	___aodiv@dividend^0,f,c
  6521  001E62  500D               	movf	(___aodiv@divisor+1)^0,w,c
  6522  001E64  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  6523  001E66  500E               	movf	(___aodiv@divisor+2)^0,w,c
  6524  001E68  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  6525  001E6A  500F               	movf	(___aodiv@divisor+3)^0,w,c
  6526  001E6C  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  6527  001E6E  5010               	movf	(___aodiv@divisor+4)^0,w,c
  6528  001E70  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  6529  001E72  5011               	movf	(___aodiv@divisor+5)^0,w,c
  6530  001E74  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  6531  001E76  5012               	movf	(___aodiv@divisor+6)^0,w,c
  6532  001E78  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  6533  001E7A  5013               	movf	(___aodiv@divisor+7)^0,w,c
  6534  001E7C  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  6535  001E7E  8016               	bsf	___aodiv@quotient^0,0,c
  6536  001E80                     l3831:
  6537  001E80  90D8               	bcf	status,0,c
  6538  001E82  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  6539  001E84  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  6540  001E86  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  6541  001E88  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  6542  001E8A  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  6543  001E8C  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  6544  001E8E  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  6545  001E90  320C               	rrcf	___aodiv@divisor^0,f,c
  6546  001E92  2E14               	decfsz	___aodiv@counter^0,f,c
  6547  001E94  EF0F  F00F         	goto	l3823
  6548  001E98                     l3835:
  6549  001E98  5015               	movf	___aodiv@sign^0,w,c
  6550  001E9A  B4D8               	btfsc	status,2,c
  6551  001E9C  EF52  F00F         	goto	u3771
  6552  001EA0  EF54  F00F         	goto	u3770
  6553  001EA4                     u3771:
  6554  001EA4  EF64  F00F         	goto	l3839
  6555  001EA8                     u3770:
  6556  001EA8  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  6557  001EAA  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  6558  001EAC  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  6559  001EAE  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  6560  001EB0  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  6561  001EB2  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  6562  001EB4  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  6563  001EB6  6C16               	negf	___aodiv@quotient^0,c
  6564  001EB8  0E00               	movlw	0
  6565  001EBA  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  6566  001EBC  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  6567  001EBE  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  6568  001EC0  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  6569  001EC2  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  6570  001EC4  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  6571  001EC6  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  6572  001EC8                     l3839:
  6573  001EC8  C016  F004         	movff	___aodiv@quotient,?___aodiv
  6574  001ECC  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  6575  001ED0  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  6576  001ED4  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  6577  001ED8  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  6578  001EDC  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  6579  001EE0  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  6580  001EE4  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  6581  001EE8  0012               	return		;funcret
  6582  001EEA                     __end_of___aodiv:
  6583                           	callstack 0
  6584                           
  6585 ;; *************** function _atoi *****************
  6586 ;; Defined at:
  6587 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6590 ;;		 -> STR_7(3), STR_5(5), STR_2(9), STR_1(14), 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;  n               2   23[COMRAM] int 
  6593 ;;  neg             2   16[COMRAM] int 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  2   10[COMRAM] int 
  6596 ;; Registers used:
  6597 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6603 ;;      Params:         2       0       0       0       0       0       0       0       0
  6604 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6605 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6606 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6607 ;;Total ram usage:       15 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    3
  6610 ;; This function calls:
  6611 ;;		___wmul
  6612 ;;		_isdigit
  6613 ;;		_isspace
  6614 ;; This function is called by:
  6615 ;;		_vfpfcnvrt
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text35
  6620  001BD2                     __ptext35:
  6621                           	callstack 0
  6622  001BD2                     _atoi:
  6623                           	callstack 22
  6624  001BD2  0E00               	movlw	0
  6625  001BD4  6E19               	movwf	(atoi@n+1)^0,c
  6626  001BD6  0E00               	movlw	0
  6627  001BD8  6E18               	movwf	atoi@n^0,c
  6628  001BDA  0E00               	movlw	0
  6629  001BDC  6E12               	movwf	(atoi@neg+1)^0,c
  6630  001BDE  0E00               	movlw	0
  6631  001BE0  6E11               	movwf	atoi@neg^0,c
  6632  001BE2  EFF5  F00D         	goto	l3987
  6633  001BE6                     l3985:
  6634  001BE6  4A0B               	infsnz	atoi@s^0,f,c
  6635  001BE8  2A0C               	incf	(atoi@s+1)^0,f,c
  6636  001BEA                     l3987:
  6637  001BEA  0E01               	movlw	1
  6638  001BEC  6E17               	movwf	_atoi$1755^0,c
  6639  001BEE  C00B  FFF6         	movff	atoi@s,tblptrl
  6640  001BF2  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6641  001BF6                     	if	0	;tblptru may be non-zero
  6642  001BF6                     	endif
  6643  001BF6                     	if	0	;tblptru may be non-zero
  6644  001BF6                     	endif
  6645  001BF6  0008               	tblrd		*
  6646  001BF8  50F5               	movf	tablat,w,c
  6647  001BFA  0A20               	xorlw	32
  6648  001BFC  B4D8               	btfsc	status,2,c
  6649  001BFE  EF03  F00E         	goto	u4081
  6650  001C02  EF05  F00E         	goto	u4080
  6651  001C06                     u4081:
  6652  001C06  EF22  F00E         	goto	l3995
  6653  001C0A                     u4080:
  6654  001C0A  0EF7               	movlw	247
  6655  001C0C  6E0D               	movwf	??_atoi^0,c
  6656  001C0E  0EFF               	movlw	255
  6657  001C10  6E0E               	movwf	(??_atoi+1)^0,c
  6658  001C12  C00B  FFF6         	movff	atoi@s,tblptrl
  6659  001C16  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6660  001C1A                     	if	0	;tblptru may be non-zero
  6661  001C1A                     	endif
  6662  001C1A                     	if	0	;tblptru may be non-zero
  6663  001C1A                     	endif
  6664  001C1A  0008               	tblrd		*
  6665  001C1C  50F5               	movf	tablat,w,c
  6666  001C1E  6E0F               	movwf	(??_atoi+2)^0,c
  6667  001C20  6A10               	clrf	(??_atoi+3)^0,c
  6668  001C22  500D               	movf	??_atoi^0,w,c
  6669  001C24  260F               	addwf	(??_atoi+2)^0,f,c
  6670  001C26  500E               	movf	(??_atoi+1)^0,w,c
  6671  001C28  2210               	addwfc	(??_atoi+3)^0,f,c
  6672  001C2A  5010               	movf	(??_atoi+3)^0,w,c
  6673  001C2C  E109               	bnz	u4090
  6674  001C2E  0E05               	movlw	5
  6675  001C30  5C0F               	subwf	(??_atoi+2)^0,w,c
  6676  001C32  A0D8               	btfss	status,0,c
  6677  001C34  EF1E  F00E         	goto	u4091
  6678  001C38  EF20  F00E         	goto	u4090
  6679  001C3C                     u4091:
  6680  001C3C  EF22  F00E         	goto	l3995
  6681  001C40                     u4090:
  6682  001C40  0E00               	movlw	0
  6683  001C42  6E17               	movwf	_atoi$1755^0,c
  6684  001C44                     l3995:
  6685  001C44  C017  F013         	movff	_atoi$1755,_atoi$1754
  6686  001C48  6A14               	clrf	(_atoi$1754+1)^0,c
  6687  001C4A  5013               	movf	_atoi$1754^0,w,c
  6688  001C4C  1014               	iorwf	(_atoi$1754+1)^0,w,c
  6689  001C4E  A4D8               	btfss	status,2,c
  6690  001C50  EF2C  F00E         	goto	u4101
  6691  001C54  EF2E  F00E         	goto	u4100
  6692  001C58                     u4101:
  6693  001C58  EFF3  F00D         	goto	l3985
  6694  001C5C                     u4100:
  6695  001C5C  EF38  F00E         	goto	l4005
  6696  001C60                     l4001:
  6697  001C60  0E00               	movlw	0
  6698  001C62  6E12               	movwf	(atoi@neg+1)^0,c
  6699  001C64  0E01               	movlw	1
  6700  001C66  6E11               	movwf	atoi@neg^0,c
  6701  001C68                     l4003:
  6702  001C68  4A0B               	infsnz	atoi@s^0,f,c
  6703  001C6A  2A0C               	incf	(atoi@s+1)^0,f,c
  6704  001C6C  EF6D  F00E         	goto	l4011
  6705  001C70                     l4005:
  6706  001C70  C00B  FFF6         	movff	atoi@s,tblptrl
  6707  001C74  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6708  001C78                     	if	0	;tblptru may be non-zero
  6709  001C78                     	endif
  6710  001C78                     	if	0	;tblptru may be non-zero
  6711  001C78                     	endif
  6712  001C78  0008               	tblrd		*
  6713  001C7A  50F5               	movf	tablat,w,c
  6714  001C7C  6E0D               	movwf	??_atoi^0,c
  6715  001C7E  6A0E               	clrf	(??_atoi+1)^0,c
  6716                           
  6717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6718                           ; Switch size 1, requested type "simple"
  6719                           ; Number of cases is 1, Range of values is 0 to 0
  6720                           ; switch strategies available:
  6721                           ; Name         Instructions Cycles
  6722                           ; simple_byte            4     3 (average)
  6723                           ;	Chosen strategy is simple_byte
  6724  001C80  500E               	movf	(??_atoi+1)^0,w,c
  6725  001C82  0A00               	xorlw	0	; case 0
  6726  001C84  B4D8               	btfsc	status,2,c
  6727  001C86  EF47  F00E         	goto	l4347
  6728  001C8A  EF6D  F00E         	goto	l4011
  6729  001C8E                     l4347:
  6730                           
  6731                           ; Switch size 1, requested type "simple"
  6732                           ; Number of cases is 2, Range of values is 43 to 45
  6733                           ; switch strategies available:
  6734                           ; Name         Instructions Cycles
  6735                           ; simple_byte            7     4 (average)
  6736                           ;	Chosen strategy is simple_byte
  6737  001C8E  500D               	movf	??_atoi^0,w,c
  6738  001C90  0A2B               	xorlw	43	; case 43
  6739  001C92  B4D8               	btfsc	status,2,c
  6740  001C94  EF34  F00E         	goto	l4003
  6741  001C98  0A06               	xorlw	6	; case 45
  6742  001C9A  B4D8               	btfsc	status,2,c
  6743  001C9C  EF30  F00E         	goto	l4001
  6744  001CA0  EF6D  F00E         	goto	l4011
  6745  001CA4                     l4007:
  6746  001CA4  C018  F004         	movff	atoi@n,___wmul@multiplier
  6747  001CA8  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  6748  001CAC  0E00               	movlw	0
  6749  001CAE  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  6750  001CB0  0E0A               	movlw	10
  6751  001CB2  6E06               	movwf	___wmul@multiplicand^0,c
  6752  001CB4  EC04  F018         	call	___wmul	;wreg free
  6753  001CB8  C00B  FFF6         	movff	atoi@s,tblptrl
  6754  001CBC  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6755  001CC0                     	if	0	;tblptru may be non-zero
  6756  001CC0                     	endif
  6757  001CC0                     	if	0	;tblptru may be non-zero
  6758  001CC0                     	endif
  6759  001CC0  0008               	tblrd		*
  6760  001CC2  50F5               	movf	tablat,w,c
  6761  001CC4  5E04               	subwf	?___wmul^0,f,c
  6762  001CC6  0E00               	movlw	0
  6763  001CC8  5A05               	subwfb	(?___wmul+1)^0,f,c
  6764  001CCA  0E30               	movlw	48
  6765  001CCC  2404               	addwf	?___wmul^0,w,c
  6766  001CCE  6E18               	movwf	atoi@n^0,c
  6767  001CD0  0E00               	movlw	0
  6768  001CD2  2005               	addwfc	(?___wmul+1)^0,w,c
  6769  001CD4  6E19               	movwf	(atoi@n+1)^0,c
  6770  001CD6  EF34  F00E         	goto	l4003
  6771  001CDA                     l4011:
  6772  001CDA  0ED0               	movlw	208
  6773  001CDC  6E0D               	movwf	??_atoi^0,c
  6774  001CDE  0EFF               	movlw	255
  6775  001CE0  6E0E               	movwf	(??_atoi+1)^0,c
  6776  001CE2  C00B  FFF6         	movff	atoi@s,tblptrl
  6777  001CE6  C00C  FFF7         	movff	atoi@s+1,tblptrh
  6778  001CEA                     	if	0	;tblptru may be non-zero
  6779  001CEA                     	endif
  6780  001CEA                     	if	0	;tblptru may be non-zero
  6781  001CEA                     	endif
  6782  001CEA  0008               	tblrd		*
  6783  001CEC  50F5               	movf	tablat,w,c
  6784  001CEE  6E0F               	movwf	(??_atoi+2)^0,c
  6785  001CF0  6A10               	clrf	(??_atoi+3)^0,c
  6786  001CF2  500D               	movf	??_atoi^0,w,c
  6787  001CF4  260F               	addwf	(??_atoi+2)^0,f,c
  6788  001CF6  500E               	movf	(??_atoi+1)^0,w,c
  6789  001CF8  2210               	addwfc	(??_atoi+3)^0,f,c
  6790  001CFA  5010               	movf	(??_atoi+3)^0,w,c
  6791  001CFC  E10A               	bnz	u4110
  6792  001CFE  0E0A               	movlw	10
  6793  001D00  5C0F               	subwf	(??_atoi+2)^0,w,c
  6794  001D02  A0D8               	btfss	status,0,c
  6795  001D04  EF86  F00E         	goto	u4111
  6796  001D08  EF89  F00E         	goto	u4110
  6797  001D0C                     u4111:
  6798  001D0C  0E01               	movlw	1
  6799  001D0E  EF8A  F00E         	goto	u4120
  6800  001D12                     u4110:
  6801  001D12  0E00               	movlw	0
  6802  001D14                     u4120:
  6803  001D14  6E15               	movwf	_atoi$1756^0,c
  6804  001D16  6A16               	clrf	(_atoi$1756+1)^0,c
  6805  001D18  5015               	movf	_atoi$1756^0,w,c
  6806  001D1A  1016               	iorwf	(_atoi$1756+1)^0,w,c
  6807  001D1C  A4D8               	btfss	status,2,c
  6808  001D1E  EF93  F00E         	goto	u4131
  6809  001D22  EF95  F00E         	goto	u4130
  6810  001D26                     u4131:
  6811  001D26  EF52  F00E         	goto	l4007
  6812  001D2A                     u4130:
  6813  001D2A  5011               	movf	atoi@neg^0,w,c
  6814  001D2C  1012               	iorwf	(atoi@neg+1)^0,w,c
  6815  001D2E  A4D8               	btfss	status,2,c
  6816  001D30  EF9C  F00E         	goto	u4141
  6817  001D34  EF9E  F00E         	goto	u4140
  6818  001D38                     u4141:
  6819  001D38  EFAC  F00E         	goto	l1107
  6820  001D3C                     u4140:
  6821  001D3C  C018  F00D         	movff	atoi@n,??_atoi
  6822  001D40  C019  F00E         	movff	atoi@n+1,??_atoi+1
  6823  001D44  1E0D               	comf	??_atoi^0,f,c
  6824  001D46  1E0E               	comf	(??_atoi+1)^0,f,c
  6825  001D48  4A0D               	infsnz	??_atoi^0,f,c
  6826  001D4A  2A0E               	incf	(??_atoi+1)^0,f,c
  6827  001D4C  C00D  F00B         	movff	??_atoi,?_atoi
  6828  001D50  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  6829  001D54  EFB0  F00E         	goto	l1110
  6830  001D58                     l1107:
  6831  001D58  C018  F00B         	movff	atoi@n,?_atoi
  6832  001D5C  C019  F00C         	movff	atoi@n+1,?_atoi+1
  6833  001D60                     l1110:
  6834  001D60  0012               	return		;funcret
  6835  001D62                     __end_of_atoi:
  6836                           	callstack 0
  6837                           
  6838 ;; *************** function _isspace *****************
  6839 ;; Defined at:
  6840 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  c               2    3[COMRAM] int 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;		None
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  2    3[COMRAM] int 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2, status,0
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6854 ;;      Params:         2       0       0       0       0       0       0       0       0
  6855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6856 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6857 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6858 ;;Total ram usage:        7 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; Hardware stack levels required when called:    2
  6861 ;; This function calls:
  6862 ;;		Nothing
  6863 ;; This function is called by:
  6864 ;;		_atoi
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text36
  6869  002D5A                     __ptext36:
  6870                           	callstack 0
  6871  002D5A                     _isspace:
  6872                           	callstack 22
  6873  002D5A  0E01               	movlw	1
  6874  002D5C  6E0A               	movwf	_isspace$1772^0,c
  6875  002D5E  0E20               	movlw	32
  6876  002D60  1804               	xorwf	isspace@c^0,w,c
  6877  002D62  1005               	iorwf	(isspace@c+1)^0,w,c
  6878  002D64  B4D8               	btfsc	status,2,c
  6879  002D66  EFB7  F016         	goto	u3911
  6880  002D6A  EFB9  F016         	goto	u3910
  6881  002D6E                     u3911:
  6882  002D6E  EFD2  F016         	goto	l3917
  6883  002D72                     u3910:
  6884  002D72  0EF7               	movlw	247
  6885  002D74  6E06               	movwf	??_isspace^0,c
  6886  002D76  0EFF               	movlw	255
  6887  002D78  6E07               	movwf	(??_isspace+1)^0,c
  6888  002D7A  C004  F008         	movff	isspace@c,??_isspace+2
  6889  002D7E  C005  F009         	movff	isspace@c+1,??_isspace+3
  6890  002D82  5006               	movf	??_isspace^0,w,c
  6891  002D84  2608               	addwf	(??_isspace+2)^0,f,c
  6892  002D86  5007               	movf	(??_isspace+1)^0,w,c
  6893  002D88  2209               	addwfc	(??_isspace+3)^0,f,c
  6894  002D8A  5009               	movf	(??_isspace+3)^0,w,c
  6895  002D8C  E109               	bnz	u3920
  6896  002D8E  0E05               	movlw	5
  6897  002D90  5C08               	subwf	(??_isspace+2)^0,w,c
  6898  002D92  A0D8               	btfss	status,0,c
  6899  002D94  EFCE  F016         	goto	u3921
  6900  002D98  EFD0  F016         	goto	u3920
  6901  002D9C                     u3921:
  6902  002D9C  EFD2  F016         	goto	l3917
  6903  002DA0                     u3920:
  6904  002DA0  0E00               	movlw	0
  6905  002DA2  6E0A               	movwf	_isspace$1772^0,c
  6906  002DA4                     l3917:
  6907  002DA4  C00A  F004         	movff	_isspace$1772,?_isspace
  6908  002DA8  6A05               	clrf	(?_isspace+1)^0,c
  6909  002DAA  0012               	return		;funcret
  6910  002DAC                     __end_of_isspace:
  6911                           	callstack 0
  6912                           
  6913 ;; *************** function _isdigit *****************
  6914 ;; Defined at:
  6915 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  c               2    3[COMRAM] int 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;		None
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  2    3[COMRAM] int 
  6922 ;; Registers used:
  6923 ;;		wreg, status,2, status,0
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6929 ;;      Params:         2       0       0       0       0       0       0       0       0
  6930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6931 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6932 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6933 ;;Total ram usage:        6 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:    2
  6936 ;; This function calls:
  6937 ;;		Nothing
  6938 ;; This function is called by:
  6939 ;;		_vfpfcnvrt
  6940 ;;		_atoi
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text37
  6945  002F3C                     __ptext37:
  6946                           	callstack 0
  6947  002F3C                     _isdigit:
  6948                           	callstack 23
  6949  002F3C  0ED0               	movlw	208
  6950  002F3E  6E06               	movwf	??_isdigit^0,c
  6951  002F40  0EFF               	movlw	255
  6952  002F42  6E07               	movwf	(??_isdigit+1)^0,c
  6953  002F44  C004  F008         	movff	isdigit@c,??_isdigit+2
  6954  002F48  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  6955  002F4C  5006               	movf	??_isdigit^0,w,c
  6956  002F4E  2608               	addwf	(??_isdigit+2)^0,f,c
  6957  002F50  5007               	movf	(??_isdigit+1)^0,w,c
  6958  002F52  2209               	addwfc	(??_isdigit+3)^0,f,c
  6959  002F54  5009               	movf	(??_isdigit+3)^0,w,c
  6960  002F56  E10A               	bnz	u3890
  6961  002F58  0E0A               	movlw	10
  6962  002F5A  5C08               	subwf	(??_isdigit+2)^0,w,c
  6963  002F5C  A0D8               	btfss	status,0,c
  6964  002F5E  EFB3  F017         	goto	u3891
  6965  002F62  EFB6  F017         	goto	u3890
  6966  002F66                     u3891:
  6967  002F66  0E01               	movlw	1
  6968  002F68  EFB7  F017         	goto	u3900
  6969  002F6C                     u3890:
  6970  002F6C  0E00               	movlw	0
  6971  002F6E                     u3900:
  6972  002F6E  6E04               	movwf	?_isdigit^0,c
  6973  002F70  6A05               	clrf	(?_isdigit+1)^0,c
  6974  002F72  0012               	return		;funcret
  6975  002F74                     __end_of_isdigit:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function ___wmul *****************
  6979 ;; Defined at:
  6980 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  multiplier      2    3[COMRAM] unsigned int 
  6983 ;;  multiplicand    2    5[COMRAM] unsigned int 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  product         2    7[COMRAM] unsigned int 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  2    3[COMRAM] unsigned int 
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0, prodl, prodh
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6995 ;;      Params:         4       0       0       0       0       0       0       0       0
  6996 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6998 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6999 ;;Total ram usage:        6 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    2
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_appSubGetData
  7006 ;;		_atoi
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text38
  7011  003008                     __ptext38:
  7012                           	callstack 0
  7013  003008                     ___wmul:
  7014                           	callstack 22
  7015  003008  5004               	movf	___wmul@multiplier^0,w,c
  7016  00300A  0206               	mulwf	___wmul@multiplicand^0,c
  7017  00300C  CFF3 F008          	movff	prodl,___wmul@product
  7018  003010  CFF4 F009          	movff	prodh,___wmul@product+1
  7019  003014  5004               	movf	___wmul@multiplier^0,w,c
  7020  003016  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  7021  003018  50F3               	movf	243,w,c
  7022  00301A  2609               	addwf	(___wmul@product+1)^0,f,c
  7023  00301C  5005               	movf	(___wmul@multiplier+1)^0,w,c
  7024  00301E  0206               	mulwf	___wmul@multiplicand^0,c
  7025  003020  50F3               	movf	243,w,c
  7026  003022  2609               	addwf	(___wmul@product+1)^0,f,c
  7027  003024  C008  F004         	movff	___wmul@product,?___wmul
  7028  003028  C009  F005         	movff	___wmul@product+1,?___wmul+1
  7029  00302C  0012               	return		;funcret
  7030  00302E                     __end_of___wmul:
  7031                           	callstack 0
  7032                           
  7033 ;; *************** function _memset *****************
  7034 ;; Defined at:
  7035 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\memset.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  dest            2    3[COMRAM] PTR void 
  7038 ;;		 -> datos(25), 
  7039 ;;  c               2    5[COMRAM] int 
  7040 ;;  n               2    7[COMRAM] unsigned int 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  s               2   13[COMRAM] PTR unsigned char 
  7043 ;;		 -> datos(25), 
  7044 ;;  k               2   11[COMRAM] unsigned int 
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  2    3[COMRAM] PTR void 
  7047 ;; Registers used:
  7048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7054 ;;      Params:         6       0       0       0       0       0       0       0       0
  7055 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7056 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7057 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7058 ;;Total ram usage:       12 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; Hardware stack levels required when called:    2
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_appADC
  7065 ;;		_appBat
  7066 ;;		_appSubGetData
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           	psect	text39
  7071  001EEA                     __ptext39:
  7072                           	callstack 0
  7073  001EEA                     _memset:
  7074                           	callstack 26
  7075  001EEA  C004  F00E         	movff	memset@dest,memset@s
  7076  001EEE  C005  F00F         	movff	memset@dest+1,memset@s+1
  7077  001EF2  5008               	movf	memset@n^0,w,c
  7078  001EF4  1009               	iorwf	(memset@n+1)^0,w,c
  7079  001EF6  A4D8               	btfss	status,2,c
  7080  001EF8  EF80  F00F         	goto	u2581
  7081  001EFC  EF82  F00F         	goto	u2580
  7082  001F00                     u2581:
  7083  001F00  EF84  F00F         	goto	l2903
  7084  001F04                     u2580:
  7085  001F04  EF2F  F010         	goto	l961
  7086  001F08                     l2903:
  7087  001F08  C00E  FFD9         	movff	memset@s,fsr2l
  7088  001F0C  C00F  FFDA         	movff	memset@s+1,fsr2h
  7089  001F10  C006  FFDF         	movff	memset@c,indf2
  7090  001F14  5008               	movf	memset@n^0,w,c
  7091  001F16  240E               	addwf	memset@s^0,w,c
  7092  001F18  6E0A               	movwf	??_memset^0,c
  7093  001F1A  5009               	movf	(memset@n+1)^0,w,c
  7094  001F1C  200F               	addwfc	(memset@s+1)^0,w,c
  7095  001F1E  6E0B               	movwf	(??_memset+1)^0,c
  7096  001F20  0EFF               	movlw	255
  7097  001F22  240A               	addwf	??_memset^0,w,c
  7098  001F24  6ED9               	movwf	fsr2l,c
  7099  001F26  0EFF               	movlw	255
  7100  001F28  200B               	addwfc	(??_memset+1)^0,w,c
  7101  001F2A  6EDA               	movwf	fsr2h,c
  7102  001F2C  C006  FFDF         	movff	memset@c,indf2
  7103  001F30  5009               	movf	(memset@n+1)^0,w,c
  7104  001F32  E107               	bnz	u2591
  7105  001F34  0E03               	movlw	3
  7106  001F36  5C08               	subwf	memset@n^0,w,c
  7107  001F38  B0D8               	btfsc	status,0,c
  7108  001F3A  EFA1  F00F         	goto	u2591
  7109  001F3E  EFA3  F00F         	goto	u2590
  7110  001F42                     u2591:
  7111  001F42  EFA5  F00F         	goto	l2909
  7112  001F46                     u2590:
  7113  001F46  EF2F  F010         	goto	l961
  7114  001F4A                     l2909:
  7115  001F4A  EE20 F001          	lfsr	2,1
  7116  001F4E  500E               	movf	memset@s^0,w,c
  7117  001F50  26D9               	addwf	fsr2l,f,c
  7118  001F52  500F               	movf	(memset@s+1)^0,w,c
  7119  001F54  22DA               	addwfc	fsr2h,f,c
  7120  001F56  C006  FFDF         	movff	memset@c,indf2
  7121  001F5A  EE20 F002          	lfsr	2,2
  7122  001F5E  500E               	movf	memset@s^0,w,c
  7123  001F60  26D9               	addwf	fsr2l,f,c
  7124  001F62  500F               	movf	(memset@s+1)^0,w,c
  7125  001F64  22DA               	addwfc	fsr2h,f,c
  7126  001F66  C006  FFDF         	movff	memset@c,indf2
  7127  001F6A  5008               	movf	memset@n^0,w,c
  7128  001F6C  240E               	addwf	memset@s^0,w,c
  7129  001F6E  6E0A               	movwf	??_memset^0,c
  7130  001F70  5009               	movf	(memset@n+1)^0,w,c
  7131  001F72  200F               	addwfc	(memset@s+1)^0,w,c
  7132  001F74  6E0B               	movwf	(??_memset+1)^0,c
  7133  001F76  0EFE               	movlw	254
  7134  001F78  240A               	addwf	??_memset^0,w,c
  7135  001F7A  6ED9               	movwf	fsr2l,c
  7136  001F7C  0EFF               	movlw	255
  7137  001F7E  200B               	addwfc	(??_memset+1)^0,w,c
  7138  001F80  6EDA               	movwf	fsr2h,c
  7139  001F82  C006  FFDF         	movff	memset@c,indf2
  7140  001F86  5008               	movf	memset@n^0,w,c
  7141  001F88  240E               	addwf	memset@s^0,w,c
  7142  001F8A  6E0A               	movwf	??_memset^0,c
  7143  001F8C  5009               	movf	(memset@n+1)^0,w,c
  7144  001F8E  200F               	addwfc	(memset@s+1)^0,w,c
  7145  001F90  6E0B               	movwf	(??_memset+1)^0,c
  7146  001F92  0EFD               	movlw	253
  7147  001F94  240A               	addwf	??_memset^0,w,c
  7148  001F96  6ED9               	movwf	fsr2l,c
  7149  001F98  0EFF               	movlw	255
  7150  001F9A  200B               	addwfc	(??_memset+1)^0,w,c
  7151  001F9C  6EDA               	movwf	fsr2h,c
  7152  001F9E  C006  FFDF         	movff	memset@c,indf2
  7153  001FA2  5009               	movf	(memset@n+1)^0,w,c
  7154  001FA4  E107               	bnz	u2601
  7155  001FA6  0E07               	movlw	7
  7156  001FA8  5C08               	subwf	memset@n^0,w,c
  7157  001FAA  B0D8               	btfsc	status,0,c
  7158  001FAC  EFDA  F00F         	goto	u2601
  7159  001FB0  EFDC  F00F         	goto	u2600
  7160  001FB4                     u2601:
  7161  001FB4  EFDE  F00F         	goto	l2915
  7162  001FB8                     u2600:
  7163  001FB8  EF2F  F010         	goto	l961
  7164  001FBC                     l2915:
  7165  001FBC  EE20 F003          	lfsr	2,3
  7166  001FC0  500E               	movf	memset@s^0,w,c
  7167  001FC2  26D9               	addwf	fsr2l,f,c
  7168  001FC4  500F               	movf	(memset@s+1)^0,w,c
  7169  001FC6  22DA               	addwfc	fsr2h,f,c
  7170  001FC8  C006  FFDF         	movff	memset@c,indf2
  7171  001FCC  5008               	movf	memset@n^0,w,c
  7172  001FCE  240E               	addwf	memset@s^0,w,c
  7173  001FD0  6E0A               	movwf	??_memset^0,c
  7174  001FD2  5009               	movf	(memset@n+1)^0,w,c
  7175  001FD4  200F               	addwfc	(memset@s+1)^0,w,c
  7176  001FD6  6E0B               	movwf	(??_memset+1)^0,c
  7177  001FD8  0EFC               	movlw	252
  7178  001FDA  240A               	addwf	??_memset^0,w,c
  7179  001FDC  6ED9               	movwf	fsr2l,c
  7180  001FDE  0EFF               	movlw	255
  7181  001FE0  200B               	addwfc	(??_memset+1)^0,w,c
  7182  001FE2  6EDA               	movwf	fsr2h,c
  7183  001FE4  C006  FFDF         	movff	memset@c,indf2
  7184  001FE8  5009               	movf	(memset@n+1)^0,w,c
  7185  001FEA  E107               	bnz	u2611
  7186  001FEC  0E09               	movlw	9
  7187  001FEE  5C08               	subwf	memset@n^0,w,c
  7188  001FF0  B0D8               	btfsc	status,0,c
  7189  001FF2  EFFD  F00F         	goto	u2611
  7190  001FF6  EFFF  F00F         	goto	u2610
  7191  001FFA                     u2611:
  7192  001FFA  EF01  F010         	goto	l2921
  7193  001FFE                     u2610:
  7194  001FFE  EF2F  F010         	goto	l961
  7195  002002                     l2921:
  7196  002002  C00E  F00A         	movff	memset@s,??_memset
  7197  002006  C00F  F00B         	movff	memset@s+1,??_memset+1
  7198  00200A  1E0A               	comf	??_memset^0,f,c
  7199  00200C  1E0B               	comf	(??_memset+1)^0,f,c
  7200  00200E  4A0A               	infsnz	??_memset^0,f,c
  7201  002010  2A0B               	incf	(??_memset+1)^0,f,c
  7202  002012  0E03               	movlw	3
  7203  002014  140A               	andwf	??_memset^0,w,c
  7204  002016  6E0C               	movwf	memset@k^0,c
  7205  002018  6A0D               	clrf	(memset@k+1)^0,c
  7206  00201A  500C               	movf	memset@k^0,w,c
  7207  00201C  260E               	addwf	memset@s^0,f,c
  7208  00201E  500D               	movf	(memset@k+1)^0,w,c
  7209  002020  220F               	addwfc	(memset@s+1)^0,f,c
  7210  002022  500C               	movf	memset@k^0,w,c
  7211  002024  5E08               	subwf	memset@n^0,f,c
  7212  002026  500D               	movf	(memset@k+1)^0,w,c
  7213  002028  5A09               	subwfb	(memset@n+1)^0,f,c
  7214  00202A  0EFC               	movlw	252
  7215  00202C  1608               	andwf	memset@n^0,f,c
  7216  00202E  0EFF               	movlw	255
  7217  002030  1609               	andwf	(memset@n+1)^0,f,c
  7218  002032  EF26  F010         	goto	l2929
  7219  002036                     l2923:
  7220  002036  C00E  FFD9         	movff	memset@s,fsr2l
  7221  00203A  C00F  FFDA         	movff	memset@s+1,fsr2h
  7222  00203E  C006  FFDF         	movff	memset@c,indf2
  7223  002042  0608               	decf	memset@n^0,f,c
  7224  002044  A0D8               	btfss	status,0,c
  7225  002046  0609               	decf	(memset@n+1)^0,f,c
  7226  002048  4A0E               	infsnz	memset@s^0,f,c
  7227  00204A  2A0F               	incf	(memset@s+1)^0,f,c
  7228  00204C                     l2929:
  7229  00204C  5008               	movf	memset@n^0,w,c
  7230  00204E  1009               	iorwf	(memset@n+1)^0,w,c
  7231  002050  A4D8               	btfss	status,2,c
  7232  002052  EF2D  F010         	goto	u2621
  7233  002056  EF2F  F010         	goto	u2620
  7234  00205A                     u2621:
  7235  00205A  EF1B  F010         	goto	l2923
  7236  00205E                     u2620:
  7237  00205E                     l961:
  7238  00205E  0012               	return		;funcret
  7239  002060                     __end_of_memset:
  7240                           	callstack 0
  7241                           
  7242 ;; *************** function _Lcd_Out *****************
  7243 ;; Defined at:
  7244 ;;		line 95 in file "flex_lcd.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  y               1    wreg     unsigned char 
  7247 ;;  x               1    6[COMRAM] unsigned char 
  7248 ;;  buffer          2    7[COMRAM] PTR const char 
  7249 ;;		 -> STR_6(14), appElemts@dataout(6), STR_4(6), STR_3(12), 
  7250 ;;		 -> datos.display(16), datos(25), 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  y               1   11[COMRAM] unsigned char 
  7253 ;;  data            1   12[COMRAM] unsigned char 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  1    wreg      void 
  7256 ;; Registers used:
  7257 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7263 ;;      Params:         3       0       0       0       0       0       0       0       0
  7264 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7265 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7266 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7267 ;;Total ram usage:        7 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:    3
  7270 ;; This function calls:
  7271 ;;		_Lcd_Chr_CP
  7272 ;;		_Lcd_Cmd
  7273 ;; This function is called by:
  7274 ;;		_appADC
  7275 ;;		_appBat
  7276 ;;		_appLCD_Init
  7277 ;;		_appElemts
  7278 ;;		_appSubGetData
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text40
  7283  002784                     __ptext40:
  7284                           	callstack 0
  7285  002784                     _Lcd_Out:
  7286                           	callstack 25
  7287                           
  7288                           ;incstack = 0
  7289                           ;Lcd_Out@y stored from wreg
  7290  002784  6E0C               	movwf	Lcd_Out@y^0,c
  7291  002786                     
  7292                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  7293  002786  EFD9  F013         	goto	l2955
  7294  00278A                     l2945:
  7295                           
  7296                           ;flex_lcd.c: 101:             data = 128 + x;
  7297  00278A  5007               	movf	Lcd_Out@x^0,w,c
  7298  00278C  0F80               	addlw	128
  7299  00278E  6E0D               	movwf	Lcd_Out@data^0,c
  7300                           
  7301                           ;flex_lcd.c: 102:             break;
  7302  002790  EFF6  F013         	goto	l2957
  7303  002794                     l2947:
  7304                           
  7305                           ;flex_lcd.c: 104:             data = 192 + x;
  7306  002794  5007               	movf	Lcd_Out@x^0,w,c
  7307  002796  0FC0               	addlw	192
  7308  002798  6E0D               	movwf	Lcd_Out@data^0,c
  7309                           
  7310                           ;flex_lcd.c: 105:             break;
  7311  00279A  EFF6  F013         	goto	l2957
  7312  00279E                     l2949:
  7313                           
  7314                           ;flex_lcd.c: 107:             data = 148 + x;
  7315  00279E  5007               	movf	Lcd_Out@x^0,w,c
  7316  0027A0  0F94               	addlw	148
  7317  0027A2  6E0D               	movwf	Lcd_Out@data^0,c
  7318                           
  7319                           ;flex_lcd.c: 108:             break;
  7320  0027A4  EFF6  F013         	goto	l2957
  7321  0027A8                     l2951:
  7322                           
  7323                           ;flex_lcd.c: 110:             data = 212 + x;
  7324  0027A8  5007               	movf	Lcd_Out@x^0,w,c
  7325  0027AA  0FD4               	addlw	212
  7326  0027AC  6E0D               	movwf	Lcd_Out@data^0,c
  7327                           
  7328                           ;flex_lcd.c: 111:             break;
  7329  0027AE  EFF6  F013         	goto	l2957
  7330  0027B2                     l2955:
  7331  0027B2  500C               	movf	Lcd_Out@y^0,w,c
  7332  0027B4  6E0A               	movwf	??_Lcd_Out^0,c
  7333  0027B6  6A0B               	clrf	(??_Lcd_Out+1)^0,c
  7334                           
  7335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7336                           ; Switch size 1, requested type "simple"
  7337                           ; Number of cases is 1, Range of values is 0 to 0
  7338                           ; switch strategies available:
  7339                           ; Name         Instructions Cycles
  7340                           ; simple_byte            4     3 (average)
  7341                           ;	Chosen strategy is simple_byte
  7342  0027B8  500B               	movf	(??_Lcd_Out+1)^0,w,c
  7343  0027BA  0A00               	xorlw	0	; case 0
  7344  0027BC  B4D8               	btfsc	status,2,c
  7345  0027BE  EFE3  F013         	goto	l4349
  7346  0027C2  EFF6  F013         	goto	l2957
  7347  0027C6                     l4349:
  7348                           
  7349                           ; Switch size 1, requested type "simple"
  7350                           ; Number of cases is 4, Range of values is 1 to 4
  7351                           ; switch strategies available:
  7352                           ; Name         Instructions Cycles
  7353                           ; simple_byte           13     7 (average)
  7354                           ;	Chosen strategy is simple_byte
  7355  0027C6  500A               	movf	??_Lcd_Out^0,w,c
  7356  0027C8  0A01               	xorlw	1	; case 1
  7357  0027CA  B4D8               	btfsc	status,2,c
  7358  0027CC  EFC5  F013         	goto	l2945
  7359  0027D0  0A03               	xorlw	3	; case 2
  7360  0027D2  B4D8               	btfsc	status,2,c
  7361  0027D4  EFCA  F013         	goto	l2947
  7362  0027D8  0A01               	xorlw	1	; case 3
  7363  0027DA  B4D8               	btfsc	status,2,c
  7364  0027DC  EFCF  F013         	goto	l2949
  7365  0027E0  0A07               	xorlw	7	; case 4
  7366  0027E2  B4D8               	btfsc	status,2,c
  7367  0027E4  EFD4  F013         	goto	l2951
  7368  0027E8  EFF6  F013         	goto	l2957
  7369  0027EC                     l2957:
  7370                           
  7371                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  7372  0027EC  500D               	movf	Lcd_Out@data^0,w,c
  7373  0027EE  EC2B  F012         	call	_Lcd_Cmd
  7374                           
  7375                           ;flex_lcd.c: 116:     while(*buffer)
  7376  0027F2  EF0F  F014         	goto	l2963
  7377  0027F6                     l2959:
  7378                           
  7379                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  7380  0027F6  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7381  0027FA  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7382  0027FE  6AF8               	clrf	tblptru,c
  7383  002800  0E07               	movlw	(high __ramtop+-1)
  7384  002802  64F7               	cpfsgt	tblptrh,c
  7385  002804  D003               	bra	u2637
  7386  002806  0008               	tblrd		*
  7387  002808  50F5               	movf	tablat,w,c
  7388  00280A  D005               	bra	u2630
  7389  00280C                     u2637:
  7390  00280C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7391  002810  CFF7 FFE2          	movff	tblptrh,fsr1h
  7392  002814  50E7               	movf	indf1,w,c
  7393  002816                     u2630:
  7394  002816  ECE2  F010         	call	_Lcd_Chr_CP
  7395  00281A                     
  7396                           ;flex_lcd.c: 119:         buffer++;
  7397  00281A  4A08               	infsnz	Lcd_Out@buffer^0,f,c
  7398  00281C  2A09               	incf	(Lcd_Out@buffer+1)^0,f,c
  7399  00281E                     l2963:
  7400                           
  7401                           ;flex_lcd.c: 116:     while(*buffer)
  7402  00281E  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  7403  002822  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  7404  002826  6AF8               	clrf	tblptru,c
  7405  002828  0E07               	movlw	(high __ramtop+-1)
  7406  00282A  64F7               	cpfsgt	tblptrh,c
  7407  00282C  D003               	bra	u2647
  7408  00282E  0008               	tblrd		*
  7409  002830  50F5               	movf	tablat,w,c
  7410  002832  D005               	bra	u2640
  7411  002834                     u2647:
  7412  002834  CFF6 FFE1          	movff	tblptrl,fsr1l
  7413  002838  CFF7 FFE2          	movff	tblptrh,fsr1h
  7414  00283C  50E7               	movf	indf1,w,c
  7415  00283E                     u2640:
  7416  00283E  0900               	iorlw	0
  7417  002840  A4D8               	btfss	status,2,c
  7418  002842  EF25  F014         	goto	u2651
  7419  002846  EF27  F014         	goto	u2650
  7420  00284A                     u2651:
  7421  00284A  EFFB  F013         	goto	l2959
  7422  00284E                     u2650:
  7423  00284E  0012               	return		;funcret
  7424  002850                     __end_of_Lcd_Out:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _Lcd_Cmd *****************
  7428 ;; Defined at:
  7429 ;;		line 175 in file "flex_lcd.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  data            1    wreg     unsigned char 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  data            1    5[COMRAM] unsigned char 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7443 ;;      Params:         0       0       0       0       0       0       0       0       0
  7444 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7445 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7446 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7447 ;;Total ram usage:        3 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    2
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_Lcd_Init
  7454 ;;		_Lcd_Out
  7455 ;;		_appLCD_Init
  7456 ;;		_appGetElements
  7457 ;;		_Lcd_Out2
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           	psect	text41
  7462  002456                     __ptext41:
  7463                           	callstack 0
  7464  002456                     _Lcd_Cmd:
  7465                           	callstack 25
  7466                           
  7467                           ;incstack = 0
  7468                           ;Lcd_Cmd@data stored from wreg
  7469  002456  6E06               	movwf	Lcd_Cmd@data^0,c
  7470  002458                     
  7471                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  7472  002458  968C               	bcf	140,3,c	;volatile
  7473  00245A  948C               	bcf	140,2,c	;volatile
  7474  00245C                     
  7475                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  7476  00245C  6A04               	clrf	??_Lcd_Cmd^0,c
  7477  00245E  AE06               	btfss	Lcd_Cmd@data^0,7,c
  7478  002460  D001               	bra	u2475
  7479  002462  2A04               	incf	??_Lcd_Cmd^0,f,c
  7480  002464                     u2475:
  7481  002464  0E01               	movlw	1
  7482  002466  1604               	andwf	??_Lcd_Cmd^0,f,c
  7483  002468  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7484  00246A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7485  00246C  508C               	movf	140,w,c	;volatile
  7486  00246E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7487  002470  0B7F               	andlw	-129
  7488  002472  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7489  002474  6E8C               	movwf	140,c	;volatile
  7490                           
  7491                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  7492  002476  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7493  00247A  0E06               	movlw	6
  7494  00247C  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7495  00247E                     u2485:
  7496  00247E  90D8               	bcf	status,0,c
  7497  002480  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7498  002482  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7499  002484  EF3F  F012         	goto	u2485
  7500  002488  0E01               	movlw	1
  7501  00248A  1604               	andwf	??_Lcd_Cmd^0,f,c
  7502  00248C  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7503  00248E  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7504  002490  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7505  002492  508C               	movf	140,w,c	;volatile
  7506  002494  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7507  002496  0BBF               	andlw	-65
  7508  002498  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7509  00249A  6E8C               	movwf	140,c	;volatile
  7510                           
  7511                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  7512  00249C  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7513  0024A0  0E05               	movlw	5
  7514  0024A2  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  7515  0024A4                     u2495:
  7516  0024A4  90D8               	bcf	status,0,c
  7517  0024A6  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7518  0024A8  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7519  0024AA  EF52  F012         	goto	u2495
  7520  0024AE  0E01               	movlw	1
  7521  0024B0  1604               	andwf	??_Lcd_Cmd^0,f,c
  7522  0024B2  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7523  0024B4  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7524  0024B6  508C               	movf	140,w,c	;volatile
  7525  0024B8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7526  0024BA  0BDF               	andlw	-33
  7527  0024BC  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7528  0024BE  6E8C               	movwf	140,c	;volatile
  7529                           
  7530                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  7531  0024C0  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7532  0024C4  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7533  0024C6  0E0F               	movlw	15
  7534  0024C8  1604               	andwf	??_Lcd_Cmd^0,f,c
  7535  0024CA  0E01               	movlw	1
  7536  0024CC  1604               	andwf	??_Lcd_Cmd^0,f,c
  7537  0024CE  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7538  0024D0  508C               	movf	140,w,c	;volatile
  7539  0024D2  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7540  0024D4  0BEF               	andlw	-17
  7541  0024D6  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7542  0024D8  6E8C               	movwf	140,c	;volatile
  7543  0024DA                     
  7544                           ;flex_lcd.c: 182:     _delay(10);
  7545  0024DA  0E03               	movlw	3
  7546  0024DC                     u4517:
  7547  0024DC  2EE8               	decfsz	wreg,f,c
  7548  0024DE  D7FE               	bra	u4517
  7549  0024E0  F000               	nop	
  7550  0024E2                     
  7551                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  7552  0024E2  868C               	bsf	140,3,c	;volatile
  7553  0024E4                     
  7554                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7555  0024E4  0E05               	movlw	5
  7556  0024E6                     u4527:
  7557  0024E6  2EE8               	decfsz	wreg,f,c
  7558  0024E8  D7FE               	bra	u4527
  7559  0024EA                     
  7560                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  7561  0024EA  968C               	bcf	140,3,c	;volatile
  7562                           
  7563                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  7564  0024EC  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7565  0024F0  90D8               	bcf	status,0,c
  7566  0024F2  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7567  0024F4  90D8               	bcf	status,0,c
  7568  0024F6  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7569  0024F8  90D8               	bcf	status,0,c
  7570  0024FA  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7571  0024FC  0E01               	movlw	1
  7572  0024FE  1604               	andwf	??_Lcd_Cmd^0,f,c
  7573  002500  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7574  002502  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7575  002504  508C               	movf	140,w,c	;volatile
  7576  002506  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7577  002508  0B7F               	andlw	-129
  7578  00250A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7579  00250C  6E8C               	movwf	140,c	;volatile
  7580                           
  7581                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  7582  00250E  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7583  002512  90D8               	bcf	status,0,c
  7584  002514  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7585  002516  90D8               	bcf	status,0,c
  7586  002518  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7587  00251A  0E01               	movlw	1
  7588  00251C  1604               	andwf	??_Lcd_Cmd^0,f,c
  7589  00251E  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7590  002520  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7591  002522  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7592  002524  508C               	movf	140,w,c	;volatile
  7593  002526  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7594  002528  0BBF               	andlw	-65
  7595  00252A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7596  00252C  6E8C               	movwf	140,c	;volatile
  7597                           
  7598                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  7599  00252E  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7600  002532  90D8               	bcf	status,0,c
  7601  002534  3204               	rrcf	??_Lcd_Cmd^0,f,c
  7602  002536  0E01               	movlw	1
  7603  002538  1604               	andwf	??_Lcd_Cmd^0,f,c
  7604  00253A  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7605  00253C  4604               	rlncf	??_Lcd_Cmd^0,f,c
  7606  00253E  508C               	movf	140,w,c	;volatile
  7607  002540  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7608  002542  0BDF               	andlw	-33
  7609  002544  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7610  002546  6E8C               	movwf	140,c	;volatile
  7611                           
  7612                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  7613  002548  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7614  00254C  0E01               	movlw	1
  7615  00254E  1604               	andwf	??_Lcd_Cmd^0,f,c
  7616  002550  3A04               	swapf	??_Lcd_Cmd^0,f,c
  7617  002552  508C               	movf	140,w,c	;volatile
  7618  002554  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7619  002556  0BEF               	andlw	-17
  7620  002558  1804               	xorwf	??_Lcd_Cmd^0,w,c
  7621  00255A  6E8C               	movwf	140,c	;volatile
  7622  00255C                     
  7623                           ;flex_lcd.c: 190:     _delay(10);
  7624  00255C  0E03               	movlw	3
  7625  00255E                     u4537:
  7626  00255E  2EE8               	decfsz	wreg,f,c
  7627  002560  D7FE               	bra	u4537
  7628  002562  F000               	nop	
  7629  002564                     
  7630                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  7631  002564  868C               	bsf	140,3,c	;volatile
  7632  002566                     
  7633                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7634  002566  0E05               	movlw	5
  7635  002568                     u4547:
  7636  002568  2EE8               	decfsz	wreg,f,c
  7637  00256A  D7FE               	bra	u4547
  7638  00256C                     
  7639                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  7640  00256C  968C               	bcf	140,3,c	;volatile
  7641  00256E                     
  7642                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7643  00256E  0E16               	movlw	22
  7644  002570  6E04               	movwf	??_Lcd_Cmd^0,c
  7645  002572  0E6C               	movlw	108
  7646  002574                     u4557:
  7647  002574  2EE8               	decfsz	wreg,f,c
  7648  002576  D7FE               	bra	u4557
  7649  002578  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  7650  00257A  D7FC               	bra	u4557
  7651  00257C  D000               	nop2	
  7652  00257E  0012               	return		;funcret
  7653  002580                     __end_of_Lcd_Cmd:
  7654                           	callstack 0
  7655                           
  7656 ;; *************** function _Lcd_Chr_CP *****************
  7657 ;; Defined at:
  7658 ;;		line 151 in file "flex_lcd.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  data            1    wreg     char 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  data            1    5[COMRAM] char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      void 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7672 ;;      Params:         0       0       0       0       0       0       0       0       0
  7673 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7674 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7675 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7676 ;;Total ram usage:        3 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    2
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_Lcd_Out
  7683 ;;		_Lcd_Out2
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           	psect	text42
  7688  0021C4                     __ptext42:
  7689                           	callstack 0
  7690  0021C4                     _Lcd_Chr_CP:
  7691                           	callstack 25
  7692                           
  7693                           ;incstack = 0
  7694                           ;Lcd_Chr_CP@data stored from wreg
  7695  0021C4  6E06               	movwf	Lcd_Chr_CP@data^0,c
  7696  0021C6                     
  7697                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  7698  0021C6  968C               	bcf	140,3,c	;volatile
  7699                           
  7700                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  7701  0021C8  848C               	bsf	140,2,c	;volatile
  7702  0021CA                     
  7703                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  7704  0021CA  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7705  0021CE  0E07               	movlw	7
  7706  0021D0  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7707  0021D2                     u2505:
  7708  0021D2  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7709  0021D4  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7710  0021D6  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7711  0021D8  EFE9  F010         	goto	u2505
  7712  0021DC  0E01               	movlw	1
  7713  0021DE  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7714  0021E0  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7715  0021E2  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7716  0021E4  508C               	movf	140,w,c	;volatile
  7717  0021E6  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7718  0021E8  0B7F               	andlw	-129
  7719  0021EA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7720  0021EC  6E8C               	movwf	140,c	;volatile
  7721                           
  7722                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  7723  0021EE  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7724  0021F2  0E06               	movlw	6
  7725  0021F4  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7726  0021F6                     u2515:
  7727  0021F6  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7728  0021F8  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7729  0021FA  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7730  0021FC  EFFB  F010         	goto	u2515
  7731  002200  0E01               	movlw	1
  7732  002202  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7733  002204  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7734  002206  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7735  002208  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7736  00220A  508C               	movf	140,w,c	;volatile
  7737  00220C  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7738  00220E  0BBF               	andlw	-65
  7739  002210  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7740  002212  6E8C               	movwf	140,c	;volatile
  7741                           
  7742                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  7743  002214  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7744  002218  0E05               	movlw	5
  7745  00221A  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7746  00221C                     u2525:
  7747  00221C  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7748  00221E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7749  002220  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7750  002222  EF0E  F011         	goto	u2525
  7751  002226  0E01               	movlw	1
  7752  002228  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7753  00222A  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7754  00222C  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7755  00222E  508C               	movf	140,w,c	;volatile
  7756  002230  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7757  002232  0BDF               	andlw	-33
  7758  002234  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7759  002236  6E8C               	movwf	140,c	;volatile
  7760                           
  7761                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  7762  002238  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7763  00223C  0E04               	movlw	4
  7764  00223E  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7765  002240                     u2535:
  7766  002240  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7767  002242  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7768  002244  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7769  002246  EF20  F011         	goto	u2535
  7770  00224A  0E01               	movlw	1
  7771  00224C  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7772  00224E  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7773  002250  508C               	movf	140,w,c	;volatile
  7774  002252  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7775  002254  0BEF               	andlw	-17
  7776  002256  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7777  002258  6E8C               	movwf	140,c	;volatile
  7778  00225A                     
  7779                           ;flex_lcd.c: 159:     _delay(10);
  7780  00225A  0E03               	movlw	3
  7781  00225C                     u4567:
  7782  00225C  2EE8               	decfsz	wreg,f,c
  7783  00225E  D7FE               	bra	u4567
  7784  002260  F000               	nop	
  7785  002262                     
  7786                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  7787  002262  868C               	bsf	140,3,c	;volatile
  7788  002264                     
  7789                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7790  002264  0E05               	movlw	5
  7791  002266                     u4577:
  7792  002266  2EE8               	decfsz	wreg,f,c
  7793  002268  D7FE               	bra	u4577
  7794  00226A                     
  7795                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  7796  00226A  968C               	bcf	140,3,c	;volatile
  7797                           
  7798                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  7799  00226C  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7800  002270  0E03               	movlw	3
  7801  002272  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7802  002274                     u2545:
  7803  002274  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7804  002276  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7805  002278  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7806  00227A  EF3A  F011         	goto	u2545
  7807  00227E  0E01               	movlw	1
  7808  002280  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7809  002282  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7810  002284  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7811  002286  508C               	movf	140,w,c	;volatile
  7812  002288  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7813  00228A  0B7F               	andlw	-129
  7814  00228C  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7815  00228E  6E8C               	movwf	140,c	;volatile
  7816                           
  7817                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  7818  002290  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7819  002294  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7820  002296  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7821  002298  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7822  00229A  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7823  00229C  0E01               	movlw	1
  7824  00229E  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7825  0022A0  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7826  0022A2  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7827  0022A4  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7828  0022A6  508C               	movf	140,w,c	;volatile
  7829  0022A8  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7830  0022AA  0BBF               	andlw	-65
  7831  0022AC  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7832  0022AE  6E8C               	movwf	140,c	;volatile
  7833                           
  7834                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  7835  0022B0  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7836  0022B4  0E01               	movlw	1
  7837  0022B6  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7838  0022B8                     u2555:
  7839  0022B8  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  7840  0022BA  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  7841  0022BC  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7842  0022BE  EF5C  F011         	goto	u2555
  7843  0022C2  0E01               	movlw	1
  7844  0022C4  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7845  0022C6  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7846  0022C8  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  7847  0022CA  508C               	movf	140,w,c	;volatile
  7848  0022CC  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7849  0022CE  0BDF               	andlw	-33
  7850  0022D0  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7851  0022D2  6E8C               	movwf	140,c	;volatile
  7852                           
  7853                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  7854  0022D4  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7855  0022D8  0E01               	movlw	1
  7856  0022DA  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  7857  0022DC  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  7858  0022DE  508C               	movf	140,w,c	;volatile
  7859  0022E0  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7860  0022E2  0BEF               	andlw	-17
  7861  0022E4  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  7862  0022E6  6E8C               	movwf	140,c	;volatile
  7863  0022E8                     
  7864                           ;flex_lcd.c: 167:     _delay(10);
  7865  0022E8  0E03               	movlw	3
  7866  0022EA                     u4587:
  7867  0022EA  2EE8               	decfsz	wreg,f,c
  7868  0022EC  D7FE               	bra	u4587
  7869  0022EE  F000               	nop	
  7870  0022F0                     
  7871                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  7872  0022F0  868C               	bsf	140,3,c	;volatile
  7873  0022F2                     
  7874                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7875  0022F2  0E05               	movlw	5
  7876  0022F4                     u4597:
  7877  0022F4  2EE8               	decfsz	wreg,f,c
  7878  0022F6  D7FE               	bra	u4597
  7879  0022F8                     
  7880                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  7881  0022F8  968C               	bcf	140,3,c	;volatile
  7882  0022FA                     
  7883                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  7884  0022FA  0E05               	movlw	5
  7885  0022FC                     u4607:
  7886  0022FC  2EE8               	decfsz	wreg,f,c
  7887  0022FE  D7FE               	bra	u4607
  7888  002300                     
  7889                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  7890  002300  0E16               	movlw	22
  7891  002302  6E04               	movwf	??_Lcd_Chr_CP^0,c
  7892  002304  0E6C               	movlw	108
  7893  002306                     u4617:
  7894  002306  2EE8               	decfsz	wreg,f,c
  7895  002308  D7FE               	bra	u4617
  7896  00230A  2E04               	decfsz	??_Lcd_Chr_CP^0,f,c
  7897  00230C  D7FC               	bra	u4617
  7898  00230E  D000               	nop2	
  7899  002310  0012               	return		;funcret
  7900  002312                     __end_of_Lcd_Chr_CP:
  7901                           	callstack 0
  7902                           
  7903 ;; *************** function _isrL *****************
  7904 ;; Defined at:
  7905 ;;		line 82 in file "app.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      void 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0
  7920 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7921 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7922 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7923 ;;Total ram usage:        3 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    1
  7926 ;; This function calls:
  7927 ;;		Nothing
  7928 ;; This function is called by:
  7929 ;;		Interrupt level 1
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	intcodelo
  7934  000018                     __pintcodelo:
  7935                           	callstack 0
  7936  000018                     _isrL:
  7937                           	callstack 19
  7938                           
  7939                           ;incstack = 0
  7940  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7941  00001A  CFD8 F001          	movff	status,??_isrL
  7942  00001E  CFE8 F002          	movff	wreg,??_isrL+1
  7943  000022  CFE0 F003          	movff	bsr,??_isrL+2
  7944  000026                     
  7945                           ;app.c: 84:     if(TMR3IE && TMR3IF)
  7946  000026  A2A0               	btfss	4000,1,c	;volatile
  7947  000028  EF18  F000         	goto	i1u434_21
  7948  00002C  EF1A  F000         	goto	i1u434_20
  7949  000030                     i1u434_21:
  7950  000030  EF4D  F000         	goto	i1l278
  7951  000034                     i1u434_20:
  7952  000034  A2A1               	btfss	4001,1,c	;volatile
  7953  000036  EF1F  F000         	goto	i1u435_21
  7954  00003A  EF21  F000         	goto	i1u435_20
  7955  00003E                     i1u435_21:
  7956  00003E  EF4D  F000         	goto	i1l278
  7957  000042                     i1u435_20:
  7958  000042                     
  7959                           ;app.c: 85:     {;app.c: 86:         TMR3IF = 0;
  7960  000042  92A1               	bcf	4001,1,c	;volatile
  7961  000044                     
  7962                           ;app.c: 87:         datos.counter++;
  7963  000044  0100               	movlb	0	; () banked
  7964  000046  2BB8               	incf	_datos& (0+255),f,b
  7965  000048                     
  7966                           ; BSR set to: 0
  7967                           ;app.c: 88:         if((datos.counter == 10) && (datos.state == 0))
  7968  000048  0E0A               	movlw	10
  7969  00004A  19B8               	xorwf	_datos& (0+255),w,b
  7970  00004C  A4D8               	btfss	status,2,c
  7971  00004E  EF2B  F000         	goto	i1u436_21
  7972  000052  EF2D  F000         	goto	i1u436_20
  7973  000056                     i1u436_21:
  7974  000056  EF3D  F000         	goto	i1l4249
  7975  00005A                     i1u436_20:
  7976  00005A                     
  7977                           ; BSR set to: 0
  7978  00005A  51BB               	movf	(_datos+3)& (0+255),w,b
  7979  00005C  A4D8               	btfss	status,2,c
  7980  00005E  EF33  F000         	goto	i1u437_21
  7981  000062  EF35  F000         	goto	i1u437_20
  7982  000066                     i1u437_21:
  7983  000066  EF3D  F000         	goto	i1l4249
  7984  00006A                     i1u437_20:
  7985  00006A                     
  7986                           ; BSR set to: 0
  7987                           ;app.c: 89:         {;app.c: 90:             datos.counter = 0;
  7988  00006A  0E00               	movlw	0
  7989  00006C  6FB8               	movwf	_datos& (0+255),b
  7990  00006E                     
  7991                           ; BSR set to: 0
  7992                           ;app.c: 91:             datos.nextFunc = appStateRecolectData;
  7993  00006E  0E74               	movlw	low _appStateRecolectData
  7994  000070  6FCF               	movwf	(_datos+23)& (0+255),b
  7995  000072  0E2F               	movlw	high _appStateRecolectData
  7996  000074  6FD0               	movwf	(_datos+24)& (0+255),b
  7997                           
  7998                           ;app.c: 92:         }
  7999  000076  EF49  F000         	goto	i1l4253
  8000  00007A                     i1l4249:
  8001                           
  8002                           ; BSR set to: 0
  8003  00007A  05BB               	decf	(_datos+3)& (0+255),w,b
  8004  00007C  A4D8               	btfss	status,2,c
  8005  00007E  EF43  F000         	goto	i1u438_21
  8006  000082  EF45  F000         	goto	i1u438_20
  8007  000086                     i1u438_21:
  8008  000086  EF49  F000         	goto	i1l4253
  8009  00008A                     i1u438_20:
  8010  00008A                     
  8011                           ; BSR set to: 0
  8012                           ;app.c: 94:         {;app.c: 95:             datos.nextFunc = appGetElements;
  8013  00008A  0E42               	movlw	low _appGetElements
  8014  00008C  6FCF               	movwf	(_datos+23)& (0+255),b
  8015  00008E  0E2C               	movlw	high _appGetElements
  8016  000090  6FD0               	movwf	(_datos+24)& (0+255),b
  8017  000092                     i1l4253:
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;app.c: 97:         TMR3 = 20536;
  8021  000092  0E50               	movlw	80
  8022  000094  6EB3               	movwf	179,c	;volatile
  8023  000096  0E38               	movlw	56
  8024  000098  6EB2               	movwf	178,c	;volatile
  8025  00009A                     i1l278:
  8026  00009A  C003  FFE0         	movff	??_isrL+2,bsr
  8027  00009E  C002  FFE8         	movff	??_isrL+1,wreg
  8028  0000A2  C001  FFD8         	movff	??_isrL,status
  8029  0000A6  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8030  0000A8  0010               	retfie	
  8031  0000AA                     __end_of_isrL:
  8032                           	callstack 0
  8033                           
  8034 ;; *************** function _isrH *****************
  8035 ;; Defined at:
  8036 ;;		line 100 in file "app.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;		None
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;		None
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  1    wreg      void 
  8043 ;; Registers used:
  8044 ;;		None
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8050 ;;      Params:         0       0       0       0       0       0       0       0       0
  8051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8053 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8054 ;;Total ram usage:        0 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		Interrupt level 2
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	intcode
  8064  000008                     __pintcode:
  8065                           	callstack 0
  8066  000008                     _isrH:
  8067                           	callstack 19
  8068                           
  8069                           ;incstack = 0
  8070  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8071  00000A  ED44  F018         	call	int_func,f	;refresh shadow registers
  8072  00000E                     
  8073                           	psect	intcode_body
  8074  003088                     __pintcode_body:
  8075                           	callstack 19
  8076  003088                     int_func:
  8077                           	callstack 19
  8078  003088  0006               	pop		; remove dummy address from shadow register refresh
  8079  00308A  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8080  00308C  0011               	retfie		f
  8081  00308E                     __end_of_isrH:
  8082                           	callstack 0
  8083                           
  8084                           	psect	rparam
  8085  0000                     
  8086                           	psect	temp
  8087  00005C                     btemp:
  8088                           	callstack 0
  8089  00005C                     	ds	1
  8090  0000                     int$flags	set	btemp
  8091  0000                     wtemp8	set	btemp+1
  8092  0000                     ttemp5	set	btemp+1
  8093  0000                     ttemp6	set	btemp+4
  8094  0000                     ttemp7	set	btemp+8
  8095                           
  8096                           	psect	idloc
  8097                           
  8098                           ;Config register IDLOC0 @ 0x200000
  8099                           ;	unspecified, using default values
  8100  200000                     	org	2097152
  8101  200000  FF                 	db	255
  8102                           
  8103                           ;Config register IDLOC1 @ 0x200001
  8104                           ;	unspecified, using default values
  8105  200001                     	org	2097153
  8106  200001  FF                 	db	255
  8107                           
  8108                           ;Config register IDLOC2 @ 0x200002
  8109                           ;	unspecified, using default values
  8110  200002                     	org	2097154
  8111  200002  FF                 	db	255
  8112                           
  8113                           ;Config register IDLOC3 @ 0x200003
  8114                           ;	unspecified, using default values
  8115  200003                     	org	2097155
  8116  200003  FF                 	db	255
  8117                           
  8118                           ;Config register IDLOC4 @ 0x200004
  8119                           ;	unspecified, using default values
  8120  200004                     	org	2097156
  8121  200004  FF                 	db	255
  8122                           
  8123                           ;Config register IDLOC5 @ 0x200005
  8124                           ;	unspecified, using default values
  8125  200005                     	org	2097157
  8126  200005  FF                 	db	255
  8127                           
  8128                           ;Config register IDLOC6 @ 0x200006
  8129                           ;	unspecified, using default values
  8130  200006                     	org	2097158
  8131  200006  FF                 	db	255
  8132                           
  8133                           ;Config register IDLOC7 @ 0x200007
  8134                           ;	unspecified, using default values
  8135  200007                     	org	2097159
  8136  200007  FF                 	db	255
  8137                           
  8138                           	psect	config
  8139                           
  8140                           ;Config register CONFIG1L @ 0x300000
  8141                           ;	PLL Prescaler Selection bits
  8142                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8143                           ;	System Clock Postscaler Selection bits
  8144                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8145                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8146                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8147  300000                     	org	3145728
  8148  300000  00                 	db	0
  8149                           
  8150                           ;Config register CONFIG1H @ 0x300001
  8151                           ;	Oscillator Selection bits
  8152                           ;	FOSC = HS, HS oscillator (HS)
  8153                           ;	Fail-Safe Clock Monitor Enable bit
  8154                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8155                           ;	Internal/External Oscillator Switchover bit
  8156                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8157  300001                     	org	3145729
  8158  300001  0C                 	db	12
  8159                           
  8160                           ;Config register CONFIG2L @ 0x300002
  8161                           ;	Power-up Timer Enable bit
  8162                           ;	PWRT = OFF, PWRT disabled
  8163                           ;	Brown-out Reset Enable bits
  8164                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8165                           ;	Brown-out Reset Voltage bits
  8166                           ;	BORV = 3, Minimum setting 2.05V
  8167                           ;	USB Voltage Regulator Enable bit
  8168                           ;	VREGEN = OFF, USB voltage regulator disabled
  8169  300002                     	org	3145730
  8170  300002  19                 	db	25
  8171                           
  8172                           ;Config register CONFIG2H @ 0x300003
  8173                           ;	Watchdog Timer Enable bit
  8174                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8175                           ;	Watchdog Timer Postscale Select bits
  8176                           ;	WDTPS = 32768, 1:32768
  8177  300003                     	org	3145731
  8178  300003  1E                 	db	30
  8179                           
  8180                           ; Padding undefined space
  8181  300004                     	org	3145732
  8182  300004  FF                 	db	255
  8183                           
  8184                           ;Config register CONFIG3H @ 0x300005
  8185                           ;	CCP2 MUX bit
  8186                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8187                           ;	PORTB A/D Enable bit
  8188                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8189                           ;	Low-Power Timer 1 Oscillator Enable bit
  8190                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8191                           ;	MCLR Pin Enable bit
  8192                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8193  300005                     	org	3145733
  8194  300005  81                 	db	129
  8195                           
  8196                           ;Config register CONFIG4L @ 0x300006
  8197                           ;	Stack Full/Underflow Reset Enable bit
  8198                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8199                           ;	Single-Supply ICSP Enable bit
  8200                           ;	LVP = OFF, Single-Supply ICSP disabled
  8201                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8202                           ;	ICPRT = OFF, ICPORT disabled
  8203                           ;	Extended Instruction Set Enable bit
  8204                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8205                           ;	Background Debugger Enable bit
  8206                           ;	DEBUG = 0x1, unprogrammed default
  8207  300006                     	org	3145734
  8208  300006  81                 	db	129
  8209                           
  8210                           ; Padding undefined space
  8211  300007                     	org	3145735
  8212  300007  FF                 	db	255
  8213                           
  8214                           ;Config register CONFIG5L @ 0x300008
  8215                           ;	Code Protection bit
  8216                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8217                           ;	Code Protection bit
  8218                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8219                           ;	Code Protection bit
  8220                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8221                           ;	Code Protection bit
  8222                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8223  300008                     	org	3145736
  8224  300008  0F                 	db	15
  8225                           
  8226                           ;Config register CONFIG5H @ 0x300009
  8227                           ;	Boot Block Code Protection bit
  8228                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8229                           ;	Data EEPROM Code Protection bit
  8230                           ;	CPD = OFF, Data EEPROM is not code-protected
  8231  300009                     	org	3145737
  8232  300009  C0                 	db	192
  8233                           
  8234                           ;Config register CONFIG6L @ 0x30000A
  8235                           ;	Write Protection bit
  8236                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8237                           ;	Write Protection bit
  8238                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8239                           ;	Write Protection bit
  8240                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8241                           ;	Write Protection bit
  8242                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8243  30000A                     	org	3145738
  8244  30000A  0F                 	db	15
  8245                           
  8246                           ;Config register CONFIG6H @ 0x30000B
  8247                           ;	Configuration Register Write Protection bit
  8248                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8249                           ;	Boot Block Write Protection bit
  8250                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8251                           ;	Data EEPROM Write Protection bit
  8252                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8253  30000B                     	org	3145739
  8254  30000B  E0                 	db	224
  8255                           
  8256                           ;Config register CONFIG7L @ 0x30000C
  8257                           ;	Table Read Protection bit
  8258                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8259                           ;	Table Read Protection bit
  8260                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8261                           ;	Table Read Protection bit
  8262                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8263                           ;	Table Read Protection bit
  8264                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8265  30000C                     	org	3145740
  8266  30000C  0F                 	db	15
  8267                           
  8268                           ;Config register CONFIG7H @ 0x30000D
  8269                           ;	Boot Block Table Read Protection bit
  8270                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8271  30000D                     	org	3145741
  8272  30000D  40                 	db	64
  8273                           tosu	equ	0xFFF
  8274                           tosh	equ	0xFFE
  8275                           tosl	equ	0xFFD
  8276                           stkptr	equ	0xFFC
  8277                           pclatu	equ	0xFFB
  8278                           pclath	equ	0xFFA
  8279                           pcl	equ	0xFF9
  8280                           tblptru	equ	0xFF8
  8281                           tblptrh	equ	0xFF7
  8282                           tblptrl	equ	0xFF6
  8283                           tablat	equ	0xFF5
  8284                           prodh	equ	0xFF4
  8285                           prodl	equ	0xFF3
  8286                           indf0	equ	0xFEF
  8287                           postinc0	equ	0xFEE
  8288                           postdec0	equ	0xFED
  8289                           preinc0	equ	0xFEC
  8290                           plusw0	equ	0xFEB
  8291                           fsr0h	equ	0xFEA
  8292                           fsr0l	equ	0xFE9
  8293                           wreg	equ	0xFE8
  8294                           indf1	equ	0xFE7
  8295                           postinc1	equ	0xFE6
  8296                           postdec1	equ	0xFE5
  8297                           preinc1	equ	0xFE4
  8298                           plusw1	equ	0xFE3
  8299                           fsr1h	equ	0xFE2
  8300                           fsr1l	equ	0xFE1
  8301                           bsr	equ	0xFE0
  8302                           indf2	equ	0xFDF
  8303                           postinc2	equ	0xFDE
  8304                           postdec2	equ	0xFDD
  8305                           preinc2	equ	0xFDC
  8306                           plusw2	equ	0xFDB
  8307                           fsr2h	equ	0xFDA
  8308                           fsr2l	equ	0xFD9
  8309                           status	equ	0xFD8

Data Sizes:
    Strings     60
    Constant    0
    Data        25
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      91
    BANK0           160     46     113
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_7(CODE[3]), STR_5(CODE[5]), STR_2(CODE[9]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1636_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> appElemts@dataout(BANK0[6]), datos(BANK0[25]), 

    memset@dest	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    memset@s	PTR unsigned char  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appSubGetData@data_Inout.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appSubGetData@data_Inout	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    appElemts@elements	PTR const short  size(2) Largest target is 25
		 -> datos.elements(BANK0[2]), datos(BANK0[25]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 25
		 -> STR_6(CODE[14]), appElemts@dataout(BANK0[6]), STR_4(CODE[6]), STR_3(CODE[12]), 
		 -> datos.display(BANK0[16]), datos(BANK0[25]), 

    teclado@valor	PTR unsigned char  size(2) Largest target is 25
		 -> appSubGetData@inout(BANK0[1]), datos(BANK0[25]), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appBat@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    sp__memset	PTR void  size(2) Largest target is 25
		 -> datos(BANK0[25]), 

    S164_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appGetElements(), appStateRecolectData(), appStateInitial(), 

    appADC@data	PTR struct _state size(2) Largest target is 25
		 -> datos(BANK0[25]), 


Critical Paths under _main in COMRAM

    _appADC->___awmod
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___fltol
    _appStateInitial->_teclado
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Init->_Lcd_Cmd
    _sprintf->___awmod
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appBat
    _appStateRecolectData->_appElemts
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    _appGetElements->_appSubGetData
    _appSubGetData->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   72415
                                             44 BANK0      2     2      0
                     _appGetElements *
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   53217
                             _appADC
                             _appBat
                          _appElemts
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            8     6      2   13374
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appBat                                               8     6      2   19758
                                             36 BANK0      8     6      2
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                               6     4      2   20085
                                             36 BANK0      6     4      2
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     496
                                              7 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     479
                                             71 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2190
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1595
                                             46 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             81 COMRAM     6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0     526
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    2132
                            _adcInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    2088
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              6 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _appGetElements                                       2     2      0   16540
                                             41 BANK0      2     2      0
                            _Lcd_Cmd
                      _appSubGetData
                      _appTimerStart
                       _appTimerStop
 ---------------------------------------------------------------------------------
 (2) _appTimerStop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appSubGetData                                        5     3      2   16364
                                             36 BANK0      5     3      2
                            _Lcd_Out
                             ___wmul
                             _memset
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              2     0      2     526
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   11573
                                             18 BANK0     18    10      8
                            ___awmod (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   10541
                                             76 COMRAM     2     2      0
                                             12 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   10011
                                             66 COMRAM    10     4      6
                                              0 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1795
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     692
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1403
                                              3 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (3) _Lcd_Out                                              7     4      3    1597
                                              6 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Lcd_Chr_CP                                           3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appGetElements *
     _Lcd_Cmd
     _appSubGetData
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___wmul
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
       _teclado
     _appTimerStart
     _appTimerStop
   _appInit *
     _adcInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
   _appStateInitial *
     _teclado
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___flmul
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___xxtofl (ARG)
           _adcGetValue (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _memset
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _adcGetValue (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _adcGetValue (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _adcGetValue (ARG)
           ___xxtofl (ARG)
             _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      71       5       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      20        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 30 22:02:32 2021

                 ___fldiv@aexp 0047                   ___fldiv@bexp 0046                   ___fldiv@sign 003F  
                           l23 2DF2                             l32 2454                             l26 2F24  
                           l35 1A1C                             l28 2F32                             l29 2F3A  
                           l86 1834                             l99 29FC                             bsr 000FE0  
          ___wmul@multiplicand 0006                            l100 2A48                            l101 2A9A  
                          l200 2E38                            l130 2310                            l114 284E  
                          l133 257E                            l400 1EE8                            l136 2BCE  
                          l252 2FA8                            l413 21C2                            l262 3086  
                          l192 307E                            l256 3006                            l249 305E  
                          l530 2B4A                            l195 3090                            l259 2CA4  
                          l269 2782                            l189 3072                            l286 302C  
                          l900 0902                            l910 0B5E                            l583 2684  
                          l904 0C66                            l907 0AF8                            l917 0C28  
                          l909 0B70                            l941 1A74                            l870 0E60  
                          l944 1BD0                            l961 205E                            l881 0F1E  
                          l873 0E24                            l882 0F0C                            l955 1B68  
                          l868 1000                            l948 1B0C                            l974 2D58  
                          l879 0EA6                adcInit@ADC_PINs 0005                            _PR2 000FCB  
                          _abs 2EC0                            _pad 291A                   ___awmod@sign 0057  
                          tosl 000FFD                            wreg 000FE8                   ___flmul@aexp 0027  
                 ___flmul@bexp 0028                   ___flmul@sign 0022                   ___flmul@temp 002D  
                 ___flmul@prod 0029                   ___fltol@exp1 0051                           l1010 29DA  
                         l1005 295E                           l1110 1D60                           l1008 29A0  
                         l1016 140C                           l1113 2F72                           l1121 2DAA  
                         l1018 1414                           l1050 10F4                           l1107 1D58  
                         ?_abs 0016                           l1036 164A                           l1071 2CFE  
                         l1136 2918                           l1144 2E7C                           l1072 2D06  
                         l1153 2FDE                           l1065 136C                           l3001 1706  
                         l1147 3092                           l3011 1746                           l3003 1712  
                         l1076 2EF6                           l3021 177E                           l3013 174A  
                         l3005 1720                           l3101 2A8E                           l1079 2EFE  
                         l3031 17B6                           l3023 178C                           l3015 1758  
                         l3007 172C                           l3103 2A8E                           l3111 0C74  
                         l4001 1C60                           l3041 17F8                           l3033 17C4  
                         l3025 1798                           l3017 1764                           l3009 173A  
                         l3105 2A94                           l3201 0EA4                           l3121 0CB4  
                         l3113 0C82                           l4011 1CDA                           l4003 1C68  
                         l3043 1804                           l3035 17D0                           l3027 17A6  
                         l3019 1772                           l3107 2A94                           l3051 29DC  
                         l3211 0F04                           l3203 0EB6                           l3131 0CDA  
                         l3123 0CB6                           l3115 0C84                           l4005 1C70  
                         l3045 1812                           l3037 17DE                           l3029 17B2  
                         l3061 2A14                           l3053 29E8                           l3221 0F72  
                         l3205 0EC4                           l3141 0D1A                           l3133 0CE8  
                         l3117 0C94                           l3125 0CBE                           l3109 0C68  
                         l3301 099E                           l4015 1D18                           l4007 1CA4  
                         l4111 135A                           l4103 131C                           l4031 1046  
                         l3039 17EA                           l3047 181E                           l3071 2A22  
                         l3063 2A1A                           l3055 29F8                           l3231 0FDC  
                         l3215 0F2E                           l3223 0F76                           l3207 0EC8  
                         l3151 0D5A                           l3143 0D1C                           l3135 0CEA  
                         l3127 0CCE                           l3119 0CA4                           l3311 09E4  
                         l3303 09AC                           l4017 1D2A                           l4105 132A  
                         l4033 104A                           l4025 1002                           l3049 1822  
                         l3081 2A68                           l3073 2A24                           l3065 2A1C  
                         l3401 2B1E                           l3233 0FE0                           l3225 0F90  
                         l3217 0F3A                           l3209 0ED6                           l3161 0D8A  
                         l3153 0D62                           l3137 0CFA                           l3145 0D24  
                         l3129 0CD4                           l3321 0A52                           l3313 09FE  
                         l3305 09B8                           l4201 2C42                           l4019 1D3C  
                         l4051 107C                           l4043 1070                           l4035 1056  
                         l4027 1026                           l4131 2CBC                           l3091 2A82  
                         l3083 2A6A                           l3075 2A36                           l3067 2A1E  
                         l3403 2B24                           l3235 0FEE                           l3227 0FA6  
                         l3219 0F48                           l3171 0DC8                           l3163 0D8A  
                         l3155 0D66                           l3147 0D34                           l3139 0D0A  
                         l3331 0AE8                           l3323 0A7C                           l3315 0A0E  
                         l3307 09C8                           l3251 0858                           l4211 2C78  
                         l4203 2C48                           l4037 1058                           l4061 10E2  
                         l4029 1034                           l4109 1336                           l4133 2CE2  
                         l4141 2D2A                           l3093 2A82                           l3085 2A6C  
                         l3077 2A60                           l3069 2A20                           l3405 2B2A  
                         l3237 0FF4                           l3229 0FC0                           l3181 0E14  
                         l3173 0DD8                           l3149 0D4A                           l3341 0B28  
                         l3333 0AF6                           l3325 0AB2                           l3317 0A2A  
                         l3309 09D4                           l3261 0890                           l3253 085A  
                         l3421 25D4                           l3413 2580                           l4213 2C7E  
                         l4205 2C4C                           l4221 2BD4                           l4071 116C  
                         l4063 1102                           l4055 1082                           l4047 1076  
                         l4039 106A                           l4127 2CA6                           l4143 2D46  
                         l4135 2D08                           l3511 2DDE                           l3503 2DAE  
                         l3095 2A82                           l3087 2A6E                           l3079 2A66  
                         l3407 2B3A                           l3239 0FF6                           l3191 0E5E  
                         l3183 0E22                           l3175 0DE8                           l3167 0D9E  
                         l3159 0D7A                           l3351 0B9A                           l3343 0B56  
                         l3335 0B08                           l3327 0AC0                           l3319 0A36  
                         l3271 08BC                           l3263 08A0                           l3255 086A  
                         l3247 083E                           l3423 25D6                           l3415 2596  
                         l4151 235C                           l4215 2C96                           l4207 2C52  
                         l4231 2C1C                           l4223 2BD6                           l4081 11F0  
                         l4073 117A                           l4065 1104                           l4129 2CAE  
                         l4137 2D1A                           l3513 2DE6                           l3505 2DBE  
                         l3097 2A88                           l3089 2A70                           l3601 3048  
                         l3409 2B42                           l3193 0E70                           l3185 0E2E  
                         l3177 0DF0                           l3169 0DB8                           l3361 0C10  
                         l3353 0BC4                           l3337 0B16                           l3329 0ADE  
                         l3281 0912                           l3273 08CC                           l3265 08A6  
                         l3257 087A                           l3249 084A                           l3425 25E6  
                         l4153 23B4                           l4161 18F2                           l4217 2CA0  
                         l4209 2C6A                           l4225 2BD8                           l4075 119A  
                         l4083 1202                           l4067 1128                           l4059 108E  
                         l4139 2D22                           l3515 2DEE                           l3507 2DCA  
                         l3099 2A88                           l3603 304C                           l3195 0E86  
                         l3187 0E4C                           l3179 0E00                           l3363 0C2C  
                         l3371 0C52                           l3347 0B80                           l3355 0BC8  
                         l3339 0B1A                           l3291 094C                           l3283 0922  
                         l3275 08DC                           l3267 08AC                           l3259 088A  
                         l3451 2664                           l3435 2610                           l3427 25EA  
                         l3419 25AA                           l4155 243C                           l4147 2312  
                         l4163 1940                           l4171 2E00                           l4227 2BDC  
                         l4219 2BD0                           l4093 12CA                           l4085 1226  
                         l4077 11A8                           l4069 115E                           l4181 26CA  
                         l3517 2DF0                           l3509 2DDA                           l3541 2B4C  
                         l3605 3050                           l3381 2AAE                           l3197 0E8C  
                         l3189 0E4E                           l3373 0C56                           l3365 0C3C  
                         l3357 0BE2                           l3349 0B8C                           l3293 0962  
                         l3277 08EC                           l3269 08BA                           l3453 2674  
                         l3445 2638                           l3437 261A                           l3429 25F8  
                         l3461 1A3E                           l4149 2334                           l4165 19D8  
                         l4157 1836                           l4173 2E26                           l4229 2C04  
                         l2911 1FA2                           l2903 1F08                           l4095 12EE  
                         l4087 124A                           l4191 2742                           l4183 26D6  
                         l4175 2686                           l3551 2BB6                           l3543 2B5C  
                         l3607 3056                           l3391 2AE2                           l3383 2AB6  
                         l3199 0E96                           l3367 0C4A                           l3359 0BF6  
                         l3295 096E                           l3287 0936                           l3279 08F2  
                         l3447 2644                           l3439 2624                           l3471 1AB6  
                         l3463 1A84                           l4167 1A04                           l4159 1874  
                         l3615 2FE0                           l2841 245C                           l2921 2002  
                         l2905 1F14                           l3801 1D66                           l4097 12FC  
                         l4089 1292                           l4345 10B4                           l4185 26E8  
                         l4193 275A                           l4177 2694                           l3545 2B74  
                         l3561 306E                           l3553 3060                           l3609 305A  
                         l3393 2AEA                           l3385 2ABA                           l3377 2A9C  
                         l3369 0C4C                           l3297 0986                           l3289 0942  
                         l3449 2654                           l3481 1B3E                           l3473 1AC2  
                         l3465 1A9A                           l3457 1A20                           l4169 2DF4  
                         l3617 2FEC                           l2851 255C                           l2843 24DA  
                         l2923 2036                           l2915 1FBC                           l4347 1C8E  
                         l3811 1DC6                           l3803 1D74                           l4099 1310  
                         l4195 276E                           l4187 26F8                           l4179 26B4  
                         l3547 2B86                           l3563 3070                           l3555 3066  
                         l3395 2AF2                           l3387 2AC8                           l3379 2AA0  
                         l3299 0992                           l3491 1B7C                           l3483 1B4A  
                         l3475 1AF4                           l3459 1A30                           l3619 2FFE  
                         l2861 21C6                           l2853 2564                           l2845 24E2  
                         l4349 27C6                           l2925 2042                           l2917 1FE8  
                         l2909 1F4A                           l3821 1E10                           l3813 1DCA  
                         l3805 1D94                           l3901 2EC0                           l4189 2722  
                         l3565 3074                           l3549 2B98                           l3557 306A  
                         l3397 2B00                           l3389 2AD0                           l3493 1BA0  
                         l3485 1B58                           l3477 1AF6                           l3469 1AAE  
                         l4197 2F74                           ?_pad 0014                           l2871 226A  
                         l2863 21CA                           l2855 2566                           l2847 24E4  
                         l2839 2458                           l2951 27A8                           l2943 2786  
                         l2927 2048                           l3911 2D5E                           l3831 1E80  
                         l3823 1E1E                           l3815 1DD6                           l3807 1D98  
                         l3903 2EDA                           l3567 307C                           l3559 306C  
                         l3399 2B16                           l3495 1BB0                           l3487 1B76  
                         l3479 1B02                           l4199 2F9E                           l2881 22FA  
                         l2873 22E8                           l2865 225A                           l2857 256C  
                         l2849 24EA                           l2961 281A                           l2945 278A  
                         l2929 204C                           l3905 2F3C                           l3913 2D72  
                         l3833 1E92                           l3825 1E30                           l3817 1DF4  
                         l3809 1DA6                           l3761 2850                           l3921 136E  
                         l3569 308E                           l3577 3080                           l3497 1BBE  
                         l3489 1B78                           l2883 2300                           l2875 22F0  
                         l2867 2262                           l2859 256E                           l2963 281E  
                         l2947 2794                           l2955 27B2                           l3915 2DA0  
                         l3827 1E5E                           l3819 1DFC                           l3835 1E98  
                         l3851 2096                           l3843 2060                           l3771 28D2  
                         l3763 2862                           l3931 13E6                           l3923 138E  
                         l2971 1658                           l3499 1BC0                           l2877 22F2  
                         l2869 2264                           l2949 279E                           l2957 27EC  
                         l3917 2DA4                           l3909 2D5A                           l3837 1EA8  
                         l3829 1E7E                           l3861 20FE                           l3853 20A4  
                         l3845 2064                           l3765 2874                           l3781 2E5C  
                         l3941 1442                           l3933 1400                           l3925 13B6  
                         l2981 168C                           l2973 165C                           l2893 2F02  
                         l2879 22F8                           l2959 27F6                           l3839 1EC8  
                         l3863 210C                           l3871 2172                           l3855 20C4  
                         l3847 2072                           l3767 287E                           l3775 2E3A  
                         l3783 2FAA                           l3951 14E2                           l3943 144A  
                         l3935 141C                           l3927 13D6                           l2991 16CE  
                         l2983 169A                           l2975 166E                           l2895 2F14  
                         l3793 3008                           l3873 2182                           l3865 213A  
                         l3857 20E2                           l3849 2092                           l3769 289C  
                         l3777 2E46                           l3785 2FB6                           l3881 2928  
                         l3961 159E                           l3953 14E8                           l3945 1454  
                         l3937 142E                           l3929 13E4                           l2993 16DA  
                         l2985 16A6                           l2977 1672                           l2969 164C  
                         l2897 2F22                           l2899 1EEA                           l3795 3024  
                         l3875 21A2                           l3867 215A                           l3859 20EA  
                         l3779 2E58                           l3787 2FBA                           l3891 297E  
                         l3883 293C                           l3971 15EC                           l3963 15B8  
                         l3947 145A                           l3955 154C                           l3939 143C  
                         l2995 16DE                           l2987 16B4                           l2979 1680  
                         l3869 216C                           l3789 2FD2                           l3893 2982  
                         l3885 294A                           l3973 15FE                           l3957 1566  
                         l3965 15C6                           l3949 14DC                           l2997 16EC  
                         l2989 16C0                           l3991 1C0A                           l3983 1BD2  
                         l3799 1D62                           l3895 29AE                           l3887 2956  
                         l3879 291A                           l3975 160A                           l3967 15D8  
                         l3959 1584                           l2999 16F8                           l3993 1C40  
                         l3985 1BE6                           l3897 29C2                           l3889 296A  
                         l3977 1612                           l3969 15E6                           l3995 1C44  
                         l3987 1BEA                           l3979 1622                           l3989 1BEE  
                         l3999 1C4A                           STR_1 080F                           STR_2 0829  
                         STR_3 081D                           STR_4 0832                           STR_5 0838  
                         STR_6 0801                           STR_7 083A                           u3000 0ED6  
                         u3001 0ED2                           u3010 0F04                           u3011 0F00  
                         u3020 0F1A                           u3100 087A                           u3021 0F16  
                         u3101 0876                           u3030 0F2E                           u3110 08BA  
                         u3031 0F2A                           u3111 08B6                           u4000 1566  
                         u3040 0F48                           u3200 0B56                           u3120 08CC  
                         u4001 1562                           u3041 0F44                           u3201 0B52  
                         u3121 08C8                           u4010 1584                           u3050 0F90  
                         u3210 0B6C                           u3130 08DC                           u4011 1580  
                         u3051 0F8C                           u3211 0B68                           u3131 08D8  
                         u4100 1C5C                           u4020 159E                           u3300 2B00  
                         u3060 0FC0                           u3220 0B80                           u3140 0912  
                         u4101 1C58                           u4021 159A                           u3301 2AFC  
                         u3061 0FBC                           u3221 0B7C                           u3141 090E  
                         u4110 1D12                           u4030 15B8                           u3310 2B16  
                         u3070 0FEE                           u3230 0B9A                           u3150 0922  
                         u4111 1D0C                           u4031 15B4                           u3311 2B12  
                         u3071 0FEA                           u3231 0B96                           u3151 091E  
                         u2600 1FB8                           u4120 1D14                           u4040 15C6  
                         u4200 11E8                           u3320 2B3A                           u3240 0BE2  
                         u3160 0A9C                           u3080 0858                           u3400 1A30  
                         u2505 21D2                           u2601 1FB4                           u4041 15C2  
                         u4201 11E2                           u3321 2B36                           u3241 0BDE  
                         u3081 0854                           u3401 1A2C                           u2610 1FFE  
                         u4130 1D2A                           u4050 15D8                           u4210 11EA  
                         u3250 0C10                           u3170 0AF6                           u3090 086A  
                         u3330 2596                           u3410 1A3E                           u2515 21F6  
                         u2611 1FFA                           u4131 1D26                           u4051 15D4  
                         u3251 0C0C                           u3171 0AF2                           u3091 0866  
                         u3331 2592                           u3411 1A3A                           u2620 205E  
                         u4140 1D3C                           u4060 15E6                           u4220 1202  
                         u2700 16CE                           u4300 276E                           u3500 2DBE  
                         u3260 0C4A                           u3180 0B16                           u3340 25CA  
                         u3420 1A9A                           u2525 221C                           u2621 205A  
                         u4141 1D38                           u4061 15E2                           u4221 11FE  
                         u2701 16CA                           u4301 276A                           u3501 2DBA  
                         u3261 0C46                           u3181 0B12                           u3165 0A92  
                         u3421 1A96                           u2630 2816                           u4070 15FE  
                         u4230 1226                           u4150 1026                           u2710 16EC  
                         u3270 2AAE                           u3190 0B28                           u3350 25F8  
                         u3430 1AF0                           u4310 2BF0                           u2535 2240  
                         u4071 15FA                           u4231 1222                           u4151 1022  
                         u2711 16E8                           u3271 2AAA                           u3191 0B24  
                         u3351 25F4                           u3431 1AEC                           u4311 2BE6  
                         u2640 283E                           u4080 1C0A                           u4240 124A  
                         u4160 10F4                           u2800 17DE                           u2720 1706  
                         u3280 2AC8                           u3360 260C                           u3440 1B3A  
                         u2545 2274                           u4081 1C06                           u4241 1246  
                         u4161 10F0                           u2801 17DA                           u2721 1702  
                         u3281 2AC4                           u3361 2608                           u3345 25C0  
                         u3441 1B36                           u2650 284E                           u4090 1C40  
                         u4250 12EE                           u4170 1102                           u2810 17F8  
                         u2730 1720                           u3290 2AE2                           u3370 2634  
                         u3450 1B58                           u2570 2F32                           u2555 22B8  
                         u2475 2464                           u2651 284A                           u4091 1C3C  
                         u4251 12EA                           u4171 10FE                           u2811 17F4  
                         u2731 171C                           u3291 2ADE                           u3371 2630  
                         u3451 1B54                           u2571 2F2E                           u2580 1F04  
                         u3700 2FD2                           u4180 1128                           u4260 2CFE  
                         u2820 1812                           u2740 173A                           u2660 166E  
                         u2900 0D0A                           u3380 2654                           u3460 1B68  
                         u2485 247E                           u2637 280C                           u2581 1F00  
                         u3701 2FCE                           u4181 1124                           u4261 2CFA  
                         u2821 180E                           u2741 1736                           u2661 166A  
                         u2901 0D06                           u3381 2650                           u3461 1B64  
                         u2590 1F46                           u3710 1D74                           u4190 116C  
                         u2830 1834                           u2750 1758                           u2670 1680  
                         u2910 0D4A                           u3390 2664                           u3470 1B76  
                         u3550 2FFE                           u2495 24A4                           u2647 2834  
                         u2591 1F42                           u3711 1D70                           u4191 1168  
                         u2831 1830                           u2751 1754                           u2671 167C  
                         u2911 0D46                           u3391 2660                           u3471 1B72  
                         u4271 2DFA                           u3551 2FFA                           u4407 2C5E  
                         u3720 1DA6                           u3800 20E2                           u2760 1772  
                         u2680 169A                           u4280 26E8                           u2840 2A48  
                         u2920 0D8A                           u3480 1BB0                           u4328 2BF4  
                         u3721 1DA2                           u3801 20DE                           u2761 176E  
                         u2681 1696                           u4281 26E4                           u2841 2A44  
                         u2921 0D86                           u3481 1BAC                           u4417 2C8A  
                         u3810 210C                           u3650 2862                           u2770 178C  
                         u2690 16B4                           u4290 26F8                           u2930 0E00  
                         u2850 0C82                           u3490 1BBE                           u4338 2C26  
                         u3731 1DD0                           u3811 2108                           u3651 285E  
                         u2771 1788                           u2691 16B0                           u4291 26F4  
                         u4507 2A78                           u2931 0DFC                           u2851 0C7E  
                         u3491 1BBA                           u4427 2F1A                           u4339 2C3A  
                         u3900 2F6E                           u3740 1DF4                           u3820 213A  
                         u3660 2874                           u2780 17A6                           u2940 0E22  
                         u2860 0C94                           u4517 24DC                           u3741 1DF0  
                         u3821 2136                           u3661 2870                           u2781 17A2  
                         u4437 2B66                           u2941 0E1E                           u2861 0C90  
                         u3910 2D72                           u3750 1E1E                           u3830 2182  
                         u3670 289C                           u2790 17C4                           u2950 0E4C  
                         u2870 0CA4                           u4607 22FC                           u4527 24E6  
                         u3911 2D6E                           u3751 1E1A                           u3831 217E  
                         u3671 2898                           u2791 17C0                           u4447 2BA2  
                         u2951 0E48                           u2871 0CA0                           u3920 2DA0  
                         u3760 1E5E                           u3680 28D2                           u3840 2928  
                         u2960 0E70                           u2880 0CE8                           u4617 2306  
                         u4537 255E                           u3921 2D9C                           u3761 1E5A  
                         u3681 28CE                           u3841 2924                           u4457 2BC0  
                         u2961 0E6C                           u2881 0CE4                           u3770 1EA8  
                         u3690 2E7C                           u3850 294A                           u3930 139E  
                         u2970 0E86                           u2890 0CFA                           u4547 2568  
                         u3771 1EA4                           u3691 2E78                           u3851 2946  
                         u3931 1398                           u4467 29EE                           u2971 0E82  
                         u2891 0CF6                           u3780 2072                           u3860 29A0  
                         u3940 13A0                           u2980 0EA4                           u4557 2574  
                         u3781 206E                           u3861 299C                           u4477 2A16  
                         u2981 0EA0                           u4397 2C10                           u3790 20A4  
                         u3870 29AE                           u3950 13B6                           u2990 0EC4  
                         u4567 225C                           u3791 20A0                           u3871 29AA  
                         u3951 13B2                           u4487 2A2C                           u2991 0EC0  
                         u3880 2EDA                           u3960 13E4                           u4577 2266  
                         u3881 2ED6                           u3961 13E0                           u4497 2A62  
                         u3890 2F6C                           u3970 1400                           u4587 22EA  
                         u3891 2F66                           u3971 13FC                           u3980 142E  
                         u4597 22F4                           u3981 142A                           u3990 143C  
                         u3991 1438                           _TMR2 000FCC                           _TMR3 000FB2  
                         abs@a 0016                           _dbuf 0098                           _atoi 1BD2  
                         _main 2BD0                           _dtoa 136E                           _isrH 0008  
                         _isrL 0018                           _prec 0058                           _nout 0094  
                         pad@i 001B                           pad@p 0018                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001D                           fsr2l 000FD9  
                         btemp 005C                           prodh 000FF4                           prodl 000FF3  
                         start 00AA                ___fldiv@new_exp 0040   __end_of_appStateRecolectData 2FAA  
              __end_of_Lcd_Cmd 2580                __end_of_Lcd_Out 2850                   ___param_bank 000000  
                   _Lcd_Chr_CP 21C4           __size_of_appLCD_Init 0084                          ??_abs 0018  
                        ??_pad 001A                  ___fltol@sign1 0050                __end_of___aodiv 1EEA  
                        ?_atoi 000B                          ?_main 0001                          ?_dtoa 001F  
              __end_of___aomod 21C4                          ?_isrH 0001                          ?_isrL 0001  
              __end_of_adcInit 2DF4                __end_of___fldiv 1002                          _ADRES 000FC3  
              __end_of___awmod 2B4C                __end_of___flmul 0C68                __end_of___fltol 2686  
      __end_of_appStateInitial 3008                          i1l278 009A                          i2l283 308A  
                 vfpfcnvrt@fmt 0045                          _PORTB 000F81                          _TRISB 000F93  
              __end_of_appInit 3060          appSubGetData@cantidad 0086                          _datos 00B8  
                        _flags 005A                          _fputc 2850                          _fputs 2E3A  
              __end_of_isdigit 2F74                          atoi@n 0018                          pad@fp 0014  
                        atoi@s 000B                          _width 0096                          _putch 3092  
                        dtoa@d 0021                          dtoa@i 0041                          dtoa@n 0039  
                        dtoa@p 0033                          dtoa@s 0037                          dtoa@w 0035  
              __end_of_teclado 1836                __end_of_isspace 2DAC                          pclath 000FFA  
                        tablat 000FF5                          ttemp5 005D                          ttemp6 0060  
                        ttemp7 0064                          status 000FD8                          wtemp8 005D  
              __end_of_sprintf 2D5A           __end_of_appTimerInit 3074           __end_of_appTimerStop 3092  
             __end_of_Lcd_Init 2A9C                __initialization 2E7E                   __end_of_atoi 1D62  
                 __end_of_main 2C42                   __end_of_dtoa 164C                   __end_of_isrH 308E  
                 __end_of_isrL 00AA                         ??_atoi 000D                         ??_main 008C  
                       ??_dtoa 0029                         ??_isrH 0001                         ??_isrL 0001  
                __activetblptr 000002                 _appGetElements 2C42                         ?_fputc 0004  
                       ?_fputs 000D          __size_of_appISRConfig 0008                         ?_putch 0001  
                       i1l4241 0048                         i1l4233 0026                         i1l4251 008A  
                       i1l4243 005A                         i1l4235 0034                         i1l4253 0092  
                       i1l4245 006A                         i1l4237 0042                         i1l4247 006E  
                       i1l4239 0044                         i1l4249 007A                      ??_Lcd_Cmd 0004  
                vfpfcnvrt@done 0068                         _TMR3IE 007D01                         _TMR3IF 007D09  
                    ??_Lcd_Out 000A               __end_of___xxtofl 1BD2                   vfprintf@cfmt 004D  
                  ?_Lcd_Chr_CP 0001                         _appADC 2312                      ??___aodiv 0014  
                    ??___aomod 0014                         ___wmul 3008                      ??_adcInit 0004  
                    ??___fldiv 0037                      ??___awmod 0056                      ??___flmul 001E  
                       _appBat 1836                      ??___fltol 004C                         _memset 1EEA  
                       clear_0 2EA4                ___awmod@divisor 0054                      ??_appInit 0010  
       __end_of_appGetElements 2CA6                ___awmod@counter 0056                         pad@buf 0016  
                       dtoa@fp 001F                         _strlen 2FAA                   _appISRConfig 3080  
                       fputc@c 0004               ?_appStateInitial 0001                         fputs@c 0011  
                       fputs@i 0012                         fputs@s 000D                      ??_isdigit 0006  
                    ??_teclado 0006                   __mediumconst 0000                      ??_isspace 0006  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         _appStateRecolectData 2F74              adcGetValue@PinADC 0007                         putch@c 0001  
        __end_of_appSubGetData 2784               __end_of_vfprintf 2D08                      ??_sprintf 0058  
                 ___xxtofl@arg 0012                   ___xxtofl@exp 0011                   ___xxtofl@val 0008  
                   __accesstop 0060        __end_of__initialization 2EB2          __end_of_appTimerStart 3080  
                ___rparam_used 000001                     ___fltol@f1 0048                 __pcstackCOMRAM 0001  
                 __pidataBANK0 302E                  __end_of_fputc 291A                  __end_of_fputs 2E7E  
                __end_of_putch 3094             __size_of_appElemts 0046                ?_appGetElements 0001  
                ??_adcGetValue 0006          ?_appStateRecolectData 0001                      ?_Lcd_Init 0001  
                      ??_fputc 0008                        ??_fputs 0011            __size_of_Lcd_Chr_CP 014E  
                      ??_putch 0004          __size_of_appTimerInit 0014                     __pbssBANK0 008E  
        __size_of_appTimerStop 0004                        ?_appADC 0084                        ?___wmul 0004  
                      ?_appBat 0084                        ?_memset 0004                     appADC@data 0084  
                      ?_strlen 0004                   _appTimerInit 3060                      ?___xxtofl 0008  
                 _appTimerStop 308E             __size_of_vfpfcnvrt 036C                     ??_Lcd_Init 0007  
          __end_of_adcGetValue 2F3C              __end_of_appElemts 2E3A                        _Lcd_Cmd 2456  
                      _Lcd_Out 2784        appSubGetData@data_Inout 0084                  ??_appLCD_Init 000E  
                      __Hparam 0000                        __Lparam 0000                        ___aodiv 1D62  
                      ___aomod 2060                        _adcInit 2DAC                        ___fldiv 0C68  
                      ___awmod 2A9C                        ___flmul 083E                        ___fltol 2580  
              __size_of_appADC 0144                __size_of___wmul 0026                __size_of_appBat 01E8  
                    ?_vfprintf 006C                     appBat@data 0084                   __psmallconst 0800  
                      __pcinit 2E7E                __size_of_memset 0176                        _appInit 3048  
                      __ramtop 0800                        __ptext0 2BD0                        __ptext1 2C42  
                      __ptext2 2FE0                        __ptext3 2F74                        __ptext4 2DF4  
                      __ptext5 1836                        __ptext6 2312                        __ptext7 2F00  
                      __ptext8 1A1E                        __ptext9 2580                __size_of_strlen 0036  
                    _T2CONbits 000FCA                   __size_of_abs 0040                   __size_of_pad 00C2  
       ??_appStateRecolectData 0058                        _isdigit 2F3C                     ??___xxtofl 000C  
                    _T3CONbits 000FB1               ___awmod@dividend 0052                        _teclado 164C  
                      _isspace 2D5A                        atoi@neg 0011                        _sprintf 2D08  
               __pintcode_body 3088           end_of_initialization 2EB2                        fputc@fp 0006  
                      memset@c 0006                        memset@k 000C                        memset@n 0008  
                      memset@s 000E                  __Lmediumconst 0000                        int_func 3088  
                      fputs@fp 000F              __end_of_vfpfcnvrt 136E                      Lcd_Init@i 0008  
                 ??_Lcd_Chr_CP 0004                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 004D            __end_of_appLCD_Init 2BD0                        strlen@a 0006  
                      strlen@s 0004                      _PORTBbits 000F81                    _adcGetValue 2F00  
                ___xxtofl@sign 0010                      _TRISAbits 000F92                      _TRISBbits 000F93  
                    _TRISDbits 000F95                    ___fldiv@grs 0042                    ___fldiv@rem 003B  
           __end_of_Lcd_Chr_CP 2312                    ___flmul@grs 0023               ??_appGetElements 0089  
               __end_of_appADC 2456                    vfpfcnvrt@ap 0047                    vfpfcnvrt@fp 0043  
                  vfpfcnvrt@ll 0060                 __end_of___wmul 302E                 __end_of_appBat 1A1E  
               __end_of_memset 2060                 __end_of_strlen 2FE0            start_initialization 2E7E  
                  __end_of_abs 2F00                    __end_of_pad 29DC                  Lcd_Out@buffer 0008  
     __size_of_appStateInitial 0028              __size_of_Lcd_Init 00C0             fp__appStateInitial 000E  
                  _appLCD_Init 2B4C                    vfprintf@fmt 006E                       ??_appADC 0058  
                     ??___wmul 0008                    _appBat$2033 0088                       ??_appBat 0086  
       __size_of_appSubGetData 00FE                    __pdataBANK0 00B8                       ??_memset 000A  
                   memset@dest 0004                       ??_strlen 0006                      ___fldiv@a 0033  
                    ___fldiv@b 002F         __size_of_appTimerStart 000C                      ___flmul@a 001A  
                    ___flmul@b 0016                    __pbssCOMRAM 0058                  __pcstackBANK0 0060  
             ___aodiv@dividend 0004              __size_of___xxtofl 01B4        fp__appStateRecolectData 000E  
                     ?_Lcd_Cmd 0001                       ?_Lcd_Out 0007                      _atoi$1754 0013  
                    _atoi$1755 0017                      _atoi$1756 0015                      _appElemts 2DF4  
                    _dtoa$1719 0031              appElemts@elements 0084                      __pintcode 0008  
                     ?___aodiv 0004                       ?___aomod 0004                       ?_adcInit 0001  
                     ?___fldiv 002F               ___aodiv@quotient 0016                       ?___awmod 0052  
                     ?___flmul 0016                       ?___fltol 0048                    __pintcodelo 0018  
                     ?_appInit 0001              __size_of_vfprintf 0062                    __smallconst 0800  
                     ?_isdigit 0004                   teclado@valor 0004                       ?_teclado 0004  
                     ?_isspace 0004                       ?_sprintf 0072                  _appSubGetData 2686  
               __size_of_fputc 00CA                 __size_of_fputs 0044                 __size_of_putch 0002  
               ___wmul@product 0008                       _LATAbits 000F89                       _LATBbits 000F8A  
                     _LATDbits 000F8C                  _appTimerStart 3074                       _IPR2bits 000FA2  
                     _PIE2bits 000FA0              ??_appStateInitial 0006                     ?_appElemts 0084  
                     i1u434_20 0034                       i1u434_21 0030                       i1u435_20 0042  
                     i1u435_21 003E                       i1u436_20 005A                       i1u436_21 0056  
                     i1u437_20 006A                       i1u437_21 0066                       i1u438_20 008A  
                     i1u438_21 0086                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _GO_nDONE 007E11                       _RCONbits 000FD0                       Lcd_Out@x 0007  
                     Lcd_Out@y 000C                      _vfpfcnvrt 1002                     _ADCON0bits 000FC2  
                   _ADCON1bits 000FC1                     _ADCON2bits 000FC0              ___wmul@multiplier 0004  
                ?_appISRConfig 0001                   ?_adcGetValue 0004  __size_of_appStateRecolectData 0036  
                 _isspace$1772 000A                       _Lcd_Init 29DC                 ?_appSubGetData 0084  
                  _INTCON2bits 000FF1                      copy_data0 2E92                 ?_appTimerStart 0001  
             __size_of_Lcd_Cmd 012A               __size_of_Lcd_Out 00CC                       __Hrparam 0000  
                   vfprintf@ap 0070                       __Lrparam 0000                     vfprintf@fp 006C  
             __size_of___aodiv 0188               __size_of___aomod 0164               __size_of_adcInit 0048  
             __size_of___fldiv 039A               __size_of___awmod 00B0               __size_of___flmul 042A  
             __size_of___fltol 0106                  appADC@lm35val 0086                     ?_vfpfcnvrt 0043  
              ___aodiv@divisor 000C                 ??_appISRConfig 0004                ___aodiv@counter 0014  
             __size_of_appInit 0018                     sprintf@fmt 0074                       ___xxtofl 1A1E  
             appElemts@dataout 0086               __size_of_isdigit 0038                 Lcd_Chr_CP@data 0006  
             __size_of_teclado 01EA               __size_of_isspace 0052                       __ptext10 083E  
                     __ptext11 0C68                       __ptext20 3074                       __ptext12 2A9C  
                     __ptext21 2686                       __ptext13 3048                       __ptext30 2850  
                     __ptext22 164C                       __ptext14 3060                       __ptext31 3092  
                     __ptext23 2D08                       __ptext15 2B4C                       __ptext40 2784  
                     __ptext32 2EC0                       __ptext24 2CA6                       __ptext16 29DC  
                     __ptext41 2456                       __ptext33 2060                       __ptext25 1002  
                     __ptext17 3080                       __ptext42 21C4                       __ptext34 1D62  
                     __ptext26 136E                       __ptext18 2DAC                       __ptext35 1BD2  
                     __ptext27 291A                       __ptext19 308E                       __ptext36 2D5A  
                     __ptext28 2FAA                       __ptext37 2F3C                       __ptext29 2E3A  
                     __ptext38 3008                       __ptext39 1EEA               __size_of_sprintf 0052  
                  Lcd_Cmd@data 0006                  __size_of_atoi 0190                  __size_of_main 0072  
                __size_of_dtoa 02DE                  __size_of_isrH 3086                  __size_of_isrL 0092  
                  ??_appElemts 0058                   ?_appLCD_Init 0001                       int$flags 005C  
                     _vfprintf 2CA6               ___aomod@dividend 0004             appSubGetData@inout 0088  
                ?_appTimerInit 0001                    Lcd_Out@data 000D                 _vfpfcnvrt$1734 006A  
                ?_appTimerStop 0001                     _INTCONbits 000FF2                ??_appSubGetData 0058  
                     isdigit@c 0004                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 007C                ??_appTimerStart 0004                       isspace@c 0004  
               appElemts@F3559 008E                ___aomod@divisor 000C                    ??_vfpfcnvrt 0049  
              ___aomod@counter 0014                 ??_appTimerInit 0004                       sprintf@f 007E  
                     sprintf@s 0072                 ??_appTimerStop 0004        __size_of_appGetElements 0064  
            fp__appGetElements 000E           __size_of_adcGetValue 003C                _appStateInitial 2FE0  
                 ___aodiv@sign 0015           __end_of_appISRConfig 3088                   ___aomod@sign 0015  
