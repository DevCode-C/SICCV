

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat May 29 18:46:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataBANK0
    85  00192A                     __pidataBANK0:
    86                           	callstack 0
    87                           
    88                           ;initializer for _datos
    89  00192A  00                 	db	0
    90  00192B  00                 	db	0
    91  00192C  2E                 	db	low _appStateInitial
    92  00192D  19                 	db	high _appStateInitial
    93  0000                     _TMR3	set	4018
    94  0000                     _ADRES	set	4035
    95  0000                     _INTCONbits	set	4082
    96  0000                     _RCONbits	set	4048
    97  0000                     _PIE2bits	set	4000
    98  0000                     _IPR2bits	set	4002
    99  0000                     _PIR2bits	set	4001
   100  0000                     _T3CONbits	set	4017
   101  0000                     _PIR1bits	set	3998
   102  0000                     _PR2	set	4043
   103  0000                     _TMR2	set	4044
   104  0000                     _T2CONbits	set	4042
   105  0000                     _LATDbits	set	3980
   106  0000                     _TRISDbits	set	3989
   107  0000                     _PORTBbits	set	3969
   108  0000                     _PORTB	set	3969
   109  0000                     _LATBbits	set	3978
   110  0000                     _TRISBbits	set	3987
   111  0000                     _ADCON0bits	set	4034
   112  0000                     _ADCON2bits	set	4032
   113  0000                     _ADCON1bits	set	4033
   114  0000                     _TMR3IF	set	32009
   115  0000                     _TMR3IE	set	32001
   116  0000                     _GO_nDONE	set	32273
   117                           
   118                           	psect	smallconst
   119  000800                     __psmallconst:
   120                           	callstack 0
   121  000800  00                 	db	0
   122  000801                     STR_3:
   123  000801  42                 	db	66	;'B'
   124  000802  69                 	db	105	;'i'
   125  000803  65                 	db	101	;'e'
   126  000804  6E                 	db	110	;'n'
   127  000805  76                 	db	118	;'v'
   128  000806  65                 	db	101	;'e'
   129  000807  6E                 	db	110	;'n'
   130  000808  69                 	db	105	;'i'
   131  000809  64                 	db	100	;'d'
   132  00080A  6F                 	db	111	;'o'
   133  00080B  73                 	db	115	;'s'
   134  00080C  00                 	db	0
   135  00080D                     STR_1:
   136  00080D  41                 	db	65	;'A'
   137  00080E  44                 	db	68	;'D'
   138  00080F  43                 	db	67	;'C'
   139  000810  31                 	db	49	;'1'
   140  000811  3A                 	db	58	;':'
   141  000812  25                 	db	37
   142  000813  64                 	db	100	;'d'
   143  000814  00                 	db	0
   144  000815                     STR_2:
   145  000815  41                 	db	65	;'A'
   146  000816  44                 	db	68	;'D'
   147  000817  43                 	db	67	;'C'
   148  000818  32                 	db	50	;'2'
   149  000819  3A                 	db	58	;':'
   150  00081A  25                 	db	37
   151  00081B  64                 	db	100	;'d'
   152  00081C  00                 	db	0
   153  00081D                     STR_4:
   154  00081D  53                 	db	83	;'S'
   155  00081E  49                 	db	73	;'I'
   156  00081F  43                 	db	67	;'C'
   157  000820  43                 	db	67	;'C'
   158  000821  56                 	db	86	;'V'
   159  000822  00                 	db	0
   160  000823  00                 	db	0	; dummy byte at the end
   161  0000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165  0017E0                     __pcinit:
   166                           	callstack 0
   167  0017E0                     start_initialization:
   168                           	callstack 0
   169  0017E0                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Initialize objects allocated to BANK0 (4 bytes)
   173                           ; load TBLPTR registers with __pidataBANK0
   174  0017E0  0E2A               	movlw	low __pidataBANK0
   175  0017E2  6EF6               	movwf	tblptrl,c
   176  0017E4  0E19               	movlw	high __pidataBANK0
   177  0017E6  6EF7               	movwf	tblptrh,c
   178  0017E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   179  0017EA  6EF8               	movwf	tblptru,c
   180  0017EC  EE00  F0BC         	lfsr	0,__pdataBANK0
   181  0017F0  EE10 F004          	lfsr	1,4
   182  0017F4                     copy_data0:
   183  0017F4  0009               	tblrd		*+
   184  0017F6  CFF5 FFEE          	movff	tablat,postinc0
   185  0017FA  50E5               	movf	postdec1,w,c
   186  0017FC  50E1               	movf	fsr1l,w,c
   187  0017FE  E1FA               	bnz	copy_data0
   188                           
   189                           ; Clear objects allocated to BANK0 (52 bytes)
   190  001800  EE00  F060         	lfsr	0,__pbssBANK0
   191  001804  0E34               	movlw	52
   192  001806                     clear_0:
   193  001806  6AEE               	clrf	postinc0,c
   194  001808  06E8               	decf	wreg,f,c
   195  00180A  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to COMRAM (4 bytes)
   198  00180C  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   199  00180E  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   200  001810  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   201  001812  6A56               	clrf	__pbssCOMRAM& (0+255),c
   202  001814                     end_of_initialization:
   203                           	callstack 0
   204  001814                     __end_of__initialization:
   205                           	callstack 0
   206  001814  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   207  001816  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   208  001818  0E00               	movlw	low (__Lmediumconst shr (0+16))
   209  00181A  6EF8               	movwf	tblptru,c
   210  00181C  0100               	movlb	0
   211  00181E  EF18  F00B         	goto	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMRAM
   214  000056                     __pbssCOMRAM:
   215                           	callstack 0
   216  000056                     _prec:
   217                           	callstack 0
   218  000056                     	ds	2
   219  000058                     _flags:
   220                           	callstack 0
   221  000058                     	ds	2
   222                           
   223                           	psect	bssBANK0
   224  000060                     __pbssBANK0:
   225                           	callstack 0
   226  000060                     	ds	16
   227  000070                     _nout:
   228                           	callstack 0
   229  000070                     	ds	2
   230  000072                     _width:
   231                           	callstack 0
   232  000072                     	ds	2
   233  000074                     _dbuf:
   234                           	callstack 0
   235  000074                     	ds	32
   236                           
   237                           	psect	dataBANK0
   238  0000BC                     __pdataBANK0:
   239                           	callstack 0
   240  0000BC                     _datos:
   241                           	callstack 0
   242  0000BC                     	ds	4
   243                           
   244                           	psect	cstackBANK0
   245  000094                     __pcstackBANK0:
   246                           	callstack 0
   247  000094                     ?_vfprintf:
   248                           	callstack 0
   249  000094                     vfprintf@fp:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x0
   253  000094                     	ds	2
   254  000096                     vfprintf@fmt:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x2
   258  000096                     	ds	2
   259  000098                     vfprintf@ap:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x4
   263  000098                     	ds	2
   264  00009A                     ?_sprintf:
   265                           	callstack 0
   266  00009A                     sprintf@s:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x6
   270  00009A                     	ds	2
   271  00009C                     sprintf@fmt:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x8
   275  00009C                     	ds	6
   276  0000A2                     sprintf@ap:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0xE
   280  0000A2                     	ds	2
   281  0000A4                     sprintf@f:
   282                           	callstack 0
   283                           
   284                           ; 6 bytes @ 0x10
   285  0000A4                     	ds	6
   286  0000AA                     appADC@dataOut:
   287                           	callstack 0
   288                           
   289                           ; 16 bytes @ 0x16
   290  0000AA                     	ds	16
   291  0000BA                     ??_main:
   292                           
   293                           ; 1 bytes @ 0x26
   294  0000BA                     	ds	2
   295                           
   296                           	psect	cstackCOMRAM
   297  000001                     __pcstackCOMRAM:
   298                           	callstack 0
   299  000001                     ??_isrL:
   300  000001                     
   301                           ; 1 bytes @ 0x0
   302  000001                     	ds	4
   303  000005                     ??_Lcd_Cmd:
   304  000005                     ??_Lcd_Chr_CP:
   305  000005                     ??_adcInit:
   306  000005                     ?_strlen:
   307                           	callstack 0
   308  000005                     ?_adcGetValue:
   309                           	callstack 0
   310  000005                     ?___aodiv:
   311                           	callstack 0
   312  000005                     ?___aomod:
   313                           	callstack 0
   314  000005                     fputc@c:
   315                           	callstack 0
   316  000005                     strlen@s:
   317                           	callstack 0
   318  000005                     ___aodiv@dividend:
   319                           	callstack 0
   320  000005                     ___aomod@dividend:
   321                           	callstack 0
   322                           
   323                           ; 8 bytes @ 0x4
   324  000005                     	ds	1
   325  000006                     adcInit@ADC_PINs:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x5
   329  000006                     	ds	1
   330  000007                     ??_adcGetValue:
   331  000007                     Lcd_Chr_CP@data:
   332                           	callstack 0
   333  000007                     Lcd_Cmd@data:
   334                           	callstack 0
   335  000007                     fputc@fp:
   336                           	callstack 0
   337  000007                     strlen@a:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x6
   341  000007                     	ds	1
   342  000008                     ??_Lcd_Init:
   343  000008                     adcGetValue@PinADC:
   344                           	callstack 0
   345  000008                     Lcd_Out@x:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x7
   349  000008                     	ds	1
   350  000009                     ??_fputc:
   351  000009                     Lcd_Init@i:
   352                           	callstack 0
   353  000009                     Lcd_Out@buffer:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x8
   357  000009                     	ds	2
   358  00000B                     ??_Lcd_Out:
   359                           
   360                           ; 1 bytes @ 0xA
   361  00000B                     	ds	2
   362  00000D                     Lcd_Out@y:
   363                           	callstack 0
   364  00000D                     ___aodiv@divisor:
   365                           	callstack 0
   366  00000D                     ___aomod@divisor:
   367                           	callstack 0
   368                           
   369                           ; 8 bytes @ 0xC
   370  00000D                     	ds	1
   371  00000E                     Lcd_Out@data:
   372                           	callstack 0
   373  00000E                     fputs@s:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0xD
   377  00000E                     	ds	1
   378  00000F                     ??_appLCD_Init:
   379                           
   380                           ; 1 bytes @ 0xE
   381  00000F                     	ds	1
   382  000010                     fputs@fp:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xF
   386  000010                     	ds	1
   387  000011                     
   388                           ; 1 bytes @ 0x10
   389  000011                     	ds	1
   390  000012                     fputs@c:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x11
   394  000012                     	ds	1
   395  000013                     fputs@i:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x12
   399  000013                     	ds	2
   400  000015                     ?_pad:
   401                           	callstack 0
   402  000015                     ___aodiv@counter:
   403                           	callstack 0
   404  000015                     ___aomod@counter:
   405                           	callstack 0
   406  000015                     pad@fp:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x14
   410  000015                     	ds	1
   411  000016                     ___aodiv@sign:
   412                           	callstack 0
   413  000016                     ___aomod@sign:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x15
   417  000016                     	ds	1
   418  000017                     ?_abs:
   419                           	callstack 0
   420  000017                     pad@buf:
   421                           	callstack 0
   422  000017                     abs@a:
   423                           	callstack 0
   424  000017                     ___aodiv@quotient:
   425                           	callstack 0
   426                           
   427                           ; 8 bytes @ 0x16
   428  000017                     	ds	2
   429  000019                     ??_abs:
   430  000019                     pad@p:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x18
   434  000019                     	ds	2
   435  00001B                     ??_pad:
   436                           
   437                           ; 1 bytes @ 0x1A
   438  00001B                     	ds	1
   439  00001C                     pad@i:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x1B
   443  00001C                     	ds	2
   444  00001E                     pad@w:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x1D
   448  00001E                     	ds	2
   449  000020                     ?_dtoa:
   450                           	callstack 0
   451  000020                     dtoa@fp:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x1F
   455  000020                     	ds	2
   456  000022                     dtoa@d:
   457                           	callstack 0
   458                           
   459                           ; 8 bytes @ 0x21
   460  000022                     	ds	8
   461  00002A                     ??_dtoa:
   462                           
   463                           ; 1 bytes @ 0x29
   464  00002A                     	ds	8
   465  000032                     _dtoa$1534:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x31
   469  000032                     	ds	2
   470  000034                     dtoa@p:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x33
   474  000034                     	ds	2
   475  000036                     dtoa@w:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x35
   479  000036                     	ds	2
   480  000038                     dtoa@s:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x37
   484  000038                     	ds	2
   485  00003A                     dtoa@n:
   486                           	callstack 0
   487                           
   488                           ; 8 bytes @ 0x39
   489  00003A                     	ds	8
   490  000042                     dtoa@i:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x41
   494  000042                     	ds	2
   495  000044                     ?_vfpfcnvrt:
   496                           	callstack 0
   497  000044                     vfpfcnvrt@fp:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x43
   501  000044                     	ds	2
   502  000046                     vfpfcnvrt@fmt:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x45
   506  000046                     	ds	2
   507  000048                     vfpfcnvrt@ap:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x47
   511  000048                     	ds	2
   512  00004A                     ??_vfpfcnvrt:
   513                           
   514                           ; 1 bytes @ 0x49
   515  00004A                     	ds	2
   516  00004C                     vfpfcnvrt@ll:
   517                           	callstack 0
   518                           
   519                           ; 8 bytes @ 0x4B
   520  00004C                     	ds	8
   521  000054                     vfprintf@cfmt:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x53
   525  000054                     	ds	2
   526  000056                     
   527                           ; 1 bytes @ 0x55
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 12 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   547 ;;      Params:         0       0       0       0       0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0       0       0       0       0
   549 ;;      Temps:          0       2       0       0       0       0       0       0       0
   550 ;;      Totals:         0       2       0       0       0       0       0       0       0
   551 ;;Total ram usage:        2 bytes
   552 ;; Hardware stack levels required when called:   12
   553 ;; This function calls:
   554 ;;		_appInit
   555 ;;		_appStateInitial
   556 ;;		_appStateRecolectData
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text0
   563  001630                     __ptext0:
   564                           	callstack 0
   565  001630                     _main:
   566                           	callstack 19
   567  001630                     
   568                           ;main.c: 14:     TRISBbits.TRISB2 = 0;
   569  001630  9493               	bcf	147,2,c	;volatile
   570                           
   571                           ;main.c: 15:     TRISBbits.TRISB3 = 0;
   572  001632  9693               	bcf	147,3,c	;volatile
   573                           
   574                           ;main.c: 16:     LATBbits.LATB2 = 0;
   575  001634  948A               	bcf	138,2,c	;volatile
   576  001636                     
   577                           ;main.c: 17:     appInit();
   578  001636  EC6A  F00C         	call	_appInit	;wreg free
   579  00163A                     l2432:
   580                           
   581                           ;main.c: 19:     {;main.c: 21:         LATBbits.LATB3 = !LATBbits.LATB3;
   582  00163A  A68A               	btfss	138,3,c	;volatile
   583  00163C  EF22  F00B         	goto	u1921
   584  001640  EF27  F00B         	goto	u1920
   585  001644                     u1921:
   586  001644  0100               	movlb	0	; () banked
   587  001646  6BBA               	clrf	??_main& (0+255),b
   588  001648  2BBA               	incf	??_main& (0+255),f,b
   589  00164A  EF29  F00B         	goto	u1938
   590  00164E                     u1920:
   591  00164E  0100               	movlb	0	; () banked
   592  001650  6BBA               	clrf	??_main& (0+255),b
   593  001652                     u1938:
   594  001652  47BA               	rlncf	??_main& (0+255),f,b
   595  001654  47BA               	rlncf	??_main& (0+255),f,b
   596  001656  47BA               	rlncf	??_main& (0+255),f,b
   597  001658  508A               	movf	138,w,c	;volatile
   598  00165A  19BA               	xorwf	??_main& (0+255),w,b
   599  00165C  0BF7               	andlw	-9
   600  00165E  19BA               	xorwf	??_main& (0+255),w,b
   601  001660  6E8A               	movwf	138,c	;volatile
   602  001662                     
   603                           ; BSR set to: 0
   604                           ;main.c: 22:         _delay((unsigned long)((100)*(12000000/4000.0)));
   605  001662  0E02               	movlw	2
   606  001664  0100               	movlb	0	; () banked
   607  001666  6FBB               	movwf	(??_main+1)& (0+255),b
   608  001668  0E86               	movlw	134
   609  00166A  6FBA               	movwf	??_main& (0+255),b
   610  00166C  0E99               	movlw	153
   611  00166E                     u2007:
   612  00166E  2EE8               	decfsz	wreg,f,c
   613  001670  D7FE               	bra	u2007
   614  001672  2FBA               	decfsz	??_main& (0+255),f,b
   615  001674  D7FC               	bra	u2007
   616  001676  2FBB               	decfsz	(??_main+1)& (0+255),f,b
   617  001678  D7FA               	bra	u2007
   618  00167A                     
   619                           ;main.c: 23:         datos.nextFunc();
   620  00167A  EE20  F0BE         	lfsr	2,_datos+2
   621  00167E  D802               	call	u1948
   622  001680  EF4C  F00B         	goto	u1949
   623  001684                     u1948:
   624  001684  0005               	push	
   625  001686  6EFA               	movwf	pclath,c
   626  001688  50DE               	movf	postinc2,w,c
   627  00168A  6EFD               	movwf	tosl,c
   628  00168C  50DE               	movf	postinc2,w,c
   629  00168E  6EFE               	movwf	tosh,c
   630  001690  50F8               	movf	tblptru,w,c
   631  001692  6EFF               	movwf	tosu,c
   632  001694  50FA               	movf	pclath,w,c
   633  001696  0012               	return		;indir
   634  001698                     u1949:
   635  001698  EF1D  F00B         	goto	l2432
   636  00169C  EF4D  F000         	goto	start
   637  0016A0                     __end_of_main:
   638                           	callstack 0
   639                           
   640 ;; *************** function _appStateInitial *****************
   641 ;; Defined at:
   642 ;;		line 26 in file "app.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		None
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   656 ;;      Params:         0       0       0       0       0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0
   659 ;;      Totals:         0       0       0       0       0       0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; Hardware stack levels required when called:    2
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_appStateRecolectData
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text1
   672  00192E                     __ptext1:
   673                           	callstack 0
   674  00192E                     _appStateInitial:
   675                           	callstack 28
   676  00192E  0012               	return		;funcret
   677  001930                     __end_of_appStateInitial:
   678                           	callstack 0
   679                           
   680 ;; *************** function _appStateRecolectData *****************
   681 ;; Defined at:
   682 ;;		line 21 in file "app.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         0       0       0       0       0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:   11
   703 ;; This function calls:
   704 ;;		_appADC
   705 ;; This function is called by:
   706 ;;		_isrL
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text2
   712  001900                     __ptext2:
   713                           	callstack 0
   714  001900                     _appStateRecolectData:
   715                           	callstack 19
   716  001900                     
   717                           ;app.c: 23:     appADC();
   718  001900  ECDB  F00A         	call	_appADC	;wreg free
   719  001904                     
   720                           ;app.c: 24:     datos.nextFunc = appStateInitial;
   721  001904  0E2E               	movlw	low _appStateInitial
   722  001906  0100               	movlb	0	; () banked
   723  001908  6FBE               	movwf	(_datos+2)& (0+255),b
   724  00190A  0E19               	movlw	high _appStateInitial
   725  00190C  6FBF               	movwf	(_datos+3)& (0+255),b
   726  00190E                     
   727                           ; BSR set to: 0
   728  00190E  0012               	return		;funcret
   729  001910                     __end_of_appStateRecolectData:
   730                           	callstack 0
   731                           
   732 ;; *************** function _appADC *****************
   733 ;; Defined at:
   734 ;;		line 52 in file "adc.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  dataOut        16   22[BANK0 ] unsigned char [16]
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   748 ;;      Params:         0       0       0       0       0       0       0       0       0
   749 ;;      Locals:         0      16       0       0       0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0       0       0       0       0
   751 ;;      Totals:         0      16       0       0       0       0       0       0       0
   752 ;;Total ram usage:       16 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:   10
   755 ;; This function calls:
   756 ;;		_Lcd_Out
   757 ;;		_adcGetValue
   758 ;;		_sprintf
   759 ;; This function is called by:
   760 ;;		_appStateRecolectData
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text3
   765  0015B6                     __ptext3:
   766                           	callstack 0
   767  0015B6                     _appADC:
   768                           	callstack 19
   769  0015B6                     
   770                           ;adc.c: 54:     uint8_t dataOut[16] = {0};
   771  0015B6  EE20  F0AA         	lfsr	2,appADC@dataOut
   772  0015BA  0E0F               	movlw	15
   773  0015BC                     u1911:
   774  0015BC  6ADE               	clrf	postinc2,c
   775  0015BE  06E8               	decf	wreg,f,c
   776  0015C0  E2FD               	bc	u1911
   777  0015C2                     
   778                           ;adc.c: 55:     sprintf((char *)dataOut,"ADC1:%d",adcGetValue(0));
   779  0015C2  0EAA               	movlw	low appADC@dataOut
   780  0015C4  0100               	movlb	0	; () banked
   781  0015C6  6F9A               	movwf	sprintf@s& (0+255),b
   782  0015C8  0E00               	movlw	high appADC@dataOut
   783  0015CA  6F9B               	movwf	(sprintf@s+1)& (0+255),b
   784  0015CC  0E0D               	movlw	low STR_1
   785  0015CE  6F9C               	movwf	sprintf@fmt& (0+255),b
   786  0015D0  0E08               	movlw	high STR_1
   787  0015D2  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
   788  0015D4  0E00               	movlw	0
   789  0015D6  EC31  F00C         	call	_adcGetValue
   790  0015DA  C005  F09E         	movff	?_adcGetValue,?_sprintf+4
   791  0015DE  C006  F09F         	movff	?_adcGetValue+1,?_sprintf+5
   792  0015E2  EC81  F00B         	call	_sprintf	;wreg free
   793  0015E6                     
   794                           ;adc.c: 56:     Lcd_Out(1,0, (int8_t*)dataOut);
   795  0015E6  0E00               	movlw	0
   796  0015E8  6E08               	movwf	Lcd_Out@x^0,c
   797  0015EA  0EAA               	movlw	low appADC@dataOut
   798  0015EC  6E09               	movwf	Lcd_Out@buffer^0,c
   799  0015EE  0E00               	movlw	high appADC@dataOut
   800  0015F0  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
   801  0015F2  0E01               	movlw	1
   802  0015F4  EC0D  F009         	call	_Lcd_Out
   803  0015F8                     
   804                           ;adc.c: 57:     sprintf((char *)dataOut,"ADC2:%d",adcGetValue(1));
   805  0015F8  0EAA               	movlw	low appADC@dataOut
   806  0015FA  0100               	movlb	0	; () banked
   807  0015FC  6F9A               	movwf	sprintf@s& (0+255),b
   808  0015FE  0E00               	movlw	high appADC@dataOut
   809  001600  6F9B               	movwf	(sprintf@s+1)& (0+255),b
   810  001602  0E15               	movlw	low STR_2
   811  001604  6F9C               	movwf	sprintf@fmt& (0+255),b
   812  001606  0E08               	movlw	high STR_2
   813  001608  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
   814  00160A  0E01               	movlw	1
   815  00160C  EC31  F00C         	call	_adcGetValue
   816  001610  C005  F09E         	movff	?_adcGetValue,?_sprintf+4
   817  001614  C006  F09F         	movff	?_adcGetValue+1,?_sprintf+5
   818  001618  EC81  F00B         	call	_sprintf	;wreg free
   819  00161C                     
   820                           ;adc.c: 58:     Lcd_Out(2,0, (int8_t*)dataOut);
   821  00161C  0E00               	movlw	0
   822  00161E  6E08               	movwf	Lcd_Out@x^0,c
   823  001620  0EAA               	movlw	low appADC@dataOut
   824  001622  6E09               	movwf	Lcd_Out@buffer^0,c
   825  001624  0E00               	movlw	high appADC@dataOut
   826  001626  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
   827  001628  0E02               	movlw	2
   828  00162A  EC0D  F009         	call	_Lcd_Out
   829  00162E  0012               	return		;funcret
   830  001630                     __end_of_appADC:
   831                           	callstack 0
   832                           
   833 ;; *************** function _sprintf *****************
   834 ;; Defined at:
   835 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  s               2    6[BANK0 ] PTR unsigned char 
   838 ;;		 -> appADC@dataOut(16), 
   839 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   840 ;;		 -> STR_2(8), STR_1(8), 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  f               6   16[BANK0 ] struct _IO_FILE
   843 ;;  ap              2   14[BANK0 ] PTR void [1]
   844 ;;		 -> ?_sprintf(2), 
   845 ;;  ret             2    0        int 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  2    6[BANK0 ] int 
   848 ;; Registers used:
   849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         0       6       0       0       0       0       0       0       0
   856 ;;      Locals:         0      10       0       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0
   858 ;;      Totals:         0      16       0       0       0       0       0       0       0
   859 ;;Total ram usage:       16 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    9
   862 ;; This function calls:
   863 ;;		_vfprintf
   864 ;; This function is called by:
   865 ;;		_appADC
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text4
   870  001702                     __ptext4:
   871                           	callstack 0
   872  001702                     _sprintf:
   873                           	callstack 19
   874  001702  0E9E               	movlw	low (?_sprintf+4)
   875  001704  0100               	movlb	0	; () banked
   876  001706  6FA2               	movwf	sprintf@ap& (0+255),b
   877  001708  0E00               	movlw	high (?_sprintf+4)
   878  00170A  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
   879  00170C  C09A  F0A4         	movff	sprintf@s,sprintf@f
   880  001710  C09B  F0A5         	movff	sprintf@s+1,sprintf@f+1
   881  001714                     
   882                           ; BSR set to: 0
   883  001714  0E00               	movlw	0
   884  001716  6FA7               	movwf	(sprintf@f+3)& (0+255),b
   885  001718  0E00               	movlw	0
   886  00171A  6FA6               	movwf	(sprintf@f+2)& (0+255),b
   887  00171C                     
   888                           ; BSR set to: 0
   889  00171C  0E00               	movlw	0
   890  00171E  6FA9               	movwf	(sprintf@f+5)& (0+255),b
   891  001720  0E00               	movlw	0
   892  001722  6FA8               	movwf	(sprintf@f+4)& (0+255),b
   893  001724                     
   894                           ; BSR set to: 0
   895  001724  0EA4               	movlw	low sprintf@f
   896  001726  6F94               	movwf	vfprintf@fp& (0+255),b
   897  001728  0E00               	movlw	high sprintf@f
   898  00172A  6F95               	movwf	(vfprintf@fp+1)& (0+255),b
   899  00172C  C09C  F096         	movff	sprintf@fmt,vfprintf@fmt
   900  001730  C09D  F097         	movff	sprintf@fmt+1,vfprintf@fmt+1
   901  001734  0EA2               	movlw	low sprintf@ap
   902  001736  6F98               	movwf	vfprintf@ap& (0+255),b
   903  001738  0E00               	movlw	high sprintf@ap
   904  00173A  6F99               	movwf	(vfprintf@ap+1)& (0+255),b
   905  00173C  EC50  F00B         	call	_vfprintf	;wreg free
   906  001740  0100               	movlb	0	; () banked
   907  001742  51A6               	movf	(sprintf@f+2)& (0+255),w,b
   908  001744  259A               	addwf	sprintf@s& (0+255),w,b
   909  001746  6ED9               	movwf	fsr2l,c
   910  001748  51A7               	movf	(sprintf@f+3)& (0+255),w,b
   911  00174A  219B               	addwfc	(sprintf@s+1)& (0+255),w,b
   912  00174C  6EDA               	movwf	fsr2h,c
   913  00174E  0E00               	movlw	0
   914  001750  6EDF               	movwf	indf2,c
   915  001752                     
   916                           ; BSR set to: 0
   917  001752  0012               	return		;funcret
   918  001754                     __end_of_sprintf:
   919                           	callstack 0
   920                           
   921 ;; *************** function _vfprintf *****************
   922 ;; Defined at:
   923 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   926 ;;		 -> sprintf@f(6), 
   927 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   928 ;;		 -> STR_2(8), STR_1(8), 
   929 ;;  ap              2    4[BANK0 ] PTR PTR void 
   930 ;;		 -> sprintf@ap(2), 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
   933 ;;		 -> STR_2(8), STR_1(8), 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  2    0[BANK0 ] int 
   936 ;; Registers used:
   937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   943 ;;      Params:         0       6       0       0       0       0       0       0       0
   944 ;;      Locals:         2       0       0       0       0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0
   946 ;;      Totals:         2       6       0       0       0       0       0       0       0
   947 ;;Total ram usage:        8 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    8
   950 ;; This function calls:
   951 ;;		_vfpfcnvrt
   952 ;; This function is called by:
   953 ;;		_sprintf
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text5
   958  0016A0                     __ptext5:
   959                           	callstack 0
   960  0016A0                     _vfprintf:
   961                           	callstack 19
   962  0016A0                     
   963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   964  0016A0  C096  F054         	movff	vfprintf@fmt,vfprintf@cfmt
   965  0016A4  C097  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   966  0016A8                     
   967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   968  0016A8  0E00               	movlw	0
   969  0016AA  0100               	movlb	0	; () banked
   970  0016AC  6F71               	movwf	(_nout+1)& (0+255),b
   971  0016AE  0E00               	movlw	0
   972  0016B0  6F70               	movwf	_nout& (0+255),b
   973                           
   974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   975  0016B2  EF6E  F00B         	goto	l2400
   976  0016B6                     l2398:
   977                           
   978                           ; BSR set to: 0
   979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   980  0016B6  C094  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
   981  0016BA  C095  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   982  0016BE  0E54               	movlw	low vfprintf@cfmt
   983  0016C0  6E46               	movwf	vfpfcnvrt@fmt^0,c
   984  0016C2  0E00               	movlw	high vfprintf@cfmt
   985  0016C4  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
   986  0016C6  C098  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
   987  0016CA  C099  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   988  0016CE  EC81  F005         	call	_vfpfcnvrt	;wreg free
   989  0016D2  5044               	movf	?_vfpfcnvrt^0,w,c
   990  0016D4  0100               	movlb	0	; () banked
   991  0016D6  2770               	addwf	_nout& (0+255),f,b
   992  0016D8  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
   993  0016DA  2371               	addwfc	(_nout+1)& (0+255),f,b
   994  0016DC                     l2400:
   995                           
   996                           ; BSR set to: 0
   997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   998  0016DC  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
   999  0016E0  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1000  0016E4                     	if	0	;tblptru may be non-zero
  1001  0016E4                     	endif
  1002  0016E4                     	if	0	;tblptru may be non-zero
  1003  0016E4                     	endif
  1004  0016E4  0008               	tblrd		*
  1005  0016E6  50F5               	movf	tablat,w,c
  1006  0016E8  0900               	iorlw	0
  1007  0016EA  A4D8               	btfss	status,2,c
  1008  0016EC  EF7A  F00B         	goto	u1901
  1009  0016F0  EF7C  F00B         	goto	u1900
  1010  0016F4                     u1901:
  1011  0016F4  EF5B  F00B         	goto	l2398
  1012  0016F8                     u1900:
  1013  0016F8                     
  1014                           ; BSR set to: 0
  1015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1016  0016F8  C070  F094         	movff	_nout,?_vfprintf
  1017  0016FC  C071  F095         	movff	_nout+1,?_vfprintf+1
  1018  001700                     
  1019                           ; BSR set to: 0
  1020  001700  0012               	return		;funcret
  1021  001702                     __end_of_vfprintf:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _vfpfcnvrt *****************
  1025 ;; Defined at:
  1026 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1029 ;;		 -> sprintf@f(6), 
  1030 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1031 ;;		 -> vfprintf@cfmt(2), 
  1032 ;;  ap              2   71[COMRAM] PTR PTR void 
  1033 ;;		 -> sprintf@ap(2), 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  ll              8   75[COMRAM] long long 
  1036 ;;  llu             8    0        unsigned long long 
  1037 ;;  f               4    0        unsigned long long 
  1038 ;;  vp              3    0        PTR void 
  1039 ;;  ct              3    0        unsigned char [3]
  1040 ;;  cp              3    0        PTR unsigned char 
  1041 ;;  i               2    0        int 
  1042 ;;  done            2    0        int 
  1043 ;;  c               1    0        unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  2   67[COMRAM] int 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1053 ;;      Params:         6       0       0       0       0       0       0       0       0
  1054 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1055 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1056 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1057 ;;Total ram usage:       16 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    7
  1060 ;; This function calls:
  1061 ;;		_dtoa
  1062 ;;		_fputc
  1063 ;; This function is called by:
  1064 ;;		_vfprintf
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text6
  1069  000B02                     __ptext6:
  1070                           	callstack 0
  1071  000B02                     _vfpfcnvrt:
  1072                           	callstack 19
  1073  000B02                     
  1074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1075  000B02  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1076  000B06  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1077  000B0A  CFDE FFF6          	movff	postinc2,tblptrl
  1078  000B0E  CFDD FFF7          	movff	postdec2,tblptrh
  1079  000B12                     	if	0	;tblptru may be non-zero
  1080  000B12                     	endif
  1081  000B12                     	if	0	;tblptru may be non-zero
  1082  000B12                     	endif
  1083  000B12  0008               	tblrd		*
  1084  000B14  50F5               	movf	tablat,w,c
  1085  000B16  0A25               	xorlw	37
  1086  000B18  A4D8               	btfss	status,2,c
  1087  000B1A  EF91  F005         	goto	u1861
  1088  000B1E  EF93  F005         	goto	u1860
  1089  000B22                     u1861:
  1090  000B22  EF3F  F006         	goto	l2386
  1091  000B26                     u1860:
  1092  000B26                     
  1093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1094  000B26  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1095  000B2A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1096  000B2E  2ADE               	incf	postinc2,f,c
  1097  000B30  0E00               	movlw	0
  1098  000B32  22DD               	addwfc	postdec2,f,c
  1099  000B34                     
  1100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1101  000B34  0E00               	movlw	0
  1102  000B36  0100               	movlb	0	; () banked
  1103  000B38  6F73               	movwf	(_width+1)& (0+255),b
  1104  000B3A  0E00               	movlw	0
  1105  000B3C  6F72               	movwf	_width& (0+255),b
  1106  000B3E  C072  F058         	movff	_width,_flags
  1107  000B42  C073  F059         	movff	_width+1,_flags+1
  1108  000B46                     
  1109                           ; BSR set to: 0
  1110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1111  000B46  6856               	setf	_prec^0,c
  1112  000B48  6857               	setf	(_prec+1)^0,c
  1113  000B4A                     
  1114                           ; BSR set to: 0
  1115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1116  000B4A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1117  000B4E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1118  000B52  CFDE FFF6          	movff	postinc2,tblptrl
  1119  000B56  CFDD FFF7          	movff	postdec2,tblptrh
  1120  000B5A                     	if	0	;tblptru may be non-zero
  1121  000B5A                     	endif
  1122  000B5A                     	if	0	;tblptru may be non-zero
  1123  000B5A                     	endif
  1124  000B5A  0008               	tblrd		*
  1125  000B5C  50F5               	movf	tablat,w,c
  1126  000B5E  0A64               	xorlw	100
  1127  000B60  B4D8               	btfsc	status,2,c
  1128  000B62  EFB5  F005         	goto	u1871
  1129  000B66  EFB7  F005         	goto	u1870
  1130  000B6A                     u1871:
  1131  000B6A  EFC9  F005         	goto	l2364
  1132  000B6E                     u1870:
  1133  000B6E                     
  1134                           ; BSR set to: 0
  1135  000B6E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1136  000B72  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1137  000B76  CFDE FFF6          	movff	postinc2,tblptrl
  1138  000B7A  CFDD FFF7          	movff	postdec2,tblptrh
  1139  000B7E                     	if	0	;tblptru may be non-zero
  1140  000B7E                     	endif
  1141  000B7E                     	if	0	;tblptru may be non-zero
  1142  000B7E                     	endif
  1143  000B7E  0008               	tblrd		*
  1144  000B80  50F5               	movf	tablat,w,c
  1145  000B82  0A69               	xorlw	105
  1146  000B84  A4D8               	btfss	status,2,c
  1147  000B86  EFC7  F005         	goto	u1881
  1148  000B8A  EFC9  F005         	goto	u1880
  1149  000B8E                     u1881:
  1150  000B8E  EF09  F006         	goto	l2370
  1151  000B92                     u1880:
  1152  000B92                     l2364:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1156  000B92  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1157  000B96  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1158  000B9A  2ADE               	incf	postinc2,f,c
  1159  000B9C  0E00               	movlw	0
  1160  000B9E  22DD               	addwfc	postdec2,f,c
  1161                           
  1162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1163  000BA0  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1164  000BA4  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1165  000BA8  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1166  000BAC  0E02               	movlw	2
  1167  000BAE  26DE               	addwf	postinc2,f,c
  1168  000BB0  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1169  000BB4  0E00               	movlw	0
  1170  000BB6  22DD               	addwfc	postdec2,f,c
  1171  000BB8  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1172  000BBC  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1173  000BC0  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  1174  000BC4  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  1175  000BC8  0E00               	movlw	0
  1176  000BCA  BE4D               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1177  000BCC  0EFF               	movlw	-1
  1178  000BCE  6E4E               	movwf	(vfpfcnvrt@ll+2)^0,c
  1179  000BD0  6E4F               	movwf	(vfpfcnvrt@ll+3)^0,c
  1180  000BD2  6E50               	movwf	(vfpfcnvrt@ll+4)^0,c
  1181  000BD4  6E51               	movwf	(vfpfcnvrt@ll+5)^0,c
  1182  000BD6  6E52               	movwf	(vfpfcnvrt@ll+6)^0,c
  1183  000BD8  6E53               	movwf	(vfpfcnvrt@ll+7)^0,c
  1184  000BDA                     
  1185                           ; BSR set to: 0
  1186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1187  000BDA  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1188  000BDE  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1189  000BE2  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
  1190  000BE6  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1191  000BEA  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1192  000BEE  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1193  000BF2  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1194  000BF6  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1195  000BFA  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1196  000BFE  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1197  000C02  EC12  F004         	call	_dtoa	;wreg free
  1198  000C06  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  1199  000C0A  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1200  000C0E  EF5A  F006         	goto	l977
  1201  000C12                     l2370:
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1205  000C12  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1206  000C16  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1207  000C1A  CFDE FFF6          	movff	postinc2,tblptrl
  1208  000C1E  CFDD FFF7          	movff	postdec2,tblptrh
  1209  000C22                     	if	0	;tblptru may be non-zero
  1210  000C22                     	endif
  1211  000C22                     	if	0	;tblptru may be non-zero
  1212  000C22                     	endif
  1213  000C22  0008               	tblrd		*
  1214  000C24  50F5               	movf	tablat,w,c
  1215  000C26  0A25               	xorlw	37
  1216  000C28  A4D8               	btfss	status,2,c
  1217  000C2A  EF19  F006         	goto	u1891
  1218  000C2E  EF1B  F006         	goto	u1890
  1219  000C32                     u1891:
  1220  000C32  EF32  F006         	goto	l2380
  1221  000C36                     u1890:
  1222  000C36                     
  1223                           ; BSR set to: 0
  1224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1225  000C36  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1226  000C3A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1227  000C3E  2ADE               	incf	postinc2,f,c
  1228  000C40  0E00               	movlw	0
  1229  000C42  22DD               	addwfc	postdec2,f,c
  1230  000C44                     
  1231                           ; BSR set to: 0
  1232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1233  000C44  0E00               	movlw	0
  1234  000C46  6E06               	movwf	(fputc@c+1)^0,c
  1235  000C48  0E25               	movlw	37
  1236  000C4A  6E05               	movwf	fputc@c^0,c
  1237  000C4C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1238  000C50  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1239  000C54  EC73  F009         	call	_fputc	;wreg free
  1240  000C58                     l2376:
  1241                           
  1242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1243  000C58  0E00               	movlw	0
  1244  000C5A  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1245  000C5C  0E01               	movlw	1
  1246  000C5E  6E44               	movwf	?_vfpfcnvrt^0,c
  1247  000C60  EF5A  F006         	goto	l977
  1248  000C64                     l2380:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1252  000C64  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1253  000C68  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1254  000C6C  2ADE               	incf	postinc2,f,c
  1255  000C6E  0E00               	movlw	0
  1256  000C70  22DD               	addwfc	postdec2,f,c
  1257  000C72                     
  1258                           ; BSR set to: 0
  1259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1260  000C72  0E00               	movlw	0
  1261  000C74  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1262  000C76  0E00               	movlw	0
  1263  000C78  6E44               	movwf	?_vfpfcnvrt^0,c
  1264  000C7A  EF5A  F006         	goto	l977
  1265  000C7E                     l2386:
  1266                           
  1267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1268  000C7E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1269  000C82  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1270  000C86  CFDE FFF6          	movff	postinc2,tblptrl
  1271  000C8A  CFDD FFF7          	movff	postdec2,tblptrh
  1272  000C8E                     	if	0	;tblptru may be non-zero
  1273  000C8E                     	endif
  1274  000C8E                     	if	0	;tblptru may be non-zero
  1275  000C8E                     	endif
  1276  000C8E  0008               	tblrd		*
  1277  000C90  50F5               	movf	tablat,w,c
  1278  000C92  6E05               	movwf	fputc@c^0,c
  1279  000C94  6A06               	clrf	(fputc@c+1)^0,c
  1280  000C96  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1281  000C9A  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1282  000C9E  EC73  F009         	call	_fputc	;wreg free
  1283  000CA2                     
  1284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1285  000CA2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1286  000CA6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1287  000CAA  2ADE               	incf	postinc2,f,c
  1288  000CAC  0E00               	movlw	0
  1289  000CAE  22DD               	addwfc	postdec2,f,c
  1290  000CB0  EF2C  F006         	goto	l2376
  1291  000CB4                     l977:
  1292  000CB4  0012               	return		;funcret
  1293  000CB6                     __end_of_vfpfcnvrt:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function _dtoa *****************
  1297 ;; Defined at:
  1298 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1301 ;;		 -> sprintf@f(6), 
  1302 ;;  d               8   33[COMRAM] long long 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  n               8   57[COMRAM] long long 
  1305 ;;  i               2   65[COMRAM] int 
  1306 ;;  s               2   55[COMRAM] int 
  1307 ;;  w               2   53[COMRAM] int 
  1308 ;;  p               2   51[COMRAM] int 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  2   31[COMRAM] int 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1318 ;;      Params:        10       0       0       0       0       0       0       0       0
  1319 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1320 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1321 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1322 ;;Total ram usage:       36 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    6
  1325 ;; This function calls:
  1326 ;;		___aodiv
  1327 ;;		___aomod
  1328 ;;		_abs
  1329 ;;		_pad
  1330 ;; This function is called by:
  1331 ;;		_vfpfcnvrt
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text7
  1336  000824                     __ptext7:
  1337                           	callstack 0
  1338  000824                     _dtoa:
  1339                           	callstack 19
  1340  000824                     
  1341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1342  000824  C022  F03A         	movff	dtoa@d,dtoa@n
  1343  000828  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  1344  00082C  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  1345  000830  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  1346  000834  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  1347  000838  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  1348  00083C  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  1349  000840  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  1350  000844                     
  1351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1352  000844  BE41               	btfsc	(dtoa@n+7)^0,7,c
  1353  000846  EF27  F004         	goto	u1711
  1354  00084A  EF2A  F004         	goto	u1710
  1355  00084E                     u1711:
  1356  00084E  0E01               	movlw	1
  1357  000850  EF2B  F004         	goto	u1720
  1358  000854                     u1710:
  1359  000854  0E00               	movlw	0
  1360  000856                     u1720:
  1361  000856  6E38               	movwf	dtoa@s^0,c
  1362  000858  6A39               	clrf	(dtoa@s+1)^0,c
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1365  00085A  5038               	movf	dtoa@s^0,w,c
  1366  00085C  1039               	iorwf	(dtoa@s+1)^0,w,c
  1367  00085E  B4D8               	btfsc	status,2,c
  1368  000860  EF34  F004         	goto	u1731
  1369  000864  EF36  F004         	goto	u1730
  1370  000868                     u1731:
  1371  000868  EF46  F004         	goto	l2296
  1372  00086C                     u1730:
  1373  00086C                     
  1374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1375  00086C  1E41               	comf	(dtoa@n+7)^0,f,c
  1376  00086E  1E40               	comf	(dtoa@n+6)^0,f,c
  1377  000870  1E3F               	comf	(dtoa@n+5)^0,f,c
  1378  000872  1E3E               	comf	(dtoa@n+4)^0,f,c
  1379  000874  1E3D               	comf	(dtoa@n+3)^0,f,c
  1380  000876  1E3C               	comf	(dtoa@n+2)^0,f,c
  1381  000878  1E3B               	comf	(dtoa@n+1)^0,f,c
  1382  00087A  6C3A               	negf	dtoa@n^0,c
  1383  00087C  0E00               	movlw	0
  1384  00087E  223B               	addwfc	(dtoa@n+1)^0,f,c
  1385  000880  223C               	addwfc	(dtoa@n+2)^0,f,c
  1386  000882  223D               	addwfc	(dtoa@n+3)^0,f,c
  1387  000884  223E               	addwfc	(dtoa@n+4)^0,f,c
  1388  000886  223F               	addwfc	(dtoa@n+5)^0,f,c
  1389  000888  2240               	addwfc	(dtoa@n+6)^0,f,c
  1390  00088A  2241               	addwfc	(dtoa@n+7)^0,f,c
  1391  00088C                     l2296:
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1394  00088C  BE57               	btfsc	(_prec+1)^0,7,c
  1395  00088E  EF4B  F004         	goto	u1741
  1396  000892  EF4D  F004         	goto	u1740
  1397  000896                     u1741:
  1398  000896  EF4E  F004         	goto	l2300
  1399  00089A                     u1740:
  1400  00089A                     
  1401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1402  00089A  9258               	bcf	_flags^0,1,c
  1403  00089C                     l2300:
  1404                           
  1405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1406  00089C  BE57               	btfsc	(_prec+1)^0,7,c
  1407  00089E  EF5B  F004         	goto	u1750
  1408  0008A2  5057               	movf	(_prec+1)^0,w,c
  1409  0008A4  E106               	bnz	u1751
  1410  0008A6  0456               	decf	_prec^0,w,c
  1411  0008A8  B0D8               	btfsc	status,0,c
  1412  0008AA  EF59  F004         	goto	u1751
  1413  0008AE  EF5B  F004         	goto	u1750
  1414  0008B2                     u1751:
  1415  0008B2  EF61  F004         	goto	l950
  1416  0008B6                     u1750:
  1417  0008B6  0E00               	movlw	0
  1418  0008B8  6E35               	movwf	(dtoa@p+1)^0,c
  1419  0008BA  0E01               	movlw	1
  1420  0008BC  6E34               	movwf	dtoa@p^0,c
  1421  0008BE  EF65  F004         	goto	l952
  1422  0008C2                     l950:
  1423  0008C2  C056  F034         	movff	_prec,dtoa@p
  1424  0008C6  C057  F035         	movff	_prec+1,dtoa@p+1
  1425  0008CA                     l952:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1428  0008CA  C072  F036         	movff	_width,dtoa@w
  1429  0008CE  C073  F037         	movff	_width+1,dtoa@w+1
  1430  0008D2                     
  1431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1432  0008D2  5038               	movf	dtoa@s^0,w,c
  1433  0008D4  1039               	iorwf	(dtoa@s+1)^0,w,c
  1434  0008D6  A4D8               	btfss	status,2,c
  1435  0008D8  EF70  F004         	goto	u1761
  1436  0008DC  EF72  F004         	goto	u1760
  1437  0008E0                     u1761:
  1438  0008E0  EF79  F004         	goto	l2308
  1439  0008E4                     u1760:
  1440  0008E4  A458               	btfss	_flags^0,2,c
  1441  0008E6  EF77  F004         	goto	u1771
  1442  0008EA  EF79  F004         	goto	u1770
  1443  0008EE                     u1771:
  1444  0008EE  EF7C  F004         	goto	l2310
  1445  0008F2                     u1770:
  1446  0008F2                     l2308:
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  1449  0008F2  0636               	decf	dtoa@w^0,f,c
  1450  0008F4  A0D8               	btfss	status,0,c
  1451  0008F6  0637               	decf	(dtoa@w+1)^0,f,c
  1452  0008F8                     l2310:
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1455  0008F8  0E00               	movlw	0
  1456  0008FA  6E43               	movwf	(dtoa@i+1)^0,c
  1457  0008FC  0E1F               	movlw	31
  1458  0008FE  6E42               	movwf	dtoa@i^0,c
  1459  000900                     
  1460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1461  000900  0E00               	movlw	0
  1462  000902  0100               	movlb	0	; () banked
  1463  000904  6F93               	movwf	(_dbuf+31)& (0+255),b
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1466  000906  EF01  F005         	goto	l2324
  1467  00090A                     l2314:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  1470  00090A  0642               	decf	dtoa@i^0,f,c
  1471  00090C  A0D8               	btfss	status,0,c
  1472  00090E  0643               	decf	(dtoa@i+1)^0,f,c
  1473  000910                     
  1474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1475  000910  0E74               	movlw	low _dbuf
  1476  000912  2442               	addwf	dtoa@i^0,w,c
  1477  000914  6ED9               	movwf	fsr2l,c
  1478  000916  0E00               	movlw	high _dbuf
  1479  000918  2043               	addwfc	(dtoa@i+1)^0,w,c
  1480  00091A  6EDA               	movwf	fsr2h,c
  1481  00091C  C03A  F005         	movff	dtoa@n,___aomod@dividend
  1482  000920  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1483  000924  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1484  000928  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1485  00092C  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1486  000930  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1487  000934  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1488  000938  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1489  00093C  0E0A               	movlw	10
  1490  00093E  6E0D               	movwf	___aomod@divisor^0,c
  1491  000940  0E00               	movlw	0
  1492  000942  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1493  000944  0E00               	movlw	0
  1494  000946  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1495  000948  0E00               	movlw	0
  1496  00094A  6E10               	movwf	(___aomod@divisor+3)^0,c
  1497  00094C  0E00               	movlw	0
  1498  00094E  6E11               	movwf	(___aomod@divisor+4)^0,c
  1499  000950  0E00               	movlw	0
  1500  000952  6E12               	movwf	(___aomod@divisor+5)^0,c
  1501  000954  0E00               	movlw	0
  1502  000956  6E13               	movwf	(___aomod@divisor+6)^0,c
  1503  000958  0E00               	movlw	0
  1504  00095A  6E14               	movwf	(___aomod@divisor+7)^0,c
  1505  00095C  EC1F  F007         	call	___aomod	;wreg free
  1506  000960  C005  F02A         	movff	?___aomod,??_dtoa
  1507  000964  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1508  000968  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1509  00096C  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1510  000970  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1511  000974  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1512  000978  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1513  00097C  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1514  000980  C02A  F017         	movff	??_dtoa,abs@a
  1515  000984  C02C  F018         	movff	??_dtoa+2,abs@a+1
  1516  000988  EC11  F00C         	call	_abs	;wreg free
  1517  00098C  5017               	movf	?_abs^0,w,c
  1518  00098E  0F30               	addlw	48
  1519  000990  6EDF               	movwf	indf2,c
  1520  000992                     
  1521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  1522  000992  0634               	decf	dtoa@p^0,f,c
  1523  000994  A0D8               	btfss	status,0,c
  1524  000996  0635               	decf	(dtoa@p+1)^0,f,c
  1525  000998                     
  1526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  1527  000998  0636               	decf	dtoa@w^0,f,c
  1528  00099A  A0D8               	btfss	status,0,c
  1529  00099C  0637               	decf	(dtoa@w+1)^0,f,c
  1530  00099E                     
  1531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1532  00099E  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  1533  0009A2  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1534  0009A6  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1535  0009AA  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1536  0009AE  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1537  0009B2  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1538  0009B6  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1539  0009BA  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1540  0009BE  0E0A               	movlw	10
  1541  0009C0  6E0D               	movwf	___aodiv@divisor^0,c
  1542  0009C2  0E00               	movlw	0
  1543  0009C4  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1544  0009C6  0E00               	movlw	0
  1545  0009C8  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1546  0009CA  0E00               	movlw	0
  1547  0009CC  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1548  0009CE  0E00               	movlw	0
  1549  0009D0  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1550  0009D2  0E00               	movlw	0
  1551  0009D4  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1552  0009D6  0E00               	movlw	0
  1553  0009D8  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1554  0009DA  0E00               	movlw	0
  1555  0009DC  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1556  0009DE  EC5B  F006         	call	___aodiv	;wreg free
  1557  0009E2  C005  F03A         	movff	?___aodiv,dtoa@n
  1558  0009E6  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  1559  0009EA  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  1560  0009EE  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  1561  0009F2  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  1562  0009F6  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  1563  0009FA  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  1564  0009FE  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  1565  000A02                     l2324:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1568  000A02  BE43               	btfsc	(dtoa@i+1)^0,7,c
  1569  000A04  EF0C  F005         	goto	u1781
  1570  000A08  5043               	movf	(dtoa@i+1)^0,w,c
  1571  000A0A  E108               	bnz	u1780
  1572  000A0C  0442               	decf	dtoa@i^0,w,c
  1573  000A0E  A0D8               	btfss	status,0,c
  1574  000A10  EF0C  F005         	goto	u1781
  1575  000A14  EF0E  F005         	goto	u1780
  1576  000A18                     u1781:
  1577  000A18  EF3E  F005         	goto	l2334
  1578  000A1C                     u1780:
  1579  000A1C  503A               	movf	dtoa@n^0,w,c
  1580  000A1E  103B               	iorwf	(dtoa@n+1)^0,w,c
  1581  000A20  103C               	iorwf	(dtoa@n+2)^0,w,c
  1582  000A22  103D               	iorwf	(dtoa@n+3)^0,w,c
  1583  000A24  103E               	iorwf	(dtoa@n+4)^0,w,c
  1584  000A26  103F               	iorwf	(dtoa@n+5)^0,w,c
  1585  000A28  1040               	iorwf	(dtoa@n+6)^0,w,c
  1586  000A2A  1041               	iorwf	(dtoa@n+7)^0,w,c
  1587  000A2C  A4D8               	btfss	status,2,c
  1588  000A2E  EF1B  F005         	goto	u1791
  1589  000A32  EF1D  F005         	goto	u1790
  1590  000A36                     u1791:
  1591  000A36  EF85  F004         	goto	l2314
  1592  000A3A                     u1790:
  1593  000A3A  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1594  000A3C  EF2A  F005         	goto	u1800
  1595  000A40  5035               	movf	(dtoa@p+1)^0,w,c
  1596  000A42  E106               	bnz	u1801
  1597  000A44  0434               	decf	dtoa@p^0,w,c
  1598  000A46  B0D8               	btfsc	status,0,c
  1599  000A48  EF28  F005         	goto	u1801
  1600  000A4C  EF2A  F005         	goto	u1800
  1601  000A50                     u1801:
  1602  000A50  EF85  F004         	goto	l2314
  1603  000A54                     u1800:
  1604  000A54  BE37               	btfsc	(dtoa@w+1)^0,7,c
  1605  000A56  EF35  F005         	goto	u1811
  1606  000A5A  5037               	movf	(dtoa@w+1)^0,w,c
  1607  000A5C  E108               	bnz	u1810
  1608  000A5E  0436               	decf	dtoa@w^0,w,c
  1609  000A60  A0D8               	btfss	status,0,c
  1610  000A62  EF35  F005         	goto	u1811
  1611  000A66  EF37  F005         	goto	u1810
  1612  000A6A                     u1811:
  1613  000A6A  EF3E  F005         	goto	l2334
  1614  000A6E                     u1810:
  1615  000A6E  B258               	btfsc	_flags^0,1,c
  1616  000A70  EF3C  F005         	goto	u1821
  1617  000A74  EF3E  F005         	goto	u1820
  1618  000A78                     u1821:
  1619  000A78  EF85  F004         	goto	l2314
  1620  000A7C                     u1820:
  1621  000A7C                     l2334:
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1624  000A7C  5038               	movf	dtoa@s^0,w,c
  1625  000A7E  1039               	iorwf	(dtoa@s+1)^0,w,c
  1626  000A80  A4D8               	btfss	status,2,c
  1627  000A82  EF45  F005         	goto	u1831
  1628  000A86  EF47  F005         	goto	u1830
  1629  000A8A                     u1831:
  1630  000A8A  EF4E  F005         	goto	l2338
  1631  000A8E                     u1830:
  1632  000A8E  A458               	btfss	_flags^0,2,c
  1633  000A90  EF4C  F005         	goto	u1841
  1634  000A94  EF4E  F005         	goto	u1840
  1635  000A98                     u1841:
  1636  000A98  EF6C  F005         	goto	l2348
  1637  000A9C                     u1840:
  1638  000A9C                     l2338:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  1641  000A9C  0642               	decf	dtoa@i^0,f,c
  1642  000A9E  A0D8               	btfss	status,0,c
  1643  000AA0  0643               	decf	(dtoa@i+1)^0,f,c
  1644  000AA2                     
  1645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1646  000AA2  5038               	movf	dtoa@s^0,w,c
  1647  000AA4  1039               	iorwf	(dtoa@s+1)^0,w,c
  1648  000AA6  A4D8               	btfss	status,2,c
  1649  000AA8  EF58  F005         	goto	u1851
  1650  000AAC  EF5A  F005         	goto	u1850
  1651  000AB0                     u1851:
  1652  000AB0  EF60  F005         	goto	l2344
  1653  000AB4                     u1850:
  1654  000AB4  0E00               	movlw	0
  1655  000AB6  6E33               	movwf	(_dtoa$1534+1)^0,c
  1656  000AB8  0E2B               	movlw	43
  1657  000ABA  6E32               	movwf	_dtoa$1534^0,c
  1658  000ABC  EF64  F005         	goto	l2346
  1659  000AC0                     l2344:
  1660  000AC0  0E00               	movlw	0
  1661  000AC2  6E33               	movwf	(_dtoa$1534+1)^0,c
  1662  000AC4  0E2D               	movlw	45
  1663  000AC6  6E32               	movwf	_dtoa$1534^0,c
  1664  000AC8                     l2346:
  1665  000AC8  0E74               	movlw	low _dbuf
  1666  000ACA  2442               	addwf	dtoa@i^0,w,c
  1667  000ACC  6ED9               	movwf	fsr2l,c
  1668  000ACE  0E00               	movlw	high _dbuf
  1669  000AD0  2043               	addwfc	(dtoa@i+1)^0,w,c
  1670  000AD2  6EDA               	movwf	fsr2h,c
  1671  000AD4  C032  FFDF         	movff	_dtoa$1534,indf2
  1672  000AD8                     l2348:
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1675  000AD8  C020  F015         	movff	dtoa@fp,pad@fp
  1676  000ADC  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1677  000AE0  0E74               	movlw	low _dbuf
  1678  000AE2  2442               	addwf	dtoa@i^0,w,c
  1679  000AE4  6E17               	movwf	pad@buf^0,c
  1680  000AE6  0E00               	movlw	high _dbuf
  1681  000AE8  2043               	addwfc	(dtoa@i+1)^0,w,c
  1682  000AEA  6E18               	movwf	(pad@buf+1)^0,c
  1683  000AEC  C036  F019         	movff	dtoa@w,pad@p
  1684  000AF0  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1685  000AF4  ECD8  F009         	call	_pad	;wreg free
  1686  000AF8  C015  F020         	movff	?_pad,?_dtoa
  1687  000AFC  C016  F021         	movff	?_pad+1,?_dtoa+1
  1688  000B00  0012               	return		;funcret
  1689  000B02                     __end_of_dtoa:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _pad *****************
  1693 ;; Defined at:
  1694 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1697 ;;		 -> sprintf@f(6), 
  1698 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1699 ;;		 -> dbuf(32), 
  1700 ;;  p               2   24[COMRAM] int 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  w               2   29[COMRAM] int 
  1703 ;;  i               2   27[COMRAM] int 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2   20[COMRAM] int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1713 ;;      Params:         6       0       0       0       0       0       0       0       0
  1714 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1715 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1716 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:       11 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    5
  1720 ;; This function calls:
  1721 ;;		_fputc
  1722 ;;		_fputs
  1723 ;;		_strlen
  1724 ;; This function is called by:
  1725 ;;		_dtoa
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text8
  1730  0013B0                     __ptext8:
  1731                           	callstack 0
  1732  0013B0                     _pad:
  1733                           	callstack 19
  1734  0013B0                     
  1735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1736  0013B0  A058               	btfss	_flags^0,0,c
  1737  0013B2  EFDD  F009         	goto	u1661
  1738  0013B6  EFDF  F009         	goto	u1660
  1739  0013BA                     u1661:
  1740  0013BA  EFE9  F009         	goto	l2268
  1741  0013BE                     u1660:
  1742  0013BE                     
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1744  0013BE  C017  F00E         	movff	pad@buf,fputs@s
  1745  0013C2  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1746  0013C6  C015  F010         	movff	pad@fp,fputs@fp
  1747  0013CA  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1748  0013CE  ECCE  F00B         	call	_fputs	;wreg free
  1749  0013D2                     l2268:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1752  0013D2  BE1A               	btfsc	(pad@p+1)^0,7,c
  1753  0013D4  EFEE  F009         	goto	u1671
  1754  0013D8  EFF0  F009         	goto	u1670
  1755  0013DC                     u1671:
  1756  0013DC  EFF6  F009         	goto	l2272
  1757  0013E0                     u1670:
  1758  0013E0  C019  F01E         	movff	pad@p,pad@w
  1759  0013E4  C01A  F01F         	movff	pad@p+1,pad@w+1
  1760  0013E8  EFFA  F009         	goto	l939
  1761  0013EC                     l2272:
  1762  0013EC  0E00               	movlw	0
  1763  0013EE  6E1F               	movwf	(pad@w+1)^0,c
  1764  0013F0  0E00               	movlw	0
  1765  0013F2  6E1E               	movwf	pad@w^0,c
  1766  0013F4                     l939:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1769  0013F4  0E00               	movlw	0
  1770  0013F6  6E1D               	movwf	(pad@i+1)^0,c
  1771  0013F8  0E00               	movlw	0
  1772  0013FA  6E1C               	movwf	pad@i^0,c
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1775  0013FC  EF0C  F00A         	goto	l2278
  1776  001400                     l2274:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1779  001400  0E00               	movlw	0
  1780  001402  6E06               	movwf	(fputc@c+1)^0,c
  1781  001404  0E20               	movlw	32
  1782  001406  6E05               	movwf	fputc@c^0,c
  1783  001408  C015  F007         	movff	pad@fp,fputc@fp
  1784  00140C  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1785  001410  EC73  F009         	call	_fputc	;wreg free
  1786  001414                     
  1787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1788  001414  4A1C               	infsnz	pad@i^0,f,c
  1789  001416  2A1D               	incf	(pad@i+1)^0,f,c
  1790  001418                     l2278:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1793  001418  501E               	movf	pad@w^0,w,c
  1794  00141A  5C1C               	subwf	pad@i^0,w,c
  1795  00141C  501D               	movf	(pad@i+1)^0,w,c
  1796  00141E  0A80               	xorlw	128
  1797  001420  6E1B               	movwf	??_pad^0,c
  1798  001422  501F               	movf	(pad@w+1)^0,w,c
  1799  001424  0A80               	xorlw	128
  1800  001426  581B               	subwfb	??_pad^0,w,c
  1801  001428  A0D8               	btfss	status,0,c
  1802  00142A  EF19  F00A         	goto	u1681
  1803  00142E  EF1B  F00A         	goto	u1680
  1804  001432                     u1681:
  1805  001432  EF00  F00A         	goto	l2274
  1806  001436                     u1680:
  1807  001436                     
  1808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1809  001436  B058               	btfsc	_flags^0,0,c
  1810  001438  EF20  F00A         	goto	u1691
  1811  00143C  EF22  F00A         	goto	u1690
  1812  001440                     u1691:
  1813  001440  EF2C  F00A         	goto	l2282
  1814  001444                     u1690:
  1815  001444                     
  1816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1817  001444  C017  F00E         	movff	pad@buf,fputs@s
  1818  001448  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1819  00144C  C015  F010         	movff	pad@fp,fputs@fp
  1820  001450  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1821  001454  ECCE  F00B         	call	_fputs	;wreg free
  1822  001458                     l2282:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1825  001458  C017  F005         	movff	pad@buf,strlen@s
  1826  00145C  C018  F006         	movff	pad@buf+1,strlen@s+1
  1827  001460  EC4F  F00C         	call	_strlen	;wreg free
  1828  001464  501E               	movf	pad@w^0,w,c
  1829  001466  2405               	addwf	?_strlen^0,w,c
  1830  001468  6E15               	movwf	?_pad^0,c
  1831  00146A  501F               	movf	(pad@w+1)^0,w,c
  1832  00146C  2006               	addwfc	(?_strlen+1)^0,w,c
  1833  00146E  6E16               	movwf	(?_pad+1)^0,c
  1834  001470  0012               	return		;funcret
  1835  001472                     __end_of_pad:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _strlen *****************
  1839 ;; Defined at:
  1840 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1843 ;;		 -> dbuf(32), 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  a               2    6[COMRAM] PTR const unsigned char 
  1846 ;;		 -> dbuf(32), 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2    4[COMRAM] unsigned int 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1856 ;;      Params:         2       0       0       0       0       0       0       0       0
  1857 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1859 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1860 ;;Total ram usage:        4 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    2
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_pad
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text9
  1871  00189E                     __ptext9:
  1872                           	callstack 0
  1873  00189E                     _strlen:
  1874                           	callstack 21
  1875  00189E  C005  F007         	movff	strlen@s,strlen@a
  1876  0018A2  C006  F008         	movff	strlen@s+1,strlen@a+1
  1877  0018A6  EF57  F00C         	goto	l2178
  1878  0018AA                     l2176:
  1879  0018AA  4A05               	infsnz	strlen@s^0,f,c
  1880  0018AC  2A06               	incf	(strlen@s+1)^0,f,c
  1881  0018AE                     l2178:
  1882  0018AE  C005  FFD9         	movff	strlen@s,fsr2l
  1883  0018B2  C006  FFDA         	movff	strlen@s+1,fsr2h
  1884  0018B6  50DF               	movf	indf2,w,c
  1885  0018B8  A4D8               	btfss	status,2,c
  1886  0018BA  EF61  F00C         	goto	u1521
  1887  0018BE  EF63  F00C         	goto	u1520
  1888  0018C2                     u1521:
  1889  0018C2  EF55  F00C         	goto	l2176
  1890  0018C6                     u1520:
  1891  0018C6  5007               	movf	strlen@a^0,w,c
  1892  0018C8  5C05               	subwf	strlen@s^0,w,c
  1893  0018CA  6E05               	movwf	?_strlen^0,c
  1894  0018CC  5008               	movf	(strlen@a+1)^0,w,c
  1895  0018CE  5806               	subwfb	(strlen@s+1)^0,w,c
  1896  0018D0  6E06               	movwf	(?_strlen+1)^0,c
  1897  0018D2  0012               	return		;funcret
  1898  0018D4                     __end_of_strlen:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _fputs *****************
  1902 ;; Defined at:
  1903 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1906 ;;		 -> dbuf(32), 
  1907 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1908 ;;		 -> sprintf@f(6), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  i               2   18[COMRAM] int 
  1911 ;;  c               1   17[COMRAM] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2   13[COMRAM] int 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1921 ;;      Params:         4       0       0       0       0       0       0       0       0
  1922 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1924 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1925 ;;Total ram usage:        7 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    4
  1928 ;; This function calls:
  1929 ;;		_fputc
  1930 ;; This function is called by:
  1931 ;;		_pad
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text10
  1936  00179C                     __ptext10:
  1937                           	callstack 0
  1938  00179C                     _fputs:
  1939                           	callstack 19
  1940  00179C  0E00               	movlw	0
  1941  00179E  6E14               	movwf	(fputs@i+1)^0,c
  1942  0017A0  0E00               	movlw	0
  1943  0017A2  6E13               	movwf	fputs@i^0,c
  1944  0017A4  EFDF  F00B         	goto	l2172
  1945  0017A8                     l2168:
  1946  0017A8  C012  F005         	movff	fputs@c,fputc@c
  1947  0017AC  6A06               	clrf	(fputc@c+1)^0,c
  1948  0017AE  C010  F007         	movff	fputs@fp,fputc@fp
  1949  0017B2  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1950  0017B6  EC73  F009         	call	_fputc	;wreg free
  1951  0017BA  4A13               	infsnz	fputs@i^0,f,c
  1952  0017BC  2A14               	incf	(fputs@i+1)^0,f,c
  1953  0017BE                     l2172:
  1954  0017BE  5013               	movf	fputs@i^0,w,c
  1955  0017C0  240E               	addwf	fputs@s^0,w,c
  1956  0017C2  6ED9               	movwf	fsr2l,c
  1957  0017C4  5014               	movf	(fputs@i+1)^0,w,c
  1958  0017C6  200F               	addwfc	(fputs@s+1)^0,w,c
  1959  0017C8  6EDA               	movwf	fsr2h,c
  1960  0017CA  50DF               	movf	indf2,w,c
  1961  0017CC  6E12               	movwf	fputs@c^0,c
  1962  0017CE  5012               	movf	fputs@c^0,w,c
  1963  0017D0  A4D8               	btfss	status,2,c
  1964  0017D2  EFED  F00B         	goto	u1511
  1965  0017D6  EFEF  F00B         	goto	u1510
  1966  0017DA                     u1511:
  1967  0017DA  EFD4  F00B         	goto	l2168
  1968  0017DE                     u1510:
  1969  0017DE  0012               	return		;funcret
  1970  0017E0                     __end_of_fputs:
  1971                           	callstack 0
  1972                           
  1973 ;; *************** function _fputc *****************
  1974 ;; Defined at:
  1975 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  c               2    4[COMRAM] int 
  1978 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1979 ;;		 -> sprintf@f(6), 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2    4[COMRAM] int 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1991 ;;      Params:         4       0       0       0       0       0       0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1993 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1994 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1995 ;;Total ram usage:        9 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    3
  1998 ;; This function calls:
  1999 ;;		_putch
  2000 ;; This function is called by:
  2001 ;;		_pad
  2002 ;;		_vfpfcnvrt
  2003 ;;		_fputs
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text11
  2008  0012E6                     __ptext11:
  2009                           	callstack 0
  2010  0012E6                     _fputc:
  2011                           	callstack 22
  2012  0012E6  5007               	movf	fputc@fp^0,w,c
  2013  0012E8  1008               	iorwf	(fputc@fp+1)^0,w,c
  2014  0012EA  B4D8               	btfsc	status,2,c
  2015  0012EC  EF7A  F009         	goto	u1471
  2016  0012F0  EF7C  F009         	goto	u1470
  2017  0012F4                     u1471:
  2018  0012F4  EF85  F009         	goto	l2156
  2019  0012F8                     u1470:
  2020  0012F8  5007               	movf	fputc@fp^0,w,c
  2021  0012FA  1008               	iorwf	(fputc@fp+1)^0,w,c
  2022  0012FC  A4D8               	btfss	status,2,c
  2023  0012FE  EF83  F009         	goto	u1481
  2024  001302  EF85  F009         	goto	u1480
  2025  001306                     u1481:
  2026  001306  EF8A  F009         	goto	l2158
  2027  00130A                     u1480:
  2028  00130A                     l2156:
  2029  00130A  5005               	movf	fputc@c^0,w,c
  2030  00130C  EC98  F00C         	call	_putch
  2031  001310  EFD7  F009         	goto	l1003
  2032  001314                     l2158:
  2033  001314  EE20 F004          	lfsr	2,4
  2034  001318  5007               	movf	fputc@fp^0,w,c
  2035  00131A  26D9               	addwf	fsr2l,f,c
  2036  00131C  5008               	movf	(fputc@fp+1)^0,w,c
  2037  00131E  22DA               	addwfc	fsr2h,f,c
  2038  001320  50DE               	movf	postinc2,w,c
  2039  001322  10DE               	iorwf	postinc2,w,c
  2040  001324  B4D8               	btfsc	status,2,c
  2041  001326  EF97  F009         	goto	u1491
  2042  00132A  EF99  F009         	goto	u1490
  2043  00132E                     u1491:
  2044  00132E  EFB4  F009         	goto	l2162
  2045  001332                     u1490:
  2046  001332  EE20 F004          	lfsr	2,4
  2047  001336  5007               	movf	fputc@fp^0,w,c
  2048  001338  26D9               	addwf	fsr2l,f,c
  2049  00133A  5008               	movf	(fputc@fp+1)^0,w,c
  2050  00133C  22DA               	addwfc	fsr2h,f,c
  2051  00133E  EE10 F002          	lfsr	1,2
  2052  001342  5007               	movf	fputc@fp^0,w,c
  2053  001344  26E1               	addwf	fsr1l,f,c
  2054  001346  5008               	movf	(fputc@fp+1)^0,w,c
  2055  001348  22E2               	addwfc	fsr1h,f,c
  2056  00134A  50DE               	movf	postinc2,w,c
  2057  00134C  5CE6               	subwf	postinc1,w,c
  2058  00134E  50E6               	movf	postinc1,w,c
  2059  001350  0A80               	xorlw	128
  2060  001352  6E0D               	movwf	(??_fputc+4)^0,c
  2061  001354  50DE               	movf	postinc2,w,c
  2062  001356  0A80               	xorlw	128
  2063  001358  580D               	subwfb	(??_fputc+4)^0,w,c
  2064  00135A  B0D8               	btfsc	status,0,c
  2065  00135C  EFB2  F009         	goto	u1501
  2066  001360  EFB4  F009         	goto	u1500
  2067  001364                     u1501:
  2068  001364  EFD7  F009         	goto	l1003
  2069  001368                     u1500:
  2070  001368                     l2162:
  2071  001368  EE20 F002          	lfsr	2,2
  2072  00136C  5007               	movf	fputc@fp^0,w,c
  2073  00136E  26D9               	addwf	fsr2l,f,c
  2074  001370  5008               	movf	(fputc@fp+1)^0,w,c
  2075  001372  22DA               	addwfc	fsr2h,f,c
  2076  001374  CFDE F009          	movff	postinc2,??_fputc
  2077  001378  CFDD F00A          	movff	postdec2,??_fputc+1
  2078  00137C  C007  FFD9         	movff	fputc@fp,fsr2l
  2079  001380  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2080  001384  CFDE F00B          	movff	postinc2,??_fputc+2
  2081  001388  CFDD F00C          	movff	postdec2,??_fputc+3
  2082  00138C  5009               	movf	??_fputc^0,w,c
  2083  00138E  240B               	addwf	(??_fputc+2)^0,w,c
  2084  001390  6ED9               	movwf	fsr2l,c
  2085  001392  500A               	movf	(??_fputc+1)^0,w,c
  2086  001394  200C               	addwfc	(??_fputc+3)^0,w,c
  2087  001396  6EDA               	movwf	fsr2h,c
  2088  001398  C005  FFDF         	movff	fputc@c,indf2
  2089  00139C  EE20 F002          	lfsr	2,2
  2090  0013A0  5007               	movf	fputc@fp^0,w,c
  2091  0013A2  26D9               	addwf	fsr2l,f,c
  2092  0013A4  5008               	movf	(fputc@fp+1)^0,w,c
  2093  0013A6  22DA               	addwfc	fsr2h,f,c
  2094  0013A8  2ADE               	incf	postinc2,f,c
  2095  0013AA  0E00               	movlw	0
  2096  0013AC  22DD               	addwfc	postdec2,f,c
  2097  0013AE                     l1003:
  2098  0013AE  0012               	return		;funcret
  2099  0013B0                     __end_of_fputc:
  2100                           	callstack 0
  2101                           
  2102 ;; *************** function _putch *****************
  2103 ;; Defined at:
  2104 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  c               1    wreg     unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  c               1    0[COMRAM] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        0 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    2
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_fputc
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text12
  2133  001930                     __ptext12:
  2134                           	callstack 0
  2135  001930                     _putch:
  2136                           	callstack 22
  2137  001930  0012               	return		;funcret
  2138  001932                     __end_of_putch:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _abs *****************
  2142 ;; Defined at:
  2143 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  a               2   22[COMRAM] int 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  2   22[COMRAM] int 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2157 ;;      Params:         2       0       0       0       0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2159 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2160 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2161 ;;Total ram usage:        4 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    2
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_dtoa
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text13
  2172  001822                     __ptext13:
  2173                           	callstack 0
  2174  001822                     _abs:
  2175                           	callstack 22
  2176  001822  BE18               	btfsc	(abs@a+1)^0,7,c
  2177  001824  EF1E  F00C         	goto	u1700
  2178  001828  5018               	movf	(abs@a+1)^0,w,c
  2179  00182A  E106               	bnz	u1701
  2180  00182C  0417               	decf	abs@a^0,w,c
  2181  00182E  B0D8               	btfsc	status,0,c
  2182  001830  EF1C  F00C         	goto	u1701
  2183  001834  EF1E  F00C         	goto	u1700
  2184  001838                     u1701:
  2185  001838  EF2C  F00C         	goto	l988
  2186  00183C                     u1700:
  2187  00183C  C017  F019         	movff	abs@a,??_abs
  2188  001840  C018  F01A         	movff	abs@a+1,??_abs+1
  2189  001844  1E19               	comf	??_abs^0,f,c
  2190  001846  1E1A               	comf	(??_abs+1)^0,f,c
  2191  001848  4A19               	infsnz	??_abs^0,f,c
  2192  00184A  2A1A               	incf	(??_abs+1)^0,f,c
  2193  00184C  C019  F017         	movff	??_abs,?_abs
  2194  001850  C01A  F018         	movff	??_abs+1,?_abs+1
  2195  001854  EF30  F00C         	goto	l991
  2196  001858                     l988:
  2197  001858  C017  F017         	movff	abs@a,?_abs
  2198  00185C  C018  F018         	movff	abs@a+1,?_abs+1
  2199  001860                     l991:
  2200  001860  0012               	return		;funcret
  2201  001862                     __end_of_abs:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function ___aomod *****************
  2205 ;; Defined at:
  2206 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  dividend        8    4[COMRAM] long long 
  2209 ;;  divisor         8   12[COMRAM] long long 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  sign            1   21[COMRAM] unsigned char 
  2212 ;;  counter         1   20[COMRAM] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  8    4[COMRAM] long long 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2222 ;;      Params:        16       0       0       0       0       0       0       0       0
  2223 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2225 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2226 ;;Total ram usage:       18 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    2
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_dtoa
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text14
  2237  000E3E                     __ptext14:
  2238                           	callstack 0
  2239  000E3E                     ___aomod:
  2240                           	callstack 22
  2241  000E3E  0E00               	movlw	0
  2242  000E40  6E16               	movwf	___aomod@sign^0,c
  2243  000E42  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2244  000E44  EF28  F007         	goto	u1600
  2245  000E48  EF26  F007         	goto	u1601
  2246  000E4C                     u1601:
  2247  000E4C  EF3A  F007         	goto	l2236
  2248  000E50                     u1600:
  2249  000E50  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2250  000E52  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2251  000E54  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2252  000E56  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2253  000E58  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2254  000E5A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2255  000E5C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2256  000E5E  6C05               	negf	___aomod@dividend^0,c
  2257  000E60  0E00               	movlw	0
  2258  000E62  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2259  000E64  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2260  000E66  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2261  000E68  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2262  000E6A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2263  000E6C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2264  000E6E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2265  000E70  0E01               	movlw	1
  2266  000E72  6E16               	movwf	___aomod@sign^0,c
  2267  000E74                     l2236:
  2268  000E74  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2269  000E76  EF41  F007         	goto	u1610
  2270  000E7A  EF3F  F007         	goto	u1611
  2271  000E7E                     u1611:
  2272  000E7E  EF51  F007         	goto	l2240
  2273  000E82                     u1610:
  2274  000E82  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2275  000E84  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2276  000E86  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2277  000E88  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2278  000E8A  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2279  000E8C  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2280  000E8E  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2281  000E90  6C0D               	negf	___aomod@divisor^0,c
  2282  000E92  0E00               	movlw	0
  2283  000E94  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2284  000E96  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2285  000E98  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2286  000E9A  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2287  000E9C  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2288  000E9E  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2289  000EA0  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2290  000EA2                     l2240:
  2291  000EA2  500D               	movf	___aomod@divisor^0,w,c
  2292  000EA4  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2293  000EA6  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2294  000EA8  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2295  000EAA  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2296  000EAC  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2297  000EAE  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2298  000EB0  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2299  000EB2  B4D8               	btfsc	status,2,c
  2300  000EB4  EF5E  F007         	goto	u1621
  2301  000EB8  EF60  F007         	goto	u1620
  2302  000EBC                     u1621:
  2303  000EBC  EFA8  F007         	goto	l2256
  2304  000EC0                     u1620:
  2305  000EC0  0E01               	movlw	1
  2306  000EC2  6E15               	movwf	___aomod@counter^0,c
  2307  000EC4  EF6E  F007         	goto	l2246
  2308  000EC8                     l2244:
  2309  000EC8  90D8               	bcf	status,0,c
  2310  000ECA  360D               	rlcf	___aomod@divisor^0,f,c
  2311  000ECC  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2312  000ECE  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2313  000ED0  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2314  000ED2  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2315  000ED4  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2316  000ED6  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2317  000ED8  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2318  000EDA  2A15               	incf	___aomod@counter^0,f,c
  2319  000EDC                     l2246:
  2320  000EDC  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2321  000EDE  EF73  F007         	goto	u1631
  2322  000EE2  EF75  F007         	goto	u1630
  2323  000EE6                     u1631:
  2324  000EE6  EF64  F007         	goto	l2244
  2325  000EEA                     u1630:
  2326  000EEA                     l2248:
  2327  000EEA  500D               	movf	___aomod@divisor^0,w,c
  2328  000EEC  5C05               	subwf	___aomod@dividend^0,w,c
  2329  000EEE  500E               	movf	(___aomod@divisor+1)^0,w,c
  2330  000EF0  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2331  000EF2  500F               	movf	(___aomod@divisor+2)^0,w,c
  2332  000EF4  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2333  000EF6  5010               	movf	(___aomod@divisor+3)^0,w,c
  2334  000EF8  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2335  000EFA  5011               	movf	(___aomod@divisor+4)^0,w,c
  2336  000EFC  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2337  000EFE  5012               	movf	(___aomod@divisor+5)^0,w,c
  2338  000F00  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2339  000F02  5013               	movf	(___aomod@divisor+6)^0,w,c
  2340  000F04  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2341  000F06  5014               	movf	(___aomod@divisor+7)^0,w,c
  2342  000F08  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2343  000F0A  A0D8               	btfss	status,0,c
  2344  000F0C  EF8A  F007         	goto	u1641
  2345  000F10  EF8C  F007         	goto	u1640
  2346  000F14                     u1641:
  2347  000F14  EF9C  F007         	goto	l2252
  2348  000F18                     u1640:
  2349  000F18  500D               	movf	___aomod@divisor^0,w,c
  2350  000F1A  5E05               	subwf	___aomod@dividend^0,f,c
  2351  000F1C  500E               	movf	(___aomod@divisor+1)^0,w,c
  2352  000F1E  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2353  000F20  500F               	movf	(___aomod@divisor+2)^0,w,c
  2354  000F22  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2355  000F24  5010               	movf	(___aomod@divisor+3)^0,w,c
  2356  000F26  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2357  000F28  5011               	movf	(___aomod@divisor+4)^0,w,c
  2358  000F2A  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2359  000F2C  5012               	movf	(___aomod@divisor+5)^0,w,c
  2360  000F2E  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2361  000F30  5013               	movf	(___aomod@divisor+6)^0,w,c
  2362  000F32  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2363  000F34  5014               	movf	(___aomod@divisor+7)^0,w,c
  2364  000F36  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2365  000F38                     l2252:
  2366  000F38  90D8               	bcf	status,0,c
  2367  000F3A  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2368  000F3C  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2369  000F3E  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2370  000F40  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2371  000F42  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2372  000F44  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2373  000F46  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2374  000F48  320D               	rrcf	___aomod@divisor^0,f,c
  2375  000F4A  2E15               	decfsz	___aomod@counter^0,f,c
  2376  000F4C  EF75  F007         	goto	l2248
  2377  000F50                     l2256:
  2378  000F50  5016               	movf	___aomod@sign^0,w,c
  2379  000F52  B4D8               	btfsc	status,2,c
  2380  000F54  EFAE  F007         	goto	u1651
  2381  000F58  EFB0  F007         	goto	u1650
  2382  000F5C                     u1651:
  2383  000F5C  EFC0  F007         	goto	l2260
  2384  000F60                     u1650:
  2385  000F60  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2386  000F62  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2387  000F64  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2388  000F66  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2389  000F68  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2390  000F6A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2391  000F6C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2392  000F6E  6C05               	negf	___aomod@dividend^0,c
  2393  000F70  0E00               	movlw	0
  2394  000F72  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2395  000F74  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2396  000F76  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2397  000F78  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2398  000F7A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2399  000F7C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2400  000F7E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2401  000F80                     l2260:
  2402  000F80  C005  F005         	movff	___aomod@dividend,?___aomod
  2403  000F84  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2404  000F88  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2405  000F8C  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2406  000F90  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2407  000F94  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2408  000F98  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2409  000F9C  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2410  000FA0  0012               	return		;funcret
  2411  000FA2                     __end_of___aomod:
  2412                           	callstack 0
  2413                           
  2414 ;; *************** function ___aodiv *****************
  2415 ;; Defined at:
  2416 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  dividend        8    4[COMRAM] long long 
  2419 ;;  divisor         8   12[COMRAM] long long 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  quotient        8   22[COMRAM] long long 
  2422 ;;  sign            1   21[COMRAM] unsigned char 
  2423 ;;  counter         1   20[COMRAM] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  8    4[COMRAM] long long 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2433 ;;      Params:        16       0       0       0       0       0       0       0       0
  2434 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2436 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2437 ;;Total ram usage:       26 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    2
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_dtoa
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text15
  2448  000CB6                     __ptext15:
  2449                           	callstack 0
  2450  000CB6                     ___aodiv:
  2451                           	callstack 22
  2452  000CB6  0E00               	movlw	0
  2453  000CB8  6E16               	movwf	___aodiv@sign^0,c
  2454  000CBA  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2455  000CBC  EF64  F006         	goto	u1530
  2456  000CC0  EF62  F006         	goto	u1531
  2457  000CC4                     u1531:
  2458  000CC4  EF76  F006         	goto	l2192
  2459  000CC8                     u1530:
  2460  000CC8  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2461  000CCA  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2462  000CCC  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2463  000CCE  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2464  000CD0  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2465  000CD2  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2466  000CD4  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2467  000CD6  6C0D               	negf	___aodiv@divisor^0,c
  2468  000CD8  0E00               	movlw	0
  2469  000CDA  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2470  000CDC  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2471  000CDE  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2472  000CE0  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2473  000CE2  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2474  000CE4  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2475  000CE6  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2476  000CE8  0E01               	movlw	1
  2477  000CEA  6E16               	movwf	___aodiv@sign^0,c
  2478  000CEC                     l2192:
  2479  000CEC  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2480  000CEE  EF7D  F006         	goto	u1540
  2481  000CF2  EF7B  F006         	goto	u1541
  2482  000CF6                     u1541:
  2483  000CF6  EF8F  F006         	goto	l2198
  2484  000CFA                     u1540:
  2485  000CFA  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2486  000CFC  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2487  000CFE  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2488  000D00  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2489  000D02  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2490  000D04  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2491  000D06  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2492  000D08  6C05               	negf	___aodiv@dividend^0,c
  2493  000D0A  0E00               	movlw	0
  2494  000D0C  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2495  000D0E  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2496  000D10  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2497  000D12  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2498  000D14  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2499  000D16  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2500  000D18  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2501  000D1A  0E01               	movlw	1
  2502  000D1C  1A16               	xorwf	___aodiv@sign^0,f,c
  2503  000D1E                     l2198:
  2504  000D1E  EE20  F017         	lfsr	2,___aodiv@quotient
  2505  000D22  0E07               	movlw	7
  2506  000D24                     u1551:
  2507  000D24  6ADE               	clrf	postinc2,c
  2508  000D26  06E8               	decf	wreg,f,c
  2509  000D28  E2FD               	bc	u1551
  2510  000D2A  500D               	movf	___aodiv@divisor^0,w,c
  2511  000D2C  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2512  000D2E  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2513  000D30  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2514  000D32  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2515  000D34  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2516  000D36  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2517  000D38  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2518  000D3A  B4D8               	btfsc	status,2,c
  2519  000D3C  EFA2  F006         	goto	u1561
  2520  000D40  EFA4  F006         	goto	u1560
  2521  000D44                     u1561:
  2522  000D44  EFF6  F006         	goto	l2220
  2523  000D48                     u1560:
  2524  000D48  0E01               	movlw	1
  2525  000D4A  6E15               	movwf	___aodiv@counter^0,c
  2526  000D4C  EFB2  F006         	goto	l2206
  2527  000D50                     l2204:
  2528  000D50  90D8               	bcf	status,0,c
  2529  000D52  360D               	rlcf	___aodiv@divisor^0,f,c
  2530  000D54  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2531  000D56  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2532  000D58  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2533  000D5A  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2534  000D5C  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2535  000D5E  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2536  000D60  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2537  000D62  2A15               	incf	___aodiv@counter^0,f,c
  2538  000D64                     l2206:
  2539  000D64  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2540  000D66  EFB7  F006         	goto	u1571
  2541  000D6A  EFB9  F006         	goto	u1570
  2542  000D6E                     u1571:
  2543  000D6E  EFA8  F006         	goto	l2204
  2544  000D72                     u1570:
  2545  000D72                     l2208:
  2546  000D72  90D8               	bcf	status,0,c
  2547  000D74  3617               	rlcf	___aodiv@quotient^0,f,c
  2548  000D76  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2549  000D78  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2550  000D7A  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2551  000D7C  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2552  000D7E  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2553  000D80  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2554  000D82  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2555  000D84  500D               	movf	___aodiv@divisor^0,w,c
  2556  000D86  5C05               	subwf	___aodiv@dividend^0,w,c
  2557  000D88  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2558  000D8A  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2559  000D8C  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2560  000D8E  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2561  000D90  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2562  000D92  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2563  000D94  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2564  000D96  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2565  000D98  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2566  000D9A  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2567  000D9C  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2568  000D9E  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2569  000DA0  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2570  000DA2  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2571  000DA4  A0D8               	btfss	status,0,c
  2572  000DA6  EFD7  F006         	goto	u1581
  2573  000DAA  EFD9  F006         	goto	u1580
  2574  000DAE                     u1581:
  2575  000DAE  EFEA  F006         	goto	l2216
  2576  000DB2                     u1580:
  2577  000DB2  500D               	movf	___aodiv@divisor^0,w,c
  2578  000DB4  5E05               	subwf	___aodiv@dividend^0,f,c
  2579  000DB6  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2580  000DB8  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2581  000DBA  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2582  000DBC  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2583  000DBE  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2584  000DC0  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2585  000DC2  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2586  000DC4  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2587  000DC6  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2588  000DC8  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2589  000DCA  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2590  000DCC  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2591  000DCE  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2592  000DD0  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2593  000DD2  8017               	bsf	___aodiv@quotient^0,0,c
  2594  000DD4                     l2216:
  2595  000DD4  90D8               	bcf	status,0,c
  2596  000DD6  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2597  000DD8  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2598  000DDA  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2599  000DDC  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2600  000DDE  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2601  000DE0  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2602  000DE2  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2603  000DE4  320D               	rrcf	___aodiv@divisor^0,f,c
  2604  000DE6  2E15               	decfsz	___aodiv@counter^0,f,c
  2605  000DE8  EFB9  F006         	goto	l2208
  2606  000DEC                     l2220:
  2607  000DEC  5016               	movf	___aodiv@sign^0,w,c
  2608  000DEE  B4D8               	btfsc	status,2,c
  2609  000DF0  EFFC  F006         	goto	u1591
  2610  000DF4  EFFE  F006         	goto	u1590
  2611  000DF8                     u1591:
  2612  000DF8  EF0E  F007         	goto	l2224
  2613  000DFC                     u1590:
  2614  000DFC  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2615  000DFE  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2616  000E00  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2617  000E02  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2618  000E04  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2619  000E06  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2620  000E08  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2621  000E0A  6C17               	negf	___aodiv@quotient^0,c
  2622  000E0C  0E00               	movlw	0
  2623  000E0E  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2624  000E10  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2625  000E12  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2626  000E14  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2627  000E16  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2628  000E18  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2629  000E1A  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2630  000E1C                     l2224:
  2631  000E1C  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2632  000E20  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2633  000E24  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2634  000E28  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2635  000E2C  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2636  000E30  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2637  000E34  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2638  000E38  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2639  000E3C  0012               	return		;funcret
  2640  000E3E                     __end_of___aodiv:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _adcGetValue *****************
  2644 ;; Defined at:
  2645 ;;		line 41 in file "adc.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  PinADC          1    wreg     unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  PinADC          1    7[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  2    4[COMRAM] unsigned short 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2659 ;;      Params:         2       0       0       0       0       0       0       0       0
  2660 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2661 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2662 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2663 ;;Total ram usage:        4 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    2
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_appADC
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text16
  2674  001862                     __ptext16:
  2675                           	callstack 0
  2676  001862                     _adcGetValue:
  2677                           	callstack 26
  2678                           
  2679                           ;incstack = 0
  2680                           ;adcGetValue@PinADC stored from wreg
  2681  001862  6E08               	movwf	adcGetValue@PinADC^0,c
  2682  001864                     
  2683                           ;adc.c: 41: uint16_t adcGetValue(uint8_t PinADC);adc.c: 42: {;adc.c: 43:     ADCON0bits.
      +                          CHS = PinADC;
  2684  001864  C008  F007         	movff	adcGetValue@PinADC,??_adcGetValue
  2685  001868  4607               	rlncf	??_adcGetValue^0,f,c
  2686  00186A  4607               	rlncf	??_adcGetValue^0,f,c
  2687  00186C  50C2               	movf	194,w,c	;volatile
  2688  00186E  1807               	xorwf	??_adcGetValue^0,w,c
  2689  001870  0BC3               	andlw	-61
  2690  001872  1807               	xorwf	??_adcGetValue^0,w,c
  2691  001874  6EC2               	movwf	194,c	;volatile
  2692  001876                     
  2693                           ;adc.c: 44:     _delay((unsigned long)((2)*(12000000/4000.0)));
  2694  001876  0E08               	movlw	8
  2695  001878  6E07               	movwf	??_adcGetValue^0,c
  2696  00187A  0ECA               	movlw	202
  2697  00187C                     u2017:
  2698  00187C  2EE8               	decfsz	wreg,f,c
  2699  00187E  D7FE               	bra	u2017
  2700  001880  2E07               	decfsz	??_adcGetValue^0,f,c
  2701  001882  D7FC               	bra	u2017
  2702  001884                     
  2703                           ;adc.c: 45:     GO_nDONE = 1;
  2704  001884  82C2               	bsf	4034,1,c	;volatile
  2705  001886                     l24:
  2706                           
  2707                           ;adc.c: 46:     while(ADCON0bits.GO_DONE)
  2708  001886  B2C2               	btfsc	194,1,c	;volatile
  2709  001888  EF48  F00C         	goto	u1311
  2710  00188C  EF4A  F00C         	goto	u1310
  2711  001890                     u1311:
  2712  001890  EF43  F00C         	goto	l24
  2713  001894                     u1310:
  2714  001894                     
  2715                           ;adc.c: 49:     return ADRES;
  2716  001894  CFC3 F005          	movff	4035,?_adcGetValue	;volatile
  2717  001898  CFC4 F006          	movff	4036,?_adcGetValue+1	;volatile
  2718  00189C  0012               	return		;funcret
  2719  00189E                     __end_of_adcGetValue:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _appInit *****************
  2723 ;; Defined at:
  2724 ;;		line 10 in file "app.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    5
  2745 ;; This function calls:
  2746 ;;		_adcInit
  2747 ;;		_appISRConfig
  2748 ;;		_appLCD_Init
  2749 ;;		_appTimerInit
  2750 ;;		_appTimerStart
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text17
  2757  0018D4                     __ptext17:
  2758                           	callstack 0
  2759  0018D4                     _appInit:
  2760                           	callstack 25
  2761  0018D4                     
  2762                           ;app.c: 12:     appISRConfig();
  2763  0018D4  EC8E  F00C         	call	_appISRConfig	;wreg free
  2764  0018D8                     
  2765                           ;app.c: 13:     appLCD_Init();
  2766  0018D8  EC99  F00A         	call	_appLCD_Init	;wreg free
  2767  0018DC                     
  2768                           ;app.c: 14:     adcInit(2);
  2769  0018DC  0E02               	movlw	2
  2770  0018DE  ECAA  F00B         	call	_adcInit
  2771  0018E2                     
  2772                           ;app.c: 15:     appTimerInit();
  2773  0018E2  EC76  F00C         	call	_appTimerInit	;wreg free
  2774  0018E6                     
  2775                           ;app.c: 16:     appTimerStart();
  2776  0018E6  EC88  F00C         	call	_appTimerStart	;wreg free
  2777  0018EA  0012               	return		;funcret
  2778  0018EC                     __end_of_appInit:
  2779                           	callstack 0
  2780                           
  2781 ;; *************** function _appTimerStart *****************
  2782 ;; Defined at:
  2783 ;;		line 72 in file "servo.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, status,2
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2800 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2801 ;;Total ram usage:        0 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    2
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_appInit
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text18
  2812  001910                     __ptext18:
  2813                           	callstack 0
  2814  001910                     _appTimerStart:
  2815                           	callstack 27
  2816  001910                     
  2817                           ;servo.c: 74:     TMR3 = 20536;
  2818  001910  0E50               	movlw	80
  2819  001912  6EB3               	movwf	179,c	;volatile
  2820  001914  0E38               	movlw	56
  2821  001916  6EB2               	movwf	178,c	;volatile
  2822  001918                     
  2823                           ;servo.c: 75:     T3CONbits.TMR3ON = 1;
  2824  001918  80B1               	bsf	177,0,c	;volatile
  2825  00191A  0012               	return		;funcret
  2826  00191C                     __end_of_appTimerStart:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function _appTimerInit *****************
  2830 ;; Defined at:
  2831 ;;		line 53 in file "servo.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2848 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2849 ;;Total ram usage:        0 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    2
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_appInit
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text19
  2860  0018EC                     __ptext19:
  2861                           	callstack 0
  2862  0018EC                     _appTimerInit:
  2863                           	callstack 27
  2864  0018EC                     
  2865                           ;servo.c: 58:     T3CONbits.TMR3ON = 0;
  2866  0018EC  90B1               	bcf	177,0,c	;volatile
  2867                           
  2868                           ;servo.c: 59:     T3CONbits.RD16 = 1;
  2869  0018EE  8EB1               	bsf	177,7,c	;volatile
  2870                           
  2871                           ;servo.c: 60:     T3CONbits.TMR3CS = 0;
  2872  0018F0  92B1               	bcf	177,1,c	;volatile
  2873  0018F2                     
  2874                           ;servo.c: 61:     T3CONbits.T3CKPS = 0b11;
  2875  0018F2  0E30               	movlw	48
  2876  0018F4  12B1               	iorwf	177,f,c	;volatile
  2877  0018F6                     
  2878                           ;servo.c: 62:     T3CONbits.T3NSYNC = 1;
  2879  0018F6  84B1               	bsf	177,2,c	;volatile
  2880  0018F8                     
  2881                           ;servo.c: 68:     PIR2bits.TMR3IF = 0;
  2882  0018F8  92A1               	bcf	161,1,c	;volatile
  2883  0018FA                     
  2884                           ;servo.c: 69:     IPR2bits.TMR3IP = 0;
  2885  0018FA  92A2               	bcf	162,1,c	;volatile
  2886  0018FC                     
  2887                           ;servo.c: 70:     PIE2bits.TMR3IE = 1;
  2888  0018FC  82A0               	bsf	160,1,c	;volatile
  2889  0018FE  0012               	return		;funcret
  2890  001900                     __end_of_appTimerInit:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function _appLCD_Init *****************
  2894 ;; Defined at:
  2895 ;;		line 197 in file "flex_lcd.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2911 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2912 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2913 ;;Total ram usage:        2 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    4
  2916 ;; This function calls:
  2917 ;;		_Lcd_Cmd
  2918 ;;		_Lcd_Init
  2919 ;;		_Lcd_Out
  2920 ;; This function is called by:
  2921 ;;		_appInit
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text20
  2926  001532                     __ptext20:
  2927                           	callstack 0
  2928  001532                     _appLCD_Init:
  2929                           	callstack 25
  2930  001532                     
  2931                           ;flex_lcd.c: 199:     Lcd_Init();
  2932  001532  EC39  F00A         	call	_Lcd_Init	;wreg free
  2933                           
  2934                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  2935  001536  0E01               	movlw	1
  2936  001538  EC78  F008         	call	_Lcd_Cmd
  2937                           
  2938                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  2939  00153C  0E0C               	movlw	12
  2940  00153E  EC78  F008         	call	_Lcd_Cmd
  2941  001542                     
  2942                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  2943  001542  0E02               	movlw	2
  2944  001544  6E10               	movwf	(??_appLCD_Init+1)^0,c
  2945  001546  0E86               	movlw	134
  2946  001548  6E0F               	movwf	??_appLCD_Init^0,c
  2947  00154A  0E99               	movlw	153
  2948  00154C                     u2027:
  2949  00154C  2EE8               	decfsz	wreg,f,c
  2950  00154E  D7FE               	bra	u2027
  2951  001550  2E0F               	decfsz	??_appLCD_Init^0,f,c
  2952  001552  D7FC               	bra	u2027
  2953  001554  2E10               	decfsz	(??_appLCD_Init+1)^0,f,c
  2954  001556  D7FA               	bra	u2027
  2955  001558  F000               	nop	
  2956  00155A                     
  2957                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  2958  00155A  0E03               	movlw	3
  2959  00155C  6E08               	movwf	Lcd_Out@x^0,c
  2960  00155E  0E01               	movlw	low STR_3
  2961  001560  6E09               	movwf	Lcd_Out@buffer^0,c
  2962  001562  0E08               	movlw	high STR_3
  2963  001564  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  2964  001566  0E01               	movlw	1
  2965  001568  EC0D  F009         	call	_Lcd_Out
  2966  00156C                     
  2967                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  2968  00156C  0E06               	movlw	6
  2969  00156E  6E08               	movwf	Lcd_Out@x^0,c
  2970  001570  0E1D               	movlw	low STR_4
  2971  001572  6E09               	movwf	Lcd_Out@buffer^0,c
  2972  001574  0E08               	movlw	high STR_4
  2973  001576  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  2974  001578  0E02               	movlw	2
  2975  00157A  EC0D  F009         	call	_Lcd_Out
  2976  00157E                     
  2977                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  2978  00157E  0E1F               	movlw	31
  2979  001580  6E10               	movwf	(??_appLCD_Init+1)^0,c
  2980  001582  0E71               	movlw	113
  2981  001584  6E0F               	movwf	??_appLCD_Init^0,c
  2982  001586  0E1E               	movlw	30
  2983  001588                     u2037:
  2984  001588  2EE8               	decfsz	wreg,f,c
  2985  00158A  D7FE               	bra	u2037
  2986  00158C  2E0F               	decfsz	??_appLCD_Init^0,f,c
  2987  00158E  D7FC               	bra	u2037
  2988  001590  2E10               	decfsz	(??_appLCD_Init+1)^0,f,c
  2989  001592  D7FA               	bra	u2037
  2990  001594  D000               	nop2	
  2991                           
  2992                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  2993  001596  0E01               	movlw	1
  2994  001598  EC78  F008         	call	_Lcd_Cmd
  2995  00159C  0E02               	movlw	2
  2996  00159E  6E10               	movwf	(??_appLCD_Init+1)^0,c
  2997  0015A0  0E86               	movlw	134
  2998  0015A2  6E0F               	movwf	??_appLCD_Init^0,c
  2999  0015A4  0E99               	movlw	153
  3000  0015A6                     u2047:
  3001  0015A6  2EE8               	decfsz	wreg,f,c
  3002  0015A8  D7FE               	bra	u2047
  3003  0015AA  2E0F               	decfsz	??_appLCD_Init^0,f,c
  3004  0015AC  D7FC               	bra	u2047
  3005  0015AE  2E10               	decfsz	(??_appLCD_Init+1)^0,f,c
  3006  0015B0  D7FA               	bra	u2047
  3007  0015B2  F000               	nop	
  3008  0015B4  0012               	return		;funcret
  3009  0015B6                     __end_of_appLCD_Init:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _Lcd_Out *****************
  3013 ;; Defined at:
  3014 ;;		line 95 in file "flex_lcd.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  y               1    wreg     unsigned char 
  3017 ;;  x               1    7[COMRAM] unsigned char 
  3018 ;;  buffer          2    8[COMRAM] PTR const char 
  3019 ;;		 -> STR_4(6), STR_3(12), appADC@dataOut(16), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  y               1   12[COMRAM] unsigned char 
  3022 ;;  data            1   13[COMRAM] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3032 ;;      Params:         3       0       0       0       0       0       0       0       0
  3033 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3034 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3035 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3036 ;;Total ram usage:        7 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    3
  3039 ;; This function calls:
  3040 ;;		_Lcd_Chr_CP
  3041 ;;		_Lcd_Cmd
  3042 ;; This function is called by:
  3043 ;;		_appADC
  3044 ;;		_appLCD_Init
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text21
  3049  00121A                     __ptext21:
  3050                           	callstack 0
  3051  00121A                     _Lcd_Out:
  3052                           	callstack 25
  3053                           
  3054                           ;incstack = 0
  3055                           ;Lcd_Out@y stored from wreg
  3056  00121A  6E0D               	movwf	Lcd_Out@y^0,c
  3057  00121C                     
  3058                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  3059  00121C  EF24  F009         	goto	l1938
  3060  001220                     l1928:
  3061                           
  3062                           ;flex_lcd.c: 101:             data = 128 + x;
  3063  001220  5008               	movf	Lcd_Out@x^0,w,c
  3064  001222  0F80               	addlw	128
  3065  001224  6E0E               	movwf	Lcd_Out@data^0,c
  3066                           
  3067                           ;flex_lcd.c: 102:             break;
  3068  001226  EF41  F009         	goto	l1940
  3069  00122A                     l1930:
  3070                           
  3071                           ;flex_lcd.c: 104:             data = 192 + x;
  3072  00122A  5008               	movf	Lcd_Out@x^0,w,c
  3073  00122C  0FC0               	addlw	192
  3074  00122E  6E0E               	movwf	Lcd_Out@data^0,c
  3075                           
  3076                           ;flex_lcd.c: 105:             break;
  3077  001230  EF41  F009         	goto	l1940
  3078  001234                     l1932:
  3079                           
  3080                           ;flex_lcd.c: 107:             data = 148 + x;
  3081  001234  5008               	movf	Lcd_Out@x^0,w,c
  3082  001236  0F94               	addlw	148
  3083  001238  6E0E               	movwf	Lcd_Out@data^0,c
  3084                           
  3085                           ;flex_lcd.c: 108:             break;
  3086  00123A  EF41  F009         	goto	l1940
  3087  00123E                     l1934:
  3088                           
  3089                           ;flex_lcd.c: 110:             data = 212 + x;
  3090  00123E  5008               	movf	Lcd_Out@x^0,w,c
  3091  001240  0FD4               	addlw	212
  3092  001242  6E0E               	movwf	Lcd_Out@data^0,c
  3093                           
  3094                           ;flex_lcd.c: 111:             break;
  3095  001244  EF41  F009         	goto	l1940
  3096  001248                     l1938:
  3097  001248  500D               	movf	Lcd_Out@y^0,w,c
  3098  00124A  6E0B               	movwf	??_Lcd_Out^0,c
  3099  00124C  6A0C               	clrf	(??_Lcd_Out+1)^0,c
  3100                           
  3101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3102                           ; Switch size 1, requested type "simple"
  3103                           ; Number of cases is 1, Range of values is 0 to 0
  3104                           ; switch strategies available:
  3105                           ; Name         Instructions Cycles
  3106                           ; simple_byte            4     3 (average)
  3107                           ;	Chosen strategy is simple_byte
  3108  00124E  500C               	movf	(??_Lcd_Out+1)^0,w,c
  3109  001250  0A00               	xorlw	0	; case 0
  3110  001252  B4D8               	btfsc	status,2,c
  3111  001254  EF2E  F009         	goto	l2474
  3112  001258  EF41  F009         	goto	l1940
  3113  00125C                     l2474:
  3114                           
  3115                           ; Switch size 1, requested type "simple"
  3116                           ; Number of cases is 4, Range of values is 1 to 4
  3117                           ; switch strategies available:
  3118                           ; Name         Instructions Cycles
  3119                           ; simple_byte           13     7 (average)
  3120                           ;	Chosen strategy is simple_byte
  3121  00125C  500B               	movf	??_Lcd_Out^0,w,c
  3122  00125E  0A01               	xorlw	1	; case 1
  3123  001260  B4D8               	btfsc	status,2,c
  3124  001262  EF10  F009         	goto	l1928
  3125  001266  0A03               	xorlw	3	; case 2
  3126  001268  B4D8               	btfsc	status,2,c
  3127  00126A  EF15  F009         	goto	l1930
  3128  00126E  0A01               	xorlw	1	; case 3
  3129  001270  B4D8               	btfsc	status,2,c
  3130  001272  EF1A  F009         	goto	l1932
  3131  001276  0A07               	xorlw	7	; case 4
  3132  001278  B4D8               	btfsc	status,2,c
  3133  00127A  EF1F  F009         	goto	l1934
  3134  00127E  EF41  F009         	goto	l1940
  3135  001282                     l1940:
  3136                           
  3137                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  3138  001282  500E               	movf	Lcd_Out@data^0,w,c
  3139  001284  EC78  F008         	call	_Lcd_Cmd
  3140                           
  3141                           ;flex_lcd.c: 116:     while(*buffer)
  3142  001288  EF5A  F009         	goto	l1946
  3143  00128C                     l1942:
  3144                           
  3145                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  3146  00128C  C009  FFF6         	movff	Lcd_Out@buffer,tblptrl
  3147  001290  C00A  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  3148  001294  6AF8               	clrf	tblptru,c
  3149  001296  0E07               	movlw	(high __ramtop+-1)
  3150  001298  64F7               	cpfsgt	tblptrh,c
  3151  00129A  D003               	bra	u1327
  3152  00129C  0008               	tblrd		*
  3153  00129E  50F5               	movf	tablat,w,c
  3154  0012A0  D005               	bra	u1320
  3155  0012A2                     u1327:
  3156  0012A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3157  0012A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3158  0012AA  50E7               	movf	indf1,w,c
  3159  0012AC                     u1320:
  3160  0012AC  ECD1  F007         	call	_Lcd_Chr_CP
  3161  0012B0                     
  3162                           ;flex_lcd.c: 119:         buffer++;
  3163  0012B0  4A09               	infsnz	Lcd_Out@buffer^0,f,c
  3164  0012B2  2A0A               	incf	(Lcd_Out@buffer+1)^0,f,c
  3165  0012B4                     l1946:
  3166                           
  3167                           ;flex_lcd.c: 116:     while(*buffer)
  3168  0012B4  C009  FFF6         	movff	Lcd_Out@buffer,tblptrl
  3169  0012B8  C00A  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  3170  0012BC  6AF8               	clrf	tblptru,c
  3171  0012BE  0E07               	movlw	(high __ramtop+-1)
  3172  0012C0  64F7               	cpfsgt	tblptrh,c
  3173  0012C2  D003               	bra	u1337
  3174  0012C4  0008               	tblrd		*
  3175  0012C6  50F5               	movf	tablat,w,c
  3176  0012C8  D005               	bra	u1330
  3177  0012CA                     u1337:
  3178  0012CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  3179  0012CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  3180  0012D2  50E7               	movf	indf1,w,c
  3181  0012D4                     u1330:
  3182  0012D4  0900               	iorlw	0
  3183  0012D6  A4D8               	btfss	status,2,c
  3184  0012D8  EF70  F009         	goto	u1341
  3185  0012DC  EF72  F009         	goto	u1340
  3186  0012E0                     u1341:
  3187  0012E0  EF46  F009         	goto	l1942
  3188  0012E4                     u1340:
  3189  0012E4  0012               	return		;funcret
  3190  0012E6                     __end_of_Lcd_Out:
  3191                           	callstack 0
  3192                           
  3193 ;; *************** function _Lcd_Chr_CP *****************
  3194 ;; Defined at:
  3195 ;;		line 151 in file "flex_lcd.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  data            1    wreg     char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  data            1    6[COMRAM] char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0
  3210 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3211 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3212 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3213 ;;Total ram usage:        3 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    2
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_Lcd_Out
  3220 ;;		_Lcd_Out2
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text22
  3225  000FA2                     __ptext22:
  3226                           	callstack 0
  3227  000FA2                     _Lcd_Chr_CP:
  3228                           	callstack 25
  3229                           
  3230                           ;incstack = 0
  3231                           ;Lcd_Chr_CP@data stored from wreg
  3232  000FA2  6E07               	movwf	Lcd_Chr_CP@data^0,c
  3233  000FA4                     
  3234                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  3235  000FA4  968C               	bcf	140,3,c	;volatile
  3236                           
  3237                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  3238  000FA6  848C               	bsf	140,2,c	;volatile
  3239  000FA8                     
  3240                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  3241  000FA8  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3242  000FAC  0E07               	movlw	7
  3243  000FAE  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3244  000FB0                     u1245:
  3245  000FB0  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3246  000FB2  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3247  000FB4  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3248  000FB6  EFD8  F007         	goto	u1245
  3249  000FBA  0E01               	movlw	1
  3250  000FBC  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3251  000FBE  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3252  000FC0  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3253  000FC2  508C               	movf	140,w,c	;volatile
  3254  000FC4  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3255  000FC6  0B7F               	andlw	-129
  3256  000FC8  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3257  000FCA  6E8C               	movwf	140,c	;volatile
  3258                           
  3259                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  3260  000FCC  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3261  000FD0  0E06               	movlw	6
  3262  000FD2  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3263  000FD4                     u1255:
  3264  000FD4  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3265  000FD6  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3266  000FD8  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3267  000FDA  EFEA  F007         	goto	u1255
  3268  000FDE  0E01               	movlw	1
  3269  000FE0  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3270  000FE2  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3271  000FE4  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3272  000FE6  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3273  000FE8  508C               	movf	140,w,c	;volatile
  3274  000FEA  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3275  000FEC  0BBF               	andlw	-65
  3276  000FEE  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3277  000FF0  6E8C               	movwf	140,c	;volatile
  3278                           
  3279                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  3280  000FF2  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3281  000FF6  0E05               	movlw	5
  3282  000FF8  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3283  000FFA                     u1265:
  3284  000FFA  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3285  000FFC  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3286  000FFE  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3287  001000  EFFD  F007         	goto	u1265
  3288  001004  0E01               	movlw	1
  3289  001006  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3290  001008  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3291  00100A  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3292  00100C  508C               	movf	140,w,c	;volatile
  3293  00100E  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3294  001010  0BDF               	andlw	-33
  3295  001012  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3296  001014  6E8C               	movwf	140,c	;volatile
  3297                           
  3298                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  3299  001016  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3300  00101A  0E04               	movlw	4
  3301  00101C  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3302  00101E                     u1275:
  3303  00101E  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3304  001020  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3305  001022  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3306  001024  EF0F  F008         	goto	u1275
  3307  001028  0E01               	movlw	1
  3308  00102A  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3309  00102C  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3310  00102E  508C               	movf	140,w,c	;volatile
  3311  001030  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3312  001032  0BEF               	andlw	-17
  3313  001034  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3314  001036  6E8C               	movwf	140,c	;volatile
  3315  001038                     
  3316                           ;flex_lcd.c: 159:     _delay(10);
  3317  001038  0E03               	movlw	3
  3318  00103A                     u2057:
  3319  00103A  2EE8               	decfsz	wreg,f,c
  3320  00103C  D7FE               	bra	u2057
  3321  00103E  F000               	nop	
  3322  001040                     
  3323                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  3324  001040  868C               	bsf	140,3,c	;volatile
  3325  001042                     
  3326                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3327  001042  0E05               	movlw	5
  3328  001044                     u2067:
  3329  001044  2EE8               	decfsz	wreg,f,c
  3330  001046  D7FE               	bra	u2067
  3331  001048                     
  3332                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  3333  001048  968C               	bcf	140,3,c	;volatile
  3334                           
  3335                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  3336  00104A  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3337  00104E  0E03               	movlw	3
  3338  001050  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3339  001052                     u1285:
  3340  001052  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3341  001054  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3342  001056  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3343  001058  EF29  F008         	goto	u1285
  3344  00105C  0E01               	movlw	1
  3345  00105E  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3346  001060  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3347  001062  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3348  001064  508C               	movf	140,w,c	;volatile
  3349  001066  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3350  001068  0B7F               	andlw	-129
  3351  00106A  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3352  00106C  6E8C               	movwf	140,c	;volatile
  3353                           
  3354                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  3355  00106E  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3356  001072  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3357  001074  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3358  001076  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3359  001078  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3360  00107A  0E01               	movlw	1
  3361  00107C  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3362  00107E  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3363  001080  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3364  001082  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3365  001084  508C               	movf	140,w,c	;volatile
  3366  001086  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3367  001088  0BBF               	andlw	-65
  3368  00108A  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3369  00108C  6E8C               	movwf	140,c	;volatile
  3370                           
  3371                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  3372  00108E  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3373  001092  0E01               	movlw	1
  3374  001094  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3375  001096                     u1295:
  3376  001096  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3377  001098  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3378  00109A  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3379  00109C  EF4B  F008         	goto	u1295
  3380  0010A0  0E01               	movlw	1
  3381  0010A2  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3382  0010A4  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3383  0010A6  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3384  0010A8  508C               	movf	140,w,c	;volatile
  3385  0010AA  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3386  0010AC  0BDF               	andlw	-33
  3387  0010AE  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3388  0010B0  6E8C               	movwf	140,c	;volatile
  3389                           
  3390                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  3391  0010B2  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3392  0010B6  0E01               	movlw	1
  3393  0010B8  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3394  0010BA  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3395  0010BC  508C               	movf	140,w,c	;volatile
  3396  0010BE  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3397  0010C0  0BEF               	andlw	-17
  3398  0010C2  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3399  0010C4  6E8C               	movwf	140,c	;volatile
  3400  0010C6                     
  3401                           ;flex_lcd.c: 167:     _delay(10);
  3402  0010C6  0E03               	movlw	3
  3403  0010C8                     u2077:
  3404  0010C8  2EE8               	decfsz	wreg,f,c
  3405  0010CA  D7FE               	bra	u2077
  3406  0010CC  F000               	nop	
  3407  0010CE                     
  3408                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  3409  0010CE  868C               	bsf	140,3,c	;volatile
  3410  0010D0                     
  3411                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3412  0010D0  0E05               	movlw	5
  3413  0010D2                     u2087:
  3414  0010D2  2EE8               	decfsz	wreg,f,c
  3415  0010D4  D7FE               	bra	u2087
  3416  0010D6                     
  3417                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  3418  0010D6  968C               	bcf	140,3,c	;volatile
  3419  0010D8                     
  3420                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3421  0010D8  0E05               	movlw	5
  3422  0010DA                     u2097:
  3423  0010DA  2EE8               	decfsz	wreg,f,c
  3424  0010DC  D7FE               	bra	u2097
  3425  0010DE                     
  3426                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3427  0010DE  0E16               	movlw	22
  3428  0010E0  6E05               	movwf	??_Lcd_Chr_CP^0,c
  3429  0010E2  0E6C               	movlw	108
  3430  0010E4                     u2107:
  3431  0010E4  2EE8               	decfsz	wreg,f,c
  3432  0010E6  D7FE               	bra	u2107
  3433  0010E8  2E05               	decfsz	??_Lcd_Chr_CP^0,f,c
  3434  0010EA  D7FC               	bra	u2107
  3435  0010EC  D000               	nop2	
  3436  0010EE  0012               	return		;funcret
  3437  0010F0                     __end_of_Lcd_Chr_CP:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _Lcd_Init *****************
  3441 ;; Defined at:
  3442 ;;		line 31 in file "flex_lcd.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  i               1    8[COMRAM] unsigned char 
  3447 ;;  data            1    0        unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0
  3458 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3459 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3460 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3461 ;;Total ram usage:        3 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    3
  3464 ;; This function calls:
  3465 ;;		_Lcd_Cmd
  3466 ;; This function is called by:
  3467 ;;		_appLCD_Init
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text23
  3472  001472                     __ptext23:
  3473                           	callstack 0
  3474  001472                     _Lcd_Init:
  3475                           	callstack 25
  3476  001472                     
  3477                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  3478  001472  9E95               	bcf	149,7,c	;volatile
  3479                           
  3480                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  3481  001474  9C95               	bcf	149,6,c	;volatile
  3482                           
  3483                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  3484  001476  9A95               	bcf	149,5,c	;volatile
  3485                           
  3486                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  3487  001478  9895               	bcf	149,4,c	;volatile
  3488                           
  3489                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  3490  00147A  9695               	bcf	149,3,c	;volatile
  3491                           
  3492                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  3493  00147C  9495               	bcf	149,2,c	;volatile
  3494  00147E                     
  3495                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  3496  00147E  0E85               	movlw	133
  3497  001480  6E08               	movwf	??_Lcd_Init^0,c
  3498  001482  0E76               	movlw	118
  3499  001484                     u2117:
  3500  001484  2EE8               	decfsz	wreg,f,c
  3501  001486  D7FE               	bra	u2117
  3502  001488  2E08               	decfsz	??_Lcd_Init^0,f,c
  3503  00148A  D7FC               	bra	u2117
  3504  00148C  D000               	nop2	
  3505  00148E                     
  3506                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  3507  00148E  0E00               	movlw	0
  3508  001490  6E09               	movwf	Lcd_Init@i^0,c
  3509  001492                     l110:
  3510                           
  3511                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  3512  001492  9E8C               	bcf	140,7,c	;volatile
  3513                           
  3514                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  3515  001494  9C8C               	bcf	140,6,c	;volatile
  3516                           
  3517                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  3518  001496  8A8C               	bsf	140,5,c	;volatile
  3519                           
  3520                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  3521  001498  888C               	bsf	140,4,c	;volatile
  3522                           
  3523                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  3524  00149A  968C               	bcf	140,3,c	;volatile
  3525                           
  3526                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  3527  00149C  948C               	bcf	140,2,c	;volatile
  3528                           
  3529                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  3530  00149E  9E8C               	bcf	140,7,c	;volatile
  3531                           
  3532                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  3533  0014A0  9C8C               	bcf	140,6,c	;volatile
  3534                           
  3535                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  3536  0014A2  8A8C               	bsf	140,5,c	;volatile
  3537                           
  3538                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  3539  0014A4  888C               	bsf	140,4,c	;volatile
  3540                           
  3541                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  3542  0014A6  868C               	bsf	140,3,c	;volatile
  3543                           
  3544                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  3545  0014A8  948C               	bcf	140,2,c	;volatile
  3546  0014AA                     
  3547                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  3548  0014AA  0E05               	movlw	5
  3549  0014AC                     u2127:
  3550  0014AC  2EE8               	decfsz	wreg,f,c
  3551  0014AE  D7FE               	bra	u2127
  3552  0014B0                     
  3553                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  3554  0014B0  9E8C               	bcf	140,7,c	;volatile
  3555  0014B2                     
  3556                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  3557  0014B2  9C8C               	bcf	140,6,c	;volatile
  3558  0014B4                     
  3559                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  3560  0014B4  8A8C               	bsf	140,5,c	;volatile
  3561  0014B6                     
  3562                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  3563  0014B6  888C               	bsf	140,4,c	;volatile
  3564  0014B8                     
  3565                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  3566  0014B8  968C               	bcf	140,3,c	;volatile
  3567  0014BA                     
  3568                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  3569  0014BA  948C               	bcf	140,2,c	;volatile
  3570                           
  3571                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3572  0014BC  0E16               	movlw	22
  3573  0014BE  6E08               	movwf	??_Lcd_Init^0,c
  3574  0014C0  0E6C               	movlw	108
  3575  0014C2                     u2137:
  3576  0014C2  2EE8               	decfsz	wreg,f,c
  3577  0014C4  D7FE               	bra	u2137
  3578  0014C6  2E08               	decfsz	??_Lcd_Init^0,f,c
  3579  0014C8  D7FC               	bra	u2137
  3580  0014CA  D000               	nop2	
  3581  0014CC                     
  3582                           ;flex_lcd.c: 61:     }
  3583  0014CC  2A09               	incf	Lcd_Init@i^0,f,c
  3584  0014CE  0E03               	movlw	3
  3585  0014D0  6409               	cpfsgt	Lcd_Init@i^0,c
  3586  0014D2  EF6D  F00A         	goto	u1351
  3587  0014D6  EF6F  F00A         	goto	u1350
  3588  0014DA                     u1351:
  3589  0014DA  EF49  F00A         	goto	l110
  3590  0014DE                     u1350:
  3591  0014DE                     
  3592                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  3593  0014DE  9E8C               	bcf	140,7,c	;volatile
  3594                           
  3595                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  3596  0014E0  9C8C               	bcf	140,6,c	;volatile
  3597                           
  3598                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  3599  0014E2  8A8C               	bsf	140,5,c	;volatile
  3600                           
  3601                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  3602  0014E4  988C               	bcf	140,4,c	;volatile
  3603                           
  3604                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  3605  0014E6  968C               	bcf	140,3,c	;volatile
  3606                           
  3607                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  3608  0014E8  948C               	bcf	140,2,c	;volatile
  3609                           
  3610                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  3611  0014EA  9E8C               	bcf	140,7,c	;volatile
  3612                           
  3613                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  3614  0014EC  9C8C               	bcf	140,6,c	;volatile
  3615                           
  3616                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  3617  0014EE  8A8C               	bsf	140,5,c	;volatile
  3618                           
  3619                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  3620  0014F0  988C               	bcf	140,4,c	;volatile
  3621                           
  3622                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  3623  0014F2  868C               	bsf	140,3,c	;volatile
  3624                           
  3625                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  3626  0014F4  948C               	bcf	140,2,c	;volatile
  3627  0014F6                     
  3628                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3629  0014F6  0E05               	movlw	5
  3630  0014F8                     u2147:
  3631  0014F8  2EE8               	decfsz	wreg,f,c
  3632  0014FA  D7FE               	bra	u2147
  3633  0014FC                     
  3634                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  3635  0014FC  9E8C               	bcf	140,7,c	;volatile
  3636  0014FE                     
  3637                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  3638  0014FE  9C8C               	bcf	140,6,c	;volatile
  3639  001500                     
  3640                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  3641  001500  8A8C               	bsf	140,5,c	;volatile
  3642  001502                     
  3643                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  3644  001502  988C               	bcf	140,4,c	;volatile
  3645  001504                     
  3646                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  3647  001504  968C               	bcf	140,3,c	;volatile
  3648  001506                     
  3649                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  3650  001506  948C               	bcf	140,2,c	;volatile
  3651                           
  3652                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3653  001508  0E16               	movlw	22
  3654  00150A  6E08               	movwf	??_Lcd_Init^0,c
  3655  00150C  0E6C               	movlw	108
  3656  00150E                     u2157:
  3657  00150E  2EE8               	decfsz	wreg,f,c
  3658  001510  D7FE               	bra	u2157
  3659  001512  2E08               	decfsz	??_Lcd_Init^0,f,c
  3660  001514  D7FC               	bra	u2157
  3661  001516  D000               	nop2	
  3662  001518                     
  3663                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  3664  001518  0E28               	movlw	40
  3665  00151A  EC78  F008         	call	_Lcd_Cmd
  3666  00151E                     
  3667                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  3668  00151E  0E10               	movlw	16
  3669  001520  EC78  F008         	call	_Lcd_Cmd
  3670  001524                     
  3671                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  3672  001524  0E01               	movlw	1
  3673  001526  EC78  F008         	call	_Lcd_Cmd
  3674  00152A                     
  3675                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  3676  00152A  0E0F               	movlw	15
  3677  00152C  EC78  F008         	call	_Lcd_Cmd
  3678  001530  0012               	return		;funcret
  3679  001532                     __end_of_Lcd_Init:
  3680                           	callstack 0
  3681                           
  3682 ;; *************** function _Lcd_Cmd *****************
  3683 ;; Defined at:
  3684 ;;		line 175 in file "flex_lcd.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  data            1    wreg     unsigned char 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  data            1    6[COMRAM] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3698 ;;      Params:         0       0       0       0       0       0       0       0       0
  3699 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3700 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3701 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3702 ;;Total ram usage:        3 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    2
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_Lcd_Init
  3709 ;;		_Lcd_Out
  3710 ;;		_appLCD_Init
  3711 ;;		_Lcd_Out2
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text24
  3716  0010F0                     __ptext24:
  3717                           	callstack 0
  3718  0010F0                     _Lcd_Cmd:
  3719                           	callstack 25
  3720                           
  3721                           ;incstack = 0
  3722                           ;Lcd_Cmd@data stored from wreg
  3723  0010F0  6E07               	movwf	Lcd_Cmd@data^0,c
  3724  0010F2                     
  3725                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  3726  0010F2  968C               	bcf	140,3,c	;volatile
  3727  0010F4  948C               	bcf	140,2,c	;volatile
  3728  0010F6                     
  3729                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  3730  0010F6  6A05               	clrf	??_Lcd_Cmd^0,c
  3731  0010F8  AE07               	btfss	Lcd_Cmd@data^0,7,c
  3732  0010FA  D001               	bra	u1215
  3733  0010FC  2A05               	incf	??_Lcd_Cmd^0,f,c
  3734  0010FE                     u1215:
  3735  0010FE  0E01               	movlw	1
  3736  001100  1605               	andwf	??_Lcd_Cmd^0,f,c
  3737  001102  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3738  001104  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3739  001106  508C               	movf	140,w,c	;volatile
  3740  001108  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3741  00110A  0B7F               	andlw	-129
  3742  00110C  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3743  00110E  6E8C               	movwf	140,c	;volatile
  3744                           
  3745                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  3746  001110  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3747  001114  0E06               	movlw	6
  3748  001116  6E06               	movwf	(??_Lcd_Cmd+1)^0,c
  3749  001118                     u1225:
  3750  001118  90D8               	bcf	status,0,c
  3751  00111A  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3752  00111C  2E06               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3753  00111E  EF8C  F008         	goto	u1225
  3754  001122  0E01               	movlw	1
  3755  001124  1605               	andwf	??_Lcd_Cmd^0,f,c
  3756  001126  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3757  001128  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3758  00112A  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3759  00112C  508C               	movf	140,w,c	;volatile
  3760  00112E  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3761  001130  0BBF               	andlw	-65
  3762  001132  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3763  001134  6E8C               	movwf	140,c	;volatile
  3764                           
  3765                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  3766  001136  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3767  00113A  0E05               	movlw	5
  3768  00113C  6E06               	movwf	(??_Lcd_Cmd+1)^0,c
  3769  00113E                     u1235:
  3770  00113E  90D8               	bcf	status,0,c
  3771  001140  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3772  001142  2E06               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3773  001144  EF9F  F008         	goto	u1235
  3774  001148  0E01               	movlw	1
  3775  00114A  1605               	andwf	??_Lcd_Cmd^0,f,c
  3776  00114C  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3777  00114E  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3778  001150  508C               	movf	140,w,c	;volatile
  3779  001152  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3780  001154  0BDF               	andlw	-33
  3781  001156  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3782  001158  6E8C               	movwf	140,c	;volatile
  3783                           
  3784                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  3785  00115A  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3786  00115E  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3787  001160  0E0F               	movlw	15
  3788  001162  1605               	andwf	??_Lcd_Cmd^0,f,c
  3789  001164  0E01               	movlw	1
  3790  001166  1605               	andwf	??_Lcd_Cmd^0,f,c
  3791  001168  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3792  00116A  508C               	movf	140,w,c	;volatile
  3793  00116C  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3794  00116E  0BEF               	andlw	-17
  3795  001170  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3796  001172  6E8C               	movwf	140,c	;volatile
  3797  001174                     
  3798                           ;flex_lcd.c: 182:     _delay(10);
  3799  001174  0E03               	movlw	3
  3800  001176                     u2167:
  3801  001176  2EE8               	decfsz	wreg,f,c
  3802  001178  D7FE               	bra	u2167
  3803  00117A  F000               	nop	
  3804  00117C                     
  3805                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  3806  00117C  868C               	bsf	140,3,c	;volatile
  3807  00117E                     
  3808                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3809  00117E  0E05               	movlw	5
  3810  001180                     u2177:
  3811  001180  2EE8               	decfsz	wreg,f,c
  3812  001182  D7FE               	bra	u2177
  3813  001184                     
  3814                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  3815  001184  968C               	bcf	140,3,c	;volatile
  3816                           
  3817                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  3818  001186  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3819  00118A  90D8               	bcf	status,0,c
  3820  00118C  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3821  00118E  90D8               	bcf	status,0,c
  3822  001190  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3823  001192  90D8               	bcf	status,0,c
  3824  001194  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3825  001196  0E01               	movlw	1
  3826  001198  1605               	andwf	??_Lcd_Cmd^0,f,c
  3827  00119A  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3828  00119C  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3829  00119E  508C               	movf	140,w,c	;volatile
  3830  0011A0  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3831  0011A2  0B7F               	andlw	-129
  3832  0011A4  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3833  0011A6  6E8C               	movwf	140,c	;volatile
  3834                           
  3835                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  3836  0011A8  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3837  0011AC  90D8               	bcf	status,0,c
  3838  0011AE  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3839  0011B0  90D8               	bcf	status,0,c
  3840  0011B2  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3841  0011B4  0E01               	movlw	1
  3842  0011B6  1605               	andwf	??_Lcd_Cmd^0,f,c
  3843  0011B8  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3844  0011BA  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3845  0011BC  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3846  0011BE  508C               	movf	140,w,c	;volatile
  3847  0011C0  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3848  0011C2  0BBF               	andlw	-65
  3849  0011C4  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3850  0011C6  6E8C               	movwf	140,c	;volatile
  3851                           
  3852                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  3853  0011C8  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3854  0011CC  90D8               	bcf	status,0,c
  3855  0011CE  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3856  0011D0  0E01               	movlw	1
  3857  0011D2  1605               	andwf	??_Lcd_Cmd^0,f,c
  3858  0011D4  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3859  0011D6  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3860  0011D8  508C               	movf	140,w,c	;volatile
  3861  0011DA  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3862  0011DC  0BDF               	andlw	-33
  3863  0011DE  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3864  0011E0  6E8C               	movwf	140,c	;volatile
  3865                           
  3866                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  3867  0011E2  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3868  0011E6  0E01               	movlw	1
  3869  0011E8  1605               	andwf	??_Lcd_Cmd^0,f,c
  3870  0011EA  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3871  0011EC  508C               	movf	140,w,c	;volatile
  3872  0011EE  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3873  0011F0  0BEF               	andlw	-17
  3874  0011F2  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3875  0011F4  6E8C               	movwf	140,c	;volatile
  3876  0011F6                     
  3877                           ;flex_lcd.c: 190:     _delay(10);
  3878  0011F6  0E03               	movlw	3
  3879  0011F8                     u2187:
  3880  0011F8  2EE8               	decfsz	wreg,f,c
  3881  0011FA  D7FE               	bra	u2187
  3882  0011FC  F000               	nop	
  3883  0011FE                     
  3884                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  3885  0011FE  868C               	bsf	140,3,c	;volatile
  3886  001200                     
  3887                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3888  001200  0E05               	movlw	5
  3889  001202                     u2197:
  3890  001202  2EE8               	decfsz	wreg,f,c
  3891  001204  D7FE               	bra	u2197
  3892  001206                     
  3893                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  3894  001206  968C               	bcf	140,3,c	;volatile
  3895  001208                     
  3896                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3897  001208  0E16               	movlw	22
  3898  00120A  6E05               	movwf	??_Lcd_Cmd^0,c
  3899  00120C  0E6C               	movlw	108
  3900  00120E                     u2207:
  3901  00120E  2EE8               	decfsz	wreg,f,c
  3902  001210  D7FE               	bra	u2207
  3903  001212  2E05               	decfsz	??_Lcd_Cmd^0,f,c
  3904  001214  D7FC               	bra	u2207
  3905  001216  D000               	nop2	
  3906  001218  0012               	return		;funcret
  3907  00121A                     __end_of_Lcd_Cmd:
  3908                           	callstack 0
  3909                           
  3910 ;; *************** function _appISRConfig *****************
  3911 ;; Defined at:
  3912 ;;		line 31 in file "app.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		None
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3926 ;;      Params:         0       0       0       0       0       0       0       0       0
  3927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3929 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    2
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_appInit
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text25
  3941  00191C                     __ptext25:
  3942                           	callstack 0
  3943  00191C                     _appISRConfig:
  3944                           	callstack 27
  3945  00191C                     
  3946                           ;app.c: 36:     RCONbits.IPEN = 1;
  3947  00191C  8ED0               	bsf	208,7,c	;volatile
  3948                           
  3949                           ;app.c: 37:     INTCONbits.GIE_GIEH = 1;
  3950  00191E  8EF2               	bsf	242,7,c	;volatile
  3951                           
  3952                           ;app.c: 38:     INTCONbits.PEIE_GIEL = 1;
  3953  001920  8CF2               	bsf	242,6,c	;volatile
  3954  001922  0012               	return		;funcret
  3955  001924                     __end_of_appISRConfig:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function _adcInit *****************
  3959 ;; Defined at:
  3960 ;;		line 9 in file "adc.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  ADC_PINs        1    wreg     unsigned char 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  ADC_PINs        1    5[COMRAM] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0
  3975 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3976 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3977 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3978 ;;Total ram usage:        2 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    2
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_appInit
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text26
  3989  001754                     __ptext26:
  3990                           	callstack 0
  3991  001754                     _adcInit:
  3992                           	callstack 27
  3993                           
  3994                           ;incstack = 0
  3995                           ;adcInit@ADC_PINs stored from wreg
  3996  001754  6E06               	movwf	adcInit@ADC_PINs^0,c
  3997  001756                     
  3998                           ;adc.c: 9: void adcInit(uint8_t ADC_PINs);adc.c: 10: {;adc.c: 12:     if(ADC_PINs == 0)
  3999  001756  5006               	movf	adcInit@ADC_PINs^0,w,c
  4000  001758  A4D8               	btfss	status,2,c
  4001  00175A  EFB1  F00B         	goto	u1361
  4002  00175E  EFB3  F00B         	goto	u1360
  4003  001762                     u1361:
  4004  001762  EFB9  F00B         	goto	l2014
  4005  001766                     u1360:
  4006  001766                     
  4007                           ;adc.c: 13:     {;adc.c: 14:         ADCON1bits.PCFG = 0b1110;
  4008  001766  50C1               	movf	193,w,c	;volatile
  4009  001768  0BF0               	andlw	-16
  4010  00176A  090E               	iorlw	14
  4011  00176C  6EC1               	movwf	193,c	;volatile
  4012                           
  4013                           ;adc.c: 15:     }
  4014  00176E  EFC1  F00B         	goto	l2016
  4015  001772                     l2014:
  4016                           
  4017                           ;adc.c: 17:     {;adc.c: 18:         ADCON1bits.PCFG = 15 - ADC_PINs;
  4018  001772  5006               	movf	adcInit@ADC_PINs^0,w,c
  4019  001774  080F               	sublw	15
  4020  001776  6E05               	movwf	??_adcInit^0,c
  4021  001778  50C1               	movf	193,w,c	;volatile
  4022  00177A  1805               	xorwf	??_adcInit^0,w,c
  4023  00177C  0BF0               	andlw	-16
  4024  00177E  1805               	xorwf	??_adcInit^0,w,c
  4025  001780  6EC1               	movwf	193,c	;volatile
  4026  001782                     l2016:
  4027                           
  4028                           ;adc.c: 24:     ADCON1bits.VCFG = 0b00;
  4029  001782  0ECF               	movlw	-49
  4030  001784  16C1               	andwf	193,f,c	;volatile
  4031  001786                     
  4032                           ;adc.c: 29:     ADCON2bits.ACQT = 0b010;
  4033  001786  50C0               	movf	192,w,c	;volatile
  4034  001788  0BC7               	andlw	-57
  4035  00178A  0910               	iorlw	16
  4036  00178C  6EC0               	movwf	192,c	;volatile
  4037  00178E                     
  4038                           ;adc.c: 34:     ADCON2bits.ADCS = 3;
  4039  00178E  50C0               	movf	192,w,c	;volatile
  4040  001790  0BF8               	andlw	-8
  4041  001792  0903               	iorlw	3
  4042  001794  6EC0               	movwf	192,c	;volatile
  4043  001796                     
  4044                           ;adc.c: 37:     ADCON2bits.ADFM = 1;
  4045  001796  8EC0               	bsf	192,7,c	;volatile
  4046  001798                     
  4047                           ;adc.c: 38:     ADCON0bits.ADON = 1;
  4048  001798  80C2               	bsf	194,0,c	;volatile
  4049  00179A  0012               	return		;funcret
  4050  00179C                     __end_of_adcInit:
  4051                           	callstack 0
  4052                           
  4053 ;; *************** function _isrL *****************
  4054 ;; Defined at:
  4055 ;;		line 28 in file "main.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4071 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4072 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4073 ;;Total ram usage:        4 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		Interrupt level 1
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	intcodelo
  4084  000018                     __pintcodelo:
  4085                           	callstack 0
  4086  000018                     _isrL:
  4087                           	callstack 19
  4088                           
  4089                           ;incstack = 0
  4090  000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4091  00001A  CFD8 F002          	movff	status,??_isrL+1
  4092  00001E  CFE8 F003          	movff	wreg,??_isrL+2
  4093  000022  CFE0 F004          	movff	bsr,??_isrL+3
  4094  000026                     
  4095                           ;main.c: 30:     if(TMR3IE && TMR3IF)
  4096  000026  A2A0               	btfss	4000,1,c	;volatile
  4097  000028  EF18  F000         	goto	i1u195_21
  4098  00002C  EF1A  F000         	goto	i1u195_20
  4099  000030                     i1u195_21:
  4100  000030  EF45  F000         	goto	i1l65
  4101  000034                     i1u195_20:
  4102  000034  A2A1               	btfss	4001,1,c	;volatile
  4103  000036  EF1F  F000         	goto	i1u196_21
  4104  00003A  EF21  F000         	goto	i1u196_20
  4105  00003E                     i1u196_21:
  4106  00003E  EF45  F000         	goto	i1l65
  4107  000042                     i1u196_20:
  4108  000042                     
  4109                           ;main.c: 31:     {;main.c: 32:         TMR3IF = 0;
  4110  000042  92A1               	bcf	4001,1,c	;volatile
  4111  000044                     
  4112                           ;main.c: 33:         datos.counter++;
  4113  000044  0100               	movlb	0	; () banked
  4114  000046  2BBC               	incf	_datos& (0+255),f,b
  4115  000048                     
  4116                           ; BSR set to: 0
  4117                           ;main.c: 34:         if(datos.counter == 50)
  4118  000048  0E32               	movlw	50
  4119  00004A  19BC               	xorwf	_datos& (0+255),w,b
  4120  00004C  A4D8               	btfss	status,2,c
  4121  00004E  EF2B  F000         	goto	i1u197_21
  4122  000052  EF2D  F000         	goto	i1u197_20
  4123  000056                     i1u197_21:
  4124  000056  EF45  F000         	goto	i1l65
  4125  00005A                     i1u197_20:
  4126  00005A                     
  4127                           ; BSR set to: 0
  4128                           ;main.c: 35:         {;main.c: 36:             datos.counter = 0;
  4129  00005A  0E00               	movlw	0
  4130  00005C  6FBC               	movwf	_datos& (0+255),b
  4131  00005E                     
  4132                           ; BSR set to: 0
  4133                           ;main.c: 37:             LATBbits.LATB2 = !LATBbits.LATB2;
  4134  00005E  A48A               	btfss	138,2,c	;volatile
  4135  000060  EF34  F000         	goto	i1u198_21
  4136  000064  EF38  F000         	goto	i1u198_20
  4137  000068                     i1u198_21:
  4138  000068  6A01               	clrf	??_isrL^0,c
  4139  00006A  2A01               	incf	??_isrL^0,f,c
  4140  00006C  EF39  F000         	goto	i1u199_28
  4141  000070                     i1u198_20:
  4142  000070  6A01               	clrf	??_isrL^0,c
  4143  000072                     i1u199_28:
  4144  000072  4601               	rlncf	??_isrL^0,f,c
  4145  000074  4601               	rlncf	??_isrL^0,f,c
  4146  000076  508A               	movf	138,w,c	;volatile
  4147  000078  1801               	xorwf	??_isrL^0,w,c
  4148  00007A  0BFB               	andlw	-5
  4149  00007C  1801               	xorwf	??_isrL^0,w,c
  4150  00007E  6E8A               	movwf	138,c	;volatile
  4151  000080                     
  4152                           ;main.c: 38:             datos.nextFunc = appStateRecolectData;
  4153  000080  0E00               	movlw	low _appStateRecolectData
  4154  000082  0100               	movlb	0	; () banked
  4155  000084  6FBE               	movwf	(_datos+2)& (0+255),b
  4156  000086  0E19               	movlw	high _appStateRecolectData
  4157  000088  6FBF               	movwf	(_datos+3)& (0+255),b
  4158  00008A                     i1l65:
  4159  00008A  C004  FFE0         	movff	??_isrL+3,bsr
  4160  00008E  C003  FFE8         	movff	??_isrL+2,wreg
  4161  000092  C002  FFD8         	movff	??_isrL+1,status
  4162  000096  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4163  000098  0010               	retfie	
  4164  00009A                     __end_of_isrL:
  4165                           	callstack 0
  4166                           
  4167 ;; *************** function _isrH *****************
  4168 ;; Defined at:
  4169 ;;		line 44 in file "main.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		None
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4186 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		Interrupt level 2
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	intcode
  4197  000008                     __pintcode:
  4198                           	callstack 0
  4199  000008                     _isrH:
  4200                           	callstack 19
  4201                           
  4202                           ;incstack = 0
  4203  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4204  00000A  ED92  F00C         	call	int_func,f	;refresh shadow registers
  4205  00000E                     
  4206                           	psect	intcode_body
  4207  001924                     __pintcode_body:
  4208                           	callstack 19
  4209  001924                     int_func:
  4210                           	callstack 19
  4211  001924  0006               	pop		; remove dummy address from shadow register refresh
  4212  001926  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4213  001928  0011               	retfie		f
  4214  00192A                     __end_of_isrH:
  4215                           	callstack 0
  4216                           
  4217                           	psect	rparam
  4218  0000                     
  4219                           	psect	temp
  4220  00005A                     btemp:
  4221                           	callstack 0
  4222  00005A                     	ds	1
  4223  0000                     int$flags	set	btemp
  4224  0000                     wtemp8	set	btemp+1
  4225  0000                     ttemp5	set	btemp+1
  4226  0000                     ttemp6	set	btemp+4
  4227  0000                     ttemp7	set	btemp+8
  4228                           
  4229                           	psect	idloc
  4230                           
  4231                           ;Config register IDLOC0 @ 0x200000
  4232                           ;	unspecified, using default values
  4233  200000                     	org	2097152
  4234  200000  FF                 	db	255
  4235                           
  4236                           ;Config register IDLOC1 @ 0x200001
  4237                           ;	unspecified, using default values
  4238  200001                     	org	2097153
  4239  200001  FF                 	db	255
  4240                           
  4241                           ;Config register IDLOC2 @ 0x200002
  4242                           ;	unspecified, using default values
  4243  200002                     	org	2097154
  4244  200002  FF                 	db	255
  4245                           
  4246                           ;Config register IDLOC3 @ 0x200003
  4247                           ;	unspecified, using default values
  4248  200003                     	org	2097155
  4249  200003  FF                 	db	255
  4250                           
  4251                           ;Config register IDLOC4 @ 0x200004
  4252                           ;	unspecified, using default values
  4253  200004                     	org	2097156
  4254  200004  FF                 	db	255
  4255                           
  4256                           ;Config register IDLOC5 @ 0x200005
  4257                           ;	unspecified, using default values
  4258  200005                     	org	2097157
  4259  200005  FF                 	db	255
  4260                           
  4261                           ;Config register IDLOC6 @ 0x200006
  4262                           ;	unspecified, using default values
  4263  200006                     	org	2097158
  4264  200006  FF                 	db	255
  4265                           
  4266                           ;Config register IDLOC7 @ 0x200007
  4267                           ;	unspecified, using default values
  4268  200007                     	org	2097159
  4269  200007  FF                 	db	255
  4270                           
  4271                           	psect	config
  4272                           
  4273                           ;Config register CONFIG1L @ 0x300000
  4274                           ;	PLL Prescaler Selection bits
  4275                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4276                           ;	System Clock Postscaler Selection bits
  4277                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4278                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4279                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4280  300000                     	org	3145728
  4281  300000  00                 	db	0
  4282                           
  4283                           ;Config register CONFIG1H @ 0x300001
  4284                           ;	Oscillator Selection bits
  4285                           ;	FOSC = HS, HS oscillator (HS)
  4286                           ;	Fail-Safe Clock Monitor Enable bit
  4287                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4288                           ;	Internal/External Oscillator Switchover bit
  4289                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4290  300001                     	org	3145729
  4291  300001  0C                 	db	12
  4292                           
  4293                           ;Config register CONFIG2L @ 0x300002
  4294                           ;	Power-up Timer Enable bit
  4295                           ;	PWRT = OFF, PWRT disabled
  4296                           ;	Brown-out Reset Enable bits
  4297                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  4298                           ;	Brown-out Reset Voltage bits
  4299                           ;	BORV = 3, Minimum setting 2.05V
  4300                           ;	USB Voltage Regulator Enable bit
  4301                           ;	VREGEN = OFF, USB voltage regulator disabled
  4302  300002                     	org	3145730
  4303  300002  19                 	db	25
  4304                           
  4305                           ;Config register CONFIG2H @ 0x300003
  4306                           ;	Watchdog Timer Enable bit
  4307                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4308                           ;	Watchdog Timer Postscale Select bits
  4309                           ;	WDTPS = 32768, 1:32768
  4310  300003                     	org	3145731
  4311  300003  1E                 	db	30
  4312                           
  4313                           ; Padding undefined space
  4314  300004                     	org	3145732
  4315  300004  FF                 	db	255
  4316                           
  4317                           ;Config register CONFIG3H @ 0x300005
  4318                           ;	CCP2 MUX bit
  4319                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4320                           ;	PORTB A/D Enable bit
  4321                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4322                           ;	Low-Power Timer 1 Oscillator Enable bit
  4323                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4324                           ;	MCLR Pin Enable bit
  4325                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4326  300005                     	org	3145733
  4327  300005  81                 	db	129
  4328                           
  4329                           ;Config register CONFIG4L @ 0x300006
  4330                           ;	Stack Full/Underflow Reset Enable bit
  4331                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4332                           ;	Single-Supply ICSP Enable bit
  4333                           ;	LVP = OFF, Single-Supply ICSP disabled
  4334                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4335                           ;	ICPRT = OFF, ICPORT disabled
  4336                           ;	Extended Instruction Set Enable bit
  4337                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4338                           ;	Background Debugger Enable bit
  4339                           ;	DEBUG = 0x1, unprogrammed default
  4340  300006                     	org	3145734
  4341  300006  81                 	db	129
  4342                           
  4343                           ; Padding undefined space
  4344  300007                     	org	3145735
  4345  300007  FF                 	db	255
  4346                           
  4347                           ;Config register CONFIG5L @ 0x300008
  4348                           ;	Code Protection bit
  4349                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4350                           ;	Code Protection bit
  4351                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4352                           ;	Code Protection bit
  4353                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4354                           ;	Code Protection bit
  4355                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4356  300008                     	org	3145736
  4357  300008  0F                 	db	15
  4358                           
  4359                           ;Config register CONFIG5H @ 0x300009
  4360                           ;	Boot Block Code Protection bit
  4361                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4362                           ;	Data EEPROM Code Protection bit
  4363                           ;	CPD = OFF, Data EEPROM is not code-protected
  4364  300009                     	org	3145737
  4365  300009  C0                 	db	192
  4366                           
  4367                           ;Config register CONFIG6L @ 0x30000A
  4368                           ;	Write Protection bit
  4369                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4370                           ;	Write Protection bit
  4371                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4372                           ;	Write Protection bit
  4373                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4374                           ;	Write Protection bit
  4375                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4376  30000A                     	org	3145738
  4377  30000A  0F                 	db	15
  4378                           
  4379                           ;Config register CONFIG6H @ 0x30000B
  4380                           ;	Configuration Register Write Protection bit
  4381                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4382                           ;	Boot Block Write Protection bit
  4383                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4384                           ;	Data EEPROM Write Protection bit
  4385                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4386  30000B                     	org	3145739
  4387  30000B  E0                 	db	224
  4388                           
  4389                           ;Config register CONFIG7L @ 0x30000C
  4390                           ;	Table Read Protection bit
  4391                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4392                           ;	Table Read Protection bit
  4393                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4394                           ;	Table Read Protection bit
  4395                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4396                           ;	Table Read Protection bit
  4397                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4398  30000C                     	org	3145740
  4399  30000C  0F                 	db	15
  4400                           
  4401                           ;Config register CONFIG7H @ 0x30000D
  4402                           ;	Boot Block Table Read Protection bit
  4403                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4404  30000D                     	org	3145741
  4405  30000D  40                 	db	64
  4406                           tosu	equ	0xFFF
  4407                           tosh	equ	0xFFE
  4408                           tosl	equ	0xFFD
  4409                           stkptr	equ	0xFFC
  4410                           pclatu	equ	0xFFB
  4411                           pclath	equ	0xFFA
  4412                           pcl	equ	0xFF9
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodh	equ	0xFF4
  4418                           prodl	equ	0xFF3
  4419                           indf0	equ	0xFEF
  4420                           postinc0	equ	0xFEE
  4421                           postdec0	equ	0xFED
  4422                           preinc0	equ	0xFEC
  4423                           plusw0	equ	0xFEB
  4424                           fsr0h	equ	0xFEA
  4425                           fsr0l	equ	0xFE9
  4426                           wreg	equ	0xFE8
  4427                           indf1	equ	0xFE7
  4428                           postinc1	equ	0xFE6
  4429                           postdec1	equ	0xFE5
  4430                           preinc1	equ	0xFE4
  4431                           plusw1	equ	0xFE3
  4432                           fsr1h	equ	0xFE2
  4433                           fsr1l	equ	0xFE1
  4434                           bsr	equ	0xFE0
  4435                           indf2	equ	0xFDF
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           preinc2	equ	0xFDC
  4439                           plusw2	equ	0xFDB
  4440                           fsr2h	equ	0xFDA
  4441                           fsr2l	equ	0xFD9
  4442                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        4
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160     40      96
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> appADC@dataOut(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> appADC@dataOut(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1461_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> appADC@dataOut(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> appADC@dataOut(BANK0[16]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 16
		 -> STR_4(CODE[6]), STR_3(CODE[12]), appADC@dataOut(BANK0[16]), 

    S202_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appStateRecolectData(), appStateInitial(), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appStateRecolectData(), appStateInitial(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appADC
    _appADC->_sprintf
    _sprintf->_vfprintf

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11581
                                             38 BANK0      2     2      0
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0    9905
                             _appADC
 ---------------------------------------------------------------------------------
 (2) _appADC                                              16    16      0    9905
                                             22 BANK0     16    16      0
                            _Lcd_Out
                        _adcGetValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6    8597
                                              6 BANK0     16    10      6
                        _adcGetValue (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             83 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    1676
                            _adcInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    1632
                                             14 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Out                                              7     4      3    1141
                                              7 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Chr_CP                                           3     3      0     176
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              7 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     176
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appInit
     _adcInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
   _appStateInitial *
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _adcGetValue
       _sprintf
         _adcGetValue (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      60       5       60.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B9      20        0.0%
DATA                 0      0      B9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat May 29 18:46:23 2021

                           l21 179A                             l24 1886                             l32 162E  
                           l26 1894                             l27 189C                             bsr 000FE0  
                          l110 1492                            l111 14DE                            l112 1530  
                          l141 10EE                            l125 12E4                            l222 18EA  
                          l231 1922                            l144 1218                            l225 190E  
                          l147 15B4                            l228 192E                            l361 0FA0  
                          l196 18FE                            l348 0E3C                            l199 191A  
                          l912 1752                            l942 1436                            l950 08C2  
                          l944 1470                            l952 08CA                            l970 0B00  
                          l939 13F4                            l991 1860                            l983 16F8  
                          l984 1700                            l977 0CB4                            l988 1858  
              adcInit@ADC_PINs 0006                            _PR2 000FCB                            _abs 1822  
                          _pad 13B0                            tosl 000FFD                            wreg 000FE8  
                         l1003 13AE                           l1011 17DE                           l1020 18D2  
                         l1014 1930                           l2000 151E                           l2010 1756  
                         l2002 1524                           ?_abs 0017                           l2020 178E  
                         l2012 1766                           l2004 1524                           l2022 1796  
                         l2014 1772                           l2006 152A                           l2024 1798  
                         l2016 1782                           l2008 152A                           l2040 155A  
                         l2200 0D2A                           l2018 1786                           l2042 156C  
                         l2050 18F2                           l2210 0D84                           l2202 0D48  
                         l2044 157E                           l2036 1532                           l2052 18F6  
                         l2060 1910                           l2212 0DB2                           l2204 0D50  
                         l2220 0DEC                           l2300 089C                           l2046 159C  
                         l2038 1542                           l2054 18F8                           l2062 1918  
                         l2070 18DC                           l2222 0DFC                           l2214 0DD2  
                         l2206 0D64                           l2230 0E42                           l2310 08F8  
                         l2302 08B6                           l2064 191C                           l2056 18FA  
                         l2048 18EC                           l2072 18E2                           l2224 0E1C  
                         l2216 0DD4                           l2208 0D72                           l2240 0EA2  
                         l2232 0E50                           l2160 1332                           l2152 12E6  
                         l2320 0998                           l2312 0900                           l2304 08D2  
                         l2400 16DC                           l2058 18FC                           l2074 18E6  
                         l2066 18D4                           l2218 0DE6                           l2250 0F18  
                         l2242 0EC0                           l2234 0E70                           l2162 1368  
                         l2154 12F8                           l2170 17BA                           l2330 0A54  
                         l2322 099E                           l2314 090A                           l2306 08E4  
                         l2410 1740                           l2402 1702                           l2068 18D8  
                         l2260 0F80                           l2252 0F38                           l2244 0EC8  
                         l2236 0E74                           l2228 0E3E                           l2156 130A  
                         l2172 17BE                           l2180 18C6                           l2340 0AA2  
                         l2332 0A6E                           l2316 0910                           l2324 0A02  
                         l2308 08F2                           l2404 1714                           l2420 15F8  
                         l2190 0CE8                           l2254 0F4A                           l2246 0EDC  
                         l2238 0E82                           l2158 1314                           l2166 179C  
                         l2174 189E                           l2270 13E0                           l2342 0AB4  
                         l2326 0A1C                           l2334 0A7C                           l2318 0992  
                         l2406 171C                           l2422 161C                           l2414 15B6  
                         l2430 1636                           l2192 0CEC                           l2184 0CB6  
                         l2248 0EEA                           l2256 0F50                           l2168 17A8  
                         l2176 18AA                           l2280 1444                           l2272 13EC  
                         l2264 13B0                           l2344 0AC0                           l2336 0A8E  
                         l2328 0A3A                           l2360 0B4A                           l2352 0B02  
                         l2408 1724                           l2416 15C2                           l2424 1900  
                         l2432 163A                           l2194 0CFA                           l2186 0CBA  
                         l2258 0F60                           l2178 18AE                           l2282 1458  
                         l2274 1400                           l2266 13BE                           l2346 0AC8  
                         l2338 0A9C                           l2290 0824                           l2370 0C12  
                         l2362 0B6E                           l2354 0B26                           l2418 15E6  
                         l2426 1904                           l2434 1662                           l2196 0D1A  
                         l2188 0CC8                           l2276 1414                           l2268 13D2  
                         l2348 0AD8                           l2292 0844                           l2372 0C36  
                         l2380 0C64                           l2364 0B92                           l2356 0B34  
                         l2436 167A                           l2428 1630                           l1910 1876  
                         l2198 0D1E                           l2286 1822                           l2278 1418  
                         l2294 086C                           l2382 0C72                           l2374 0C44  
                         l2366 0BDA                           l2358 0B46                           l1912 1884  
                         l2288 183C                           l2296 088C                           l2376 0C58  
                         l2474 125C                           l1930 122A                           l2298 089A  
                         l2386 0C7E                           l2394 16A0                           l1860 117C  
                         l1932 1234                           l1940 1282                           l1908 1864  
                         l2388 0CA2                           l2396 16A8                           l1870 1200  
                         l1862 117E                           l1854 10F2                           l1942 128C  
                         l1934 123E                           l1926 121C                           l2398 16B6  
                         l1872 1206                           l1864 1184                           l1856 10F6  
                         l1952 1472                           l1880 1038                           l1944 12B0  
                         l1928 1220                           l1874 1208                           l1866 11F6  
                         l1858 1174                           l1970 14B6                           l1962 14AA  
                         l1954 147E                           l1890 10CE                           l1882 1040  
                         l1946 12B4                           l1938 1248                           l1868 11FE  
                         l1980 14FC                           l1972 14B8                           l1964 14B0  
                         l1956 148E                           l1892 10D0                           l1884 1042  
                         l1876 0FA4                           l1990 1506                           l1982 14FE  
                         l1974 14BA                           l1966 14B2                           l1894 10D6  
                         l1886 1048                           l1878 0FA8                           ?_pad 0015  
                         l1992 1518                           l1984 1500                           l1976 14CC  
                         l1968 14B4                           l1896 10D8                           l1888 10C6  
                         l1994 1518                           l1986 1502                           l1978 14F6  
                         l1898 10DE                           l1996 1518                           l1988 1504  
                         l1998 151E                           STR_1 080D                           STR_2 0815  
                         STR_3 0801                           STR_4 081D                           u1310 1894  
                         u1215 10FE                           u1311 1890                           u2007 166E  
                         u1320 12AC                           u1225 1118                           u2017 187C  
                         u1330 12D4                           u1235 113E                           u2107 10E4  
                         u2027 154C                           u1340 12E4                           u1500 1368  
                         u2117 1484                           u1245 0FB0                           u1341 12E0  
                         u2037 1588                           u1501 1364                           u1350 14DE  
                         u1510 17DE                           u2207 120E                           u1351 14DA  
                         u2127 14AC                           u1255 0FD4                           u1327 12A2  
                         u2047 15A6                           u1511 17DA                           u1360 1766  
                         u1600 0E50                           u1520 18C6                           u1361 1762  
                         u2137 14C2                           u2057 103A                           u1265 0FFA  
                         u1337 12CA                           u1601 0E4C                           u1521 18C2  
                         u1530 0CC8                           u1610 0E82                           u2147 14F8  
                         u2067 1044                           u1275 101E                           u1531 0CC4  
                         u1611 0E7E                           u1540 0CFA                           u1620 0EC0  
                         u1700 183C                           u2157 150E                           u2077 10C8  
                         u1285 1052                           u1541 0CF6                           u1621 0EBC  
                         u1701 1838                           u1630 0EEA                           u1470 12F8  
                         u1710 0854                           u2167 1176                           u2087 10D2  
                         u1295 1096                           u1551 0D24                           u1631 0EE6  
                         u1471 12F4                           u1711 084E                           u1560 0D48  
                         u1640 0F18                           u1480 130A                           u1800 0A54  
                         u1720 0856                           u2177 1180                           u2097 10DA  
                         u1561 0D44                           u1641 0F14                           u1481 1306  
                         u1801 0A50                           u1570 0D72                           u1650 0F60  
                         u1490 1332                           u1810 0A6E                           u1730 086C  
                         u2187 11F8                           u1571 0D6E                           u1651 0F5C  
                         u1491 132E                           u1811 0A6A                           u1731 0868  
                         u1580 0DB2                           u1660 13BE                           u1820 0A7C  
                         u1740 089A                           u1900 16F8                           u2197 1202  
                         u1581 0DAE                           u1661 13BA                           u1821 0A78  
                         u1741 0896                           u1901 16F4                           u1590 0DFC  
                         u1670 13E0                           u1830 0A8E                           u1750 08B6  
                         u1591 0DF8                           u1671 13DC                           u1831 0A8A  
                         u1751 08B2                           u1911 15BC                           u1680 1436  
                         u1840 0A9C                           u1760 08E4                           u1920 164E  
                         u1681 1432                           u1841 0A98                           u1761 08E0  
                         u1921 1644                           u1690 1444                           u1850 0AB4  
                         u1770 08F2                           u1691 1440                           u1851 0AB0  
                         u1771 08EE                           u1780 0A1C                           u1860 0B26  
                         u1781 0A18                           u1861 0B22                           u1790 0A3A  
                         u1870 0B6E                           u1791 0A36                           u1871 0B6A  
                         u1880 0B92                           u1881 0B8E                           u1890 0C36  
                         u1938 1652                           u1891 0C32                           u1948 1684  
                         u1949 1698                           i1l65 008A                           i2l70 1926  
                         _TMR2 000FCC                           _TMR3 000FB2                           abs@a 0017  
                         _dbuf 0074                           _main 1630                           _dtoa 0824  
                         _isrH 0008                           _isrL 0018                           _prec 0056  
                         _nout 0070                           pad@i 001C                           pad@p 0019  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005A                           start 009A  
 __end_of_appStateRecolectData 1910                __end_of_Lcd_Cmd 121A                __end_of_Lcd_Out 12E6  
                 ___param_bank 000000                     _Lcd_Chr_CP 0FA2           __size_of_appLCD_Init 0084  
                        ??_abs 0019                          ??_pad 001B                __end_of___aodiv 0E3E  
                        ?_main 0001                          ?_dtoa 0020                __end_of___aomod 0FA2  
                        ?_isrH 0001                          ?_isrL 0001                __end_of_adcInit 179C  
                        _ADRES 000FC3        __end_of_appStateInitial 1930                   vfpfcnvrt@fmt 0046  
                        _PORTB 000F81                __end_of_appInit 18EC                          _datos 00BC  
                        _flags 0058                          _fputc 12E6                          _fputs 179C  
                        pad@fp 0015                          _width 0072                          _putch 1930  
                        dtoa@d 0022                          dtoa@i 0042                          dtoa@n 003A  
                        dtoa@p 0034                          dtoa@s 0038                          dtoa@w 0036  
                        pclath 000FFA                          tablat 000FF5                          ttemp5 005B  
                        ttemp6 005E                          ttemp7 0062                          status 000FD8  
                        wtemp8 005B                __end_of_sprintf 1754           __end_of_appTimerInit 1900  
             __end_of_Lcd_Init 1532                __initialization 17E0                   __end_of_main 16A0  
                 __end_of_dtoa 0B02                   __end_of_isrH 192A                   __end_of_isrL 009A  
                       ??_main 00BA                         ??_dtoa 002A                         ??_isrH 0001  
                       ??_isrL 0001                  __activetblptr 000002                         ?_fputc 0005  
                       ?_fputs 000E          __size_of_appISRConfig 0008                         ?_putch 0001  
                       i1l2440 0034                         i1l2450 005E                         i1l2442 0042  
                       i1l2452 0080                         i1l2444 0044                         i1l2446 0048  
                       i1l2438 0026                         i1l2448 005A                      ??_Lcd_Cmd 0005  
                       _TMR3IE 007D01                         _TMR3IF 007D09                      ??_Lcd_Out 000B  
                 vfprintf@cfmt 0054                    ?_Lcd_Chr_CP 0001                         _appADC 15B6  
                    ??___aodiv 0015                      ??___aomod 0015                      ??_adcInit 0005  
                       clear_0 1806                      ??_appInit 0011                         pad@buf 0017  
                       dtoa@fp 0020                         _strlen 189E                   _appISRConfig 191C  
                       fputc@c 0005               ?_appStateInitial 0001                         fputs@c 0012  
                       fputs@i 0013                         fputs@s 000E                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         _appStateRecolectData 1900              adcGetValue@PinADC 0008                         putch@c 0001  
             __end_of_vfprintf 1702                      ??_sprintf 0056                     __accesstop 0060  
      __end_of__initialization 1814          __end_of_appTimerStart 191C                  ___rparam_used 000001  
               __pcstackCOMRAM 0001                   __pidataBANK0 192A                  __end_of_fputc 13B0  
                __end_of_fputs 17E0                  __end_of_putch 1932                  ??_adcGetValue 0007  
        ?_appStateRecolectData 0001                      ?_Lcd_Init 0001                        ??_fputc 0009  
                      ??_fputs 0012            __size_of_Lcd_Chr_CP 014E                        ??_putch 0005  
        __size_of_appTimerInit 0014                     __pbssBANK0 0060                        ?_appADC 0001  
                      ?_strlen 0005                   _appTimerInit 18EC             __size_of_vfpfcnvrt 01B4  
                   ??_Lcd_Init 0008            __end_of_adcGetValue 189E                        _Lcd_Cmd 10F0  
                      _Lcd_Out 121A                  ??_appLCD_Init 000F                        __Hparam 0000  
                      __Lparam 0000                        ___aodiv 0CB6                        ___aomod 0E3E  
                      _adcInit 1754                __size_of_appADC 007A                      ?_vfprintf 0094  
                 __psmallconst 0800                        __pcinit 17E0                        _appInit 18D4  
                      __ramtop 0800                        __ptext0 1630                        __ptext1 192E  
                      __ptext2 1900                        __ptext3 15B6                        __ptext4 1702  
                      __ptext5 16A0                        __ptext6 0B02                        __ptext7 0824  
                      __ptext8 13B0                        __ptext9 189E                __size_of_strlen 0036  
                    _T2CONbits 000FCA                   __size_of_abs 0040                   __size_of_pad 00C2  
       ??_appStateRecolectData 0056                      _T3CONbits 000FB1                        _sprintf 1702  
               __pintcode_body 1924           end_of_initialization 1814                        fputc@fp 0007  
                __Lmediumconst 0000                        int_func 1924                        fputs@fp 0010  
            __end_of_vfpfcnvrt 0CB6                      Lcd_Init@i 0009                   ??_Lcd_Chr_CP 0005  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 0054  
          __end_of_appLCD_Init 15B6                        strlen@a 0007                        strlen@s 0005  
                    _PORTBbits 000F81                    _adcGetValue 1862                      _TRISBbits 000F93  
                    _TRISDbits 000F95             __end_of_Lcd_Chr_CP 10F0                 __end_of_appADC 1630  
                  vfpfcnvrt@ap 0048                    vfpfcnvrt@fp 0044                    vfpfcnvrt@ll 004C  
               __end_of_strlen 18D4            start_initialization 17E0                    __end_of_abs 1862  
                  __end_of_pad 1472                  Lcd_Out@buffer 0009       __size_of_appStateInitial 0002  
            __size_of_Lcd_Init 00C0             fp__appStateInitial 000E                    _appLCD_Init 1532  
                  vfprintf@fmt 0096                       ??_appADC 0056                    __pdataBANK0 00BC  
                     ??_strlen 0007         __size_of_appTimerStart 000C                    __pbssCOMRAM 0056  
                __pcstackBANK0 0094               ___aodiv@dividend 0005        fp__appStateRecolectData 000E  
                     ?_Lcd_Cmd 0001                       ?_Lcd_Out 0008                      _dtoa$1534 0032  
                    __pintcode 0008                       ?___aodiv 0005                       ?___aomod 0005  
                     ?_adcInit 0001               ___aodiv@quotient 0017                    __pintcodelo 0018  
                     ?_appInit 0001                    appADC@F3552 0060              __size_of_vfprintf 0062  
                  __smallconst 0800                       ?_sprintf 009A                 __size_of_fputc 00CA  
               __size_of_fputs 0044                 __size_of_putch 0002                       _LATBbits 000F8A  
                     _LATDbits 000F8C                  _appTimerStart 1910                       _IPR2bits 000FA2  
                     _PIE2bits 000FA0              ??_appStateInitial 0005                       i1u195_20 0034  
                     i1u195_21 0030                       i1u196_20 0042                       i1u196_21 003E  
                     i1u197_20 005A                       i1u197_21 0056                       i1u198_20 0070  
                     i1u198_21 0068                       i1u199_28 0072                       _PIR1bits 000F9E  
                     _PIR2bits 000FA1                       _GO_nDONE 007E11                       _RCONbits 000FD0  
                     Lcd_Out@x 0008                       Lcd_Out@y 000D                      _vfpfcnvrt 0B02  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
                ?_appISRConfig 0001                   ?_adcGetValue 0005  __size_of_appStateRecolectData 0010  
                     _Lcd_Init 1472                      copy_data0 17F4                 ?_appTimerStart 0001  
             __size_of_Lcd_Cmd 012A               __size_of_Lcd_Out 00CC                       __Hrparam 0000  
                   vfprintf@ap 0098                       __Lrparam 0000                     vfprintf@fp 0094  
             __size_of___aodiv 0188               __size_of___aomod 0164               __size_of_adcInit 0048  
                   ?_vfpfcnvrt 0044                ___aodiv@divisor 000D                 ??_appISRConfig 0005  
                appADC@dataOut 00AA                ___aodiv@counter 0015               __size_of_appInit 0018  
                   sprintf@fmt 009C                 Lcd_Chr_CP@data 0007                       __ptext10 179C  
                     __ptext11 12E6                       __ptext20 1532                       __ptext12 1930  
                     __ptext21 121A                       __ptext13 1822                       __ptext22 0FA2  
                     __ptext14 0E3E                       __ptext23 1472                       __ptext15 0CB6  
                     __ptext24 10F0                       __ptext16 1862                       __ptext25 191C  
                     __ptext17 18D4                       __ptext26 1754                       __ptext18 1910  
                     __ptext19 18EC               __size_of_sprintf 0052                    Lcd_Cmd@data 0007  
                __size_of_main 0070                  __size_of_dtoa 02DE                  __size_of_isrH 1922  
                __size_of_isrL 0082                   ?_appLCD_Init 0001                       int$flags 005A  
                     _vfprintf 16A0               ___aomod@dividend 0005                  ?_appTimerInit 0001  
                  Lcd_Out@data 000E                     _INTCONbits 000FF2                       intlevel1 0000  
                     intlevel2 0000                      sprintf@ap 00A2                ??_appTimerStart 0005  
              ___aomod@divisor 000D                    ??_vfpfcnvrt 004A                ___aomod@counter 0015  
               ??_appTimerInit 0005                       sprintf@f 00A4                       sprintf@s 009A  
         __size_of_adcGetValue 003C                _appStateInitial 192E                   ___aodiv@sign 0016  
         __end_of_appISRConfig 1924                   ___aomod@sign 0016  
