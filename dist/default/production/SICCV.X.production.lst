

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat May 29 20:31:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataBANK0
    96  002A44                     __pidataBANK0:
    97                           	callstack 0
    98                           
    99                           ;initializer for _datos
   100  002A44  00                 	db	0
   101  002A45  FF                 	db	255
   102  002A46  00                 	db	0
   103  002A47  0000               	dw	0
   104  002A49  00                 	db	0
   105  002A4A  00                 	db	0
   106  002A4B  00                 	db	0
   107  002A4C  00                 	db	0
   108  002A4D  00                 	db	0
   109  002A4E  00                 	db	0
   110  002A4F  00                 	db	0
   111  002A50  00                 	db	0
   112  002A51  00                 	db	0
   113  002A52  00                 	db	0
   114  002A53  00                 	db	0
   115  002A54  00                 	db	0
   116  002A55  00                 	db	0
   117  002A56  00                 	db	0
   118  002A57  00                 	db	0
   119  002A58  00                 	db	0
   120  002A59  8A                 	db	low _appStateInitial
   121  002A5A  2A                 	db	high _appStateInitial
   122  0000                     _TMR3	set	4018
   123  0000                     _ADRES	set	4035
   124  0000                     _INTCONbits	set	4082
   125  0000                     _RCONbits	set	4048
   126  0000                     _PIE2bits	set	4000
   127  0000                     _IPR2bits	set	4002
   128  0000                     _PIR2bits	set	4001
   129  0000                     _T3CONbits	set	4017
   130  0000                     _PIR1bits	set	3998
   131  0000                     _PR2	set	4043
   132  0000                     _TMR2	set	4044
   133  0000                     _T2CONbits	set	4042
   134  0000                     _LATDbits	set	3980
   135  0000                     _TRISDbits	set	3989
   136  0000                     _PORTBbits	set	3969
   137  0000                     _PORTB	set	3969
   138  0000                     _LATBbits	set	3978
   139  0000                     _TRISBbits	set	3987
   140  0000                     _ADCON0bits	set	4034
   141  0000                     _ADCON2bits	set	4032
   142  0000                     _ADCON1bits	set	4033
   143  0000                     _TMR3IF	set	32009
   144  0000                     _TMR3IE	set	32001
   145  0000                     _GO_nDONE	set	32273
   146                           
   147                           	psect	smallconst
   148  000800                     __psmallconst:
   149                           	callstack 0
   150  000800  00                 	db	0
   151  000801                     STR_1:
   152  000801  54                 	db	84	;'T'
   153  000802  3A                 	db	58	;':'
   154  000803  25                 	db	37
   155  000804  30                 	db	48	;'0'
   156  000805  32                 	db	50	;'2'
   157  000806  64                 	db	100	;'d'
   158  000807  2E                 	db	46
   159  000808  25                 	db	37
   160  000809  30                 	db	48	;'0'
   161  00080A  32                 	db	50	;'2'
   162  00080B  64                 	db	100	;'d'
   163  00080C  20                 	db	32
   164  00080D  43                 	db	67	;'C'
   165  00080E  00                 	db	0
   166  00080F                     STR_3:
   167  00080F  42                 	db	66	;'B'
   168  000810  69                 	db	105	;'i'
   169  000811  65                 	db	101	;'e'
   170  000812  6E                 	db	110	;'n'
   171  000813  76                 	db	118	;'v'
   172  000814  65                 	db	101	;'e'
   173  000815  6E                 	db	110	;'n'
   174  000816  69                 	db	105	;'i'
   175  000817  64                 	db	100	;'d'
   176  000818  6F                 	db	111	;'o'
   177  000819  73                 	db	115	;'s'
   178  00081A  00                 	db	0
   179  00081B                     STR_2:
   180  00081B  42                 	db	66	;'B'
   181  00081C  61                 	db	97	;'a'
   182  00081D  74                 	db	116	;'t'
   183  00081E  3A                 	db	58	;':'
   184  00081F  25                 	db	37
   185  000820  64                 	db	100	;'d'
   186  000821  00                 	db	0
   187  000822                     STR_4:
   188  000822  53                 	db	83	;'S'
   189  000823  49                 	db	73	;'I'
   190  000824  43                 	db	67	;'C'
   191  000825  43                 	db	67	;'C'
   192  000826  56                 	db	86	;'V'
   193  000827  00                 	db	0
   194  000828                     STR_5:
   195  000828  23                 	db	35
   196  000829  3A                 	db	58	;':'
   197  00082A  25                 	db	37
   198  00082B  64                 	db	100	;'d'
   199  00082C  00                 	db	0
   200  00082D  00                 	db	0	; dummy byte at the end
   201  0000                     
   202                           ; #config settings
   203                           
   204                           	psect	cinit
   205  0028FC                     __pcinit:
   206                           	callstack 0
   207  0028FC                     start_initialization:
   208                           	callstack 0
   209  0028FC                     __initialization:
   210                           	callstack 0
   211                           
   212                           ; Initialize objects allocated to BANK0 (23 bytes)
   213                           ; load TBLPTR registers with __pidataBANK0
   214  0028FC  0E44               	movlw	low __pidataBANK0
   215  0028FE  6EF6               	movwf	tblptrl,c
   216  002900  0E2A               	movlw	high __pidataBANK0
   217  002902  6EF7               	movwf	tblptrh,c
   218  002904  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   219  002906  6EF8               	movwf	tblptru,c
   220  002908  EE00  F0C6         	lfsr	0,__pdataBANK0
   221  00290C  EE10 F017          	lfsr	1,23
   222  002910                     copy_data0:
   223  002910  0009               	tblrd		*+
   224  002912  CFF5 FFEE          	movff	tablat,postinc0
   225  002916  50E5               	movf	postdec1,w,c
   226  002918  50E1               	movf	fsr1l,w,c
   227  00291A  E1FA               	bnz	copy_data0
   228                           
   229                           ; Clear objects allocated to BANK0 (61 bytes)
   230  00291C  EE00  F060         	lfsr	0,__pbssBANK0
   231  002920  0E3D               	movlw	61
   232  002922                     clear_0:
   233  002922  6AEE               	clrf	postinc0,c
   234  002924  06E8               	decf	wreg,f,c
   235  002926  E1FD               	bnz	clear_0
   236                           
   237                           ; Clear objects allocated to COMRAM (2 bytes)
   238  002928  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   239  00292A  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   240  00292C                     end_of_initialization:
   241                           	callstack 0
   242  00292C                     __end_of__initialization:
   243                           	callstack 0
   244  00292C  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   245  00292E  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   246  002930  0E00               	movlw	low (__Lmediumconst shr (0+16))
   247  002932  6EF8               	movwf	tblptru,c
   248  002934  0100               	movlb	0
   249  002936  EF3A  F013         	goto	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMRAM
   252  00005A                     __pbssCOMRAM:
   253                           	callstack 0
   254  00005A                     _flags:
   255                           	callstack 0
   256  00005A                     	ds	2
   257                           
   258                           	psect	bssBANK0
   259  000060                     __pbssBANK0:
   260                           	callstack 0
   261  000060                     	ds	9
   262  000069                     	ds	8
   263  000071                     	ds	6
   264  000077                     _nout:
   265                           	callstack 0
   266  000077                     	ds	2
   267  000079                     _width:
   268                           	callstack 0
   269  000079                     	ds	2
   270  00007B                     _prec:
   271                           	callstack 0
   272  00007B                     	ds	2
   273  00007D                     _dbuf:
   274                           	callstack 0
   275  00007D                     	ds	32
   276                           
   277                           	psect	dataBANK0
   278  0000C6                     __pdataBANK0:
   279                           	callstack 0
   280  0000C6                     _datos:
   281                           	callstack 0
   282  0000C6                     	ds	23
   283                           
   284                           	psect	cstackBANK0
   285  00009D                     __pcstackBANK0:
   286                           	callstack 0
   287  00009D                     ?_vfprintf:
   288                           	callstack 0
   289  00009D                     vfprintf@fp:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x0
   293  00009D                     	ds	2
   294  00009F                     vfprintf@fmt:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x2
   298  00009F                     	ds	2
   299  0000A1                     vfprintf@ap:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x4
   303  0000A1                     	ds	2
   304  0000A3                     vfprintf@cfmt:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x6
   308  0000A3                     	ds	2
   309  0000A5                     ?_sprintf:
   310                           	callstack 0
   311  0000A5                     sprintf@s:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x8
   315  0000A5                     	ds	2
   316  0000A7                     sprintf@fmt:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xA
   320  0000A7                     	ds	8
   321  0000AF                     sprintf@ap:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x12
   325  0000AF                     	ds	2
   326  0000B1                     sprintf@f:
   327                           	callstack 0
   328                           
   329                           ; 6 bytes @ 0x14
   330  0000B1                     	ds	6
   331  0000B7                     appElemts@elements:
   332                           	callstack 0
   333  0000B7                     appBat@dataOut:
   334                           	callstack 0
   335  0000B7                     appADC@dataOut:
   336                           	callstack 0
   337                           
   338                           ; 9 bytes @ 0x1A
   339  0000B7                     	ds	2
   340  0000B9                     appElemts@dataout:
   341                           	callstack 0
   342                           
   343                           ; 6 bytes @ 0x1C
   344  0000B9                     	ds	6
   345  0000BF                     appBat@bat:
   346                           	callstack 0
   347                           
   348                           ; 4 bytes @ 0x22
   349  0000BF                     	ds	1
   350  0000C0                     appADC@lm35val:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0x23
   354  0000C0                     	ds	4
   355  0000C4                     ??_main:
   356                           
   357                           ; 1 bytes @ 0x27
   358  0000C4                     	ds	2
   359                           
   360                           	psect	cstackCOMRAM
   361  000001                     __pcstackCOMRAM:
   362                           	callstack 0
   363  000001                     ??_isrL:
   364  000001                     
   365                           ; 1 bytes @ 0x0
   366  000001                     	ds	3
   367  000004                     ??_Lcd_Cmd:
   368  000004                     ??_Lcd_Chr_CP:
   369  000004                     ??_adcInit:
   370  000004                     ?_strlen:
   371                           	callstack 0
   372  000004                     ?_isdigit:
   373                           	callstack 0
   374  000004                     ?_isspace:
   375                           	callstack 0
   376  000004                     ?_adcGetValue:
   377                           	callstack 0
   378  000004                     ?___wmul:
   379                           	callstack 0
   380  000004                     ?___flmul:
   381                           	callstack 0
   382  000004                     ?___aodiv:
   383                           	callstack 0
   384  000004                     ?___aomod:
   385                           	callstack 0
   386  000004                     ___wmul@multiplier:
   387                           	callstack 0
   388  000004                     isdigit@c:
   389                           	callstack 0
   390  000004                     isspace@c:
   391                           	callstack 0
   392  000004                     fputc@c:
   393                           	callstack 0
   394  000004                     strlen@s:
   395                           	callstack 0
   396  000004                     ___flmul@b:
   397                           	callstack 0
   398  000004                     ___aodiv@dividend:
   399                           	callstack 0
   400  000004                     ___aomod@dividend:
   401                           	callstack 0
   402                           
   403                           ; 8 bytes @ 0x3
   404  000004                     	ds	1
   405  000005                     adcInit@ADC_PINs:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x4
   409  000005                     	ds	1
   410  000006                     ??_isdigit:
   411  000006                     ??_isspace:
   412  000006                     ??_adcGetValue:
   413  000006                     Lcd_Chr_CP@data:
   414                           	callstack 0
   415  000006                     Lcd_Cmd@data:
   416                           	callstack 0
   417  000006                     ___wmul@multiplicand:
   418                           	callstack 0
   419  000006                     fputc@fp:
   420                           	callstack 0
   421  000006                     strlen@a:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x5
   425  000006                     	ds	1
   426  000007                     ??_Lcd_Init:
   427  000007                     adcGetValue@PinADC:
   428                           	callstack 0
   429  000007                     Lcd_Out@x:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x6
   433  000007                     	ds	1
   434  000008                     ??_fputc:
   435  000008                     ?___xxtofl:
   436                           	callstack 0
   437  000008                     Lcd_Init@i:
   438                           	callstack 0
   439  000008                     Lcd_Out@buffer:
   440                           	callstack 0
   441  000008                     ___wmul@product:
   442                           	callstack 0
   443  000008                     ___flmul@a:
   444                           	callstack 0
   445  000008                     ___xxtofl@val:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x7
   449  000008                     	ds	2
   450  00000A                     ??_Lcd_Out:
   451  00000A                     _isspace$1620:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x9
   455  00000A                     	ds	1
   456  00000B                     ?_atoi:
   457                           	callstack 0
   458  00000B                     atoi@s:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xA
   462  00000B                     	ds	1
   463  00000C                     ??___flmul:
   464  00000C                     ??___xxtofl:
   465  00000C                     Lcd_Out@y:
   466                           	callstack 0
   467  00000C                     ___aodiv@divisor:
   468                           	callstack 0
   469  00000C                     ___aomod@divisor:
   470                           	callstack 0
   471                           
   472                           ; 8 bytes @ 0xB
   473  00000C                     	ds	1
   474  00000D                     ??_atoi:
   475  00000D                     Lcd_Out@data:
   476                           	callstack 0
   477  00000D                     fputs@s:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xC
   481  00000D                     	ds	1
   482  00000E                     ??_appLCD_Init:
   483                           
   484                           ; 1 bytes @ 0xD
   485  00000E                     	ds	1
   486  00000F                     fputs@fp:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xE
   490  00000F                     	ds	1
   491  000010                     ___flmul@sign:
   492                           	callstack 0
   493  000010                     ___xxtofl@sign:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0xF
   497  000010                     	ds	1
   498  000011                     ___xxtofl@exp:
   499                           	callstack 0
   500  000011                     fputs@c:
   501                           	callstack 0
   502  000011                     atoi@neg:
   503                           	callstack 0
   504  000011                     ___flmul@grs:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x10
   508  000011                     	ds	1
   509  000012                     fputs@i:
   510                           	callstack 0
   511  000012                     ___xxtofl@arg:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0x11
   515  000012                     	ds	1
   516  000013                     _atoi$1602:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x12
   520  000013                     	ds	1
   521  000014                     ?_pad:
   522                           	callstack 0
   523  000014                     ___aodiv@counter:
   524                           	callstack 0
   525  000014                     ___aomod@counter:
   526                           	callstack 0
   527  000014                     pad@fp:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x13
   531  000014                     	ds	1
   532  000015                     ___aodiv@sign:
   533                           	callstack 0
   534  000015                     ___aomod@sign:
   535                           	callstack 0
   536  000015                     ___flmul@aexp:
   537                           	callstack 0
   538  000015                     _atoi$1604:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x14
   542  000015                     	ds	1
   543  000016                     ?_abs:
   544                           	callstack 0
   545  000016                     ___flmul@bexp:
   546                           	callstack 0
   547  000016                     pad@buf:
   548                           	callstack 0
   549  000016                     abs@a:
   550                           	callstack 0
   551  000016                     ___aodiv@quotient:
   552                           	callstack 0
   553                           
   554                           ; 8 bytes @ 0x15
   555  000016                     	ds	1
   556  000017                     _atoi$1603:
   557                           	callstack 0
   558  000017                     ___flmul@prod:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x16
   562  000017                     	ds	1
   563  000018                     ??_abs:
   564  000018                     pad@p:
   565                           	callstack 0
   566  000018                     atoi@n:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x17
   570  000018                     	ds	2
   571  00001A                     ??_pad:
   572                           
   573                           ; 1 bytes @ 0x19
   574  00001A                     	ds	1
   575  00001B                     ___flmul@temp:
   576                           	callstack 0
   577  00001B                     pad@i:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x1A
   581  00001B                     	ds	2
   582  00001D                     ?___fldiv:
   583                           	callstack 0
   584  00001D                     pad@w:
   585                           	callstack 0
   586  00001D                     ___fldiv@b:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x1C
   590  00001D                     	ds	2
   591  00001F                     ?_dtoa:
   592                           	callstack 0
   593  00001F                     dtoa@fp:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x1E
   597  00001F                     	ds	2
   598  000021                     ___fldiv@a:
   599                           	callstack 0
   600  000021                     dtoa@d:
   601                           	callstack 0
   602                           
   603                           ; 8 bytes @ 0x20
   604  000021                     	ds	4
   605  000025                     ??___fldiv:
   606                           
   607                           ; 1 bytes @ 0x24
   608  000025                     	ds	4
   609  000029                     ??_dtoa:
   610  000029                     ___fldiv@rem:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x28
   614  000029                     	ds	4
   615  00002D                     ___fldiv@sign:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x2C
   619  00002D                     	ds	1
   620  00002E                     ___fldiv@new_exp:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x2D
   624  00002E                     	ds	2
   625  000030                     ___fldiv@grs:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x2F
   629  000030                     	ds	1
   630  000031                     _dtoa$1567:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x30
   634  000031                     	ds	2
   635  000033                     dtoa@p:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x32
   639  000033                     	ds	1
   640  000034                     ___fldiv@bexp:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x33
   644  000034                     	ds	1
   645  000035                     ___fldiv@aexp:
   646                           	callstack 0
   647  000035                     dtoa@w:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x34
   651  000035                     	ds	1
   652  000036                     ?___fltol:
   653                           	callstack 0
   654  000036                     ___fltol@f1:
   655                           	callstack 0
   656                           
   657                           ; 4 bytes @ 0x35
   658  000036                     	ds	1
   659  000037                     dtoa@s:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x36
   663  000037                     	ds	2
   664  000039                     dtoa@n:
   665                           	callstack 0
   666                           
   667                           ; 8 bytes @ 0x38
   668  000039                     	ds	1
   669  00003A                     ??___fltol:
   670                           
   671                           ; 1 bytes @ 0x39
   672  00003A                     	ds	4
   673  00003E                     ___fltol@sign1:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x3D
   677  00003E                     	ds	1
   678  00003F                     ___fltol@exp1:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x3E
   682  00003F                     	ds	1
   683  000040                     ?___awmod:
   684                           	callstack 0
   685  000040                     ___awmod@dividend:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x3F
   689  000040                     	ds	1
   690  000041                     dtoa@i:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x40
   694  000041                     	ds	1
   695  000042                     ___awmod@divisor:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x41
   699  000042                     	ds	1
   700  000043                     ?_vfpfcnvrt:
   701                           	callstack 0
   702  000043                     vfpfcnvrt@fp:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x42
   706  000043                     	ds	1
   707  000044                     ___awmod@counter:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x43
   711  000044                     	ds	1
   712  000045                     ___awmod@sign:
   713                           	callstack 0
   714  000045                     vfpfcnvrt@fmt:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x44
   718  000045                     	ds	2
   719  000047                     vfpfcnvrt@ap:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x46
   723  000047                     	ds	2
   724  000049                     ??_vfpfcnvrt:
   725                           
   726                           ; 1 bytes @ 0x48
   727  000049                     	ds	4
   728  00004D                     vfpfcnvrt@ll:
   729                           	callstack 0
   730                           
   731                           ; 8 bytes @ 0x4C
   732  00004D                     	ds	8
   733  000055                     vfpfcnvrt@done:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x54
   737  000055                     	ds	2
   738  000057                     _vfpfcnvrt$1582:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x56
   742  000057                     	ds	2
   743  000059                     ??_appElemts:
   744                           
   745                           ; 1 bytes @ 0x58
   746  000059                     	ds	1
   747  00005A                     
   748                           ; 1 bytes @ 0x59
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   751 ;;
   752 ;; *************** function _main *****************
   753 ;; Defined at:
   754 ;;		line 12 in file "main.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   768 ;;      Params:         0       0       0       0       0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0       0       0       0       0
   770 ;;      Temps:          0       2       0       0       0       0       0       0       0
   771 ;;      Totals:         0       2       0       0       0       0       0       0       0
   772 ;;Total ram usage:        2 bytes
   773 ;; Hardware stack levels required when called:   12
   774 ;; This function calls:
   775 ;;		_appInit
   776 ;;		_appStateInitial
   777 ;;		_appStateRecolectData
   778 ;; This function is called by:
   779 ;;		Startup code after reset
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text0
   784  002674                     __ptext0:
   785                           	callstack 0
   786  002674                     _main:
   787                           	callstack 19
   788  002674                     
   789                           ;main.c: 14:     TRISBbits.TRISB3 = 0;
   790  002674  9693               	bcf	147,3,c	;volatile
   791                           
   792                           ;main.c: 15:     LATBbits.LATB2 = 0;
   793  002676  948A               	bcf	138,2,c	;volatile
   794  002678                     
   795                           ;main.c: 16:     appInit();
   796  002678  EC16  F015         	call	_appInit	;wreg free
   797  00267C                     l3812:
   798                           
   799                           ;main.c: 18:     {;main.c: 20:         LATBbits.LATB3 = !LATBbits.LATB3;
   800  00267C  A68A               	btfss	138,3,c	;volatile
   801  00267E  EF43  F013         	goto	u3781
   802  002682  EF48  F013         	goto	u3780
   803  002686                     u3781:
   804  002686  0100               	movlb	0	; () banked
   805  002688  6BC4               	clrf	??_main& (0+255),b
   806  00268A  2BC4               	incf	??_main& (0+255),f,b
   807  00268C  EF4A  F013         	goto	u3798
   808  002690                     u3780:
   809  002690  0100               	movlb	0	; () banked
   810  002692  6BC4               	clrf	??_main& (0+255),b
   811  002694                     u3798:
   812  002694  47C4               	rlncf	??_main& (0+255),f,b
   813  002696  47C4               	rlncf	??_main& (0+255),f,b
   814  002698  47C4               	rlncf	??_main& (0+255),f,b
   815  00269A  508A               	movf	138,w,c	;volatile
   816  00269C  19C4               	xorwf	??_main& (0+255),w,b
   817  00269E  0BF7               	andlw	-9
   818  0026A0  19C4               	xorwf	??_main& (0+255),w,b
   819  0026A2  6E8A               	movwf	138,c	;volatile
   820  0026A4                     
   821                           ; BSR set to: 0
   822                           ;main.c: 21:         _delay((unsigned long)((100)*(12000000/4000.0)));
   823  0026A4  0E02               	movlw	2
   824  0026A6  0100               	movlb	0	; () banked
   825  0026A8  6FC5               	movwf	(??_main+1)& (0+255),b
   826  0026AA  0E86               	movlw	134
   827  0026AC  6FC4               	movwf	??_main& (0+255),b
   828  0026AE  0E99               	movlw	153
   829  0026B0                     u3847:
   830  0026B0  2EE8               	decfsz	wreg,f,c
   831  0026B2  D7FE               	bra	u3847
   832  0026B4  2FC4               	decfsz	??_main& (0+255),f,b
   833  0026B6  D7FC               	bra	u3847
   834  0026B8  2FC5               	decfsz	(??_main+1)& (0+255),f,b
   835  0026BA  D7FA               	bra	u3847
   836  0026BC                     
   837                           ;main.c: 22:         datos.nextFunc();
   838  0026BC  EE20  F0DB         	lfsr	2,_datos+21
   839  0026C0  D802               	call	u3808
   840  0026C2  EF6D  F013         	goto	u3809
   841  0026C6                     u3808:
   842  0026C6  0005               	push	
   843  0026C8  6EFA               	movwf	pclath,c
   844  0026CA  50DE               	movf	postinc2,w,c
   845  0026CC  6EFD               	movwf	tosl,c
   846  0026CE  50DE               	movf	postinc2,w,c
   847  0026D0  6EFE               	movwf	tosh,c
   848  0026D2  50F8               	movf	tblptru,w,c
   849  0026D4  6EFF               	movwf	tosu,c
   850  0026D6  50FA               	movf	pclath,w,c
   851  0026D8  0012               	return		;indir
   852  0026DA                     u3809:
   853  0026DA  EF3E  F013         	goto	l3812
   854  0026DE  EF3F  F000         	goto	start
   855  0026E2                     __end_of_main:
   856                           	callstack 0
   857                           
   858 ;; *************** function _appStateInitial *****************
   859 ;; Defined at:
   860 ;;		line 28 in file "app.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		None
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   874 ;;      Params:         0       0       0       0       0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    2
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_appStateRecolectData
   885 ;;		_main
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text1
   890  002A8A                     __ptext1:
   891                           	callstack 0
   892  002A8A                     _appStateInitial:
   893                           	callstack 28
   894  002A8A  0012               	return		;funcret
   895  002A8C                     __end_of_appStateInitial:
   896                           	callstack 0
   897                           
   898 ;; *************** function _appStateRecolectData *****************
   899 ;; Defined at:
   900 ;;		line 21 in file "app.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   914 ;;      Params:         0       0       0       0       0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:   11
   921 ;; This function calls:
   922 ;;		_appADC
   923 ;;		_appBat
   924 ;;		_appElemts
   925 ;; This function is called by:
   926 ;;		_isrL
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text2
   932  002A0A                     __ptext2:
   933                           	callstack 0
   934  002A0A                     _appStateRecolectData:
   935                           	callstack 19
   936  002A0A                     
   937                           ;app.c: 23:     appADC();
   938  002A0A  EC72  F00F         	call	_appADC	;wreg free
   939                           
   940                           ;app.c: 24:     appBat();
   941  002A0E  EC04  F010         	call	_appBat	;wreg free
   942                           
   943                           ;app.c: 25:     appElemts(&datos.elements);
   944  002A12  0EC7               	movlw	low (_datos+1)
   945  002A14  0100               	movlb	0	; () banked
   946  002A16  6FB7               	movwf	appElemts@elements& (0+255),b
   947  002A18  0E00               	movlw	high (_datos+1)
   948  002A1A  6FB8               	movwf	(appElemts@elements+1)& (0+255),b
   949  002A1C  ECF4  F013         	call	_appElemts	;wreg free
   950  002A20                     
   951                           ;app.c: 26:     datos.nextFunc = appStateInitial;
   952  002A20  0E8A               	movlw	low _appStateInitial
   953  002A22  0100               	movlb	0	; () banked
   954  002A24  6FDB               	movwf	(_datos+21)& (0+255),b
   955  002A26  0E2A               	movlw	high _appStateInitial
   956  002A28  6FDC               	movwf	(_datos+22)& (0+255),b
   957  002A2A                     
   958                           ; BSR set to: 0
   959  002A2A  0012               	return		;funcret
   960  002A2C                     __end_of_appStateRecolectData:
   961                           	callstack 0
   962                           
   963 ;; *************** function _appElemts *****************
   964 ;; Defined at:
   965 ;;		line 83 in file "servo.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  elements        2   26[BANK0 ] PTR const unsigned char 
   968 ;;		 -> datos.elements(1), datos(23), 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  dataout         6   28[BANK0 ] unsigned char [6]
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         0       2       0       0       0       0       0       0       0
   981 ;;      Locals:         0       6       0       0       0       0       0       0       0
   982 ;;      Temps:          1       0       0       0       0       0       0       0       0
   983 ;;      Totals:         1       8       0       0       0       0       0       0       0
   984 ;;Total ram usage:        9 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:   10
   987 ;; This function calls:
   988 ;;		_Lcd_Out
   989 ;;		_sprintf
   990 ;; This function is called by:
   991 ;;		_appStateRecolectData
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text3
   996  0027E8                     __ptext3:
   997                           	callstack 0
   998  0027E8                     _appElemts:
   999                           	callstack 19
  1000  0027E8                     
  1001                           ;servo.c: 83: void appElemts(const uint8_t * elements);servo.c: 84: {;servo.c: 85:     u
      +                          int8_t dataout[6] = {0};
  1002  0027E8  EE20  F0B9         	lfsr	2,appElemts@dataout
  1003  0027EC  0E05               	movlw	5
  1004  0027EE                     u3771:
  1005  0027EE  6ADE               	clrf	postinc2,c
  1006  0027F0  06E8               	decf	wreg,f,c
  1007  0027F2  E2FD               	bc	u3771
  1008  0027F4                     
  1009                           ;servo.c: 86:     sprintf((char *)dataout,"#:%d",*elements);
  1010  0027F4  0EB9               	movlw	low appElemts@dataout
  1011  0027F6  0100               	movlb	0	; () banked
  1012  0027F8  6FA5               	movwf	sprintf@s& (0+255),b
  1013  0027FA  0E00               	movlw	high appElemts@dataout
  1014  0027FC  6FA6               	movwf	(sprintf@s+1)& (0+255),b
  1015  0027FE  0E28               	movlw	low STR_5
  1016  002800  6FA7               	movwf	sprintf@fmt& (0+255),b
  1017  002802  0E08               	movlw	high STR_5
  1018  002804  6FA8               	movwf	(sprintf@fmt+1)& (0+255),b
  1019  002806  C0B7  FFD9         	movff	appElemts@elements,fsr2l
  1020  00280A  C0B8  FFDA         	movff	appElemts@elements+1,fsr2h
  1021  00280E  50DF               	movf	indf2,w,c
  1022  002810  6E59               	movwf	??_appElemts^0,c
  1023  002812  5059               	movf	??_appElemts^0,w,c
  1024  002814  6FA9               	movwf	(?_sprintf+4)& (0+255),b
  1025  002816  6BAA               	clrf	(?_sprintf+5)& (0+255),b
  1026  002818  ECA2  F013         	call	_sprintf	;wreg free
  1027  00281C                     
  1028                           ;servo.c: 87:     Lcd_Out(2,8, (int8_t*)dataout);
  1029  00281C  0E08               	movlw	8
  1030  00281E  6E07               	movwf	Lcd_Out@x^0,c
  1031  002820  0EB9               	movlw	low appElemts@dataout
  1032  002822  6E08               	movwf	Lcd_Out@buffer^0,c
  1033  002824  0E00               	movlw	high appElemts@dataout
  1034  002826  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1035  002828  0E02               	movlw	2
  1036  00282A  EC14  F011         	call	_Lcd_Out
  1037  00282E  0012               	return		;funcret
  1038  002830                     __end_of_appElemts:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _appBat *****************
  1042 ;; Defined at:
  1043 ;;		line 61 in file "adc.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  dataOut         8   26[BANK0 ] unsigned char [8]
  1048 ;;  bat             4   34[BANK0 ] float 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0
  1059 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1061 ;;      Totals:         0      12       0       0       0       0       0       0       0
  1062 ;;Total ram usage:       12 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:   10
  1065 ;; This function calls:
  1066 ;;		_Lcd_Out
  1067 ;;		___fldiv
  1068 ;;		___flmul
  1069 ;;		___fltol
  1070 ;;		___xxtofl
  1071 ;;		_adcGetValue
  1072 ;;		_sprintf
  1073 ;; This function is called by:
  1074 ;;		_appStateRecolectData
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text4
  1079  002008                     __ptext4:
  1080                           	callstack 0
  1081  002008                     _appBat:
  1082                           	callstack 19
  1083  002008                     
  1084                           ;adc.c: 63:     uint8_t dataOut[8] = {0};
  1085  002008  EE20  F0B7         	lfsr	2,appBat@dataOut
  1086  00200C  0E07               	movlw	7
  1087  00200E                     u3761:
  1088  00200E  6ADE               	clrf	postinc2,c
  1089  002010  06E8               	decf	wreg,f,c
  1090  002012  E2FD               	bc	u3761
  1091  002014                     
  1092                           ;adc.c: 64:     float bat = adcGetValue(1);
  1093  002014  0E01               	movlw	1
  1094  002016  EC9D  F014         	call	_adcGetValue
  1095  00201A  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1096  00201E  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1097  002022  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1098  002024  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1099  002026  0E00               	movlw	0
  1100  002028  EC1E  F00B         	call	___xxtofl
  1101  00202C  C008  F0BF         	movff	?___xxtofl,appBat@bat
  1102  002030  C009  F0C0         	movff	?___xxtofl+1,appBat@bat+1
  1103  002034  C00A  F0C1         	movff	?___xxtofl+2,appBat@bat+2
  1104  002038  C00B  F0C2         	movff	?___xxtofl+3,appBat@bat+3
  1105  00203C                     
  1106                           ;adc.c: 65:     bat = (float)((bat*5.0)/1024.0);
  1107  00203C  0E00               	movlw	0
  1108  00203E  6E08               	movwf	___flmul@a^0,c
  1109  002040  0E00               	movlw	0
  1110  002042  6E09               	movwf	(___flmul@a+1)^0,c
  1111  002044  0EA0               	movlw	160
  1112  002046  6E0A               	movwf	(___flmul@a+2)^0,c
  1113  002048  0E40               	movlw	64
  1114  00204A  6E0B               	movwf	(___flmul@a+3)^0,c
  1115  00204C  C0BF  F004         	movff	appBat@bat,___flmul@b
  1116  002050  C0C0  F005         	movff	appBat@bat+1,___flmul@b+1
  1117  002054  C0C1  F006         	movff	appBat@bat+2,___flmul@b+2
  1118  002058  C0C2  F007         	movff	appBat@bat+3,___flmul@b+3
  1119  00205C  EC17  F004         	call	___flmul	;wreg free
  1120  002060  C004  F01D         	movff	?___flmul,___fldiv@b
  1121  002064  C005  F01E         	movff	?___flmul+1,___fldiv@b+1
  1122  002068  C006  F01F         	movff	?___flmul+2,___fldiv@b+2
  1123  00206C  C007  F020         	movff	?___flmul+3,___fldiv@b+3
  1124  002070  0E00               	movlw	0
  1125  002072  6E21               	movwf	___fldiv@a^0,c
  1126  002074  0E00               	movlw	0
  1127  002076  6E22               	movwf	(___fldiv@a+1)^0,c
  1128  002078  0E80               	movlw	128
  1129  00207A  6E23               	movwf	(___fldiv@a+2)^0,c
  1130  00207C  0E44               	movlw	68
  1131  00207E  6E24               	movwf	(___fldiv@a+3)^0,c
  1132  002080  EC2C  F006         	call	___fldiv	;wreg free
  1133  002084  C01D  F0BF         	movff	?___fldiv,appBat@bat
  1134  002088  C01E  F0C0         	movff	?___fldiv+1,appBat@bat+1
  1135  00208C  C01F  F0C1         	movff	?___fldiv+2,appBat@bat+2
  1136  002090  C020  F0C2         	movff	?___fldiv+3,appBat@bat+3
  1137  002094                     
  1138                           ;adc.c: 66:     sprintf((char *)dataOut,"Bat:%d",(int)((bat*100)/5));
  1139  002094  0EB7               	movlw	low appBat@dataOut
  1140  002096  0100               	movlb	0	; () banked
  1141  002098  6FA5               	movwf	sprintf@s& (0+255),b
  1142  00209A  0E00               	movlw	high appBat@dataOut
  1143  00209C  6FA6               	movwf	(sprintf@s+1)& (0+255),b
  1144  00209E  0E1B               	movlw	low STR_2
  1145  0020A0  6FA7               	movwf	sprintf@fmt& (0+255),b
  1146  0020A2  0E08               	movlw	high STR_2
  1147  0020A4  6FA8               	movwf	(sprintf@fmt+1)& (0+255),b
  1148  0020A6  0E00               	movlw	0
  1149  0020A8  6E21               	movwf	___fldiv@a^0,c
  1150  0020AA  0E00               	movlw	0
  1151  0020AC  6E22               	movwf	(___fldiv@a+1)^0,c
  1152  0020AE  0EA0               	movlw	160
  1153  0020B0  6E23               	movwf	(___fldiv@a+2)^0,c
  1154  0020B2  0E40               	movlw	64
  1155  0020B4  6E24               	movwf	(___fldiv@a+3)^0,c
  1156  0020B6  0E00               	movlw	0
  1157  0020B8  6E08               	movwf	___flmul@a^0,c
  1158  0020BA  0E00               	movlw	0
  1159  0020BC  6E09               	movwf	(___flmul@a+1)^0,c
  1160  0020BE  0EC8               	movlw	200
  1161  0020C0  6E0A               	movwf	(___flmul@a+2)^0,c
  1162  0020C2  0E42               	movlw	66
  1163  0020C4  6E0B               	movwf	(___flmul@a+3)^0,c
  1164  0020C6  C0BF  F004         	movff	appBat@bat,___flmul@b
  1165  0020CA  C0C0  F005         	movff	appBat@bat+1,___flmul@b+1
  1166  0020CE  C0C1  F006         	movff	appBat@bat+2,___flmul@b+2
  1167  0020D2  C0C2  F007         	movff	appBat@bat+3,___flmul@b+3
  1168  0020D6  EC17  F004         	call	___flmul	;wreg free
  1169  0020DA  C004  F01D         	movff	?___flmul,___fldiv@b
  1170  0020DE  C005  F01E         	movff	?___flmul+1,___fldiv@b+1
  1171  0020E2  C006  F01F         	movff	?___flmul+2,___fldiv@b+2
  1172  0020E6  C007  F020         	movff	?___flmul+3,___fldiv@b+3
  1173  0020EA  EC2C  F006         	call	___fldiv	;wreg free
  1174  0020EE  C01D  F036         	movff	?___fldiv,___fltol@f1
  1175  0020F2  C01E  F037         	movff	?___fldiv+1,___fltol@f1+1
  1176  0020F6  C01F  F038         	movff	?___fldiv+2,___fltol@f1+2
  1177  0020FA  C020  F039         	movff	?___fldiv+3,___fltol@f1+3
  1178  0020FE  EC91  F010         	call	___fltol	;wreg free
  1179  002102  C036  F0A9         	movff	?___fltol,?_sprintf+4
  1180  002106  C037  F0AA         	movff	?___fltol+1,?_sprintf+5
  1181  00210A  ECA2  F013         	call	_sprintf	;wreg free
  1182  00210E                     
  1183                           ;adc.c: 67:     Lcd_Out(2,0, (int8_t*)dataOut);
  1184  00210E  0E00               	movlw	0
  1185  002110  6E07               	movwf	Lcd_Out@x^0,c
  1186  002112  0EB7               	movlw	low appBat@dataOut
  1187  002114  6E08               	movwf	Lcd_Out@buffer^0,c
  1188  002116  0E00               	movlw	high appBat@dataOut
  1189  002118  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1190  00211A  0E02               	movlw	2
  1191  00211C  EC14  F011         	call	_Lcd_Out
  1192  002120  0012               	return		;funcret
  1193  002122                     __end_of_appBat:
  1194                           	callstack 0
  1195                           
  1196 ;; *************** function _appADC *****************
  1197 ;; Defined at:
  1198 ;;		line 52 in file "adc.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  dataOut         9   26[BANK0 ] unsigned char [9]
  1203 ;;  lm35val         4   35[BANK0 ] float 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0
  1214 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1216 ;;      Totals:         0      13       0       0       0       0       0       0       0
  1217 ;;Total ram usage:       13 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:   10
  1220 ;; This function calls:
  1221 ;;		_Lcd_Out
  1222 ;;		___awmod
  1223 ;;		___fldiv
  1224 ;;		___flmul
  1225 ;;		___fltol
  1226 ;;		___xxtofl
  1227 ;;		_adcGetValue
  1228 ;;		_sprintf
  1229 ;; This function is called by:
  1230 ;;		_appStateRecolectData
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text5
  1235  001EE4                     __ptext5:
  1236                           	callstack 0
  1237  001EE4                     _appADC:
  1238                           	callstack 19
  1239  001EE4                     
  1240                           ;adc.c: 54:     uint8_t dataOut[9] = {0};
  1241  001EE4  EE20  F0B7         	lfsr	2,appADC@dataOut
  1242  001EE8  0E08               	movlw	8
  1243  001EEA                     u3751:
  1244  001EEA  6ADE               	clrf	postinc2,c
  1245  001EEC  06E8               	decf	wreg,f,c
  1246  001EEE  E2FD               	bc	u3751
  1247  001EF0                     
  1248                           ;adc.c: 55:     float lm35val = adcGetValue(0);
  1249  001EF0  0E00               	movlw	0
  1250  001EF2  EC9D  F014         	call	_adcGetValue
  1251  001EF6  C004  F008         	movff	?_adcGetValue,___xxtofl@val
  1252  001EFA  C005  F009         	movff	?_adcGetValue+1,___xxtofl@val+1
  1253  001EFE  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1254  001F00  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1255  001F02  0E00               	movlw	0
  1256  001F04  EC1E  F00B         	call	___xxtofl
  1257  001F08  C008  F0C0         	movff	?___xxtofl,appADC@lm35val
  1258  001F0C  C009  F0C1         	movff	?___xxtofl+1,appADC@lm35val+1
  1259  001F10  C00A  F0C2         	movff	?___xxtofl+2,appADC@lm35val+2
  1260  001F14  C00B  F0C3         	movff	?___xxtofl+3,appADC@lm35val+3
  1261  001F18                     
  1262                           ;adc.c: 56:     lm35val = (float)((lm35val*4.88)/10.0);
  1263  001F18  0EF6               	movlw	246
  1264  001F1A  6E08               	movwf	___flmul@a^0,c
  1265  001F1C  0E28               	movlw	40
  1266  001F1E  6E09               	movwf	(___flmul@a+1)^0,c
  1267  001F20  0E9C               	movlw	156
  1268  001F22  6E0A               	movwf	(___flmul@a+2)^0,c
  1269  001F24  0E40               	movlw	64
  1270  001F26  6E0B               	movwf	(___flmul@a+3)^0,c
  1271  001F28  C0C0  F004         	movff	appADC@lm35val,___flmul@b
  1272  001F2C  C0C1  F005         	movff	appADC@lm35val+1,___flmul@b+1
  1273  001F30  C0C2  F006         	movff	appADC@lm35val+2,___flmul@b+2
  1274  001F34  C0C3  F007         	movff	appADC@lm35val+3,___flmul@b+3
  1275  001F38  EC17  F004         	call	___flmul	;wreg free
  1276  001F3C  C004  F01D         	movff	?___flmul,___fldiv@b
  1277  001F40  C005  F01E         	movff	?___flmul+1,___fldiv@b+1
  1278  001F44  C006  F01F         	movff	?___flmul+2,___fldiv@b+2
  1279  001F48  C007  F020         	movff	?___flmul+3,___fldiv@b+3
  1280  001F4C  0E00               	movlw	0
  1281  001F4E  6E21               	movwf	___fldiv@a^0,c
  1282  001F50  0E00               	movlw	0
  1283  001F52  6E22               	movwf	(___fldiv@a+1)^0,c
  1284  001F54  0E20               	movlw	32
  1285  001F56  6E23               	movwf	(___fldiv@a+2)^0,c
  1286  001F58  0E41               	movlw	65
  1287  001F5A  6E24               	movwf	(___fldiv@a+3)^0,c
  1288  001F5C  EC2C  F006         	call	___fldiv	;wreg free
  1289  001F60  C01D  F0C0         	movff	?___fldiv,appADC@lm35val
  1290  001F64  C01E  F0C1         	movff	?___fldiv+1,appADC@lm35val+1
  1291  001F68  C01F  F0C2         	movff	?___fldiv+2,appADC@lm35val+2
  1292  001F6C  C020  F0C3         	movff	?___fldiv+3,appADC@lm35val+3
  1293  001F70                     
  1294                           ;adc.c: 57:     sprintf((char *)dataOut,"T:%02d.%02d C",(uint8_t)lm35val,(uint8_t)((uint
      +                          8_t)(lm35val*100)%100));
  1295  001F70  0EB7               	movlw	low appADC@dataOut
  1296  001F72  0100               	movlb	0	; () banked
  1297  001F74  6FA5               	movwf	sprintf@s& (0+255),b
  1298  001F76  0E00               	movlw	high appADC@dataOut
  1299  001F78  6FA6               	movwf	(sprintf@s+1)& (0+255),b
  1300  001F7A  0E01               	movlw	low STR_1
  1301  001F7C  6FA7               	movwf	sprintf@fmt& (0+255),b
  1302  001F7E  0E08               	movlw	high STR_1
  1303  001F80  6FA8               	movwf	(sprintf@fmt+1)& (0+255),b
  1304  001F82  C0C0  F036         	movff	appADC@lm35val,___fltol@f1
  1305  001F86  C0C1  F037         	movff	appADC@lm35val+1,___fltol@f1+1
  1306  001F8A  C0C2  F038         	movff	appADC@lm35val+2,___fltol@f1+2
  1307  001F8E  C0C3  F039         	movff	appADC@lm35val+3,___fltol@f1+3
  1308  001F92  EC91  F010         	call	___fltol	;wreg free
  1309  001F96  5036               	movf	?___fltol^0,w,c
  1310  001F98  0100               	movlb	0	; () banked
  1311  001F9A  6FA9               	movwf	(?_sprintf+4)& (0+255),b
  1312  001F9C  6BAA               	clrf	(?_sprintf+5)& (0+255),b
  1313  001F9E  0E00               	movlw	0
  1314  001FA0  6E08               	movwf	___flmul@a^0,c
  1315  001FA2  0E00               	movlw	0
  1316  001FA4  6E09               	movwf	(___flmul@a+1)^0,c
  1317  001FA6  0EC8               	movlw	200
  1318  001FA8  6E0A               	movwf	(___flmul@a+2)^0,c
  1319  001FAA  0E42               	movlw	66
  1320  001FAC  6E0B               	movwf	(___flmul@a+3)^0,c
  1321  001FAE  C0C0  F004         	movff	appADC@lm35val,___flmul@b
  1322  001FB2  C0C1  F005         	movff	appADC@lm35val+1,___flmul@b+1
  1323  001FB6  C0C2  F006         	movff	appADC@lm35val+2,___flmul@b+2
  1324  001FBA  C0C3  F007         	movff	appADC@lm35val+3,___flmul@b+3
  1325  001FBE  EC17  F004         	call	___flmul	;wreg free
  1326  001FC2  C004  F036         	movff	?___flmul,___fltol@f1
  1327  001FC6  C005  F037         	movff	?___flmul+1,___fltol@f1+1
  1328  001FCA  C006  F038         	movff	?___flmul+2,___fltol@f1+2
  1329  001FCE  C007  F039         	movff	?___flmul+3,___fltol@f1+3
  1330  001FD2  EC91  F010         	call	___fltol	;wreg free
  1331  001FD6  5036               	movf	?___fltol^0,w,c
  1332  001FD8  6E40               	movwf	___awmod@dividend^0,c
  1333  001FDA  6A41               	clrf	(___awmod@dividend+1)^0,c
  1334  001FDC  0E00               	movlw	0
  1335  001FDE  6E43               	movwf	(___awmod@divisor+1)^0,c
  1336  001FE0  0E64               	movlw	100
  1337  001FE2  6E42               	movwf	___awmod@divisor^0,c
  1338  001FE4  ECA0  F012         	call	___awmod	;wreg free
  1339  001FE8  5040               	movf	?___awmod^0,w,c
  1340  001FEA  0100               	movlb	0	; () banked
  1341  001FEC  6FAB               	movwf	(?_sprintf+6)& (0+255),b
  1342  001FEE  6BAC               	clrf	(?_sprintf+7)& (0+255),b
  1343  001FF0  ECA2  F013         	call	_sprintf	;wreg free
  1344  001FF4                     
  1345                           ;adc.c: 58:     Lcd_Out(1,0, (int8_t*)dataOut);
  1346  001FF4  0E00               	movlw	0
  1347  001FF6  6E07               	movwf	Lcd_Out@x^0,c
  1348  001FF8  0EB7               	movlw	low appADC@dataOut
  1349  001FFA  6E08               	movwf	Lcd_Out@buffer^0,c
  1350  001FFC  0E00               	movlw	high appADC@dataOut
  1351  001FFE  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  1352  002000  0E01               	movlw	1
  1353  002002  EC14  F011         	call	_Lcd_Out
  1354  002006  0012               	return		;funcret
  1355  002008                     __end_of_appADC:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _sprintf *****************
  1359 ;; Defined at:
  1360 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  s               2    8[BANK0 ] PTR unsigned char 
  1363 ;;		 -> appElemts@dataout(6), appBat@dataOut(8), appADC@dataOut(9), 
  1364 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
  1365 ;;		 -> STR_5(5), STR_2(7), STR_1(14), 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  f               6   20[BANK0 ] struct _IO_FILE
  1368 ;;  ap              2   18[BANK0 ] PTR void [1]
  1369 ;;		 -> ?_sprintf(2), 
  1370 ;;  ret             2    0        int 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  2    8[BANK0 ] int 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1380 ;;      Params:         0       8       0       0       0       0       0       0       0
  1381 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1383 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1384 ;;Total ram usage:       18 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    9
  1387 ;; This function calls:
  1388 ;;		_vfprintf
  1389 ;; This function is called by:
  1390 ;;		_appADC
  1391 ;;		_appBat
  1392 ;;		_appElemts
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text6
  1397  002744                     __ptext6:
  1398                           	callstack 0
  1399  002744                     _sprintf:
  1400                           	callstack 19
  1401  002744  0EA9               	movlw	low (?_sprintf+4)
  1402  002746  0100               	movlb	0	; () banked
  1403  002748  6FAF               	movwf	sprintf@ap& (0+255),b
  1404  00274A  0E00               	movlw	high (?_sprintf+4)
  1405  00274C  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
  1406  00274E  C0A5  F0B1         	movff	sprintf@s,sprintf@f
  1407  002752  C0A6  F0B2         	movff	sprintf@s+1,sprintf@f+1
  1408  002756                     
  1409                           ; BSR set to: 0
  1410  002756  0E00               	movlw	0
  1411  002758  6FB4               	movwf	(sprintf@f+3)& (0+255),b
  1412  00275A  0E00               	movlw	0
  1413  00275C  6FB3               	movwf	(sprintf@f+2)& (0+255),b
  1414  00275E                     
  1415                           ; BSR set to: 0
  1416  00275E  0E00               	movlw	0
  1417  002760  6FB6               	movwf	(sprintf@f+5)& (0+255),b
  1418  002762  0E00               	movlw	0
  1419  002764  6FB5               	movwf	(sprintf@f+4)& (0+255),b
  1420  002766                     
  1421                           ; BSR set to: 0
  1422  002766  0EB1               	movlw	low sprintf@f
  1423  002768  6F9D               	movwf	vfprintf@fp& (0+255),b
  1424  00276A  0E00               	movlw	high sprintf@f
  1425  00276C  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  1426  00276E  C0A7  F09F         	movff	sprintf@fmt,vfprintf@fmt
  1427  002772  C0A8  F0A0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1428  002776  0EAF               	movlw	low sprintf@ap
  1429  002778  6FA1               	movwf	vfprintf@ap& (0+255),b
  1430  00277A  0E00               	movlw	high sprintf@ap
  1431  00277C  6FA2               	movwf	(vfprintf@ap+1)& (0+255),b
  1432  00277E  EC71  F013         	call	_vfprintf	;wreg free
  1433  002782  0100               	movlb	0	; () banked
  1434  002784  51B3               	movf	(sprintf@f+2)& (0+255),w,b
  1435  002786  25A5               	addwf	sprintf@s& (0+255),w,b
  1436  002788  6ED9               	movwf	fsr2l,c
  1437  00278A  51B4               	movf	(sprintf@f+3)& (0+255),w,b
  1438  00278C  21A6               	addwfc	(sprintf@s+1)& (0+255),w,b
  1439  00278E  6EDA               	movwf	fsr2h,c
  1440  002790  0E00               	movlw	0
  1441  002792  6EDF               	movwf	indf2,c
  1442  002794                     
  1443                           ; BSR set to: 0
  1444  002794  0012               	return		;funcret
  1445  002796                     __end_of_sprintf:
  1446                           	callstack 0
  1447                           
  1448 ;; *************** function _vfprintf *****************
  1449 ;; Defined at:
  1450 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1453 ;;		 -> sprintf@f(6), 
  1454 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1455 ;;		 -> STR_5(5), STR_2(7), STR_1(14), 
  1456 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1457 ;;		 -> sprintf@ap(2), 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  1460 ;;		 -> STR_5(5), STR_2(7), STR_1(14), 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  2    0[BANK0 ] int 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1470 ;;      Params:         0       6       0       0       0       0       0       0       0
  1471 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1473 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1474 ;;Total ram usage:        8 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    8
  1477 ;; This function calls:
  1478 ;;		_vfpfcnvrt
  1479 ;; This function is called by:
  1480 ;;		_sprintf
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text7
  1485  0026E2                     __ptext7:
  1486                           	callstack 0
  1487  0026E2                     _vfprintf:
  1488                           	callstack 19
  1489  0026E2                     
  1490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1491  0026E2  C09F  F0A3         	movff	vfprintf@fmt,vfprintf@cfmt
  1492  0026E6  C0A0  F0A4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1493  0026EA                     
  1494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1495  0026EA  0E00               	movlw	0
  1496  0026EC  0100               	movlb	0	; () banked
  1497  0026EE  6F78               	movwf	(_nout+1)& (0+255),b
  1498  0026F0  0E00               	movlw	0
  1499  0026F2  6F77               	movwf	_nout& (0+255),b
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1502  0026F4  EF8F  F013         	goto	l3764
  1503  0026F8                     l3762:
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1507  0026F8  C09D  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1508  0026FC  C09E  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1509  002700  0EA3               	movlw	low vfprintf@cfmt
  1510  002702  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1511  002704  0E00               	movlw	high vfprintf@cfmt
  1512  002706  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1513  002708  C0A1  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1514  00270C  C0A2  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1515  002710  ECF9  F007         	call	_vfpfcnvrt	;wreg free
  1516  002714  5043               	movf	?_vfpfcnvrt^0,w,c
  1517  002716  0100               	movlb	0	; () banked
  1518  002718  2777               	addwf	_nout& (0+255),f,b
  1519  00271A  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1520  00271C  2378               	addwfc	(_nout+1)& (0+255),f,b
  1521  00271E                     l3764:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1525  00271E  C0A3  FFF6         	movff	vfprintf@cfmt,tblptrl
  1526  002722  C0A4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1527  002726                     	if	0	;tblptru may be non-zero
  1528  002726                     	endif
  1529  002726                     	if	0	;tblptru may be non-zero
  1530  002726                     	endif
  1531  002726  0008               	tblrd		*
  1532  002728  50F5               	movf	tablat,w,c
  1533  00272A  0900               	iorlw	0
  1534  00272C  A4D8               	btfss	status,2,c
  1535  00272E  EF9B  F013         	goto	u3741
  1536  002732  EF9D  F013         	goto	u3740
  1537  002736                     u3741:
  1538  002736  EF7C  F013         	goto	l3762
  1539  00273A                     u3740:
  1540  00273A                     
  1541                           ; BSR set to: 0
  1542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1543  00273A  C077  F09D         	movff	_nout,?_vfprintf
  1544  00273E  C078  F09E         	movff	_nout+1,?_vfprintf+1
  1545  002742                     
  1546                           ; BSR set to: 0
  1547  002742  0012               	return		;funcret
  1548  002744                     __end_of_vfprintf:
  1549                           	callstack 0
  1550                           
  1551 ;; *************** function _vfpfcnvrt *****************
  1552 ;; Defined at:
  1553 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1556 ;;		 -> sprintf@f(6), 
  1557 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1558 ;;		 -> vfprintf@cfmt(2), 
  1559 ;;  ap              2   70[COMRAM] PTR PTR void 
  1560 ;;		 -> sprintf@ap(2), 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  ll              8   76[COMRAM] long long 
  1563 ;;  llu             8    0        unsigned long long 
  1564 ;;  f               4    0        unsigned long long 
  1565 ;;  vp              3    0        PTR void 
  1566 ;;  ct              3    0        unsigned char [3]
  1567 ;;  cp              3    0        PTR unsigned char 
  1568 ;;  done            2   84[COMRAM] int 
  1569 ;;  i               2    0        int 
  1570 ;;  c               1    0        unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2   66[COMRAM] int 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1580 ;;      Params:         6       0       0       0       0       0       0       0       0
  1581 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1582 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1583 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1584 ;;Total ram usage:       22 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    7
  1587 ;; This function calls:
  1588 ;;		_atoi
  1589 ;;		_dtoa
  1590 ;;		_fputc
  1591 ;;		_isdigit
  1592 ;; This function is called by:
  1593 ;;		_vfprintf
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text8
  1598  000FF2                     __ptext8:
  1599                           	callstack 0
  1600  000FF2                     _vfpfcnvrt:
  1601                           	callstack 19
  1602  000FF2                     
  1603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1604  000FF2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1605  000FF6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1606  000FFA  CFDE FFF6          	movff	postinc2,tblptrl
  1607  000FFE  CFDD FFF7          	movff	postdec2,tblptrh
  1608  001002                     	if	0	;tblptru may be non-zero
  1609  001002                     	endif
  1610  001002                     	if	0	;tblptru may be non-zero
  1611  001002                     	endif
  1612  001002  0008               	tblrd		*
  1613  001004  50F5               	movf	tablat,w,c
  1614  001006  0A25               	xorlw	37
  1615  001008  A4D8               	btfss	status,2,c
  1616  00100A  EF09  F008         	goto	u3631
  1617  00100E  EF0B  F008         	goto	u3630
  1618  001012                     u3631:
  1619  001012  EF93  F009         	goto	l3746
  1620  001016                     u3630:
  1621  001016                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1623  001016  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1624  00101A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1625  00101E  2ADE               	incf	postinc2,f,c
  1626  001020  0E00               	movlw	0
  1627  001022  22DD               	addwfc	postdec2,f,c
  1628  001024                     
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1630  001024  0E00               	movlw	0
  1631  001026  0100               	movlb	0	; () banked
  1632  001028  6F7A               	movwf	(_width+1)& (0+255),b
  1633  00102A  0E00               	movlw	0
  1634  00102C  6F79               	movwf	_width& (0+255),b
  1635  00102E  C079  F05A         	movff	_width,_flags
  1636  001032  C07A  F05B         	movff	_width+1,_flags+1
  1637  001036                     
  1638                           ; BSR set to: 0
  1639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1640  001036  697B               	setf	_prec& (0+255),b
  1641  001038  697C               	setf	(_prec+1)& (0+255),b
  1642  00103A                     
  1643                           ; BSR set to: 0
  1644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1645  00103A  0E00               	movlw	0
  1646  00103C  6E56               	movwf	(vfpfcnvrt@done+1)^0,c
  1647  00103E  0E00               	movlw	0
  1648  001040  6E55               	movwf	vfpfcnvrt@done^0,c
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1651  001042  EF69  F008         	goto	l3698
  1652  001046                     l3672:
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1655  001046  805A               	bsf	_flags^0,0,c
  1656  001048                     l3674:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1659  001048  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1660  00104C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1661  001050  2ADE               	incf	postinc2,f,c
  1662  001052  0E00               	movlw	0
  1663  001054  22DD               	addwfc	postdec2,f,c
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1666  001056  EF69  F008         	goto	l3698
  1667  00105A                     l3676:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1670  00105A  825A               	bsf	_flags^0,1,c
  1671  00105C  EF24  F008         	goto	l3674
  1672  001060                     l3680:
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1675  001060  845A               	bsf	_flags^0,2,c
  1676  001062  EF24  F008         	goto	l3674
  1677  001066                     l3684:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1680  001066  865A               	bsf	_flags^0,3,c
  1681  001068  EF24  F008         	goto	l3674
  1682  00106C                     l3688:
  1683                           
  1684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1685  00106C  885A               	bsf	_flags^0,4,c
  1686  00106E  EF24  F008         	goto	l3674
  1687  001072                     l3692:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1690  001072  0E00               	movlw	0
  1691  001074  6E56               	movwf	(vfpfcnvrt@done+1)^0,c
  1692  001076  0E01               	movlw	1
  1693  001078  6E55               	movwf	vfpfcnvrt@done^0,c
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1696  00107A  EF69  F008         	goto	l3698
  1697  00107E                     l3696:
  1698  00107E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1699  001082  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1700  001086  CFDE FFF6          	movff	postinc2,tblptrl
  1701  00108A  CFDD FFF7          	movff	postdec2,tblptrh
  1702  00108E                     	if	0	;tblptru may be non-zero
  1703  00108E                     	endif
  1704  00108E                     	if	0	;tblptru may be non-zero
  1705  00108E                     	endif
  1706  00108E  0008               	tblrd		*
  1707  001090  50F5               	movf	tablat,w,c
  1708  001092  6E49               	movwf	??_vfpfcnvrt^0,c
  1709  001094  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1710                           
  1711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1712                           ; Switch size 1, requested type "simple"
  1713                           ; Number of cases is 1, Range of values is 0 to 0
  1714                           ; switch strategies available:
  1715                           ; Name         Instructions Cycles
  1716                           ; simple_byte            4     3 (average)
  1717                           ;	Chosen strategy is simple_byte
  1718  001096  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1719  001098  0A00               	xorlw	0	; case 0
  1720  00109A  B4D8               	btfsc	status,2,c
  1721  00109C  EF52  F008         	goto	l3894
  1722  0010A0  EF39  F008         	goto	l3692
  1723  0010A4                     l3894:
  1724                           
  1725                           ; Switch size 1, requested type "simple"
  1726                           ; Number of cases is 5, Range of values is 32 to 48
  1727                           ; switch strategies available:
  1728                           ; Name         Instructions Cycles
  1729                           ; simple_byte           16     9 (average)
  1730                           ;	Chosen strategy is simple_byte
  1731  0010A4  5049               	movf	??_vfpfcnvrt^0,w,c
  1732  0010A6  0A20               	xorlw	32	; case 32
  1733  0010A8  B4D8               	btfsc	status,2,c
  1734  0010AA  EF33  F008         	goto	l3684
  1735  0010AE  0A03               	xorlw	3	; case 35
  1736  0010B0  B4D8               	btfsc	status,2,c
  1737  0010B2  EF36  F008         	goto	l3688
  1738  0010B6  0A08               	xorlw	8	; case 43
  1739  0010B8  B4D8               	btfsc	status,2,c
  1740  0010BA  EF30  F008         	goto	l3680
  1741  0010BE  0A06               	xorlw	6	; case 45
  1742  0010C0  B4D8               	btfsc	status,2,c
  1743  0010C2  EF23  F008         	goto	l3672
  1744  0010C6  0A1D               	xorlw	29	; case 48
  1745  0010C8  B4D8               	btfsc	status,2,c
  1746  0010CA  EF2D  F008         	goto	l3676
  1747  0010CE  EF39  F008         	goto	l3692
  1748  0010D2                     l3698:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1751  0010D2  5055               	movf	vfpfcnvrt@done^0,w,c
  1752  0010D4  1056               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1753  0010D6  B4D8               	btfsc	status,2,c
  1754  0010D8  EF70  F008         	goto	u3641
  1755  0010DC  EF72  F008         	goto	u3640
  1756  0010E0                     u3641:
  1757  0010E0  EF3F  F008         	goto	l3696
  1758  0010E4                     u3640:
  1759  0010E4                     
  1760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1761  0010E4  A05A               	btfss	_flags^0,0,c
  1762  0010E6  EF77  F008         	goto	u3651
  1763  0010EA  EF79  F008         	goto	u3650
  1764  0010EE                     u3651:
  1765  0010EE  EF7A  F008         	goto	l3702
  1766  0010F2                     u3650:
  1767  0010F2                     
  1768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1769  0010F2  925A               	bcf	_flags^0,1,c
  1770  0010F4                     l3702:
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1773  0010F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1774  0010F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1775  0010FC  CFDE FFF6          	movff	postinc2,tblptrl
  1776  001100  CFDD FFF7          	movff	postdec2,tblptrh
  1777  001104                     	if	0	;tblptru may be non-zero
  1778  001104                     	endif
  1779  001104                     	if	0	;tblptru may be non-zero
  1780  001104                     	endif
  1781  001104  0008               	tblrd		*
  1782  001106  50F5               	movf	tablat,w,c
  1783  001108  0A2A               	xorlw	42
  1784  00110A  A4D8               	btfss	status,2,c
  1785  00110C  EF8A  F008         	goto	u3661
  1786  001110  EF8C  F008         	goto	u3660
  1787  001114                     u3661:
  1788  001114  EFB6  F008         	goto	l3710
  1789  001118                     u3660:
  1790  001118                     
  1791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1792  001118  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1793  00111C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1794  001120  2ADE               	incf	postinc2,f,c
  1795  001122  0E00               	movlw	0
  1796  001124  22DD               	addwfc	postdec2,f,c
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1799  001126  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1800  00112A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1801  00112E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1802  001132  0E02               	movlw	2
  1803  001134  26DE               	addwf	postinc2,f,c
  1804  001136  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1805  00113A  0E00               	movlw	0
  1806  00113C  22DD               	addwfc	postdec2,f,c
  1807  00113E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1808  001142  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1809  001146  CFDE F079          	movff	postinc2,_width
  1810  00114A  CFDD F07A          	movff	postdec2,_width+1
  1811  00114E                     
  1812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1813  00114E  0100               	movlb	0	; () banked
  1814  001150  BF7A               	btfsc	(_width+1)& (0+255),7,b
  1815  001152  EFAF  F008         	goto	u3670
  1816  001156  EFAD  F008         	goto	u3671
  1817  00115A                     u3671:
  1818  00115A  EFF9  F008         	goto	l3720
  1819  00115E                     u3670:
  1820  00115E                     
  1821                           ; BSR set to: 0
  1822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1823  00115E  805A               	bsf	_flags^0,0,c
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1826  001160  6D79               	negf	_width& (0+255),b
  1827  001162  1F7A               	comf	(_width+1)& (0+255),f,b
  1828  001164  B0D8               	btfsc	status,0,c
  1829  001166  2B7A               	incf	(_width+1)& (0+255),f,b
  1830  001168  EFF9  F008         	goto	l3720
  1831  00116C                     l3710:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1834  00116C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1835  001170  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1836  001174  CFDE F00B          	movff	postinc2,atoi@s
  1837  001178  CFDD F00C          	movff	postdec2,atoi@s+1
  1838  00117C  ECF8  F00B         	call	_atoi	;wreg free
  1839  001180  C00B  F079         	movff	?_atoi,_width
  1840  001184  C00C  F07A         	movff	?_atoi+1,_width+1
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1843  001188  EFCD  F008         	goto	l3714
  1844  00118C                     l3712:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1847  00118C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1848  001190  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1849  001194  2ADE               	incf	postinc2,f,c
  1850  001196  0E00               	movlw	0
  1851  001198  22DD               	addwfc	postdec2,f,c
  1852  00119A                     l3714:
  1853  00119A  0ED0               	movlw	208
  1854  00119C  6E49               	movwf	??_vfpfcnvrt^0,c
  1855  00119E  0EFF               	movlw	255
  1856  0011A0  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1857  0011A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1858  0011A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1859  0011AA  CFDE FFF6          	movff	postinc2,tblptrl
  1860  0011AE  CFDD FFF7          	movff	postdec2,tblptrh
  1861  0011B2                     	if	0	;tblptru may be non-zero
  1862  0011B2                     	endif
  1863  0011B2                     	if	0	;tblptru may be non-zero
  1864  0011B2                     	endif
  1865  0011B2  0008               	tblrd		*
  1866  0011B4  50F5               	movf	tablat,w,c
  1867  0011B6  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1868  0011B8  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1869  0011BA  5049               	movf	??_vfpfcnvrt^0,w,c
  1870  0011BC  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1871  0011BE  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1872  0011C0  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1873  0011C2  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1874  0011C4  E10A               	bnz	u3680
  1875  0011C6  0E0A               	movlw	10
  1876  0011C8  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1877  0011CA  A0D8               	btfss	status,0,c
  1878  0011CC  EFEA  F008         	goto	u3681
  1879  0011D0  EFED  F008         	goto	u3680
  1880  0011D4                     u3681:
  1881  0011D4  0E01               	movlw	1
  1882  0011D6  EFEE  F008         	goto	u3690
  1883  0011DA                     u3680:
  1884  0011DA  0E00               	movlw	0
  1885  0011DC                     u3690:
  1886  0011DC  6E57               	movwf	_vfpfcnvrt$1582^0,c
  1887  0011DE  6A58               	clrf	(_vfpfcnvrt$1582+1)^0,c
  1888  0011E0  5057               	movf	_vfpfcnvrt$1582^0,w,c
  1889  0011E2  1058               	iorwf	(_vfpfcnvrt$1582+1)^0,w,c
  1890  0011E4  A4D8               	btfss	status,2,c
  1891  0011E6  EFF7  F008         	goto	u3701
  1892  0011EA  EFF9  F008         	goto	u3700
  1893  0011EE                     u3701:
  1894  0011EE  EFC6  F008         	goto	l3712
  1895  0011F2                     u3700:
  1896  0011F2                     l3720:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1899  0011F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1900  0011F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1901  0011FA  CFDE FFF6          	movff	postinc2,tblptrl
  1902  0011FE  CFDD FFF7          	movff	postdec2,tblptrh
  1903  001202                     	if	0	;tblptru may be non-zero
  1904  001202                     	endif
  1905  001202                     	if	0	;tblptru may be non-zero
  1906  001202                     	endif
  1907  001202  0008               	tblrd		*
  1908  001204  50F5               	movf	tablat,w,c
  1909  001206  0A64               	xorlw	100
  1910  001208  B4D8               	btfsc	status,2,c
  1911  00120A  EF09  F009         	goto	u3711
  1912  00120E  EF0B  F009         	goto	u3710
  1913  001212                     u3711:
  1914  001212  EF1D  F009         	goto	l3724
  1915  001216                     u3710:
  1916  001216  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1917  00121A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1918  00121E  CFDE FFF6          	movff	postinc2,tblptrl
  1919  001222  CFDD FFF7          	movff	postdec2,tblptrh
  1920  001226                     	if	0	;tblptru may be non-zero
  1921  001226                     	endif
  1922  001226                     	if	0	;tblptru may be non-zero
  1923  001226                     	endif
  1924  001226  0008               	tblrd		*
  1925  001228  50F5               	movf	tablat,w,c
  1926  00122A  0A69               	xorlw	105
  1927  00122C  A4D8               	btfss	status,2,c
  1928  00122E  EF1B  F009         	goto	u3721
  1929  001232  EF1D  F009         	goto	u3720
  1930  001236                     u3721:
  1931  001236  EF5D  F009         	goto	l3730
  1932  00123A                     u3720:
  1933  00123A                     l3724:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1936  00123A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1937  00123E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1938  001242  2ADE               	incf	postinc2,f,c
  1939  001244  0E00               	movlw	0
  1940  001246  22DD               	addwfc	postdec2,f,c
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1943  001248  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1944  00124C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1945  001250  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1946  001254  0E02               	movlw	2
  1947  001256  26DE               	addwf	postinc2,f,c
  1948  001258  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1949  00125C  0E00               	movlw	0
  1950  00125E  22DD               	addwfc	postdec2,f,c
  1951  001260  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1952  001264  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1953  001268  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  1954  00126C  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  1955  001270  0E00               	movlw	0
  1956  001272  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1957  001274  0EFF               	movlw	-1
  1958  001276  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  1959  001278  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  1960  00127A  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  1961  00127C  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  1962  00127E  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  1963  001280  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  1964  001282                     
  1965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1966  001282  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  1967  001286  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1968  00128A  C04D  F021         	movff	vfpfcnvrt@ll,dtoa@d
  1969  00128E  C04E  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1970  001292  C04F  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1971  001296  C050  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1972  00129A  C051  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1973  00129E  C052  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1974  0012A2  C053  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1975  0012A6  C054  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1976  0012AA  ECAF  F009         	call	_dtoa	;wreg free
  1977  0012AE  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  1978  0012B2  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1979  0012B6  EFAE  F009         	goto	l1024
  1980  0012BA                     l3730:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1983  0012BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1984  0012BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1985  0012C2  CFDE FFF6          	movff	postinc2,tblptrl
  1986  0012C6  CFDD FFF7          	movff	postdec2,tblptrh
  1987  0012CA                     	if	0	;tblptru may be non-zero
  1988  0012CA                     	endif
  1989  0012CA                     	if	0	;tblptru may be non-zero
  1990  0012CA                     	endif
  1991  0012CA  0008               	tblrd		*
  1992  0012CC  50F5               	movf	tablat,w,c
  1993  0012CE  0A25               	xorlw	37
  1994  0012D0  A4D8               	btfss	status,2,c
  1995  0012D2  EF6D  F009         	goto	u3731
  1996  0012D6  EF6F  F009         	goto	u3730
  1997  0012DA                     u3731:
  1998  0012DA  EF86  F009         	goto	l3740
  1999  0012DE                     u3730:
  2000  0012DE                     
  2001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2002  0012DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2003  0012E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2004  0012E6  2ADE               	incf	postinc2,f,c
  2005  0012E8  0E00               	movlw	0
  2006  0012EA  22DD               	addwfc	postdec2,f,c
  2007  0012EC                     
  2008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2009  0012EC  0E00               	movlw	0
  2010  0012EE  6E05               	movwf	(fputc@c+1)^0,c
  2011  0012F0  0E25               	movlw	37
  2012  0012F2  6E04               	movwf	fputc@c^0,c
  2013  0012F4  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2014  0012F8  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2015  0012FC  EC7A  F011         	call	_fputc	;wreg free
  2016  001300                     l3736:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2019  001300  0E00               	movlw	0
  2020  001302  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2021  001304  0E01               	movlw	1
  2022  001306  6E43               	movwf	?_vfpfcnvrt^0,c
  2023  001308  EFAE  F009         	goto	l1024
  2024  00130C                     l3740:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2027  00130C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2028  001310  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2029  001314  2ADE               	incf	postinc2,f,c
  2030  001316  0E00               	movlw	0
  2031  001318  22DD               	addwfc	postdec2,f,c
  2032  00131A                     
  2033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2034  00131A  0E00               	movlw	0
  2035  00131C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2036  00131E  0E00               	movlw	0
  2037  001320  6E43               	movwf	?_vfpfcnvrt^0,c
  2038  001322  EFAE  F009         	goto	l1024
  2039  001326                     l3746:
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2042  001326  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2043  00132A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2044  00132E  CFDE FFF6          	movff	postinc2,tblptrl
  2045  001332  CFDD FFF7          	movff	postdec2,tblptrh
  2046  001336                     	if	0	;tblptru may be non-zero
  2047  001336                     	endif
  2048  001336                     	if	0	;tblptru may be non-zero
  2049  001336                     	endif
  2050  001336  0008               	tblrd		*
  2051  001338  50F5               	movf	tablat,w,c
  2052  00133A  6E04               	movwf	fputc@c^0,c
  2053  00133C  6A05               	clrf	(fputc@c+1)^0,c
  2054  00133E  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2055  001342  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2056  001346  EC7A  F011         	call	_fputc	;wreg free
  2057  00134A                     
  2058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2059  00134A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2060  00134E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2061  001352  2ADE               	incf	postinc2,f,c
  2062  001354  0E00               	movlw	0
  2063  001356  22DD               	addwfc	postdec2,f,c
  2064  001358  EF80  F009         	goto	l3736
  2065  00135C                     l1024:
  2066  00135C  0012               	return		;funcret
  2067  00135E                     __end_of_vfpfcnvrt:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _dtoa *****************
  2071 ;; Defined at:
  2072 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  2075 ;;		 -> sprintf@f(6), 
  2076 ;;  d               8   32[COMRAM] long long 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  n               8   56[COMRAM] long long 
  2079 ;;  i               2   64[COMRAM] int 
  2080 ;;  s               2   54[COMRAM] int 
  2081 ;;  w               2   52[COMRAM] int 
  2082 ;;  p               2   50[COMRAM] int 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  2   30[COMRAM] int 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2092 ;;      Params:        10       0       0       0       0       0       0       0       0
  2093 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2094 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2095 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2096 ;;Total ram usage:       36 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    6
  2099 ;; This function calls:
  2100 ;;		___aodiv
  2101 ;;		___aomod
  2102 ;;		_abs
  2103 ;;		_pad
  2104 ;; This function is called by:
  2105 ;;		_vfpfcnvrt
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text9
  2110  00135E                     __ptext9:
  2111                           	callstack 0
  2112  00135E                     _dtoa:
  2113                           	callstack 19
  2114  00135E                     
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2116  00135E  C021  F039         	movff	dtoa@d,dtoa@n
  2117  001362  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  2118  001366  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  2119  00136A  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  2120  00136E  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  2121  001372  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  2122  001376  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  2123  00137A  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  2124  00137E                     
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2126  00137E  BE40               	btfsc	(dtoa@n+7)^0,7,c
  2127  001380  EFC4  F009         	goto	u3411
  2128  001384  EFC7  F009         	goto	u3410
  2129  001388                     u3411:
  2130  001388  0E01               	movlw	1
  2131  00138A  EFC8  F009         	goto	u3420
  2132  00138E                     u3410:
  2133  00138E  0E00               	movlw	0
  2134  001390                     u3420:
  2135  001390  6E37               	movwf	dtoa@s^0,c
  2136  001392  6A38               	clrf	(dtoa@s+1)^0,c
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2139  001394  5037               	movf	dtoa@s^0,w,c
  2140  001396  1038               	iorwf	(dtoa@s+1)^0,w,c
  2141  001398  B4D8               	btfsc	status,2,c
  2142  00139A  EFD1  F009         	goto	u3431
  2143  00139E  EFD3  F009         	goto	u3430
  2144  0013A2                     u3431:
  2145  0013A2  EFE3  F009         	goto	l3564
  2146  0013A6                     u3430:
  2147  0013A6                     
  2148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2149  0013A6  1E40               	comf	(dtoa@n+7)^0,f,c
  2150  0013A8  1E3F               	comf	(dtoa@n+6)^0,f,c
  2151  0013AA  1E3E               	comf	(dtoa@n+5)^0,f,c
  2152  0013AC  1E3D               	comf	(dtoa@n+4)^0,f,c
  2153  0013AE  1E3C               	comf	(dtoa@n+3)^0,f,c
  2154  0013B0  1E3B               	comf	(dtoa@n+2)^0,f,c
  2155  0013B2  1E3A               	comf	(dtoa@n+1)^0,f,c
  2156  0013B4  6C39               	negf	dtoa@n^0,c
  2157  0013B6  0E00               	movlw	0
  2158  0013B8  223A               	addwfc	(dtoa@n+1)^0,f,c
  2159  0013BA  223B               	addwfc	(dtoa@n+2)^0,f,c
  2160  0013BC  223C               	addwfc	(dtoa@n+3)^0,f,c
  2161  0013BE  223D               	addwfc	(dtoa@n+4)^0,f,c
  2162  0013C0  223E               	addwfc	(dtoa@n+5)^0,f,c
  2163  0013C2  223F               	addwfc	(dtoa@n+6)^0,f,c
  2164  0013C4  2240               	addwfc	(dtoa@n+7)^0,f,c
  2165  0013C6                     l3564:
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2168  0013C6  0100               	movlb	0	; () banked
  2169  0013C8  BF7C               	btfsc	(_prec+1)& (0+255),7,b
  2170  0013CA  EFE9  F009         	goto	u3441
  2171  0013CE  EFEB  F009         	goto	u3440
  2172  0013D2                     u3441:
  2173  0013D2  EFEC  F009         	goto	l3568
  2174  0013D6                     u3440:
  2175  0013D6                     
  2176                           ; BSR set to: 0
  2177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2178  0013D6  925A               	bcf	_flags^0,1,c
  2179  0013D8                     l3568:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2183  0013D8  BF7C               	btfsc	(_prec+1)& (0+255),7,b
  2184  0013DA  EFF9  F009         	goto	u3450
  2185  0013DE  517C               	movf	(_prec+1)& (0+255),w,b
  2186  0013E0  E106               	bnz	u3451
  2187  0013E2  057B               	decf	_prec& (0+255),w,b
  2188  0013E4  B0D8               	btfsc	status,0,c
  2189  0013E6  EFF7  F009         	goto	u3451
  2190  0013EA  EFF9  F009         	goto	u3450
  2191  0013EE                     u3451:
  2192  0013EE  EFFF  F009         	goto	l975
  2193  0013F2                     u3450:
  2194  0013F2                     
  2195                           ; BSR set to: 0
  2196  0013F2  0E00               	movlw	0
  2197  0013F4  6E34               	movwf	(dtoa@p+1)^0,c
  2198  0013F6  0E01               	movlw	1
  2199  0013F8  6E33               	movwf	dtoa@p^0,c
  2200  0013FA  EF03  F00A         	goto	l977
  2201  0013FE                     l975:
  2202                           
  2203                           ; BSR set to: 0
  2204  0013FE  C07B  F033         	movff	_prec,dtoa@p
  2205  001402  C07C  F034         	movff	_prec+1,dtoa@p+1
  2206  001406                     l977:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2210  001406  C079  F035         	movff	_width,dtoa@w
  2211  00140A  C07A  F036         	movff	_width+1,dtoa@w+1
  2212  00140E                     
  2213                           ; BSR set to: 0
  2214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2215  00140E  5037               	movf	dtoa@s^0,w,c
  2216  001410  1038               	iorwf	(dtoa@s+1)^0,w,c
  2217  001412  A4D8               	btfss	status,2,c
  2218  001414  EF0E  F00A         	goto	u3461
  2219  001418  EF10  F00A         	goto	u3460
  2220  00141C                     u3461:
  2221  00141C  EF17  F00A         	goto	l3576
  2222  001420                     u3460:
  2223  001420                     
  2224                           ; BSR set to: 0
  2225  001420  A45A               	btfss	_flags^0,2,c
  2226  001422  EF15  F00A         	goto	u3471
  2227  001426  EF17  F00A         	goto	u3470
  2228  00142A                     u3471:
  2229  00142A  EF1A  F00A         	goto	l3578
  2230  00142E                     u3470:
  2231  00142E                     l3576:
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  2235  00142E  0635               	decf	dtoa@w^0,f,c
  2236  001430  A0D8               	btfss	status,0,c
  2237  001432  0636               	decf	(dtoa@w+1)^0,f,c
  2238  001434                     l3578:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2242  001434  0E00               	movlw	0
  2243  001436  6E42               	movwf	(dtoa@i+1)^0,c
  2244  001438  0E1F               	movlw	31
  2245  00143A  6E41               	movwf	dtoa@i^0,c
  2246  00143C                     
  2247                           ; BSR set to: 0
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2249  00143C  0E00               	movlw	0
  2250  00143E  6F9C               	movwf	(_dbuf+31)& (0+255),b
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2253  001440  EF9E  F00A         	goto	l3592
  2254  001444                     l3582:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  2257  001444  0641               	decf	dtoa@i^0,f,c
  2258  001446  A0D8               	btfss	status,0,c
  2259  001448  0642               	decf	(dtoa@i+1)^0,f,c
  2260  00144A                     
  2261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2262  00144A  0E7D               	movlw	low _dbuf
  2263  00144C  2441               	addwf	dtoa@i^0,w,c
  2264  00144E  6ED9               	movwf	fsr2l,c
  2265  001450  0E00               	movlw	high _dbuf
  2266  001452  2042               	addwfc	(dtoa@i+1)^0,w,c
  2267  001454  6EDA               	movwf	fsr2h,c
  2268  001456  C039  F004         	movff	dtoa@n,___aomod@dividend
  2269  00145A  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  2270  00145E  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  2271  001462  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  2272  001466  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  2273  00146A  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  2274  00146E  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  2275  001472  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  2276  001476  0E0A               	movlw	10
  2277  001478  6E0C               	movwf	___aomod@divisor^0,c
  2278  00147A  0E00               	movlw	0
  2279  00147C  6E0D               	movwf	(___aomod@divisor+1)^0,c
  2280  00147E  0E00               	movlw	0
  2281  001480  6E0E               	movwf	(___aomod@divisor+2)^0,c
  2282  001482  0E00               	movlw	0
  2283  001484  6E0F               	movwf	(___aomod@divisor+3)^0,c
  2284  001486  0E00               	movlw	0
  2285  001488  6E10               	movwf	(___aomod@divisor+4)^0,c
  2286  00148A  0E00               	movlw	0
  2287  00148C  6E11               	movwf	(___aomod@divisor+5)^0,c
  2288  00148E  0E00               	movlw	0
  2289  001490  6E12               	movwf	(___aomod@divisor+6)^0,c
  2290  001492  0E00               	movlw	0
  2291  001494  6E13               	movwf	(___aomod@divisor+7)^0,c
  2292  001496  EC84  F00D         	call	___aomod	;wreg free
  2293  00149A  C004  F029         	movff	?___aomod,??_dtoa
  2294  00149E  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  2295  0014A2  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  2296  0014A6  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  2297  0014AA  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  2298  0014AE  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  2299  0014B2  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  2300  0014B6  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  2301  0014BA  C029  F016         	movff	??_dtoa,abs@a
  2302  0014BE  C02B  F017         	movff	??_dtoa+2,abs@a+1
  2303  0014C2  EC5E  F014         	call	_abs	;wreg free
  2304  0014C6  5016               	movf	?_abs^0,w,c
  2305  0014C8  0F30               	addlw	48
  2306  0014CA  6EDF               	movwf	indf2,c
  2307  0014CC                     
  2308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  2309  0014CC  0633               	decf	dtoa@p^0,f,c
  2310  0014CE  A0D8               	btfss	status,0,c
  2311  0014D0  0634               	decf	(dtoa@p+1)^0,f,c
  2312  0014D2                     
  2313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  2314  0014D2  0635               	decf	dtoa@w^0,f,c
  2315  0014D4  A0D8               	btfss	status,0,c
  2316  0014D6  0636               	decf	(dtoa@w+1)^0,f,c
  2317  0014D8                     
  2318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2319  0014D8  C039  F004         	movff	dtoa@n,___aodiv@dividend
  2320  0014DC  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  2321  0014E0  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  2322  0014E4  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  2323  0014E8  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  2324  0014EC  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  2325  0014F0  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  2326  0014F4  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  2327  0014F8  0E0A               	movlw	10
  2328  0014FA  6E0C               	movwf	___aodiv@divisor^0,c
  2329  0014FC  0E00               	movlw	0
  2330  0014FE  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  2331  001500  0E00               	movlw	0
  2332  001502  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  2333  001504  0E00               	movlw	0
  2334  001506  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  2335  001508  0E00               	movlw	0
  2336  00150A  6E10               	movwf	(___aodiv@divisor+4)^0,c
  2337  00150C  0E00               	movlw	0
  2338  00150E  6E11               	movwf	(___aodiv@divisor+5)^0,c
  2339  001510  0E00               	movlw	0
  2340  001512  6E12               	movwf	(___aodiv@divisor+6)^0,c
  2341  001514  0E00               	movlw	0
  2342  001516  6E13               	movwf	(___aodiv@divisor+7)^0,c
  2343  001518  ECC0  F00C         	call	___aodiv	;wreg free
  2344  00151C  C004  F039         	movff	?___aodiv,dtoa@n
  2345  001520  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  2346  001524  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  2347  001528  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  2348  00152C  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  2349  001530  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  2350  001534  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  2351  001538  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  2352  00153C                     l3592:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2355  00153C  BE42               	btfsc	(dtoa@i+1)^0,7,c
  2356  00153E  EFA9  F00A         	goto	u3481
  2357  001542  5042               	movf	(dtoa@i+1)^0,w,c
  2358  001544  E108               	bnz	u3480
  2359  001546  0441               	decf	dtoa@i^0,w,c
  2360  001548  A0D8               	btfss	status,0,c
  2361  00154A  EFA9  F00A         	goto	u3481
  2362  00154E  EFAB  F00A         	goto	u3480
  2363  001552                     u3481:
  2364  001552  EFDB  F00A         	goto	l3602
  2365  001556                     u3480:
  2366  001556  5039               	movf	dtoa@n^0,w,c
  2367  001558  103A               	iorwf	(dtoa@n+1)^0,w,c
  2368  00155A  103B               	iorwf	(dtoa@n+2)^0,w,c
  2369  00155C  103C               	iorwf	(dtoa@n+3)^0,w,c
  2370  00155E  103D               	iorwf	(dtoa@n+4)^0,w,c
  2371  001560  103E               	iorwf	(dtoa@n+5)^0,w,c
  2372  001562  103F               	iorwf	(dtoa@n+6)^0,w,c
  2373  001564  1040               	iorwf	(dtoa@n+7)^0,w,c
  2374  001566  A4D8               	btfss	status,2,c
  2375  001568  EFB8  F00A         	goto	u3491
  2376  00156C  EFBA  F00A         	goto	u3490
  2377  001570                     u3491:
  2378  001570  EF22  F00A         	goto	l3582
  2379  001574                     u3490:
  2380  001574  BE34               	btfsc	(dtoa@p+1)^0,7,c
  2381  001576  EFC7  F00A         	goto	u3500
  2382  00157A  5034               	movf	(dtoa@p+1)^0,w,c
  2383  00157C  E106               	bnz	u3501
  2384  00157E  0433               	decf	dtoa@p^0,w,c
  2385  001580  B0D8               	btfsc	status,0,c
  2386  001582  EFC5  F00A         	goto	u3501
  2387  001586  EFC7  F00A         	goto	u3500
  2388  00158A                     u3501:
  2389  00158A  EF22  F00A         	goto	l3582
  2390  00158E                     u3500:
  2391  00158E  BE36               	btfsc	(dtoa@w+1)^0,7,c
  2392  001590  EFD2  F00A         	goto	u3511
  2393  001594  5036               	movf	(dtoa@w+1)^0,w,c
  2394  001596  E108               	bnz	u3510
  2395  001598  0435               	decf	dtoa@w^0,w,c
  2396  00159A  A0D8               	btfss	status,0,c
  2397  00159C  EFD2  F00A         	goto	u3511
  2398  0015A0  EFD4  F00A         	goto	u3510
  2399  0015A4                     u3511:
  2400  0015A4  EFDB  F00A         	goto	l3602
  2401  0015A8                     u3510:
  2402  0015A8  B25A               	btfsc	_flags^0,1,c
  2403  0015AA  EFD9  F00A         	goto	u3521
  2404  0015AE  EFDB  F00A         	goto	u3520
  2405  0015B2                     u3521:
  2406  0015B2  EF22  F00A         	goto	l3582
  2407  0015B6                     u3520:
  2408  0015B6                     l3602:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2411  0015B6  5037               	movf	dtoa@s^0,w,c
  2412  0015B8  1038               	iorwf	(dtoa@s+1)^0,w,c
  2413  0015BA  A4D8               	btfss	status,2,c
  2414  0015BC  EFE2  F00A         	goto	u3531
  2415  0015C0  EFE4  F00A         	goto	u3530
  2416  0015C4                     u3531:
  2417  0015C4  EFEB  F00A         	goto	l3606
  2418  0015C8                     u3530:
  2419  0015C8  A45A               	btfss	_flags^0,2,c
  2420  0015CA  EFE9  F00A         	goto	u3541
  2421  0015CE  EFEB  F00A         	goto	u3540
  2422  0015D2                     u3541:
  2423  0015D2  EF09  F00B         	goto	l3616
  2424  0015D6                     u3540:
  2425  0015D6                     l3606:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  2428  0015D6  0641               	decf	dtoa@i^0,f,c
  2429  0015D8  A0D8               	btfss	status,0,c
  2430  0015DA  0642               	decf	(dtoa@i+1)^0,f,c
  2431  0015DC                     
  2432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2433  0015DC  5037               	movf	dtoa@s^0,w,c
  2434  0015DE  1038               	iorwf	(dtoa@s+1)^0,w,c
  2435  0015E0  A4D8               	btfss	status,2,c
  2436  0015E2  EFF5  F00A         	goto	u3551
  2437  0015E6  EFF7  F00A         	goto	u3550
  2438  0015EA                     u3551:
  2439  0015EA  EFFD  F00A         	goto	l3612
  2440  0015EE                     u3550:
  2441  0015EE  0E00               	movlw	0
  2442  0015F0  6E32               	movwf	(_dtoa$1567+1)^0,c
  2443  0015F2  0E2B               	movlw	43
  2444  0015F4  6E31               	movwf	_dtoa$1567^0,c
  2445  0015F6  EF01  F00B         	goto	l3614
  2446  0015FA                     l3612:
  2447  0015FA  0E00               	movlw	0
  2448  0015FC  6E32               	movwf	(_dtoa$1567+1)^0,c
  2449  0015FE  0E2D               	movlw	45
  2450  001600  6E31               	movwf	_dtoa$1567^0,c
  2451  001602                     l3614:
  2452  001602  0E7D               	movlw	low _dbuf
  2453  001604  2441               	addwf	dtoa@i^0,w,c
  2454  001606  6ED9               	movwf	fsr2l,c
  2455  001608  0E00               	movlw	high _dbuf
  2456  00160A  2042               	addwfc	(dtoa@i+1)^0,w,c
  2457  00160C  6EDA               	movwf	fsr2h,c
  2458  00160E  C031  FFDF         	movff	_dtoa$1567,indf2
  2459  001612                     l3616:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2462  001612  C01F  F014         	movff	dtoa@fp,pad@fp
  2463  001616  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  2464  00161A  0E7D               	movlw	low _dbuf
  2465  00161C  2441               	addwf	dtoa@i^0,w,c
  2466  00161E  6E16               	movwf	pad@buf^0,c
  2467  001620  0E00               	movlw	high _dbuf
  2468  001622  2042               	addwfc	(dtoa@i+1)^0,w,c
  2469  001624  6E17               	movwf	(pad@buf+1)^0,c
  2470  001626  C035  F018         	movff	dtoa@w,pad@p
  2471  00162A  C036  F019         	movff	dtoa@w+1,pad@p+1
  2472  00162E  ECDF  F011         	call	_pad	;wreg free
  2473  001632  C014  F01F         	movff	?_pad,?_dtoa
  2474  001636  C015  F020         	movff	?_pad+1,?_dtoa+1
  2475  00163A  0012               	return		;funcret
  2476  00163C                     __end_of_dtoa:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _pad *****************
  2480 ;; Defined at:
  2481 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2484 ;;		 -> sprintf@f(6), 
  2485 ;;  buf             2   21[COMRAM] PTR unsigned char 
  2486 ;;		 -> dbuf(32), 
  2487 ;;  p               2   23[COMRAM] int 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  w               2   28[COMRAM] int 
  2490 ;;  i               2   26[COMRAM] int 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  2   19[COMRAM] int 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2500 ;;      Params:         6       0       0       0       0       0       0       0       0
  2501 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2502 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2503 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2504 ;;Total ram usage:       11 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    5
  2507 ;; This function calls:
  2508 ;;		_fputc
  2509 ;;		_fputs
  2510 ;;		_strlen
  2511 ;; This function is called by:
  2512 ;;		_dtoa
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text10
  2517  0023BE                     __ptext10:
  2518                           	callstack 0
  2519  0023BE                     _pad:
  2520                           	callstack 19
  2521  0023BE                     
  2522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2523  0023BE  A05A               	btfss	_flags^0,0,c
  2524  0023C0  EFE4  F011         	goto	u3321
  2525  0023C4  EFE6  F011         	goto	u3320
  2526  0023C8                     u3321:
  2527  0023C8  EFF0  F011         	goto	l3520
  2528  0023CC                     u3320:
  2529  0023CC                     
  2530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2531  0023CC  C016  F00D         	movff	pad@buf,fputs@s
  2532  0023D0  C017  F00E         	movff	pad@buf+1,fputs@s+1
  2533  0023D4  C014  F00F         	movff	pad@fp,fputs@fp
  2534  0023D8  C015  F010         	movff	pad@fp+1,fputs@fp+1
  2535  0023DC  EC3C  F014         	call	_fputs	;wreg free
  2536  0023E0                     l3520:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2539  0023E0  BE19               	btfsc	(pad@p+1)^0,7,c
  2540  0023E2  EFF5  F011         	goto	u3331
  2541  0023E6  EFF7  F011         	goto	u3330
  2542  0023EA                     u3331:
  2543  0023EA  EFFD  F011         	goto	l3524
  2544  0023EE                     u3330:
  2545  0023EE  C018  F01D         	movff	pad@p,pad@w
  2546  0023F2  C019  F01E         	movff	pad@p+1,pad@w+1
  2547  0023F6  EF01  F012         	goto	l964
  2548  0023FA                     l3524:
  2549  0023FA  0E00               	movlw	0
  2550  0023FC  6E1E               	movwf	(pad@w+1)^0,c
  2551  0023FE  0E00               	movlw	0
  2552  002400  6E1D               	movwf	pad@w^0,c
  2553  002402                     l964:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2556  002402  0E00               	movlw	0
  2557  002404  6E1C               	movwf	(pad@i+1)^0,c
  2558  002406  0E00               	movlw	0
  2559  002408  6E1B               	movwf	pad@i^0,c
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2562  00240A  EF13  F012         	goto	l3530
  2563  00240E                     l3526:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2566  00240E  0E00               	movlw	0
  2567  002410  6E05               	movwf	(fputc@c+1)^0,c
  2568  002412  0E20               	movlw	32
  2569  002414  6E04               	movwf	fputc@c^0,c
  2570  002416  C014  F006         	movff	pad@fp,fputc@fp
  2571  00241A  C015  F007         	movff	pad@fp+1,fputc@fp+1
  2572  00241E  EC7A  F011         	call	_fputc	;wreg free
  2573  002422                     
  2574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2575  002422  4A1B               	infsnz	pad@i^0,f,c
  2576  002424  2A1C               	incf	(pad@i+1)^0,f,c
  2577  002426                     l3530:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2580  002426  501D               	movf	pad@w^0,w,c
  2581  002428  5C1B               	subwf	pad@i^0,w,c
  2582  00242A  501C               	movf	(pad@i+1)^0,w,c
  2583  00242C  0A80               	xorlw	128
  2584  00242E  6E1A               	movwf	??_pad^0,c
  2585  002430  501E               	movf	(pad@w+1)^0,w,c
  2586  002432  0A80               	xorlw	128
  2587  002434  581A               	subwfb	??_pad^0,w,c
  2588  002436  A0D8               	btfss	status,0,c
  2589  002438  EF20  F012         	goto	u3341
  2590  00243C  EF22  F012         	goto	u3340
  2591  002440                     u3341:
  2592  002440  EF07  F012         	goto	l3526
  2593  002444                     u3340:
  2594  002444                     
  2595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2596  002444  B05A               	btfsc	_flags^0,0,c
  2597  002446  EF27  F012         	goto	u3351
  2598  00244A  EF29  F012         	goto	u3350
  2599  00244E                     u3351:
  2600  00244E  EF33  F012         	goto	l3534
  2601  002452                     u3350:
  2602  002452                     
  2603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2604  002452  C016  F00D         	movff	pad@buf,fputs@s
  2605  002456  C017  F00E         	movff	pad@buf+1,fputs@s+1
  2606  00245A  C014  F00F         	movff	pad@fp,fputs@fp
  2607  00245E  C015  F010         	movff	pad@fp+1,fputs@fp+1
  2608  002462  EC3C  F014         	call	_fputs	;wreg free
  2609  002466                     l3534:
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2612  002466  C016  F004         	movff	pad@buf,strlen@s
  2613  00246A  C017  F005         	movff	pad@buf+1,strlen@s+1
  2614  00246E  ECD7  F014         	call	_strlen	;wreg free
  2615  002472  501D               	movf	pad@w^0,w,c
  2616  002474  2404               	addwf	?_strlen^0,w,c
  2617  002476  6E14               	movwf	?_pad^0,c
  2618  002478  501E               	movf	(pad@w+1)^0,w,c
  2619  00247A  2005               	addwfc	(?_strlen+1)^0,w,c
  2620  00247C  6E15               	movwf	(?_pad+1)^0,c
  2621  00247E  0012               	return		;funcret
  2622  002480                     __end_of_pad:
  2623                           	callstack 0
  2624                           
  2625 ;; *************** function _strlen *****************
  2626 ;; Defined at:
  2627 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  s               2    3[COMRAM] PTR const unsigned char 
  2630 ;;		 -> dbuf(32), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  a               2    5[COMRAM] PTR const unsigned char 
  2633 ;;		 -> dbuf(32), 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  2    3[COMRAM] unsigned int 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2643 ;;      Params:         2       0       0       0       0       0       0       0       0
  2644 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2646 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2647 ;;Total ram usage:        4 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    2
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_pad
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text11
  2658  0029AE                     __ptext11:
  2659                           	callstack 0
  2660  0029AE                     _strlen:
  2661                           	callstack 21
  2662  0029AE  C004  F006         	movff	strlen@s,strlen@a
  2663  0029B2  C005  F007         	movff	strlen@s+1,strlen@a+1
  2664  0029B6  EFDF  F014         	goto	l3424
  2665  0029BA                     l3422:
  2666  0029BA  4A04               	infsnz	strlen@s^0,f,c
  2667  0029BC  2A05               	incf	(strlen@s+1)^0,f,c
  2668  0029BE                     l3424:
  2669  0029BE  C004  FFD9         	movff	strlen@s,fsr2l
  2670  0029C2  C005  FFDA         	movff	strlen@s+1,fsr2h
  2671  0029C6  50DF               	movf	indf2,w,c
  2672  0029C8  A4D8               	btfss	status,2,c
  2673  0029CA  EFE9  F014         	goto	u3181
  2674  0029CE  EFEB  F014         	goto	u3180
  2675  0029D2                     u3181:
  2676  0029D2  EFDD  F014         	goto	l3422
  2677  0029D6                     u3180:
  2678  0029D6  5006               	movf	strlen@a^0,w,c
  2679  0029D8  5C04               	subwf	strlen@s^0,w,c
  2680  0029DA  6E04               	movwf	?_strlen^0,c
  2681  0029DC  5007               	movf	(strlen@a+1)^0,w,c
  2682  0029DE  5805               	subwfb	(strlen@s+1)^0,w,c
  2683  0029E0  6E05               	movwf	(?_strlen+1)^0,c
  2684  0029E2  0012               	return		;funcret
  2685  0029E4                     __end_of_strlen:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _fputs *****************
  2689 ;; Defined at:
  2690 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  s               2   12[COMRAM] PTR const unsigned char 
  2693 ;;		 -> dbuf(32), 
  2694 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2695 ;;		 -> sprintf@f(6), 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  i               2   17[COMRAM] int 
  2698 ;;  c               1   16[COMRAM] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  2   12[COMRAM] int 
  2701 ;; Registers used:
  2702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2708 ;;      Params:         4       0       0       0       0       0       0       0       0
  2709 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2711 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2712 ;;Total ram usage:        7 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    4
  2715 ;; This function calls:
  2716 ;;		_fputc
  2717 ;; This function is called by:
  2718 ;;		_pad
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text12
  2723  002878                     __ptext12:
  2724                           	callstack 0
  2725  002878                     _fputs:
  2726                           	callstack 19
  2727  002878  0E00               	movlw	0
  2728  00287A  6E13               	movwf	(fputs@i+1)^0,c
  2729  00287C  0E00               	movlw	0
  2730  00287E  6E12               	movwf	fputs@i^0,c
  2731  002880  EF4D  F014         	goto	l3418
  2732  002884                     l3414:
  2733  002884  C011  F004         	movff	fputs@c,fputc@c
  2734  002888  6A05               	clrf	(fputc@c+1)^0,c
  2735  00288A  C00F  F006         	movff	fputs@fp,fputc@fp
  2736  00288E  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  2737  002892  EC7A  F011         	call	_fputc	;wreg free
  2738  002896  4A12               	infsnz	fputs@i^0,f,c
  2739  002898  2A13               	incf	(fputs@i+1)^0,f,c
  2740  00289A                     l3418:
  2741  00289A  5012               	movf	fputs@i^0,w,c
  2742  00289C  240D               	addwf	fputs@s^0,w,c
  2743  00289E  6ED9               	movwf	fsr2l,c
  2744  0028A0  5013               	movf	(fputs@i+1)^0,w,c
  2745  0028A2  200E               	addwfc	(fputs@s+1)^0,w,c
  2746  0028A4  6EDA               	movwf	fsr2h,c
  2747  0028A6  50DF               	movf	indf2,w,c
  2748  0028A8  6E11               	movwf	fputs@c^0,c
  2749  0028AA  5011               	movf	fputs@c^0,w,c
  2750  0028AC  A4D8               	btfss	status,2,c
  2751  0028AE  EF5B  F014         	goto	u3171
  2752  0028B2  EF5D  F014         	goto	u3170
  2753  0028B6                     u3171:
  2754  0028B6  EF42  F014         	goto	l3414
  2755  0028BA                     u3170:
  2756  0028BA  0012               	return		;funcret
  2757  0028BC                     __end_of_fputs:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _fputc *****************
  2761 ;; Defined at:
  2762 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  c               2    3[COMRAM] int 
  2765 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  2766 ;;		 -> sprintf@f(6), 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  2    3[COMRAM] int 
  2771 ;; Registers used:
  2772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2778 ;;      Params:         4       0       0       0       0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2780 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2781 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2782 ;;Total ram usage:        9 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    3
  2785 ;; This function calls:
  2786 ;;		_putch
  2787 ;; This function is called by:
  2788 ;;		_pad
  2789 ;;		_vfpfcnvrt
  2790 ;;		_fputs
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text13
  2795  0022F4                     __ptext13:
  2796                           	callstack 0
  2797  0022F4                     _fputc:
  2798                           	callstack 22
  2799  0022F4  5006               	movf	fputc@fp^0,w,c
  2800  0022F6  1007               	iorwf	(fputc@fp+1)^0,w,c
  2801  0022F8  B4D8               	btfsc	status,2,c
  2802  0022FA  EF81  F011         	goto	u3131
  2803  0022FE  EF83  F011         	goto	u3130
  2804  002302                     u3131:
  2805  002302  EF8C  F011         	goto	l3402
  2806  002306                     u3130:
  2807  002306  5006               	movf	fputc@fp^0,w,c
  2808  002308  1007               	iorwf	(fputc@fp+1)^0,w,c
  2809  00230A  A4D8               	btfss	status,2,c
  2810  00230C  EF8A  F011         	goto	u3141
  2811  002310  EF8C  F011         	goto	u3140
  2812  002314                     u3141:
  2813  002314  EF91  F011         	goto	l3404
  2814  002318                     u3140:
  2815  002318                     l3402:
  2816  002318  5004               	movf	fputc@c^0,w,c
  2817  00231A  EC46  F015         	call	_putch
  2818  00231E  EFDE  F011         	goto	l1095
  2819  002322                     l3404:
  2820  002322  EE20 F004          	lfsr	2,4
  2821  002326  5006               	movf	fputc@fp^0,w,c
  2822  002328  26D9               	addwf	fsr2l,f,c
  2823  00232A  5007               	movf	(fputc@fp+1)^0,w,c
  2824  00232C  22DA               	addwfc	fsr2h,f,c
  2825  00232E  50DE               	movf	postinc2,w,c
  2826  002330  10DE               	iorwf	postinc2,w,c
  2827  002332  B4D8               	btfsc	status,2,c
  2828  002334  EF9E  F011         	goto	u3151
  2829  002338  EFA0  F011         	goto	u3150
  2830  00233C                     u3151:
  2831  00233C  EFBB  F011         	goto	l3408
  2832  002340                     u3150:
  2833  002340  EE20 F004          	lfsr	2,4
  2834  002344  5006               	movf	fputc@fp^0,w,c
  2835  002346  26D9               	addwf	fsr2l,f,c
  2836  002348  5007               	movf	(fputc@fp+1)^0,w,c
  2837  00234A  22DA               	addwfc	fsr2h,f,c
  2838  00234C  EE10 F002          	lfsr	1,2
  2839  002350  5006               	movf	fputc@fp^0,w,c
  2840  002352  26E1               	addwf	fsr1l,f,c
  2841  002354  5007               	movf	(fputc@fp+1)^0,w,c
  2842  002356  22E2               	addwfc	fsr1h,f,c
  2843  002358  50DE               	movf	postinc2,w,c
  2844  00235A  5CE6               	subwf	postinc1,w,c
  2845  00235C  50E6               	movf	postinc1,w,c
  2846  00235E  0A80               	xorlw	128
  2847  002360  6E0C               	movwf	(??_fputc+4)^0,c
  2848  002362  50DE               	movf	postinc2,w,c
  2849  002364  0A80               	xorlw	128
  2850  002366  580C               	subwfb	(??_fputc+4)^0,w,c
  2851  002368  B0D8               	btfsc	status,0,c
  2852  00236A  EFB9  F011         	goto	u3161
  2853  00236E  EFBB  F011         	goto	u3160
  2854  002372                     u3161:
  2855  002372  EFDE  F011         	goto	l1095
  2856  002376                     u3160:
  2857  002376                     l3408:
  2858  002376  EE20 F002          	lfsr	2,2
  2859  00237A  5006               	movf	fputc@fp^0,w,c
  2860  00237C  26D9               	addwf	fsr2l,f,c
  2861  00237E  5007               	movf	(fputc@fp+1)^0,w,c
  2862  002380  22DA               	addwfc	fsr2h,f,c
  2863  002382  CFDE F008          	movff	postinc2,??_fputc
  2864  002386  CFDD F009          	movff	postdec2,??_fputc+1
  2865  00238A  C006  FFD9         	movff	fputc@fp,fsr2l
  2866  00238E  C007  FFDA         	movff	fputc@fp+1,fsr2h
  2867  002392  CFDE F00A          	movff	postinc2,??_fputc+2
  2868  002396  CFDD F00B          	movff	postdec2,??_fputc+3
  2869  00239A  5008               	movf	??_fputc^0,w,c
  2870  00239C  240A               	addwf	(??_fputc+2)^0,w,c
  2871  00239E  6ED9               	movwf	fsr2l,c
  2872  0023A0  5009               	movf	(??_fputc+1)^0,w,c
  2873  0023A2  200B               	addwfc	(??_fputc+3)^0,w,c
  2874  0023A4  6EDA               	movwf	fsr2h,c
  2875  0023A6  C004  FFDF         	movff	fputc@c,indf2
  2876  0023AA  EE20 F002          	lfsr	2,2
  2877  0023AE  5006               	movf	fputc@fp^0,w,c
  2878  0023B0  26D9               	addwf	fsr2l,f,c
  2879  0023B2  5007               	movf	(fputc@fp+1)^0,w,c
  2880  0023B4  22DA               	addwfc	fsr2h,f,c
  2881  0023B6  2ADE               	incf	postinc2,f,c
  2882  0023B8  0E00               	movlw	0
  2883  0023BA  22DD               	addwfc	postdec2,f,c
  2884  0023BC                     l1095:
  2885  0023BC  0012               	return		;funcret
  2886  0023BE                     __end_of_fputc:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _putch *****************
  2890 ;; Defined at:
  2891 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  c               1    wreg     unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  c               1    0[COMRAM] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2905 ;;      Params:         0       0       0       0       0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2908 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2909 ;;Total ram usage:        0 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    2
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_fputc
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text14
  2920  002A8C                     __ptext14:
  2921                           	callstack 0
  2922  002A8C                     _putch:
  2923                           	callstack 22
  2924  002A8C  0012               	return		;funcret
  2925  002A8E                     __end_of_putch:
  2926                           	callstack 0
  2927                           
  2928 ;; *************** function _abs *****************
  2929 ;; Defined at:
  2930 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  a               2   21[COMRAM] int 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2   21[COMRAM] int 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2944 ;;      Params:         2       0       0       0       0       0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2946 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2947 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2948 ;;Total ram usage:        4 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    2
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_dtoa
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text15
  2959  0028BC                     __ptext15:
  2960                           	callstack 0
  2961  0028BC                     _abs:
  2962                           	callstack 22
  2963  0028BC  BE17               	btfsc	(abs@a+1)^0,7,c
  2964  0028BE  EF6B  F014         	goto	u3360
  2965  0028C2  5017               	movf	(abs@a+1)^0,w,c
  2966  0028C4  E106               	bnz	u3361
  2967  0028C6  0416               	decf	abs@a^0,w,c
  2968  0028C8  B0D8               	btfsc	status,0,c
  2969  0028CA  EF69  F014         	goto	u3361
  2970  0028CE  EF6B  F014         	goto	u3360
  2971  0028D2                     u3361:
  2972  0028D2  EF79  F014         	goto	l1035
  2973  0028D6                     u3360:
  2974  0028D6  C016  F018         	movff	abs@a,??_abs
  2975  0028DA  C017  F019         	movff	abs@a+1,??_abs+1
  2976  0028DE  1E18               	comf	??_abs^0,f,c
  2977  0028E0  1E19               	comf	(??_abs+1)^0,f,c
  2978  0028E2  4A18               	infsnz	??_abs^0,f,c
  2979  0028E4  2A19               	incf	(??_abs+1)^0,f,c
  2980  0028E6  C018  F016         	movff	??_abs,?_abs
  2981  0028EA  C019  F017         	movff	??_abs+1,?_abs+1
  2982  0028EE  EF7D  F014         	goto	l1038
  2983  0028F2                     l1035:
  2984  0028F2  C016  F016         	movff	abs@a,?_abs
  2985  0028F6  C017  F017         	movff	abs@a+1,?_abs+1
  2986  0028FA                     l1038:
  2987  0028FA  0012               	return		;funcret
  2988  0028FC                     __end_of_abs:
  2989                           	callstack 0
  2990                           
  2991 ;; *************** function ___aomod *****************
  2992 ;; Defined at:
  2993 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  dividend        8    3[COMRAM] long long 
  2996 ;;  divisor         8   11[COMRAM] long long 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  sign            1   20[COMRAM] unsigned char 
  2999 ;;  counter         1   19[COMRAM] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  8    3[COMRAM] long long 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3009 ;;      Params:        16       0       0       0       0       0       0       0       0
  3010 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3012 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3013 ;;Total ram usage:       18 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    2
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_dtoa
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text16
  3024  001B08                     __ptext16:
  3025                           	callstack 0
  3026  001B08                     ___aomod:
  3027                           	callstack 22
  3028  001B08  0E00               	movlw	0
  3029  001B0A  6E15               	movwf	___aomod@sign^0,c
  3030  001B0C  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  3031  001B0E  EF8D  F00D         	goto	u3260
  3032  001B12  EF8B  F00D         	goto	u3261
  3033  001B16                     u3261:
  3034  001B16  EF9F  F00D         	goto	l3488
  3035  001B1A                     u3260:
  3036  001B1A  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  3037  001B1C  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  3038  001B1E  1E09               	comf	(___aomod@dividend+5)^0,f,c
  3039  001B20  1E08               	comf	(___aomod@dividend+4)^0,f,c
  3040  001B22  1E07               	comf	(___aomod@dividend+3)^0,f,c
  3041  001B24  1E06               	comf	(___aomod@dividend+2)^0,f,c
  3042  001B26  1E05               	comf	(___aomod@dividend+1)^0,f,c
  3043  001B28  6C04               	negf	___aomod@dividend^0,c
  3044  001B2A  0E00               	movlw	0
  3045  001B2C  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  3046  001B2E  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  3047  001B30  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  3048  001B32  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  3049  001B34  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  3050  001B36  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  3051  001B38  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  3052  001B3A  0E01               	movlw	1
  3053  001B3C  6E15               	movwf	___aomod@sign^0,c
  3054  001B3E                     l3488:
  3055  001B3E  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  3056  001B40  EFA6  F00D         	goto	u3270
  3057  001B44  EFA4  F00D         	goto	u3271
  3058  001B48                     u3271:
  3059  001B48  EFB6  F00D         	goto	l3492
  3060  001B4C                     u3270:
  3061  001B4C  1E13               	comf	(___aomod@divisor+7)^0,f,c
  3062  001B4E  1E12               	comf	(___aomod@divisor+6)^0,f,c
  3063  001B50  1E11               	comf	(___aomod@divisor+5)^0,f,c
  3064  001B52  1E10               	comf	(___aomod@divisor+4)^0,f,c
  3065  001B54  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  3066  001B56  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  3067  001B58  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  3068  001B5A  6C0C               	negf	___aomod@divisor^0,c
  3069  001B5C  0E00               	movlw	0
  3070  001B5E  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  3071  001B60  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  3072  001B62  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  3073  001B64  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  3074  001B66  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  3075  001B68  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  3076  001B6A  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  3077  001B6C                     l3492:
  3078  001B6C  500C               	movf	___aomod@divisor^0,w,c
  3079  001B6E  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  3080  001B70  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  3081  001B72  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  3082  001B74  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  3083  001B76  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  3084  001B78  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  3085  001B7A  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  3086  001B7C  B4D8               	btfsc	status,2,c
  3087  001B7E  EFC3  F00D         	goto	u3281
  3088  001B82  EFC5  F00D         	goto	u3280
  3089  001B86                     u3281:
  3090  001B86  EF0D  F00E         	goto	l3508
  3091  001B8A                     u3280:
  3092  001B8A  0E01               	movlw	1
  3093  001B8C  6E14               	movwf	___aomod@counter^0,c
  3094  001B8E  EFD3  F00D         	goto	l3498
  3095  001B92                     l3496:
  3096  001B92  90D8               	bcf	status,0,c
  3097  001B94  360C               	rlcf	___aomod@divisor^0,f,c
  3098  001B96  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  3099  001B98  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  3100  001B9A  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  3101  001B9C  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  3102  001B9E  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  3103  001BA0  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  3104  001BA2  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  3105  001BA4  2A14               	incf	___aomod@counter^0,f,c
  3106  001BA6                     l3498:
  3107  001BA6  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  3108  001BA8  EFD8  F00D         	goto	u3291
  3109  001BAC  EFDA  F00D         	goto	u3290
  3110  001BB0                     u3291:
  3111  001BB0  EFC9  F00D         	goto	l3496
  3112  001BB4                     u3290:
  3113  001BB4                     l3500:
  3114  001BB4  500C               	movf	___aomod@divisor^0,w,c
  3115  001BB6  5C04               	subwf	___aomod@dividend^0,w,c
  3116  001BB8  500D               	movf	(___aomod@divisor+1)^0,w,c
  3117  001BBA  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  3118  001BBC  500E               	movf	(___aomod@divisor+2)^0,w,c
  3119  001BBE  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  3120  001BC0  500F               	movf	(___aomod@divisor+3)^0,w,c
  3121  001BC2  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  3122  001BC4  5010               	movf	(___aomod@divisor+4)^0,w,c
  3123  001BC6  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  3124  001BC8  5011               	movf	(___aomod@divisor+5)^0,w,c
  3125  001BCA  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  3126  001BCC  5012               	movf	(___aomod@divisor+6)^0,w,c
  3127  001BCE  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  3128  001BD0  5013               	movf	(___aomod@divisor+7)^0,w,c
  3129  001BD2  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  3130  001BD4  A0D8               	btfss	status,0,c
  3131  001BD6  EFEF  F00D         	goto	u3301
  3132  001BDA  EFF1  F00D         	goto	u3300
  3133  001BDE                     u3301:
  3134  001BDE  EF01  F00E         	goto	l3504
  3135  001BE2                     u3300:
  3136  001BE2  500C               	movf	___aomod@divisor^0,w,c
  3137  001BE4  5E04               	subwf	___aomod@dividend^0,f,c
  3138  001BE6  500D               	movf	(___aomod@divisor+1)^0,w,c
  3139  001BE8  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  3140  001BEA  500E               	movf	(___aomod@divisor+2)^0,w,c
  3141  001BEC  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  3142  001BEE  500F               	movf	(___aomod@divisor+3)^0,w,c
  3143  001BF0  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  3144  001BF2  5010               	movf	(___aomod@divisor+4)^0,w,c
  3145  001BF4  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  3146  001BF6  5011               	movf	(___aomod@divisor+5)^0,w,c
  3147  001BF8  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  3148  001BFA  5012               	movf	(___aomod@divisor+6)^0,w,c
  3149  001BFC  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  3150  001BFE  5013               	movf	(___aomod@divisor+7)^0,w,c
  3151  001C00  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  3152  001C02                     l3504:
  3153  001C02  90D8               	bcf	status,0,c
  3154  001C04  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  3155  001C06  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  3156  001C08  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  3157  001C0A  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  3158  001C0C  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  3159  001C0E  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  3160  001C10  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  3161  001C12  320C               	rrcf	___aomod@divisor^0,f,c
  3162  001C14  2E14               	decfsz	___aomod@counter^0,f,c
  3163  001C16  EFDA  F00D         	goto	l3500
  3164  001C1A                     l3508:
  3165  001C1A  5015               	movf	___aomod@sign^0,w,c
  3166  001C1C  B4D8               	btfsc	status,2,c
  3167  001C1E  EF13  F00E         	goto	u3311
  3168  001C22  EF15  F00E         	goto	u3310
  3169  001C26                     u3311:
  3170  001C26  EF25  F00E         	goto	l3512
  3171  001C2A                     u3310:
  3172  001C2A  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  3173  001C2C  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  3174  001C2E  1E09               	comf	(___aomod@dividend+5)^0,f,c
  3175  001C30  1E08               	comf	(___aomod@dividend+4)^0,f,c
  3176  001C32  1E07               	comf	(___aomod@dividend+3)^0,f,c
  3177  001C34  1E06               	comf	(___aomod@dividend+2)^0,f,c
  3178  001C36  1E05               	comf	(___aomod@dividend+1)^0,f,c
  3179  001C38  6C04               	negf	___aomod@dividend^0,c
  3180  001C3A  0E00               	movlw	0
  3181  001C3C  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  3182  001C3E  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  3183  001C40  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  3184  001C42  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  3185  001C44  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  3186  001C46  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  3187  001C48  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  3188  001C4A                     l3512:
  3189  001C4A  C004  F004         	movff	___aomod@dividend,?___aomod
  3190  001C4E  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  3191  001C52  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  3192  001C56  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  3193  001C5A  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  3194  001C5E  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  3195  001C62  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  3196  001C66  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  3197  001C6A  0012               	return		;funcret
  3198  001C6C                     __end_of___aomod:
  3199                           	callstack 0
  3200                           
  3201 ;; *************** function ___aodiv *****************
  3202 ;; Defined at:
  3203 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  dividend        8    3[COMRAM] long long 
  3206 ;;  divisor         8   11[COMRAM] long long 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  quotient        8   21[COMRAM] long long 
  3209 ;;  sign            1   20[COMRAM] unsigned char 
  3210 ;;  counter         1   19[COMRAM] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  8    3[COMRAM] long long 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3220 ;;      Params:        16       0       0       0       0       0       0       0       0
  3221 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3223 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3224 ;;Total ram usage:       26 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    2
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_dtoa
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text17
  3235  001980                     __ptext17:
  3236                           	callstack 0
  3237  001980                     ___aodiv:
  3238                           	callstack 22
  3239  001980  0E00               	movlw	0
  3240  001982  6E15               	movwf	___aodiv@sign^0,c
  3241  001984  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  3242  001986  EFC9  F00C         	goto	u3190
  3243  00198A  EFC7  F00C         	goto	u3191
  3244  00198E                     u3191:
  3245  00198E  EFDB  F00C         	goto	l3444
  3246  001992                     u3190:
  3247  001992  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  3248  001994  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  3249  001996  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  3250  001998  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  3251  00199A  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  3252  00199C  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  3253  00199E  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  3254  0019A0  6C0C               	negf	___aodiv@divisor^0,c
  3255  0019A2  0E00               	movlw	0
  3256  0019A4  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  3257  0019A6  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  3258  0019A8  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  3259  0019AA  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  3260  0019AC  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  3261  0019AE  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  3262  0019B0  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  3263  0019B2  0E01               	movlw	1
  3264  0019B4  6E15               	movwf	___aodiv@sign^0,c
  3265  0019B6                     l3444:
  3266  0019B6  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  3267  0019B8  EFE2  F00C         	goto	u3200
  3268  0019BC  EFE0  F00C         	goto	u3201
  3269  0019C0                     u3201:
  3270  0019C0  EFF4  F00C         	goto	l3450
  3271  0019C4                     u3200:
  3272  0019C4  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  3273  0019C6  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  3274  0019C8  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  3275  0019CA  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  3276  0019CC  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  3277  0019CE  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  3278  0019D0  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  3279  0019D2  6C04               	negf	___aodiv@dividend^0,c
  3280  0019D4  0E00               	movlw	0
  3281  0019D6  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  3282  0019D8  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  3283  0019DA  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  3284  0019DC  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  3285  0019DE  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  3286  0019E0  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  3287  0019E2  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  3288  0019E4  0E01               	movlw	1
  3289  0019E6  1A15               	xorwf	___aodiv@sign^0,f,c
  3290  0019E8                     l3450:
  3291  0019E8  EE20  F016         	lfsr	2,___aodiv@quotient
  3292  0019EC  0E07               	movlw	7
  3293  0019EE                     u3211:
  3294  0019EE  6ADE               	clrf	postinc2,c
  3295  0019F0  06E8               	decf	wreg,f,c
  3296  0019F2  E2FD               	bc	u3211
  3297  0019F4  500C               	movf	___aodiv@divisor^0,w,c
  3298  0019F6  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  3299  0019F8  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  3300  0019FA  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  3301  0019FC  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  3302  0019FE  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  3303  001A00  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  3304  001A02  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  3305  001A04  B4D8               	btfsc	status,2,c
  3306  001A06  EF07  F00D         	goto	u3221
  3307  001A0A  EF09  F00D         	goto	u3220
  3308  001A0E                     u3221:
  3309  001A0E  EF5B  F00D         	goto	l3472
  3310  001A12                     u3220:
  3311  001A12  0E01               	movlw	1
  3312  001A14  6E14               	movwf	___aodiv@counter^0,c
  3313  001A16  EF17  F00D         	goto	l3458
  3314  001A1A                     l3456:
  3315  001A1A  90D8               	bcf	status,0,c
  3316  001A1C  360C               	rlcf	___aodiv@divisor^0,f,c
  3317  001A1E  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  3318  001A20  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  3319  001A22  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  3320  001A24  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  3321  001A26  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  3322  001A28  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  3323  001A2A  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  3324  001A2C  2A14               	incf	___aodiv@counter^0,f,c
  3325  001A2E                     l3458:
  3326  001A2E  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  3327  001A30  EF1C  F00D         	goto	u3231
  3328  001A34  EF1E  F00D         	goto	u3230
  3329  001A38                     u3231:
  3330  001A38  EF0D  F00D         	goto	l3456
  3331  001A3C                     u3230:
  3332  001A3C                     l3460:
  3333  001A3C  90D8               	bcf	status,0,c
  3334  001A3E  3616               	rlcf	___aodiv@quotient^0,f,c
  3335  001A40  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  3336  001A42  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  3337  001A44  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  3338  001A46  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  3339  001A48  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  3340  001A4A  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  3341  001A4C  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  3342  001A4E  500C               	movf	___aodiv@divisor^0,w,c
  3343  001A50  5C04               	subwf	___aodiv@dividend^0,w,c
  3344  001A52  500D               	movf	(___aodiv@divisor+1)^0,w,c
  3345  001A54  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  3346  001A56  500E               	movf	(___aodiv@divisor+2)^0,w,c
  3347  001A58  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  3348  001A5A  500F               	movf	(___aodiv@divisor+3)^0,w,c
  3349  001A5C  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  3350  001A5E  5010               	movf	(___aodiv@divisor+4)^0,w,c
  3351  001A60  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  3352  001A62  5011               	movf	(___aodiv@divisor+5)^0,w,c
  3353  001A64  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  3354  001A66  5012               	movf	(___aodiv@divisor+6)^0,w,c
  3355  001A68  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  3356  001A6A  5013               	movf	(___aodiv@divisor+7)^0,w,c
  3357  001A6C  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  3358  001A6E  A0D8               	btfss	status,0,c
  3359  001A70  EF3C  F00D         	goto	u3241
  3360  001A74  EF3E  F00D         	goto	u3240
  3361  001A78                     u3241:
  3362  001A78  EF4F  F00D         	goto	l3468
  3363  001A7C                     u3240:
  3364  001A7C  500C               	movf	___aodiv@divisor^0,w,c
  3365  001A7E  5E04               	subwf	___aodiv@dividend^0,f,c
  3366  001A80  500D               	movf	(___aodiv@divisor+1)^0,w,c
  3367  001A82  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  3368  001A84  500E               	movf	(___aodiv@divisor+2)^0,w,c
  3369  001A86  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  3370  001A88  500F               	movf	(___aodiv@divisor+3)^0,w,c
  3371  001A8A  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  3372  001A8C  5010               	movf	(___aodiv@divisor+4)^0,w,c
  3373  001A8E  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  3374  001A90  5011               	movf	(___aodiv@divisor+5)^0,w,c
  3375  001A92  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  3376  001A94  5012               	movf	(___aodiv@divisor+6)^0,w,c
  3377  001A96  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  3378  001A98  5013               	movf	(___aodiv@divisor+7)^0,w,c
  3379  001A9A  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  3380  001A9C  8016               	bsf	___aodiv@quotient^0,0,c
  3381  001A9E                     l3468:
  3382  001A9E  90D8               	bcf	status,0,c
  3383  001AA0  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  3384  001AA2  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  3385  001AA4  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  3386  001AA6  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  3387  001AA8  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  3388  001AAA  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  3389  001AAC  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  3390  001AAE  320C               	rrcf	___aodiv@divisor^0,f,c
  3391  001AB0  2E14               	decfsz	___aodiv@counter^0,f,c
  3392  001AB2  EF1E  F00D         	goto	l3460
  3393  001AB6                     l3472:
  3394  001AB6  5015               	movf	___aodiv@sign^0,w,c
  3395  001AB8  B4D8               	btfsc	status,2,c
  3396  001ABA  EF61  F00D         	goto	u3251
  3397  001ABE  EF63  F00D         	goto	u3250
  3398  001AC2                     u3251:
  3399  001AC2  EF73  F00D         	goto	l3476
  3400  001AC6                     u3250:
  3401  001AC6  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  3402  001AC8  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  3403  001ACA  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  3404  001ACC  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  3405  001ACE  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  3406  001AD0  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  3407  001AD2  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  3408  001AD4  6C16               	negf	___aodiv@quotient^0,c
  3409  001AD6  0E00               	movlw	0
  3410  001AD8  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  3411  001ADA  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  3412  001ADC  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  3413  001ADE  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  3414  001AE0  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  3415  001AE2  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  3416  001AE4  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  3417  001AE6                     l3476:
  3418  001AE6  C016  F004         	movff	___aodiv@quotient,?___aodiv
  3419  001AEA  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  3420  001AEE  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  3421  001AF2  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  3422  001AF6  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  3423  001AFA  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  3424  001AFE  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  3425  001B02  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  3426  001B06  0012               	return		;funcret
  3427  001B08                     __end_of___aodiv:
  3428                           	callstack 0
  3429                           
  3430 ;; *************** function _atoi *****************
  3431 ;; Defined at:
  3432 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3435 ;;		 -> STR_5(5), STR_2(7), STR_1(14), 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  n               2   23[COMRAM] int 
  3438 ;;  neg             2   16[COMRAM] int 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  2   10[COMRAM] int 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3448 ;;      Params:         2       0       0       0       0       0       0       0       0
  3449 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3450 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3451 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3452 ;;Total ram usage:       15 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    3
  3455 ;; This function calls:
  3456 ;;		___wmul
  3457 ;;		_isdigit
  3458 ;;		_isspace
  3459 ;; This function is called by:
  3460 ;;		_vfpfcnvrt
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text18
  3465  0017F0                     __ptext18:
  3466                           	callstack 0
  3467  0017F0                     _atoi:
  3468                           	callstack 22
  3469  0017F0  0E00               	movlw	0
  3470  0017F2  6E19               	movwf	(atoi@n+1)^0,c
  3471  0017F4  0E00               	movlw	0
  3472  0017F6  6E18               	movwf	atoi@n^0,c
  3473  0017F8  0E00               	movlw	0
  3474  0017FA  6E12               	movwf	(atoi@neg+1)^0,c
  3475  0017FC  0E00               	movlw	0
  3476  0017FE  6E11               	movwf	atoi@neg^0,c
  3477  001800  EF04  F00C         	goto	l3624
  3478  001804                     l3622:
  3479  001804  4A0B               	infsnz	atoi@s^0,f,c
  3480  001806  2A0C               	incf	(atoi@s+1)^0,f,c
  3481  001808                     l3624:
  3482  001808  0E01               	movlw	1
  3483  00180A  6E17               	movwf	_atoi$1603^0,c
  3484  00180C  C00B  FFF6         	movff	atoi@s,tblptrl
  3485  001810  C00C  FFF7         	movff	atoi@s+1,tblptrh
  3486  001814                     	if	0	;tblptru may be non-zero
  3487  001814                     	endif
  3488  001814                     	if	0	;tblptru may be non-zero
  3489  001814                     	endif
  3490  001814  0008               	tblrd		*
  3491  001816  50F5               	movf	tablat,w,c
  3492  001818  0A20               	xorlw	32
  3493  00181A  B4D8               	btfsc	status,2,c
  3494  00181C  EF12  F00C         	goto	u3561
  3495  001820  EF14  F00C         	goto	u3560
  3496  001824                     u3561:
  3497  001824  EF31  F00C         	goto	l3632
  3498  001828                     u3560:
  3499  001828  0EF7               	movlw	247
  3500  00182A  6E0D               	movwf	??_atoi^0,c
  3501  00182C  0EFF               	movlw	255
  3502  00182E  6E0E               	movwf	(??_atoi+1)^0,c
  3503  001830  C00B  FFF6         	movff	atoi@s,tblptrl
  3504  001834  C00C  FFF7         	movff	atoi@s+1,tblptrh
  3505  001838                     	if	0	;tblptru may be non-zero
  3506  001838                     	endif
  3507  001838                     	if	0	;tblptru may be non-zero
  3508  001838                     	endif
  3509  001838  0008               	tblrd		*
  3510  00183A  50F5               	movf	tablat,w,c
  3511  00183C  6E0F               	movwf	(??_atoi+2)^0,c
  3512  00183E  6A10               	clrf	(??_atoi+3)^0,c
  3513  001840  500D               	movf	??_atoi^0,w,c
  3514  001842  260F               	addwf	(??_atoi+2)^0,f,c
  3515  001844  500E               	movf	(??_atoi+1)^0,w,c
  3516  001846  2210               	addwfc	(??_atoi+3)^0,f,c
  3517  001848  5010               	movf	(??_atoi+3)^0,w,c
  3518  00184A  E109               	bnz	u3570
  3519  00184C  0E05               	movlw	5
  3520  00184E  5C0F               	subwf	(??_atoi+2)^0,w,c
  3521  001850  A0D8               	btfss	status,0,c
  3522  001852  EF2D  F00C         	goto	u3571
  3523  001856  EF2F  F00C         	goto	u3570
  3524  00185A                     u3571:
  3525  00185A  EF31  F00C         	goto	l3632
  3526  00185E                     u3570:
  3527  00185E  0E00               	movlw	0
  3528  001860  6E17               	movwf	_atoi$1603^0,c
  3529  001862                     l3632:
  3530  001862  C017  F013         	movff	_atoi$1603,_atoi$1602
  3531  001866  6A14               	clrf	(_atoi$1602+1)^0,c
  3532  001868  5013               	movf	_atoi$1602^0,w,c
  3533  00186A  1014               	iorwf	(_atoi$1602+1)^0,w,c
  3534  00186C  A4D8               	btfss	status,2,c
  3535  00186E  EF3B  F00C         	goto	u3581
  3536  001872  EF3D  F00C         	goto	u3580
  3537  001876                     u3581:
  3538  001876  EF02  F00C         	goto	l3622
  3539  00187A                     u3580:
  3540  00187A  EF47  F00C         	goto	l3642
  3541  00187E                     l3638:
  3542  00187E  0E00               	movlw	0
  3543  001880  6E12               	movwf	(atoi@neg+1)^0,c
  3544  001882  0E01               	movlw	1
  3545  001884  6E11               	movwf	atoi@neg^0,c
  3546  001886                     l3640:
  3547  001886  4A0B               	infsnz	atoi@s^0,f,c
  3548  001888  2A0C               	incf	(atoi@s+1)^0,f,c
  3549  00188A  EF7C  F00C         	goto	l3648
  3550  00188E                     l3642:
  3551  00188E  C00B  FFF6         	movff	atoi@s,tblptrl
  3552  001892  C00C  FFF7         	movff	atoi@s+1,tblptrh
  3553  001896                     	if	0	;tblptru may be non-zero
  3554  001896                     	endif
  3555  001896                     	if	0	;tblptru may be non-zero
  3556  001896                     	endif
  3557  001896  0008               	tblrd		*
  3558  001898  50F5               	movf	tablat,w,c
  3559  00189A  6E0D               	movwf	??_atoi^0,c
  3560  00189C  6A0E               	clrf	(??_atoi+1)^0,c
  3561                           
  3562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3563                           ; Switch size 1, requested type "simple"
  3564                           ; Number of cases is 1, Range of values is 0 to 0
  3565                           ; switch strategies available:
  3566                           ; Name         Instructions Cycles
  3567                           ; simple_byte            4     3 (average)
  3568                           ;	Chosen strategy is simple_byte
  3569  00189E  500E               	movf	(??_atoi+1)^0,w,c
  3570  0018A0  0A00               	xorlw	0	; case 0
  3571  0018A2  B4D8               	btfsc	status,2,c
  3572  0018A4  EF56  F00C         	goto	l3896
  3573  0018A8  EF7C  F00C         	goto	l3648
  3574  0018AC                     l3896:
  3575                           
  3576                           ; Switch size 1, requested type "simple"
  3577                           ; Number of cases is 2, Range of values is 43 to 45
  3578                           ; switch strategies available:
  3579                           ; Name         Instructions Cycles
  3580                           ; simple_byte            7     4 (average)
  3581                           ;	Chosen strategy is simple_byte
  3582  0018AC  500D               	movf	??_atoi^0,w,c
  3583  0018AE  0A2B               	xorlw	43	; case 43
  3584  0018B0  B4D8               	btfsc	status,2,c
  3585  0018B2  EF43  F00C         	goto	l3640
  3586  0018B6  0A06               	xorlw	6	; case 45
  3587  0018B8  B4D8               	btfsc	status,2,c
  3588  0018BA  EF3F  F00C         	goto	l3638
  3589  0018BE  EF7C  F00C         	goto	l3648
  3590  0018C2                     l3644:
  3591  0018C2  C018  F004         	movff	atoi@n,___wmul@multiplier
  3592  0018C6  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  3593  0018CA  0E00               	movlw	0
  3594  0018CC  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  3595  0018CE  0E0A               	movlw	10
  3596  0018D0  6E06               	movwf	___wmul@multiplicand^0,c
  3597  0018D2  ECF2  F014         	call	___wmul	;wreg free
  3598  0018D6  C00B  FFF6         	movff	atoi@s,tblptrl
  3599  0018DA  C00C  FFF7         	movff	atoi@s+1,tblptrh
  3600  0018DE                     	if	0	;tblptru may be non-zero
  3601  0018DE                     	endif
  3602  0018DE                     	if	0	;tblptru may be non-zero
  3603  0018DE                     	endif
  3604  0018DE  0008               	tblrd		*
  3605  0018E0  50F5               	movf	tablat,w,c
  3606  0018E2  5E04               	subwf	?___wmul^0,f,c
  3607  0018E4  0E00               	movlw	0
  3608  0018E6  5A05               	subwfb	(?___wmul+1)^0,f,c
  3609  0018E8  0E30               	movlw	48
  3610  0018EA  2404               	addwf	?___wmul^0,w,c
  3611  0018EC  6E18               	movwf	atoi@n^0,c
  3612  0018EE  0E00               	movlw	0
  3613  0018F0  2005               	addwfc	(?___wmul+1)^0,w,c
  3614  0018F2  6E19               	movwf	(atoi@n+1)^0,c
  3615  0018F4  EF43  F00C         	goto	l3640
  3616  0018F8                     l3648:
  3617  0018F8  0ED0               	movlw	208
  3618  0018FA  6E0D               	movwf	??_atoi^0,c
  3619  0018FC  0EFF               	movlw	255
  3620  0018FE  6E0E               	movwf	(??_atoi+1)^0,c
  3621  001900  C00B  FFF6         	movff	atoi@s,tblptrl
  3622  001904  C00C  FFF7         	movff	atoi@s+1,tblptrh
  3623  001908                     	if	0	;tblptru may be non-zero
  3624  001908                     	endif
  3625  001908                     	if	0	;tblptru may be non-zero
  3626  001908                     	endif
  3627  001908  0008               	tblrd		*
  3628  00190A  50F5               	movf	tablat,w,c
  3629  00190C  6E0F               	movwf	(??_atoi+2)^0,c
  3630  00190E  6A10               	clrf	(??_atoi+3)^0,c
  3631  001910  500D               	movf	??_atoi^0,w,c
  3632  001912  260F               	addwf	(??_atoi+2)^0,f,c
  3633  001914  500E               	movf	(??_atoi+1)^0,w,c
  3634  001916  2210               	addwfc	(??_atoi+3)^0,f,c
  3635  001918  5010               	movf	(??_atoi+3)^0,w,c
  3636  00191A  E10A               	bnz	u3590
  3637  00191C  0E0A               	movlw	10
  3638  00191E  5C0F               	subwf	(??_atoi+2)^0,w,c
  3639  001920  A0D8               	btfss	status,0,c
  3640  001922  EF95  F00C         	goto	u3591
  3641  001926  EF98  F00C         	goto	u3590
  3642  00192A                     u3591:
  3643  00192A  0E01               	movlw	1
  3644  00192C  EF99  F00C         	goto	u3600
  3645  001930                     u3590:
  3646  001930  0E00               	movlw	0
  3647  001932                     u3600:
  3648  001932  6E15               	movwf	_atoi$1604^0,c
  3649  001934  6A16               	clrf	(_atoi$1604+1)^0,c
  3650  001936  5015               	movf	_atoi$1604^0,w,c
  3651  001938  1016               	iorwf	(_atoi$1604+1)^0,w,c
  3652  00193A  A4D8               	btfss	status,2,c
  3653  00193C  EFA2  F00C         	goto	u3611
  3654  001940  EFA4  F00C         	goto	u3610
  3655  001944                     u3611:
  3656  001944  EF61  F00C         	goto	l3644
  3657  001948                     u3610:
  3658  001948  5011               	movf	atoi@neg^0,w,c
  3659  00194A  1012               	iorwf	(atoi@neg+1)^0,w,c
  3660  00194C  A4D8               	btfss	status,2,c
  3661  00194E  EFAB  F00C         	goto	u3621
  3662  001952  EFAD  F00C         	goto	u3620
  3663  001956                     u3621:
  3664  001956  EFBB  F00C         	goto	l1066
  3665  00195A                     u3620:
  3666  00195A  C018  F00D         	movff	atoi@n,??_atoi
  3667  00195E  C019  F00E         	movff	atoi@n+1,??_atoi+1
  3668  001962  1E0D               	comf	??_atoi^0,f,c
  3669  001964  1E0E               	comf	(??_atoi+1)^0,f,c
  3670  001966  4A0D               	infsnz	??_atoi^0,f,c
  3671  001968  2A0E               	incf	(??_atoi+1)^0,f,c
  3672  00196A  C00D  F00B         	movff	??_atoi,?_atoi
  3673  00196E  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  3674  001972  EFBF  F00C         	goto	l1069
  3675  001976                     l1066:
  3676  001976  C018  F00B         	movff	atoi@n,?_atoi
  3677  00197A  C019  F00C         	movff	atoi@n+1,?_atoi+1
  3678  00197E                     l1069:
  3679  00197E  0012               	return		;funcret
  3680  001980                     __end_of_atoi:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _isspace *****************
  3684 ;; Defined at:
  3685 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  c               2    3[COMRAM] int 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  2    3[COMRAM] int 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3699 ;;      Params:         2       0       0       0       0       0       0       0       0
  3700 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3701 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3702 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3703 ;;Total ram usage:        7 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    2
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_atoi
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text19
  3714  002796                     __ptext19:
  3715                           	callstack 0
  3716  002796                     _isspace:
  3717                           	callstack 22
  3718  002796  0E01               	movlw	1
  3719  002798  6E0A               	movwf	_isspace$1620^0,c
  3720  00279A  0E20               	movlw	32
  3721  00279C  1804               	xorwf	isspace@c^0,w,c
  3722  00279E  1005               	iorwf	(isspace@c+1)^0,w,c
  3723  0027A0  B4D8               	btfsc	status,2,c
  3724  0027A2  EFD5  F013         	goto	u3391
  3725  0027A6  EFD7  F013         	goto	u3390
  3726  0027AA                     u3391:
  3727  0027AA  EFF0  F013         	goto	l3554
  3728  0027AE                     u3390:
  3729  0027AE  0EF7               	movlw	247
  3730  0027B0  6E06               	movwf	??_isspace^0,c
  3731  0027B2  0EFF               	movlw	255
  3732  0027B4  6E07               	movwf	(??_isspace+1)^0,c
  3733  0027B6  C004  F008         	movff	isspace@c,??_isspace+2
  3734  0027BA  C005  F009         	movff	isspace@c+1,??_isspace+3
  3735  0027BE  5006               	movf	??_isspace^0,w,c
  3736  0027C0  2608               	addwf	(??_isspace+2)^0,f,c
  3737  0027C2  5007               	movf	(??_isspace+1)^0,w,c
  3738  0027C4  2209               	addwfc	(??_isspace+3)^0,f,c
  3739  0027C6  5009               	movf	(??_isspace+3)^0,w,c
  3740  0027C8  E109               	bnz	u3400
  3741  0027CA  0E05               	movlw	5
  3742  0027CC  5C08               	subwf	(??_isspace+2)^0,w,c
  3743  0027CE  A0D8               	btfss	status,0,c
  3744  0027D0  EFEC  F013         	goto	u3401
  3745  0027D4  EFEE  F013         	goto	u3400
  3746  0027D8                     u3401:
  3747  0027D8  EFF0  F013         	goto	l3554
  3748  0027DC                     u3400:
  3749  0027DC  0E00               	movlw	0
  3750  0027DE  6E0A               	movwf	_isspace$1620^0,c
  3751  0027E0                     l3554:
  3752  0027E0  C00A  F004         	movff	_isspace$1620,?_isspace
  3753  0027E4  6A05               	clrf	(?_isspace+1)^0,c
  3754  0027E6  0012               	return		;funcret
  3755  0027E8                     __end_of_isspace:
  3756                           	callstack 0
  3757                           
  3758 ;; *************** function _isdigit *****************
  3759 ;; Defined at:
  3760 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  c               2    3[COMRAM] int 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  2    3[COMRAM] int 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3774 ;;      Params:         2       0       0       0       0       0       0       0       0
  3775 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3776 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3777 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3778 ;;Total ram usage:        6 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    2
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_vfpfcnvrt
  3785 ;;		_atoi
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text20
  3790  002976                     __ptext20:
  3791                           	callstack 0
  3792  002976                     _isdigit:
  3793                           	callstack 23
  3794  002976  0ED0               	movlw	208
  3795  002978  6E06               	movwf	??_isdigit^0,c
  3796  00297A  0EFF               	movlw	255
  3797  00297C  6E07               	movwf	(??_isdigit+1)^0,c
  3798  00297E  C004  F008         	movff	isdigit@c,??_isdigit+2
  3799  002982  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  3800  002986  5006               	movf	??_isdigit^0,w,c
  3801  002988  2608               	addwf	(??_isdigit+2)^0,f,c
  3802  00298A  5007               	movf	(??_isdigit+1)^0,w,c
  3803  00298C  2209               	addwfc	(??_isdigit+3)^0,f,c
  3804  00298E  5009               	movf	(??_isdigit+3)^0,w,c
  3805  002990  E10A               	bnz	u3370
  3806  002992  0E0A               	movlw	10
  3807  002994  5C08               	subwf	(??_isdigit+2)^0,w,c
  3808  002996  A0D8               	btfss	status,0,c
  3809  002998  EFD0  F014         	goto	u3371
  3810  00299C  EFD3  F014         	goto	u3370
  3811  0029A0                     u3371:
  3812  0029A0  0E01               	movlw	1
  3813  0029A2  EFD4  F014         	goto	u3380
  3814  0029A6                     u3370:
  3815  0029A6  0E00               	movlw	0
  3816  0029A8                     u3380:
  3817  0029A8  6E04               	movwf	?_isdigit^0,c
  3818  0029AA  6A05               	clrf	(?_isdigit+1)^0,c
  3819  0029AC  0012               	return		;funcret
  3820  0029AE                     __end_of_isdigit:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function ___wmul *****************
  3824 ;; Defined at:
  3825 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  multiplier      2    3[COMRAM] unsigned int 
  3828 ;;  multiplicand    2    5[COMRAM] unsigned int 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  product         2    7[COMRAM] unsigned int 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2    3[COMRAM] unsigned int 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2, status,0, prodl, prodh
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3840 ;;      Params:         4       0       0       0       0       0       0       0       0
  3841 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3843 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3844 ;;Total ram usage:        6 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    2
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_atoi
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text21
  3855  0029E4                     __ptext21:
  3856                           	callstack 0
  3857  0029E4                     ___wmul:
  3858                           	callstack 22
  3859  0029E4  5004               	movf	___wmul@multiplier^0,w,c
  3860  0029E6  0206               	mulwf	___wmul@multiplicand^0,c
  3861  0029E8  CFF3 F008          	movff	prodl,___wmul@product
  3862  0029EC  CFF4 F009          	movff	prodh,___wmul@product+1
  3863  0029F0  5004               	movf	___wmul@multiplier^0,w,c
  3864  0029F2  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  3865  0029F4  50F3               	movf	243,w,c
  3866  0029F6  2609               	addwf	(___wmul@product+1)^0,f,c
  3867  0029F8  5005               	movf	(___wmul@multiplier+1)^0,w,c
  3868  0029FA  0206               	mulwf	___wmul@multiplicand^0,c
  3869  0029FC  50F3               	movf	243,w,c
  3870  0029FE  2609               	addwf	(___wmul@product+1)^0,f,c
  3871  002A00  C008  F004         	movff	___wmul@product,?___wmul
  3872  002A04  C009  F005         	movff	___wmul@product+1,?___wmul+1
  3873  002A08  0012               	return		;funcret
  3874  002A0A                     __end_of___wmul:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _adcGetValue *****************
  3878 ;; Defined at:
  3879 ;;		line 41 in file "adc.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  PinADC          1    wreg     unsigned char 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  PinADC          1    6[COMRAM] unsigned char 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  2    3[COMRAM] unsigned short 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3893 ;;      Params:         2       0       0       0       0       0       0       0       0
  3894 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3895 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3896 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3897 ;;Total ram usage:        4 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    2
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_appADC
  3904 ;;		_appBat
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text22
  3909  00293A                     __ptext22:
  3910                           	callstack 0
  3911  00293A                     _adcGetValue:
  3912                           	callstack 26
  3913                           
  3914                           ;incstack = 0
  3915                           ;adcGetValue@PinADC stored from wreg
  3916  00293A  6E07               	movwf	adcGetValue@PinADC^0,c
  3917  00293C                     
  3918                           ;adc.c: 41: uint16_t adcGetValue(uint8_t PinADC);adc.c: 42: {;adc.c: 43:     ADCON0bits.
      +                          CHS = PinADC;
  3919  00293C  C007  F006         	movff	adcGetValue@PinADC,??_adcGetValue
  3920  002940  4606               	rlncf	??_adcGetValue^0,f,c
  3921  002942  4606               	rlncf	??_adcGetValue^0,f,c
  3922  002944  50C2               	movf	194,w,c	;volatile
  3923  002946  1806               	xorwf	??_adcGetValue^0,w,c
  3924  002948  0BC3               	andlw	-61
  3925  00294A  1806               	xorwf	??_adcGetValue^0,w,c
  3926  00294C  6EC2               	movwf	194,c	;volatile
  3927  00294E                     
  3928                           ;adc.c: 44:     _delay((unsigned long)((2)*(12000000/4000.0)));
  3929  00294E  0E08               	movlw	8
  3930  002950  6E06               	movwf	??_adcGetValue^0,c
  3931  002952  0ECA               	movlw	202
  3932  002954                     u3857:
  3933  002954  2EE8               	decfsz	wreg,f,c
  3934  002956  D7FE               	bra	u3857
  3935  002958  2E06               	decfsz	??_adcGetValue^0,f,c
  3936  00295A  D7FC               	bra	u3857
  3937  00295C                     
  3938                           ;adc.c: 45:     GO_nDONE = 1;
  3939  00295C  82C2               	bsf	4034,1,c	;volatile
  3940  00295E                     l24:
  3941                           
  3942                           ;adc.c: 46:     while(ADCON0bits.GO_DONE)
  3943  00295E  B2C2               	btfsc	194,1,c	;volatile
  3944  002960  EFB4  F014         	goto	u2321
  3945  002964  EFB6  F014         	goto	u2320
  3946  002968                     u2321:
  3947  002968  EFAF  F014         	goto	l24
  3948  00296C                     u2320:
  3949  00296C                     
  3950                           ;adc.c: 49:     return ADRES;
  3951  00296C  CFC3 F004          	movff	4035,?_adcGetValue	;volatile
  3952  002970  CFC4 F005          	movff	4036,?_adcGetValue+1	;volatile
  3953  002974  0012               	return		;funcret
  3954  002976                     __end_of_adcGetValue:
  3955                           	callstack 0
  3956                           
  3957 ;; *************** function ___xxtofl *****************
  3958 ;; Defined at:
  3959 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  sign            1    wreg     unsigned char 
  3962 ;;  val             4    7[COMRAM] long 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  sign            1   15[COMRAM] unsigned char 
  3965 ;;  arg             4   17[COMRAM] unsigned long 
  3966 ;;  exp             1   16[COMRAM] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  4    7[COMRAM] unsigned char 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3976 ;;      Params:         4       0       0       0       0       0       0       0       0
  3977 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3978 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3979 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3980 ;;Total ram usage:       14 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    2
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_appADC
  3987 ;;		_appBat
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text23
  3992  00163C                     __ptext23:
  3993                           	callstack 0
  3994  00163C                     ___xxtofl:
  3995                           	callstack 26
  3996                           
  3997                           ;incstack = 0
  3998                           ;___xxtofl@sign stored from wreg
  3999  00163C  6E10               	movwf	___xxtofl@sign^0,c
  4000  00163E  5010               	movf	___xxtofl@sign^0,w,c
  4001  001640  B4D8               	btfsc	status,2,c
  4002  001642  EF25  F00B         	goto	u2921
  4003  001646  EF27  F00B         	goto	u2920
  4004  00164A                     u2921:
  4005  00164A  EF49  F00B         	goto	l910
  4006  00164E                     u2920:
  4007  00164E  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  4008  001650  EF2E  F00B         	goto	u2930
  4009  001654  EF2C  F00B         	goto	u2931
  4010  001658                     u2931:
  4011  001658  EF49  F00B         	goto	l910
  4012  00165C                     u2930:
  4013  00165C  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  4014  001660  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  4015  001664  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  4016  001668  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  4017  00166C  1E0C               	comf	??___xxtofl^0,f,c
  4018  00166E  1E0D               	comf	(??___xxtofl+1)^0,f,c
  4019  001670  1E0E               	comf	(??___xxtofl+2)^0,f,c
  4020  001672  1E0F               	comf	(??___xxtofl+3)^0,f,c
  4021  001674  2A0C               	incf	??___xxtofl^0,f,c
  4022  001676  0E00               	movlw	0
  4023  001678  220D               	addwfc	(??___xxtofl+1)^0,f,c
  4024  00167A  220E               	addwfc	(??___xxtofl+2)^0,f,c
  4025  00167C  220F               	addwfc	(??___xxtofl+3)^0,f,c
  4026  00167E  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  4027  001682  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  4028  001686  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  4029  00168A  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  4030  00168E  EF51  F00B         	goto	l3160
  4031  001692                     l910:
  4032  001692  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  4033  001696  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4034  00169A  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4035  00169E  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4036  0016A2                     l3160:
  4037  0016A2  5008               	movf	___xxtofl@val^0,w,c
  4038  0016A4  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  4039  0016A6  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  4040  0016A8  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  4041  0016AA  A4D8               	btfss	status,2,c
  4042  0016AC  EF5A  F00B         	goto	u2941
  4043  0016B0  EF5C  F00B         	goto	u2940
  4044  0016B4                     u2941:
  4045  0016B4  EF66  F00B         	goto	l3166
  4046  0016B8                     u2940:
  4047  0016B8  0E00               	movlw	0
  4048  0016BA  6E08               	movwf	?___xxtofl^0,c
  4049  0016BC  0E00               	movlw	0
  4050  0016BE  6E09               	movwf	(?___xxtofl+1)^0,c
  4051  0016C0  0E00               	movlw	0
  4052  0016C2  6E0A               	movwf	(?___xxtofl+2)^0,c
  4053  0016C4  0E00               	movlw	0
  4054  0016C6  6E0B               	movwf	(?___xxtofl+3)^0,c
  4055  0016C8  EFF7  F00B         	goto	l913
  4056  0016CC                     l3166:
  4057  0016CC  0E96               	movlw	150
  4058  0016CE  6E11               	movwf	___xxtofl@exp^0,c
  4059  0016D0  EF70  F00B         	goto	l3170
  4060  0016D4                     l3168:
  4061  0016D4  2A11               	incf	___xxtofl@exp^0,f,c
  4062  0016D6  90D8               	bcf	status,0,c
  4063  0016D8  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  4064  0016DA  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  4065  0016DC  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  4066  0016DE  3212               	rrcf	___xxtofl@arg^0,f,c
  4067  0016E0                     l3170:
  4068  0016E0  0E00               	movlw	0
  4069  0016E2  1412               	andwf	___xxtofl@arg^0,w,c
  4070  0016E4  6E0C               	movwf	??___xxtofl^0,c
  4071  0016E6  0E00               	movlw	0
  4072  0016E8  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  4073  0016EA  6E0D               	movwf	(??___xxtofl+1)^0,c
  4074  0016EC  0E00               	movlw	0
  4075  0016EE  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  4076  0016F0  6E0E               	movwf	(??___xxtofl+2)^0,c
  4077  0016F2  0EFE               	movlw	254
  4078  0016F4  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  4079  0016F6  6E0F               	movwf	(??___xxtofl+3)^0,c
  4080  0016F8  500C               	movf	??___xxtofl^0,w,c
  4081  0016FA  100D               	iorwf	(??___xxtofl+1)^0,w,c
  4082  0016FC  100E               	iorwf	(??___xxtofl+2)^0,w,c
  4083  0016FE  100F               	iorwf	(??___xxtofl+3)^0,w,c
  4084  001700  A4D8               	btfss	status,2,c
  4085  001702  EF85  F00B         	goto	u2951
  4086  001706  EF87  F00B         	goto	u2950
  4087  00170A                     u2951:
  4088  00170A  EF6A  F00B         	goto	l3168
  4089  00170E                     u2950:
  4090  00170E  EF95  F00B         	goto	l917
  4091  001712                     l3172:
  4092  001712  2A11               	incf	___xxtofl@exp^0,f,c
  4093  001714  0E01               	movlw	1
  4094  001716  2612               	addwf	___xxtofl@arg^0,f,c
  4095  001718  0E00               	movlw	0
  4096  00171A  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  4097  00171C  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  4098  00171E  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  4099  001720  90D8               	bcf	status,0,c
  4100  001722  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  4101  001724  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  4102  001726  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  4103  001728  3212               	rrcf	___xxtofl@arg^0,f,c
  4104  00172A                     l917:
  4105  00172A  0E00               	movlw	0
  4106  00172C  1412               	andwf	___xxtofl@arg^0,w,c
  4107  00172E  6E0C               	movwf	??___xxtofl^0,c
  4108  001730  0E00               	movlw	0
  4109  001732  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  4110  001734  6E0D               	movwf	(??___xxtofl+1)^0,c
  4111  001736  0E00               	movlw	0
  4112  001738  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  4113  00173A  6E0E               	movwf	(??___xxtofl+2)^0,c
  4114  00173C  0EFF               	movlw	255
  4115  00173E  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  4116  001740  6E0F               	movwf	(??___xxtofl+3)^0,c
  4117  001742  500C               	movf	??___xxtofl^0,w,c
  4118  001744  100D               	iorwf	(??___xxtofl+1)^0,w,c
  4119  001746  100E               	iorwf	(??___xxtofl+2)^0,w,c
  4120  001748  100F               	iorwf	(??___xxtofl+3)^0,w,c
  4121  00174A  A4D8               	btfss	status,2,c
  4122  00174C  EFAA  F00B         	goto	u2961
  4123  001750  EFAC  F00B         	goto	u2960
  4124  001754                     u2961:
  4125  001754  EF89  F00B         	goto	l3172
  4126  001758                     u2960:
  4127  001758  EFB4  F00B         	goto	l3180
  4128  00175C                     l3178:
  4129  00175C  0611               	decf	___xxtofl@exp^0,f,c
  4130  00175E  90D8               	bcf	status,0,c
  4131  001760  3612               	rlcf	___xxtofl@arg^0,f,c
  4132  001762  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  4133  001764  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  4134  001766  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  4135  001768                     l3180:
  4136  001768  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  4137  00176A  EFB9  F00B         	goto	u2971
  4138  00176E  EFBB  F00B         	goto	u2970
  4139  001772                     u2971:
  4140  001772  EFC3  F00B         	goto	l924
  4141  001776                     u2970:
  4142  001776  0E02               	movlw	2
  4143  001778  6011               	cpfslt	___xxtofl@exp^0,c
  4144  00177A  EFC1  F00B         	goto	u2981
  4145  00177E  EFC3  F00B         	goto	u2980
  4146  001782                     u2981:
  4147  001782  EFAE  F00B         	goto	l3178
  4148  001786                     u2980:
  4149  001786                     l924:
  4150  001786  B011               	btfsc	___xxtofl@exp^0,0,c
  4151  001788  EFC8  F00B         	goto	u2991
  4152  00178C  EFCA  F00B         	goto	u2990
  4153  001790                     u2991:
  4154  001790  EFCB  F00B         	goto	l3186
  4155  001794                     u2990:
  4156  001794  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  4157  001796                     l3186:
  4158  001796  90D8               	bcf	status,0,c
  4159  001798  3211               	rrcf	___xxtofl@exp^0,f,c
  4160  00179A  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  4161  00179E  6A0D               	clrf	(??___xxtofl+1)^0,c
  4162  0017A0  6A0E               	clrf	(??___xxtofl+2)^0,c
  4163  0017A2  6A0F               	clrf	(??___xxtofl+3)^0,c
  4164  0017A4  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  4165  0017A8  6A0E               	clrf	(??___xxtofl+2)^0,c
  4166  0017AA  6A0D               	clrf	(??___xxtofl+1)^0,c
  4167  0017AC  6A0C               	clrf	??___xxtofl^0,c
  4168  0017AE  500C               	movf	??___xxtofl^0,w,c
  4169  0017B0  1212               	iorwf	___xxtofl@arg^0,f,c
  4170  0017B2  500D               	movf	(??___xxtofl+1)^0,w,c
  4171  0017B4  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  4172  0017B6  500E               	movf	(??___xxtofl+2)^0,w,c
  4173  0017B8  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  4174  0017BA  500F               	movf	(??___xxtofl+3)^0,w,c
  4175  0017BC  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  4176  0017BE  5010               	movf	___xxtofl@sign^0,w,c
  4177  0017C0  B4D8               	btfsc	status,2,c
  4178  0017C2  EFE5  F00B         	goto	u3001
  4179  0017C6  EFE7  F00B         	goto	u3000
  4180  0017CA                     u3001:
  4181  0017CA  EFEF  F00B         	goto	l3196
  4182  0017CE                     u3000:
  4183  0017CE  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  4184  0017D0  EFEE  F00B         	goto	u3010
  4185  0017D4  EFEC  F00B         	goto	u3011
  4186  0017D8                     u3011:
  4187  0017D8  EFEF  F00B         	goto	l3196
  4188  0017DC                     u3010:
  4189  0017DC  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  4190  0017DE                     l3196:
  4191  0017DE  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  4192  0017E2  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  4193  0017E6  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  4194  0017EA  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  4195  0017EE                     l913:
  4196  0017EE  0012               	return		;funcret
  4197  0017F0                     __end_of___xxtofl:
  4198                           	callstack 0
  4199                           
  4200 ;; *************** function ___fltol *****************
  4201 ;; Defined at:
  4202 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  f1              4   53[COMRAM] unsigned char 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  exp1            1   62[COMRAM] unsigned char 
  4207 ;;  sign1           1   61[COMRAM] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  4   53[COMRAM] long 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4217 ;;      Params:         4       0       0       0       0       0       0       0       0
  4218 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4219 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4220 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4221 ;;Total ram usage:       10 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    2
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_appADC
  4228 ;;		_appBat
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text24
  4233  002122                     __ptext24:
  4234                           	callstack 0
  4235  002122                     ___fltol:
  4236                           	callstack 26
  4237  002122  3438               	rlcf	(___fltol@f1+2)^0,w,c
  4238  002124  3439               	rlcf	(___fltol@f1+3)^0,w,c
  4239  002126  6E3F               	movwf	___fltol@exp1^0,c
  4240  002128  503F               	movf	___fltol@exp1^0,w,c
  4241  00212A  A4D8               	btfss	status,2,c
  4242  00212C  EF9A  F010         	goto	u2851
  4243  002130  EF9C  F010         	goto	u2850
  4244  002134                     u2851:
  4245  002134  EFA6  F010         	goto	l3116
  4246  002138                     u2850:
  4247  002138                     l3112:
  4248  002138  0E00               	movlw	0
  4249  00213A  6E36               	movwf	?___fltol^0,c
  4250  00213C  0E00               	movlw	0
  4251  00213E  6E37               	movwf	(?___fltol+1)^0,c
  4252  002140  0E00               	movlw	0
  4253  002142  6E38               	movwf	(?___fltol+2)^0,c
  4254  002144  0E00               	movlw	0
  4255  002146  6E39               	movwf	(?___fltol+3)^0,c
  4256  002148  EF13  F011         	goto	l552
  4257  00214C                     l3116:
  4258  00214C  C036  F03A         	movff	___fltol@f1,??___fltol
  4259  002150  C037  F03B         	movff	___fltol@f1+1,??___fltol+1
  4260  002154  C038  F03C         	movff	___fltol@f1+2,??___fltol+2
  4261  002158  C039  F03D         	movff	___fltol@f1+3,??___fltol+3
  4262  00215C  0E20               	movlw	32
  4263  00215E  EFB6  F010         	goto	u2860
  4264  002162                     u2865:
  4265  002162  90D8               	bcf	status,0,c
  4266  002164  323D               	rrcf	(??___fltol+3)^0,f,c
  4267  002166  323C               	rrcf	(??___fltol+2)^0,f,c
  4268  002168  323B               	rrcf	(??___fltol+1)^0,f,c
  4269  00216A  323A               	rrcf	??___fltol^0,f,c
  4270  00216C                     u2860:
  4271  00216C  2EE8               	decfsz	wreg,f,c
  4272  00216E  EFB1  F010         	goto	u2865
  4273  002172  503A               	movf	??___fltol^0,w,c
  4274  002174  6E3E               	movwf	___fltol@sign1^0,c
  4275  002176  8E38               	bsf	(___fltol@f1+2)^0,7,c
  4276  002178  0EFF               	movlw	255
  4277  00217A  1636               	andwf	___fltol@f1^0,f,c
  4278  00217C  0EFF               	movlw	255
  4279  00217E  1637               	andwf	(___fltol@f1+1)^0,f,c
  4280  002180  0EFF               	movlw	255
  4281  002182  1638               	andwf	(___fltol@f1+2)^0,f,c
  4282  002184  0E00               	movlw	0
  4283  002186  1639               	andwf	(___fltol@f1+3)^0,f,c
  4284  002188  0E96               	movlw	150
  4285  00218A  5E3F               	subwf	___fltol@exp1^0,f,c
  4286  00218C  BE3F               	btfsc	___fltol@exp1^0,7,c
  4287  00218E  EFCD  F010         	goto	u2870
  4288  002192  EFCB  F010         	goto	u2871
  4289  002196                     u2871:
  4290  002196  EFE3  F010         	goto	l3136
  4291  00219A                     u2870:
  4292  00219A  503F               	movf	___fltol@exp1^0,w,c
  4293  00219C  0A80               	xorlw	128
  4294  00219E  0F97               	addlw	151
  4295  0021A0  B0D8               	btfsc	status,0,c
  4296  0021A2  EFD5  F010         	goto	u2881
  4297  0021A6  EFD7  F010         	goto	u2880
  4298  0021AA                     u2881:
  4299  0021AA  EFD9  F010         	goto	l3132
  4300  0021AE                     u2880:
  4301  0021AE  EF9C  F010         	goto	l3112
  4302  0021B2                     l3132:
  4303  0021B2  90D8               	bcf	status,0,c
  4304  0021B4  3239               	rrcf	(___fltol@f1+3)^0,f,c
  4305  0021B6  3238               	rrcf	(___fltol@f1+2)^0,f,c
  4306  0021B8  3237               	rrcf	(___fltol@f1+1)^0,f,c
  4307  0021BA  3236               	rrcf	___fltol@f1^0,f,c
  4308  0021BC  3E3F               	incfsz	___fltol@exp1^0,f,c
  4309  0021BE  EFD9  F010         	goto	l3132
  4310  0021C2  EFFB  F010         	goto	l3146
  4311  0021C6                     l3136:
  4312  0021C6  0E1F               	movlw	31
  4313  0021C8  643F               	cpfsgt	___fltol@exp1^0,c
  4314  0021CA  EFE9  F010         	goto	u2891
  4315  0021CE  EFEB  F010         	goto	u2890
  4316  0021D2                     u2891:
  4317  0021D2  EFF3  F010         	goto	l3144
  4318  0021D6                     u2890:
  4319  0021D6  EF9C  F010         	goto	l3112
  4320  0021DA                     l3142:
  4321  0021DA  90D8               	bcf	status,0,c
  4322  0021DC  3636               	rlcf	___fltol@f1^0,f,c
  4323  0021DE  3637               	rlcf	(___fltol@f1+1)^0,f,c
  4324  0021E0  3638               	rlcf	(___fltol@f1+2)^0,f,c
  4325  0021E2  3639               	rlcf	(___fltol@f1+3)^0,f,c
  4326  0021E4  063F               	decf	___fltol@exp1^0,f,c
  4327  0021E6                     l3144:
  4328  0021E6  503F               	movf	___fltol@exp1^0,w,c
  4329  0021E8  A4D8               	btfss	status,2,c
  4330  0021EA  EFF9  F010         	goto	u2901
  4331  0021EE  EFFB  F010         	goto	u2900
  4332  0021F2                     u2901:
  4333  0021F2  EFED  F010         	goto	l3142
  4334  0021F6                     u2900:
  4335  0021F6                     l3146:
  4336  0021F6  503E               	movf	___fltol@sign1^0,w,c
  4337  0021F8  B4D8               	btfsc	status,2,c
  4338  0021FA  EF01  F011         	goto	u2911
  4339  0021FE  EF03  F011         	goto	u2910
  4340  002202                     u2911:
  4341  002202  EF0B  F011         	goto	l3150
  4342  002206                     u2910:
  4343  002206  1E39               	comf	(___fltol@f1+3)^0,f,c
  4344  002208  1E38               	comf	(___fltol@f1+2)^0,f,c
  4345  00220A  1E37               	comf	(___fltol@f1+1)^0,f,c
  4346  00220C  6C36               	negf	___fltol@f1^0,c
  4347  00220E  0E00               	movlw	0
  4348  002210  2237               	addwfc	(___fltol@f1+1)^0,f,c
  4349  002212  2238               	addwfc	(___fltol@f1+2)^0,f,c
  4350  002214  2239               	addwfc	(___fltol@f1+3)^0,f,c
  4351  002216                     l3150:
  4352  002216  C036  F036         	movff	___fltol@f1,?___fltol
  4353  00221A  C037  F037         	movff	___fltol@f1+1,?___fltol+1
  4354  00221E  C038  F038         	movff	___fltol@f1+2,?___fltol+2
  4355  002222  C039  F039         	movff	___fltol@f1+3,?___fltol+3
  4356  002226                     l552:
  4357  002226  0012               	return		;funcret
  4358  002228                     __end_of___fltol:
  4359                           	callstack 0
  4360                           
  4361 ;; *************** function ___flmul *****************
  4362 ;; Defined at:
  4363 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  b               4    3[COMRAM] long 
  4366 ;;  a               4    7[COMRAM] long 
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  prod            4   22[COMRAM] struct .
  4369 ;;  grs             4   16[COMRAM] unsigned long 
  4370 ;;  temp            2   26[COMRAM] struct .
  4371 ;;  bexp            1   21[COMRAM] unsigned char 
  4372 ;;  aexp            1   20[COMRAM] unsigned char 
  4373 ;;  sign            1   15[COMRAM] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  4    3[COMRAM] unsigned char 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0, prodl, prodh
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4383 ;;      Params:         8       0       0       0       0       0       0       0       0
  4384 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4385 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4386 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4387 ;;Total ram usage:       25 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    2
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_appADC
  4394 ;;		_appBat
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text25
  4399  00082E                     __ptext25:
  4400                           	callstack 0
  4401  00082E                     ___flmul:
  4402                           	callstack 26
  4403  00082E  5007               	movf	(___flmul@b+3)^0,w,c
  4404  000830  0B80               	andlw	128
  4405  000832  6E10               	movwf	___flmul@sign^0,c
  4406  000834  5007               	movf	(___flmul@b+3)^0,w,c
  4407  000836  2407               	addwf	(___flmul@b+3)^0,w,c
  4408  000838  6E16               	movwf	___flmul@bexp^0,c
  4409  00083A  AE06               	btfss	(___flmul@b+2)^0,7,c
  4410  00083C  EF22  F004         	goto	u2601
  4411  000840  EF24  F004         	goto	u2600
  4412  000844                     u2601:
  4413  000844  EF25  F004         	goto	l2950
  4414  000848                     u2600:
  4415  000848  8016               	bsf	___flmul@bexp^0,0,c
  4416  00084A                     l2950:
  4417  00084A  5016               	movf	___flmul@bexp^0,w,c
  4418  00084C  B4D8               	btfsc	status,2,c
  4419  00084E  EF2B  F004         	goto	u2611
  4420  000852  EF2D  F004         	goto	u2610
  4421  000856                     u2611:
  4422  000856  EF40  F004         	goto	l2958
  4423  00085A                     u2610:
  4424  00085A  2816               	incf	___flmul@bexp^0,w,c
  4425  00085C  A4D8               	btfss	status,2,c
  4426  00085E  EF33  F004         	goto	u2621
  4427  000862  EF35  F004         	goto	u2620
  4428  000866                     u2621:
  4429  000866  EF3D  F004         	goto	l2956
  4430  00086A                     u2620:
  4431  00086A  0E00               	movlw	0
  4432  00086C  6E04               	movwf	___flmul@b^0,c
  4433  00086E  0E00               	movlw	0
  4434  000870  6E05               	movwf	(___flmul@b+1)^0,c
  4435  000872  0E00               	movlw	0
  4436  000874  6E06               	movwf	(___flmul@b+2)^0,c
  4437  000876  0E00               	movlw	0
  4438  000878  6E07               	movwf	(___flmul@b+3)^0,c
  4439  00087A                     l2956:
  4440  00087A  8E06               	bsf	(___flmul@b+2)^0,7,c
  4441  00087C  EF48  F004         	goto	l2960
  4442  000880                     l2958:
  4443  000880  0E00               	movlw	0
  4444  000882  6E04               	movwf	___flmul@b^0,c
  4445  000884  0E00               	movlw	0
  4446  000886  6E05               	movwf	(___flmul@b+1)^0,c
  4447  000888  0E00               	movlw	0
  4448  00088A  6E06               	movwf	(___flmul@b+2)^0,c
  4449  00088C  0E00               	movlw	0
  4450  00088E  6E07               	movwf	(___flmul@b+3)^0,c
  4451  000890                     l2960:
  4452  000890  500B               	movf	(___flmul@a+3)^0,w,c
  4453  000892  0B80               	andlw	128
  4454  000894  1A10               	xorwf	___flmul@sign^0,f,c
  4455  000896  500B               	movf	(___flmul@a+3)^0,w,c
  4456  000898  240B               	addwf	(___flmul@a+3)^0,w,c
  4457  00089A  6E15               	movwf	___flmul@aexp^0,c
  4458  00089C  AE0A               	btfss	(___flmul@a+2)^0,7,c
  4459  00089E  EF53  F004         	goto	u2631
  4460  0008A2  EF55  F004         	goto	u2630
  4461  0008A6                     u2631:
  4462  0008A6  EF56  F004         	goto	l2968
  4463  0008AA                     u2630:
  4464  0008AA  8015               	bsf	___flmul@aexp^0,0,c
  4465  0008AC                     l2968:
  4466  0008AC  5015               	movf	___flmul@aexp^0,w,c
  4467  0008AE  B4D8               	btfsc	status,2,c
  4468  0008B0  EF5C  F004         	goto	u2641
  4469  0008B4  EF5E  F004         	goto	u2640
  4470  0008B8                     u2641:
  4471  0008B8  EF71  F004         	goto	l2976
  4472  0008BC                     u2640:
  4473  0008BC  2815               	incf	___flmul@aexp^0,w,c
  4474  0008BE  A4D8               	btfss	status,2,c
  4475  0008C0  EF64  F004         	goto	u2651
  4476  0008C4  EF66  F004         	goto	u2650
  4477  0008C8                     u2651:
  4478  0008C8  EF6E  F004         	goto	l2974
  4479  0008CC                     u2650:
  4480  0008CC  0E00               	movlw	0
  4481  0008CE  6E08               	movwf	___flmul@a^0,c
  4482  0008D0  0E00               	movlw	0
  4483  0008D2  6E09               	movwf	(___flmul@a+1)^0,c
  4484  0008D4  0E00               	movlw	0
  4485  0008D6  6E0A               	movwf	(___flmul@a+2)^0,c
  4486  0008D8  0E00               	movlw	0
  4487  0008DA  6E0B               	movwf	(___flmul@a+3)^0,c
  4488  0008DC                     l2974:
  4489  0008DC  8E0A               	bsf	(___flmul@a+2)^0,7,c
  4490  0008DE  EF79  F004         	goto	l869
  4491  0008E2                     l2976:
  4492  0008E2  0E00               	movlw	0
  4493  0008E4  6E08               	movwf	___flmul@a^0,c
  4494  0008E6  0E00               	movlw	0
  4495  0008E8  6E09               	movwf	(___flmul@a+1)^0,c
  4496  0008EA  0E00               	movlw	0
  4497  0008EC  6E0A               	movwf	(___flmul@a+2)^0,c
  4498  0008EE  0E00               	movlw	0
  4499  0008F0  6E0B               	movwf	(___flmul@a+3)^0,c
  4500  0008F2                     l869:
  4501  0008F2  5015               	movf	___flmul@aexp^0,w,c
  4502  0008F4  B4D8               	btfsc	status,2,c
  4503  0008F6  EF7F  F004         	goto	u2661
  4504  0008FA  EF81  F004         	goto	u2660
  4505  0008FE                     u2661:
  4506  0008FE  EF89  F004         	goto	l2980
  4507  000902                     u2660:
  4508  000902  5016               	movf	___flmul@bexp^0,w,c
  4509  000904  A4D8               	btfss	status,2,c
  4510  000906  EF87  F004         	goto	u2671
  4511  00090A  EF89  F004         	goto	u2670
  4512  00090E                     u2671:
  4513  00090E  EF93  F004         	goto	l2984
  4514  000912                     u2670:
  4515  000912                     l2980:
  4516  000912  0E00               	movlw	0
  4517  000914  6E04               	movwf	?___flmul^0,c
  4518  000916  0E00               	movlw	0
  4519  000918  6E05               	movwf	(?___flmul+1)^0,c
  4520  00091A  0E00               	movlw	0
  4521  00091C  6E06               	movwf	(?___flmul+2)^0,c
  4522  00091E  0E00               	movlw	0
  4523  000920  6E07               	movwf	(?___flmul+3)^0,c
  4524  000922  EF2B  F006         	goto	l873
  4525  000926                     l2984:
  4526  000926  500A               	movf	(___flmul@a+2)^0,w,c
  4527  000928  0204               	mulwf	___flmul@b^0,c
  4528  00092A  CFF3 F01B          	movff	prodl,___flmul@temp
  4529  00092E  CFF4 F01C          	movff	prodh,___flmul@temp+1
  4530  000932  501B               	movf	___flmul@temp^0,w,c
  4531  000934  6E11               	movwf	___flmul@grs^0,c
  4532  000936  6A12               	clrf	(___flmul@grs+1)^0,c
  4533  000938  6A13               	clrf	(___flmul@grs+2)^0,c
  4534  00093A  6A14               	clrf	(___flmul@grs+3)^0,c
  4535  00093C  501C               	movf	(___flmul@temp+1)^0,w,c
  4536  00093E  6E17               	movwf	___flmul@prod^0,c
  4537  000940  6A18               	clrf	(___flmul@prod+1)^0,c
  4538  000942  6A19               	clrf	(___flmul@prod+2)^0,c
  4539  000944  6A1A               	clrf	(___flmul@prod+3)^0,c
  4540  000946  5009               	movf	(___flmul@a+1)^0,w,c
  4541  000948  0205               	mulwf	(___flmul@b+1)^0,c
  4542  00094A  CFF3 F01B          	movff	prodl,___flmul@temp
  4543  00094E  CFF4 F01C          	movff	prodh,___flmul@temp+1
  4544  000952  501B               	movf	___flmul@temp^0,w,c
  4545  000954  2611               	addwf	___flmul@grs^0,f,c
  4546  000956  0E00               	movlw	0
  4547  000958  2212               	addwfc	(___flmul@grs+1)^0,f,c
  4548  00095A  2213               	addwfc	(___flmul@grs+2)^0,f,c
  4549  00095C  2214               	addwfc	(___flmul@grs+3)^0,f,c
  4550  00095E  501C               	movf	(___flmul@temp+1)^0,w,c
  4551  000960  2617               	addwf	___flmul@prod^0,f,c
  4552  000962  0E00               	movlw	0
  4553  000964  2218               	addwfc	(___flmul@prod+1)^0,f,c
  4554  000966  2219               	addwfc	(___flmul@prod+2)^0,f,c
  4555  000968  221A               	addwfc	(___flmul@prod+3)^0,f,c
  4556  00096A  5008               	movf	___flmul@a^0,w,c
  4557  00096C  0206               	mulwf	(___flmul@b+2)^0,c
  4558  00096E  CFF3 F01B          	movff	prodl,___flmul@temp
  4559  000972  CFF4 F01C          	movff	prodh,___flmul@temp+1
  4560  000976  501B               	movf	___flmul@temp^0,w,c
  4561  000978  2611               	addwf	___flmul@grs^0,f,c
  4562  00097A  0E00               	movlw	0
  4563  00097C  2212               	addwfc	(___flmul@grs+1)^0,f,c
  4564  00097E  2213               	addwfc	(___flmul@grs+2)^0,f,c
  4565  000980  2214               	addwfc	(___flmul@grs+3)^0,f,c
  4566  000982  501C               	movf	(___flmul@temp+1)^0,w,c
  4567  000984  2617               	addwf	___flmul@prod^0,f,c
  4568  000986  0E00               	movlw	0
  4569  000988  2218               	addwfc	(___flmul@prod+1)^0,f,c
  4570  00098A  2219               	addwfc	(___flmul@prod+2)^0,f,c
  4571  00098C  221A               	addwfc	(___flmul@prod+3)^0,f,c
  4572  00098E  C013  F014         	movff	___flmul@grs+2,___flmul@grs+3
  4573  000992  C012  F013         	movff	___flmul@grs+1,___flmul@grs+2
  4574  000996  C011  F012         	movff	___flmul@grs,___flmul@grs+1
  4575  00099A  6A11               	clrf	___flmul@grs^0,c
  4576  00099C  5008               	movf	___flmul@a^0,w,c
  4577  00099E  0205               	mulwf	(___flmul@b+1)^0,c
  4578  0009A0  CFF3 F01B          	movff	prodl,___flmul@temp
  4579  0009A4  CFF4 F01C          	movff	prodh,___flmul@temp+1
  4580  0009A8  501B               	movf	___flmul@temp^0,w,c
  4581  0009AA  2611               	addwf	___flmul@grs^0,f,c
  4582  0009AC  501C               	movf	(___flmul@temp+1)^0,w,c
  4583  0009AE  2212               	addwfc	(___flmul@grs+1)^0,f,c
  4584  0009B0  0E00               	movlw	0
  4585  0009B2  2213               	addwfc	(___flmul@grs+2)^0,f,c
  4586  0009B4  0E00               	movlw	0
  4587  0009B6  2214               	addwfc	(___flmul@grs+3)^0,f,c
  4588  0009B8  5009               	movf	(___flmul@a+1)^0,w,c
  4589  0009BA  0204               	mulwf	___flmul@b^0,c
  4590  0009BC  CFF3 F01B          	movff	prodl,___flmul@temp
  4591  0009C0  CFF4 F01C          	movff	prodh,___flmul@temp+1
  4592  0009C4  501B               	movf	___flmul@temp^0,w,c
  4593  0009C6  2611               	addwf	___flmul@grs^0,f,c
  4594  0009C8  501C               	movf	(___flmul@temp+1)^0,w,c
  4595  0009CA  2212               	addwfc	(___flmul@grs+1)^0,f,c
  4596  0009CC  0E00               	movlw	0
  4597  0009CE  2213               	addwfc	(___flmul@grs+2)^0,f,c
  4598  0009D0  0E00               	movlw	0
  4599  0009D2  2214               	addwfc	(___flmul@grs+3)^0,f,c
  4600  0009D4  C013  F014         	movff	___flmul@grs+2,___flmul@grs+3
  4601  0009D8  C012  F013         	movff	___flmul@grs+1,___flmul@grs+2
  4602  0009DC  C011  F012         	movff	___flmul@grs,___flmul@grs+1
  4603  0009E0  6A11               	clrf	___flmul@grs^0,c
  4604  0009E2  5008               	movf	___flmul@a^0,w,c
  4605  0009E4  0204               	mulwf	___flmul@b^0,c
  4606  0009E6  CFF3 F01B          	movff	prodl,___flmul@temp
  4607  0009EA  CFF4 F01C          	movff	prodh,___flmul@temp+1
  4608  0009EE  501B               	movf	___flmul@temp^0,w,c
  4609  0009F0  2611               	addwf	___flmul@grs^0,f,c
  4610  0009F2  501C               	movf	(___flmul@temp+1)^0,w,c
  4611  0009F4  2212               	addwfc	(___flmul@grs+1)^0,f,c
  4612  0009F6  0E00               	movlw	0
  4613  0009F8  2213               	addwfc	(___flmul@grs+2)^0,f,c
  4614  0009FA  0E00               	movlw	0
  4615  0009FC  2214               	addwfc	(___flmul@grs+3)^0,f,c
  4616  0009FE  500A               	movf	(___flmul@a+2)^0,w,c
  4617  000A00  0205               	mulwf	(___flmul@b+1)^0,c
  4618  000A02  CFF3 F01B          	movff	prodl,___flmul@temp
  4619  000A06  CFF4 F01C          	movff	prodh,___flmul@temp+1
  4620  000A0A  501B               	movf	___flmul@temp^0,w,c
  4621  000A0C  2617               	addwf	___flmul@prod^0,f,c
  4622  000A0E  501C               	movf	(___flmul@temp+1)^0,w,c
  4623  000A10  2218               	addwfc	(___flmul@prod+1)^0,f,c
  4624  000A12  0E00               	movlw	0
  4625  000A14  2219               	addwfc	(___flmul@prod+2)^0,f,c
  4626  000A16  0E00               	movlw	0
  4627  000A18  221A               	addwfc	(___flmul@prod+3)^0,f,c
  4628  000A1A  5009               	movf	(___flmul@a+1)^0,w,c
  4629  000A1C  0206               	mulwf	(___flmul@b+2)^0,c
  4630  000A1E  CFF3 F01B          	movff	prodl,___flmul@temp
  4631  000A22  CFF4 F01C          	movff	prodh,___flmul@temp+1
  4632  000A26  501B               	movf	___flmul@temp^0,w,c
  4633  000A28  2617               	addwf	___flmul@prod^0,f,c
  4634  000A2A  501C               	movf	(___flmul@temp+1)^0,w,c
  4635  000A2C  2218               	addwfc	(___flmul@prod+1)^0,f,c
  4636  000A2E  0E00               	movlw	0
  4637  000A30  2219               	addwfc	(___flmul@prod+2)^0,f,c
  4638  000A32  0E00               	movlw	0
  4639  000A34  221A               	addwfc	(___flmul@prod+3)^0,f,c
  4640  000A36  500A               	movf	(___flmul@a+2)^0,w,c
  4641  000A38  0206               	mulwf	(___flmul@b+2)^0,c
  4642  000A3A  CFF3 F01B          	movff	prodl,___flmul@temp
  4643  000A3E  CFF4 F01C          	movff	prodh,___flmul@temp+1
  4644  000A42  501B               	movf	___flmul@temp^0,w,c
  4645  000A44  6E0C               	movwf	??___flmul^0,c
  4646  000A46  501C               	movf	(___flmul@temp+1)^0,w,c
  4647  000A48  6E0D               	movwf	(??___flmul+1)^0,c
  4648  000A4A  6A0E               	clrf	(??___flmul+2)^0,c
  4649  000A4C  6A0F               	clrf	(??___flmul+3)^0,c
  4650  000A4E  C00E  F00F         	movff	??___flmul+2,??___flmul+3
  4651  000A52  C00D  F00E         	movff	??___flmul+1,??___flmul+2
  4652  000A56  C00C  F00D         	movff	??___flmul,??___flmul+1
  4653  000A5A  6A0C               	clrf	??___flmul^0,c
  4654  000A5C  500C               	movf	??___flmul^0,w,c
  4655  000A5E  2617               	addwf	___flmul@prod^0,f,c
  4656  000A60  500D               	movf	(??___flmul+1)^0,w,c
  4657  000A62  2218               	addwfc	(___flmul@prod+1)^0,f,c
  4658  000A64  500E               	movf	(??___flmul+2)^0,w,c
  4659  000A66  2219               	addwfc	(___flmul@prod+2)^0,f,c
  4660  000A68  500F               	movf	(??___flmul+3)^0,w,c
  4661  000A6A  221A               	addwfc	(___flmul@prod+3)^0,f,c
  4662  000A6C  C011  F00C         	movff	___flmul@grs,??___flmul
  4663  000A70  C012  F00D         	movff	___flmul@grs+1,??___flmul+1
  4664  000A74  C013  F00E         	movff	___flmul@grs+2,??___flmul+2
  4665  000A78  C014  F00F         	movff	___flmul@grs+3,??___flmul+3
  4666  000A7C  0E19               	movlw	25
  4667  000A7E  EF46  F005         	goto	u2680
  4668  000A82                     u2685:
  4669  000A82  90D8               	bcf	status,0,c
  4670  000A84  320F               	rrcf	(??___flmul+3)^0,f,c
  4671  000A86  320E               	rrcf	(??___flmul+2)^0,f,c
  4672  000A88  320D               	rrcf	(??___flmul+1)^0,f,c
  4673  000A8A  320C               	rrcf	??___flmul^0,f,c
  4674  000A8C                     u2680:
  4675  000A8C  2EE8               	decfsz	wreg,f,c
  4676  000A8E  EF41  F005         	goto	u2685
  4677  000A92  500C               	movf	??___flmul^0,w,c
  4678  000A94  2617               	addwf	___flmul@prod^0,f,c
  4679  000A96  500D               	movf	(??___flmul+1)^0,w,c
  4680  000A98  2218               	addwfc	(___flmul@prod+1)^0,f,c
  4681  000A9A  500E               	movf	(??___flmul+2)^0,w,c
  4682  000A9C  2219               	addwfc	(___flmul@prod+2)^0,f,c
  4683  000A9E  500F               	movf	(??___flmul+3)^0,w,c
  4684  000AA0  221A               	addwfc	(___flmul@prod+3)^0,f,c
  4685  000AA2  C013  F014         	movff	___flmul@grs+2,___flmul@grs+3
  4686  000AA6  C012  F013         	movff	___flmul@grs+1,___flmul@grs+2
  4687  000AAA  C011  F012         	movff	___flmul@grs,___flmul@grs+1
  4688  000AAE  6A11               	clrf	___flmul@grs^0,c
  4689  000AB0  5015               	movf	___flmul@aexp^0,w,c
  4690  000AB2  C016  F00C         	movff	___flmul@bexp,??___flmul
  4691  000AB6  6A0D               	clrf	(??___flmul+1)^0,c
  4692  000AB8  260C               	addwf	??___flmul^0,f,c
  4693  000ABA  0E00               	movlw	0
  4694  000ABC  220D               	addwfc	(??___flmul+1)^0,f,c
  4695  000ABE  0E82               	movlw	130
  4696  000AC0  240C               	addwf	??___flmul^0,w,c
  4697  000AC2  6E1B               	movwf	___flmul@temp^0,c
  4698  000AC4  0EFF               	movlw	255
  4699  000AC6  200D               	addwfc	(??___flmul+1)^0,w,c
  4700  000AC8  6E1C               	movwf	(___flmul@temp+1)^0,c
  4701  000ACA  EF7C  F005         	goto	l3032
  4702  000ACE                     l3026:
  4703  000ACE  90D8               	bcf	status,0,c
  4704  000AD0  3617               	rlcf	___flmul@prod^0,f,c
  4705  000AD2  3618               	rlcf	(___flmul@prod+1)^0,f,c
  4706  000AD4  3619               	rlcf	(___flmul@prod+2)^0,f,c
  4707  000AD6  361A               	rlcf	(___flmul@prod+3)^0,f,c
  4708  000AD8  AE14               	btfss	(___flmul@grs+3)^0,7,c
  4709  000ADA  EF71  F005         	goto	u2691
  4710  000ADE  EF73  F005         	goto	u2690
  4711  000AE2                     u2691:
  4712  000AE2  EF74  F005         	goto	l876
  4713  000AE6                     u2690:
  4714  000AE6  8017               	bsf	___flmul@prod^0,0,c
  4715  000AE8                     l876:
  4716  000AE8  90D8               	bcf	status,0,c
  4717  000AEA  3611               	rlcf	___flmul@grs^0,f,c
  4718  000AEC  3612               	rlcf	(___flmul@grs+1)^0,f,c
  4719  000AEE  3613               	rlcf	(___flmul@grs+2)^0,f,c
  4720  000AF0  3614               	rlcf	(___flmul@grs+3)^0,f,c
  4721  000AF2  061B               	decf	___flmul@temp^0,f,c
  4722  000AF4  A0D8               	btfss	status,0,c
  4723  000AF6  061C               	decf	(___flmul@temp+1)^0,f,c
  4724  000AF8                     l3032:
  4725  000AF8  AE19               	btfss	(___flmul@prod+2)^0,7,c
  4726  000AFA  EF81  F005         	goto	u2701
  4727  000AFE  EF83  F005         	goto	u2700
  4728  000B02                     u2701:
  4729  000B02  EF67  F005         	goto	l3026
  4730  000B06                     u2700:
  4731  000B06  0E00               	movlw	0
  4732  000B08  6E15               	movwf	___flmul@aexp^0,c
  4733  000B0A  AE14               	btfss	(___flmul@grs+3)^0,7,c
  4734  000B0C  EF8A  F005         	goto	u2711
  4735  000B10  EF8C  F005         	goto	u2710
  4736  000B14                     u2711:
  4737  000B14  EFB0  F005         	goto	l878
  4738  000B18                     u2710:
  4739  000B18  0EFF               	movlw	255
  4740  000B1A  1411               	andwf	___flmul@grs^0,w,c
  4741  000B1C  6E0C               	movwf	??___flmul^0,c
  4742  000B1E  0EFF               	movlw	255
  4743  000B20  1412               	andwf	(___flmul@grs+1)^0,w,c
  4744  000B22  6E0D               	movwf	(??___flmul+1)^0,c
  4745  000B24  0EFF               	movlw	255
  4746  000B26  1413               	andwf	(___flmul@grs+2)^0,w,c
  4747  000B28  6E0E               	movwf	(??___flmul+2)^0,c
  4748  000B2A  0E7F               	movlw	127
  4749  000B2C  1414               	andwf	(___flmul@grs+3)^0,w,c
  4750  000B2E  6E0F               	movwf	(??___flmul+3)^0,c
  4751  000B30  500C               	movf	??___flmul^0,w,c
  4752  000B32  100D               	iorwf	(??___flmul+1)^0,w,c
  4753  000B34  100E               	iorwf	(??___flmul+2)^0,w,c
  4754  000B36  100F               	iorwf	(??___flmul+3)^0,w,c
  4755  000B38  B4D8               	btfsc	status,2,c
  4756  000B3A  EFA1  F005         	goto	u2721
  4757  000B3E  EFA3  F005         	goto	u2720
  4758  000B42                     u2721:
  4759  000B42  EFA7  F005         	goto	l879
  4760  000B46                     u2720:
  4761  000B46                     l3040:
  4762  000B46  0E01               	movlw	1
  4763  000B48  6E15               	movwf	___flmul@aexp^0,c
  4764  000B4A  EFB0  F005         	goto	l878
  4765  000B4E                     l879:
  4766  000B4E  A017               	btfss	___flmul@prod^0,0,c
  4767  000B50  EFAC  F005         	goto	u2731
  4768  000B54  EFAE  F005         	goto	u2730
  4769  000B58                     u2731:
  4770  000B58  EFB0  F005         	goto	l878
  4771  000B5C                     u2730:
  4772  000B5C  EFA3  F005         	goto	l3040
  4773  000B60                     l878:
  4774  000B60  5015               	movf	___flmul@aexp^0,w,c
  4775  000B62  B4D8               	btfsc	status,2,c
  4776  000B64  EFB6  F005         	goto	u2741
  4777  000B68  EFB8  F005         	goto	u2740
  4778  000B6C                     u2741:
  4779  000B6C  EFDC  F005         	goto	l3052
  4780  000B70                     u2740:
  4781  000B70  0E01               	movlw	1
  4782  000B72  2617               	addwf	___flmul@prod^0,f,c
  4783  000B74  0E00               	movlw	0
  4784  000B76  2218               	addwfc	(___flmul@prod+1)^0,f,c
  4785  000B78  2219               	addwfc	(___flmul@prod+2)^0,f,c
  4786  000B7A  221A               	addwfc	(___flmul@prod+3)^0,f,c
  4787  000B7C  A01A               	btfss	(___flmul@prod+3)^0,0,c
  4788  000B7E  EFC3  F005         	goto	u2751
  4789  000B82  EFC5  F005         	goto	u2750
  4790  000B86                     u2751:
  4791  000B86  EFDC  F005         	goto	l3052
  4792  000B8A                     u2750:
  4793  000B8A  C017  F00C         	movff	___flmul@prod,??___flmul
  4794  000B8E  C018  F00D         	movff	___flmul@prod+1,??___flmul+1
  4795  000B92  C019  F00E         	movff	___flmul@prod+2,??___flmul+2
  4796  000B96  C01A  F00F         	movff	___flmul@prod+3,??___flmul+3
  4797  000B9A  340F               	rlcf	(??___flmul+3)^0,w,c
  4798  000B9C  320F               	rrcf	(??___flmul+3)^0,f,c
  4799  000B9E  320E               	rrcf	(??___flmul+2)^0,f,c
  4800  000BA0  320D               	rrcf	(??___flmul+1)^0,f,c
  4801  000BA2  320C               	rrcf	??___flmul^0,f,c
  4802  000BA4  C00C  F017         	movff	??___flmul,___flmul@prod
  4803  000BA8  C00D  F018         	movff	??___flmul+1,___flmul@prod+1
  4804  000BAC  C00E  F019         	movff	??___flmul+2,___flmul@prod+2
  4805  000BB0  C00F  F01A         	movff	??___flmul+3,___flmul@prod+3
  4806  000BB4  4A1B               	infsnz	___flmul@temp^0,f,c
  4807  000BB6  2A1C               	incf	(___flmul@temp+1)^0,f,c
  4808  000BB8                     l3052:
  4809  000BB8  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  4810  000BBA  EFE7  F005         	goto	u2761
  4811  000BBE  501C               	movf	(___flmul@temp+1)^0,w,c
  4812  000BC0  E108               	bnz	u2760
  4813  000BC2  281B               	incf	___flmul@temp^0,w,c
  4814  000BC4  A0D8               	btfss	status,0,c
  4815  000BC6  EFE7  F005         	goto	u2761
  4816  000BCA  EFE9  F005         	goto	u2760
  4817  000BCE                     u2761:
  4818  000BCE  EFF3  F005         	goto	l3056
  4819  000BD2                     u2760:
  4820  000BD2  0E00               	movlw	0
  4821  000BD4  6E17               	movwf	___flmul@prod^0,c
  4822  000BD6  0E00               	movlw	0
  4823  000BD8  6E18               	movwf	(___flmul@prod+1)^0,c
  4824  000BDA  0E80               	movlw	128
  4825  000BDC  6E19               	movwf	(___flmul@prod+2)^0,c
  4826  000BDE  0E7F               	movlw	127
  4827  000BE0  6E1A               	movwf	(___flmul@prod+3)^0,c
  4828  000BE2  EF21  F006         	goto	l3068
  4829  000BE6                     l3056:
  4830  000BE6  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
  4831  000BE8  EF00  F006         	goto	u2770
  4832  000BEC  501C               	movf	(___flmul@temp+1)^0,w,c
  4833  000BEE  E106               	bnz	u2771
  4834  000BF0  041B               	decf	___flmul@temp^0,w,c
  4835  000BF2  B0D8               	btfsc	status,0,c
  4836  000BF4  EFFE  F005         	goto	u2771
  4837  000BF8  EF00  F006         	goto	u2770
  4838  000BFC                     u2771:
  4839  000BFC  EF0C  F006         	goto	l886
  4840  000C00                     u2770:
  4841  000C00  0E00               	movlw	0
  4842  000C02  6E17               	movwf	___flmul@prod^0,c
  4843  000C04  0E00               	movlw	0
  4844  000C06  6E18               	movwf	(___flmul@prod+1)^0,c
  4845  000C08  0E00               	movlw	0
  4846  000C0A  6E19               	movwf	(___flmul@prod+2)^0,c
  4847  000C0C  0E00               	movlw	0
  4848  000C0E  6E1A               	movwf	(___flmul@prod+3)^0,c
  4849  000C10  0E00               	movlw	0
  4850  000C12  6E10               	movwf	___flmul@sign^0,c
  4851  000C14  EF21  F006         	goto	l3068
  4852  000C18                     l886:
  4853  000C18  C01B  F016         	movff	___flmul@temp,___flmul@bexp
  4854  000C1C  0EFF               	movlw	255
  4855  000C1E  1617               	andwf	___flmul@prod^0,f,c
  4856  000C20  0EFF               	movlw	255
  4857  000C22  1618               	andwf	(___flmul@prod+1)^0,f,c
  4858  000C24  0E7F               	movlw	127
  4859  000C26  1619               	andwf	(___flmul@prod+2)^0,f,c
  4860  000C28  0E00               	movlw	0
  4861  000C2A  161A               	andwf	(___flmul@prod+3)^0,f,c
  4862  000C2C  A016               	btfss	___flmul@bexp^0,0,c
  4863  000C2E  EF1B  F006         	goto	u2781
  4864  000C32  EF1D  F006         	goto	u2780
  4865  000C36                     u2781:
  4866  000C36  EF1E  F006         	goto	l3066
  4867  000C3A                     u2780:
  4868  000C3A  8E19               	bsf	(___flmul@prod+2)^0,7,c
  4869  000C3C                     l3066:
  4870  000C3C  90D8               	bcf	status,0,c
  4871  000C3E  3016               	rrcf	___flmul@bexp^0,w,c
  4872  000C40  6E1A               	movwf	(___flmul@prod+3)^0,c
  4873  000C42                     l3068:
  4874  000C42  5010               	movf	___flmul@sign^0,w,c
  4875  000C44  121A               	iorwf	(___flmul@prod+3)^0,f,c
  4876  000C46  C017  F004         	movff	___flmul@prod,?___flmul
  4877  000C4A  C018  F005         	movff	___flmul@prod+1,?___flmul+1
  4878  000C4E  C019  F006         	movff	___flmul@prod+2,?___flmul+2
  4879  000C52  C01A  F007         	movff	___flmul@prod+3,?___flmul+3
  4880  000C56                     l873:
  4881  000C56  0012               	return		;funcret
  4882  000C58                     __end_of___flmul:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function ___fldiv *****************
  4886 ;; Defined at:
  4887 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  b               4   28[COMRAM] unsigned char 
  4890 ;;  a               4   32[COMRAM] unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  grs             4   47[COMRAM] unsigned long 
  4893 ;;  rem             4   40[COMRAM] unsigned long 
  4894 ;;  new_exp         2   45[COMRAM] short 
  4895 ;;  aexp            1   52[COMRAM] unsigned char 
  4896 ;;  bexp            1   51[COMRAM] unsigned char 
  4897 ;;  sign            1   44[COMRAM] unsigned char 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  4   28[COMRAM] unsigned char 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4907 ;;      Params:         8       0       0       0       0       0       0       0       0
  4908 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4909 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4910 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4911 ;;Total ram usage:       25 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    2
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_appADC
  4918 ;;		_appBat
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text26
  4923  000C58                     __ptext26:
  4924                           	callstack 0
  4925  000C58                     ___fldiv:
  4926                           	callstack 26
  4927  000C58  5020               	movf	(___fldiv@b+3)^0,w,c
  4928  000C5A  0B80               	andlw	128
  4929  000C5C  6E2D               	movwf	___fldiv@sign^0,c
  4930  000C5E  5020               	movf	(___fldiv@b+3)^0,w,c
  4931  000C60  2420               	addwf	(___fldiv@b+3)^0,w,c
  4932  000C62  6E34               	movwf	___fldiv@bexp^0,c
  4933  000C64  AE1F               	btfss	(___fldiv@b+2)^0,7,c
  4934  000C66  EF37  F006         	goto	u2371
  4935  000C6A  EF39  F006         	goto	u2370
  4936  000C6E                     u2371:
  4937  000C6E  EF3A  F006         	goto	l2812
  4938  000C72                     u2370:
  4939  000C72  8034               	bsf	___fldiv@bexp^0,0,c
  4940  000C74                     l2812:
  4941  000C74  5034               	movf	___fldiv@bexp^0,w,c
  4942  000C76  B4D8               	btfsc	status,2,c
  4943  000C78  EF40  F006         	goto	u2381
  4944  000C7C  EF42  F006         	goto	u2380
  4945  000C80                     u2381:
  4946  000C80  EF57  F006         	goto	l2822
  4947  000C84                     u2380:
  4948  000C84  2834               	incf	___fldiv@bexp^0,w,c
  4949  000C86  A4D8               	btfss	status,2,c
  4950  000C88  EF48  F006         	goto	u2391
  4951  000C8C  EF4A  F006         	goto	u2390
  4952  000C90                     u2391:
  4953  000C90  EF52  F006         	goto	l2818
  4954  000C94                     u2390:
  4955  000C94  0E00               	movlw	0
  4956  000C96  6E1D               	movwf	___fldiv@b^0,c
  4957  000C98  0E00               	movlw	0
  4958  000C9A  6E1E               	movwf	(___fldiv@b+1)^0,c
  4959  000C9C  0E00               	movlw	0
  4960  000C9E  6E1F               	movwf	(___fldiv@b+2)^0,c
  4961  000CA0  0E00               	movlw	0
  4962  000CA2  6E20               	movwf	(___fldiv@b+3)^0,c
  4963  000CA4                     l2818:
  4964  000CA4  8E1F               	bsf	(___fldiv@b+2)^0,7,c
  4965  000CA6  0E00               	movlw	0
  4966  000CA8  6E20               	movwf	(___fldiv@b+3)^0,c
  4967  000CAA  EF5F  F006         	goto	l2824
  4968  000CAE                     l2822:
  4969  000CAE  0E00               	movlw	0
  4970  000CB0  6E1D               	movwf	___fldiv@b^0,c
  4971  000CB2  0E00               	movlw	0
  4972  000CB4  6E1E               	movwf	(___fldiv@b+1)^0,c
  4973  000CB6  0E00               	movlw	0
  4974  000CB8  6E1F               	movwf	(___fldiv@b+2)^0,c
  4975  000CBA  0E00               	movlw	0
  4976  000CBC  6E20               	movwf	(___fldiv@b+3)^0,c
  4977  000CBE                     l2824:
  4978  000CBE  5024               	movf	(___fldiv@a+3)^0,w,c
  4979  000CC0  0B80               	andlw	128
  4980  000CC2  1A2D               	xorwf	___fldiv@sign^0,f,c
  4981  000CC4  5024               	movf	(___fldiv@a+3)^0,w,c
  4982  000CC6  2424               	addwf	(___fldiv@a+3)^0,w,c
  4983  000CC8  6E35               	movwf	___fldiv@aexp^0,c
  4984  000CCA  AE23               	btfss	(___fldiv@a+2)^0,7,c
  4985  000CCC  EF6A  F006         	goto	u2401
  4986  000CD0  EF6C  F006         	goto	u2400
  4987  000CD4                     u2401:
  4988  000CD4  EF6D  F006         	goto	l2832
  4989  000CD8                     u2400:
  4990  000CD8  8035               	bsf	___fldiv@aexp^0,0,c
  4991  000CDA                     l2832:
  4992  000CDA  5035               	movf	___fldiv@aexp^0,w,c
  4993  000CDC  B4D8               	btfsc	status,2,c
  4994  000CDE  EF73  F006         	goto	u2411
  4995  000CE2  EF75  F006         	goto	u2410
  4996  000CE6                     u2411:
  4997  000CE6  EF8A  F006         	goto	l2842
  4998  000CEA                     u2410:
  4999  000CEA  2835               	incf	___fldiv@aexp^0,w,c
  5000  000CEC  A4D8               	btfss	status,2,c
  5001  000CEE  EF7B  F006         	goto	u2421
  5002  000CF2  EF7D  F006         	goto	u2420
  5003  000CF6                     u2421:
  5004  000CF6  EF85  F006         	goto	l2838
  5005  000CFA                     u2420:
  5006  000CFA  0E00               	movlw	0
  5007  000CFC  6E21               	movwf	___fldiv@a^0,c
  5008  000CFE  0E00               	movlw	0
  5009  000D00  6E22               	movwf	(___fldiv@a+1)^0,c
  5010  000D02  0E00               	movlw	0
  5011  000D04  6E23               	movwf	(___fldiv@a+2)^0,c
  5012  000D06  0E00               	movlw	0
  5013  000D08  6E24               	movwf	(___fldiv@a+3)^0,c
  5014  000D0A                     l2838:
  5015  000D0A  8E23               	bsf	(___fldiv@a+2)^0,7,c
  5016  000D0C  0E00               	movlw	0
  5017  000D0E  6E24               	movwf	(___fldiv@a+3)^0,c
  5018  000D10  EF92  F006         	goto	l2844
  5019  000D14                     l2842:
  5020  000D14  0E00               	movlw	0
  5021  000D16  6E21               	movwf	___fldiv@a^0,c
  5022  000D18  0E00               	movlw	0
  5023  000D1A  6E22               	movwf	(___fldiv@a+1)^0,c
  5024  000D1C  0E00               	movlw	0
  5025  000D1E  6E23               	movwf	(___fldiv@a+2)^0,c
  5026  000D20  0E00               	movlw	0
  5027  000D22  6E24               	movwf	(___fldiv@a+3)^0,c
  5028  000D24                     l2844:
  5029  000D24  5021               	movf	___fldiv@a^0,w,c
  5030  000D26  1022               	iorwf	(___fldiv@a+1)^0,w,c
  5031  000D28  1023               	iorwf	(___fldiv@a+2)^0,w,c
  5032  000D2A  1024               	iorwf	(___fldiv@a+3)^0,w,c
  5033  000D2C  A4D8               	btfss	status,2,c
  5034  000D2E  EF9B  F006         	goto	u2431
  5035  000D32  EF9D  F006         	goto	u2430
  5036  000D36                     u2431:
  5037  000D36  EFB5  F006         	goto	l2856
  5038  000D3A                     u2430:
  5039  000D3A  0E00               	movlw	0
  5040  000D3C  6E1D               	movwf	___fldiv@b^0,c
  5041  000D3E  0E00               	movlw	0
  5042  000D40  6E1E               	movwf	(___fldiv@b+1)^0,c
  5043  000D42  0E00               	movlw	0
  5044  000D44  6E1F               	movwf	(___fldiv@b+2)^0,c
  5045  000D46  0E00               	movlw	0
  5046  000D48  6E20               	movwf	(___fldiv@b+3)^0,c
  5047  000D4A  0E80               	movlw	128
  5048  000D4C  121F               	iorwf	(___fldiv@b+2)^0,f,c
  5049  000D4E  0E7F               	movlw	127
  5050  000D50  1220               	iorwf	(___fldiv@b+3)^0,f,c
  5051  000D52                     l2850:
  5052  000D52  502D               	movf	___fldiv@sign^0,w,c
  5053  000D54  1220               	iorwf	(___fldiv@b+3)^0,f,c
  5054  000D56  C01D  F01D         	movff	___fldiv@b,?___fldiv
  5055  000D5A  C01E  F01E         	movff	___fldiv@b+1,?___fldiv+1
  5056  000D5E  C01F  F01F         	movff	___fldiv@b+2,?___fldiv+2
  5057  000D62  C020  F020         	movff	___fldiv@b+3,?___fldiv+3
  5058  000D66  EFF8  F007         	goto	l837
  5059  000D6A                     l2856:
  5060  000D6A  5034               	movf	___fldiv@bexp^0,w,c
  5061  000D6C  A4D8               	btfss	status,2,c
  5062  000D6E  EFBB  F006         	goto	u2441
  5063  000D72  EFBD  F006         	goto	u2440
  5064  000D76                     u2441:
  5065  000D76  EFC7  F006         	goto	l2864
  5066  000D7A                     u2440:
  5067  000D7A  0E00               	movlw	0
  5068  000D7C  6E1D               	movwf	?___fldiv^0,c
  5069  000D7E  0E00               	movlw	0
  5070  000D80  6E1E               	movwf	(?___fldiv+1)^0,c
  5071  000D82  0E00               	movlw	0
  5072  000D84  6E1F               	movwf	(?___fldiv+2)^0,c
  5073  000D86  0E00               	movlw	0
  5074  000D88  6E20               	movwf	(?___fldiv+3)^0,c
  5075  000D8A  EFF8  F007         	goto	l837
  5076  000D8E                     l2864:
  5077  000D8E  5035               	movf	___fldiv@aexp^0,w,c
  5078  000D90  C034  F025         	movff	___fldiv@bexp,??___fldiv
  5079  000D94  6A26               	clrf	(??___fldiv+1)^0,c
  5080  000D96  5E25               	subwf	??___fldiv^0,f,c
  5081  000D98  0E00               	movlw	0
  5082  000D9A  5A26               	subwfb	(??___fldiv+1)^0,f,c
  5083  000D9C  0E7F               	movlw	127
  5084  000D9E  2425               	addwf	??___fldiv^0,w,c
  5085  000DA0  6E2E               	movwf	___fldiv@new_exp^0,c
  5086  000DA2  0E00               	movlw	0
  5087  000DA4  2026               	addwfc	(??___fldiv+1)^0,w,c
  5088  000DA6  6E2F               	movwf	(___fldiv@new_exp+1)^0,c
  5089  000DA8  C01D  F029         	movff	___fldiv@b,___fldiv@rem
  5090  000DAC  C01E  F02A         	movff	___fldiv@b+1,___fldiv@rem+1
  5091  000DB0  C01F  F02B         	movff	___fldiv@b+2,___fldiv@rem+2
  5092  000DB4  C020  F02C         	movff	___fldiv@b+3,___fldiv@rem+3
  5093  000DB8  0E00               	movlw	0
  5094  000DBA  6E1D               	movwf	___fldiv@b^0,c
  5095  000DBC  0E00               	movlw	0
  5096  000DBE  6E1E               	movwf	(___fldiv@b+1)^0,c
  5097  000DC0  0E00               	movlw	0
  5098  000DC2  6E1F               	movwf	(___fldiv@b+2)^0,c
  5099  000DC4  0E00               	movlw	0
  5100  000DC6  6E20               	movwf	(___fldiv@b+3)^0,c
  5101  000DC8  0E00               	movlw	0
  5102  000DCA  6E30               	movwf	___fldiv@grs^0,c
  5103  000DCC  0E00               	movlw	0
  5104  000DCE  6E31               	movwf	(___fldiv@grs+1)^0,c
  5105  000DD0  0E00               	movlw	0
  5106  000DD2  6E32               	movwf	(___fldiv@grs+2)^0,c
  5107  000DD4  0E00               	movlw	0
  5108  000DD6  6E33               	movwf	(___fldiv@grs+3)^0,c
  5109  000DD8  0E00               	movlw	0
  5110  000DDA  6E35               	movwf	___fldiv@aexp^0,c
  5111  000DDC  EF28  F007         	goto	l839
  5112  000DE0                     l2874:
  5113  000DE0  5035               	movf	___fldiv@aexp^0,w,c
  5114  000DE2  B4D8               	btfsc	status,2,c
  5115  000DE4  EFF6  F006         	goto	u2451
  5116  000DE8  EFF8  F006         	goto	u2450
  5117  000DEC                     u2451:
  5118  000DEC  EF0F  F007         	goto	l2882
  5119  000DF0                     u2450:
  5120  000DF0  90D8               	bcf	status,0,c
  5121  000DF2  3629               	rlcf	___fldiv@rem^0,f,c
  5122  000DF4  362A               	rlcf	(___fldiv@rem+1)^0,f,c
  5123  000DF6  362B               	rlcf	(___fldiv@rem+2)^0,f,c
  5124  000DF8  362C               	rlcf	(___fldiv@rem+3)^0,f,c
  5125  000DFA  90D8               	bcf	status,0,c
  5126  000DFC  361D               	rlcf	___fldiv@b^0,f,c
  5127  000DFE  361E               	rlcf	(___fldiv@b+1)^0,f,c
  5128  000E00  361F               	rlcf	(___fldiv@b+2)^0,f,c
  5129  000E02  3620               	rlcf	(___fldiv@b+3)^0,f,c
  5130  000E04  AE33               	btfss	(___fldiv@grs+3)^0,7,c
  5131  000E06  EF07  F007         	goto	u2461
  5132  000E0A  EF09  F007         	goto	u2460
  5133  000E0E                     u2461:
  5134  000E0E  EF0A  F007         	goto	l842
  5135  000E12                     u2460:
  5136  000E12  801D               	bsf	___fldiv@b^0,0,c
  5137  000E14                     l842:
  5138  000E14  90D8               	bcf	status,0,c
  5139  000E16  3630               	rlcf	___fldiv@grs^0,f,c
  5140  000E18  3631               	rlcf	(___fldiv@grs+1)^0,f,c
  5141  000E1A  3632               	rlcf	(___fldiv@grs+2)^0,f,c
  5142  000E1C  3633               	rlcf	(___fldiv@grs+3)^0,f,c
  5143  000E1E                     l2882:
  5144  000E1E  5021               	movf	___fldiv@a^0,w,c
  5145  000E20  5C29               	subwf	___fldiv@rem^0,w,c
  5146  000E22  5022               	movf	(___fldiv@a+1)^0,w,c
  5147  000E24  582A               	subwfb	(___fldiv@rem+1)^0,w,c
  5148  000E26  5023               	movf	(___fldiv@a+2)^0,w,c
  5149  000E28  582B               	subwfb	(___fldiv@rem+2)^0,w,c
  5150  000E2A  5024               	movf	(___fldiv@a+3)^0,w,c
  5151  000E2C  582C               	subwfb	(___fldiv@rem+3)^0,w,c
  5152  000E2E  A0D8               	btfss	status,0,c
  5153  000E30  EF1C  F007         	goto	u2471
  5154  000E34  EF1E  F007         	goto	u2470
  5155  000E38                     u2471:
  5156  000E38  EF27  F007         	goto	l2888
  5157  000E3C                     u2470:
  5158  000E3C  8C33               	bsf	(___fldiv@grs+3)^0,6,c
  5159  000E3E  5021               	movf	___fldiv@a^0,w,c
  5160  000E40  5E29               	subwf	___fldiv@rem^0,f,c
  5161  000E42  5022               	movf	(___fldiv@a+1)^0,w,c
  5162  000E44  5A2A               	subwfb	(___fldiv@rem+1)^0,f,c
  5163  000E46  5023               	movf	(___fldiv@a+2)^0,w,c
  5164  000E48  5A2B               	subwfb	(___fldiv@rem+2)^0,f,c
  5165  000E4A  5024               	movf	(___fldiv@a+3)^0,w,c
  5166  000E4C  5A2C               	subwfb	(___fldiv@rem+3)^0,f,c
  5167  000E4E                     l2888:
  5168  000E4E  2A35               	incf	___fldiv@aexp^0,f,c
  5169  000E50                     l839:
  5170  000E50  0E19               	movlw	25
  5171  000E52  6435               	cpfsgt	___fldiv@aexp^0,c
  5172  000E54  EF2E  F007         	goto	u2481
  5173  000E58  EF30  F007         	goto	u2480
  5174  000E5C                     u2481:
  5175  000E5C  EFF0  F006         	goto	l2874
  5176  000E60                     u2480:
  5177  000E60  5029               	movf	___fldiv@rem^0,w,c
  5178  000E62  102A               	iorwf	(___fldiv@rem+1)^0,w,c
  5179  000E64  102B               	iorwf	(___fldiv@rem+2)^0,w,c
  5180  000E66  102C               	iorwf	(___fldiv@rem+3)^0,w,c
  5181  000E68  B4D8               	btfsc	status,2,c
  5182  000E6A  EF39  F007         	goto	u2491
  5183  000E6E  EF3B  F007         	goto	u2490
  5184  000E72                     u2491:
  5185  000E72  EF53  F007         	goto	l2900
  5186  000E76                     u2490:
  5187  000E76  8030               	bsf	___fldiv@grs^0,0,c
  5188  000E78  EF53  F007         	goto	l2900
  5189  000E7C                     l2894:
  5190  000E7C  90D8               	bcf	status,0,c
  5191  000E7E  361D               	rlcf	___fldiv@b^0,f,c
  5192  000E80  361E               	rlcf	(___fldiv@b+1)^0,f,c
  5193  000E82  361F               	rlcf	(___fldiv@b+2)^0,f,c
  5194  000E84  3620               	rlcf	(___fldiv@b+3)^0,f,c
  5195  000E86  AE33               	btfss	(___fldiv@grs+3)^0,7,c
  5196  000E88  EF48  F007         	goto	u2501
  5197  000E8C  EF4A  F007         	goto	u2500
  5198  000E90                     u2501:
  5199  000E90  EF4B  F007         	goto	l848
  5200  000E94                     u2500:
  5201  000E94  801D               	bsf	___fldiv@b^0,0,c
  5202  000E96                     l848:
  5203  000E96  90D8               	bcf	status,0,c
  5204  000E98  3630               	rlcf	___fldiv@grs^0,f,c
  5205  000E9A  3631               	rlcf	(___fldiv@grs+1)^0,f,c
  5206  000E9C  3632               	rlcf	(___fldiv@grs+2)^0,f,c
  5207  000E9E  3633               	rlcf	(___fldiv@grs+3)^0,f,c
  5208  000EA0  062E               	decf	___fldiv@new_exp^0,f,c
  5209  000EA2  A0D8               	btfss	status,0,c
  5210  000EA4  062F               	decf	(___fldiv@new_exp+1)^0,f,c
  5211  000EA6                     l2900:
  5212  000EA6  AE1F               	btfss	(___fldiv@b+2)^0,7,c
  5213  000EA8  EF58  F007         	goto	u2511
  5214  000EAC  EF5A  F007         	goto	u2510
  5215  000EB0                     u2511:
  5216  000EB0  EF3E  F007         	goto	l2894
  5217  000EB4                     u2510:
  5218  000EB4  0E00               	movlw	0
  5219  000EB6  6E35               	movwf	___fldiv@aexp^0,c
  5220  000EB8  AE33               	btfss	(___fldiv@grs+3)^0,7,c
  5221  000EBA  EF61  F007         	goto	u2521
  5222  000EBE  EF63  F007         	goto	u2520
  5223  000EC2                     u2521:
  5224  000EC2  EF87  F007         	goto	l850
  5225  000EC6                     u2520:
  5226  000EC6  0EFF               	movlw	255
  5227  000EC8  1430               	andwf	___fldiv@grs^0,w,c
  5228  000ECA  6E25               	movwf	??___fldiv^0,c
  5229  000ECC  0EFF               	movlw	255
  5230  000ECE  1431               	andwf	(___fldiv@grs+1)^0,w,c
  5231  000ED0  6E26               	movwf	(??___fldiv+1)^0,c
  5232  000ED2  0EFF               	movlw	255
  5233  000ED4  1432               	andwf	(___fldiv@grs+2)^0,w,c
  5234  000ED6  6E27               	movwf	(??___fldiv+2)^0,c
  5235  000ED8  0E7F               	movlw	127
  5236  000EDA  1433               	andwf	(___fldiv@grs+3)^0,w,c
  5237  000EDC  6E28               	movwf	(??___fldiv+3)^0,c
  5238  000EDE  5025               	movf	??___fldiv^0,w,c
  5239  000EE0  1026               	iorwf	(??___fldiv+1)^0,w,c
  5240  000EE2  1027               	iorwf	(??___fldiv+2)^0,w,c
  5241  000EE4  1028               	iorwf	(??___fldiv+3)^0,w,c
  5242  000EE6  B4D8               	btfsc	status,2,c
  5243  000EE8  EF78  F007         	goto	u2531
  5244  000EEC  EF7A  F007         	goto	u2530
  5245  000EF0                     u2531:
  5246  000EF0  EF7E  F007         	goto	l851
  5247  000EF4                     u2530:
  5248  000EF4                     l2908:
  5249  000EF4  0E01               	movlw	1
  5250  000EF6  6E35               	movwf	___fldiv@aexp^0,c
  5251  000EF8  EF87  F007         	goto	l850
  5252  000EFC                     l851:
  5253  000EFC  A01D               	btfss	___fldiv@b^0,0,c
  5254  000EFE  EF83  F007         	goto	u2541
  5255  000F02  EF85  F007         	goto	u2540
  5256  000F06                     u2541:
  5257  000F06  EF87  F007         	goto	l850
  5258  000F0A                     u2540:
  5259  000F0A  EF7A  F007         	goto	l2908
  5260  000F0E                     l850:
  5261  000F0E  5035               	movf	___fldiv@aexp^0,w,c
  5262  000F10  B4D8               	btfsc	status,2,c
  5263  000F12  EF8D  F007         	goto	u2551
  5264  000F16  EF8F  F007         	goto	u2550
  5265  000F1A                     u2551:
  5266  000F1A  EFB3  F007         	goto	l2920
  5267  000F1E                     u2550:
  5268  000F1E  0E01               	movlw	1
  5269  000F20  261D               	addwf	___fldiv@b^0,f,c
  5270  000F22  0E00               	movlw	0
  5271  000F24  221E               	addwfc	(___fldiv@b+1)^0,f,c
  5272  000F26  221F               	addwfc	(___fldiv@b+2)^0,f,c
  5273  000F28  2220               	addwfc	(___fldiv@b+3)^0,f,c
  5274  000F2A  A020               	btfss	(___fldiv@b+3)^0,0,c
  5275  000F2C  EF9A  F007         	goto	u2561
  5276  000F30  EF9C  F007         	goto	u2560
  5277  000F34                     u2561:
  5278  000F34  EFB3  F007         	goto	l2920
  5279  000F38                     u2560:
  5280  000F38  C01D  F025         	movff	___fldiv@b,??___fldiv
  5281  000F3C  C01E  F026         	movff	___fldiv@b+1,??___fldiv+1
  5282  000F40  C01F  F027         	movff	___fldiv@b+2,??___fldiv+2
  5283  000F44  C020  F028         	movff	___fldiv@b+3,??___fldiv+3
  5284  000F48  3428               	rlcf	(??___fldiv+3)^0,w,c
  5285  000F4A  3228               	rrcf	(??___fldiv+3)^0,f,c
  5286  000F4C  3227               	rrcf	(??___fldiv+2)^0,f,c
  5287  000F4E  3226               	rrcf	(??___fldiv+1)^0,f,c
  5288  000F50  3225               	rrcf	??___fldiv^0,f,c
  5289  000F52  C025  F01D         	movff	??___fldiv,___fldiv@b
  5290  000F56  C026  F01E         	movff	??___fldiv+1,___fldiv@b+1
  5291  000F5A  C027  F01F         	movff	??___fldiv+2,___fldiv@b+2
  5292  000F5E  C028  F020         	movff	??___fldiv+3,___fldiv@b+3
  5293  000F62  4A2E               	infsnz	___fldiv@new_exp^0,f,c
  5294  000F64  2A2F               	incf	(___fldiv@new_exp+1)^0,f,c
  5295  000F66                     l2920:
  5296  000F66  BE2F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5297  000F68  EFBE  F007         	goto	u2571
  5298  000F6C  502F               	movf	(___fldiv@new_exp+1)^0,w,c
  5299  000F6E  E108               	bnz	u2570
  5300  000F70  282E               	incf	___fldiv@new_exp^0,w,c
  5301  000F72  A0D8               	btfss	status,0,c
  5302  000F74  EFBE  F007         	goto	u2571
  5303  000F78  EFC0  F007         	goto	u2570
  5304  000F7C                     u2571:
  5305  000F7C  EFCB  F007         	goto	l2924
  5306  000F80                     u2570:
  5307  000F80  0E00               	movlw	0
  5308  000F82  6E2F               	movwf	(___fldiv@new_exp+1)^0,c
  5309  000F84  682E               	setf	___fldiv@new_exp^0,c
  5310  000F86  0E00               	movlw	0
  5311  000F88  6E1D               	movwf	___fldiv@b^0,c
  5312  000F8A  0E00               	movlw	0
  5313  000F8C  6E1E               	movwf	(___fldiv@b+1)^0,c
  5314  000F8E  0E00               	movlw	0
  5315  000F90  6E1F               	movwf	(___fldiv@b+2)^0,c
  5316  000F92  0E00               	movlw	0
  5317  000F94  6E20               	movwf	(___fldiv@b+3)^0,c
  5318  000F96                     l2924:
  5319  000F96  BE2F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5320  000F98  EFD8  F007         	goto	u2580
  5321  000F9C  502F               	movf	(___fldiv@new_exp+1)^0,w,c
  5322  000F9E  E106               	bnz	u2581
  5323  000FA0  042E               	decf	___fldiv@new_exp^0,w,c
  5324  000FA2  B0D8               	btfsc	status,0,c
  5325  000FA4  EFD6  F007         	goto	u2581
  5326  000FA8  EFD8  F007         	goto	u2580
  5327  000FAC                     u2581:
  5328  000FAC  EFE6  F007         	goto	l2928
  5329  000FB0                     u2580:
  5330  000FB0  0E00               	movlw	0
  5331  000FB2  6E2F               	movwf	(___fldiv@new_exp+1)^0,c
  5332  000FB4  0E00               	movlw	0
  5333  000FB6  6E2E               	movwf	___fldiv@new_exp^0,c
  5334  000FB8  0E00               	movlw	0
  5335  000FBA  6E1D               	movwf	___fldiv@b^0,c
  5336  000FBC  0E00               	movlw	0
  5337  000FBE  6E1E               	movwf	(___fldiv@b+1)^0,c
  5338  000FC0  0E00               	movlw	0
  5339  000FC2  6E1F               	movwf	(___fldiv@b+2)^0,c
  5340  000FC4  0E00               	movlw	0
  5341  000FC6  6E20               	movwf	(___fldiv@b+3)^0,c
  5342  000FC8  0E00               	movlw	0
  5343  000FCA  6E2D               	movwf	___fldiv@sign^0,c
  5344  000FCC                     l2928:
  5345  000FCC  C02E  F034         	movff	___fldiv@new_exp,___fldiv@bexp
  5346  000FD0  A034               	btfss	___fldiv@bexp^0,0,c
  5347  000FD2  EFED  F007         	goto	u2591
  5348  000FD6  EFEF  F007         	goto	u2590
  5349  000FDA                     u2591:
  5350  000FDA  EFF2  F007         	goto	l2934
  5351  000FDE                     u2590:
  5352  000FDE  8E1F               	bsf	(___fldiv@b+2)^0,7,c
  5353  000FE0  EFF3  F007         	goto	l2936
  5354  000FE4                     l2934:
  5355  000FE4  9E1F               	bcf	(___fldiv@b+2)^0,7,c
  5356  000FE6                     l2936:
  5357  000FE6  90D8               	bcf	status,0,c
  5358  000FE8  3034               	rrcf	___fldiv@bexp^0,w,c
  5359  000FEA  6E20               	movwf	(___fldiv@b+3)^0,c
  5360  000FEC  EFA9  F006         	goto	l2850
  5361  000FF0                     l837:
  5362  000FF0  0012               	return		;funcret
  5363  000FF2                     __end_of___fldiv:
  5364                           	callstack 0
  5365                           
  5366 ;; *************** function ___awmod *****************
  5367 ;; Defined at:
  5368 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  dividend        2   63[COMRAM] int 
  5371 ;;  divisor         2   65[COMRAM] int 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  sign            1   68[COMRAM] unsigned char 
  5374 ;;  counter         1   67[COMRAM] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  2   63[COMRAM] int 
  5377 ;; Registers used:
  5378 ;;		wreg, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5384 ;;      Params:         4       0       0       0       0       0       0       0       0
  5385 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5387 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5388 ;;Total ram usage:        6 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:    2
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_appADC
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text27
  5399  002540                     __ptext27:
  5400                           	callstack 0
  5401  002540                     ___awmod:
  5402                           	callstack 26
  5403  002540  0E00               	movlw	0
  5404  002542  6E45               	movwf	___awmod@sign^0,c
  5405  002544  BE41               	btfsc	(___awmod@dividend+1)^0,7,c
  5406  002546  EFA9  F012         	goto	u2790
  5407  00254A  EFA7  F012         	goto	u2791
  5408  00254E                     u2791:
  5409  00254E  EFAF  F012         	goto	l3082
  5410  002552                     u2790:
  5411  002552  6C40               	negf	___awmod@dividend^0,c
  5412  002554  1E41               	comf	(___awmod@dividend+1)^0,f,c
  5413  002556  B0D8               	btfsc	status,0,c
  5414  002558  2A41               	incf	(___awmod@dividend+1)^0,f,c
  5415  00255A  0E01               	movlw	1
  5416  00255C  6E45               	movwf	___awmod@sign^0,c
  5417  00255E                     l3082:
  5418  00255E  BE43               	btfsc	(___awmod@divisor+1)^0,7,c
  5419  002560  EFB6  F012         	goto	u2800
  5420  002564  EFB4  F012         	goto	u2801
  5421  002568                     u2801:
  5422  002568  EFBA  F012         	goto	l3086
  5423  00256C                     u2800:
  5424  00256C  6C42               	negf	___awmod@divisor^0,c
  5425  00256E  1E43               	comf	(___awmod@divisor+1)^0,f,c
  5426  002570  B0D8               	btfsc	status,0,c
  5427  002572  2A43               	incf	(___awmod@divisor+1)^0,f,c
  5428  002574                     l3086:
  5429  002574  5042               	movf	___awmod@divisor^0,w,c
  5430  002576  1043               	iorwf	(___awmod@divisor+1)^0,w,c
  5431  002578  B4D8               	btfsc	status,2,c
  5432  00257A  EFC1  F012         	goto	u2811
  5433  00257E  EFC3  F012         	goto	u2810
  5434  002582                     u2811:
  5435  002582  EFE7  F012         	goto	l3102
  5436  002586                     u2810:
  5437  002586  0E01               	movlw	1
  5438  002588  6E44               	movwf	___awmod@counter^0,c
  5439  00258A  EFCB  F012         	goto	l3092
  5440  00258E                     l3090:
  5441  00258E  90D8               	bcf	status,0,c
  5442  002590  3642               	rlcf	___awmod@divisor^0,f,c
  5443  002592  3643               	rlcf	(___awmod@divisor+1)^0,f,c
  5444  002594  2A44               	incf	___awmod@counter^0,f,c
  5445  002596                     l3092:
  5446  002596  AE43               	btfss	(___awmod@divisor+1)^0,7,c
  5447  002598  EFD0  F012         	goto	u2821
  5448  00259C  EFD2  F012         	goto	u2820
  5449  0025A0                     u2821:
  5450  0025A0  EFC7  F012         	goto	l3090
  5451  0025A4                     u2820:
  5452  0025A4                     l3094:
  5453  0025A4  5042               	movf	___awmod@divisor^0,w,c
  5454  0025A6  5C40               	subwf	___awmod@dividend^0,w,c
  5455  0025A8  5043               	movf	(___awmod@divisor+1)^0,w,c
  5456  0025AA  5841               	subwfb	(___awmod@dividend+1)^0,w,c
  5457  0025AC  A0D8               	btfss	status,0,c
  5458  0025AE  EFDB  F012         	goto	u2831
  5459  0025B2  EFDD  F012         	goto	u2830
  5460  0025B6                     u2831:
  5461  0025B6  EFE1  F012         	goto	l3098
  5462  0025BA                     u2830:
  5463  0025BA  5042               	movf	___awmod@divisor^0,w,c
  5464  0025BC  5E40               	subwf	___awmod@dividend^0,f,c
  5465  0025BE  5043               	movf	(___awmod@divisor+1)^0,w,c
  5466  0025C0  5A41               	subwfb	(___awmod@dividend+1)^0,f,c
  5467  0025C2                     l3098:
  5468  0025C2  90D8               	bcf	status,0,c
  5469  0025C4  3243               	rrcf	(___awmod@divisor+1)^0,f,c
  5470  0025C6  3242               	rrcf	___awmod@divisor^0,f,c
  5471  0025C8  2E44               	decfsz	___awmod@counter^0,f,c
  5472  0025CA  EFD2  F012         	goto	l3094
  5473  0025CE                     l3102:
  5474  0025CE  5045               	movf	___awmod@sign^0,w,c
  5475  0025D0  B4D8               	btfsc	status,2,c
  5476  0025D2  EFED  F012         	goto	u2841
  5477  0025D6  EFEF  F012         	goto	u2840
  5478  0025DA                     u2841:
  5479  0025DA  EFF3  F012         	goto	l3106
  5480  0025DE                     u2840:
  5481  0025DE  6C40               	negf	___awmod@dividend^0,c
  5482  0025E0  1E41               	comf	(___awmod@dividend+1)^0,f,c
  5483  0025E2  B0D8               	btfsc	status,0,c
  5484  0025E4  2A41               	incf	(___awmod@dividend+1)^0,f,c
  5485  0025E6                     l3106:
  5486  0025E6  C040  F040         	movff	___awmod@dividend,?___awmod
  5487  0025EA  C041  F041         	movff	___awmod@dividend+1,?___awmod+1
  5488  0025EE  0012               	return		;funcret
  5489  0025F0                     __end_of___awmod:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function _appInit *****************
  5493 ;; Defined at:
  5494 ;;		line 10 in file "app.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      void 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5508 ;;      Params:         0       0       0       0       0       0       0       0       0
  5509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5511 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5512 ;;Total ram usage:        0 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    5
  5515 ;; This function calls:
  5516 ;;		_adcInit
  5517 ;;		_appISRConfig
  5518 ;;		_appLCD_Init
  5519 ;;		_appTimerInit
  5520 ;;		_appTimerStart
  5521 ;; This function is called by:
  5522 ;;		_main
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text28
  5527  002A2C                     __ptext28:
  5528                           	callstack 0
  5529  002A2C                     _appInit:
  5530                           	callstack 25
  5531  002A2C                     
  5532                           ;app.c: 12:     appISRConfig();
  5533  002A2C  EC3E  F015         	call	_appISRConfig	;wreg free
  5534  002A30                     
  5535                           ;app.c: 13:     appLCD_Init();
  5536  002A30  ECF8  F012         	call	_appLCD_Init	;wreg free
  5537  002A34                     
  5538                           ;app.c: 14:     adcInit(2);
  5539  002A34  0E02               	movlw	2
  5540  002A36  EC18  F014         	call	_adcInit
  5541  002A3A                     
  5542                           ;app.c: 15:     appTimerInit();
  5543  002A3A  EC2E  F015         	call	_appTimerInit	;wreg free
  5544  002A3E                     
  5545                           ;app.c: 16:     appTimerStart();
  5546  002A3E  EC38  F015         	call	_appTimerStart	;wreg free
  5547  002A42  0012               	return		;funcret
  5548  002A44                     __end_of_appInit:
  5549                           	callstack 0
  5550                           
  5551 ;; *************** function _appTimerStart *****************
  5552 ;; Defined at:
  5553 ;;		line 72 in file "servo.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    2
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_appInit
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text29
  5582  002A70                     __ptext29:
  5583                           	callstack 0
  5584  002A70                     _appTimerStart:
  5585                           	callstack 27
  5586  002A70                     
  5587                           ;servo.c: 74:     TMR3 = 20536;
  5588  002A70  0E50               	movlw	80
  5589  002A72  6EB3               	movwf	179,c	;volatile
  5590  002A74  0E38               	movlw	56
  5591  002A76  6EB2               	movwf	178,c	;volatile
  5592  002A78                     
  5593                           ;servo.c: 75:     T3CONbits.TMR3ON = 1;
  5594  002A78  80B1               	bsf	177,0,c	;volatile
  5595  002A7A  0012               	return		;funcret
  5596  002A7C                     __end_of_appTimerStart:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _appTimerInit *****************
  5600 ;; Defined at:
  5601 ;;		line 53 in file "servo.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0
  5616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5618 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5619 ;;Total ram usage:        0 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    2
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_appInit
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text30
  5630  002A5C                     __ptext30:
  5631                           	callstack 0
  5632  002A5C                     _appTimerInit:
  5633                           	callstack 27
  5634  002A5C                     
  5635                           ;servo.c: 58:     T3CONbits.TMR3ON = 0;
  5636  002A5C  90B1               	bcf	177,0,c	;volatile
  5637                           
  5638                           ;servo.c: 59:     T3CONbits.RD16 = 1;
  5639  002A5E  8EB1               	bsf	177,7,c	;volatile
  5640                           
  5641                           ;servo.c: 60:     T3CONbits.TMR3CS = 0;
  5642  002A60  92B1               	bcf	177,1,c	;volatile
  5643  002A62                     
  5644                           ;servo.c: 61:     T3CONbits.T3CKPS = 0b11;
  5645  002A62  0E30               	movlw	48
  5646  002A64  12B1               	iorwf	177,f,c	;volatile
  5647  002A66                     
  5648                           ;servo.c: 62:     T3CONbits.T3NSYNC = 1;
  5649  002A66  84B1               	bsf	177,2,c	;volatile
  5650  002A68                     
  5651                           ;servo.c: 68:     PIR2bits.TMR3IF = 0;
  5652  002A68  92A1               	bcf	161,1,c	;volatile
  5653  002A6A                     
  5654                           ;servo.c: 69:     IPR2bits.TMR3IP = 0;
  5655  002A6A  92A2               	bcf	162,1,c	;volatile
  5656  002A6C                     
  5657                           ;servo.c: 70:     PIE2bits.TMR3IE = 1;
  5658  002A6C  82A0               	bsf	160,1,c	;volatile
  5659  002A6E  0012               	return		;funcret
  5660  002A70                     __end_of_appTimerInit:
  5661                           	callstack 0
  5662                           
  5663 ;; *************** function _appLCD_Init *****************
  5664 ;; Defined at:
  5665 ;;		line 197 in file "flex_lcd.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5681 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5682 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5683 ;;Total ram usage:        2 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    4
  5686 ;; This function calls:
  5687 ;;		_Lcd_Cmd
  5688 ;;		_Lcd_Init
  5689 ;;		_Lcd_Out
  5690 ;; This function is called by:
  5691 ;;		_appInit
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text31
  5696  0025F0                     __ptext31:
  5697                           	callstack 0
  5698  0025F0                     _appLCD_Init:
  5699                           	callstack 25
  5700  0025F0                     
  5701                           ;flex_lcd.c: 199:     Lcd_Init();
  5702  0025F0  EC40  F012         	call	_Lcd_Init	;wreg free
  5703                           
  5704                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  5705  0025F4  0E01               	movlw	1
  5706  0025F6  ECDD  F00E         	call	_Lcd_Cmd
  5707                           
  5708                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  5709  0025FA  0E0C               	movlw	12
  5710  0025FC  ECDD  F00E         	call	_Lcd_Cmd
  5711  002600                     
  5712                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  5713  002600  0E02               	movlw	2
  5714  002602  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  5715  002604  0E86               	movlw	134
  5716  002606  6E0E               	movwf	??_appLCD_Init^0,c
  5717  002608  0E99               	movlw	153
  5718  00260A                     u3867:
  5719  00260A  2EE8               	decfsz	wreg,f,c
  5720  00260C  D7FE               	bra	u3867
  5721  00260E  2E0E               	decfsz	??_appLCD_Init^0,f,c
  5722  002610  D7FC               	bra	u3867
  5723  002612  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  5724  002614  D7FA               	bra	u3867
  5725  002616  F000               	nop	
  5726  002618                     
  5727                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  5728  002618  0E03               	movlw	3
  5729  00261A  6E07               	movwf	Lcd_Out@x^0,c
  5730  00261C  0E0F               	movlw	low STR_3
  5731  00261E  6E08               	movwf	Lcd_Out@buffer^0,c
  5732  002620  0E08               	movlw	high STR_3
  5733  002622  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  5734  002624  0E01               	movlw	1
  5735  002626  EC14  F011         	call	_Lcd_Out
  5736  00262A                     
  5737                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  5738  00262A  0E06               	movlw	6
  5739  00262C  6E07               	movwf	Lcd_Out@x^0,c
  5740  00262E  0E22               	movlw	low STR_4
  5741  002630  6E08               	movwf	Lcd_Out@buffer^0,c
  5742  002632  0E08               	movlw	high STR_4
  5743  002634  6E09               	movwf	(Lcd_Out@buffer+1)^0,c
  5744  002636  0E02               	movlw	2
  5745  002638  EC14  F011         	call	_Lcd_Out
  5746  00263C                     
  5747                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  5748  00263C  0E1F               	movlw	31
  5749  00263E  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  5750  002640  0E71               	movlw	113
  5751  002642  6E0E               	movwf	??_appLCD_Init^0,c
  5752  002644  0E1E               	movlw	30
  5753  002646                     u3877:
  5754  002646  2EE8               	decfsz	wreg,f,c
  5755  002648  D7FE               	bra	u3877
  5756  00264A  2E0E               	decfsz	??_appLCD_Init^0,f,c
  5757  00264C  D7FC               	bra	u3877
  5758  00264E  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  5759  002650  D7FA               	bra	u3877
  5760  002652  D000               	nop2	
  5761                           
  5762                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  5763  002654  0E01               	movlw	1
  5764  002656  ECDD  F00E         	call	_Lcd_Cmd
  5765  00265A  0E02               	movlw	2
  5766  00265C  6E0F               	movwf	(??_appLCD_Init+1)^0,c
  5767  00265E  0E86               	movlw	134
  5768  002660  6E0E               	movwf	??_appLCD_Init^0,c
  5769  002662  0E99               	movlw	153
  5770  002664                     u3887:
  5771  002664  2EE8               	decfsz	wreg,f,c
  5772  002666  D7FE               	bra	u3887
  5773  002668  2E0E               	decfsz	??_appLCD_Init^0,f,c
  5774  00266A  D7FC               	bra	u3887
  5775  00266C  2E0F               	decfsz	(??_appLCD_Init+1)^0,f,c
  5776  00266E  D7FA               	bra	u3887
  5777  002670  F000               	nop	
  5778  002672  0012               	return		;funcret
  5779  002674                     __end_of_appLCD_Init:
  5780                           	callstack 0
  5781                           
  5782 ;; *************** function _Lcd_Out *****************
  5783 ;; Defined at:
  5784 ;;		line 95 in file "flex_lcd.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  y               1    wreg     unsigned char 
  5787 ;;  x               1    6[COMRAM] unsigned char 
  5788 ;;  buffer          2    7[COMRAM] PTR const char 
  5789 ;;		 -> appElemts@dataout(6), STR_4(6), STR_3(12), appBat@dataOut(8), 
  5790 ;;		 -> appADC@dataOut(9), 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  y               1   11[COMRAM] unsigned char 
  5793 ;;  data            1   12[COMRAM] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5803 ;;      Params:         3       0       0       0       0       0       0       0       0
  5804 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5805 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5806 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5807 ;;Total ram usage:        7 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    3
  5810 ;; This function calls:
  5811 ;;		_Lcd_Chr_CP
  5812 ;;		_Lcd_Cmd
  5813 ;; This function is called by:
  5814 ;;		_appADC
  5815 ;;		_appBat
  5816 ;;		_appLCD_Init
  5817 ;;		_appElemts
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text32
  5822  002228                     __ptext32:
  5823                           	callstack 0
  5824  002228                     _Lcd_Out:
  5825                           	callstack 25
  5826                           
  5827                           ;incstack = 0
  5828                           ;Lcd_Out@y stored from wreg
  5829  002228  6E0C               	movwf	Lcd_Out@y^0,c
  5830  00222A                     
  5831                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  5832  00222A  EF2B  F011         	goto	l2734
  5833  00222E                     l2724:
  5834                           
  5835                           ;flex_lcd.c: 101:             data = 128 + x;
  5836  00222E  5007               	movf	Lcd_Out@x^0,w,c
  5837  002230  0F80               	addlw	128
  5838  002232  6E0D               	movwf	Lcd_Out@data^0,c
  5839                           
  5840                           ;flex_lcd.c: 102:             break;
  5841  002234  EF48  F011         	goto	l2736
  5842  002238                     l2726:
  5843                           
  5844                           ;flex_lcd.c: 104:             data = 192 + x;
  5845  002238  5007               	movf	Lcd_Out@x^0,w,c
  5846  00223A  0FC0               	addlw	192
  5847  00223C  6E0D               	movwf	Lcd_Out@data^0,c
  5848                           
  5849                           ;flex_lcd.c: 105:             break;
  5850  00223E  EF48  F011         	goto	l2736
  5851  002242                     l2728:
  5852                           
  5853                           ;flex_lcd.c: 107:             data = 148 + x;
  5854  002242  5007               	movf	Lcd_Out@x^0,w,c
  5855  002244  0F94               	addlw	148
  5856  002246  6E0D               	movwf	Lcd_Out@data^0,c
  5857                           
  5858                           ;flex_lcd.c: 108:             break;
  5859  002248  EF48  F011         	goto	l2736
  5860  00224C                     l2730:
  5861                           
  5862                           ;flex_lcd.c: 110:             data = 212 + x;
  5863  00224C  5007               	movf	Lcd_Out@x^0,w,c
  5864  00224E  0FD4               	addlw	212
  5865  002250  6E0D               	movwf	Lcd_Out@data^0,c
  5866                           
  5867                           ;flex_lcd.c: 111:             break;
  5868  002252  EF48  F011         	goto	l2736
  5869  002256                     l2734:
  5870  002256  500C               	movf	Lcd_Out@y^0,w,c
  5871  002258  6E0A               	movwf	??_Lcd_Out^0,c
  5872  00225A  6A0B               	clrf	(??_Lcd_Out+1)^0,c
  5873                           
  5874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5875                           ; Switch size 1, requested type "simple"
  5876                           ; Number of cases is 1, Range of values is 0 to 0
  5877                           ; switch strategies available:
  5878                           ; Name         Instructions Cycles
  5879                           ; simple_byte            4     3 (average)
  5880                           ;	Chosen strategy is simple_byte
  5881  00225C  500B               	movf	(??_Lcd_Out+1)^0,w,c
  5882  00225E  0A00               	xorlw	0	; case 0
  5883  002260  B4D8               	btfsc	status,2,c
  5884  002262  EF35  F011         	goto	l3898
  5885  002266  EF48  F011         	goto	l2736
  5886  00226A                     l3898:
  5887                           
  5888                           ; Switch size 1, requested type "simple"
  5889                           ; Number of cases is 4, Range of values is 1 to 4
  5890                           ; switch strategies available:
  5891                           ; Name         Instructions Cycles
  5892                           ; simple_byte           13     7 (average)
  5893                           ;	Chosen strategy is simple_byte
  5894  00226A  500A               	movf	??_Lcd_Out^0,w,c
  5895  00226C  0A01               	xorlw	1	; case 1
  5896  00226E  B4D8               	btfsc	status,2,c
  5897  002270  EF17  F011         	goto	l2724
  5898  002274  0A03               	xorlw	3	; case 2
  5899  002276  B4D8               	btfsc	status,2,c
  5900  002278  EF1C  F011         	goto	l2726
  5901  00227C  0A01               	xorlw	1	; case 3
  5902  00227E  B4D8               	btfsc	status,2,c
  5903  002280  EF21  F011         	goto	l2728
  5904  002284  0A07               	xorlw	7	; case 4
  5905  002286  B4D8               	btfsc	status,2,c
  5906  002288  EF26  F011         	goto	l2730
  5907  00228C  EF48  F011         	goto	l2736
  5908  002290                     l2736:
  5909                           
  5910                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  5911  002290  500D               	movf	Lcd_Out@data^0,w,c
  5912  002292  ECDD  F00E         	call	_Lcd_Cmd
  5913                           
  5914                           ;flex_lcd.c: 116:     while(*buffer)
  5915  002296  EF61  F011         	goto	l2742
  5916  00229A                     l2738:
  5917                           
  5918                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  5919  00229A  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  5920  00229E  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  5921  0022A2  6AF8               	clrf	tblptru,c
  5922  0022A4  0E07               	movlw	(high __ramtop+-1)
  5923  0022A6  64F7               	cpfsgt	tblptrh,c
  5924  0022A8  D003               	bra	u2337
  5925  0022AA  0008               	tblrd		*
  5926  0022AC  50F5               	movf	tablat,w,c
  5927  0022AE  D005               	bra	u2330
  5928  0022B0                     u2337:
  5929  0022B0  CFF6 FFE1          	movff	tblptrl,fsr1l
  5930  0022B4  CFF7 FFE2          	movff	tblptrh,fsr1h
  5931  0022B8  50E7               	movf	indf1,w,c
  5932  0022BA                     u2330:
  5933  0022BA  EC36  F00E         	call	_Lcd_Chr_CP
  5934  0022BE                     
  5935                           ;flex_lcd.c: 119:         buffer++;
  5936  0022BE  4A08               	infsnz	Lcd_Out@buffer^0,f,c
  5937  0022C0  2A09               	incf	(Lcd_Out@buffer+1)^0,f,c
  5938  0022C2                     l2742:
  5939                           
  5940                           ;flex_lcd.c: 116:     while(*buffer)
  5941  0022C2  C008  FFF6         	movff	Lcd_Out@buffer,tblptrl
  5942  0022C6  C009  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  5943  0022CA  6AF8               	clrf	tblptru,c
  5944  0022CC  0E07               	movlw	(high __ramtop+-1)
  5945  0022CE  64F7               	cpfsgt	tblptrh,c
  5946  0022D0  D003               	bra	u2347
  5947  0022D2  0008               	tblrd		*
  5948  0022D4  50F5               	movf	tablat,w,c
  5949  0022D6  D005               	bra	u2340
  5950  0022D8                     u2347:
  5951  0022D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  5952  0022DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  5953  0022E0  50E7               	movf	indf1,w,c
  5954  0022E2                     u2340:
  5955  0022E2  0900               	iorlw	0
  5956  0022E4  A4D8               	btfss	status,2,c
  5957  0022E6  EF77  F011         	goto	u2351
  5958  0022EA  EF79  F011         	goto	u2350
  5959  0022EE                     u2351:
  5960  0022EE  EF4D  F011         	goto	l2738
  5961  0022F2                     u2350:
  5962  0022F2  0012               	return		;funcret
  5963  0022F4                     __end_of_Lcd_Out:
  5964                           	callstack 0
  5965                           
  5966 ;; *************** function _Lcd_Chr_CP *****************
  5967 ;; Defined at:
  5968 ;;		line 151 in file "flex_lcd.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  data            1    wreg     char 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  data            1    5[COMRAM] char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg, status,2, status,0
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5982 ;;      Params:         0       0       0       0       0       0       0       0       0
  5983 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5984 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5985 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5986 ;;Total ram usage:        3 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    2
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_Lcd_Out
  5993 ;;		_Lcd_Out2
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text33
  5998  001C6C                     __ptext33:
  5999                           	callstack 0
  6000  001C6C                     _Lcd_Chr_CP:
  6001                           	callstack 25
  6002                           
  6003                           ;incstack = 0
  6004                           ;Lcd_Chr_CP@data stored from wreg
  6005  001C6C  6E06               	movwf	Lcd_Chr_CP@data^0,c
  6006  001C6E                     
  6007                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  6008  001C6E  968C               	bcf	140,3,c	;volatile
  6009                           
  6010                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  6011  001C70  848C               	bsf	140,2,c	;volatile
  6012  001C72                     
  6013                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  6014  001C72  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6015  001C76  0E07               	movlw	7
  6016  001C78  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  6017  001C7A                     u2255:
  6018  001C7A  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  6019  001C7C  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6020  001C7E  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  6021  001C80  EF3D  F00E         	goto	u2255
  6022  001C84  0E01               	movlw	1
  6023  001C86  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  6024  001C88  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6025  001C8A  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6026  001C8C  508C               	movf	140,w,c	;volatile
  6027  001C8E  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6028  001C90  0B7F               	andlw	-129
  6029  001C92  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6030  001C94  6E8C               	movwf	140,c	;volatile
  6031                           
  6032                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  6033  001C96  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6034  001C9A  0E06               	movlw	6
  6035  001C9C  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  6036  001C9E                     u2265:
  6037  001C9E  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  6038  001CA0  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6039  001CA2  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  6040  001CA4  EF4F  F00E         	goto	u2265
  6041  001CA8  0E01               	movlw	1
  6042  001CAA  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  6043  001CAC  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  6044  001CAE  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  6045  001CB0  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  6046  001CB2  508C               	movf	140,w,c	;volatile
  6047  001CB4  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6048  001CB6  0BBF               	andlw	-65
  6049  001CB8  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6050  001CBA  6E8C               	movwf	140,c	;volatile
  6051                           
  6052                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  6053  001CBC  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6054  001CC0  0E05               	movlw	5
  6055  001CC2  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  6056  001CC4                     u2275:
  6057  001CC4  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  6058  001CC6  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6059  001CC8  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  6060  001CCA  EF62  F00E         	goto	u2275
  6061  001CCE  0E01               	movlw	1
  6062  001CD0  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  6063  001CD2  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  6064  001CD4  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  6065  001CD6  508C               	movf	140,w,c	;volatile
  6066  001CD8  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6067  001CDA  0BDF               	andlw	-33
  6068  001CDC  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6069  001CDE  6E8C               	movwf	140,c	;volatile
  6070                           
  6071                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  6072  001CE0  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6073  001CE4  0E04               	movlw	4
  6074  001CE6  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  6075  001CE8                     u2285:
  6076  001CE8  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  6077  001CEA  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6078  001CEC  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  6079  001CEE  EF74  F00E         	goto	u2285
  6080  001CF2  0E01               	movlw	1
  6081  001CF4  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  6082  001CF6  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  6083  001CF8  508C               	movf	140,w,c	;volatile
  6084  001CFA  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6085  001CFC  0BEF               	andlw	-17
  6086  001CFE  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6087  001D00  6E8C               	movwf	140,c	;volatile
  6088  001D02                     
  6089                           ;flex_lcd.c: 159:     _delay(10);
  6090  001D02  0E03               	movlw	3
  6091  001D04                     u3897:
  6092  001D04  2EE8               	decfsz	wreg,f,c
  6093  001D06  D7FE               	bra	u3897
  6094  001D08  F000               	nop	
  6095  001D0A                     
  6096                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  6097  001D0A  868C               	bsf	140,3,c	;volatile
  6098  001D0C                     
  6099                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  6100  001D0C  0E05               	movlw	5
  6101  001D0E                     u3907:
  6102  001D0E  2EE8               	decfsz	wreg,f,c
  6103  001D10  D7FE               	bra	u3907
  6104  001D12                     
  6105                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  6106  001D12  968C               	bcf	140,3,c	;volatile
  6107                           
  6108                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  6109  001D14  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6110  001D18  0E03               	movlw	3
  6111  001D1A  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  6112  001D1C                     u2295:
  6113  001D1C  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  6114  001D1E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6115  001D20  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  6116  001D22  EF8E  F00E         	goto	u2295
  6117  001D26  0E01               	movlw	1
  6118  001D28  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  6119  001D2A  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6120  001D2C  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6121  001D2E  508C               	movf	140,w,c	;volatile
  6122  001D30  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6123  001D32  0B7F               	andlw	-129
  6124  001D34  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6125  001D36  6E8C               	movwf	140,c	;volatile
  6126                           
  6127                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  6128  001D38  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6129  001D3C  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  6130  001D3E  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6131  001D40  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  6132  001D42  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6133  001D44  0E01               	movlw	1
  6134  001D46  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  6135  001D48  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  6136  001D4A  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  6137  001D4C  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  6138  001D4E  508C               	movf	140,w,c	;volatile
  6139  001D50  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6140  001D52  0BBF               	andlw	-65
  6141  001D54  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6142  001D56  6E8C               	movwf	140,c	;volatile
  6143                           
  6144                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  6145  001D58  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6146  001D5C  0E01               	movlw	1
  6147  001D5E  6E05               	movwf	(??_Lcd_Chr_CP+1)^0,c
  6148  001D60                     u2305:
  6149  001D60  3404               	rlcf	??_Lcd_Chr_CP^0,w,c
  6150  001D62  3204               	rrcf	??_Lcd_Chr_CP^0,f,c
  6151  001D64  2E05               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  6152  001D66  EFB0  F00E         	goto	u2305
  6153  001D6A  0E01               	movlw	1
  6154  001D6C  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  6155  001D6E  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  6156  001D70  4604               	rlncf	??_Lcd_Chr_CP^0,f,c
  6157  001D72  508C               	movf	140,w,c	;volatile
  6158  001D74  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6159  001D76  0BDF               	andlw	-33
  6160  001D78  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6161  001D7A  6E8C               	movwf	140,c	;volatile
  6162                           
  6163                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  6164  001D7C  C006  F004         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  6165  001D80  0E01               	movlw	1
  6166  001D82  1604               	andwf	??_Lcd_Chr_CP^0,f,c
  6167  001D84  3A04               	swapf	??_Lcd_Chr_CP^0,f,c
  6168  001D86  508C               	movf	140,w,c	;volatile
  6169  001D88  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6170  001D8A  0BEF               	andlw	-17
  6171  001D8C  1804               	xorwf	??_Lcd_Chr_CP^0,w,c
  6172  001D8E  6E8C               	movwf	140,c	;volatile
  6173  001D90                     
  6174                           ;flex_lcd.c: 167:     _delay(10);
  6175  001D90  0E03               	movlw	3
  6176  001D92                     u3917:
  6177  001D92  2EE8               	decfsz	wreg,f,c
  6178  001D94  D7FE               	bra	u3917
  6179  001D96  F000               	nop	
  6180  001D98                     
  6181                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  6182  001D98  868C               	bsf	140,3,c	;volatile
  6183  001D9A                     
  6184                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  6185  001D9A  0E05               	movlw	5
  6186  001D9C                     u3927:
  6187  001D9C  2EE8               	decfsz	wreg,f,c
  6188  001D9E  D7FE               	bra	u3927
  6189  001DA0                     
  6190                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  6191  001DA0  968C               	bcf	140,3,c	;volatile
  6192  001DA2                     
  6193                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  6194  001DA2  0E05               	movlw	5
  6195  001DA4                     u3937:
  6196  001DA4  2EE8               	decfsz	wreg,f,c
  6197  001DA6  D7FE               	bra	u3937
  6198  001DA8                     
  6199                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6200  001DA8  0E16               	movlw	22
  6201  001DAA  6E04               	movwf	??_Lcd_Chr_CP^0,c
  6202  001DAC  0E6C               	movlw	108
  6203  001DAE                     u3947:
  6204  001DAE  2EE8               	decfsz	wreg,f,c
  6205  001DB0  D7FE               	bra	u3947
  6206  001DB2  2E04               	decfsz	??_Lcd_Chr_CP^0,f,c
  6207  001DB4  D7FC               	bra	u3947
  6208  001DB6  D000               	nop2	
  6209  001DB8  0012               	return		;funcret
  6210  001DBA                     __end_of_Lcd_Chr_CP:
  6211                           	callstack 0
  6212                           
  6213 ;; *************** function _Lcd_Init *****************
  6214 ;; Defined at:
  6215 ;;		line 31 in file "flex_lcd.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  i               1    7[COMRAM] unsigned char 
  6220 ;;  data            1    0        unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0
  6231 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6232 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6233 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6234 ;;Total ram usage:        3 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    3
  6237 ;; This function calls:
  6238 ;;		_Lcd_Cmd
  6239 ;; This function is called by:
  6240 ;;		_appLCD_Init
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text34
  6245  002480                     __ptext34:
  6246                           	callstack 0
  6247  002480                     _Lcd_Init:
  6248                           	callstack 25
  6249  002480                     
  6250                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  6251  002480  9E95               	bcf	149,7,c	;volatile
  6252                           
  6253                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  6254  002482  9C95               	bcf	149,6,c	;volatile
  6255                           
  6256                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  6257  002484  9A95               	bcf	149,5,c	;volatile
  6258                           
  6259                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  6260  002486  9895               	bcf	149,4,c	;volatile
  6261                           
  6262                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  6263  002488  9695               	bcf	149,3,c	;volatile
  6264                           
  6265                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  6266  00248A  9495               	bcf	149,2,c	;volatile
  6267  00248C                     
  6268                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  6269  00248C  0E85               	movlw	133
  6270  00248E  6E07               	movwf	??_Lcd_Init^0,c
  6271  002490  0E76               	movlw	118
  6272  002492                     u3957:
  6273  002492  2EE8               	decfsz	wreg,f,c
  6274  002494  D7FE               	bra	u3957
  6275  002496  2E07               	decfsz	??_Lcd_Init^0,f,c
  6276  002498  D7FC               	bra	u3957
  6277  00249A  D000               	nop2	
  6278  00249C                     
  6279                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  6280  00249C  0E00               	movlw	0
  6281  00249E  6E08               	movwf	Lcd_Init@i^0,c
  6282  0024A0                     l97:
  6283                           
  6284                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  6285  0024A0  9E8C               	bcf	140,7,c	;volatile
  6286                           
  6287                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  6288  0024A2  9C8C               	bcf	140,6,c	;volatile
  6289                           
  6290                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  6291  0024A4  8A8C               	bsf	140,5,c	;volatile
  6292                           
  6293                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  6294  0024A6  888C               	bsf	140,4,c	;volatile
  6295                           
  6296                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  6297  0024A8  968C               	bcf	140,3,c	;volatile
  6298                           
  6299                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  6300  0024AA  948C               	bcf	140,2,c	;volatile
  6301                           
  6302                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  6303  0024AC  9E8C               	bcf	140,7,c	;volatile
  6304                           
  6305                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  6306  0024AE  9C8C               	bcf	140,6,c	;volatile
  6307                           
  6308                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  6309  0024B0  8A8C               	bsf	140,5,c	;volatile
  6310                           
  6311                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  6312  0024B2  888C               	bsf	140,4,c	;volatile
  6313                           
  6314                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  6315  0024B4  868C               	bsf	140,3,c	;volatile
  6316                           
  6317                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  6318  0024B6  948C               	bcf	140,2,c	;volatile
  6319  0024B8                     
  6320                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  6321  0024B8  0E05               	movlw	5
  6322  0024BA                     u3967:
  6323  0024BA  2EE8               	decfsz	wreg,f,c
  6324  0024BC  D7FE               	bra	u3967
  6325  0024BE                     
  6326                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  6327  0024BE  9E8C               	bcf	140,7,c	;volatile
  6328  0024C0                     
  6329                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  6330  0024C0  9C8C               	bcf	140,6,c	;volatile
  6331  0024C2                     
  6332                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  6333  0024C2  8A8C               	bsf	140,5,c	;volatile
  6334  0024C4                     
  6335                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  6336  0024C4  888C               	bsf	140,4,c	;volatile
  6337  0024C6                     
  6338                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  6339  0024C6  968C               	bcf	140,3,c	;volatile
  6340  0024C8                     
  6341                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  6342  0024C8  948C               	bcf	140,2,c	;volatile
  6343                           
  6344                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6345  0024CA  0E16               	movlw	22
  6346  0024CC  6E07               	movwf	??_Lcd_Init^0,c
  6347  0024CE  0E6C               	movlw	108
  6348  0024D0                     u3977:
  6349  0024D0  2EE8               	decfsz	wreg,f,c
  6350  0024D2  D7FE               	bra	u3977
  6351  0024D4  2E07               	decfsz	??_Lcd_Init^0,f,c
  6352  0024D6  D7FC               	bra	u3977
  6353  0024D8  D000               	nop2	
  6354  0024DA                     
  6355                           ;flex_lcd.c: 61:     }
  6356  0024DA  2A08               	incf	Lcd_Init@i^0,f,c
  6357  0024DC  0E03               	movlw	3
  6358  0024DE  6408               	cpfsgt	Lcd_Init@i^0,c
  6359  0024E0  EF74  F012         	goto	u2361
  6360  0024E4  EF76  F012         	goto	u2360
  6361  0024E8                     u2361:
  6362  0024E8  EF50  F012         	goto	l97
  6363  0024EC                     u2360:
  6364  0024EC                     
  6365                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  6366  0024EC  9E8C               	bcf	140,7,c	;volatile
  6367                           
  6368                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  6369  0024EE  9C8C               	bcf	140,6,c	;volatile
  6370                           
  6371                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  6372  0024F0  8A8C               	bsf	140,5,c	;volatile
  6373                           
  6374                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  6375  0024F2  988C               	bcf	140,4,c	;volatile
  6376                           
  6377                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  6378  0024F4  968C               	bcf	140,3,c	;volatile
  6379                           
  6380                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  6381  0024F6  948C               	bcf	140,2,c	;volatile
  6382                           
  6383                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  6384  0024F8  9E8C               	bcf	140,7,c	;volatile
  6385                           
  6386                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  6387  0024FA  9C8C               	bcf	140,6,c	;volatile
  6388                           
  6389                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  6390  0024FC  8A8C               	bsf	140,5,c	;volatile
  6391                           
  6392                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  6393  0024FE  988C               	bcf	140,4,c	;volatile
  6394                           
  6395                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  6396  002500  868C               	bsf	140,3,c	;volatile
  6397                           
  6398                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  6399  002502  948C               	bcf	140,2,c	;volatile
  6400  002504                     
  6401                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  6402  002504  0E05               	movlw	5
  6403  002506                     u3987:
  6404  002506  2EE8               	decfsz	wreg,f,c
  6405  002508  D7FE               	bra	u3987
  6406  00250A                     
  6407                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  6408  00250A  9E8C               	bcf	140,7,c	;volatile
  6409  00250C                     
  6410                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  6411  00250C  9C8C               	bcf	140,6,c	;volatile
  6412  00250E                     
  6413                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  6414  00250E  8A8C               	bsf	140,5,c	;volatile
  6415  002510                     
  6416                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  6417  002510  988C               	bcf	140,4,c	;volatile
  6418  002512                     
  6419                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  6420  002512  968C               	bcf	140,3,c	;volatile
  6421  002514                     
  6422                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  6423  002514  948C               	bcf	140,2,c	;volatile
  6424                           
  6425                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6426  002516  0E16               	movlw	22
  6427  002518  6E07               	movwf	??_Lcd_Init^0,c
  6428  00251A  0E6C               	movlw	108
  6429  00251C                     u3997:
  6430  00251C  2EE8               	decfsz	wreg,f,c
  6431  00251E  D7FE               	bra	u3997
  6432  002520  2E07               	decfsz	??_Lcd_Init^0,f,c
  6433  002522  D7FC               	bra	u3997
  6434  002524  D000               	nop2	
  6435  002526                     
  6436                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  6437  002526  0E28               	movlw	40
  6438  002528  ECDD  F00E         	call	_Lcd_Cmd
  6439  00252C                     
  6440                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  6441  00252C  0E10               	movlw	16
  6442  00252E  ECDD  F00E         	call	_Lcd_Cmd
  6443  002532                     
  6444                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  6445  002532  0E01               	movlw	1
  6446  002534  ECDD  F00E         	call	_Lcd_Cmd
  6447  002538                     
  6448                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  6449  002538  0E0F               	movlw	15
  6450  00253A  ECDD  F00E         	call	_Lcd_Cmd
  6451  00253E  0012               	return		;funcret
  6452  002540                     __end_of_Lcd_Init:
  6453                           	callstack 0
  6454                           
  6455 ;; *************** function _Lcd_Cmd *****************
  6456 ;; Defined at:
  6457 ;;		line 175 in file "flex_lcd.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  data            1    wreg     unsigned char 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;  data            1    5[COMRAM] unsigned char 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg, status,2, status,0
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6471 ;;      Params:         0       0       0       0       0       0       0       0       0
  6472 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6473 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6474 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6475 ;;Total ram usage:        3 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    2
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_Lcd_Init
  6482 ;;		_Lcd_Out
  6483 ;;		_appLCD_Init
  6484 ;;		_Lcd_Out2
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text35
  6489  001DBA                     __ptext35:
  6490                           	callstack 0
  6491  001DBA                     _Lcd_Cmd:
  6492                           	callstack 25
  6493                           
  6494                           ;incstack = 0
  6495                           ;Lcd_Cmd@data stored from wreg
  6496  001DBA  6E06               	movwf	Lcd_Cmd@data^0,c
  6497  001DBC                     
  6498                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  6499  001DBC  968C               	bcf	140,3,c	;volatile
  6500  001DBE  948C               	bcf	140,2,c	;volatile
  6501  001DC0                     
  6502                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  6503  001DC0  6A04               	clrf	??_Lcd_Cmd^0,c
  6504  001DC2  AE06               	btfss	Lcd_Cmd@data^0,7,c
  6505  001DC4  D001               	bra	u2225
  6506  001DC6  2A04               	incf	??_Lcd_Cmd^0,f,c
  6507  001DC8                     u2225:
  6508  001DC8  0E01               	movlw	1
  6509  001DCA  1604               	andwf	??_Lcd_Cmd^0,f,c
  6510  001DCC  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6511  001DCE  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6512  001DD0  508C               	movf	140,w,c	;volatile
  6513  001DD2  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6514  001DD4  0B7F               	andlw	-129
  6515  001DD6  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6516  001DD8  6E8C               	movwf	140,c	;volatile
  6517                           
  6518                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  6519  001DDA  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6520  001DDE  0E06               	movlw	6
  6521  001DE0  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  6522  001DE2                     u2235:
  6523  001DE2  90D8               	bcf	status,0,c
  6524  001DE4  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6525  001DE6  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  6526  001DE8  EFF1  F00E         	goto	u2235
  6527  001DEC  0E01               	movlw	1
  6528  001DEE  1604               	andwf	??_Lcd_Cmd^0,f,c
  6529  001DF0  3A04               	swapf	??_Lcd_Cmd^0,f,c
  6530  001DF2  4604               	rlncf	??_Lcd_Cmd^0,f,c
  6531  001DF4  4604               	rlncf	??_Lcd_Cmd^0,f,c
  6532  001DF6  508C               	movf	140,w,c	;volatile
  6533  001DF8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6534  001DFA  0BBF               	andlw	-65
  6535  001DFC  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6536  001DFE  6E8C               	movwf	140,c	;volatile
  6537                           
  6538                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  6539  001E00  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6540  001E04  0E05               	movlw	5
  6541  001E06  6E05               	movwf	(??_Lcd_Cmd+1)^0,c
  6542  001E08                     u2245:
  6543  001E08  90D8               	bcf	status,0,c
  6544  001E0A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6545  001E0C  2E05               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  6546  001E0E  EF04  F00F         	goto	u2245
  6547  001E12  0E01               	movlw	1
  6548  001E14  1604               	andwf	??_Lcd_Cmd^0,f,c
  6549  001E16  3A04               	swapf	??_Lcd_Cmd^0,f,c
  6550  001E18  4604               	rlncf	??_Lcd_Cmd^0,f,c
  6551  001E1A  508C               	movf	140,w,c	;volatile
  6552  001E1C  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6553  001E1E  0BDF               	andlw	-33
  6554  001E20  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6555  001E22  6E8C               	movwf	140,c	;volatile
  6556                           
  6557                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  6558  001E24  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6559  001E28  3A04               	swapf	??_Lcd_Cmd^0,f,c
  6560  001E2A  0E0F               	movlw	15
  6561  001E2C  1604               	andwf	??_Lcd_Cmd^0,f,c
  6562  001E2E  0E01               	movlw	1
  6563  001E30  1604               	andwf	??_Lcd_Cmd^0,f,c
  6564  001E32  3A04               	swapf	??_Lcd_Cmd^0,f,c
  6565  001E34  508C               	movf	140,w,c	;volatile
  6566  001E36  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6567  001E38  0BEF               	andlw	-17
  6568  001E3A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6569  001E3C  6E8C               	movwf	140,c	;volatile
  6570  001E3E                     
  6571                           ;flex_lcd.c: 182:     _delay(10);
  6572  001E3E  0E03               	movlw	3
  6573  001E40                     u4007:
  6574  001E40  2EE8               	decfsz	wreg,f,c
  6575  001E42  D7FE               	bra	u4007
  6576  001E44  F000               	nop	
  6577  001E46                     
  6578                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  6579  001E46  868C               	bsf	140,3,c	;volatile
  6580  001E48                     
  6581                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  6582  001E48  0E05               	movlw	5
  6583  001E4A                     u4017:
  6584  001E4A  2EE8               	decfsz	wreg,f,c
  6585  001E4C  D7FE               	bra	u4017
  6586  001E4E                     
  6587                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  6588  001E4E  968C               	bcf	140,3,c	;volatile
  6589                           
  6590                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  6591  001E50  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6592  001E54  90D8               	bcf	status,0,c
  6593  001E56  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6594  001E58  90D8               	bcf	status,0,c
  6595  001E5A  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6596  001E5C  90D8               	bcf	status,0,c
  6597  001E5E  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6598  001E60  0E01               	movlw	1
  6599  001E62  1604               	andwf	??_Lcd_Cmd^0,f,c
  6600  001E64  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6601  001E66  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6602  001E68  508C               	movf	140,w,c	;volatile
  6603  001E6A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6604  001E6C  0B7F               	andlw	-129
  6605  001E6E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6606  001E70  6E8C               	movwf	140,c	;volatile
  6607                           
  6608                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  6609  001E72  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6610  001E76  90D8               	bcf	status,0,c
  6611  001E78  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6612  001E7A  90D8               	bcf	status,0,c
  6613  001E7C  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6614  001E7E  0E01               	movlw	1
  6615  001E80  1604               	andwf	??_Lcd_Cmd^0,f,c
  6616  001E82  3A04               	swapf	??_Lcd_Cmd^0,f,c
  6617  001E84  4604               	rlncf	??_Lcd_Cmd^0,f,c
  6618  001E86  4604               	rlncf	??_Lcd_Cmd^0,f,c
  6619  001E88  508C               	movf	140,w,c	;volatile
  6620  001E8A  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6621  001E8C  0BBF               	andlw	-65
  6622  001E8E  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6623  001E90  6E8C               	movwf	140,c	;volatile
  6624                           
  6625                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  6626  001E92  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6627  001E96  90D8               	bcf	status,0,c
  6628  001E98  3204               	rrcf	??_Lcd_Cmd^0,f,c
  6629  001E9A  0E01               	movlw	1
  6630  001E9C  1604               	andwf	??_Lcd_Cmd^0,f,c
  6631  001E9E  3A04               	swapf	??_Lcd_Cmd^0,f,c
  6632  001EA0  4604               	rlncf	??_Lcd_Cmd^0,f,c
  6633  001EA2  508C               	movf	140,w,c	;volatile
  6634  001EA4  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6635  001EA6  0BDF               	andlw	-33
  6636  001EA8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6637  001EAA  6E8C               	movwf	140,c	;volatile
  6638                           
  6639                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  6640  001EAC  C006  F004         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  6641  001EB0  0E01               	movlw	1
  6642  001EB2  1604               	andwf	??_Lcd_Cmd^0,f,c
  6643  001EB4  3A04               	swapf	??_Lcd_Cmd^0,f,c
  6644  001EB6  508C               	movf	140,w,c	;volatile
  6645  001EB8  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6646  001EBA  0BEF               	andlw	-17
  6647  001EBC  1804               	xorwf	??_Lcd_Cmd^0,w,c
  6648  001EBE  6E8C               	movwf	140,c	;volatile
  6649  001EC0                     
  6650                           ;flex_lcd.c: 190:     _delay(10);
  6651  001EC0  0E03               	movlw	3
  6652  001EC2                     u4027:
  6653  001EC2  2EE8               	decfsz	wreg,f,c
  6654  001EC4  D7FE               	bra	u4027
  6655  001EC6  F000               	nop	
  6656  001EC8                     
  6657                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  6658  001EC8  868C               	bsf	140,3,c	;volatile
  6659  001ECA                     
  6660                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  6661  001ECA  0E05               	movlw	5
  6662  001ECC                     u4037:
  6663  001ECC  2EE8               	decfsz	wreg,f,c
  6664  001ECE  D7FE               	bra	u4037
  6665  001ED0                     
  6666                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  6667  001ED0  968C               	bcf	140,3,c	;volatile
  6668  001ED2                     
  6669                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  6670  001ED2  0E16               	movlw	22
  6671  001ED4  6E04               	movwf	??_Lcd_Cmd^0,c
  6672  001ED6  0E6C               	movlw	108
  6673  001ED8                     u4047:
  6674  001ED8  2EE8               	decfsz	wreg,f,c
  6675  001EDA  D7FE               	bra	u4047
  6676  001EDC  2E04               	decfsz	??_Lcd_Cmd^0,f,c
  6677  001EDE  D7FC               	bra	u4047
  6678  001EE0  D000               	nop2	
  6679  001EE2  0012               	return		;funcret
  6680  001EE4                     __end_of_Lcd_Cmd:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function _appISRConfig *****************
  6684 ;; Defined at:
  6685 ;;		line 33 in file "app.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      void 
  6692 ;; Registers used:
  6693 ;;		None
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6699 ;;      Params:         0       0       0       0       0       0       0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6702 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6703 ;;Total ram usage:        0 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    2
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_appInit
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text36
  6714  002A7C                     __ptext36:
  6715                           	callstack 0
  6716  002A7C                     _appISRConfig:
  6717                           	callstack 27
  6718  002A7C                     
  6719                           ;app.c: 38:     RCONbits.IPEN = 1;
  6720  002A7C  8ED0               	bsf	208,7,c	;volatile
  6721                           
  6722                           ;app.c: 39:     INTCONbits.GIE_GIEH = 1;
  6723  002A7E  8EF2               	bsf	242,7,c	;volatile
  6724                           
  6725                           ;app.c: 40:     INTCONbits.PEIE_GIEL = 1;
  6726  002A80  8CF2               	bsf	242,6,c	;volatile
  6727  002A82  0012               	return		;funcret
  6728  002A84                     __end_of_appISRConfig:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function _adcInit *****************
  6732 ;; Defined at:
  6733 ;;		line 9 in file "adc.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  ADC_PINs        1    wreg     unsigned char 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;  ADC_PINs        1    4[COMRAM] unsigned char 
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6747 ;;      Params:         0       0       0       0       0       0       0       0       0
  6748 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6749 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6750 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6751 ;;Total ram usage:        2 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    2
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_appInit
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text37
  6762  002830                     __ptext37:
  6763                           	callstack 0
  6764  002830                     _adcInit:
  6765                           	callstack 27
  6766                           
  6767                           ;incstack = 0
  6768                           ;adcInit@ADC_PINs stored from wreg
  6769  002830  6E05               	movwf	adcInit@ADC_PINs^0,c
  6770  002832                     
  6771                           ;adc.c: 9: void adcInit(uint8_t ADC_PINs);adc.c: 10: {;adc.c: 12:     if(ADC_PINs == 0)
  6772  002832  5005               	movf	adcInit@ADC_PINs^0,w,c
  6773  002834  A4D8               	btfss	status,2,c
  6774  002836  EF1F  F014         	goto	u3021
  6775  00283A  EF21  F014         	goto	u3020
  6776  00283E                     u3021:
  6777  00283E  EF27  F014         	goto	l3204
  6778  002842                     u3020:
  6779  002842                     
  6780                           ;adc.c: 13:     {;adc.c: 14:         ADCON1bits.PCFG = 0b1110;
  6781  002842  50C1               	movf	193,w,c	;volatile
  6782  002844  0BF0               	andlw	-16
  6783  002846  090E               	iorlw	14
  6784  002848  6EC1               	movwf	193,c	;volatile
  6785                           
  6786                           ;adc.c: 15:     }
  6787  00284A  EF2F  F014         	goto	l3206
  6788  00284E                     l3204:
  6789                           
  6790                           ;adc.c: 17:     {;adc.c: 18:         ADCON1bits.PCFG = 15 - ADC_PINs;
  6791  00284E  5005               	movf	adcInit@ADC_PINs^0,w,c
  6792  002850  080F               	sublw	15
  6793  002852  6E04               	movwf	??_adcInit^0,c
  6794  002854  50C1               	movf	193,w,c	;volatile
  6795  002856  1804               	xorwf	??_adcInit^0,w,c
  6796  002858  0BF0               	andlw	-16
  6797  00285A  1804               	xorwf	??_adcInit^0,w,c
  6798  00285C  6EC1               	movwf	193,c	;volatile
  6799  00285E                     l3206:
  6800                           
  6801                           ;adc.c: 24:     ADCON1bits.VCFG = 0b00;
  6802  00285E  0ECF               	movlw	-49
  6803  002860  16C1               	andwf	193,f,c	;volatile
  6804  002862                     
  6805                           ;adc.c: 29:     ADCON2bits.ACQT = 0b010;
  6806  002862  50C0               	movf	192,w,c	;volatile
  6807  002864  0BC7               	andlw	-57
  6808  002866  0910               	iorlw	16
  6809  002868  6EC0               	movwf	192,c	;volatile
  6810  00286A                     
  6811                           ;adc.c: 34:     ADCON2bits.ADCS = 3;
  6812  00286A  50C0               	movf	192,w,c	;volatile
  6813  00286C  0BF8               	andlw	-8
  6814  00286E  0903               	iorlw	3
  6815  002870  6EC0               	movwf	192,c	;volatile
  6816  002872                     
  6817                           ;adc.c: 37:     ADCON2bits.ADFM = 1;
  6818  002872  8EC0               	bsf	192,7,c	;volatile
  6819  002874                     
  6820                           ;adc.c: 38:     ADCON0bits.ADON = 1;
  6821  002874  80C2               	bsf	194,0,c	;volatile
  6822  002876  0012               	return		;funcret
  6823  002878                     __end_of_adcInit:
  6824                           	callstack 0
  6825                           
  6826 ;; *************** function _isrL *****************
  6827 ;; Defined at:
  6828 ;;		line 43 in file "app.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  1    wreg      void 
  6835 ;; Registers used:
  6836 ;;		wreg, status,2, status,0
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6842 ;;      Params:         0       0       0       0       0       0       0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6844 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6845 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6846 ;;Total ram usage:        3 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:    1
  6849 ;; This function calls:
  6850 ;;		Nothing
  6851 ;; This function is called by:
  6852 ;;		Interrupt level 1
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	intcodelo
  6857  000018                     __pintcodelo:
  6858                           	callstack 0
  6859  000018                     _isrL:
  6860                           	callstack 19
  6861                           
  6862                           ;incstack = 0
  6863  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6864  00001A  CFD8 F001          	movff	status,??_isrL
  6865  00001E  CFE8 F002          	movff	wreg,??_isrL+1
  6866  000022  CFE0 F003          	movff	bsr,??_isrL+2
  6867  000026                     
  6868                           ;app.c: 45:     if(TMR3IE && TMR3IF)
  6869  000026  A2A0               	btfss	4000,1,c	;volatile
  6870  000028  EF18  F000         	goto	i1u381_21
  6871  00002C  EF1A  F000         	goto	i1u381_20
  6872  000030                     i1u381_21:
  6873  000030  EF37  F000         	goto	i1l247
  6874  000034                     i1u381_20:
  6875  000034  A2A1               	btfss	4001,1,c	;volatile
  6876  000036  EF1F  F000         	goto	i1u382_21
  6877  00003A  EF21  F000         	goto	i1u382_20
  6878  00003E                     i1u382_21:
  6879  00003E  EF37  F000         	goto	i1l247
  6880  000042                     i1u382_20:
  6881  000042                     
  6882                           ;app.c: 46:     {;app.c: 47:         TMR3IF = 0;
  6883  000042  92A1               	bcf	4001,1,c	;volatile
  6884  000044                     
  6885                           ;app.c: 49:         datos.counter++;
  6886  000044  0100               	movlb	0	; () banked
  6887  000046  2BC6               	incf	_datos& (0+255),f,b
  6888  000048                     
  6889                           ; BSR set to: 0
  6890                           ;app.c: 50:         if(datos.counter == 10)
  6891  000048  0E0A               	movlw	10
  6892  00004A  19C6               	xorwf	_datos& (0+255),w,b
  6893  00004C  A4D8               	btfss	status,2,c
  6894  00004E  EF2B  F000         	goto	i1u383_21
  6895  000052  EF2D  F000         	goto	i1u383_20
  6896  000056                     i1u383_21:
  6897  000056  EF33  F000         	goto	i1l3832
  6898  00005A                     i1u383_20:
  6899  00005A                     
  6900                           ; BSR set to: 0
  6901                           ;app.c: 51:         {;app.c: 52:             datos.counter = 0;
  6902  00005A  0E00               	movlw	0
  6903  00005C  6FC6               	movwf	_datos& (0+255),b
  6904  00005E                     
  6905                           ; BSR set to: 0
  6906                           ;app.c: 53:             datos.nextFunc = appStateRecolectData;
  6907  00005E  0E0A               	movlw	low _appStateRecolectData
  6908  000060  6FDB               	movwf	(_datos+21)& (0+255),b
  6909  000062  0E2A               	movlw	high _appStateRecolectData
  6910  000064  6FDC               	movwf	(_datos+22)& (0+255),b
  6911  000066                     i1l3832:
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;app.c: 55:         TMR3 = 20536;
  6915  000066  0E50               	movlw	80
  6916  000068  6EB3               	movwf	179,c	;volatile
  6917  00006A  0E38               	movlw	56
  6918  00006C  6EB2               	movwf	178,c	;volatile
  6919  00006E                     i1l247:
  6920  00006E  C003  FFE0         	movff	??_isrL+2,bsr
  6921  000072  C002  FFE8         	movff	??_isrL+1,wreg
  6922  000076  C001  FFD8         	movff	??_isrL,status
  6923  00007A  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6924  00007C  0010               	retfie	
  6925  00007E                     __end_of_isrL:
  6926                           	callstack 0
  6927                           
  6928 ;; *************** function _isrH *****************
  6929 ;; Defined at:
  6930 ;;		line 58 in file "app.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;		None
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  1    wreg      void 
  6937 ;; Registers used:
  6938 ;;		None
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6944 ;;      Params:         0       0       0       0       0       0       0       0       0
  6945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6947 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6948 ;;Total ram usage:        0 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		Interrupt level 2
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	intcode
  6958  000008                     __pintcode:
  6959                           	callstack 0
  6960  000008                     _isrH:
  6961                           	callstack 19
  6962                           
  6963                           ;incstack = 0
  6964  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6965  00000A  ED42  F015         	call	int_func,f	;refresh shadow registers
  6966  00000E                     
  6967                           	psect	intcode_body
  6968  002A84                     __pintcode_body:
  6969                           	callstack 19
  6970  002A84                     int_func:
  6971                           	callstack 19
  6972  002A84  0006               	pop		; remove dummy address from shadow register refresh
  6973  002A86  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6974  002A88  0011               	retfie		f
  6975  002A8A                     __end_of_isrH:
  6976                           	callstack 0
  6977                           
  6978                           	psect	rparam
  6979  0000                     
  6980                           	psect	temp
  6981  00005C                     btemp:
  6982                           	callstack 0
  6983  00005C                     	ds	1
  6984  0000                     int$flags	set	btemp
  6985  0000                     wtemp8	set	btemp+1
  6986  0000                     ttemp5	set	btemp+1
  6987  0000                     ttemp6	set	btemp+4
  6988  0000                     ttemp7	set	btemp+8
  6989                           
  6990                           	psect	idloc
  6991                           
  6992                           ;Config register IDLOC0 @ 0x200000
  6993                           ;	unspecified, using default values
  6994  200000                     	org	2097152
  6995  200000  FF                 	db	255
  6996                           
  6997                           ;Config register IDLOC1 @ 0x200001
  6998                           ;	unspecified, using default values
  6999  200001                     	org	2097153
  7000  200001  FF                 	db	255
  7001                           
  7002                           ;Config register IDLOC2 @ 0x200002
  7003                           ;	unspecified, using default values
  7004  200002                     	org	2097154
  7005  200002  FF                 	db	255
  7006                           
  7007                           ;Config register IDLOC3 @ 0x200003
  7008                           ;	unspecified, using default values
  7009  200003                     	org	2097155
  7010  200003  FF                 	db	255
  7011                           
  7012                           ;Config register IDLOC4 @ 0x200004
  7013                           ;	unspecified, using default values
  7014  200004                     	org	2097156
  7015  200004  FF                 	db	255
  7016                           
  7017                           ;Config register IDLOC5 @ 0x200005
  7018                           ;	unspecified, using default values
  7019  200005                     	org	2097157
  7020  200005  FF                 	db	255
  7021                           
  7022                           ;Config register IDLOC6 @ 0x200006
  7023                           ;	unspecified, using default values
  7024  200006                     	org	2097158
  7025  200006  FF                 	db	255
  7026                           
  7027                           ;Config register IDLOC7 @ 0x200007
  7028                           ;	unspecified, using default values
  7029  200007                     	org	2097159
  7030  200007  FF                 	db	255
  7031                           
  7032                           	psect	config
  7033                           
  7034                           ;Config register CONFIG1L @ 0x300000
  7035                           ;	PLL Prescaler Selection bits
  7036                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7037                           ;	System Clock Postscaler Selection bits
  7038                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7039                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7040                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7041  300000                     	org	3145728
  7042  300000  00                 	db	0
  7043                           
  7044                           ;Config register CONFIG1H @ 0x300001
  7045                           ;	Oscillator Selection bits
  7046                           ;	FOSC = HS, HS oscillator (HS)
  7047                           ;	Fail-Safe Clock Monitor Enable bit
  7048                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7049                           ;	Internal/External Oscillator Switchover bit
  7050                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7051  300001                     	org	3145729
  7052  300001  0C                 	db	12
  7053                           
  7054                           ;Config register CONFIG2L @ 0x300002
  7055                           ;	Power-up Timer Enable bit
  7056                           ;	PWRT = OFF, PWRT disabled
  7057                           ;	Brown-out Reset Enable bits
  7058                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  7059                           ;	Brown-out Reset Voltage bits
  7060                           ;	BORV = 3, Minimum setting 2.05V
  7061                           ;	USB Voltage Regulator Enable bit
  7062                           ;	VREGEN = OFF, USB voltage regulator disabled
  7063  300002                     	org	3145730
  7064  300002  19                 	db	25
  7065                           
  7066                           ;Config register CONFIG2H @ 0x300003
  7067                           ;	Watchdog Timer Enable bit
  7068                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7069                           ;	Watchdog Timer Postscale Select bits
  7070                           ;	WDTPS = 32768, 1:32768
  7071  300003                     	org	3145731
  7072  300003  1E                 	db	30
  7073                           
  7074                           ; Padding undefined space
  7075  300004                     	org	3145732
  7076  300004  FF                 	db	255
  7077                           
  7078                           ;Config register CONFIG3H @ 0x300005
  7079                           ;	CCP2 MUX bit
  7080                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7081                           ;	PORTB A/D Enable bit
  7082                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7083                           ;	Low-Power Timer 1 Oscillator Enable bit
  7084                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7085                           ;	MCLR Pin Enable bit
  7086                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7087  300005                     	org	3145733
  7088  300005  81                 	db	129
  7089                           
  7090                           ;Config register CONFIG4L @ 0x300006
  7091                           ;	Stack Full/Underflow Reset Enable bit
  7092                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7093                           ;	Single-Supply ICSP Enable bit
  7094                           ;	LVP = OFF, Single-Supply ICSP disabled
  7095                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7096                           ;	ICPRT = OFF, ICPORT disabled
  7097                           ;	Extended Instruction Set Enable bit
  7098                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7099                           ;	Background Debugger Enable bit
  7100                           ;	DEBUG = 0x1, unprogrammed default
  7101  300006                     	org	3145734
  7102  300006  81                 	db	129
  7103                           
  7104                           ; Padding undefined space
  7105  300007                     	org	3145735
  7106  300007  FF                 	db	255
  7107                           
  7108                           ;Config register CONFIG5L @ 0x300008
  7109                           ;	Code Protection bit
  7110                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7111                           ;	Code Protection bit
  7112                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7113                           ;	Code Protection bit
  7114                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7115                           ;	Code Protection bit
  7116                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7117  300008                     	org	3145736
  7118  300008  0F                 	db	15
  7119                           
  7120                           ;Config register CONFIG5H @ 0x300009
  7121                           ;	Boot Block Code Protection bit
  7122                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7123                           ;	Data EEPROM Code Protection bit
  7124                           ;	CPD = OFF, Data EEPROM is not code-protected
  7125  300009                     	org	3145737
  7126  300009  C0                 	db	192
  7127                           
  7128                           ;Config register CONFIG6L @ 0x30000A
  7129                           ;	Write Protection bit
  7130                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7131                           ;	Write Protection bit
  7132                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7133                           ;	Write Protection bit
  7134                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7135                           ;	Write Protection bit
  7136                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7137  30000A                     	org	3145738
  7138  30000A  0F                 	db	15
  7139                           
  7140                           ;Config register CONFIG6H @ 0x30000B
  7141                           ;	Configuration Register Write Protection bit
  7142                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7143                           ;	Boot Block Write Protection bit
  7144                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7145                           ;	Data EEPROM Write Protection bit
  7146                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7147  30000B                     	org	3145739
  7148  30000B  E0                 	db	224
  7149                           
  7150                           ;Config register CONFIG7L @ 0x30000C
  7151                           ;	Table Read Protection bit
  7152                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7153                           ;	Table Read Protection bit
  7154                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7155                           ;	Table Read Protection bit
  7156                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7157                           ;	Table Read Protection bit
  7158                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7159  30000C                     	org	3145740
  7160  30000C  0F                 	db	15
  7161                           
  7162                           ;Config register CONFIG7H @ 0x30000D
  7163                           ;	Boot Block Table Read Protection bit
  7164                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7165  30000D                     	org	3145741
  7166  30000D  40                 	db	64
  7167                           tosu	equ	0xFFF
  7168                           tosh	equ	0xFFE
  7169                           tosl	equ	0xFFD
  7170                           stkptr	equ	0xFFC
  7171                           pclatu	equ	0xFFB
  7172                           pclath	equ	0xFFA
  7173                           pcl	equ	0xFF9
  7174                           tblptru	equ	0xFF8
  7175                           tblptrh	equ	0xFF7
  7176                           tblptrl	equ	0xFF6
  7177                           tablat	equ	0xFF5
  7178                           prodh	equ	0xFF4
  7179                           prodl	equ	0xFF3
  7180                           indf0	equ	0xFEF
  7181                           postinc0	equ	0xFEE
  7182                           postdec0	equ	0xFED
  7183                           preinc0	equ	0xFEC
  7184                           plusw0	equ	0xFEB
  7185                           fsr0h	equ	0xFEA
  7186                           fsr0l	equ	0xFE9
  7187                           wreg	equ	0xFE8
  7188                           indf1	equ	0xFE7
  7189                           postinc1	equ	0xFE6
  7190                           postdec1	equ	0xFE5
  7191                           preinc1	equ	0xFE4
  7192                           plusw1	equ	0xFE3
  7193                           fsr1h	equ	0xFE2
  7194                           fsr1l	equ	0xFE1
  7195                           bsr	equ	0xFE0
  7196                           indf2	equ	0xFDF
  7197                           postinc2	equ	0xFDE
  7198                           postdec2	equ	0xFDD
  7199                           preinc2	equ	0xFDC
  7200                           plusw2	equ	0xFDB
  7201                           fsr2h	equ	0xFDA
  7202                           fsr2l	equ	0xFD9
  7203                           status	equ	0xFD8

Data Sizes:
    Strings     44
    Constant    0
    Data        23
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160     41     125
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> appElemts@dataout(BANK0[6]), appBat@dataOut(BANK0[8]), appADC@dataOut(BANK0[9]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[5]), STR_2(CODE[7]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[5]), STR_2(CODE[7]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[5]), STR_2(CODE[7]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[5]), STR_2(CODE[7]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 9
		 -> appElemts@dataout(BANK0[6]), appBat@dataOut(BANK0[8]), appADC@dataOut(BANK0[9]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1484_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 9
		 -> appElemts@dataout(BANK0[6]), appBat@dataOut(BANK0[8]), appADC@dataOut(BANK0[9]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 9
		 -> appElemts@dataout(BANK0[6]), appBat@dataOut(BANK0[8]), appADC@dataOut(BANK0[9]), 

    appElemts@elements	PTR const unsigned char  size(2) Largest target is 23
		 -> datos.elements(BANK0[1]), datos(BANK0[23]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 12
		 -> appElemts@dataout(BANK0[6]), STR_4(CODE[6]), STR_3(CODE[12]), appBat@dataOut(BANK0[8]), 
		 -> appADC@dataOut(BANK0[9]), 

    S207_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appStateRecolectData(), appStateInitial(), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appStateRecolectData(), appStateInitial(), 


Critical Paths under _main in COMRAM

    _appStateRecolectData->_appElemts
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    ___xxtofl->_adcGetValue
    ___fltol->___fldiv
    ___fldiv->___flmul
    ___awmod->___fltol
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isrL in COMRAM

    None.

Critical Paths under _isrH in COMRAM

    None.

Critical Paths under _main in BANK0

    _appStateRecolectData->_appADC
    _appElemts->_sprintf
    _appBat->_sprintf
    _appADC->_sprintf
    _sprintf->_vfprintf

Critical Paths under _isrL in BANK0

    None.

Critical Paths under _isrH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrL in BANK1

    None.

Critical Paths under _isrH in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrL in BANK2

    None.

Critical Paths under _isrH in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrL in BANK3

    None.

Critical Paths under _isrH in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrL in BANK4

    None.

Critical Paths under _isrH in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrL in BANK5

    None.

Critical Paths under _isrH in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrL in BANK6

    None.

Critical Paths under _isrH in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrL in BANK7

    None.

Critical Paths under _isrH in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   50043
                                             39 BANK0      2     2      0
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                 0     0      0   48215
                             _appADC
                             _appBat
                          _appElemts
 ---------------------------------------------------------------------------------
 (2) _appElemts                                            9     7      2   12710
                                             88 COMRAM     1     1      0
                                             26 BANK0      8     6      2
                            _Lcd_Out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appBat                                              12    12      0   17513
                                             26 BANK0     12    12      0
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _appADC                                              13    13      0   17992
                                             26 BANK0     13    13      0
                            _Lcd_Out
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _adcGetValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   11213
                                              8 BANK0     18    10      8
                            ___awmod (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   10361
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6    9831
                                             66 COMRAM    22    16      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1615
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     512
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _adcGetValue                                          4     2      2      22
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              7 COMRAM    14    10      4
                        _adcGetValue (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                             53 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2200
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1703
                                             28 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             63 COMRAM     6     2      4
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    1828
                            _adcInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    1784
                                             13 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (3) _Lcd_Out                                              7     4      3    1293
                                              6 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Chr_CP                                           3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              6 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     176
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isrL                                                3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _isrH                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appInit
     _adcInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
   _appStateInitial *
   _appStateRecolectData *
     _appADC
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___awmod
         ___flmul (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
       ___fldiv
         ___flmul (ARG)
       ___flmul
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appBat
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       ___fldiv
         ___flmul (ARG)
       ___flmul
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___xxtofl
         _adcGetValue (ARG)
       _adcGetValue
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
     _appElemts
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
       _sprintf
         ___awmod (ARG)
           ___flmul (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit

 _isrL (ROOT)

 _isrH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      7D       5       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8      20        0.0%
DATA                 0      0      D8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat May 29 20:31:06 2021

                 ___fldiv@aexp 0035                   ___fldiv@bexp 0034                   ___fldiv@sign 002D  
                           l21 2876                             l24 295E                             l32 2006  
                           l26 296C                             l27 2974                             l37 2120  
                           l97 24A0                             l98 24EC                             l99 253E  
                           bsr 000FE0            ___wmul@multiplicand 0006                            l112 22F2  
                          l131 1EE2                            l134 2672                            l231 2A42  
                          l240 2A82                            l128 1DB8                            l234 2A2A  
                          l237 2A8A                            l190 2A7A                            l255 2A08  
                          l187 2A6E                            l382 1C6A                            l198 282E  
                          l552 2226                            l369 1B06                            l910 1692  
                          l913 17EE                            l850 0F0E                            l842 0E14  
                          l499 25EE                            l851 0EFC                            l924 1786  
                          l837 0FF0                            l917 172A                            l933 2794  
                          l839 0E50                            l848 0E96                            l873 0C56  
                          l876 0AE8                            l964 2402                            l869 08F2  
                          l886 0C18                            l878 0B60                            l879 0B4E  
                          l967 2444                            l975 13FE                            l969 247E  
                          l977 1406                            l995 163A                adcInit@ADC_PINs 0005  
                          _PR2 000FCB                            _abs 28BC                            _pad 23BE  
                 ___awmod@sign 0045                            tosl 000FFD                            wreg 000FE8  
                 ___flmul@aexp 0015                   ___flmul@bexp 0016                   ___flmul@sign 0010  
                 ___flmul@temp 001B                   ___flmul@prod 0017                   ___fltol@exp1 003F  
                         l1030 273A                           l1103 28BA                           l1031 2742  
                         l1112 29E2                           l1024 135C                           l1009 10E4  
                         l1106 2A8C                           l1035 28F2                           ?_abs 0016  
                         l1038 28FA                           l3000 099C                           l1072 29AC  
                         l1080 27E6                           l3010 09EE                           l3002 09A8  
                         l1066 1976                           l3100 25C8                           l3020 0A6C  
                         l3012 09FE                           l3004 09B8                           l1069 197E  
                         l3102 25CE                           l3030 0AE6                           l3022 0AA2  
                         l3014 0A1A                           l3006 09C4                           l3110 2122  
                         l1095 23BC                           l3200 2832                           l3104 25DE  
                         l3040 0B46                           l3032 0AF8                           l3024 0AB0  
                         l3016 0A26                           l3008 09D4                           l3120 2178  
                         l3112 2138                           l3210 286A                           l3202 2842  
                         l3106 25E6                           l3050 0BB4                           l3034 0B06  
                         l3026 0ACE                           l3018 0A42                           l3122 2188  
                         l3212 2872                           l3204 284E                           l3060 0C1C  
                         l3044 0B70                           l3052 0BB8                           l3036 0B0A  
                         l3028 0AD8                           l3132 21B2                           l3124 218C  
                         l3116 214C                           l3214 2874                           l3206 285E  
                         l3070 0C46                           l3062 0C2C                           l3054 0BD2  
                         l3046 0B7C                           l3038 0B18                           l3150 2216  
                         l3142 21DA                           l3134 21BC                           l3126 219A  
                         l3118 2176                           l3208 2862                           l3240 2618  
                         l3080 255A                           l3064 0C3A                           l3056 0BE6  
                         l3048 0B8A                           l3144 21E6                           l3136 21C6  
                         l3160 16A2                           l3400 2306                           l3242 262A  
                         l3250 2A62                           l3090 258E                           l3082 255E  
                         l3074 2540                           l3066 0C3C                           l3058 0C00  
                         l3146 21F6                           l3170 16E0                           l3162 16B8  
                         l3154 163E                           l3402 2318                           l3244 263C  
                         l3236 25F0                           l3252 2A66                           l3260 2A70  
                         l3092 2596                           l3084 256C                           l3076 2544  
                         l3068 0C42                           l3148 2206                           l3180 1768  
                         l3172 1712                           l3156 164E                           l3500 1BB4  
                         l3404 2322                           l3412 2878                           l3420 29AE  
                         l3270 2A7C                           l3246 265A                           l3238 2600  
                         l3254 2A68                           l3262 2A78                           l3094 25A4  
                         l3086 2574                           l3078 2552                           l3190 17BE  
                         l3182 1776                           l3174 1714                           l3166 16CC  
                         l3158 165C                           l3430 29E4                           l3510 1C2A  
                         l3502 1BE2                           l3406 2340                           l3414 2884  
                         l3422 29BA                           l2800 2532                           l3256 2A6A  
                         l3248 2A5C                           l3280 2A3E                           l3272 2A2C  
                         l3096 25BA                           l3088 2586                           l3192 17CE  
                         l3184 1794                           l3176 1720                           l3168 16D4  
                         l2704 293C                           l3432 2A00                           l3440 1992  
                         l3512 1C4A                           l3504 1C02                           l3408 2376  
                         l3416 2896                           l3424 29BE                           l3520 23E0  
                         l3600 15A8                           l2650 1DBC                           l2802 2538  
                         l2730 224C                           l2722 222A                           l3258 2A6C  
                         l3274 2A30                           l3098 25C2                           l2810 0C72  
                         l3194 17DC                           l3186 1796                           l3178 175C  
                         l2706 294E                           l3450 19E8                           l3442 19B2  
                         l3506 1C14                           l3418 289A                           l3426 29D6  
                         l3530 2426                           l3522 23EE                           l3610 15EE  
                         l3602 15B6                           l2660 1E4E                           l2652 1DC0  
                         l2804 2538                           l2740 22BE                           l2724 222E  
                         l3276 2A34                           l2900 0EA6                           l2820 0CA6  
                         l2812 0C74                           l3196 17DE                           l3188 179A  
                         l2708 295C                           l3620 17F0                           l3460 1A3C  
                         l3452 19F4                           l3444 19B6                           l3436 1980  
                         l3508 1C1A                           l3540 28D6                           l3532 2452  
                         l3524 23FA                           l3516 23BE                           l3612 15FA  
                         l3604 15C8                           l3700 10F2                           l2670 1ED2  
                         l2662 1EC0                           l2654 1E3E                           l2750 248C  
                         l2742 22C2                           l2726 2238                           l2734 2256  
                         l3278 2A3A                           l2902 0EB4                           l2830 0CD8  
                         l2814 0C84                           l2822 0CAE                           l2806 0C58  
                         l3542 2976                           l3550 27AE                           l3630 185E  
                         l3622 1804                           l3470 1AB0                           l3462 1A4E  
                         l3454 1A12                           l3446 19C4                           l3438 1984  
                         l3534 2466                           l3526 240E                           l3518 23CC  
                         l3614 1602                           l3606 15D6                           l3710 116C  
                         l3702 10F4                           l2664 1EC8                           l2656 1E46  
                         l2760 24BE                           l2752 249C                           l2680 1D0C  
                         l2672 1C6E                           l2728 2242                           l2736 2290  
                         l2912 0F1E                           l2920 0F66                           l2904 0EB8  
                         l2840 0D0C                           l2832 0CDA                           l2824 0CBE  
                         l2816 0C94                           l2808 0C64                           l3552 27DC  
                         l3640 1886                           l3632 1862                           l3624 1808  
                         l3464 1A7C                           l3456 1A1A                           l3472 1AB6  
                         l3448 19E4                           l3480 1B08                           l3528 2422  
                         l3608 15DC                           l3616 1612                           l3560 137E  
                         l3712 118C                           l3720 11F2                           l3704 1118  
                         l3800 27F4                           l2666 1ECA                           l2658 1E48  
                         l2770 24C8                           l2762 24C0                           l2690 1DA0  
                         l2682 1D12                           l2674 1C72                           l2738 229A  
                         l2930 0FD0                           l2922 0F80                           l2914 0F2A  
                         l2906 0EC6                           l2850 0D52                           l2834 0CEA  
                         l2842 0D14                           l2826 0CC4                           l2818 0CA4  
                         l3554 27E0                           l3546 2796                           l3642 188E  
                         l3626 180C                           l3474 1AC6                           l3466 1A9C  
                         l3458 1A2E                           l3490 1B4C                           l3482 1B0C  
                         l3538 28BC                           l3570 13F2                           l3562 13A6  
                         l3730 12BA                           l3722 1216                           l3714 119A  
                         l3706 114E                           l3802 281C                           l3810 2678  
                         l2668 1ED0                           l2780 250E                           l2772 24DA  
                         l2764 24C2                           l2748 2480                           l2692 1DA2  
                         l2684 1D90                           l2676 1D02                           l2932 0FDE  
                         l2924 0F96                           l2916 0F38                           l2908 0EF4  
                         l2860 0D7A                           l2852 0D56                           l2844 0D24  
                         l2836 0CFA                           l2828 0CCA                           l3548 279A  
                         l3652 1936                           l3644 18C2                           l3636 1868  
                         l3628 1828                           l3476 1AE6                           l3468 1A9E  
                         l3492 1B6C                           l3484 1B1A                           l3580 143C  
                         l3572 140E                           l3564 13C6                           l3732 12DE  
                         l3740 130C                           l3724 123A                           l3708 115E  
                         l3804 2A0A                           l3812 267C                           l2790 2526  
                         l2782 2510                           l2774 2504                           l2766 24C4  
                         l2758 24B8                           l2694 1DA8                           l2686 1D98  
                         l2678 1D0A                           l2934 0FE4                           l2926 0FB0  
                         l2918 0F62                           l2870 0DC8                           l2846 0D3A  
                         l2838 0D0A                           l2950 084A                           l3654 1948  
                         l3638 187E                           l3494 1B8A                           l3486 1B3A  
                         l3398 22F4                           l3590 14D8                           l3582 1444  
                         l3574 1420                           l3566 13D6                           l3558 135E  
                         l3742 131A                           l3734 12EC                           l3726 1282  
                         l3718 11E0                           l3670 103A                           l3662 0FF2  
                         l3806 2A20                           l3814 26A4                           ?_pad 0014  
                         l2792 2526                           l2784 2512                           l2776 250A  
                         l2768 24C6                           l2688 1D9A                           l2936 0FE6  
                         l2928 0FCC                           l2880 0E12                           l2872 0DD8  
                         l2864 0D8E                           l2848 0D4A                           l2856 0D6A  
                         l2960 0890                           l2952 085A                           l2944 082E  
                         l3656 195A                           l3648 18F8                           l3496 1B92  
                         l3488 1B3E                           l3584 144A                           l3592 153C  
                         l3576 142E                           l3568 13D8                           l3736 1300  
                         l3680 1060                           l3672 1046                           l3664 1016  
                         l3760 26EA                           l3816 26BC                           l3808 2674  
                         l2794 252C                           l2786 2514                           l2778 250C  
                         l2890 0E60                           l2882 0E1E                           l2874 0DE0  
                         l2866 0DA8                           l2858 0D7A                           l2970 08BC  
                         l2962 0896                           l2954 086A                           l2946 083A  
                         l3498 1BA6                           l3594 1556                           l3586 14CC  
                         l3578 1434                           l3674 1048                           l3666 1024  
                         l3746 1326                           l3762 26F8                           l3770 275E  
                         l2796 252C                           l2788 2526                           l2892 0E76  
                         l2884 0E3C                           l2876 0DF0                           l2868 0DB8  
                         l2980 0912                           l2972 08CC                           l2964 089C  
                         l2956 087A                           l2948 0848                           l3596 1574  
                         l3588 14D2                           l3748 134A                           l3692 1072  
                         l3684 1066                           l3676 105A                           l3668 1036  
                         l3764 271E                           l3772 2766                           l3780 1EF0  
                         l2798 2532                           l2894 0E7C                           l2886 0E3E  
                         l2878 0E04                           l2990 0952                           l2974 08DC  
                         l2966 08AA                           l2958 0880                           l3598 158E  
                         l3758 26E2                           l3774 2782                           l3766 2744  
                         l3782 1F18                           l3790 2014                           l2896 0E86  
                         l2888 0E4E                           l2992 095E                           l2984 0926  
                         l2976 08E2                           l2968 08AC                           l3696 107E  
                         l3688 106C                           l3768 2756                           l3784 1F70  
                         l3792 203C                           l2898 0E94                           l2994 0976  
                         l2986 0932                           l2978 0902                           l3698 10D2  
                         l3786 1FF4                           l3778 1EE4                           l3794 2094  
                         l2996 0982                           l2988 093C                           l3796 210E  
                         l3788 2008                           l2998 098E                           l3894 10A4  
                         l3798 27E8                           l3896 18AC                           l3898 226A  
                         STR_1 0801                           STR_2 081B                           STR_3 080F  
                         STR_4 0822                           STR_5 0828                           u3000 17CE  
                         u3001 17CA                           u3010 17DC                           u3011 17D8  
                         u3020 2842                           u3021 283E                           u2400 0CD8  
                         u2320 296C                           u3200 19C4                           u2225 1DC8  
                         u2305 1D60                           u2401 0CD4                           u2321 2968  
                         u3201 19C0                           u2330 22BA                           u2410 0CEA  
                         u3130 2306                           u2235 1DE2                           u2411 0CE6  
                         u3211 19EE                           u3131 2302                           u2340 22E2  
                         u2500 0E94                           u2420 0CFA                           u3220 1A12  
                         u3300 1BE2                           u3140 2318                           u2245 1E08  
                         u2501 0E90                           u2421 0CF6                           u3221 1A0E  
                         u3301 1BDE                           u3141 2314                           u2350 22F2  
                         u2510 0EB4                           u2430 0D3A                           u3230 1A3C  
                         u3310 1C2A                           u3150 2340                           u4007 1E40  
                         u2255 1C7A                           u2351 22EE                           u2511 0EB0  
                         u2431 0D36                           u3231 1A38                           u3311 1C26  
                         u3151 233C                           u2360 24EC                           u2520 0EC6  
                         u2440 0D7A                           u2600 0848                           u3400 27DC  
                         u3240 1A7C                           u3160 2376                           u3320 23CC  
                         u4017 1E4A                           u2361 24E8                           u2265 1C9E  
                         u2337 22B0                           u2521 0EC2                           u2441 0D76  
                         u2601 0844                           u3401 27D8                           u3241 1A78  
                         u3161 2372                           u3321 23C8                           u2530 0EF4  
                         u2450 0DF0                           u2370 0C72                           u2610 085A  
                         u3250 1AC6                           u3170 28BA                           u3330 23EE  
                         u3410 138E                           u4027 1EC2                           u2275 1CC4  
                         u2347 22D8                           u2531 0EF0                           u2451 0DEC  
                         u2371 0C6E                           u2611 0856                           u3251 1AC2  
                         u3171 28B6                           u3331 23EA                           u3411 1388  
                         u2540 0F0A                           u2460 0E12                           u2380 0C84  
                         u2700 0B06                           u2620 086A                           u3260 1B1A  
                         u3180 29D6                           u3340 2444                           u3500 158E  
                         u3420 1390                           u4037 1ECC                           u2285 1CE8  
                         u2541 0F06                           u2461 0E0E                           u2381 0C80  
                         u2701 0B02                           u2621 0866                           u3261 1B16  
                         u3181 29D2                           u3341 2440                           u3501 158A  
                         u2550 0F1E                           u2470 0E3C                           u2390 0C94  
                         u2710 0B18                           u2630 08AA                           u3190 1992  
                         u3270 1B4C                           u3350 2452                           u3510 15A8  
                         u3430 13A6                           u4047 1ED8                           u2295 1D1C  
                         u2551 0F1A                           u2471 0E38                           u2391 0C90  
                         u2711 0B14                           u2631 08A6                           u3191 198E  
                         u3271 1B48                           u3351 244E                           u3511 15A4  
                         u3431 13A2                           u2800 256C                           u2560 0F38  
                         u2480 0E60                           u2720 0B46                           u2640 08BC  
                         u3600 1932                           u3280 1B8A                           u3360 28D6  
                         u3520 15B6                           u3440 13D6                           u2801 2568  
                         u2561 0F34                           u2481 0E5C                           u2721 0B42  
                         u2641 08B8                           u3281 1B86                           u3361 28D2  
                         u3521 15B2                           u3441 13D2                           u2810 2586  
                         u2570 0F80                           u2490 0E76                           u2730 0B5C  
                         u2650 08CC                           u3370 29A6                           u3610 1948  
                         u3290 1BB4                           u3530 15C8                           u3450 13F2  
                         u2811 2582                           u2571 0F7C                           u2491 0E72  
                         u2731 0B58                           u2651 08C8                           u3371 29A0  
                         u3611 1944                           u3291 1BB0                           u3531 15C4  
                         u3451 13EE                           u2820 25A4                           u2580 0FB0  
                         u2740 0B70                           u2660 0902                           u2900 21F6  
                         u3380 29A8                           u3620 195A                           u3540 15D6  
                         u3460 1420                           u3700 11F2                           u2821 25A0  
                         u2581 0FAC                           u2741 0B6C                           u2661 08FE  
                         u2901 21F2                           u3621 1956                           u3541 15D2  
                         u3461 141C                           u3701 11EE                           u2830 25BA  
                         u2590 0FDE                           u2750 0B8A                           u2670 0912  
                         u2910 2206                           u3390 27AE                           u3550 15EE  
                         u3470 142E                           u3710 1216                           u3630 1016  
                         u2831 25B6                           u2591 0FDA                           u2751 0B86  
                         u2671 090E                           u2911 2202                           u3391 27AA  
                         u3551 15EA                           u3471 142A                           u3711 1212  
                         u3631 1012                           u2840 25DE                           u2760 0BD2  
                         u2680 0A8C                           u2920 164E                           u3560 1828  
                         u3480 1556                           u3720 123A                           u3640 10E4  
                         u2841 25DA                           u2761 0BCE                           u2921 164A  
                         u3561 1824                           u3481 1552                           u3721 1236  
                         u3641 10E0                           u2770 0C00                           u2690 0AE6  
                         u2850 2138                           u2930 165C                           u3570 185E  
                         u3490 1574                           u3730 12DE                           u3650 10F2  
                         u2771 0BFC                           u2691 0AE2                           u2851 2134  
                         u2931 1658                           u3571 185A                           u3491 1570  
                         u3731 12DA                           u3651 10EE                           u2780 0C3A  
                         u2860 216C                           u2940 16B8                           u3580 187A  
                         u3660 1118                           u3740 273A                           u2781 0C36  
                         u2685 0A82                           u2941 16B4                           u3581 1876  
                         u3661 1114                           u3741 2736                           u2790 2552  
                         u2870 219A                           u2950 170E                           u3590 1930  
                         u3670 115E                           u2791 254E                           u2871 2196  
                         u2951 170A                           u3591 192A                           u3671 115A  
                         u3751 1EEA                           u2880 21AE                           u2960 1758  
                         u3680 11DA                           u3808 26C6                           u2881 21AA  
                         u2865 2162                           u2961 1754                           u3681 11D4  
                         u3761 200E                           u3809 26DA                           u2890 21D6  
                         u2970 1776                           u3690 11DC                           u3907 1D0E  
                         u2891 21D2                           u2971 1772                           u3771 27EE  
                         u2980 1786                           u3780 2690                           u3917 1D92  
                         u2981 1782                           u3781 2686                           u2990 1794  
                         u3927 1D9C                           u2991 1790                           u3847 26B0  
                         u3937 1DA4                           u3857 2954                           u3947 1DAE  
                         u3867 260A                           u3957 2492                           u3877 2646  
                         u3798 2694                           u3967 24BA                           u3887 2664  
                         u3977 24D0                           u3897 1D04                           u3987 2506  
                         u3997 251C                           _TMR2 000FCC                           _TMR3 000FB2  
                         abs@a 0016                           _dbuf 007D                           _atoi 17F0  
                         _main 2674                           _dtoa 135E                           _isrH 0008  
                         _isrL 0018                           _prec 007B                           _nout 0077  
                         pad@i 001B                           pad@p 0018                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001D                           fsr2l 000FD9  
                         btemp 005C                           prodh 000FF4                           prodl 000FF3  
                         start 007E                ___fldiv@new_exp 002E   __end_of_appStateRecolectData 2A2C  
              __end_of_Lcd_Cmd 1EE4                __end_of_Lcd_Out 22F4                   ___param_bank 000000  
                   _Lcd_Chr_CP 1C6C           __size_of_appLCD_Init 0084                          ??_abs 0018  
                        ??_pad 001A                  ___fltol@sign1 003E                __end_of___aodiv 1B08  
                        ?_atoi 000B                          ?_main 0001                          ?_dtoa 001F  
              __end_of___aomod 1C6C                          ?_isrH 0001                          ?_isrL 0001  
              __end_of_adcInit 2878                __end_of___fldiv 0FF2                          _ADRES 000FC3  
              __end_of___awmod 25F0                __end_of___flmul 0C58                __end_of___fltol 2228  
                        i1l247 006E        __end_of_appStateInitial 2A8C                          i2l252 2A86  
                 vfpfcnvrt@fmt 0045                          _PORTB 000F81                __end_of_appInit 2A44  
                        _datos 00C6                          _flags 005A                          _fputc 22F4  
                        _fputs 2878                __end_of_isdigit 29AE                          atoi@n 0018  
                        pad@fp 0014                          atoi@s 000B                          _width 0079  
                        _putch 2A8C                          dtoa@d 0021                          dtoa@i 0041  
                        dtoa@n 0039                          dtoa@p 0033                          dtoa@s 0037  
                        dtoa@w 0035                __end_of_isspace 27E8                          pclath 000FFA  
                        tablat 000FF5                          ttemp5 005D                          ttemp6 0060  
                        ttemp7 0064                          status 000FD8                          wtemp8 005D  
              __end_of_sprintf 2796           __end_of_appTimerInit 2A70               __end_of_Lcd_Init 2540  
              __initialization 28FC                   __end_of_atoi 1980                   __end_of_main 26E2  
                 __end_of_dtoa 163C                   __end_of_isrH 2A8A                   __end_of_isrL 007E  
                       ??_atoi 000D                         ??_main 00C4                         ??_dtoa 0029  
                       ??_isrH 0001                         ??_isrL 0001                  __activetblptr 000002  
                       ?_fputc 0004                         ?_fputs 000D          __size_of_appISRConfig 0008  
                       ?_putch 0001                         i1l3820 0034                         i1l3830 005E  
                       i1l3822 0042                         i1l3832 0066                         i1l3824 0044  
                       i1l3826 0048                         i1l3818 0026                         i1l3828 005A  
                    ??_Lcd_Cmd 0004                  vfpfcnvrt@done 0055                         _TMR3IE 007D01  
                       _TMR3IF 007D09                      ??_Lcd_Out 000A               __end_of___xxtofl 17F0  
                 vfprintf@cfmt 00A3                    ?_Lcd_Chr_CP 0001                         _appADC 1EE4  
                    ??___aodiv 0014                      ??___aomod 0014                         ___wmul 29E4  
                    ??_adcInit 0004                      ??___fldiv 0025                      ??___awmod 0044  
                    ??___flmul 000C                         _appBat 2008                      ??___fltol 003A  
                       clear_0 2922                ___awmod@divisor 0042                      ??_appInit 0010  
              ___awmod@counter 0044                         pad@buf 0016                         dtoa@fp 001F  
                       _strlen 29AE                   _appISRConfig 2A7C                         fputc@c 0004  
             ?_appStateInitial 0001                         fputs@c 0011                         fputs@i 0012  
                       fputs@s 000D                      ??_isdigit 0006                   __mediumconst 0000  
                    ??_isspace 0006                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8           _appStateRecolectData 2A0A              adcGetValue@PinADC 0007  
                       putch@c 0001               __end_of_vfprintf 2744                      ??_sprintf 0059  
                 ___xxtofl@arg 0012                   ___xxtofl@exp 0011                   ___xxtofl@val 0008  
                   __accesstop 0060        __end_of__initialization 292C          __end_of_appTimerStart 2A7C  
                ___rparam_used 000001                     ___fltol@f1 0036                 __pcstackCOMRAM 0001  
                 __pidataBANK0 2A44                  __end_of_fputc 23BE                  __end_of_fputs 28BC  
                __end_of_putch 2A8E             __size_of_appElemts 0048                  appBat@dataOut 00B7  
                ??_adcGetValue 0006          ?_appStateRecolectData 0001                      ?_Lcd_Init 0001  
                      ??_fputc 0008                        ??_fputs 0011            __size_of_Lcd_Chr_CP 014E  
                      ??_putch 0004          __size_of_appTimerInit 0014                     __pbssBANK0 0060  
                      ?_appADC 0001                        ?___wmul 0004                        ?_appBat 0001  
                      ?_strlen 0004                   _appTimerInit 2A5C                      ?___xxtofl 0008  
           __size_of_vfpfcnvrt 036C                     ??_Lcd_Init 0007            __end_of_adcGetValue 2976  
            __end_of_appElemts 2830                        _Lcd_Cmd 1DBA                        _Lcd_Out 2228  
                ??_appLCD_Init 000E                        __Hparam 0000                        __Lparam 0000  
                      ___aodiv 1980                        ___aomod 1B08                        _adcInit 2830  
                      ___fldiv 0C58                        ___awmod 2540                        ___flmul 082E  
                      ___fltol 2122                __size_of_appADC 0124                __size_of___wmul 0026  
              __size_of_appBat 011A                      ?_vfprintf 009D                   __psmallconst 0800  
                      __pcinit 28FC                        _appInit 2A2C                        __ramtop 0800  
                      __ptext0 2674                        __ptext1 2A8A                        __ptext2 2A0A  
                      __ptext3 27E8                        __ptext4 2008                        __ptext5 1EE4  
                      __ptext6 2744                        __ptext7 26E2                        __ptext8 0FF2  
                      __ptext9 135E                __size_of_strlen 0036                      _T2CONbits 000FCA  
                 __size_of_abs 0040                   __size_of_pad 00C2         ??_appStateRecolectData 005A  
                      _isdigit 2976                     ??___xxtofl 000C                      _T3CONbits 000FB1  
             ___awmod@dividend 0040                        _isspace 2796                        atoi@neg 0011  
                      _sprintf 2744                 __pintcode_body 2A84           end_of_initialization 292C  
                      fputc@fp 0006                  __Lmediumconst 0000                        int_func 2A84  
                      fputs@fp 000F              __end_of_vfpfcnvrt 135E                      Lcd_Init@i 0008  
                 ??_Lcd_Chr_CP 0004                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 0059            __end_of_appLCD_Init 2674                        strlen@a 0006  
                      strlen@s 0004                      _PORTBbits 000F81                    _adcGetValue 293A  
                ___xxtofl@sign 0010                      _TRISBbits 000F93                      _TRISDbits 000F95  
                  ___fldiv@grs 0030                    ___fldiv@rem 0029             __end_of_Lcd_Chr_CP 1DBA  
                  ___flmul@grs 0011                 __end_of_appADC 2008                    vfpfcnvrt@ap 0047  
                  vfpfcnvrt@fp 0043                    vfpfcnvrt@ll 004D                 __end_of___wmul 2A0A  
               __end_of_appBat 2122                 __end_of_strlen 29E4            start_initialization 28FC  
                  __end_of_abs 28FC                    __end_of_pad 2480                  Lcd_Out@buffer 0008  
     __size_of_appStateInitial 0002              __size_of_Lcd_Init 00C0             fp__appStateInitial 000E  
                  _appLCD_Init 25F0                    vfprintf@fmt 009F                       ??_appADC 0059  
                     ??___wmul 0008                       ??_appBat 0059                    __pdataBANK0 00C6  
                     ??_strlen 0006                      ___fldiv@a 0021                      ___fldiv@b 001D  
       __size_of_appTimerStart 000C                      ___flmul@a 0008                      ___flmul@b 0004  
                  __pbssCOMRAM 005A                  __pcstackBANK0 009D               ___aodiv@dividend 0004  
            __size_of___xxtofl 01B4        fp__appStateRecolectData 000E                       ?_Lcd_Cmd 0001  
                     ?_Lcd_Out 0007                      _atoi$1602 0013                      _atoi$1603 0017  
                    _atoi$1604 0015                      _appElemts 27E8                      _dtoa$1567 0031  
            appElemts@elements 00B7                      __pintcode 0008                       ?___aodiv 0004  
                     ?___aomod 0004                       ?_adcInit 0001                       ?___fldiv 001D  
             ___aodiv@quotient 0016                       ?___awmod 0040                       ?___flmul 0004  
                     ?___fltol 0036                    __pintcodelo 0018                       ?_appInit 0001  
                  appADC@F3559 0060              __size_of_vfprintf 0062                    __smallconst 0800  
                     ?_isdigit 0004                       ?_isspace 0004                      appBat@bat 00BF  
                     ?_sprintf 00A5                 __size_of_fputc 00CA                 __size_of_fputs 0044  
               __size_of_putch 0002                 ___wmul@product 0008                       _LATBbits 000F8A  
                     _LATDbits 000F8C                  _appTimerStart 2A70                       _IPR2bits 000FA2  
                     _PIE2bits 000FA0              ??_appStateInitial 0004                     ?_appElemts 00B7  
                     i1u381_20 0034                       i1u381_21 0030                       i1u382_20 0042  
                     i1u382_21 003E                       i1u383_20 005A                       i1u383_21 0056  
                     _PIR1bits 000F9E                       _PIR2bits 000FA1                       _GO_nDONE 007E11  
                     _RCONbits 000FD0                       Lcd_Out@x 0007                       Lcd_Out@y 000C  
                    _vfpfcnvrt 0FF2                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0004                  ?_appISRConfig 0001  
                 ?_adcGetValue 0004                   _isspace$1620 000A  __size_of_appStateRecolectData 0022  
                     _Lcd_Init 2480                      copy_data0 2910                 ?_appTimerStart 0001  
             __size_of_Lcd_Cmd 012A               __size_of_Lcd_Out 00CC                       __Hrparam 0000  
                   vfprintf@ap 00A1                       __Lrparam 0000                     vfprintf@fp 009D  
                  appBat@F3563 0069               __size_of___aodiv 0188               __size_of___aomod 0164  
             __size_of_adcInit 0048               __size_of___fldiv 039A               __size_of___awmod 00B0  
             __size_of___flmul 042A               __size_of___fltol 0106                  appADC@lm35val 00C0  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000C                 ??_appISRConfig 0004  
                appADC@dataOut 00B7                ___aodiv@counter 0014               __size_of_appInit 0018  
                   sprintf@fmt 00A7                       ___xxtofl 163C               appElemts@dataout 00B9  
             __size_of_isdigit 0038                 Lcd_Chr_CP@data 0006               __size_of_isspace 0052  
                     __ptext10 23BE                       __ptext11 29AE                       __ptext20 2976  
                     __ptext12 2878                       __ptext21 29E4                       __ptext13 22F4  
                     __ptext30 2A5C                       __ptext22 293A                       __ptext14 2A8C  
                     __ptext31 25F0                       __ptext23 163C                       __ptext15 28BC  
                     __ptext32 2228                       __ptext24 2122                       __ptext16 1B08  
                     __ptext33 1C6C                       __ptext25 082E                       __ptext17 1980  
                     __ptext34 2480                       __ptext26 0C58                       __ptext18 17F0  
                     __ptext35 1DBA                       __ptext27 2540                       __ptext19 2796  
                     __ptext36 2A7C                       __ptext28 2A2C                       __ptext37 2830  
                     __ptext29 2A70               __size_of_sprintf 0052                    Lcd_Cmd@data 0006  
                __size_of_atoi 0190                  __size_of_main 006E                  __size_of_dtoa 02DE  
                __size_of_isrH 2A82                  __size_of_isrL 0066                    ??_appElemts 0059  
                 ?_appLCD_Init 0001                       int$flags 005C                       _vfprintf 26E2  
             ___aomod@dividend 0004                  ?_appTimerInit 0001                    Lcd_Out@data 000D  
               _vfpfcnvrt$1582 0057                     _INTCONbits 000FF2                       isdigit@c 0004  
                     intlevel1 0000                       intlevel2 0000                      sprintf@ap 00AF  
              ??_appTimerStart 0004                       isspace@c 0004                 appElemts@F3566 0071  
              ___aomod@divisor 000C                    ??_vfpfcnvrt 0049                ___aomod@counter 0014  
               ??_appTimerInit 0004                       sprintf@f 00B1                       sprintf@s 00A5  
         __size_of_adcGetValue 003C                _appStateInitial 2A8A                   ___aodiv@sign 0015  
         __end_of_appISRConfig 2A84                   ___aomod@sign 0015  
