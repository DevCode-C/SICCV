

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat May 29 18:29:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataBANK0
    82  00191E                     __pidataBANK0:
    83                           	callstack 0
    84                           
    85                           ;initializer for _datos
    86  00191E  00                 	db	0
    87  00191F  00                 	db	0
    88  001920  22                 	db	low _appStateInitial
    89  001921  19                 	db	high _appStateInitial
    90  0000                     _TMR3	set	4018
    91  0000                     _ADRES	set	4035
    92  0000                     _INTCONbits	set	4082
    93  0000                     _RCONbits	set	4048
    94  0000                     _PIE2bits	set	4000
    95  0000                     _IPR2bits	set	4002
    96  0000                     _PIR2bits	set	4001
    97  0000                     _T3CONbits	set	4017
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PR2	set	4043
   100  0000                     _TMR2	set	4044
   101  0000                     _T2CONbits	set	4042
   102  0000                     _LATDbits	set	3980
   103  0000                     _TRISDbits	set	3989
   104  0000                     _PORTBbits	set	3969
   105  0000                     _PORTB	set	3969
   106  0000                     _LATBbits	set	3978
   107  0000                     _TRISBbits	set	3987
   108  0000                     _ADCON0bits	set	4034
   109  0000                     _ADCON2bits	set	4032
   110  0000                     _ADCON1bits	set	4033
   111  0000                     _TMR3IF	set	32009
   112  0000                     _TMR3IE	set	32001
   113  0000                     _GO_nDONE	set	32273
   114                           
   115                           	psect	smallconst
   116  000800                     __psmallconst:
   117                           	callstack 0
   118  000800  00                 	db	0
   119  000801                     STR_1:
   120  000801  42                 	db	66	;'B'
   121  000802  69                 	db	105	;'i'
   122  000803  65                 	db	101	;'e'
   123  000804  6E                 	db	110	;'n'
   124  000805  76                 	db	118	;'v'
   125  000806  65                 	db	101	;'e'
   126  000807  6E                 	db	110	;'n'
   127  000808  69                 	db	105	;'i'
   128  000809  64                 	db	100	;'d'
   129  00080A  6F                 	db	111	;'o'
   130  00080B  73                 	db	115	;'s'
   131  00080C  00                 	db	0
   132  00080D                     STR_3:
   133  00080D  41                 	db	65	;'A'
   134  00080E  44                 	db	68	;'D'
   135  00080F  43                 	db	67	;'C'
   136  000810  31                 	db	49	;'1'
   137  000811  3A                 	db	58	;':'
   138  000812  25                 	db	37
   139  000813  64                 	db	100	;'d'
   140  000814  00                 	db	0
   141  000815                     STR_4:
   142  000815  41                 	db	65	;'A'
   143  000816  44                 	db	68	;'D'
   144  000817  43                 	db	67	;'C'
   145  000818  32                 	db	50	;'2'
   146  000819  3A                 	db	58	;':'
   147  00081A  25                 	db	37
   148  00081B  64                 	db	100	;'d'
   149  00081C  00                 	db	0
   150  00081D                     STR_2:
   151  00081D  53                 	db	83	;'S'
   152  00081E  49                 	db	73	;'I'
   153  00081F  43                 	db	67	;'C'
   154  000820  43                 	db	67	;'C'
   155  000821  56                 	db	86	;'V'
   156  000822  00                 	db	0
   157  000823  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162  0017EA                     __pcinit:
   163                           	callstack 0
   164  0017EA                     start_initialization:
   165                           	callstack 0
   166  0017EA                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Initialize objects allocated to BANK0 (4 bytes)
   170                           ; load TBLPTR registers with __pidataBANK0
   171  0017EA  0E1E               	movlw	low __pidataBANK0
   172  0017EC  6EF6               	movwf	tblptrl,c
   173  0017EE  0E19               	movlw	high __pidataBANK0
   174  0017F0  6EF7               	movwf	tblptrh,c
   175  0017F2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   176  0017F4  6EF8               	movwf	tblptru,c
   177  0017F6  EE00  F0BC         	lfsr	0,__pdataBANK0
   178  0017FA  EE10 F004          	lfsr	1,4
   179  0017FE                     copy_data0:
   180  0017FE  0009               	tblrd		*+
   181  001800  CFF5 FFEE          	movff	tablat,postinc0
   182  001804  50E5               	movf	postdec1,w,c
   183  001806  50E1               	movf	fsr1l,w,c
   184  001808  E1FA               	bnz	copy_data0
   185                           
   186                           ; Clear objects allocated to BANK0 (52 bytes)
   187  00180A  EE00  F060         	lfsr	0,__pbssBANK0
   188  00180E  0E34               	movlw	52
   189  001810                     clear_0:
   190  001810  6AEE               	clrf	postinc0,c
   191  001812  06E8               	decf	wreg,f,c
   192  001814  E1FD               	bnz	clear_0
   193                           
   194                           ; Clear objects allocated to COMRAM (4 bytes)
   195  001816  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   196  001818  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   197  00181A  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   198  00181C  6A56               	clrf	__pbssCOMRAM& (0+255),c
   199  00181E                     end_of_initialization:
   200                           	callstack 0
   201  00181E                     __end_of__initialization:
   202                           	callstack 0
   203  00181E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   204  001820  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   205  001822  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206  001824  6EF8               	movwf	tblptru,c
   207  001826  0100               	movlb	0
   208  001828  EF1D  F00B         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMRAM
   211  000056                     __pbssCOMRAM:
   212                           	callstack 0
   213  000056                     _prec:
   214                           	callstack 0
   215  000056                     	ds	2
   216  000058                     _flags:
   217                           	callstack 0
   218  000058                     	ds	2
   219                           
   220                           	psect	bssBANK0
   221  000060                     __pbssBANK0:
   222                           	callstack 0
   223  000060                     	ds	16
   224  000070                     _nout:
   225                           	callstack 0
   226  000070                     	ds	2
   227  000072                     _width:
   228                           	callstack 0
   229  000072                     	ds	2
   230  000074                     _dbuf:
   231                           	callstack 0
   232  000074                     	ds	32
   233                           
   234                           	psect	dataBANK0
   235  0000BC                     __pdataBANK0:
   236                           	callstack 0
   237  0000BC                     _datos:
   238                           	callstack 0
   239  0000BC                     	ds	4
   240                           
   241                           	psect	cstackBANK0
   242  000094                     __pcstackBANK0:
   243                           	callstack 0
   244  000094                     ?_vfprintf:
   245                           	callstack 0
   246  000094                     vfprintf@fp:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x0
   250  000094                     	ds	2
   251  000096                     vfprintf@fmt:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x2
   255  000096                     	ds	2
   256  000098                     vfprintf@ap:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x4
   260  000098                     	ds	2
   261  00009A                     ?_sprintf:
   262                           	callstack 0
   263  00009A                     sprintf@s:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x6
   267  00009A                     	ds	2
   268  00009C                     sprintf@fmt:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x8
   272  00009C                     	ds	6
   273  0000A2                     sprintf@ap:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0xE
   277  0000A2                     	ds	2
   278  0000A4                     sprintf@f:
   279                           	callstack 0
   280                           
   281                           ; 6 bytes @ 0x10
   282  0000A4                     	ds	6
   283  0000AA                     appStateRecolectData@dataOut:
   284                           	callstack 0
   285                           
   286                           ; 16 bytes @ 0x16
   287  0000AA                     	ds	16
   288  0000BA                     ??_main:
   289                           
   290                           ; 1 bytes @ 0x26
   291  0000BA                     	ds	2
   292                           
   293                           	psect	cstackCOMRAM
   294  000001                     __pcstackCOMRAM:
   295                           	callstack 0
   296  000001                     ??_isr:
   297  000001                     
   298                           ; 1 bytes @ 0x0
   299  000001                     	ds	4
   300  000005                     ??_Lcd_Cmd:
   301  000005                     ??_Lcd_Chr_CP:
   302  000005                     ??_adcInit:
   303  000005                     ?_strlen:
   304                           	callstack 0
   305  000005                     ?_adcGetValue:
   306                           	callstack 0
   307  000005                     ?___aodiv:
   308                           	callstack 0
   309  000005                     ?___aomod:
   310                           	callstack 0
   311  000005                     fputc@c:
   312                           	callstack 0
   313  000005                     strlen@s:
   314                           	callstack 0
   315  000005                     ___aodiv@dividend:
   316                           	callstack 0
   317  000005                     ___aomod@dividend:
   318                           	callstack 0
   319                           
   320                           ; 8 bytes @ 0x4
   321  000005                     	ds	1
   322  000006                     adcInit@ADC_PINs:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x5
   326  000006                     	ds	1
   327  000007                     ??_adcGetValue:
   328  000007                     Lcd_Chr_CP@data:
   329                           	callstack 0
   330  000007                     Lcd_Cmd@data:
   331                           	callstack 0
   332  000007                     fputc@fp:
   333                           	callstack 0
   334  000007                     strlen@a:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x6
   338  000007                     	ds	1
   339  000008                     ??_Lcd_Init:
   340  000008                     adcGetValue@PinADC:
   341                           	callstack 0
   342  000008                     Lcd_Out@x:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x7
   346  000008                     	ds	1
   347  000009                     ??_fputc:
   348  000009                     Lcd_Init@i:
   349                           	callstack 0
   350  000009                     Lcd_Out@buffer:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x8
   354  000009                     	ds	2
   355  00000B                     ??_Lcd_Out:
   356                           
   357                           ; 1 bytes @ 0xA
   358  00000B                     	ds	2
   359  00000D                     Lcd_Out@y:
   360                           	callstack 0
   361  00000D                     ___aodiv@divisor:
   362                           	callstack 0
   363  00000D                     ___aomod@divisor:
   364                           	callstack 0
   365                           
   366                           ; 8 bytes @ 0xC
   367  00000D                     	ds	1
   368  00000E                     Lcd_Out@data:
   369                           	callstack 0
   370  00000E                     fputs@s:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xD
   374  00000E                     	ds	1
   375  00000F                     ??_appLCD_Init:
   376                           
   377                           ; 1 bytes @ 0xE
   378  00000F                     	ds	1
   379  000010                     fputs@fp:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0xF
   383  000010                     	ds	1
   384  000011                     
   385                           ; 1 bytes @ 0x10
   386  000011                     	ds	1
   387  000012                     fputs@c:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x11
   391  000012                     	ds	1
   392  000013                     fputs@i:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x12
   396  000013                     	ds	2
   397  000015                     ?_pad:
   398                           	callstack 0
   399  000015                     ___aodiv@counter:
   400                           	callstack 0
   401  000015                     ___aomod@counter:
   402                           	callstack 0
   403  000015                     pad@fp:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x14
   407  000015                     	ds	1
   408  000016                     ___aodiv@sign:
   409                           	callstack 0
   410  000016                     ___aomod@sign:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x15
   414  000016                     	ds	1
   415  000017                     ?_abs:
   416                           	callstack 0
   417  000017                     pad@buf:
   418                           	callstack 0
   419  000017                     abs@a:
   420                           	callstack 0
   421  000017                     ___aodiv@quotient:
   422                           	callstack 0
   423                           
   424                           ; 8 bytes @ 0x16
   425  000017                     	ds	2
   426  000019                     ??_abs:
   427  000019                     pad@p:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x18
   431  000019                     	ds	2
   432  00001B                     ??_pad:
   433                           
   434                           ; 1 bytes @ 0x1A
   435  00001B                     	ds	1
   436  00001C                     pad@i:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x1B
   440  00001C                     	ds	2
   441  00001E                     pad@w:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x1D
   445  00001E                     	ds	2
   446  000020                     ?_dtoa:
   447                           	callstack 0
   448  000020                     dtoa@fp:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x1F
   452  000020                     	ds	2
   453  000022                     dtoa@d:
   454                           	callstack 0
   455                           
   456                           ; 8 bytes @ 0x21
   457  000022                     	ds	8
   458  00002A                     ??_dtoa:
   459                           
   460                           ; 1 bytes @ 0x29
   461  00002A                     	ds	8
   462  000032                     _dtoa$1522:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x31
   466  000032                     	ds	2
   467  000034                     dtoa@p:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x33
   471  000034                     	ds	2
   472  000036                     dtoa@w:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x35
   476  000036                     	ds	2
   477  000038                     dtoa@s:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x37
   481  000038                     	ds	2
   482  00003A                     dtoa@n:
   483                           	callstack 0
   484                           
   485                           ; 8 bytes @ 0x39
   486  00003A                     	ds	8
   487  000042                     dtoa@i:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x41
   491  000042                     	ds	2
   492  000044                     ?_vfpfcnvrt:
   493                           	callstack 0
   494  000044                     vfpfcnvrt@fp:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x43
   498  000044                     	ds	2
   499  000046                     vfpfcnvrt@fmt:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x45
   503  000046                     	ds	2
   504  000048                     vfpfcnvrt@ap:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x47
   508  000048                     	ds	2
   509  00004A                     ??_vfpfcnvrt:
   510                           
   511                           ; 1 bytes @ 0x49
   512  00004A                     	ds	2
   513  00004C                     vfpfcnvrt@ll:
   514                           	callstack 0
   515                           
   516                           ; 8 bytes @ 0x4B
   517  00004C                     	ds	8
   518  000054                     vfprintf@cfmt:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x53
   522  000054                     	ds	2
   523  000056                     
   524                           ; 1 bytes @ 0x55
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 12 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   544 ;;      Params:         0       0       0       0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0       0       0
   546 ;;      Temps:          0       2       0       0       0       0       0       0       0
   547 ;;      Totals:         0       2       0       0       0       0       0       0       0
   548 ;;Total ram usage:        2 bytes
   549 ;; Hardware stack levels required when called:   10
   550 ;; This function calls:
   551 ;;		_appInit
   552 ;;		_appStateInitial
   553 ;;		_appStateRecolectData
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text0
   560  00163A                     __ptext0:
   561                           	callstack 0
   562  00163A                     _main:
   563                           	callstack 21
   564  00163A                     
   565                           ;main.c: 14:     TRISBbits.TRISB2 = 0;
   566  00163A  9493               	bcf	147,2,c	;volatile
   567                           
   568                           ;main.c: 15:     TRISBbits.TRISB3 = 0;
   569  00163C  9693               	bcf	147,3,c	;volatile
   570                           
   571                           ;main.c: 16:     LATBbits.LATB2 = 0;
   572  00163E  948A               	bcf	138,2,c	;volatile
   573  001640                     
   574                           ;main.c: 17:     appInit();
   575  001640  EC6F  F00C         	call	_appInit	;wreg free
   576  001644                     l2418:
   577                           
   578                           ;main.c: 19:     {;main.c: 21:         LATBbits.LATB3 = !LATBbits.LATB3;
   579  001644  A68A               	btfss	138,3,c	;volatile
   580  001646  EF27  F00B         	goto	u1921
   581  00164A  EF2C  F00B         	goto	u1920
   582  00164E                     u1921:
   583  00164E  0100               	movlb	0	; () banked
   584  001650  6BBA               	clrf	??_main& (0+255),b
   585  001652  2BBA               	incf	??_main& (0+255),f,b
   586  001654  EF2E  F00B         	goto	u1938
   587  001658                     u1920:
   588  001658  0100               	movlb	0	; () banked
   589  00165A  6BBA               	clrf	??_main& (0+255),b
   590  00165C                     u1938:
   591  00165C  47BA               	rlncf	??_main& (0+255),f,b
   592  00165E  47BA               	rlncf	??_main& (0+255),f,b
   593  001660  47BA               	rlncf	??_main& (0+255),f,b
   594  001662  508A               	movf	138,w,c	;volatile
   595  001664  19BA               	xorwf	??_main& (0+255),w,b
   596  001666  0BF7               	andlw	-9
   597  001668  19BA               	xorwf	??_main& (0+255),w,b
   598  00166A  6E8A               	movwf	138,c	;volatile
   599  00166C                     
   600                           ; BSR set to: 0
   601                           ;main.c: 22:         _delay((unsigned long)((100)*(12000000/4000.0)));
   602  00166C  0E02               	movlw	2
   603  00166E  0100               	movlb	0	; () banked
   604  001670  6FBB               	movwf	(??_main+1)& (0+255),b
   605  001672  0E86               	movlw	134
   606  001674  6FBA               	movwf	??_main& (0+255),b
   607  001676  0E99               	movlw	153
   608  001678                     u2007:
   609  001678  2EE8               	decfsz	wreg,f,c
   610  00167A  D7FE               	bra	u2007
   611  00167C  2FBA               	decfsz	??_main& (0+255),f,b
   612  00167E  D7FC               	bra	u2007
   613  001680  2FBB               	decfsz	(??_main+1)& (0+255),f,b
   614  001682  D7FA               	bra	u2007
   615  001684                     
   616                           ;main.c: 23:         datos.nextFunc();
   617  001684  EE20  F0BE         	lfsr	2,_datos+2
   618  001688  D802               	call	u1948
   619  00168A  EF51  F00B         	goto	u1949
   620  00168E                     u1948:
   621  00168E  0005               	push	
   622  001690  6EFA               	movwf	pclath,c
   623  001692  50DE               	movf	postinc2,w,c
   624  001694  6EFD               	movwf	tosl,c
   625  001696  50DE               	movf	postinc2,w,c
   626  001698  6EFE               	movwf	tosh,c
   627  00169A  50F8               	movf	tblptru,w,c
   628  00169C  6EFF               	movwf	tosu,c
   629  00169E  50FA               	movf	pclath,w,c
   630  0016A0  0012               	return		;indir
   631  0016A2                     u1949:
   632  0016A2  EF22  F00B         	goto	l2418
   633  0016A6  EF4D  F000         	goto	start
   634  0016AA                     __end_of_main:
   635                           	callstack 0
   636                           
   637 ;; *************** function _appStateInitial *****************
   638 ;; Defined at:
   639 ;;		line 30 in file "app.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		None
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   653 ;;      Params:         0       0       0       0       0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_appStateRecolectData
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text1
   669  001922                     __ptext1:
   670                           	callstack 0
   671  001922                     _appStateInitial:
   672                           	callstack 29
   673  001922  0012               	return		;funcret
   674  001924                     __end_of_appStateInitial:
   675                           	callstack 0
   676                           
   677 ;; *************** function _appStateRecolectData *****************
   678 ;; Defined at:
   679 ;;		line 21 in file "app.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  dataOut        16   22[BANK0 ] unsigned char [16]
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   693 ;;      Params:         0       0       0       0       0       0       0       0       0
   694 ;;      Locals:         0      16       0       0       0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0
   696 ;;      Totals:         0      16       0       0       0       0       0       0       0
   697 ;;Total ram usage:       16 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; Hardware stack levels required when called:    9
   700 ;; This function calls:
   701 ;;		_Lcd_Out
   702 ;;		_adcGetValue
   703 ;;		_sprintf
   704 ;; This function is called by:
   705 ;;		_isr
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text2
   711  001532                     __ptext2:
   712                           	callstack 0
   713  001532                     _appStateRecolectData:
   714                           	callstack 21
   715  001532                     
   716                           ;app.c: 23:     uint8_t dataOut[16] = {0};
   717  001532  EE20  F0AA         	lfsr	2,appStateRecolectData@dataOut
   718  001536  0E0F               	movlw	15
   719  001538                     u1911:
   720  001538  6ADE               	clrf	postinc2,c
   721  00153A  06E8               	decf	wreg,f,c
   722  00153C  E2FD               	bc	u1911
   723  00153E                     
   724                           ;app.c: 24:     sprintf((char *)dataOut,"ADC1:%d",adcGetValue(0));
   725  00153E  0EAA               	movlw	low appStateRecolectData@dataOut
   726  001540  0100               	movlb	0	; () banked
   727  001542  6F9A               	movwf	sprintf@s& (0+255),b
   728  001544  0E00               	movlw	high appStateRecolectData@dataOut
   729  001546  6F9B               	movwf	(sprintf@s+1)& (0+255),b
   730  001548  0E0D               	movlw	low STR_3
   731  00154A  6F9C               	movwf	sprintf@fmt& (0+255),b
   732  00154C  0E08               	movlw	high STR_3
   733  00154E  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
   734  001550  0E00               	movlw	0
   735  001552  EC36  F00C         	call	_adcGetValue
   736  001556  C005  F09E         	movff	?_adcGetValue,?_sprintf+4
   737  00155A  C006  F09F         	movff	?_adcGetValue+1,?_sprintf+5
   738  00155E  EC86  F00B         	call	_sprintf	;wreg free
   739  001562                     
   740                           ;app.c: 25:     Lcd_Out(1,0, (int8_t*)dataOut);
   741  001562  0E00               	movlw	0
   742  001564  6E08               	movwf	Lcd_Out@x^0,c
   743  001566  0EAA               	movlw	low appStateRecolectData@dataOut
   744  001568  6E09               	movwf	Lcd_Out@buffer^0,c
   745  00156A  0E00               	movlw	high appStateRecolectData@dataOut
   746  00156C  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
   747  00156E  0E01               	movlw	1
   748  001570  EC0D  F009         	call	_Lcd_Out
   749  001574                     
   750                           ;app.c: 26:     sprintf((char *)dataOut,"ADC2:%d",adcGetValue(1));
   751  001574  0EAA               	movlw	low appStateRecolectData@dataOut
   752  001576  0100               	movlb	0	; () banked
   753  001578  6F9A               	movwf	sprintf@s& (0+255),b
   754  00157A  0E00               	movlw	high appStateRecolectData@dataOut
   755  00157C  6F9B               	movwf	(sprintf@s+1)& (0+255),b
   756  00157E  0E15               	movlw	low STR_4
   757  001580  6F9C               	movwf	sprintf@fmt& (0+255),b
   758  001582  0E08               	movlw	high STR_4
   759  001584  6F9D               	movwf	(sprintf@fmt+1)& (0+255),b
   760  001586  0E01               	movlw	1
   761  001588  EC36  F00C         	call	_adcGetValue
   762  00158C  C005  F09E         	movff	?_adcGetValue,?_sprintf+4
   763  001590  C006  F09F         	movff	?_adcGetValue+1,?_sprintf+5
   764  001594  EC86  F00B         	call	_sprintf	;wreg free
   765  001598                     
   766                           ;app.c: 27:     Lcd_Out(2,0, (int8_t*)dataOut);
   767  001598  0E00               	movlw	0
   768  00159A  6E08               	movwf	Lcd_Out@x^0,c
   769  00159C  0EAA               	movlw	low appStateRecolectData@dataOut
   770  00159E  6E09               	movwf	Lcd_Out@buffer^0,c
   771  0015A0  0E00               	movlw	high appStateRecolectData@dataOut
   772  0015A2  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
   773  0015A4  0E02               	movlw	2
   774  0015A6  EC0D  F009         	call	_Lcd_Out
   775  0015AA                     
   776                           ;app.c: 28:     datos.nextFunc = appStateInitial;
   777  0015AA  0E22               	movlw	low _appStateInitial
   778  0015AC  0100               	movlb	0	; () banked
   779  0015AE  6FBE               	movwf	(_datos+2)& (0+255),b
   780  0015B0  0E19               	movlw	high _appStateInitial
   781  0015B2  6FBF               	movwf	(_datos+3)& (0+255),b
   782  0015B4                     
   783                           ; BSR set to: 0
   784  0015B4  0012               	return		;funcret
   785  0015B6                     __end_of_appStateRecolectData:
   786                           	callstack 0
   787                           
   788 ;; *************** function _sprintf *****************
   789 ;; Defined at:
   790 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  s               2    6[BANK0 ] PTR unsigned char 
   793 ;;		 -> appStateRecolectData@dataOut(16), 
   794 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   795 ;;		 -> STR_4(8), STR_3(8), 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  f               6   16[BANK0 ] struct _IO_FILE
   798 ;;  ap              2   14[BANK0 ] PTR void [1]
   799 ;;		 -> ?_sprintf(2), 
   800 ;;  ret             2    0        int 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  2    6[BANK0 ] int 
   803 ;; Registers used:
   804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   810 ;;      Params:         0       6       0       0       0       0       0       0       0
   811 ;;      Locals:         0      10       0       0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0
   813 ;;      Totals:         0      16       0       0       0       0       0       0       0
   814 ;;Total ram usage:       16 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    8
   817 ;; This function calls:
   818 ;;		_vfprintf
   819 ;; This function is called by:
   820 ;;		_appStateRecolectData
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text3
   825  00170C                     __ptext3:
   826                           	callstack 0
   827  00170C                     _sprintf:
   828                           	callstack 21
   829  00170C  0E9E               	movlw	low (?_sprintf+4)
   830  00170E  0100               	movlb	0	; () banked
   831  001710  6FA2               	movwf	sprintf@ap& (0+255),b
   832  001712  0E00               	movlw	high (?_sprintf+4)
   833  001714  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
   834  001716  C09A  F0A4         	movff	sprintf@s,sprintf@f
   835  00171A  C09B  F0A5         	movff	sprintf@s+1,sprintf@f+1
   836  00171E                     
   837                           ; BSR set to: 0
   838  00171E  0E00               	movlw	0
   839  001720  6FA7               	movwf	(sprintf@f+3)& (0+255),b
   840  001722  0E00               	movlw	0
   841  001724  6FA6               	movwf	(sprintf@f+2)& (0+255),b
   842  001726                     
   843                           ; BSR set to: 0
   844  001726  0E00               	movlw	0
   845  001728  6FA9               	movwf	(sprintf@f+5)& (0+255),b
   846  00172A  0E00               	movlw	0
   847  00172C  6FA8               	movwf	(sprintf@f+4)& (0+255),b
   848  00172E                     
   849                           ; BSR set to: 0
   850  00172E  0EA4               	movlw	low sprintf@f
   851  001730  6F94               	movwf	vfprintf@fp& (0+255),b
   852  001732  0E00               	movlw	high sprintf@f
   853  001734  6F95               	movwf	(vfprintf@fp+1)& (0+255),b
   854  001736  C09C  F096         	movff	sprintf@fmt,vfprintf@fmt
   855  00173A  C09D  F097         	movff	sprintf@fmt+1,vfprintf@fmt+1
   856  00173E  0EA2               	movlw	low sprintf@ap
   857  001740  6F98               	movwf	vfprintf@ap& (0+255),b
   858  001742  0E00               	movlw	high sprintf@ap
   859  001744  6F99               	movwf	(vfprintf@ap+1)& (0+255),b
   860  001746  EC55  F00B         	call	_vfprintf	;wreg free
   861  00174A  0100               	movlb	0	; () banked
   862  00174C  51A6               	movf	(sprintf@f+2)& (0+255),w,b
   863  00174E  259A               	addwf	sprintf@s& (0+255),w,b
   864  001750  6ED9               	movwf	fsr2l,c
   865  001752  51A7               	movf	(sprintf@f+3)& (0+255),w,b
   866  001754  219B               	addwfc	(sprintf@s+1)& (0+255),w,b
   867  001756  6EDA               	movwf	fsr2h,c
   868  001758  0E00               	movlw	0
   869  00175A  6EDF               	movwf	indf2,c
   870  00175C                     
   871                           ; BSR set to: 0
   872  00175C  0012               	return		;funcret
   873  00175E                     __end_of_sprintf:
   874                           	callstack 0
   875                           
   876 ;; *************** function _vfprintf *****************
   877 ;; Defined at:
   878 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   881 ;;		 -> sprintf@f(6), 
   882 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   883 ;;		 -> STR_4(8), STR_3(8), 
   884 ;;  ap              2    4[BANK0 ] PTR PTR void 
   885 ;;		 -> sprintf@ap(2), 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
   888 ;;		 -> STR_4(8), STR_3(8), 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2    0[BANK0 ] int 
   891 ;; Registers used:
   892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   898 ;;      Params:         0       6       0       0       0       0       0       0       0
   899 ;;      Locals:         2       0       0       0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0
   901 ;;      Totals:         2       6       0       0       0       0       0       0       0
   902 ;;Total ram usage:        8 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:    7
   905 ;; This function calls:
   906 ;;		_vfpfcnvrt
   907 ;; This function is called by:
   908 ;;		_sprintf
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text4
   913  0016AA                     __ptext4:
   914                           	callstack 0
   915  0016AA                     _vfprintf:
   916                           	callstack 21
   917  0016AA                     
   918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   919  0016AA  C096  F054         	movff	vfprintf@fmt,vfprintf@cfmt
   920  0016AE  C097  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   921  0016B2                     
   922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   923  0016B2  0E00               	movlw	0
   924  0016B4  0100               	movlb	0	; () banked
   925  0016B6  6F71               	movwf	(_nout+1)& (0+255),b
   926  0016B8  0E00               	movlw	0
   927  0016BA  6F70               	movwf	_nout& (0+255),b
   928                           
   929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   930  0016BC  EF73  F00B         	goto	l2388
   931  0016C0                     l2386:
   932                           
   933                           ; BSR set to: 0
   934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   935  0016C0  C094  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
   936  0016C4  C095  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   937  0016C8  0E54               	movlw	low vfprintf@cfmt
   938  0016CA  6E46               	movwf	vfpfcnvrt@fmt^0,c
   939  0016CC  0E00               	movlw	high vfprintf@cfmt
   940  0016CE  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
   941  0016D0  C098  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
   942  0016D4  C099  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   943  0016D8  EC81  F005         	call	_vfpfcnvrt	;wreg free
   944  0016DC  5044               	movf	?_vfpfcnvrt^0,w,c
   945  0016DE  0100               	movlb	0	; () banked
   946  0016E0  2770               	addwf	_nout& (0+255),f,b
   947  0016E2  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
   948  0016E4  2371               	addwfc	(_nout+1)& (0+255),f,b
   949  0016E6                     l2388:
   950                           
   951                           ; BSR set to: 0
   952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   953  0016E6  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
   954  0016EA  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   955  0016EE                     	if	0	;tblptru may be non-zero
   956  0016EE                     	endif
   957  0016EE                     	if	0	;tblptru may be non-zero
   958  0016EE                     	endif
   959  0016EE  0008               	tblrd		*
   960  0016F0  50F5               	movf	tablat,w,c
   961  0016F2  0900               	iorlw	0
   962  0016F4  A4D8               	btfss	status,2,c
   963  0016F6  EF7F  F00B         	goto	u1901
   964  0016FA  EF81  F00B         	goto	u1900
   965  0016FE                     u1901:
   966  0016FE  EF60  F00B         	goto	l2386
   967  001702                     u1900:
   968  001702                     
   969                           ; BSR set to: 0
   970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   971  001702  C070  F094         	movff	_nout,?_vfprintf
   972  001706  C071  F095         	movff	_nout+1,?_vfprintf+1
   973  00170A                     
   974                           ; BSR set to: 0
   975  00170A  0012               	return		;funcret
   976  00170C                     __end_of_vfprintf:
   977                           	callstack 0
   978                           
   979 ;; *************** function _vfpfcnvrt *****************
   980 ;; Defined at:
   981 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
   984 ;;		 -> sprintf@f(6), 
   985 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
   986 ;;		 -> vfprintf@cfmt(2), 
   987 ;;  ap              2   71[COMRAM] PTR PTR void 
   988 ;;		 -> sprintf@ap(2), 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  ll              8   75[COMRAM] long long 
   991 ;;  llu             8    0        unsigned long long 
   992 ;;  f               4    0        unsigned long long 
   993 ;;  vp              3    0        PTR void 
   994 ;;  ct              3    0        unsigned char [3]
   995 ;;  cp              3    0        PTR unsigned char 
   996 ;;  i               2    0        int 
   997 ;;  done            2    0        int 
   998 ;;  c               1    0        unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  2   67[COMRAM] int 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1008 ;;      Params:         6       0       0       0       0       0       0       0       0
  1009 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1010 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1011 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1012 ;;Total ram usage:       16 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    6
  1015 ;; This function calls:
  1016 ;;		_dtoa
  1017 ;;		_fputc
  1018 ;; This function is called by:
  1019 ;;		_vfprintf
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text5
  1024  000B02                     __ptext5:
  1025                           	callstack 0
  1026  000B02                     _vfpfcnvrt:
  1027                           	callstack 21
  1028  000B02                     
  1029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1030  000B02  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1031  000B06  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1032  000B0A  CFDE FFF6          	movff	postinc2,tblptrl
  1033  000B0E  CFDD FFF7          	movff	postdec2,tblptrh
  1034  000B12                     	if	0	;tblptru may be non-zero
  1035  000B12                     	endif
  1036  000B12                     	if	0	;tblptru may be non-zero
  1037  000B12                     	endif
  1038  000B12  0008               	tblrd		*
  1039  000B14  50F5               	movf	tablat,w,c
  1040  000B16  0A25               	xorlw	37
  1041  000B18  A4D8               	btfss	status,2,c
  1042  000B1A  EF91  F005         	goto	u1861
  1043  000B1E  EF93  F005         	goto	u1860
  1044  000B22                     u1861:
  1045  000B22  EF3F  F006         	goto	l2374
  1046  000B26                     u1860:
  1047  000B26                     
  1048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1049  000B26  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1050  000B2A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1051  000B2E  2ADE               	incf	postinc2,f,c
  1052  000B30  0E00               	movlw	0
  1053  000B32  22DD               	addwfc	postdec2,f,c
  1054  000B34                     
  1055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1056  000B34  0E00               	movlw	0
  1057  000B36  0100               	movlb	0	; () banked
  1058  000B38  6F73               	movwf	(_width+1)& (0+255),b
  1059  000B3A  0E00               	movlw	0
  1060  000B3C  6F72               	movwf	_width& (0+255),b
  1061  000B3E  C072  F058         	movff	_width,_flags
  1062  000B42  C073  F059         	movff	_width+1,_flags+1
  1063  000B46                     
  1064                           ; BSR set to: 0
  1065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1066  000B46  6856               	setf	_prec^0,c
  1067  000B48  6857               	setf	(_prec+1)^0,c
  1068  000B4A                     
  1069                           ; BSR set to: 0
  1070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1071  000B4A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1072  000B4E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1073  000B52  CFDE FFF6          	movff	postinc2,tblptrl
  1074  000B56  CFDD FFF7          	movff	postdec2,tblptrh
  1075  000B5A                     	if	0	;tblptru may be non-zero
  1076  000B5A                     	endif
  1077  000B5A                     	if	0	;tblptru may be non-zero
  1078  000B5A                     	endif
  1079  000B5A  0008               	tblrd		*
  1080  000B5C  50F5               	movf	tablat,w,c
  1081  000B5E  0A64               	xorlw	100
  1082  000B60  B4D8               	btfsc	status,2,c
  1083  000B62  EFB5  F005         	goto	u1871
  1084  000B66  EFB7  F005         	goto	u1870
  1085  000B6A                     u1871:
  1086  000B6A  EFC9  F005         	goto	l2352
  1087  000B6E                     u1870:
  1088  000B6E                     
  1089                           ; BSR set to: 0
  1090  000B6E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1091  000B72  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1092  000B76  CFDE FFF6          	movff	postinc2,tblptrl
  1093  000B7A  CFDD FFF7          	movff	postdec2,tblptrh
  1094  000B7E                     	if	0	;tblptru may be non-zero
  1095  000B7E                     	endif
  1096  000B7E                     	if	0	;tblptru may be non-zero
  1097  000B7E                     	endif
  1098  000B7E  0008               	tblrd		*
  1099  000B80  50F5               	movf	tablat,w,c
  1100  000B82  0A69               	xorlw	105
  1101  000B84  A4D8               	btfss	status,2,c
  1102  000B86  EFC7  F005         	goto	u1881
  1103  000B8A  EFC9  F005         	goto	u1880
  1104  000B8E                     u1881:
  1105  000B8E  EF09  F006         	goto	l2358
  1106  000B92                     u1880:
  1107  000B92                     l2352:
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1111  000B92  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1112  000B96  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1113  000B9A  2ADE               	incf	postinc2,f,c
  1114  000B9C  0E00               	movlw	0
  1115  000B9E  22DD               	addwfc	postdec2,f,c
  1116                           
  1117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1118  000BA0  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1119  000BA4  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1120  000BA8  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1121  000BAC  0E02               	movlw	2
  1122  000BAE  26DE               	addwf	postinc2,f,c
  1123  000BB0  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1124  000BB4  0E00               	movlw	0
  1125  000BB6  22DD               	addwfc	postdec2,f,c
  1126  000BB8  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1127  000BBC  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1128  000BC0  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  1129  000BC4  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  1130  000BC8  0E00               	movlw	0
  1131  000BCA  BE4D               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1132  000BCC  0EFF               	movlw	-1
  1133  000BCE  6E4E               	movwf	(vfpfcnvrt@ll+2)^0,c
  1134  000BD0  6E4F               	movwf	(vfpfcnvrt@ll+3)^0,c
  1135  000BD2  6E50               	movwf	(vfpfcnvrt@ll+4)^0,c
  1136  000BD4  6E51               	movwf	(vfpfcnvrt@ll+5)^0,c
  1137  000BD6  6E52               	movwf	(vfpfcnvrt@ll+6)^0,c
  1138  000BD8  6E53               	movwf	(vfpfcnvrt@ll+7)^0,c
  1139  000BDA                     
  1140                           ; BSR set to: 0
  1141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1142  000BDA  C044  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1143  000BDE  C045  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1144  000BE2  C04C  F022         	movff	vfpfcnvrt@ll,dtoa@d
  1145  000BE6  C04D  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1146  000BEA  C04E  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1147  000BEE  C04F  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1148  000BF2  C050  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1149  000BF6  C051  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1150  000BFA  C052  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1151  000BFE  C053  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1152  000C02  EC12  F004         	call	_dtoa	;wreg free
  1153  000C06  C020  F044         	movff	?_dtoa,?_vfpfcnvrt
  1154  000C0A  C021  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1155  000C0E  EF5A  F006         	goto	l969
  1156  000C12                     l2358:
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1160  000C12  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1161  000C16  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1162  000C1A  CFDE FFF6          	movff	postinc2,tblptrl
  1163  000C1E  CFDD FFF7          	movff	postdec2,tblptrh
  1164  000C22                     	if	0	;tblptru may be non-zero
  1165  000C22                     	endif
  1166  000C22                     	if	0	;tblptru may be non-zero
  1167  000C22                     	endif
  1168  000C22  0008               	tblrd		*
  1169  000C24  50F5               	movf	tablat,w,c
  1170  000C26  0A25               	xorlw	37
  1171  000C28  A4D8               	btfss	status,2,c
  1172  000C2A  EF19  F006         	goto	u1891
  1173  000C2E  EF1B  F006         	goto	u1890
  1174  000C32                     u1891:
  1175  000C32  EF32  F006         	goto	l2368
  1176  000C36                     u1890:
  1177  000C36                     
  1178                           ; BSR set to: 0
  1179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1180  000C36  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1181  000C3A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1182  000C3E  2ADE               	incf	postinc2,f,c
  1183  000C40  0E00               	movlw	0
  1184  000C42  22DD               	addwfc	postdec2,f,c
  1185  000C44                     
  1186                           ; BSR set to: 0
  1187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1188  000C44  0E00               	movlw	0
  1189  000C46  6E06               	movwf	(fputc@c+1)^0,c
  1190  000C48  0E25               	movlw	37
  1191  000C4A  6E05               	movwf	fputc@c^0,c
  1192  000C4C  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1193  000C50  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1194  000C54  EC73  F009         	call	_fputc	;wreg free
  1195  000C58                     l2364:
  1196                           
  1197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1198  000C58  0E00               	movlw	0
  1199  000C5A  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1200  000C5C  0E01               	movlw	1
  1201  000C5E  6E44               	movwf	?_vfpfcnvrt^0,c
  1202  000C60  EF5A  F006         	goto	l969
  1203  000C64                     l2368:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1207  000C64  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1208  000C68  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1209  000C6C  2ADE               	incf	postinc2,f,c
  1210  000C6E  0E00               	movlw	0
  1211  000C70  22DD               	addwfc	postdec2,f,c
  1212  000C72                     
  1213                           ; BSR set to: 0
  1214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1215  000C72  0E00               	movlw	0
  1216  000C74  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1217  000C76  0E00               	movlw	0
  1218  000C78  6E44               	movwf	?_vfpfcnvrt^0,c
  1219  000C7A  EF5A  F006         	goto	l969
  1220  000C7E                     l2374:
  1221                           
  1222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1223  000C7E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1224  000C82  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1225  000C86  CFDE FFF6          	movff	postinc2,tblptrl
  1226  000C8A  CFDD FFF7          	movff	postdec2,tblptrh
  1227  000C8E                     	if	0	;tblptru may be non-zero
  1228  000C8E                     	endif
  1229  000C8E                     	if	0	;tblptru may be non-zero
  1230  000C8E                     	endif
  1231  000C8E  0008               	tblrd		*
  1232  000C90  50F5               	movf	tablat,w,c
  1233  000C92  6E05               	movwf	fputc@c^0,c
  1234  000C94  6A06               	clrf	(fputc@c+1)^0,c
  1235  000C96  C044  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1236  000C9A  C045  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1237  000C9E  EC73  F009         	call	_fputc	;wreg free
  1238  000CA2                     
  1239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1240  000CA2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1241  000CA6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1242  000CAA  2ADE               	incf	postinc2,f,c
  1243  000CAC  0E00               	movlw	0
  1244  000CAE  22DD               	addwfc	postdec2,f,c
  1245  000CB0  EF2C  F006         	goto	l2364
  1246  000CB4                     l969:
  1247  000CB4  0012               	return		;funcret
  1248  000CB6                     __end_of_vfpfcnvrt:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _dtoa *****************
  1252 ;; Defined at:
  1253 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1256 ;;		 -> sprintf@f(6), 
  1257 ;;  d               8   33[COMRAM] long long 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  n               8   57[COMRAM] long long 
  1260 ;;  i               2   65[COMRAM] int 
  1261 ;;  s               2   55[COMRAM] int 
  1262 ;;  w               2   53[COMRAM] int 
  1263 ;;  p               2   51[COMRAM] int 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  2   31[COMRAM] int 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1273 ;;      Params:        10       0       0       0       0       0       0       0       0
  1274 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1275 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1276 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1277 ;;Total ram usage:       36 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    5
  1280 ;; This function calls:
  1281 ;;		___aodiv
  1282 ;;		___aomod
  1283 ;;		_abs
  1284 ;;		_pad
  1285 ;; This function is called by:
  1286 ;;		_vfpfcnvrt
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text6
  1291  000824                     __ptext6:
  1292                           	callstack 0
  1293  000824                     _dtoa:
  1294                           	callstack 21
  1295  000824                     
  1296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1297  000824  C022  F03A         	movff	dtoa@d,dtoa@n
  1298  000828  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  1299  00082C  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  1300  000830  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  1301  000834  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  1302  000838  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  1303  00083C  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  1304  000840  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  1305  000844                     
  1306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1307  000844  BE41               	btfsc	(dtoa@n+7)^0,7,c
  1308  000846  EF27  F004         	goto	u1711
  1309  00084A  EF2A  F004         	goto	u1710
  1310  00084E                     u1711:
  1311  00084E  0E01               	movlw	1
  1312  000850  EF2B  F004         	goto	u1720
  1313  000854                     u1710:
  1314  000854  0E00               	movlw	0
  1315  000856                     u1720:
  1316  000856  6E38               	movwf	dtoa@s^0,c
  1317  000858  6A39               	clrf	(dtoa@s+1)^0,c
  1318                           
  1319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1320  00085A  5038               	movf	dtoa@s^0,w,c
  1321  00085C  1039               	iorwf	(dtoa@s+1)^0,w,c
  1322  00085E  B4D8               	btfsc	status,2,c
  1323  000860  EF34  F004         	goto	u1731
  1324  000864  EF36  F004         	goto	u1730
  1325  000868                     u1731:
  1326  000868  EF46  F004         	goto	l2284
  1327  00086C                     u1730:
  1328  00086C                     
  1329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1330  00086C  1E41               	comf	(dtoa@n+7)^0,f,c
  1331  00086E  1E40               	comf	(dtoa@n+6)^0,f,c
  1332  000870  1E3F               	comf	(dtoa@n+5)^0,f,c
  1333  000872  1E3E               	comf	(dtoa@n+4)^0,f,c
  1334  000874  1E3D               	comf	(dtoa@n+3)^0,f,c
  1335  000876  1E3C               	comf	(dtoa@n+2)^0,f,c
  1336  000878  1E3B               	comf	(dtoa@n+1)^0,f,c
  1337  00087A  6C3A               	negf	dtoa@n^0,c
  1338  00087C  0E00               	movlw	0
  1339  00087E  223B               	addwfc	(dtoa@n+1)^0,f,c
  1340  000880  223C               	addwfc	(dtoa@n+2)^0,f,c
  1341  000882  223D               	addwfc	(dtoa@n+3)^0,f,c
  1342  000884  223E               	addwfc	(dtoa@n+4)^0,f,c
  1343  000886  223F               	addwfc	(dtoa@n+5)^0,f,c
  1344  000888  2240               	addwfc	(dtoa@n+6)^0,f,c
  1345  00088A  2241               	addwfc	(dtoa@n+7)^0,f,c
  1346  00088C                     l2284:
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1349  00088C  BE57               	btfsc	(_prec+1)^0,7,c
  1350  00088E  EF4B  F004         	goto	u1741
  1351  000892  EF4D  F004         	goto	u1740
  1352  000896                     u1741:
  1353  000896  EF4E  F004         	goto	l2288
  1354  00089A                     u1740:
  1355  00089A                     
  1356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1357  00089A  9258               	bcf	_flags^0,1,c
  1358  00089C                     l2288:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1361  00089C  BE57               	btfsc	(_prec+1)^0,7,c
  1362  00089E  EF5B  F004         	goto	u1750
  1363  0008A2  5057               	movf	(_prec+1)^0,w,c
  1364  0008A4  E106               	bnz	u1751
  1365  0008A6  0456               	decf	_prec^0,w,c
  1366  0008A8  B0D8               	btfsc	status,0,c
  1367  0008AA  EF59  F004         	goto	u1751
  1368  0008AE  EF5B  F004         	goto	u1750
  1369  0008B2                     u1751:
  1370  0008B2  EF61  F004         	goto	l942
  1371  0008B6                     u1750:
  1372  0008B6  0E00               	movlw	0
  1373  0008B8  6E35               	movwf	(dtoa@p+1)^0,c
  1374  0008BA  0E01               	movlw	1
  1375  0008BC  6E34               	movwf	dtoa@p^0,c
  1376  0008BE  EF65  F004         	goto	l944
  1377  0008C2                     l942:
  1378  0008C2  C056  F034         	movff	_prec,dtoa@p
  1379  0008C6  C057  F035         	movff	_prec+1,dtoa@p+1
  1380  0008CA                     l944:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1383  0008CA  C072  F036         	movff	_width,dtoa@w
  1384  0008CE  C073  F037         	movff	_width+1,dtoa@w+1
  1385  0008D2                     
  1386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1387  0008D2  5038               	movf	dtoa@s^0,w,c
  1388  0008D4  1039               	iorwf	(dtoa@s+1)^0,w,c
  1389  0008D6  A4D8               	btfss	status,2,c
  1390  0008D8  EF70  F004         	goto	u1761
  1391  0008DC  EF72  F004         	goto	u1760
  1392  0008E0                     u1761:
  1393  0008E0  EF79  F004         	goto	l2296
  1394  0008E4                     u1760:
  1395  0008E4  A458               	btfss	_flags^0,2,c
  1396  0008E6  EF77  F004         	goto	u1771
  1397  0008EA  EF79  F004         	goto	u1770
  1398  0008EE                     u1771:
  1399  0008EE  EF7C  F004         	goto	l2298
  1400  0008F2                     u1770:
  1401  0008F2                     l2296:
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  1404  0008F2  0636               	decf	dtoa@w^0,f,c
  1405  0008F4  A0D8               	btfss	status,0,c
  1406  0008F6  0637               	decf	(dtoa@w+1)^0,f,c
  1407  0008F8                     l2298:
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1410  0008F8  0E00               	movlw	0
  1411  0008FA  6E43               	movwf	(dtoa@i+1)^0,c
  1412  0008FC  0E1F               	movlw	31
  1413  0008FE  6E42               	movwf	dtoa@i^0,c
  1414  000900                     
  1415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1416  000900  0E00               	movlw	0
  1417  000902  0100               	movlb	0	; () banked
  1418  000904  6F93               	movwf	(_dbuf+31)& (0+255),b
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1421  000906  EF01  F005         	goto	l2312
  1422  00090A                     l2302:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  1425  00090A  0642               	decf	dtoa@i^0,f,c
  1426  00090C  A0D8               	btfss	status,0,c
  1427  00090E  0643               	decf	(dtoa@i+1)^0,f,c
  1428  000910                     
  1429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1430  000910  0E74               	movlw	low _dbuf
  1431  000912  2442               	addwf	dtoa@i^0,w,c
  1432  000914  6ED9               	movwf	fsr2l,c
  1433  000916  0E00               	movlw	high _dbuf
  1434  000918  2043               	addwfc	(dtoa@i+1)^0,w,c
  1435  00091A  6EDA               	movwf	fsr2h,c
  1436  00091C  C03A  F005         	movff	dtoa@n,___aomod@dividend
  1437  000920  C03B  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1438  000924  C03C  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1439  000928  C03D  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1440  00092C  C03E  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1441  000930  C03F  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1442  000934  C040  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1443  000938  C041  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1444  00093C  0E0A               	movlw	10
  1445  00093E  6E0D               	movwf	___aomod@divisor^0,c
  1446  000940  0E00               	movlw	0
  1447  000942  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1448  000944  0E00               	movlw	0
  1449  000946  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1450  000948  0E00               	movlw	0
  1451  00094A  6E10               	movwf	(___aomod@divisor+3)^0,c
  1452  00094C  0E00               	movlw	0
  1453  00094E  6E11               	movwf	(___aomod@divisor+4)^0,c
  1454  000950  0E00               	movlw	0
  1455  000952  6E12               	movwf	(___aomod@divisor+5)^0,c
  1456  000954  0E00               	movlw	0
  1457  000956  6E13               	movwf	(___aomod@divisor+6)^0,c
  1458  000958  0E00               	movlw	0
  1459  00095A  6E14               	movwf	(___aomod@divisor+7)^0,c
  1460  00095C  EC1F  F007         	call	___aomod	;wreg free
  1461  000960  C005  F02A         	movff	?___aomod,??_dtoa
  1462  000964  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1463  000968  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1464  00096C  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1465  000970  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1466  000974  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1467  000978  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1468  00097C  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1469  000980  C02A  F017         	movff	??_dtoa,abs@a
  1470  000984  C02C  F018         	movff	??_dtoa+2,abs@a+1
  1471  000988  EC16  F00C         	call	_abs	;wreg free
  1472  00098C  5017               	movf	?_abs^0,w,c
  1473  00098E  0F30               	addlw	48
  1474  000990  6EDF               	movwf	indf2,c
  1475  000992                     
  1476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  1477  000992  0634               	decf	dtoa@p^0,f,c
  1478  000994  A0D8               	btfss	status,0,c
  1479  000996  0635               	decf	(dtoa@p+1)^0,f,c
  1480  000998                     
  1481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  1482  000998  0636               	decf	dtoa@w^0,f,c
  1483  00099A  A0D8               	btfss	status,0,c
  1484  00099C  0637               	decf	(dtoa@w+1)^0,f,c
  1485  00099E                     
  1486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1487  00099E  C03A  F005         	movff	dtoa@n,___aodiv@dividend
  1488  0009A2  C03B  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1489  0009A6  C03C  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1490  0009AA  C03D  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1491  0009AE  C03E  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1492  0009B2  C03F  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1493  0009B6  C040  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1494  0009BA  C041  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1495  0009BE  0E0A               	movlw	10
  1496  0009C0  6E0D               	movwf	___aodiv@divisor^0,c
  1497  0009C2  0E00               	movlw	0
  1498  0009C4  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1499  0009C6  0E00               	movlw	0
  1500  0009C8  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1501  0009CA  0E00               	movlw	0
  1502  0009CC  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1503  0009CE  0E00               	movlw	0
  1504  0009D0  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1505  0009D2  0E00               	movlw	0
  1506  0009D4  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1507  0009D6  0E00               	movlw	0
  1508  0009D8  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1509  0009DA  0E00               	movlw	0
  1510  0009DC  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1511  0009DE  EC5B  F006         	call	___aodiv	;wreg free
  1512  0009E2  C005  F03A         	movff	?___aodiv,dtoa@n
  1513  0009E6  C006  F03B         	movff	?___aodiv+1,dtoa@n+1
  1514  0009EA  C007  F03C         	movff	?___aodiv+2,dtoa@n+2
  1515  0009EE  C008  F03D         	movff	?___aodiv+3,dtoa@n+3
  1516  0009F2  C009  F03E         	movff	?___aodiv+4,dtoa@n+4
  1517  0009F6  C00A  F03F         	movff	?___aodiv+5,dtoa@n+5
  1518  0009FA  C00B  F040         	movff	?___aodiv+6,dtoa@n+6
  1519  0009FE  C00C  F041         	movff	?___aodiv+7,dtoa@n+7
  1520  000A02                     l2312:
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1523  000A02  BE43               	btfsc	(dtoa@i+1)^0,7,c
  1524  000A04  EF0C  F005         	goto	u1781
  1525  000A08  5043               	movf	(dtoa@i+1)^0,w,c
  1526  000A0A  E108               	bnz	u1780
  1527  000A0C  0442               	decf	dtoa@i^0,w,c
  1528  000A0E  A0D8               	btfss	status,0,c
  1529  000A10  EF0C  F005         	goto	u1781
  1530  000A14  EF0E  F005         	goto	u1780
  1531  000A18                     u1781:
  1532  000A18  EF3E  F005         	goto	l2322
  1533  000A1C                     u1780:
  1534  000A1C  503A               	movf	dtoa@n^0,w,c
  1535  000A1E  103B               	iorwf	(dtoa@n+1)^0,w,c
  1536  000A20  103C               	iorwf	(dtoa@n+2)^0,w,c
  1537  000A22  103D               	iorwf	(dtoa@n+3)^0,w,c
  1538  000A24  103E               	iorwf	(dtoa@n+4)^0,w,c
  1539  000A26  103F               	iorwf	(dtoa@n+5)^0,w,c
  1540  000A28  1040               	iorwf	(dtoa@n+6)^0,w,c
  1541  000A2A  1041               	iorwf	(dtoa@n+7)^0,w,c
  1542  000A2C  A4D8               	btfss	status,2,c
  1543  000A2E  EF1B  F005         	goto	u1791
  1544  000A32  EF1D  F005         	goto	u1790
  1545  000A36                     u1791:
  1546  000A36  EF85  F004         	goto	l2302
  1547  000A3A                     u1790:
  1548  000A3A  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1549  000A3C  EF2A  F005         	goto	u1800
  1550  000A40  5035               	movf	(dtoa@p+1)^0,w,c
  1551  000A42  E106               	bnz	u1801
  1552  000A44  0434               	decf	dtoa@p^0,w,c
  1553  000A46  B0D8               	btfsc	status,0,c
  1554  000A48  EF28  F005         	goto	u1801
  1555  000A4C  EF2A  F005         	goto	u1800
  1556  000A50                     u1801:
  1557  000A50  EF85  F004         	goto	l2302
  1558  000A54                     u1800:
  1559  000A54  BE37               	btfsc	(dtoa@w+1)^0,7,c
  1560  000A56  EF35  F005         	goto	u1811
  1561  000A5A  5037               	movf	(dtoa@w+1)^0,w,c
  1562  000A5C  E108               	bnz	u1810
  1563  000A5E  0436               	decf	dtoa@w^0,w,c
  1564  000A60  A0D8               	btfss	status,0,c
  1565  000A62  EF35  F005         	goto	u1811
  1566  000A66  EF37  F005         	goto	u1810
  1567  000A6A                     u1811:
  1568  000A6A  EF3E  F005         	goto	l2322
  1569  000A6E                     u1810:
  1570  000A6E  B258               	btfsc	_flags^0,1,c
  1571  000A70  EF3C  F005         	goto	u1821
  1572  000A74  EF3E  F005         	goto	u1820
  1573  000A78                     u1821:
  1574  000A78  EF85  F004         	goto	l2302
  1575  000A7C                     u1820:
  1576  000A7C                     l2322:
  1577                           
  1578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1579  000A7C  5038               	movf	dtoa@s^0,w,c
  1580  000A7E  1039               	iorwf	(dtoa@s+1)^0,w,c
  1581  000A80  A4D8               	btfss	status,2,c
  1582  000A82  EF45  F005         	goto	u1831
  1583  000A86  EF47  F005         	goto	u1830
  1584  000A8A                     u1831:
  1585  000A8A  EF4E  F005         	goto	l2326
  1586  000A8E                     u1830:
  1587  000A8E  A458               	btfss	_flags^0,2,c
  1588  000A90  EF4C  F005         	goto	u1841
  1589  000A94  EF4E  F005         	goto	u1840
  1590  000A98                     u1841:
  1591  000A98  EF6C  F005         	goto	l2336
  1592  000A9C                     u1840:
  1593  000A9C                     l2326:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  1596  000A9C  0642               	decf	dtoa@i^0,f,c
  1597  000A9E  A0D8               	btfss	status,0,c
  1598  000AA0  0643               	decf	(dtoa@i+1)^0,f,c
  1599  000AA2                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1601  000AA2  5038               	movf	dtoa@s^0,w,c
  1602  000AA4  1039               	iorwf	(dtoa@s+1)^0,w,c
  1603  000AA6  A4D8               	btfss	status,2,c
  1604  000AA8  EF58  F005         	goto	u1851
  1605  000AAC  EF5A  F005         	goto	u1850
  1606  000AB0                     u1851:
  1607  000AB0  EF60  F005         	goto	l2332
  1608  000AB4                     u1850:
  1609  000AB4  0E00               	movlw	0
  1610  000AB6  6E33               	movwf	(_dtoa$1522+1)^0,c
  1611  000AB8  0E2B               	movlw	43
  1612  000ABA  6E32               	movwf	_dtoa$1522^0,c
  1613  000ABC  EF64  F005         	goto	l2334
  1614  000AC0                     l2332:
  1615  000AC0  0E00               	movlw	0
  1616  000AC2  6E33               	movwf	(_dtoa$1522+1)^0,c
  1617  000AC4  0E2D               	movlw	45
  1618  000AC6  6E32               	movwf	_dtoa$1522^0,c
  1619  000AC8                     l2334:
  1620  000AC8  0E74               	movlw	low _dbuf
  1621  000ACA  2442               	addwf	dtoa@i^0,w,c
  1622  000ACC  6ED9               	movwf	fsr2l,c
  1623  000ACE  0E00               	movlw	high _dbuf
  1624  000AD0  2043               	addwfc	(dtoa@i+1)^0,w,c
  1625  000AD2  6EDA               	movwf	fsr2h,c
  1626  000AD4  C032  FFDF         	movff	_dtoa$1522,indf2
  1627  000AD8                     l2336:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1630  000AD8  C020  F015         	movff	dtoa@fp,pad@fp
  1631  000ADC  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1632  000AE0  0E74               	movlw	low _dbuf
  1633  000AE2  2442               	addwf	dtoa@i^0,w,c
  1634  000AE4  6E17               	movwf	pad@buf^0,c
  1635  000AE6  0E00               	movlw	high _dbuf
  1636  000AE8  2043               	addwfc	(dtoa@i+1)^0,w,c
  1637  000AEA  6E18               	movwf	(pad@buf+1)^0,c
  1638  000AEC  C036  F019         	movff	dtoa@w,pad@p
  1639  000AF0  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1640  000AF4  ECD8  F009         	call	_pad	;wreg free
  1641  000AF8  C015  F020         	movff	?_pad,?_dtoa
  1642  000AFC  C016  F021         	movff	?_pad+1,?_dtoa+1
  1643  000B00  0012               	return		;funcret
  1644  000B02                     __end_of_dtoa:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _pad *****************
  1648 ;; Defined at:
  1649 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1652 ;;		 -> sprintf@f(6), 
  1653 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1654 ;;		 -> dbuf(32), 
  1655 ;;  p               2   24[COMRAM] int 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  w               2   29[COMRAM] int 
  1658 ;;  i               2   27[COMRAM] int 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2   20[COMRAM] int 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         6       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1671 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:       11 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    4
  1675 ;; This function calls:
  1676 ;;		_fputc
  1677 ;;		_fputs
  1678 ;;		_strlen
  1679 ;; This function is called by:
  1680 ;;		_dtoa
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text7
  1685  0013B0                     __ptext7:
  1686                           	callstack 0
  1687  0013B0                     _pad:
  1688                           	callstack 21
  1689  0013B0                     
  1690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1691  0013B0  A058               	btfss	_flags^0,0,c
  1692  0013B2  EFDD  F009         	goto	u1661
  1693  0013B6  EFDF  F009         	goto	u1660
  1694  0013BA                     u1661:
  1695  0013BA  EFE9  F009         	goto	l2256
  1696  0013BE                     u1660:
  1697  0013BE                     
  1698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1699  0013BE  C017  F00E         	movff	pad@buf,fputs@s
  1700  0013C2  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1701  0013C6  C015  F010         	movff	pad@fp,fputs@fp
  1702  0013CA  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1703  0013CE  ECD3  F00B         	call	_fputs	;wreg free
  1704  0013D2                     l2256:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1707  0013D2  BE1A               	btfsc	(pad@p+1)^0,7,c
  1708  0013D4  EFEE  F009         	goto	u1671
  1709  0013D8  EFF0  F009         	goto	u1670
  1710  0013DC                     u1671:
  1711  0013DC  EFF6  F009         	goto	l2260
  1712  0013E0                     u1670:
  1713  0013E0  C019  F01E         	movff	pad@p,pad@w
  1714  0013E4  C01A  F01F         	movff	pad@p+1,pad@w+1
  1715  0013E8  EFFA  F009         	goto	l931
  1716  0013EC                     l2260:
  1717  0013EC  0E00               	movlw	0
  1718  0013EE  6E1F               	movwf	(pad@w+1)^0,c
  1719  0013F0  0E00               	movlw	0
  1720  0013F2  6E1E               	movwf	pad@w^0,c
  1721  0013F4                     l931:
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1724  0013F4  0E00               	movlw	0
  1725  0013F6  6E1D               	movwf	(pad@i+1)^0,c
  1726  0013F8  0E00               	movlw	0
  1727  0013FA  6E1C               	movwf	pad@i^0,c
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1730  0013FC  EF0C  F00A         	goto	l2266
  1731  001400                     l2262:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1734  001400  0E00               	movlw	0
  1735  001402  6E06               	movwf	(fputc@c+1)^0,c
  1736  001404  0E20               	movlw	32
  1737  001406  6E05               	movwf	fputc@c^0,c
  1738  001408  C015  F007         	movff	pad@fp,fputc@fp
  1739  00140C  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1740  001410  EC73  F009         	call	_fputc	;wreg free
  1741  001414                     
  1742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1743  001414  4A1C               	infsnz	pad@i^0,f,c
  1744  001416  2A1D               	incf	(pad@i+1)^0,f,c
  1745  001418                     l2266:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1748  001418  501E               	movf	pad@w^0,w,c
  1749  00141A  5C1C               	subwf	pad@i^0,w,c
  1750  00141C  501D               	movf	(pad@i+1)^0,w,c
  1751  00141E  0A80               	xorlw	128
  1752  001420  6E1B               	movwf	??_pad^0,c
  1753  001422  501F               	movf	(pad@w+1)^0,w,c
  1754  001424  0A80               	xorlw	128
  1755  001426  581B               	subwfb	??_pad^0,w,c
  1756  001428  A0D8               	btfss	status,0,c
  1757  00142A  EF19  F00A         	goto	u1681
  1758  00142E  EF1B  F00A         	goto	u1680
  1759  001432                     u1681:
  1760  001432  EF00  F00A         	goto	l2262
  1761  001436                     u1680:
  1762  001436                     
  1763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1764  001436  B058               	btfsc	_flags^0,0,c
  1765  001438  EF20  F00A         	goto	u1691
  1766  00143C  EF22  F00A         	goto	u1690
  1767  001440                     u1691:
  1768  001440  EF2C  F00A         	goto	l2270
  1769  001444                     u1690:
  1770  001444                     
  1771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1772  001444  C017  F00E         	movff	pad@buf,fputs@s
  1773  001448  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1774  00144C  C015  F010         	movff	pad@fp,fputs@fp
  1775  001450  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1776  001454  ECD3  F00B         	call	_fputs	;wreg free
  1777  001458                     l2270:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1780  001458  C017  F005         	movff	pad@buf,strlen@s
  1781  00145C  C018  F006         	movff	pad@buf+1,strlen@s+1
  1782  001460  EC54  F00C         	call	_strlen	;wreg free
  1783  001464  501E               	movf	pad@w^0,w,c
  1784  001466  2405               	addwf	?_strlen^0,w,c
  1785  001468  6E15               	movwf	?_pad^0,c
  1786  00146A  501F               	movf	(pad@w+1)^0,w,c
  1787  00146C  2006               	addwfc	(?_strlen+1)^0,w,c
  1788  00146E  6E16               	movwf	(?_pad+1)^0,c
  1789  001470  0012               	return		;funcret
  1790  001472                     __end_of_pad:
  1791                           	callstack 0
  1792                           
  1793 ;; *************** function _strlen *****************
  1794 ;; Defined at:
  1795 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1798 ;;		 -> dbuf(32), 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  a               2    6[COMRAM] PTR const unsigned char 
  1801 ;;		 -> dbuf(32), 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  2    4[COMRAM] unsigned int 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1811 ;;      Params:         2       0       0       0       0       0       0       0       0
  1812 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1814 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1815 ;;Total ram usage:        4 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_pad
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text8
  1826  0018A8                     __ptext8:
  1827                           	callstack 0
  1828  0018A8                     _strlen:
  1829                           	callstack 23
  1830  0018A8  C005  F007         	movff	strlen@s,strlen@a
  1831  0018AC  C006  F008         	movff	strlen@s+1,strlen@a+1
  1832  0018B0  EF5C  F00C         	goto	l2166
  1833  0018B4                     l2164:
  1834  0018B4  4A05               	infsnz	strlen@s^0,f,c
  1835  0018B6  2A06               	incf	(strlen@s+1)^0,f,c
  1836  0018B8                     l2166:
  1837  0018B8  C005  FFD9         	movff	strlen@s,fsr2l
  1838  0018BC  C006  FFDA         	movff	strlen@s+1,fsr2h
  1839  0018C0  50DF               	movf	indf2,w,c
  1840  0018C2  A4D8               	btfss	status,2,c
  1841  0018C4  EF66  F00C         	goto	u1521
  1842  0018C8  EF68  F00C         	goto	u1520
  1843  0018CC                     u1521:
  1844  0018CC  EF5A  F00C         	goto	l2164
  1845  0018D0                     u1520:
  1846  0018D0  5007               	movf	strlen@a^0,w,c
  1847  0018D2  5C05               	subwf	strlen@s^0,w,c
  1848  0018D4  6E05               	movwf	?_strlen^0,c
  1849  0018D6  5008               	movf	(strlen@a+1)^0,w,c
  1850  0018D8  5806               	subwfb	(strlen@s+1)^0,w,c
  1851  0018DA  6E06               	movwf	(?_strlen+1)^0,c
  1852  0018DC  0012               	return		;funcret
  1853  0018DE                     __end_of_strlen:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _fputs *****************
  1857 ;; Defined at:
  1858 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1861 ;;		 -> dbuf(32), 
  1862 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1863 ;;		 -> sprintf@f(6), 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  i               2   18[COMRAM] int 
  1866 ;;  c               1   17[COMRAM] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  2   13[COMRAM] int 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1876 ;;      Params:         4       0       0       0       0       0       0       0       0
  1877 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1879 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1880 ;;Total ram usage:        7 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    3
  1883 ;; This function calls:
  1884 ;;		_fputc
  1885 ;; This function is called by:
  1886 ;;		_pad
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text9
  1891  0017A6                     __ptext9:
  1892                           	callstack 0
  1893  0017A6                     _fputs:
  1894                           	callstack 21
  1895  0017A6  0E00               	movlw	0
  1896  0017A8  6E14               	movwf	(fputs@i+1)^0,c
  1897  0017AA  0E00               	movlw	0
  1898  0017AC  6E13               	movwf	fputs@i^0,c
  1899  0017AE  EFE4  F00B         	goto	l2160
  1900  0017B2                     l2156:
  1901  0017B2  C012  F005         	movff	fputs@c,fputc@c
  1902  0017B6  6A06               	clrf	(fputc@c+1)^0,c
  1903  0017B8  C010  F007         	movff	fputs@fp,fputc@fp
  1904  0017BC  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1905  0017C0  EC73  F009         	call	_fputc	;wreg free
  1906  0017C4  4A13               	infsnz	fputs@i^0,f,c
  1907  0017C6  2A14               	incf	(fputs@i+1)^0,f,c
  1908  0017C8                     l2160:
  1909  0017C8  5013               	movf	fputs@i^0,w,c
  1910  0017CA  240E               	addwf	fputs@s^0,w,c
  1911  0017CC  6ED9               	movwf	fsr2l,c
  1912  0017CE  5014               	movf	(fputs@i+1)^0,w,c
  1913  0017D0  200F               	addwfc	(fputs@s+1)^0,w,c
  1914  0017D2  6EDA               	movwf	fsr2h,c
  1915  0017D4  50DF               	movf	indf2,w,c
  1916  0017D6  6E12               	movwf	fputs@c^0,c
  1917  0017D8  5012               	movf	fputs@c^0,w,c
  1918  0017DA  A4D8               	btfss	status,2,c
  1919  0017DC  EFF2  F00B         	goto	u1511
  1920  0017E0  EFF4  F00B         	goto	u1510
  1921  0017E4                     u1511:
  1922  0017E4  EFD9  F00B         	goto	l2156
  1923  0017E8                     u1510:
  1924  0017E8  0012               	return		;funcret
  1925  0017EA                     __end_of_fputs:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _fputc *****************
  1929 ;; Defined at:
  1930 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  c               2    4[COMRAM] int 
  1933 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1934 ;;		 -> sprintf@f(6), 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2    4[COMRAM] int 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1946 ;;      Params:         4       0       0       0       0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1948 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1949 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1950 ;;Total ram usage:        9 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    2
  1953 ;; This function calls:
  1954 ;;		_putch
  1955 ;; This function is called by:
  1956 ;;		_pad
  1957 ;;		_vfpfcnvrt
  1958 ;;		_fputs
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text10
  1963  0012E6                     __ptext10:
  1964                           	callstack 0
  1965  0012E6                     _fputc:
  1966                           	callstack 24
  1967  0012E6  5007               	movf	fputc@fp^0,w,c
  1968  0012E8  1008               	iorwf	(fputc@fp+1)^0,w,c
  1969  0012EA  B4D8               	btfsc	status,2,c
  1970  0012EC  EF7A  F009         	goto	u1471
  1971  0012F0  EF7C  F009         	goto	u1470
  1972  0012F4                     u1471:
  1973  0012F4  EF85  F009         	goto	l2144
  1974  0012F8                     u1470:
  1975  0012F8  5007               	movf	fputc@fp^0,w,c
  1976  0012FA  1008               	iorwf	(fputc@fp+1)^0,w,c
  1977  0012FC  A4D8               	btfss	status,2,c
  1978  0012FE  EF83  F009         	goto	u1481
  1979  001302  EF85  F009         	goto	u1480
  1980  001306                     u1481:
  1981  001306  EF8A  F009         	goto	l2146
  1982  00130A                     u1480:
  1983  00130A                     l2144:
  1984  00130A  5005               	movf	fputc@c^0,w,c
  1985  00130C  EC92  F00C         	call	_putch
  1986  001310  EFD7  F009         	goto	l995
  1987  001314                     l2146:
  1988  001314  EE20 F004          	lfsr	2,4
  1989  001318  5007               	movf	fputc@fp^0,w,c
  1990  00131A  26D9               	addwf	fsr2l,f,c
  1991  00131C  5008               	movf	(fputc@fp+1)^0,w,c
  1992  00131E  22DA               	addwfc	fsr2h,f,c
  1993  001320  50DE               	movf	postinc2,w,c
  1994  001322  10DE               	iorwf	postinc2,w,c
  1995  001324  B4D8               	btfsc	status,2,c
  1996  001326  EF97  F009         	goto	u1491
  1997  00132A  EF99  F009         	goto	u1490
  1998  00132E                     u1491:
  1999  00132E  EFB4  F009         	goto	l2150
  2000  001332                     u1490:
  2001  001332  EE20 F004          	lfsr	2,4
  2002  001336  5007               	movf	fputc@fp^0,w,c
  2003  001338  26D9               	addwf	fsr2l,f,c
  2004  00133A  5008               	movf	(fputc@fp+1)^0,w,c
  2005  00133C  22DA               	addwfc	fsr2h,f,c
  2006  00133E  EE10 F002          	lfsr	1,2
  2007  001342  5007               	movf	fputc@fp^0,w,c
  2008  001344  26E1               	addwf	fsr1l,f,c
  2009  001346  5008               	movf	(fputc@fp+1)^0,w,c
  2010  001348  22E2               	addwfc	fsr1h,f,c
  2011  00134A  50DE               	movf	postinc2,w,c
  2012  00134C  5CE6               	subwf	postinc1,w,c
  2013  00134E  50E6               	movf	postinc1,w,c
  2014  001350  0A80               	xorlw	128
  2015  001352  6E0D               	movwf	(??_fputc+4)^0,c
  2016  001354  50DE               	movf	postinc2,w,c
  2017  001356  0A80               	xorlw	128
  2018  001358  580D               	subwfb	(??_fputc+4)^0,w,c
  2019  00135A  B0D8               	btfsc	status,0,c
  2020  00135C  EFB2  F009         	goto	u1501
  2021  001360  EFB4  F009         	goto	u1500
  2022  001364                     u1501:
  2023  001364  EFD7  F009         	goto	l995
  2024  001368                     u1500:
  2025  001368                     l2150:
  2026  001368  EE20 F002          	lfsr	2,2
  2027  00136C  5007               	movf	fputc@fp^0,w,c
  2028  00136E  26D9               	addwf	fsr2l,f,c
  2029  001370  5008               	movf	(fputc@fp+1)^0,w,c
  2030  001372  22DA               	addwfc	fsr2h,f,c
  2031  001374  CFDE F009          	movff	postinc2,??_fputc
  2032  001378  CFDD F00A          	movff	postdec2,??_fputc+1
  2033  00137C  C007  FFD9         	movff	fputc@fp,fsr2l
  2034  001380  C008  FFDA         	movff	fputc@fp+1,fsr2h
  2035  001384  CFDE F00B          	movff	postinc2,??_fputc+2
  2036  001388  CFDD F00C          	movff	postdec2,??_fputc+3
  2037  00138C  5009               	movf	??_fputc^0,w,c
  2038  00138E  240B               	addwf	(??_fputc+2)^0,w,c
  2039  001390  6ED9               	movwf	fsr2l,c
  2040  001392  500A               	movf	(??_fputc+1)^0,w,c
  2041  001394  200C               	addwfc	(??_fputc+3)^0,w,c
  2042  001396  6EDA               	movwf	fsr2h,c
  2043  001398  C005  FFDF         	movff	fputc@c,indf2
  2044  00139C  EE20 F002          	lfsr	2,2
  2045  0013A0  5007               	movf	fputc@fp^0,w,c
  2046  0013A2  26D9               	addwf	fsr2l,f,c
  2047  0013A4  5008               	movf	(fputc@fp+1)^0,w,c
  2048  0013A6  22DA               	addwfc	fsr2h,f,c
  2049  0013A8  2ADE               	incf	postinc2,f,c
  2050  0013AA  0E00               	movlw	0
  2051  0013AC  22DD               	addwfc	postdec2,f,c
  2052  0013AE                     l995:
  2053  0013AE  0012               	return		;funcret
  2054  0013B0                     __end_of_fputc:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _putch *****************
  2058 ;; Defined at:
  2059 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  c               1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  c               1    0[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2076 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_fputc
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text11
  2088  001924                     __ptext11:
  2089                           	callstack 0
  2090  001924                     _putch:
  2091                           	callstack 24
  2092  001924  0012               	return		;funcret
  2093  001926                     __end_of_putch:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _abs *****************
  2097 ;; Defined at:
  2098 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  a               2   22[COMRAM] int 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  2   22[COMRAM] int 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2112 ;;      Params:         2       0       0       0       0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2114 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2115 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2116 ;;Total ram usage:        4 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_dtoa
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text12
  2127  00182C                     __ptext12:
  2128                           	callstack 0
  2129  00182C                     _abs:
  2130                           	callstack 24
  2131  00182C  BE18               	btfsc	(abs@a+1)^0,7,c
  2132  00182E  EF23  F00C         	goto	u1700
  2133  001832  5018               	movf	(abs@a+1)^0,w,c
  2134  001834  E106               	bnz	u1701
  2135  001836  0417               	decf	abs@a^0,w,c
  2136  001838  B0D8               	btfsc	status,0,c
  2137  00183A  EF21  F00C         	goto	u1701
  2138  00183E  EF23  F00C         	goto	u1700
  2139  001842                     u1701:
  2140  001842  EF31  F00C         	goto	l980
  2141  001846                     u1700:
  2142  001846  C017  F019         	movff	abs@a,??_abs
  2143  00184A  C018  F01A         	movff	abs@a+1,??_abs+1
  2144  00184E  1E19               	comf	??_abs^0,f,c
  2145  001850  1E1A               	comf	(??_abs+1)^0,f,c
  2146  001852  4A19               	infsnz	??_abs^0,f,c
  2147  001854  2A1A               	incf	(??_abs+1)^0,f,c
  2148  001856  C019  F017         	movff	??_abs,?_abs
  2149  00185A  C01A  F018         	movff	??_abs+1,?_abs+1
  2150  00185E  EF35  F00C         	goto	l983
  2151  001862                     l980:
  2152  001862  C017  F017         	movff	abs@a,?_abs
  2153  001866  C018  F018         	movff	abs@a+1,?_abs+1
  2154  00186A                     l983:
  2155  00186A  0012               	return		;funcret
  2156  00186C                     __end_of_abs:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function ___aomod *****************
  2160 ;; Defined at:
  2161 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  dividend        8    4[COMRAM] long long 
  2164 ;;  divisor         8   12[COMRAM] long long 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  sign            1   21[COMRAM] unsigned char 
  2167 ;;  counter         1   20[COMRAM] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  8    4[COMRAM] long long 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2177 ;;      Params:        16       0       0       0       0       0       0       0       0
  2178 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2180 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2181 ;;Total ram usage:       18 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_dtoa
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text13
  2192  000E3E                     __ptext13:
  2193                           	callstack 0
  2194  000E3E                     ___aomod:
  2195                           	callstack 24
  2196  000E3E  0E00               	movlw	0
  2197  000E40  6E16               	movwf	___aomod@sign^0,c
  2198  000E42  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2199  000E44  EF28  F007         	goto	u1600
  2200  000E48  EF26  F007         	goto	u1601
  2201  000E4C                     u1601:
  2202  000E4C  EF3A  F007         	goto	l2224
  2203  000E50                     u1600:
  2204  000E50  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2205  000E52  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2206  000E54  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2207  000E56  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2208  000E58  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2209  000E5A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2210  000E5C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2211  000E5E  6C05               	negf	___aomod@dividend^0,c
  2212  000E60  0E00               	movlw	0
  2213  000E62  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2214  000E64  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2215  000E66  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2216  000E68  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2217  000E6A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2218  000E6C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2219  000E6E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2220  000E70  0E01               	movlw	1
  2221  000E72  6E16               	movwf	___aomod@sign^0,c
  2222  000E74                     l2224:
  2223  000E74  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2224  000E76  EF41  F007         	goto	u1610
  2225  000E7A  EF3F  F007         	goto	u1611
  2226  000E7E                     u1611:
  2227  000E7E  EF51  F007         	goto	l2228
  2228  000E82                     u1610:
  2229  000E82  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2230  000E84  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2231  000E86  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2232  000E88  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2233  000E8A  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2234  000E8C  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2235  000E8E  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2236  000E90  6C0D               	negf	___aomod@divisor^0,c
  2237  000E92  0E00               	movlw	0
  2238  000E94  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2239  000E96  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2240  000E98  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2241  000E9A  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2242  000E9C  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2243  000E9E  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2244  000EA0  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2245  000EA2                     l2228:
  2246  000EA2  500D               	movf	___aomod@divisor^0,w,c
  2247  000EA4  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2248  000EA6  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2249  000EA8  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2250  000EAA  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2251  000EAC  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2252  000EAE  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2253  000EB0  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2254  000EB2  B4D8               	btfsc	status,2,c
  2255  000EB4  EF5E  F007         	goto	u1621
  2256  000EB8  EF60  F007         	goto	u1620
  2257  000EBC                     u1621:
  2258  000EBC  EFA8  F007         	goto	l2244
  2259  000EC0                     u1620:
  2260  000EC0  0E01               	movlw	1
  2261  000EC2  6E15               	movwf	___aomod@counter^0,c
  2262  000EC4  EF6E  F007         	goto	l2234
  2263  000EC8                     l2232:
  2264  000EC8  90D8               	bcf	status,0,c
  2265  000ECA  360D               	rlcf	___aomod@divisor^0,f,c
  2266  000ECC  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2267  000ECE  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2268  000ED0  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2269  000ED2  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2270  000ED4  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2271  000ED6  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2272  000ED8  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2273  000EDA  2A15               	incf	___aomod@counter^0,f,c
  2274  000EDC                     l2234:
  2275  000EDC  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2276  000EDE  EF73  F007         	goto	u1631
  2277  000EE2  EF75  F007         	goto	u1630
  2278  000EE6                     u1631:
  2279  000EE6  EF64  F007         	goto	l2232
  2280  000EEA                     u1630:
  2281  000EEA                     l2236:
  2282  000EEA  500D               	movf	___aomod@divisor^0,w,c
  2283  000EEC  5C05               	subwf	___aomod@dividend^0,w,c
  2284  000EEE  500E               	movf	(___aomod@divisor+1)^0,w,c
  2285  000EF0  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2286  000EF2  500F               	movf	(___aomod@divisor+2)^0,w,c
  2287  000EF4  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2288  000EF6  5010               	movf	(___aomod@divisor+3)^0,w,c
  2289  000EF8  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2290  000EFA  5011               	movf	(___aomod@divisor+4)^0,w,c
  2291  000EFC  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2292  000EFE  5012               	movf	(___aomod@divisor+5)^0,w,c
  2293  000F00  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2294  000F02  5013               	movf	(___aomod@divisor+6)^0,w,c
  2295  000F04  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2296  000F06  5014               	movf	(___aomod@divisor+7)^0,w,c
  2297  000F08  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2298  000F0A  A0D8               	btfss	status,0,c
  2299  000F0C  EF8A  F007         	goto	u1641
  2300  000F10  EF8C  F007         	goto	u1640
  2301  000F14                     u1641:
  2302  000F14  EF9C  F007         	goto	l2240
  2303  000F18                     u1640:
  2304  000F18  500D               	movf	___aomod@divisor^0,w,c
  2305  000F1A  5E05               	subwf	___aomod@dividend^0,f,c
  2306  000F1C  500E               	movf	(___aomod@divisor+1)^0,w,c
  2307  000F1E  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2308  000F20  500F               	movf	(___aomod@divisor+2)^0,w,c
  2309  000F22  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2310  000F24  5010               	movf	(___aomod@divisor+3)^0,w,c
  2311  000F26  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2312  000F28  5011               	movf	(___aomod@divisor+4)^0,w,c
  2313  000F2A  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2314  000F2C  5012               	movf	(___aomod@divisor+5)^0,w,c
  2315  000F2E  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2316  000F30  5013               	movf	(___aomod@divisor+6)^0,w,c
  2317  000F32  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2318  000F34  5014               	movf	(___aomod@divisor+7)^0,w,c
  2319  000F36  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2320  000F38                     l2240:
  2321  000F38  90D8               	bcf	status,0,c
  2322  000F3A  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2323  000F3C  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2324  000F3E  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2325  000F40  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2326  000F42  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2327  000F44  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2328  000F46  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2329  000F48  320D               	rrcf	___aomod@divisor^0,f,c
  2330  000F4A  2E15               	decfsz	___aomod@counter^0,f,c
  2331  000F4C  EF75  F007         	goto	l2236
  2332  000F50                     l2244:
  2333  000F50  5016               	movf	___aomod@sign^0,w,c
  2334  000F52  B4D8               	btfsc	status,2,c
  2335  000F54  EFAE  F007         	goto	u1651
  2336  000F58  EFB0  F007         	goto	u1650
  2337  000F5C                     u1651:
  2338  000F5C  EFC0  F007         	goto	l2248
  2339  000F60                     u1650:
  2340  000F60  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2341  000F62  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2342  000F64  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2343  000F66  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2344  000F68  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2345  000F6A  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2346  000F6C  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2347  000F6E  6C05               	negf	___aomod@dividend^0,c
  2348  000F70  0E00               	movlw	0
  2349  000F72  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2350  000F74  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2351  000F76  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2352  000F78  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2353  000F7A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2354  000F7C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2355  000F7E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2356  000F80                     l2248:
  2357  000F80  C005  F005         	movff	___aomod@dividend,?___aomod
  2358  000F84  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2359  000F88  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2360  000F8C  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2361  000F90  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2362  000F94  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2363  000F98  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2364  000F9C  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2365  000FA0  0012               	return		;funcret
  2366  000FA2                     __end_of___aomod:
  2367                           	callstack 0
  2368                           
  2369 ;; *************** function ___aodiv *****************
  2370 ;; Defined at:
  2371 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  dividend        8    4[COMRAM] long long 
  2374 ;;  divisor         8   12[COMRAM] long long 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  quotient        8   22[COMRAM] long long 
  2377 ;;  sign            1   21[COMRAM] unsigned char 
  2378 ;;  counter         1   20[COMRAM] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  8    4[COMRAM] long long 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2388 ;;      Params:        16       0       0       0       0       0       0       0       0
  2389 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2391 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2392 ;;Total ram usage:       26 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    1
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_dtoa
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text14
  2403  000CB6                     __ptext14:
  2404                           	callstack 0
  2405  000CB6                     ___aodiv:
  2406                           	callstack 24
  2407  000CB6  0E00               	movlw	0
  2408  000CB8  6E16               	movwf	___aodiv@sign^0,c
  2409  000CBA  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2410  000CBC  EF64  F006         	goto	u1530
  2411  000CC0  EF62  F006         	goto	u1531
  2412  000CC4                     u1531:
  2413  000CC4  EF76  F006         	goto	l2180
  2414  000CC8                     u1530:
  2415  000CC8  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2416  000CCA  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2417  000CCC  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2418  000CCE  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2419  000CD0  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2420  000CD2  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2421  000CD4  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2422  000CD6  6C0D               	negf	___aodiv@divisor^0,c
  2423  000CD8  0E00               	movlw	0
  2424  000CDA  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2425  000CDC  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2426  000CDE  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2427  000CE0  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2428  000CE2  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2429  000CE4  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2430  000CE6  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2431  000CE8  0E01               	movlw	1
  2432  000CEA  6E16               	movwf	___aodiv@sign^0,c
  2433  000CEC                     l2180:
  2434  000CEC  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2435  000CEE  EF7D  F006         	goto	u1540
  2436  000CF2  EF7B  F006         	goto	u1541
  2437  000CF6                     u1541:
  2438  000CF6  EF8F  F006         	goto	l2186
  2439  000CFA                     u1540:
  2440  000CFA  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2441  000CFC  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2442  000CFE  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2443  000D00  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2444  000D02  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2445  000D04  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2446  000D06  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2447  000D08  6C05               	negf	___aodiv@dividend^0,c
  2448  000D0A  0E00               	movlw	0
  2449  000D0C  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2450  000D0E  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2451  000D10  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2452  000D12  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2453  000D14  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2454  000D16  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2455  000D18  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2456  000D1A  0E01               	movlw	1
  2457  000D1C  1A16               	xorwf	___aodiv@sign^0,f,c
  2458  000D1E                     l2186:
  2459  000D1E  EE20  F017         	lfsr	2,___aodiv@quotient
  2460  000D22  0E07               	movlw	7
  2461  000D24                     u1551:
  2462  000D24  6ADE               	clrf	postinc2,c
  2463  000D26  06E8               	decf	wreg,f,c
  2464  000D28  E2FD               	bc	u1551
  2465  000D2A  500D               	movf	___aodiv@divisor^0,w,c
  2466  000D2C  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2467  000D2E  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2468  000D30  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2469  000D32  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2470  000D34  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2471  000D36  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2472  000D38  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2473  000D3A  B4D8               	btfsc	status,2,c
  2474  000D3C  EFA2  F006         	goto	u1561
  2475  000D40  EFA4  F006         	goto	u1560
  2476  000D44                     u1561:
  2477  000D44  EFF6  F006         	goto	l2208
  2478  000D48                     u1560:
  2479  000D48  0E01               	movlw	1
  2480  000D4A  6E15               	movwf	___aodiv@counter^0,c
  2481  000D4C  EFB2  F006         	goto	l2194
  2482  000D50                     l2192:
  2483  000D50  90D8               	bcf	status,0,c
  2484  000D52  360D               	rlcf	___aodiv@divisor^0,f,c
  2485  000D54  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2486  000D56  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2487  000D58  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2488  000D5A  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2489  000D5C  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2490  000D5E  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2491  000D60  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2492  000D62  2A15               	incf	___aodiv@counter^0,f,c
  2493  000D64                     l2194:
  2494  000D64  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2495  000D66  EFB7  F006         	goto	u1571
  2496  000D6A  EFB9  F006         	goto	u1570
  2497  000D6E                     u1571:
  2498  000D6E  EFA8  F006         	goto	l2192
  2499  000D72                     u1570:
  2500  000D72                     l2196:
  2501  000D72  90D8               	bcf	status,0,c
  2502  000D74  3617               	rlcf	___aodiv@quotient^0,f,c
  2503  000D76  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2504  000D78  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2505  000D7A  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2506  000D7C  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2507  000D7E  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2508  000D80  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2509  000D82  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2510  000D84  500D               	movf	___aodiv@divisor^0,w,c
  2511  000D86  5C05               	subwf	___aodiv@dividend^0,w,c
  2512  000D88  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2513  000D8A  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2514  000D8C  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2515  000D8E  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2516  000D90  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2517  000D92  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2518  000D94  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2519  000D96  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2520  000D98  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2521  000D9A  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2522  000D9C  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2523  000D9E  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2524  000DA0  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2525  000DA2  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2526  000DA4  A0D8               	btfss	status,0,c
  2527  000DA6  EFD7  F006         	goto	u1581
  2528  000DAA  EFD9  F006         	goto	u1580
  2529  000DAE                     u1581:
  2530  000DAE  EFEA  F006         	goto	l2204
  2531  000DB2                     u1580:
  2532  000DB2  500D               	movf	___aodiv@divisor^0,w,c
  2533  000DB4  5E05               	subwf	___aodiv@dividend^0,f,c
  2534  000DB6  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2535  000DB8  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2536  000DBA  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2537  000DBC  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2538  000DBE  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2539  000DC0  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2540  000DC2  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2541  000DC4  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2542  000DC6  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2543  000DC8  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2544  000DCA  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2545  000DCC  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2546  000DCE  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2547  000DD0  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2548  000DD2  8017               	bsf	___aodiv@quotient^0,0,c
  2549  000DD4                     l2204:
  2550  000DD4  90D8               	bcf	status,0,c
  2551  000DD6  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2552  000DD8  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2553  000DDA  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2554  000DDC  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2555  000DDE  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2556  000DE0  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2557  000DE2  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2558  000DE4  320D               	rrcf	___aodiv@divisor^0,f,c
  2559  000DE6  2E15               	decfsz	___aodiv@counter^0,f,c
  2560  000DE8  EFB9  F006         	goto	l2196
  2561  000DEC                     l2208:
  2562  000DEC  5016               	movf	___aodiv@sign^0,w,c
  2563  000DEE  B4D8               	btfsc	status,2,c
  2564  000DF0  EFFC  F006         	goto	u1591
  2565  000DF4  EFFE  F006         	goto	u1590
  2566  000DF8                     u1591:
  2567  000DF8  EF0E  F007         	goto	l2212
  2568  000DFC                     u1590:
  2569  000DFC  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2570  000DFE  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2571  000E00  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2572  000E02  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2573  000E04  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2574  000E06  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2575  000E08  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2576  000E0A  6C17               	negf	___aodiv@quotient^0,c
  2577  000E0C  0E00               	movlw	0
  2578  000E0E  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2579  000E10  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2580  000E12  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2581  000E14  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2582  000E16  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2583  000E18  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2584  000E1A  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2585  000E1C                     l2212:
  2586  000E1C  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2587  000E20  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2588  000E24  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2589  000E28  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2590  000E2C  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2591  000E30  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2592  000E34  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2593  000E38  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2594  000E3C  0012               	return		;funcret
  2595  000E3E                     __end_of___aodiv:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _adcGetValue *****************
  2599 ;; Defined at:
  2600 ;;		line 43 in file "adc.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  PinADC          1    wreg     unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  PinADC          1    7[COMRAM] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  2    4[COMRAM] unsigned short 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2614 ;;      Params:         2       0       0       0       0       0       0       0       0
  2615 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2616 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2617 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2618 ;;Total ram usage:        4 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_appStateRecolectData
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text15
  2629  00186C                     __ptext15:
  2630                           	callstack 0
  2631  00186C                     _adcGetValue:
  2632                           	callstack 28
  2633                           
  2634                           ;incstack = 0
  2635                           ;adcGetValue@PinADC stored from wreg
  2636  00186C  6E08               	movwf	adcGetValue@PinADC^0,c
  2637  00186E                     
  2638                           ;adc.c: 43: uint16_t adcGetValue(uint8_t PinADC);adc.c: 44: {;adc.c: 45:     ADCON0bits.
      +                          CHS = PinADC;
  2639  00186E  C008  F007         	movff	adcGetValue@PinADC,??_adcGetValue
  2640  001872  4607               	rlncf	??_adcGetValue^0,f,c
  2641  001874  4607               	rlncf	??_adcGetValue^0,f,c
  2642  001876  50C2               	movf	194,w,c	;volatile
  2643  001878  1807               	xorwf	??_adcGetValue^0,w,c
  2644  00187A  0BC3               	andlw	-61
  2645  00187C  1807               	xorwf	??_adcGetValue^0,w,c
  2646  00187E  6EC2               	movwf	194,c	;volatile
  2647  001880                     
  2648                           ;adc.c: 46:     _delay((unsigned long)((2)*(12000000/4000.0)));
  2649  001880  0E08               	movlw	8
  2650  001882  6E07               	movwf	??_adcGetValue^0,c
  2651  001884  0ECA               	movlw	202
  2652  001886                     u2017:
  2653  001886  2EE8               	decfsz	wreg,f,c
  2654  001888  D7FE               	bra	u2017
  2655  00188A  2E07               	decfsz	??_adcGetValue^0,f,c
  2656  00188C  D7FC               	bra	u2017
  2657  00188E                     
  2658                           ;adc.c: 47:     GO_nDONE = 1;
  2659  00188E  82C2               	bsf	4034,1,c	;volatile
  2660  001890                     l20:
  2661                           
  2662                           ;adc.c: 48:     while(ADCON0bits.GO_DONE)
  2663  001890  B2C2               	btfsc	194,1,c	;volatile
  2664  001892  EF4D  F00C         	goto	u1361
  2665  001896  EF4F  F00C         	goto	u1360
  2666  00189A                     u1361:
  2667  00189A  EF48  F00C         	goto	l20
  2668  00189E                     u1360:
  2669  00189E                     
  2670                           ;adc.c: 51:     return ADRES;
  2671  00189E  CFC3 F005          	movff	4035,?_adcGetValue	;volatile
  2672  0018A2  CFC4 F006          	movff	4036,?_adcGetValue+1	;volatile
  2673  0018A6  0012               	return		;funcret
  2674  0018A8                     __end_of_adcGetValue:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _appInit *****************
  2678 ;; Defined at:
  2679 ;;		line 10 in file "app.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    4
  2700 ;; This function calls:
  2701 ;;		_adcInit
  2702 ;;		_appISRConfig
  2703 ;;		_appLCD_Init
  2704 ;;		_appTimerInit
  2705 ;;		_appTimerStart
  2706 ;; This function is called by:
  2707 ;;		_main
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text16
  2712  0018DE                     __ptext16:
  2713                           	callstack 0
  2714  0018DE                     _appInit:
  2715                           	callstack 26
  2716  0018DE                     
  2717                           ;app.c: 12:     appISRConfig();
  2718  0018DE  EC8B  F00C         	call	_appISRConfig	;wreg free
  2719  0018E2                     
  2720                           ;app.c: 13:     appLCD_Init();
  2721  0018E2  ECDB  F00A         	call	_appLCD_Init	;wreg free
  2722  0018E6                     
  2723                           ;app.c: 14:     adcInit(2);
  2724  0018E6  0E02               	movlw	2
  2725  0018E8  ECAF  F00B         	call	_adcInit
  2726  0018EC                     
  2727                           ;app.c: 15:     appTimerInit();
  2728  0018EC  EC7B  F00C         	call	_appTimerInit	;wreg free
  2729  0018F0                     
  2730                           ;app.c: 16:     appTimerStart();
  2731  0018F0  EC85  F00C         	call	_appTimerStart	;wreg free
  2732  0018F4  0012               	return		;funcret
  2733  0018F6                     __end_of_appInit:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _appTimerStart *****************
  2737 ;; Defined at:
  2738 ;;		line 72 in file "servo.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_appInit
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text17
  2767  00190A                     __ptext17:
  2768                           	callstack 0
  2769  00190A                     _appTimerStart:
  2770                           	callstack 28
  2771  00190A                     
  2772                           ;servo.c: 74:     TMR3 = 20536;
  2773  00190A  0E50               	movlw	80
  2774  00190C  6EB3               	movwf	179,c	;volatile
  2775  00190E  0E38               	movlw	56
  2776  001910  6EB2               	movwf	178,c	;volatile
  2777  001912                     
  2778                           ;servo.c: 75:     T3CONbits.TMR3ON = 1;
  2779  001912  80B1               	bsf	177,0,c	;volatile
  2780  001914  0012               	return		;funcret
  2781  001916                     __end_of_appTimerStart:
  2782                           	callstack 0
  2783                           
  2784 ;; *************** function _appTimerInit *****************
  2785 ;; Defined at:
  2786 ;;		line 53 in file "servo.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2800 ;;      Params:         0       0       0       0       0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2803 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_appInit
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text18
  2815  0018F6                     __ptext18:
  2816                           	callstack 0
  2817  0018F6                     _appTimerInit:
  2818                           	callstack 28
  2819  0018F6                     
  2820                           ;servo.c: 58:     T3CONbits.TMR3ON = 0;
  2821  0018F6  90B1               	bcf	177,0,c	;volatile
  2822                           
  2823                           ;servo.c: 59:     T3CONbits.RD16 = 1;
  2824  0018F8  8EB1               	bsf	177,7,c	;volatile
  2825                           
  2826                           ;servo.c: 60:     T3CONbits.TMR3CS = 0;
  2827  0018FA  92B1               	bcf	177,1,c	;volatile
  2828  0018FC                     
  2829                           ;servo.c: 61:     T3CONbits.T3CKPS = 0b11;
  2830  0018FC  0E30               	movlw	48
  2831  0018FE  12B1               	iorwf	177,f,c	;volatile
  2832  001900                     
  2833                           ;servo.c: 62:     T3CONbits.T3NSYNC = 1;
  2834  001900  84B1               	bsf	177,2,c	;volatile
  2835  001902                     
  2836                           ;servo.c: 68:     PIR2bits.TMR3IF = 0;
  2837  001902  92A1               	bcf	161,1,c	;volatile
  2838  001904                     
  2839                           ;servo.c: 69:     IPR2bits.TMR3IP = 0;
  2840  001904  92A2               	bcf	162,1,c	;volatile
  2841  001906                     
  2842                           ;servo.c: 70:     PIE2bits.TMR3IE = 1;
  2843  001906  82A0               	bsf	160,1,c	;volatile
  2844  001908  0012               	return		;funcret
  2845  00190A                     __end_of_appTimerInit:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _appLCD_Init *****************
  2849 ;; Defined at:
  2850 ;;		line 197 in file "flex_lcd.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2866 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2867 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2868 ;;Total ram usage:        2 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    3
  2871 ;; This function calls:
  2872 ;;		_Lcd_Cmd
  2873 ;;		_Lcd_Init
  2874 ;;		_Lcd_Out
  2875 ;; This function is called by:
  2876 ;;		_appInit
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text19
  2881  0015B6                     __ptext19:
  2882                           	callstack 0
  2883  0015B6                     _appLCD_Init:
  2884                           	callstack 26
  2885  0015B6                     
  2886                           ;flex_lcd.c: 199:     Lcd_Init();
  2887  0015B6  EC39  F00A         	call	_Lcd_Init	;wreg free
  2888                           
  2889                           ;flex_lcd.c: 200:     Lcd_Cmd(1);
  2890  0015BA  0E01               	movlw	1
  2891  0015BC  EC78  F008         	call	_Lcd_Cmd
  2892                           
  2893                           ;flex_lcd.c: 201:     Lcd_Cmd(12);
  2894  0015C0  0E0C               	movlw	12
  2895  0015C2  EC78  F008         	call	_Lcd_Cmd
  2896  0015C6                     
  2897                           ;flex_lcd.c: 202:     _delay((unsigned long)((100)*(12000000/4000.0)));
  2898  0015C6  0E02               	movlw	2
  2899  0015C8  6E10               	movwf	(??_appLCD_Init+1)^0,c
  2900  0015CA  0E86               	movlw	134
  2901  0015CC  6E0F               	movwf	??_appLCD_Init^0,c
  2902  0015CE  0E99               	movlw	153
  2903  0015D0                     u2027:
  2904  0015D0  2EE8               	decfsz	wreg,f,c
  2905  0015D2  D7FE               	bra	u2027
  2906  0015D4  2E0F               	decfsz	??_appLCD_Init^0,f,c
  2907  0015D6  D7FC               	bra	u2027
  2908  0015D8  2E10               	decfsz	(??_appLCD_Init+1)^0,f,c
  2909  0015DA  D7FA               	bra	u2027
  2910  0015DC  F000               	nop	
  2911  0015DE                     
  2912                           ;flex_lcd.c: 203:     Lcd_Out(1,3, (const int8_t*)"Bienvenidos");
  2913  0015DE  0E03               	movlw	3
  2914  0015E0  6E08               	movwf	Lcd_Out@x^0,c
  2915  0015E2  0E01               	movlw	low STR_1
  2916  0015E4  6E09               	movwf	Lcd_Out@buffer^0,c
  2917  0015E6  0E08               	movlw	high STR_1
  2918  0015E8  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  2919  0015EA  0E01               	movlw	1
  2920  0015EC  EC0D  F009         	call	_Lcd_Out
  2921  0015F0                     
  2922                           ;flex_lcd.c: 204:     Lcd_Out(2,6, (const int8_t*)"SICCV");
  2923  0015F0  0E06               	movlw	6
  2924  0015F2  6E08               	movwf	Lcd_Out@x^0,c
  2925  0015F4  0E1D               	movlw	low STR_2
  2926  0015F6  6E09               	movwf	Lcd_Out@buffer^0,c
  2927  0015F8  0E08               	movlw	high STR_2
  2928  0015FA  6E0A               	movwf	(Lcd_Out@buffer+1)^0,c
  2929  0015FC  0E02               	movlw	2
  2930  0015FE  EC0D  F009         	call	_Lcd_Out
  2931  001602                     
  2932                           ;flex_lcd.c: 205:     _delay((unsigned long)((2000)*(12000000/4000.0)));
  2933  001602  0E1F               	movlw	31
  2934  001604  6E10               	movwf	(??_appLCD_Init+1)^0,c
  2935  001606  0E71               	movlw	113
  2936  001608  6E0F               	movwf	??_appLCD_Init^0,c
  2937  00160A  0E1E               	movlw	30
  2938  00160C                     u2037:
  2939  00160C  2EE8               	decfsz	wreg,f,c
  2940  00160E  D7FE               	bra	u2037
  2941  001610  2E0F               	decfsz	??_appLCD_Init^0,f,c
  2942  001612  D7FC               	bra	u2037
  2943  001614  2E10               	decfsz	(??_appLCD_Init+1)^0,f,c
  2944  001616  D7FA               	bra	u2037
  2945  001618  D000               	nop2	
  2946                           
  2947                           ;flex_lcd.c: 206:     (Lcd_Cmd(1),_delay((unsigned long)((100)*(12000000/4000.0))));
  2948  00161A  0E01               	movlw	1
  2949  00161C  EC78  F008         	call	_Lcd_Cmd
  2950  001620  0E02               	movlw	2
  2951  001622  6E10               	movwf	(??_appLCD_Init+1)^0,c
  2952  001624  0E86               	movlw	134
  2953  001626  6E0F               	movwf	??_appLCD_Init^0,c
  2954  001628  0E99               	movlw	153
  2955  00162A                     u2047:
  2956  00162A  2EE8               	decfsz	wreg,f,c
  2957  00162C  D7FE               	bra	u2047
  2958  00162E  2E0F               	decfsz	??_appLCD_Init^0,f,c
  2959  001630  D7FC               	bra	u2047
  2960  001632  2E10               	decfsz	(??_appLCD_Init+1)^0,f,c
  2961  001634  D7FA               	bra	u2047
  2962  001636  F000               	nop	
  2963  001638  0012               	return		;funcret
  2964  00163A                     __end_of_appLCD_Init:
  2965                           	callstack 0
  2966                           
  2967 ;; *************** function _Lcd_Out *****************
  2968 ;; Defined at:
  2969 ;;		line 95 in file "flex_lcd.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  y               1    wreg     unsigned char 
  2972 ;;  x               1    7[COMRAM] unsigned char 
  2973 ;;  buffer          2    8[COMRAM] PTR const char 
  2974 ;;		 -> appStateRecolectData@dataOut(16), STR_2(6), STR_1(12), 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  y               1   12[COMRAM] unsigned char 
  2977 ;;  data            1   13[COMRAM] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2987 ;;      Params:         3       0       0       0       0       0       0       0       0
  2988 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2989 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2990 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2991 ;;Total ram usage:        7 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    2
  2994 ;; This function calls:
  2995 ;;		_Lcd_Chr_CP
  2996 ;;		_Lcd_Cmd
  2997 ;; This function is called by:
  2998 ;;		_appLCD_Init
  2999 ;;		_appStateRecolectData
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text20
  3004  00121A                     __ptext20:
  3005                           	callstack 0
  3006  00121A                     _Lcd_Out:
  3007                           	callstack 27
  3008                           
  3009                           ;incstack = 0
  3010                           ;Lcd_Out@y stored from wreg
  3011  00121A  6E0D               	movwf	Lcd_Out@y^0,c
  3012  00121C                     
  3013                           ;flex_lcd.c: 95: void Lcd_Out(uint8_t y, uint8_t x, const int8_t *buffer);flex_lcd.c: 96
      +                          : {;flex_lcd.c: 97:     uint8_t data;;flex_lcd.c: 98:     switch (y)
  3014  00121C  EF24  F009         	goto	l1960
  3015  001220                     l1950:
  3016                           
  3017                           ;flex_lcd.c: 101:             data = 128 + x;
  3018  001220  5008               	movf	Lcd_Out@x^0,w,c
  3019  001222  0F80               	addlw	128
  3020  001224  6E0E               	movwf	Lcd_Out@data^0,c
  3021                           
  3022                           ;flex_lcd.c: 102:             break;
  3023  001226  EF41  F009         	goto	l1962
  3024  00122A                     l1952:
  3025                           
  3026                           ;flex_lcd.c: 104:             data = 192 + x;
  3027  00122A  5008               	movf	Lcd_Out@x^0,w,c
  3028  00122C  0FC0               	addlw	192
  3029  00122E  6E0E               	movwf	Lcd_Out@data^0,c
  3030                           
  3031                           ;flex_lcd.c: 105:             break;
  3032  001230  EF41  F009         	goto	l1962
  3033  001234                     l1954:
  3034                           
  3035                           ;flex_lcd.c: 107:             data = 148 + x;
  3036  001234  5008               	movf	Lcd_Out@x^0,w,c
  3037  001236  0F94               	addlw	148
  3038  001238  6E0E               	movwf	Lcd_Out@data^0,c
  3039                           
  3040                           ;flex_lcd.c: 108:             break;
  3041  00123A  EF41  F009         	goto	l1962
  3042  00123E                     l1956:
  3043                           
  3044                           ;flex_lcd.c: 110:             data = 212 + x;
  3045  00123E  5008               	movf	Lcd_Out@x^0,w,c
  3046  001240  0FD4               	addlw	212
  3047  001242  6E0E               	movwf	Lcd_Out@data^0,c
  3048                           
  3049                           ;flex_lcd.c: 111:             break;
  3050  001244  EF41  F009         	goto	l1962
  3051  001248                     l1960:
  3052  001248  500D               	movf	Lcd_Out@y^0,w,c
  3053  00124A  6E0B               	movwf	??_Lcd_Out^0,c
  3054  00124C  6A0C               	clrf	(??_Lcd_Out+1)^0,c
  3055                           
  3056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3057                           ; Switch size 1, requested type "simple"
  3058                           ; Number of cases is 1, Range of values is 0 to 0
  3059                           ; switch strategies available:
  3060                           ; Name         Instructions Cycles
  3061                           ; simple_byte            4     3 (average)
  3062                           ;	Chosen strategy is simple_byte
  3063  00124E  500C               	movf	(??_Lcd_Out+1)^0,w,c
  3064  001250  0A00               	xorlw	0	; case 0
  3065  001252  B4D8               	btfsc	status,2,c
  3066  001254  EF2E  F009         	goto	l2460
  3067  001258  EF41  F009         	goto	l1962
  3068  00125C                     l2460:
  3069                           
  3070                           ; Switch size 1, requested type "simple"
  3071                           ; Number of cases is 4, Range of values is 1 to 4
  3072                           ; switch strategies available:
  3073                           ; Name         Instructions Cycles
  3074                           ; simple_byte           13     7 (average)
  3075                           ;	Chosen strategy is simple_byte
  3076  00125C  500B               	movf	??_Lcd_Out^0,w,c
  3077  00125E  0A01               	xorlw	1	; case 1
  3078  001260  B4D8               	btfsc	status,2,c
  3079  001262  EF10  F009         	goto	l1950
  3080  001266  0A03               	xorlw	3	; case 2
  3081  001268  B4D8               	btfsc	status,2,c
  3082  00126A  EF15  F009         	goto	l1952
  3083  00126E  0A01               	xorlw	1	; case 3
  3084  001270  B4D8               	btfsc	status,2,c
  3085  001272  EF1A  F009         	goto	l1954
  3086  001276  0A07               	xorlw	7	; case 4
  3087  001278  B4D8               	btfsc	status,2,c
  3088  00127A  EF1F  F009         	goto	l1956
  3089  00127E  EF41  F009         	goto	l1962
  3090  001282                     l1962:
  3091                           
  3092                           ;flex_lcd.c: 115:     Lcd_Cmd(data);
  3093  001282  500E               	movf	Lcd_Out@data^0,w,c
  3094  001284  EC78  F008         	call	_Lcd_Cmd
  3095                           
  3096                           ;flex_lcd.c: 116:     while(*buffer)
  3097  001288  EF5A  F009         	goto	l1968
  3098  00128C                     l1964:
  3099                           
  3100                           ;flex_lcd.c: 117:     {;flex_lcd.c: 118:         Lcd_Chr_CP(*buffer);
  3101  00128C  C009  FFF6         	movff	Lcd_Out@buffer,tblptrl
  3102  001290  C00A  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  3103  001294  6AF8               	clrf	tblptru,c
  3104  001296  0E07               	movlw	(high __ramtop+-1)
  3105  001298  64F7               	cpfsgt	tblptrh,c
  3106  00129A  D003               	bra	u1317
  3107  00129C  0008               	tblrd		*
  3108  00129E  50F5               	movf	tablat,w,c
  3109  0012A0  D005               	bra	u1310
  3110  0012A2                     u1317:
  3111  0012A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3112  0012A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3113  0012AA  50E7               	movf	indf1,w,c
  3114  0012AC                     u1310:
  3115  0012AC  ECD1  F007         	call	_Lcd_Chr_CP
  3116  0012B0                     
  3117                           ;flex_lcd.c: 119:         buffer++;
  3118  0012B0  4A09               	infsnz	Lcd_Out@buffer^0,f,c
  3119  0012B2  2A0A               	incf	(Lcd_Out@buffer+1)^0,f,c
  3120  0012B4                     l1968:
  3121                           
  3122                           ;flex_lcd.c: 116:     while(*buffer)
  3123  0012B4  C009  FFF6         	movff	Lcd_Out@buffer,tblptrl
  3124  0012B8  C00A  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  3125  0012BC  6AF8               	clrf	tblptru,c
  3126  0012BE  0E07               	movlw	(high __ramtop+-1)
  3127  0012C0  64F7               	cpfsgt	tblptrh,c
  3128  0012C2  D003               	bra	u1327
  3129  0012C4  0008               	tblrd		*
  3130  0012C6  50F5               	movf	tablat,w,c
  3131  0012C8  D005               	bra	u1320
  3132  0012CA                     u1327:
  3133  0012CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  3134  0012CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  3135  0012D2  50E7               	movf	indf1,w,c
  3136  0012D4                     u1320:
  3137  0012D4  0900               	iorlw	0
  3138  0012D6  A4D8               	btfss	status,2,c
  3139  0012D8  EF70  F009         	goto	u1331
  3140  0012DC  EF72  F009         	goto	u1330
  3141  0012E0                     u1331:
  3142  0012E0  EF46  F009         	goto	l1964
  3143  0012E4                     u1330:
  3144  0012E4  0012               	return		;funcret
  3145  0012E6                     __end_of_Lcd_Out:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _Lcd_Chr_CP *****************
  3149 ;; Defined at:
  3150 ;;		line 151 in file "flex_lcd.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  data            1    wreg     char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  data            1    6[COMRAM] char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0
  3165 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3166 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3167 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        3 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    1
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_Lcd_Out
  3175 ;;		_Lcd_Out2
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text21
  3180  000FA2                     __ptext21:
  3181                           	callstack 0
  3182  000FA2                     _Lcd_Chr_CP:
  3183                           	callstack 27
  3184                           
  3185                           ;incstack = 0
  3186                           ;Lcd_Chr_CP@data stored from wreg
  3187  000FA2  6E07               	movwf	Lcd_Chr_CP@data^0,c
  3188  000FA4                     
  3189                           ;flex_lcd.c: 151: void Lcd_Chr_CP(int8_t data);flex_lcd.c: 152: {;flex_lcd.c: 153:     L
      +                          ATDbits.LD3 = 0;
  3190  000FA4  968C               	bcf	140,3,c	;volatile
  3191                           
  3192                           ;flex_lcd.c: 154:     LATDbits.LD2 = 1;
  3193  000FA6  848C               	bsf	140,2,c	;volatile
  3194  000FA8                     
  3195                           ;flex_lcd.c: 155:     LATDbits.LD7 = (data & 0b10000000)>>7;
  3196  000FA8  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3197  000FAC  0E07               	movlw	7
  3198  000FAE  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3199  000FB0                     u1205:
  3200  000FB0  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3201  000FB2  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3202  000FB4  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3203  000FB6  EFD8  F007         	goto	u1205
  3204  000FBA  0E01               	movlw	1
  3205  000FBC  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3206  000FBE  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3207  000FC0  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3208  000FC2  508C               	movf	140,w,c	;volatile
  3209  000FC4  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3210  000FC6  0B7F               	andlw	-129
  3211  000FC8  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3212  000FCA  6E8C               	movwf	140,c	;volatile
  3213                           
  3214                           ;flex_lcd.c: 156:     LATDbits.LD6 = (data & 0b01000000)>>6;
  3215  000FCC  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3216  000FD0  0E06               	movlw	6
  3217  000FD2  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3218  000FD4                     u1215:
  3219  000FD4  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3220  000FD6  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3221  000FD8  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3222  000FDA  EFEA  F007         	goto	u1215
  3223  000FDE  0E01               	movlw	1
  3224  000FE0  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3225  000FE2  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3226  000FE4  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3227  000FE6  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3228  000FE8  508C               	movf	140,w,c	;volatile
  3229  000FEA  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3230  000FEC  0BBF               	andlw	-65
  3231  000FEE  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3232  000FF0  6E8C               	movwf	140,c	;volatile
  3233                           
  3234                           ;flex_lcd.c: 157:     LATDbits.LD5 = (data & 0b00100000)>>5;
  3235  000FF2  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3236  000FF6  0E05               	movlw	5
  3237  000FF8  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3238  000FFA                     u1225:
  3239  000FFA  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3240  000FFC  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3241  000FFE  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3242  001000  EFFD  F007         	goto	u1225
  3243  001004  0E01               	movlw	1
  3244  001006  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3245  001008  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3246  00100A  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3247  00100C  508C               	movf	140,w,c	;volatile
  3248  00100E  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3249  001010  0BDF               	andlw	-33
  3250  001012  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3251  001014  6E8C               	movwf	140,c	;volatile
  3252                           
  3253                           ;flex_lcd.c: 158:     LATDbits.LD4 = (data & 0b00010000)>>4;
  3254  001016  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3255  00101A  0E04               	movlw	4
  3256  00101C  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3257  00101E                     u1235:
  3258  00101E  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3259  001020  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3260  001022  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3261  001024  EF0F  F008         	goto	u1235
  3262  001028  0E01               	movlw	1
  3263  00102A  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3264  00102C  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3265  00102E  508C               	movf	140,w,c	;volatile
  3266  001030  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3267  001032  0BEF               	andlw	-17
  3268  001034  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3269  001036  6E8C               	movwf	140,c	;volatile
  3270  001038                     
  3271                           ;flex_lcd.c: 159:     _delay(10);
  3272  001038  0E03               	movlw	3
  3273  00103A                     u2057:
  3274  00103A  2EE8               	decfsz	wreg,f,c
  3275  00103C  D7FE               	bra	u2057
  3276  00103E  F000               	nop	
  3277  001040                     
  3278                           ;flex_lcd.c: 160:     LATDbits.LD3 = 1;
  3279  001040  868C               	bsf	140,3,c	;volatile
  3280  001042                     
  3281                           ;flex_lcd.c: 161:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3282  001042  0E05               	movlw	5
  3283  001044                     u2067:
  3284  001044  2EE8               	decfsz	wreg,f,c
  3285  001046  D7FE               	bra	u2067
  3286  001048                     
  3287                           ;flex_lcd.c: 162:     LATDbits.LD3 = 0;
  3288  001048  968C               	bcf	140,3,c	;volatile
  3289                           
  3290                           ;flex_lcd.c: 163:     LATDbits.LD7 = (data & 0b00001000)>>3;
  3291  00104A  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3292  00104E  0E03               	movlw	3
  3293  001050  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3294  001052                     u1245:
  3295  001052  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3296  001054  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3297  001056  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3298  001058  EF29  F008         	goto	u1245
  3299  00105C  0E01               	movlw	1
  3300  00105E  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3301  001060  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3302  001062  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3303  001064  508C               	movf	140,w,c	;volatile
  3304  001066  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3305  001068  0B7F               	andlw	-129
  3306  00106A  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3307  00106C  6E8C               	movwf	140,c	;volatile
  3308                           
  3309                           ;flex_lcd.c: 164:     LATDbits.LD6 = (data & 0b00000100)>>2;
  3310  00106E  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3311  001072  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3312  001074  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3313  001076  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3314  001078  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3315  00107A  0E01               	movlw	1
  3316  00107C  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3317  00107E  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3318  001080  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3319  001082  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3320  001084  508C               	movf	140,w,c	;volatile
  3321  001086  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3322  001088  0BBF               	andlw	-65
  3323  00108A  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3324  00108C  6E8C               	movwf	140,c	;volatile
  3325                           
  3326                           ;flex_lcd.c: 165:     LATDbits.LD5 = (data & 0b00000010)>>1;
  3327  00108E  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3328  001092  0E01               	movlw	1
  3329  001094  6E06               	movwf	(??_Lcd_Chr_CP+1)^0,c
  3330  001096                     u1255:
  3331  001096  3405               	rlcf	??_Lcd_Chr_CP^0,w,c
  3332  001098  3205               	rrcf	??_Lcd_Chr_CP^0,f,c
  3333  00109A  2E06               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  3334  00109C  EF4B  F008         	goto	u1255
  3335  0010A0  0E01               	movlw	1
  3336  0010A2  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3337  0010A4  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3338  0010A6  4605               	rlncf	??_Lcd_Chr_CP^0,f,c
  3339  0010A8  508C               	movf	140,w,c	;volatile
  3340  0010AA  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3341  0010AC  0BDF               	andlw	-33
  3342  0010AE  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3343  0010B0  6E8C               	movwf	140,c	;volatile
  3344                           
  3345                           ;flex_lcd.c: 166:     LATDbits.LD4 = (data & 0b00000001);
  3346  0010B2  C007  F005         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3347  0010B6  0E01               	movlw	1
  3348  0010B8  1605               	andwf	??_Lcd_Chr_CP^0,f,c
  3349  0010BA  3A05               	swapf	??_Lcd_Chr_CP^0,f,c
  3350  0010BC  508C               	movf	140,w,c	;volatile
  3351  0010BE  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3352  0010C0  0BEF               	andlw	-17
  3353  0010C2  1805               	xorwf	??_Lcd_Chr_CP^0,w,c
  3354  0010C4  6E8C               	movwf	140,c	;volatile
  3355  0010C6                     
  3356                           ;flex_lcd.c: 167:     _delay(10);
  3357  0010C6  0E03               	movlw	3
  3358  0010C8                     u2077:
  3359  0010C8  2EE8               	decfsz	wreg,f,c
  3360  0010CA  D7FE               	bra	u2077
  3361  0010CC  F000               	nop	
  3362  0010CE                     
  3363                           ;flex_lcd.c: 168:     LATDbits.LD3 = 1;
  3364  0010CE  868C               	bsf	140,3,c	;volatile
  3365  0010D0                     
  3366                           ;flex_lcd.c: 169:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3367  0010D0  0E05               	movlw	5
  3368  0010D2                     u2087:
  3369  0010D2  2EE8               	decfsz	wreg,f,c
  3370  0010D4  D7FE               	bra	u2087
  3371  0010D6                     
  3372                           ;flex_lcd.c: 170:     LATDbits.LD3 = 0;
  3373  0010D6  968C               	bcf	140,3,c	;volatile
  3374  0010D8                     
  3375                           ;flex_lcd.c: 171:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3376  0010D8  0E05               	movlw	5
  3377  0010DA                     u2097:
  3378  0010DA  2EE8               	decfsz	wreg,f,c
  3379  0010DC  D7FE               	bra	u2097
  3380  0010DE                     
  3381                           ;flex_lcd.c: 172:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3382  0010DE  0E16               	movlw	22
  3383  0010E0  6E05               	movwf	??_Lcd_Chr_CP^0,c
  3384  0010E2  0E6C               	movlw	108
  3385  0010E4                     u2107:
  3386  0010E4  2EE8               	decfsz	wreg,f,c
  3387  0010E6  D7FE               	bra	u2107
  3388  0010E8  2E05               	decfsz	??_Lcd_Chr_CP^0,f,c
  3389  0010EA  D7FC               	bra	u2107
  3390  0010EC  D000               	nop2	
  3391  0010EE  0012               	return		;funcret
  3392  0010F0                     __end_of_Lcd_Chr_CP:
  3393                           	callstack 0
  3394                           
  3395 ;; *************** function _Lcd_Init *****************
  3396 ;; Defined at:
  3397 ;;		line 31 in file "flex_lcd.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  i               1    8[COMRAM] unsigned char 
  3402 ;;  data            1    0        unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2, status,0, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0
  3413 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3414 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3415 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3416 ;;Total ram usage:        3 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    2
  3419 ;; This function calls:
  3420 ;;		_Lcd_Cmd
  3421 ;; This function is called by:
  3422 ;;		_appLCD_Init
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text22
  3427  001472                     __ptext22:
  3428                           	callstack 0
  3429  001472                     _Lcd_Init:
  3430                           	callstack 26
  3431  001472                     
  3432                           ;flex_lcd.c: 33:     TRISDbits.TRISD7 = 0;
  3433  001472  9E95               	bcf	149,7,c	;volatile
  3434                           
  3435                           ;flex_lcd.c: 34:     TRISDbits.TRISD6 = 0;
  3436  001474  9C95               	bcf	149,6,c	;volatile
  3437                           
  3438                           ;flex_lcd.c: 35:     TRISDbits.TRISD5 = 0;
  3439  001476  9A95               	bcf	149,5,c	;volatile
  3440                           
  3441                           ;flex_lcd.c: 36:     TRISDbits.TRISD4 = 0;
  3442  001478  9895               	bcf	149,4,c	;volatile
  3443                           
  3444                           ;flex_lcd.c: 37:     TRISDbits.TRISD3 = 0;
  3445  00147A  9695               	bcf	149,3,c	;volatile
  3446                           
  3447                           ;flex_lcd.c: 38:     TRISDbits.TRISD2 = 0;
  3448  00147C  9495               	bcf	149,2,c	;volatile
  3449  00147E                     
  3450                           ;flex_lcd.c: 39:     _delay((unsigned long)((34)*(12000000/4000.0)));
  3451  00147E  0E85               	movlw	133
  3452  001480  6E08               	movwf	??_Lcd_Init^0,c
  3453  001482  0E76               	movlw	118
  3454  001484                     u2117:
  3455  001484  2EE8               	decfsz	wreg,f,c
  3456  001486  D7FE               	bra	u2117
  3457  001488  2E08               	decfsz	??_Lcd_Init^0,f,c
  3458  00148A  D7FC               	bra	u2117
  3459  00148C  D000               	nop2	
  3460  00148E                     
  3461                           ;flex_lcd.c: 40:     for (uint8_t i = 0; i < 4; i++) {
  3462  00148E  0E00               	movlw	0
  3463  001490  6E09               	movwf	Lcd_Init@i^0,c
  3464  001492                     l96:
  3465                           
  3466                           ;flex_lcd.c: 41:         LATDbits.LD7 = 0;
  3467  001492  9E8C               	bcf	140,7,c	;volatile
  3468                           
  3469                           ;flex_lcd.c: 42:         LATDbits.LD6 = 0;
  3470  001494  9C8C               	bcf	140,6,c	;volatile
  3471                           
  3472                           ;flex_lcd.c: 43:         LATDbits.LD5 = 1;
  3473  001496  8A8C               	bsf	140,5,c	;volatile
  3474                           
  3475                           ;flex_lcd.c: 44:         LATDbits.LD4 = 1;
  3476  001498  888C               	bsf	140,4,c	;volatile
  3477                           
  3478                           ;flex_lcd.c: 45:         LATDbits.LD3 = 0;
  3479  00149A  968C               	bcf	140,3,c	;volatile
  3480                           
  3481                           ;flex_lcd.c: 46:         LATDbits.LD2 = 0;
  3482  00149C  948C               	bcf	140,2,c	;volatile
  3483                           
  3484                           ;flex_lcd.c: 47:         LATDbits.LD7 = 0;
  3485  00149E  9E8C               	bcf	140,7,c	;volatile
  3486                           
  3487                           ;flex_lcd.c: 48:         LATDbits.LD6 = 0;
  3488  0014A0  9C8C               	bcf	140,6,c	;volatile
  3489                           
  3490                           ;flex_lcd.c: 49:         LATDbits.LD5 = 1;
  3491  0014A2  8A8C               	bsf	140,5,c	;volatile
  3492                           
  3493                           ;flex_lcd.c: 50:         LATDbits.LD4 = 1;
  3494  0014A4  888C               	bsf	140,4,c	;volatile
  3495                           
  3496                           ;flex_lcd.c: 51:         LATDbits.LD3 = 1;
  3497  0014A6  868C               	bsf	140,3,c	;volatile
  3498                           
  3499                           ;flex_lcd.c: 52:         LATDbits.LD2 = 0;
  3500  0014A8  948C               	bcf	140,2,c	;volatile
  3501  0014AA                     
  3502                           ;flex_lcd.c: 53:         _delay((unsigned long)((5)*(12000000/4000000.0)));
  3503  0014AA  0E05               	movlw	5
  3504  0014AC                     u2127:
  3505  0014AC  2EE8               	decfsz	wreg,f,c
  3506  0014AE  D7FE               	bra	u2127
  3507  0014B0                     
  3508                           ;flex_lcd.c: 54:         LATDbits.LD7 = 0;
  3509  0014B0  9E8C               	bcf	140,7,c	;volatile
  3510  0014B2                     
  3511                           ;flex_lcd.c: 55:         LATDbits.LD6 = 0;
  3512  0014B2  9C8C               	bcf	140,6,c	;volatile
  3513  0014B4                     
  3514                           ;flex_lcd.c: 56:         LATDbits.LD5 = 1;
  3515  0014B4  8A8C               	bsf	140,5,c	;volatile
  3516  0014B6                     
  3517                           ;flex_lcd.c: 57:         LATDbits.LD4 = 1;
  3518  0014B6  888C               	bsf	140,4,c	;volatile
  3519  0014B8                     
  3520                           ;flex_lcd.c: 58:         LATDbits.LD3 = 0;
  3521  0014B8  968C               	bcf	140,3,c	;volatile
  3522  0014BA                     
  3523                           ;flex_lcd.c: 59:         LATDbits.LD2 = 0;
  3524  0014BA  948C               	bcf	140,2,c	;volatile
  3525                           
  3526                           ;flex_lcd.c: 60:         _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3527  0014BC  0E16               	movlw	22
  3528  0014BE  6E08               	movwf	??_Lcd_Init^0,c
  3529  0014C0  0E6C               	movlw	108
  3530  0014C2                     u2137:
  3531  0014C2  2EE8               	decfsz	wreg,f,c
  3532  0014C4  D7FE               	bra	u2137
  3533  0014C6  2E08               	decfsz	??_Lcd_Init^0,f,c
  3534  0014C8  D7FC               	bra	u2137
  3535  0014CA  D000               	nop2	
  3536  0014CC                     
  3537                           ;flex_lcd.c: 61:     }
  3538  0014CC  2A09               	incf	Lcd_Init@i^0,f,c
  3539  0014CE  0E03               	movlw	3
  3540  0014D0  6409               	cpfsgt	Lcd_Init@i^0,c
  3541  0014D2  EF6D  F00A         	goto	u1301
  3542  0014D6  EF6F  F00A         	goto	u1300
  3543  0014DA                     u1301:
  3544  0014DA  EF49  F00A         	goto	l96
  3545  0014DE                     u1300:
  3546  0014DE                     
  3547                           ;flex_lcd.c: 62:     LATDbits.LD7 = 0;
  3548  0014DE  9E8C               	bcf	140,7,c	;volatile
  3549                           
  3550                           ;flex_lcd.c: 63:     LATDbits.LD6 = 0;
  3551  0014E0  9C8C               	bcf	140,6,c	;volatile
  3552                           
  3553                           ;flex_lcd.c: 64:     LATDbits.LD5 = 1;
  3554  0014E2  8A8C               	bsf	140,5,c	;volatile
  3555                           
  3556                           ;flex_lcd.c: 65:     LATDbits.LD4 = 0;
  3557  0014E4  988C               	bcf	140,4,c	;volatile
  3558                           
  3559                           ;flex_lcd.c: 66:     LATDbits.LD3 = 0;
  3560  0014E6  968C               	bcf	140,3,c	;volatile
  3561                           
  3562                           ;flex_lcd.c: 67:     LATDbits.LD2 = 0;
  3563  0014E8  948C               	bcf	140,2,c	;volatile
  3564                           
  3565                           ;flex_lcd.c: 68:     LATDbits.LD7 = 0;
  3566  0014EA  9E8C               	bcf	140,7,c	;volatile
  3567                           
  3568                           ;flex_lcd.c: 69:     LATDbits.LD6 = 0;
  3569  0014EC  9C8C               	bcf	140,6,c	;volatile
  3570                           
  3571                           ;flex_lcd.c: 70:     LATDbits.LD5 = 1;
  3572  0014EE  8A8C               	bsf	140,5,c	;volatile
  3573                           
  3574                           ;flex_lcd.c: 71:     LATDbits.LD4 = 0;
  3575  0014F0  988C               	bcf	140,4,c	;volatile
  3576                           
  3577                           ;flex_lcd.c: 72:     LATDbits.LD3 = 1;
  3578  0014F2  868C               	bsf	140,3,c	;volatile
  3579                           
  3580                           ;flex_lcd.c: 73:     LATDbits.LD2 = 0;
  3581  0014F4  948C               	bcf	140,2,c	;volatile
  3582  0014F6                     
  3583                           ;flex_lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3584  0014F6  0E05               	movlw	5
  3585  0014F8                     u2147:
  3586  0014F8  2EE8               	decfsz	wreg,f,c
  3587  0014FA  D7FE               	bra	u2147
  3588  0014FC                     
  3589                           ;flex_lcd.c: 75:     LATDbits.LD7 = 0;
  3590  0014FC  9E8C               	bcf	140,7,c	;volatile
  3591  0014FE                     
  3592                           ;flex_lcd.c: 76:     LATDbits.LD6 = 0;
  3593  0014FE  9C8C               	bcf	140,6,c	;volatile
  3594  001500                     
  3595                           ;flex_lcd.c: 77:     LATDbits.LD5 = 1;
  3596  001500  8A8C               	bsf	140,5,c	;volatile
  3597  001502                     
  3598                           ;flex_lcd.c: 78:     LATDbits.LD4 = 0;
  3599  001502  988C               	bcf	140,4,c	;volatile
  3600  001504                     
  3601                           ;flex_lcd.c: 79:     LATDbits.LD3 = 0;
  3602  001504  968C               	bcf	140,3,c	;volatile
  3603  001506                     
  3604                           ;flex_lcd.c: 80:     LATDbits.LD2 = 0;
  3605  001506  948C               	bcf	140,2,c	;volatile
  3606                           
  3607                           ;flex_lcd.c: 81:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3608  001508  0E16               	movlw	22
  3609  00150A  6E08               	movwf	??_Lcd_Init^0,c
  3610  00150C  0E6C               	movlw	108
  3611  00150E                     u2157:
  3612  00150E  2EE8               	decfsz	wreg,f,c
  3613  001510  D7FE               	bra	u2157
  3614  001512  2E08               	decfsz	??_Lcd_Init^0,f,c
  3615  001514  D7FC               	bra	u2157
  3616  001516  D000               	nop2	
  3617  001518                     
  3618                           ;flex_lcd.c: 85:     Lcd_Cmd(data);
  3619  001518  0E28               	movlw	40
  3620  00151A  EC78  F008         	call	_Lcd_Cmd
  3621  00151E                     
  3622                           ;flex_lcd.c: 87:     Lcd_Cmd(data);
  3623  00151E  0E10               	movlw	16
  3624  001520  EC78  F008         	call	_Lcd_Cmd
  3625  001524                     
  3626                           ;flex_lcd.c: 89:     Lcd_Cmd(data);
  3627  001524  0E01               	movlw	1
  3628  001526  EC78  F008         	call	_Lcd_Cmd
  3629  00152A                     
  3630                           ;flex_lcd.c: 91:     Lcd_Cmd(data);
  3631  00152A  0E0F               	movlw	15
  3632  00152C  EC78  F008         	call	_Lcd_Cmd
  3633  001530  0012               	return		;funcret
  3634  001532                     __end_of_Lcd_Init:
  3635                           	callstack 0
  3636                           
  3637 ;; *************** function _Lcd_Cmd *****************
  3638 ;; Defined at:
  3639 ;;		line 175 in file "flex_lcd.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  data            1    wreg     unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  data            1    6[COMRAM] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3653 ;;      Params:         0       0       0       0       0       0       0       0       0
  3654 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3655 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3656 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3657 ;;Total ram usage:        3 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    1
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_Lcd_Init
  3664 ;;		_Lcd_Out
  3665 ;;		_appLCD_Init
  3666 ;;		_Lcd_Out2
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text23
  3671  0010F0                     __ptext23:
  3672                           	callstack 0
  3673  0010F0                     _Lcd_Cmd:
  3674                           	callstack 27
  3675                           
  3676                           ;incstack = 0
  3677                           ;Lcd_Cmd@data stored from wreg
  3678  0010F0  6E07               	movwf	Lcd_Cmd@data^0,c
  3679  0010F2                     
  3680                           ;flex_lcd.c: 175: void Lcd_Cmd(uint8_t data);flex_lcd.c: 176: {;flex_lcd.c: 177:     LAT
      +                          Dbits.LD3 = 0; LATDbits.LD2 = 0;
  3681  0010F2  968C               	bcf	140,3,c	;volatile
  3682  0010F4  948C               	bcf	140,2,c	;volatile
  3683  0010F6                     
  3684                           ;flex_lcd.c: 178:     LATDbits.LD7 = (data & 0b10000000)>>7;
  3685  0010F6  6A05               	clrf	??_Lcd_Cmd^0,c
  3686  0010F8  AE07               	btfss	Lcd_Cmd@data^0,7,c
  3687  0010FA  D001               	bra	u1175
  3688  0010FC  2A05               	incf	??_Lcd_Cmd^0,f,c
  3689  0010FE                     u1175:
  3690  0010FE  0E01               	movlw	1
  3691  001100  1605               	andwf	??_Lcd_Cmd^0,f,c
  3692  001102  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3693  001104  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3694  001106  508C               	movf	140,w,c	;volatile
  3695  001108  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3696  00110A  0B7F               	andlw	-129
  3697  00110C  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3698  00110E  6E8C               	movwf	140,c	;volatile
  3699                           
  3700                           ;flex_lcd.c: 179:     LATDbits.LD6 = (data & 0b01000000)>>6;
  3701  001110  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3702  001114  0E06               	movlw	6
  3703  001116  6E06               	movwf	(??_Lcd_Cmd+1)^0,c
  3704  001118                     u1185:
  3705  001118  90D8               	bcf	status,0,c
  3706  00111A  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3707  00111C  2E06               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3708  00111E  EF8C  F008         	goto	u1185
  3709  001122  0E01               	movlw	1
  3710  001124  1605               	andwf	??_Lcd_Cmd^0,f,c
  3711  001126  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3712  001128  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3713  00112A  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3714  00112C  508C               	movf	140,w,c	;volatile
  3715  00112E  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3716  001130  0BBF               	andlw	-65
  3717  001132  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3718  001134  6E8C               	movwf	140,c	;volatile
  3719                           
  3720                           ;flex_lcd.c: 180:     LATDbits.LD5 = (data & 0b00100000)>>5;
  3721  001136  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3722  00113A  0E05               	movlw	5
  3723  00113C  6E06               	movwf	(??_Lcd_Cmd+1)^0,c
  3724  00113E                     u1195:
  3725  00113E  90D8               	bcf	status,0,c
  3726  001140  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3727  001142  2E06               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  3728  001144  EF9F  F008         	goto	u1195
  3729  001148  0E01               	movlw	1
  3730  00114A  1605               	andwf	??_Lcd_Cmd^0,f,c
  3731  00114C  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3732  00114E  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3733  001150  508C               	movf	140,w,c	;volatile
  3734  001152  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3735  001154  0BDF               	andlw	-33
  3736  001156  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3737  001158  6E8C               	movwf	140,c	;volatile
  3738                           
  3739                           ;flex_lcd.c: 181:     LATDbits.LD4 = (data & 0b00010000)>>4;
  3740  00115A  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3741  00115E  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3742  001160  0E0F               	movlw	15
  3743  001162  1605               	andwf	??_Lcd_Cmd^0,f,c
  3744  001164  0E01               	movlw	1
  3745  001166  1605               	andwf	??_Lcd_Cmd^0,f,c
  3746  001168  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3747  00116A  508C               	movf	140,w,c	;volatile
  3748  00116C  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3749  00116E  0BEF               	andlw	-17
  3750  001170  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3751  001172  6E8C               	movwf	140,c	;volatile
  3752  001174                     
  3753                           ;flex_lcd.c: 182:     _delay(10);
  3754  001174  0E03               	movlw	3
  3755  001176                     u2167:
  3756  001176  2EE8               	decfsz	wreg,f,c
  3757  001178  D7FE               	bra	u2167
  3758  00117A  F000               	nop	
  3759  00117C                     
  3760                           ;flex_lcd.c: 183:     LATDbits.LD3 = 1;
  3761  00117C  868C               	bsf	140,3,c	;volatile
  3762  00117E                     
  3763                           ;flex_lcd.c: 184:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3764  00117E  0E05               	movlw	5
  3765  001180                     u2177:
  3766  001180  2EE8               	decfsz	wreg,f,c
  3767  001182  D7FE               	bra	u2177
  3768  001184                     
  3769                           ;flex_lcd.c: 185:     LATDbits.LD3 = 0;
  3770  001184  968C               	bcf	140,3,c	;volatile
  3771                           
  3772                           ;flex_lcd.c: 186:     LATDbits.LD7 = (data & 0b00001000)>>3;
  3773  001186  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3774  00118A  90D8               	bcf	status,0,c
  3775  00118C  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3776  00118E  90D8               	bcf	status,0,c
  3777  001190  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3778  001192  90D8               	bcf	status,0,c
  3779  001194  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3780  001196  0E01               	movlw	1
  3781  001198  1605               	andwf	??_Lcd_Cmd^0,f,c
  3782  00119A  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3783  00119C  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3784  00119E  508C               	movf	140,w,c	;volatile
  3785  0011A0  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3786  0011A2  0B7F               	andlw	-129
  3787  0011A4  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3788  0011A6  6E8C               	movwf	140,c	;volatile
  3789                           
  3790                           ;flex_lcd.c: 187:     LATDbits.LD6 = (data & 0b00000100)>>2;
  3791  0011A8  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3792  0011AC  90D8               	bcf	status,0,c
  3793  0011AE  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3794  0011B0  90D8               	bcf	status,0,c
  3795  0011B2  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3796  0011B4  0E01               	movlw	1
  3797  0011B6  1605               	andwf	??_Lcd_Cmd^0,f,c
  3798  0011B8  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3799  0011BA  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3800  0011BC  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3801  0011BE  508C               	movf	140,w,c	;volatile
  3802  0011C0  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3803  0011C2  0BBF               	andlw	-65
  3804  0011C4  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3805  0011C6  6E8C               	movwf	140,c	;volatile
  3806                           
  3807                           ;flex_lcd.c: 188:     LATDbits.LD5 = (data & 0b00000010)>>1;
  3808  0011C8  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3809  0011CC  90D8               	bcf	status,0,c
  3810  0011CE  3205               	rrcf	??_Lcd_Cmd^0,f,c
  3811  0011D0  0E01               	movlw	1
  3812  0011D2  1605               	andwf	??_Lcd_Cmd^0,f,c
  3813  0011D4  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3814  0011D6  4605               	rlncf	??_Lcd_Cmd^0,f,c
  3815  0011D8  508C               	movf	140,w,c	;volatile
  3816  0011DA  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3817  0011DC  0BDF               	andlw	-33
  3818  0011DE  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3819  0011E0  6E8C               	movwf	140,c	;volatile
  3820                           
  3821                           ;flex_lcd.c: 189:     LATDbits.LD4 = (data & 0b00000001);
  3822  0011E2  C007  F005         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3823  0011E6  0E01               	movlw	1
  3824  0011E8  1605               	andwf	??_Lcd_Cmd^0,f,c
  3825  0011EA  3A05               	swapf	??_Lcd_Cmd^0,f,c
  3826  0011EC  508C               	movf	140,w,c	;volatile
  3827  0011EE  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3828  0011F0  0BEF               	andlw	-17
  3829  0011F2  1805               	xorwf	??_Lcd_Cmd^0,w,c
  3830  0011F4  6E8C               	movwf	140,c	;volatile
  3831  0011F6                     
  3832                           ;flex_lcd.c: 190:     _delay(10);
  3833  0011F6  0E03               	movlw	3
  3834  0011F8                     u2187:
  3835  0011F8  2EE8               	decfsz	wreg,f,c
  3836  0011FA  D7FE               	bra	u2187
  3837  0011FC  F000               	nop	
  3838  0011FE                     
  3839                           ;flex_lcd.c: 191:     LATDbits.LD3 = 1;
  3840  0011FE  868C               	bsf	140,3,c	;volatile
  3841  001200                     
  3842                           ;flex_lcd.c: 192:     _delay((unsigned long)((5)*(12000000/4000000.0)));
  3843  001200  0E05               	movlw	5
  3844  001202                     u2197:
  3845  001202  2EE8               	decfsz	wreg,f,c
  3846  001204  D7FE               	bra	u2197
  3847  001206                     
  3848                           ;flex_lcd.c: 193:     LATDbits.LD3 = 0;
  3849  001206  968C               	bcf	140,3,c	;volatile
  3850  001208                     
  3851                           ;flex_lcd.c: 194:     _delay((unsigned long)((5500)*(12000000/4000000.0)));
  3852  001208  0E16               	movlw	22
  3853  00120A  6E05               	movwf	??_Lcd_Cmd^0,c
  3854  00120C  0E6C               	movlw	108
  3855  00120E                     u2207:
  3856  00120E  2EE8               	decfsz	wreg,f,c
  3857  001210  D7FE               	bra	u2207
  3858  001212  2E05               	decfsz	??_Lcd_Cmd^0,f,c
  3859  001214  D7FC               	bra	u2207
  3860  001216  D000               	nop2	
  3861  001218  0012               	return		;funcret
  3862  00121A                     __end_of_Lcd_Cmd:
  3863                           	callstack 0
  3864                           
  3865 ;; *************** function _appISRConfig *****************
  3866 ;; Defined at:
  3867 ;;		line 35 in file "app.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		None
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3884 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3885 ;;Total ram usage:        0 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_appInit
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text24
  3896  001916                     __ptext24:
  3897                           	callstack 0
  3898  001916                     _appISRConfig:
  3899                           	callstack 28
  3900  001916                     
  3901                           ;app.c: 40:     RCONbits.IPEN = 1;
  3902  001916  8ED0               	bsf	208,7,c	;volatile
  3903                           
  3904                           ;app.c: 41:     INTCONbits.GIE_GIEH = 1;
  3905  001918  8EF2               	bsf	242,7,c	;volatile
  3906                           
  3907                           ;app.c: 42:     INTCONbits.PEIE_GIEL = 1;
  3908  00191A  8CF2               	bsf	242,6,c	;volatile
  3909  00191C  0012               	return		;funcret
  3910  00191E                     __end_of_appISRConfig:
  3911                           	callstack 0
  3912                           
  3913 ;; *************** function _adcInit *****************
  3914 ;; Defined at:
  3915 ;;		line 11 in file "adc.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  ADC_PINs        1    wreg     unsigned char 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  ADC_PINs        1    5[COMRAM] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3929 ;;      Params:         0       0       0       0       0       0       0       0       0
  3930 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3931 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3932 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3933 ;;Total ram usage:        2 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    1
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_appInit
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text25
  3944  00175E                     __ptext25:
  3945                           	callstack 0
  3946  00175E                     _adcInit:
  3947                           	callstack 28
  3948                           
  3949                           ;incstack = 0
  3950                           ;adcInit@ADC_PINs stored from wreg
  3951  00175E  6E06               	movwf	adcInit@ADC_PINs^0,c
  3952  001760                     
  3953                           ;adc.c: 11: void adcInit(uint8_t ADC_PINs);adc.c: 12: {;adc.c: 14:     if(ADC_PINs == 0)
  3954  001760  5006               	movf	adcInit@ADC_PINs^0,w,c
  3955  001762  A4D8               	btfss	status,2,c
  3956  001764  EFB6  F00B         	goto	u1351
  3957  001768  EFB8  F00B         	goto	u1350
  3958  00176C                     u1351:
  3959  00176C  EFBE  F00B         	goto	l1986
  3960  001770                     u1350:
  3961  001770                     
  3962                           ;adc.c: 15:     {;adc.c: 16:         ADCON1bits.PCFG = 0b1110;
  3963  001770  50C1               	movf	193,w,c	;volatile
  3964  001772  0BF0               	andlw	-16
  3965  001774  090E               	iorlw	14
  3966  001776  6EC1               	movwf	193,c	;volatile
  3967                           
  3968                           ;adc.c: 17:     }
  3969  001778  EFC6  F00B         	goto	l1988
  3970  00177C                     l1986:
  3971                           
  3972                           ;adc.c: 19:     {;adc.c: 20:         ADCON1bits.PCFG = 15 - ADC_PINs;
  3973  00177C  5006               	movf	adcInit@ADC_PINs^0,w,c
  3974  00177E  080F               	sublw	15
  3975  001780  6E05               	movwf	??_adcInit^0,c
  3976  001782  50C1               	movf	193,w,c	;volatile
  3977  001784  1805               	xorwf	??_adcInit^0,w,c
  3978  001786  0BF0               	andlw	-16
  3979  001788  1805               	xorwf	??_adcInit^0,w,c
  3980  00178A  6EC1               	movwf	193,c	;volatile
  3981  00178C                     l1988:
  3982                           
  3983                           ;adc.c: 26:     ADCON1bits.VCFG = 0b00;
  3984  00178C  0ECF               	movlw	-49
  3985  00178E  16C1               	andwf	193,f,c	;volatile
  3986  001790                     
  3987                           ;adc.c: 31:     ADCON2bits.ACQT = 0b010;
  3988  001790  50C0               	movf	192,w,c	;volatile
  3989  001792  0BC7               	andlw	-57
  3990  001794  0910               	iorlw	16
  3991  001796  6EC0               	movwf	192,c	;volatile
  3992  001798                     
  3993                           ;adc.c: 36:     ADCON2bits.ADCS = 3;
  3994  001798  50C0               	movf	192,w,c	;volatile
  3995  00179A  0BF8               	andlw	-8
  3996  00179C  0903               	iorlw	3
  3997  00179E  6EC0               	movwf	192,c	;volatile
  3998  0017A0                     
  3999                           ;adc.c: 39:     ADCON2bits.ADFM = 1;
  4000  0017A0  8EC0               	bsf	192,7,c	;volatile
  4001  0017A2                     
  4002                           ;adc.c: 40:     ADCON0bits.ADON = 1;
  4003  0017A2  80C2               	bsf	194,0,c	;volatile
  4004  0017A4  0012               	return		;funcret
  4005  0017A6                     __end_of_adcInit:
  4006                           	callstack 0
  4007                           
  4008 ;; *************** function _isr *****************
  4009 ;; Defined at:
  4010 ;;		line 28 in file "main.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4026 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4027 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4028 ;;Total ram usage:        4 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		Interrupt level 1
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	intcodelo
  4038  000018                     __pintcodelo:
  4039                           	callstack 0
  4040  000018                     _isr:
  4041                           	callstack 21
  4042                           
  4043                           ;incstack = 0
  4044  000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4045  00001A  CFD8 F002          	movff	status,??_isr+1
  4046  00001E  CFE8 F003          	movff	wreg,??_isr+2
  4047  000022  CFE0 F004          	movff	bsr,??_isr+3
  4048  000026                     
  4049                           ;main.c: 30:     if(TMR3IE && TMR3IF)
  4050  000026  A2A0               	btfss	4000,1,c	;volatile
  4051  000028  EF18  F000         	goto	i1u195_21
  4052  00002C  EF1A  F000         	goto	i1u195_20
  4053  000030                     i1u195_21:
  4054  000030  EF45  F000         	goto	i1l56
  4055  000034                     i1u195_20:
  4056  000034  A2A1               	btfss	4001,1,c	;volatile
  4057  000036  EF1F  F000         	goto	i1u196_21
  4058  00003A  EF21  F000         	goto	i1u196_20
  4059  00003E                     i1u196_21:
  4060  00003E  EF45  F000         	goto	i1l56
  4061  000042                     i1u196_20:
  4062  000042                     
  4063                           ;main.c: 31:     {;main.c: 32:         TMR3IF = 0;
  4064  000042  92A1               	bcf	4001,1,c	;volatile
  4065  000044                     
  4066                           ;main.c: 33:         datos.counter++;
  4067  000044  0100               	movlb	0	; () banked
  4068  000046  2BBC               	incf	_datos& (0+255),f,b
  4069  000048                     
  4070                           ; BSR set to: 0
  4071                           ;main.c: 34:         if(datos.counter == 50)
  4072  000048  0E32               	movlw	50
  4073  00004A  19BC               	xorwf	_datos& (0+255),w,b
  4074  00004C  A4D8               	btfss	status,2,c
  4075  00004E  EF2B  F000         	goto	i1u197_21
  4076  000052  EF2D  F000         	goto	i1u197_20
  4077  000056                     i1u197_21:
  4078  000056  EF45  F000         	goto	i1l56
  4079  00005A                     i1u197_20:
  4080  00005A                     
  4081                           ; BSR set to: 0
  4082                           ;main.c: 35:         {;main.c: 36:             datos.counter = 0;
  4083  00005A  0E00               	movlw	0
  4084  00005C  6FBC               	movwf	_datos& (0+255),b
  4085  00005E                     
  4086                           ; BSR set to: 0
  4087                           ;main.c: 37:             LATBbits.LATB2 = !LATBbits.LATB2;
  4088  00005E  A48A               	btfss	138,2,c	;volatile
  4089  000060  EF34  F000         	goto	i1u198_21
  4090  000064  EF38  F000         	goto	i1u198_20
  4091  000068                     i1u198_21:
  4092  000068  6A01               	clrf	??_isr^0,c
  4093  00006A  2A01               	incf	??_isr^0,f,c
  4094  00006C  EF39  F000         	goto	i1u199_28
  4095  000070                     i1u198_20:
  4096  000070  6A01               	clrf	??_isr^0,c
  4097  000072                     i1u199_28:
  4098  000072  4601               	rlncf	??_isr^0,f,c
  4099  000074  4601               	rlncf	??_isr^0,f,c
  4100  000076  508A               	movf	138,w,c	;volatile
  4101  000078  1801               	xorwf	??_isr^0,w,c
  4102  00007A  0BFB               	andlw	-5
  4103  00007C  1801               	xorwf	??_isr^0,w,c
  4104  00007E  6E8A               	movwf	138,c	;volatile
  4105  000080                     
  4106                           ;main.c: 38:             datos.nextFunc = appStateRecolectData;
  4107  000080  0E32               	movlw	low _appStateRecolectData
  4108  000082  0100               	movlb	0	; () banked
  4109  000084  6FBE               	movwf	(_datos+2)& (0+255),b
  4110  000086  0E15               	movlw	high _appStateRecolectData
  4111  000088  6FBF               	movwf	(_datos+3)& (0+255),b
  4112  00008A                     i1l56:
  4113  00008A  C004  FFE0         	movff	??_isr+3,bsr
  4114  00008E  C003  FFE8         	movff	??_isr+2,wreg
  4115  000092  C002  FFD8         	movff	??_isr+1,status
  4116  000096  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4117  000098  0010               	retfie	
  4118  00009A                     __end_of_isr:
  4119                           	callstack 0
  4120  00009A                     
  4121                           	psect	rparam
  4122  0000                     
  4123                           	psect	temp
  4124  00005A                     btemp:
  4125                           	callstack 0
  4126  00005A                     	ds	1
  4127  0000                     int$flags	set	btemp
  4128  0000                     wtemp8	set	btemp+1
  4129  0000                     ttemp5	set	btemp+1
  4130  0000                     ttemp6	set	btemp+4
  4131  0000                     ttemp7	set	btemp+8
  4132                           
  4133                           	psect	idloc
  4134                           
  4135                           ;Config register IDLOC0 @ 0x200000
  4136                           ;	unspecified, using default values
  4137  200000                     	org	2097152
  4138  200000  FF                 	db	255
  4139                           
  4140                           ;Config register IDLOC1 @ 0x200001
  4141                           ;	unspecified, using default values
  4142  200001                     	org	2097153
  4143  200001  FF                 	db	255
  4144                           
  4145                           ;Config register IDLOC2 @ 0x200002
  4146                           ;	unspecified, using default values
  4147  200002                     	org	2097154
  4148  200002  FF                 	db	255
  4149                           
  4150                           ;Config register IDLOC3 @ 0x200003
  4151                           ;	unspecified, using default values
  4152  200003                     	org	2097155
  4153  200003  FF                 	db	255
  4154                           
  4155                           ;Config register IDLOC4 @ 0x200004
  4156                           ;	unspecified, using default values
  4157  200004                     	org	2097156
  4158  200004  FF                 	db	255
  4159                           
  4160                           ;Config register IDLOC5 @ 0x200005
  4161                           ;	unspecified, using default values
  4162  200005                     	org	2097157
  4163  200005  FF                 	db	255
  4164                           
  4165                           ;Config register IDLOC6 @ 0x200006
  4166                           ;	unspecified, using default values
  4167  200006                     	org	2097158
  4168  200006  FF                 	db	255
  4169                           
  4170                           ;Config register IDLOC7 @ 0x200007
  4171                           ;	unspecified, using default values
  4172  200007                     	org	2097159
  4173  200007  FF                 	db	255
  4174                           
  4175                           	psect	config
  4176                           
  4177                           ;Config register CONFIG1L @ 0x300000
  4178                           ;	PLL Prescaler Selection bits
  4179                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4180                           ;	System Clock Postscaler Selection bits
  4181                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4182                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4183                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4184  300000                     	org	3145728
  4185  300000  00                 	db	0
  4186                           
  4187                           ;Config register CONFIG1H @ 0x300001
  4188                           ;	Oscillator Selection bits
  4189                           ;	FOSC = HS, HS oscillator (HS)
  4190                           ;	Fail-Safe Clock Monitor Enable bit
  4191                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4192                           ;	Internal/External Oscillator Switchover bit
  4193                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4194  300001                     	org	3145729
  4195  300001  0C                 	db	12
  4196                           
  4197                           ;Config register CONFIG2L @ 0x300002
  4198                           ;	Power-up Timer Enable bit
  4199                           ;	PWRT = OFF, PWRT disabled
  4200                           ;	Brown-out Reset Enable bits
  4201                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  4202                           ;	Brown-out Reset Voltage bits
  4203                           ;	BORV = 3, Minimum setting 2.05V
  4204                           ;	USB Voltage Regulator Enable bit
  4205                           ;	VREGEN = OFF, USB voltage regulator disabled
  4206  300002                     	org	3145730
  4207  300002  19                 	db	25
  4208                           
  4209                           ;Config register CONFIG2H @ 0x300003
  4210                           ;	Watchdog Timer Enable bit
  4211                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4212                           ;	Watchdog Timer Postscale Select bits
  4213                           ;	WDTPS = 32768, 1:32768
  4214  300003                     	org	3145731
  4215  300003  1E                 	db	30
  4216                           
  4217                           ; Padding undefined space
  4218  300004                     	org	3145732
  4219  300004  FF                 	db	255
  4220                           
  4221                           ;Config register CONFIG3H @ 0x300005
  4222                           ;	CCP2 MUX bit
  4223                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4224                           ;	PORTB A/D Enable bit
  4225                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4226                           ;	Low-Power Timer 1 Oscillator Enable bit
  4227                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4228                           ;	MCLR Pin Enable bit
  4229                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4230  300005                     	org	3145733
  4231  300005  81                 	db	129
  4232                           
  4233                           ;Config register CONFIG4L @ 0x300006
  4234                           ;	Stack Full/Underflow Reset Enable bit
  4235                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4236                           ;	Single-Supply ICSP Enable bit
  4237                           ;	LVP = OFF, Single-Supply ICSP disabled
  4238                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4239                           ;	ICPRT = OFF, ICPORT disabled
  4240                           ;	Extended Instruction Set Enable bit
  4241                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4242                           ;	Background Debugger Enable bit
  4243                           ;	DEBUG = 0x1, unprogrammed default
  4244  300006                     	org	3145734
  4245  300006  81                 	db	129
  4246                           
  4247                           ; Padding undefined space
  4248  300007                     	org	3145735
  4249  300007  FF                 	db	255
  4250                           
  4251                           ;Config register CONFIG5L @ 0x300008
  4252                           ;	Code Protection bit
  4253                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4254                           ;	Code Protection bit
  4255                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4256                           ;	Code Protection bit
  4257                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4258                           ;	Code Protection bit
  4259                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4260  300008                     	org	3145736
  4261  300008  0F                 	db	15
  4262                           
  4263                           ;Config register CONFIG5H @ 0x300009
  4264                           ;	Boot Block Code Protection bit
  4265                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4266                           ;	Data EEPROM Code Protection bit
  4267                           ;	CPD = OFF, Data EEPROM is not code-protected
  4268  300009                     	org	3145737
  4269  300009  C0                 	db	192
  4270                           
  4271                           ;Config register CONFIG6L @ 0x30000A
  4272                           ;	Write Protection bit
  4273                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4274                           ;	Write Protection bit
  4275                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4276                           ;	Write Protection bit
  4277                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4278                           ;	Write Protection bit
  4279                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4280  30000A                     	org	3145738
  4281  30000A  0F                 	db	15
  4282                           
  4283                           ;Config register CONFIG6H @ 0x30000B
  4284                           ;	Configuration Register Write Protection bit
  4285                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4286                           ;	Boot Block Write Protection bit
  4287                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4288                           ;	Data EEPROM Write Protection bit
  4289                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4290  30000B                     	org	3145739
  4291  30000B  E0                 	db	224
  4292                           
  4293                           ;Config register CONFIG7L @ 0x30000C
  4294                           ;	Table Read Protection bit
  4295                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4296                           ;	Table Read Protection bit
  4297                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4298                           ;	Table Read Protection bit
  4299                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4300                           ;	Table Read Protection bit
  4301                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4302  30000C                     	org	3145740
  4303  30000C  0F                 	db	15
  4304                           
  4305                           ;Config register CONFIG7H @ 0x30000D
  4306                           ;	Boot Block Table Read Protection bit
  4307                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4308  30000D                     	org	3145741
  4309  30000D  40                 	db	64
  4310                           tosu	equ	0xFFF
  4311                           tosh	equ	0xFFE
  4312                           tosl	equ	0xFFD
  4313                           stkptr	equ	0xFFC
  4314                           pclatu	equ	0xFFB
  4315                           pclath	equ	0xFFA
  4316                           pcl	equ	0xFF9
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           indf0	equ	0xFEF
  4324                           postinc0	equ	0xFEE
  4325                           postdec0	equ	0xFED
  4326                           preinc0	equ	0xFEC
  4327                           plusw0	equ	0xFEB
  4328                           fsr0h	equ	0xFEA
  4329                           fsr0l	equ	0xFE9
  4330                           wreg	equ	0xFE8
  4331                           indf1	equ	0xFE7
  4332                           postinc1	equ	0xFE6
  4333                           postdec1	equ	0xFE5
  4334                           preinc1	equ	0xFE4
  4335                           plusw1	equ	0xFE3
  4336                           fsr1h	equ	0xFE2
  4337                           fsr1l	equ	0xFE1
  4338                           bsr	equ	0xFE0
  4339                           indf2	equ	0xFDF
  4340                           postinc2	equ	0xFDE
  4341                           postdec2	equ	0xFDD
  4342                           preinc2	equ	0xFDC
  4343                           plusw2	equ	0xFDB
  4344                           fsr2h	equ	0xFDA
  4345                           fsr2l	equ	0xFD9
  4346                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        4
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160     40      96
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> appStateRecolectData@dataOut(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[8]), STR_3(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[8]), STR_3(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[8]), STR_3(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> appStateRecolectData@dataOut(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1449_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> appStateRecolectData@dataOut(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> appStateRecolectData@dataOut(BANK0[16]), 

    Lcd_Out@buffer	PTR const char  size(2) Largest target is 16
		 -> appStateRecolectData@dataOut(BANK0[16]), STR_2(CODE[6]), STR_1(CODE[12]), 

    S183_state$nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appStateRecolectData(), appStateInitial(), 

    datos.nextFunc	PTR FTN()void  size(2) Largest target is 1
		 -> appStateRecolectData(), appStateInitial(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _appInit->_appLCD_Init
    _appLCD_Init->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_appStateRecolectData
    _appStateRecolectData->_sprintf
    _sprintf->_vfprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11581
                                             38 BANK0      2     2      0
                            _appInit
                    _appStateInitial *
               _appStateRecolectData *
 ---------------------------------------------------------------------------------
 (1) _appStateRecolectData                                16    16      0    9905
                                             22 BANK0     16    16      0
                            _Lcd_Out
                        _adcGetValue
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    8597
                                              6 BANK0     16    10      6
                        _adcGetValue (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7931
                                             83 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7458
                                             67 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _adcGetValue                                          4     2      2      22
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _appStateInitial                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _appInit                                              0     0      0    1676
                            _adcInit
                       _appISRConfig
                        _appLCD_Init
                       _appTimerInit
                      _appTimerStart
 ---------------------------------------------------------------------------------
 (2) _appTimerStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appTimerInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _appLCD_Init                                          2     2      0    1632
                                             14 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              7     4      3    1141
                                              7 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             3     3      0     315
                                              7 COMRAM     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _appISRConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appInit
     _adcInit
     _appISRConfig
     _appLCD_Init
       _Lcd_Cmd
       _Lcd_Init
         _Lcd_Cmd
       _Lcd_Out
         _Lcd_Chr_CP
         _Lcd_Cmd
     _appTimerInit
     _appTimerStart
   _appStateInitial *
   _appStateRecolectData *
     _Lcd_Out
       _Lcd_Chr_CP
       _Lcd_Cmd
     _adcGetValue
     _sprintf
       _adcGetValue (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      60       5       60.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B9      20        0.0%
DATA                 0      0      B9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat May 29 18:29:37 2021

                           l20 1890                             l22 189E                             l23 18A6  
                           l17 17A4                             l96 1492                             l97 14DE  
                           l98 1530                             bsr 000FE0                            l111 12E4  
                          l130 1218                            l212 18F4                            l220 1922  
                          l133 1638                            l223 191C                            l127 10EE  
                          l217 15B4                            l340 0E3C                            l182 1908  
                          l185 1914                            l353 0FA0                            l904 175C  
                          l931 13F4                            l934 1436                            l942 08C2  
                          l936 1470                            l944 08CA                            l962 0B00  
                          l980 1862                            l983 186A                            l975 1702  
                          l976 170A                            l969 0CB4                            l995 13AE  
              adcInit@ADC_PINs 0006                            _PR2 000FCB                            _abs 182C  
                          _pad 13B0                            _isr 0018                            tosl 000FFD  
                          wreg 000FE8                           l1003 17E8                           l1012 18DC  
                         l1006 1924                           l2000 1880                           l2010 15F0  
                         l2002 188E                           ?_abs 0017                           l2012 1602  
                         l2004 15B6                           l2020 1900                           l2014 1620  
                         l2006 15C6                           l2022 1902                           l2030 1912  
                         l2032 1916                           l2008 15DE                           l2024 1904  
                         l2016 18F6                           l2200 0DB2                           l2026 1906  
                         l2018 18FC                           l2050 18E6                           l2210 0DFC  
                         l2202 0DD2                           l2028 190A                           l2052 18EC  
                         l2212 0E1C                           l2204 0DD4                           l2220 0E50  
                         l2140 12E6                           l2300 0900                           l2054 18F0  
                         l2046 18DE                           l2206 0DE6                           l2230 0EC0  
                         l2222 0E70                           l2150 1368                           l2142 12F8  
                         l2310 099E                           l2302 090A                           l2048 18E2  
                         l2208 0DEC                           l2240 0F38                           l2232 0EC8  
                         l2224 0E74                           l2216 0E3E                           l2144 130A  
                         l2160 17C8                           l2320 0A6E                           l2304 0910  
                         l2312 0A02                           l2242 0F4A                           l2234 0EDC  
                         l2226 0E82                           l2218 0E42                           l2146 1314  
                         l2154 17A6                           l2162 18A8                           l2330 0AB4  
                         l2314 0A1C                           l2322 0A7C                           l2306 0992  
                         l2410 1598                           l2402 1532                           l2180 0CEC  
                         l2172 0CB6                           l2236 0EEA                           l2244 0F50  
                         l2228 0EA2                           l2148 1332                           l2156 17B2  
                         l2164 18B4                           l2260 13EC                           l2252 13B0  
                         l2332 0AC0                           l2324 0A8E                           l2316 0A3A  
                         l2308 0998                           l2340 0B02                           l2412 15AA  
                         l2404 153E                           l2420 166C                           l2190 0D48  
                         l2182 0CFA                           l2174 0CBA                           l2246 0F60  
                         l2238 0F18                           l2158 17C4                           l2166 18B8  
                         l2270 1458                           l2262 1400                           l2254 13BE  
                         l2334 0AC8                           l2326 0A9C                           l2318 0A54  
                         l2350 0B6E                           l2342 0B26                           l2406 1562  
                         l2422 1684                           l2414 163A                           l2192 0D50  
                         l2184 0D1A                           l2176 0CC8                           l2248 0F80  
                         l2168 18D0                           l2264 1414                           l2256 13D2  
                         l2328 0AA2                           l2336 0AD8                           l2280 0844  
                         l2360 0C36                           l2352 0B92                           l2344 0B34  
                         l2408 1574                           l2416 1640                           l1810 117E  
                         l1802 10F2                           l2194 0D64                           l2186 0D1E  
                         l2178 0CE8                           l2274 182C                           l2266 1418  
                         l2258 13E0                           l2290 08B6                           l2282 086C  
                         l2370 0C72                           l2362 0C44                           l2354 0BDA  
                         l2346 0B46                           l2418 1644                           l1820 1206  
                         l1812 1184                           l1804 10F6                           l1900 14AA  
                         l2460 125C                           l2196 0D72                           l2188 0D2A  
                         l2276 1846                           l2268 1444                           l2292 08D2  
                         l2284 088C                           l2364 0C58                           l2348 0B4A  
                         l1822 1208                           l1814 11F6                           l1806 1174  
                         l1910 14B8                           l1902 14B0                           l1830 1040  
                         l2198 0D84                           l2294 08E4                           l2286 089A  
                         l2278 0824                           l2358 0C12                           l2374 0C7E  
                         l2382 16AA                           l2390 170C                           l1816 11FE  
                         l1808 117C                           l1920 14FE                           l1912 14BA  
                         l1904 14B2                           l1840 10D0                           l1832 1042  
                         l1824 0FA4                           l2296 08F2                           l2288 089C  
                         l2376 0CA2                           l2368 0C64                           l2384 16B2  
                         l2392 171E                           l1818 1200                           l1930 1518  
                         l1922 1500                           l1914 14CC                           l1906 14B4  
                         l1842 10D6                           l1834 1048                           l1826 0FA8  
                         l2298 08F8                           l2386 16C0                           l2394 1726  
                         l1940 1524                           l1932 1518                           l1924 1502  
                         l1916 14F6                           l1908 14B6                           l1844 10D8  
                         l1836 10C6                           l1828 1038                           l2388 16E6  
                         l2396 172E                           l1942 1524                           l1934 1518  
                         l1926 1504                           l1918 14FC                           l1846 10DE  
                         l1838 10CE                           l1950 1220                           l2398 174A  
                         l1944 152A                           l1936 151E                           l1928 1506  
                         l1952 122A                           l1960 1248                           l1946 152A  
                         l1938 151E                           l1890 1472                           l1954 1234  
                         l1962 1282                           l1892 147E                           l1964 128C  
                         l1956 123E                           l1948 121C                           l1990 1790  
                         l1982 1760                           l1894 148E                           l1966 12B0  
                         ?_pad 0015                           l1992 1798                           l1984 1770  
                         l1968 12B4                           l1994 17A0                           l1986 177C  
                         l1996 17A2                           l1988 178C                           l1998 186E  
                         ?_isr 0001                           STR_1 0801                           STR_2 081D  
                         STR_3 080D                           STR_4 0815                           u1300 14DE  
                         u1301 14DA                           u1205 0FB0                           u1310 12AC  
                         u1215 0FD4                           u2007 1678                           u1320 12D4  
                         u1225 0FFA                           u2017 1886                           u1330 12E4  
                         u2107 10E4                           u1235 101E                           u1331 12E0  
                         u2027 15D0                           u1500 1368                           u2117 1484  
                         u1245 1052                           u1317 12A2                           u2037 160C  
                         u1501 1364                           u1350 1770                           u1510 17E8  
                         u1351 176C                           u2207 120E                           u1175 10FE  
                         u2127 14AC                           u1255 1096                           u1327 12CA  
                         u2047 162A                           u1511 17E4                           u1360 189E  
                         u1600 0E50                           u1520 18D0                           u1185 1118  
                         u2137 14C2                           u2057 103A                           u1361 189A  
                         u1601 0E4C                           u1521 18CC                           u1530 0CC8  
                         u1610 0E82                           u1195 113E                           u2147 14F8  
                         u2067 1044                           u1531 0CC4                           u1611 0E7E  
                         u1540 0CFA                           u1620 0EC0                           u1700 1846  
                         u2157 150E                           u2077 10C8                           u1541 0CF6  
                         u1621 0EBC                           u1701 1842                           u1630 0EEA  
                         u1470 12F8                           u1710 0854                           u2167 1176  
                         u2087 10D2                           u1551 0D24                           u1631 0EE6  
                         u1471 12F4                           u1711 084E                           u1560 0D48  
                         u1640 0F18                           u1480 130A                           u1800 0A54  
                         u1720 0856                           u2177 1180                           u2097 10DA  
                         u1561 0D44                           u1641 0F14                           u1481 1306  
                         u1801 0A50                           u1570 0D72                           u1650 0F60  
                         u1490 1332                           u1810 0A6E                           u1730 086C  
                         u2187 11F8                           u1571 0D6E                           u1651 0F5C  
                         u1491 132E                           u1811 0A6A                           u1731 0868  
                         u1580 0DB2                           u1660 13BE                           u1820 0A7C  
                         u1740 089A                           u1900 1702                           u2197 1202  
                         u1581 0DAE                           u1661 13BA                           u1821 0A78  
                         u1741 0896                           u1901 16FE                           u1590 0DFC  
                         u1670 13E0                           u1830 0A8E                           u1750 08B6  
                         u1591 0DF8                           u1671 13DC                           u1831 0A8A  
                         u1751 08B2                           u1911 1538                           u1680 1436  
                         u1840 0A9C                           u1760 08E4                           u1920 1658  
                         u1681 1432                           u1841 0A98                           u1761 08E0  
                         u1921 164E                           u1690 1444                           u1850 0AB4  
                         u1770 08F2                           u1691 1440                           u1851 0AB0  
                         u1771 08EE                           u1780 0A1C                           u1860 0B26  
                         u1781 0A18                           u1861 0B22                           u1790 0A3A  
                         u1870 0B6E                           u1791 0A36                           u1871 0B6A  
                         u1880 0B92                           u1881 0B8E                           u1890 0C36  
                         u1938 165C                           u1891 0C32                           u1948 168E  
                         u1949 16A2                           i1l56 008A                           _TMR2 000FCC  
                         _TMR3 000FB2                           abs@a 0017                           _dbuf 0074  
                         _main 163A                           _dtoa 0824                           _prec 0056  
                         _nout 0070                           pad@i 001C                           pad@p 0019  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf1 000FE7  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005A                           start 009A  
 __end_of_appStateRecolectData 15B6                __end_of_Lcd_Cmd 121A                __end_of_Lcd_Out 12E6  
                 ___param_bank 000000                     _Lcd_Chr_CP 0FA2           __size_of_appLCD_Init 0084  
                        ??_abs 0019                          ??_pad 001B                          ??_isr 0001  
              __end_of___aodiv 0E3E                          ?_main 0001                          ?_dtoa 0020  
              __end_of___aomod 0FA2                __end_of_adcInit 17A6                          _ADRES 000FC3  
      __end_of_appStateInitial 1924                   vfpfcnvrt@fmt 0046                          _PORTB 000F81  
              __end_of_appInit 18F6                          _datos 00BC                          _flags 0058  
                        _fputc 12E6                          _fputs 17A6                          pad@fp 0015  
                        _width 0072                          _putch 1924                          dtoa@d 0022  
                        dtoa@i 0042                          dtoa@n 003A                          dtoa@p 0034  
                        dtoa@s 0038                          dtoa@w 0036                          pclath 000FFA  
                        tablat 000FF5                          ttemp5 005B                          ttemp6 005E  
                        ttemp7 0062                          status 000FD8                          wtemp8 005B  
              __end_of_sprintf 175E           __end_of_appTimerInit 190A               __end_of_Lcd_Init 1532  
              __initialization 17EA                   __end_of_main 16AA                   __end_of_dtoa 0B02  
                       ??_main 00BA                         ??_dtoa 002A                  __activetblptr 000002  
                       ?_fputc 0005                         ?_fputs 000E          __size_of_appISRConfig 0008  
                       ?_putch 0001                         i1l2430 0044                         i1l2432 0048  
                       i1l2424 0026                         i1l2434 005A                         i1l2426 0034  
                       i1l2436 005E                         i1l2428 0042                         i1l2438 0080  
                    ??_Lcd_Cmd 0005                         _TMR3IE 007D01                         _TMR3IF 007D09  
                    ??_Lcd_Out 000B                   vfprintf@cfmt 0054                    ?_Lcd_Chr_CP 0001  
                    ??___aodiv 0015                      ??___aomod 0015                      ??_adcInit 0005  
                       clear_0 1810                      ??_appInit 0011                         pad@buf 0017  
                       dtoa@fp 0020                         _strlen 18A8                   _appISRConfig 1916  
                       fputc@c 0005               ?_appStateInitial 0001                         fputs@c 0012  
                       fputs@i 0013                         fputs@s 000E                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         _appStateRecolectData 1532              adcGetValue@PinADC 0008                         putch@c 0001  
             __end_of_vfprintf 170C                      ??_sprintf 0056                     __accesstop 0060  
      __end_of__initialization 181E          __end_of_appTimerStart 1916                  ___rparam_used 000001  
               __pcstackCOMRAM 0001                   __pidataBANK0 191E                  __end_of_fputc 13B0  
                __end_of_fputs 17EA                  __end_of_putch 1926                  ??_adcGetValue 0007  
        ?_appStateRecolectData 0001                      ?_Lcd_Init 0001                        ??_fputc 0009  
                      ??_fputs 0012            __size_of_Lcd_Chr_CP 014E                        ??_putch 0005  
        __size_of_appTimerInit 0014                     __pbssBANK0 0060                        ?_strlen 0005  
                 _appTimerInit 18F6             __size_of_vfpfcnvrt 01B4                     ??_Lcd_Init 0008  
          __end_of_adcGetValue 18A8                        _Lcd_Cmd 10F0                        _Lcd_Out 121A  
                ??_appLCD_Init 000F                        __Hparam 0000                        __Lparam 0000  
                      ___aodiv 0CB6                        ___aomod 0E3E                        _adcInit 175E  
                    ?_vfprintf 0094                   __psmallconst 0800                        __pcinit 17EA  
                      _appInit 18DE                        __ramtop 0800                        __ptext0 163A  
                      __ptext1 1922                        __ptext2 1532                        __ptext3 170C  
                      __ptext4 16AA                        __ptext5 0B02                        __ptext6 0824  
                      __ptext7 13B0                        __ptext8 18A8                        __ptext9 17A6  
              __size_of_strlen 0036                      _T2CONbits 000FCA                   __size_of_abs 0040  
                 __size_of_pad 00C2         ??_appStateRecolectData 0056                   __size_of_isr 0082  
                    _T3CONbits 000FB1                        _sprintf 170C           end_of_initialization 181E  
                      fputc@fp 0007                  __Lmediumconst 0000                        fputs@fp 0010  
            __end_of_vfpfcnvrt 0CB6                      Lcd_Init@i 0009                   ??_Lcd_Chr_CP 0005  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 0054  
          __end_of_appLCD_Init 163A                        strlen@a 0007                        strlen@s 0005  
                    _PORTBbits 000F81                    _adcGetValue 186C                      _TRISBbits 000F93  
                    _TRISDbits 000F95             __end_of_Lcd_Chr_CP 10F0                    vfpfcnvrt@ap 0048  
                  vfpfcnvrt@fp 0044                    vfpfcnvrt@ll 004C                 __end_of_strlen 18DE  
          start_initialization 17EA                    __end_of_abs 186C                    __end_of_pad 1472  
                  __end_of_isr 009A                  Lcd_Out@buffer 0009       __size_of_appStateInitial 0002  
            __size_of_Lcd_Init 00C0             fp__appStateInitial 009A                    _appLCD_Init 15B6  
                  vfprintf@fmt 0096                    __pdataBANK0 00BC                       ??_strlen 0007  
       __size_of_appTimerStart 000C                    __pbssCOMRAM 0056                  __pcstackBANK0 0094  
             ___aodiv@dividend 0005        fp__appStateRecolectData 009A                       ?_Lcd_Cmd 0001  
                     ?_Lcd_Out 0008                      _dtoa$1522 0032                       ?___aodiv 0005  
                     ?___aomod 0005                       ?_adcInit 0001               ___aodiv@quotient 0017  
                  __pintcodelo 0018                       ?_appInit 0001              __size_of_vfprintf 0062  
                  __smallconst 0800                       ?_sprintf 009A                 __size_of_fputc 00CA  
               __size_of_fputs 0044                 __size_of_putch 0002                       _LATBbits 000F8A  
                     _LATDbits 000F8C                  _appTimerStart 190A    appStateRecolectData@dataOut 00AA  
                     _IPR2bits 000FA2                       _PIE2bits 000FA0              ??_appStateInitial 0005  
                     i1u195_20 0034                       i1u195_21 0030                       i1u196_20 0042  
                     i1u196_21 003E                       i1u197_20 005A                       i1u197_21 0056  
                     i1u198_20 0070                       i1u198_21 0068                       i1u199_28 0072  
                     _PIR1bits 000F9E                       _PIR2bits 000FA1                       _GO_nDONE 007E11  
                     _RCONbits 000FD0                       Lcd_Out@x 0008                       Lcd_Out@y 000D  
                    _vfpfcnvrt 0B02                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0                  ?_appISRConfig 0001                   ?_adcGetValue 0005  
__size_of_appStateRecolectData 0084                       _Lcd_Init 1472                      copy_data0 17FE  
               ?_appTimerStart 0001               __size_of_Lcd_Cmd 012A               __size_of_Lcd_Out 00CC  
                     __Hrparam 0000                     vfprintf@ap 0098                       __Lrparam 0000  
                   vfprintf@fp 0094               __size_of___aodiv 0188               __size_of___aomod 0164  
             __size_of_adcInit 0048                     ?_vfpfcnvrt 0044                ___aodiv@divisor 000D  
               ??_appISRConfig 0005                ___aodiv@counter 0015               __size_of_appInit 0018  
                   sprintf@fmt 009C                 Lcd_Chr_CP@data 0007                       __ptext10 12E6  
                     __ptext11 1924                       __ptext20 121A                       __ptext12 182C  
                     __ptext21 0FA2                       __ptext13 0E3E                       __ptext22 1472  
                     __ptext14 0CB6                       __ptext23 10F0                       __ptext15 186C  
                     __ptext24 1916                       __ptext16 18DE                       __ptext25 175E  
                     __ptext17 190A                       __ptext18 18F6                       __ptext19 15B6  
             __size_of_sprintf 0052                    Lcd_Cmd@data 0007                  __size_of_main 0070  
                __size_of_dtoa 02DE                   ?_appLCD_Init 0001      appStateRecolectData@F3553 0060  
                     int$flags 005A                       _vfprintf 16AA               ___aomod@dividend 0005  
                ?_appTimerInit 0001                    Lcd_Out@data 000E                     _INTCONbits 000FF2  
                     intlevel1 0000                      sprintf@ap 00A2                ??_appTimerStart 0005  
              ___aomod@divisor 000D                    ??_vfpfcnvrt 004A                ___aomod@counter 0015  
               ??_appTimerInit 0005                       sprintf@f 00A4                       sprintf@s 009A  
         __size_of_adcGetValue 003C                _appStateInitial 1922                   ___aodiv@sign 0016  
         __end_of_appISRConfig 191E                   ___aomod@sign 0016  
